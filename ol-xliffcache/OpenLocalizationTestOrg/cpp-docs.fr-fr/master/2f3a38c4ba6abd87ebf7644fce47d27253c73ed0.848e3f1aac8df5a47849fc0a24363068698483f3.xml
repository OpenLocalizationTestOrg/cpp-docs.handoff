{"nodes":[{"pos":[12,49],"content":"CMDIChildWndEx Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CMDIChildWndEx Class | Microsoft Docs","pos":[0,37]}]},{"pos":[1197,1217],"content":"CMDIChildWndEx Class","linkify":"CMDIChildWndEx Class","nodes":[{"content":"CMDIChildWndEx Class","pos":[0,20]}]},{"content":"The <ph id=\"ph1\">`CMDIChildWndEx`</ph> class provides the functionality of a Windows multiple document interface (MDI) child window.","pos":[1218,1332],"source":"The `CMDIChildWndEx` class provides the functionality of a Windows multiple document interface (MDI) child window."},{"content":"It extends the functionality of <bpt id=\"p1\">[</bpt>CMDIChildWnd Class<ept id=\"p1\">](../../mfc/reference/cmdichildwnd-class.md)</ept>.","pos":[1333,1429],"source":" It extends the functionality of [CMDIChildWnd Class](../../mfc/reference/cmdichildwnd-class.md)."},{"content":"The framework requires this class when an MDI application uses certain MFC classes.","pos":[1430,1513]},{"pos":[1522,1528],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1597,1604],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[1614,1628],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1635,1639]},{"content":"Description","pos":[1640,1651]},{"pos":[1689,1768],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::ActivateTopLevelFrame<ept id=\"p1\">](#cmdichildwndex__activatetoplevelframe)</ept>","source":"[CMDIChildWndEx::ActivateTopLevelFrame](#cmdichildwndex__activatetoplevelframe)"},{"content":"Called internally by the framework to activate top level frame when the application should be activated from a taskbar tab.","pos":[1769,1892]},{"content":"This method is not used or implemented.","pos":[1927,1966]},{"pos":[1971,2022],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::AddPane<ept id=\"p1\">](#cmdichildwndex__addpane)</ept>","source":"[CMDIChildWndEx::AddPane](#cmdichildwndex__addpane)"},{"content":"Adds a pane.","pos":[2023,2035]},{"pos":[2040,2103],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::AddTabbedPane<ept id=\"p1\">](#cmdichildwndex__addtabbedpane)</ept>","source":"[CMDIChildWndEx::AddTabbedPane](#cmdichildwndex__addtabbedpane)"},{"content":"Adds a tabbed pane.","pos":[2104,2123]},{"pos":[2128,2203],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::AdjustDockingLayout<ept id=\"p1\">](#cmdichildwndex__adjustdockinglayout)</ept>","source":"[CMDIChildWndEx::AdjustDockingLayout](#cmdichildwndex__adjustdockinglayout)"},{"content":"Adjusts the docking layout.","pos":[2204,2231]},{"pos":[2236,2305],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::CanShowOnMDITabs<ept id=\"p1\">](#cmdichildwndex__canshowonmditabs)</ept>","source":"[CMDIChildWndEx::CanShowOnMDITabs](#cmdichildwndex__canshowonmditabs)"},{"pos":[2311,2388],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::CanShowOnTaskBarTabs<ept id=\"p1\">](#cmdichildwndex__canshowontaskbartabs)</ept>","source":"[CMDIChildWndEx::CanShowOnTaskBarTabs](#cmdichildwndex__canshowontaskbartabs)"},{"content":"Tells the framework whether this MDI child can be displayed on Windows 7 taskbar tabs.","pos":[2389,2475]},{"pos":[2480,2557],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::CanShowOnWindowsList<ept id=\"p1\">](#cmdichildwndex__canshowonwindowslist)</ept>","source":"[CMDIChildWndEx::CanShowOnWindowsList](#cmdichildwndex__canshowonwindowslist)"},{"content":"Returns <ph id=\"ph1\">`TRUE`</ph> if the MDI child window name can be displayed in the <bpt id=\"p1\">[</bpt>CMFCWindowsManagerDialog Class<ept id=\"p1\">](../../mfc/reference/cmfcwindowsmanagerdialog-class.md)</ept> dialog box.","pos":[2558,2725],"source":"Returns `TRUE` if the MDI child window name can be displayed in the [CMFCWindowsManagerDialog Class](../../mfc/reference/cmfcwindowsmanagerdialog-class.md) dialog box."},{"content":"Otherwise returns <ph id=\"ph1\">`FALSE`</ph>.","pos":[2726,2752],"source":" Otherwise returns `FALSE`."},{"content":"Called by the framework to create a dynamic instance of this class type.","pos":[2788,2860]},{"pos":[2865,2918],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::DockPane<ept id=\"p1\">](#cmdichildwndex__dockpane)</ept>","source":"[CMDIChildWndEx::DockPane](#cmdichildwndex__dockpane)"},{"content":"Docks a pane.","pos":[2919,2932]},{"pos":[2937,3002],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::DockPaneLeftOf<ept id=\"p1\">](#cmdichildwndex__dockpaneleftof)</ept>","source":"[CMDIChildWndEx::DockPaneLeftOf](#cmdichildwndex__dockpaneleftof)"},{"content":"Docks one pane to the left of another pane.","pos":[3003,3046]},{"pos":[3051,3126],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::EnableAutoHidePanes<ept id=\"p1\">](#cmdichildwndex__enableautohidepanes)</ept>","source":"[CMDIChildWndEx::EnableAutoHidePanes](#cmdichildwndex__enableautohidepanes)"},{"content":"Enables auto-hide mode for panes when they are docked at the specified sides of the window.","pos":[3127,3218]},{"pos":[3223,3286],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::EnableDocking<ept id=\"p1\">](#cmdichildwndex__enabledocking)</ept>","source":"[CMDIChildWndEx::EnableDocking](#cmdichildwndex__enabledocking)"},{"content":"Enables docking of the child window to the main frame.","pos":[3287,3341]},{"pos":[3346,3443],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::EnableTaskbarThumbnailClipRect<ept id=\"p1\">](#cmdichildwndex__enabletaskbarthumbnailcliprect)</ept>","source":"[CMDIChildWndEx::EnableTaskbarThumbnailClipRect](#cmdichildwndex__enabletaskbarthumbnailcliprect)"},{"content":"Enables or disables automatic selection of a portion of a window's client area to display  as that window's thumbnail in the taskbar.","pos":[3444,3577]},{"pos":[3582,3653],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::GetDockingManager<ept id=\"p1\">](#cmdichildwndex__getdockingmanager)</ept>","source":"[CMDIChildWndEx::GetDockingManager](#cmdichildwndex__getdockingmanager)"},{"pos":[3659,3726],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::GetDocumentName<ept id=\"p1\">](#cmdichildwndex__getdocumentname)</ept>","source":"[CMDIChildWndEx::GetDocumentName](#cmdichildwndex__getdocumentname)"},{"content":"Returns the name of the document that is displayed in the MDI child window.","pos":[3727,3802]},{"pos":[3807,3868],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::GetFrameIcon<ept id=\"p1\">](#cmdichildwndex__getframeicon)</ept>","source":"[CMDIChildWndEx::GetFrameIcon](#cmdichildwndex__getframeicon)"},{"content":"Called by the framework to retrieve the MDI child window icon.","pos":[3869,3931]},{"pos":[3936,3997],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::GetFrameText<ept id=\"p1\">](#cmdichildwndex__getframetext)</ept>","source":"[CMDIChildWndEx::GetFrameText](#cmdichildwndex__getframetext)"},{"content":"Called by the framework to retrieve the text for the MDI child window.","pos":[3998,4068]},{"pos":[4073,4124],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::GetPane<ept id=\"p1\">](#cmdichildwndex__getpane)</ept>","source":"[CMDIChildWndEx::GetPane](#cmdichildwndex__getpane)"},{"content":"Finds a pane by the specified control ID.","pos":[4125,4166]},{"pos":[4171,4244],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::GetRelatedTabGroup<ept id=\"p1\">](#cmdichildwndex__getrelatedtabgroup)</ept>","source":"[CMDIChildWndEx::GetRelatedTabGroup](#cmdichildwndex__getrelatedtabgroup)"},{"pos":[4250,4313],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::GetTabbedPane<ept id=\"p1\">](#cmdichildwndex__gettabbedpane)</ept>","source":"[CMDIChildWndEx::GetTabbedPane](#cmdichildwndex__gettabbedpane)"},{"content":"Returns a pointer to an embedded docking pane that was converted to a tabbed document.","pos":[4314,4400]},{"pos":[4405,4470],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::GetTabProxyWnd<ept id=\"p1\">](#cmdichildwndex__gettabproxywnd)</ept>","source":"[CMDIChildWndEx::GetTabProxyWnd](#cmdichildwndex__gettabproxywnd)"},{"content":"Returns tab proxy window actually registered with Windows 7 taskbar tabs.","pos":[4471,4544]},{"pos":[4549,4626],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::GetTaskbarPreviewWnd<ept id=\"p1\">](#cmdichildwndex__gettaskbarpreviewwnd)</ept>","source":"[CMDIChildWndEx::GetTaskbarPreviewWnd](#cmdichildwndex__gettaskbarpreviewwnd)"},{"content":"Called by the framework when it needs to obtain a child window (usually a view or splitter window) to be displayed on Windows 7 taskbar tab thumbnail.","pos":[4627,4777]},{"pos":[4782,4873],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::GetTaskbarThumbnailClipRect<ept id=\"p1\">](#cmdichildwndex__gettaskbarthumbnailcliprect)</ept>","source":"[CMDIChildWndEx::GetTaskbarThumbnailClipRect](#cmdichildwndex__gettaskbarthumbnailcliprect)"},{"content":"Called by the framework when it needs to select a portion of a window's client area to display  as that window's thumbnail in the taskbar.","pos":[4874,5012]},{"pos":[5048,5210],"content":"Called by the framework to obtain a pointer to the <bpt id=\"p1\">[</bpt>CRuntimeClass<ept id=\"p1\">](../../mfc/reference/cruntimeclass-structure.md)</ept> object that is associated with this class type.","source":"Called by the framework to obtain a pointer to the [CRuntimeClass](../../mfc/reference/cruntimeclass-structure.md) object that is associated with this class type."},{"pos":[5215,5306],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::GetToolbarButtonToolTipText<ept id=\"p1\">](#cmdichildwndex__gettoolbarbuttontooltiptext)</ept>","source":"[CMDIChildWndEx::GetToolbarButtonToolTipText](#cmdichildwndex__gettoolbarbuttontooltiptext)"},{"content":"Called by the framework to retrieve a tooltip for a toolbar button.","pos":[5307,5374]},{"pos":[5379,5436],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::InsertPane<ept id=\"p1\">](#cmdichildwndex__insertpane)</ept>","source":"[CMDIChildWndEx::InsertPane](#cmdichildwndex__insertpane)"},{"content":"Registers the specified pane with the docking manager.","pos":[5437,5491]},{"pos":[5496,5579],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::InvalidateIconicBitmaps<ept id=\"p1\">](#cmdichildwndex__invalidateiconicbitmaps)</ept>","source":"[CMDIChildWndEx::InvalidateIconicBitmaps](#cmdichildwndex__invalidateiconicbitmaps)"},{"content":"Invalidates iconic bitmap representation of MDI child.","pos":[5580,5634]},{"pos":[5639,5714],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::IsPointNearDockSite<ept id=\"p1\">](#cmdichildwndex__ispointneardocksite)</ept>","source":"[CMDIChildWndEx::IsPointNearDockSite](#cmdichildwndex__ispointneardocksite)"},{"content":"Determines whether a specified point is near the dock site.","pos":[5715,5774]},{"pos":[5779,5836],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::IsReadOnly<ept id=\"p1\">](#cmdichildwndex__isreadonly)</ept>","source":"[CMDIChildWndEx::IsReadOnly](#cmdichildwndex__isreadonly)"},{"content":"Returns <ph id=\"ph1\">`TRUE`</ph> if the document that is displayed in the child window is read-only.","pos":[5837,5919],"source":"Returns `TRUE` if the document that is displayed in the child window is read-only."},{"content":"Otherwise returns <ph id=\"ph1\">`FALSE`</ph>.","pos":[5920,5946],"source":" Otherwise returns `FALSE`."},{"pos":[5951,6042],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::IsRegisteredWithTaskbarTabs<ept id=\"p1\">](#cmdichildwndex__isregisteredwithtaskbartabs)</ept>","source":"[CMDIChildWndEx::IsRegisteredWithTaskbarTabs](#cmdichildwndex__isregisteredwithtaskbartabs)"},{"content":"Returns TRUE if MDI child was successfully registered with Windows 7 taskbar tabs.","pos":[6043,6125]},{"pos":[6130,6191],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::IsTabbedPane<ept id=\"p1\">](#cmdichildwndex__istabbedpane)</ept>","source":"[CMDIChildWndEx::IsTabbedPane](#cmdichildwndex__istabbedpane)"},{"content":"Returns <ph id=\"ph1\">`TRUE`</ph> if the MDI child window contains a docking pane.","pos":[6192,6255],"source":"Returns `TRUE` if the MDI child window contains a docking pane."},{"content":"Otherwise returns <ph id=\"ph1\">`FALSE`</ph>.","pos":[6256,6282],"source":" Otherwise returns `FALSE`."},{"pos":[6287,6378],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::IsTaskbarTabsSupportEnabled<ept id=\"p1\">](#cmdichildwndex__istaskbartabssupportenabled)</ept>","source":"[CMDIChildWndEx::IsTaskbarTabsSupportEnabled](#cmdichildwndex__istaskbartabssupportenabled)"},{"content":"Tells whether the MDI child can appear on Windows 7 taskbar tabs.","pos":[6379,6444]},{"pos":[6449,6552],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::IsTaskbarThumbnailClipRectEnabled<ept id=\"p1\">](#cmdichildwndex__istaskbarthumbnailcliprectenabled)</ept>","source":"[CMDIChildWndEx::IsTaskbarThumbnailClipRectEnabled](#cmdichildwndex__istaskbarthumbnailcliprectenabled)"},{"content":"Tells whether automatic selection of a portion of a window's client area to display  as that window's thumbnail in the taskbar is enabled or disabled.","pos":[6553,6703]},{"pos":[6708,6813],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::m_dwDefaultTaskbarTabPropertyFlags<ept id=\"p1\">](#cmdichildwndex__m_dwdefaulttaskbartabpropertyflags)</ept>","source":"[CMDIChildWndEx::m_dwDefaultTaskbarTabPropertyFlags](#cmdichildwndex__m_dwdefaulttaskbartabpropertyflags)"},{"content":"A combination of flags, which is passed by the framework to the SetTaskbarTabProperties method, when a tab (MDI child) is being registered with Windows 7 taskbar tabs.","pos":[6814,6981]},{"content":"The default combination is STPF_USEAPPTHUMBNAILWHENACTIVE &amp;#124; STPF_USEAPPPEEKWHENACTIVE.","pos":[6982,7073],"source":" The default combination is STPF_USEAPPTHUMBNAILWHENACTIVE &#124; STPF_USEAPPPEEKWHENACTIVE."},{"pos":[7078,7171],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::OnGetIconicLivePreviewBitmap<ept id=\"p1\">](#cmdichildwndex__ongeticoniclivepreviewbitmap)</ept>","source":"[CMDIChildWndEx::OnGetIconicLivePreviewBitmap](#cmdichildwndex__ongeticoniclivepreviewbitmap)"},{"content":"Called by the framework when it needs to obtain a bitmap for live preview of MDI child.","pos":[7172,7259]},{"pos":[7264,7341],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::OnGetIconicThumbnail<ept id=\"p1\">](#cmdichildwndex__ongeticonicthumbnail)</ept>","source":"[CMDIChildWndEx::OnGetIconicThumbnail](#cmdichildwndex__ongeticonicthumbnail)"},{"content":"Called by the framework when it needs to obtain a bitmap for iconic thumbnail of MDI child.","pos":[7342,7433]},{"pos":[7438,7505],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::OnMoveMiniFrame<ept id=\"p1\">](#cmdichildwndex__onmoveminiframe)</ept>","source":"[CMDIChildWndEx::OnMoveMiniFrame](#cmdichildwndex__onmoveminiframe)"},{"content":"Called by the framework to move a mini-frame window.","pos":[7506,7558]},{"pos":[7563,7666],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::OnPressTaskbarThmbnailCloseButton<ept id=\"p1\">](#cmdichildwndex__onpresstaskbarthmbnailclosebutton)</ept>","source":"[CMDIChildWndEx::OnPressTaskbarThmbnailCloseButton](#cmdichildwndex__onpresstaskbarthmbnailclosebutton)"},{"content":"Called by the framework when the user presses close button on Taskbar tab thumbnail..","pos":[7667,7752]},{"pos":[7757,7826],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::OnSetPreviewMode<ept id=\"p1\">](#cmdichildwndex__onsetpreviewmode)</ept>","source":"[CMDIChildWndEx::OnSetPreviewMode](#cmdichildwndex__onsetpreviewmode)"},{"content":"Called by the framework to enter or exit print preview mode.","pos":[7827,7887]},{"pos":[7892,7987],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::OnTaskbarTabThumbnailActivate<ept id=\"p1\">](#cmdichildwndex__ontaskbartabthumbnailactivate)</ept>","source":"[CMDIChildWndEx::OnTaskbarTabThumbnailActivate](#cmdichildwndex__ontaskbartabthumbnailactivate)"},{"content":"Called by the framework when the Taskbar tab thumbnail should process WM_ACTIVATE message.","pos":[7988,8078]},{"pos":[8083,8188],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::OnTaskbarTabThumbnailMouseActivate<ept id=\"p1\">](#cmdichildwndex__ontaskbartabthumbnailmouseactivate)</ept>","source":"[CMDIChildWndEx::OnTaskbarTabThumbnailMouseActivate](#cmdichildwndex__ontaskbartabthumbnailmouseactivate)"},{"content":"Called by the framework when the Taskbar tab thumbnail should process WM_MOUSEACTIVATE message.","pos":[8189,8284]},{"pos":[8289,8382],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::OnTaskbarTabThumbnailStretch<ept id=\"p1\">](#cmdichildwndex__ontaskbartabthumbnailstretch)</ept>","source":"[CMDIChildWndEx::OnTaskbarTabThumbnailStretch](#cmdichildwndex__ontaskbartabthumbnailstretch)"},{"content":"Called by the framework when it needs to stretch a bitmap for Windows 7 taskbar tab thumbnail preview of MDI child.","pos":[8383,8498]},{"pos":[8503,8576],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::OnUpdateFrameTitle<ept id=\"p1\">](#cmdichildwndex__onupdateframetitle)</ept>","source":"[CMDIChildWndEx::OnUpdateFrameTitle](#cmdichildwndex__onupdateframetitle)"},{"content":"Called by the framework to update the frame title.","pos":[8577,8627]},{"content":"(Overrides <ph id=\"ph1\">`CMDIChildWnd::OnUpdateFrameTitle`</ph>.)","pos":[8628,8675],"source":" (Overrides `CMDIChildWnd::OnUpdateFrameTitle`.)"},{"pos":[8680,8743],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::PaneFromPoint<ept id=\"p1\">](#cmdichildwndex__panefrompoint)</ept>","source":"[CMDIChildWndEx::PaneFromPoint](#cmdichildwndex__panefrompoint)"},{"content":"Returns the pane that contains the given point.","pos":[8744,8791]},{"content":"Used by class <bpt id=\"p1\">[</bpt>CWinApp<ept id=\"p1\">](../../mfc/reference/cwinapp-class.md)</ept> to translate window messages before they are dispatched to the <bpt id=\"p2\">[</bpt>TranslateMessage<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms644955)</ept> and <bpt id=\"p3\">[</bpt>DispatchMessage<ept id=\"p3\">](http://msdn.microsoft.com/library/windows/desktop/ms644934)</ept> Windows functions.","pos":[8834,9138],"source":"Used by class [CWinApp](../../mfc/reference/cwinapp-class.md) to translate window messages before they are dispatched to the [TranslateMessage](http://msdn.microsoft.com/library/windows/desktop/ms644955) and [DispatchMessage](http://msdn.microsoft.com/library/windows/desktop/ms644934) Windows functions."},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CWnd::PreTranslateMessage<ept id=\"p1\">](../../mfc/reference/cwnd-class.md#cwnd__pretranslatemessage)</ept>.)","pos":[9139,9240],"source":" (Overrides [CWnd::PreTranslateMessage](../../mfc/reference/cwnd-class.md#cwnd__pretranslatemessage).)"},{"pos":[9245,9306],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::RecalcLayout<ept id=\"p1\">](#cmdichildwndex__recalclayout)</ept>","source":"[CMDIChildWndEx::RecalcLayout](#cmdichildwndex__recalclayout)"},{"content":"Recalculates the layout of the window.","pos":[9307,9345]},{"pos":[9350,9423],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::RegisterTaskbarTab<ept id=\"p1\">](#cmdichildwndex__registertaskbartab)</ept>","source":"[CMDIChildWndEx::RegisterTaskbarTab](#cmdichildwndex__registertaskbartab)"},{"content":"Registers MDI child with Windows 7 taskbar tabs.","pos":[9424,9472]},{"pos":[9477,9564],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::RemovePaneFromDockManager<ept id=\"p1\">](#cmdichildwndex__removepanefromdockmanager)</ept>","source":"[CMDIChildWndEx::RemovePaneFromDockManager](#cmdichildwndex__removepanefromdockmanager)"},{"content":"Removes a pane from the docking manager.","pos":[9565,9605]},{"pos":[9610,9683],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::SetRelatedTabGroup<ept id=\"p1\">](#cmdichildwndex__setrelatedtabgroup)</ept>","source":"[CMDIChildWndEx::SetRelatedTabGroup](#cmdichildwndex__setrelatedtabgroup)"},{"pos":[9689,9764],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::SetTaskbarTabActive<ept id=\"p1\">](#cmdichildwndex__settaskbartabactive)</ept>","source":"[CMDIChildWndEx::SetTaskbarTabActive](#cmdichildwndex__settaskbartabactive)"},{"content":"Activates corresponding Windows 7 taskbar tab.","pos":[9765,9811]},{"pos":[9816,9889],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::SetTaskbarTabOrder<ept id=\"p1\">](#cmdichildwndex__settaskbartaborder)</ept>","source":"[CMDIChildWndEx::SetTaskbarTabOrder](#cmdichildwndex__settaskbartaborder)"},{"content":"Inserts MDI child before specified window on Windows 7 taskbar tabs.","pos":[9890,9958]},{"pos":[9963,10046],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::SetTaskbarTabProperties<ept id=\"p1\">](#cmdichildwndex__settaskbartabproperties)</ept>","source":"[CMDIChildWndEx::SetTaskbarTabProperties](#cmdichildwndex__settaskbartabproperties)"},{"content":"Sets properties for a Windows 7 taskbar tab.","pos":[10047,10091]},{"pos":[10096,10187],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::SetTaskbarThumbnailClipRect<ept id=\"p1\">](#cmdichildwndex__settaskbarthumbnailcliprect)</ept>","source":"[CMDIChildWndEx::SetTaskbarThumbnailClipRect](#cmdichildwndex__settaskbarthumbnailcliprect)"},{"content":"Called internally by the framework to set clipping rectangle to select a portion of a window's client area to display  as that window's thumbnail in the taskbar.","pos":[10188,10349]},{"pos":[10354,10407],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::ShowPane<ept id=\"p1\">](#cmdichildwndex__showpane)</ept>","source":"[CMDIChildWndEx::ShowPane](#cmdichildwndex__showpane)"},{"pos":[10413,10490],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::UnregisterTaskbarTab<ept id=\"p1\">](#cmdichildwndex__unregistertaskbartab)</ept>","source":"[CMDIChildWndEx::UnregisterTaskbarTab](#cmdichildwndex__unregistertaskbartab)"},{"content":"Removes MDI child from Windows 7 taskbar tabs.","pos":[10491,10537]},{"pos":[10542,10619],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx::UpdateTaskbarTabIcon<ept id=\"p1\">](#cmdichildwndex__updatetaskbartabicon)</ept>","source":"[CMDIChildWndEx::UpdateTaskbarTabIcon](#cmdichildwndex__updatetaskbartabicon)"},{"content":"Updates Windows 7 taskbar tab icon.","pos":[10620,10655]},{"pos":[10665,10672],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10676,10889],"content":"To take advantage of extended docking features in MDI applications, derive the MDI child window class of your application from <ph id=\"ph1\">`CMDIChildWndEx`</ph> instead of <bpt id=\"p1\">[</bpt>CMDIChildWnd<ept id=\"p1\">](../../mfc/reference/cmdichildwnd-class.md)</ept>.","source":"To take advantage of extended docking features in MDI applications, derive the MDI child window class of your application from `CMDIChildWndEx` instead of [CMDIChildWnd](../../mfc/reference/cmdichildwnd-class.md)."},{"pos":[10898,10905],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example derives a class from <ph id=\"ph1\">`CMDIChildWndEx`</ph>.","pos":[10909,10969],"source":"The following example derives a class from `CMDIChildWndEx`."},{"content":"This code snippet comes from the <bpt id=\"p1\">[</bpt>VisualStudioDemo Sample: MFC Visual Studio Application<ept id=\"p1\">](../../visual-cpp-samples.md)</ept>.","pos":[10970,11089],"source":" This code snippet comes from the [VisualStudioDemo Sample: MFC Visual Studio Application](../../visual-cpp-samples.md)."},{"pos":[11096,11187],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_VisualStudioDemo#3<ept id=\"p2\">](../../mfc/codesnippet/cpp/cmdichildwndex-class_1.h)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_VisualStudioDemo#3](../../mfc/codesnippet/cpp/cmdichildwndex-class_1.h)]"},{"pos":[11196,11217],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[11221,11268],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[11275,11328],"content":"<bpt id=\"p1\">[</bpt>CCmdTarget<ept id=\"p1\">](../../mfc/reference/ccmdtarget-class.md)</ept>","source":"[CCmdTarget](../../mfc/reference/ccmdtarget-class.md)"},{"pos":[11335,11376],"content":"<bpt id=\"p1\">[</bpt>CWnd<ept id=\"p1\">](../../mfc/reference/cwnd-class.md)</ept>","source":"[CWnd](../../mfc/reference/cwnd-class.md)"},{"pos":[11383,11434],"content":"<bpt id=\"p1\">[</bpt>CFrameWnd<ept id=\"p1\">](../../mfc/reference/cframewnd-class.md)</ept>","source":"[CFrameWnd](../../mfc/reference/cframewnd-class.md)"},{"pos":[11441,11498],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWnd<ept id=\"p1\">](../../mfc/reference/cmdichildwnd-class.md)</ept>","source":"[CMDIChildWnd](../../mfc/reference/cmdichildwnd-class.md)"},{"pos":[11505,11566],"content":"<bpt id=\"p1\">[</bpt>CMDIChildWndEx<ept id=\"p1\">](../../mfc/reference/cmdichildwndex-class.md)</ept>","source":"[CMDIChildWndEx](../../mfc/reference/cmdichildwndex-class.md)"},{"pos":[11575,11587],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[11591,11621],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxMDIChildWndEx.h","source":"**Header:** afxMDIChildWndEx.h"},{"pos":[11631,11694],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__addpane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::AddPane","linkify":"<a name=\"cmdichildwndex__addpane\"></a>  CMDIChildWndEx::AddPane","source":"<a name=\"cmdichildwndex__addpane\"></a>  CMDIChildWndEx::AddPane"},{"content":"Adds a pane.","pos":[11698,11710]},{"pos":[11803,11813],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pControlBar`</ph>","pos":[11817,11835],"source":"[in] `pControlBar`"},{"content":"A pointer to the pane.","pos":[11839,11861]},{"content":"[in] <ph id=\"ph1\">`bTail`</ph>","pos":[11868,11880],"source":"[in] `bTail`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to add the pane to the end of the list of panes for the docking manager; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","pos":[11883,11983],"source":" `TRUE` to add the pane to the end of the list of panes for the docking manager; otherwise, `FALSE`."},{"pos":[11993,12005],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[12009,12101],"content":"<ph id=\"ph1\">`TRUE`</ph> if the pane was successfully registered with the docking manager; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the pane was successfully registered with the docking manager; otherwise, `FALSE`."},{"pos":[12111,12186],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__addtabbedpane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::AddTabbedPane","linkify":"<a name=\"cmdichildwndex__addtabbedpane\"></a>  CMDIChildWndEx::AddTabbedPane","source":"<a name=\"cmdichildwndex__addtabbedpane\"></a>  CMDIChildWndEx::AddTabbedPane"},{"content":"Adds a tabbed pane.","pos":[12190,12209]},{"pos":[12282,12292],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pControlBar`</ph>","pos":[12296,12314],"source":"[in] `pControlBar`"},{"content":"A pointer to the pane.","pos":[12318,12340]},{"pos":[12350,12437],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__adjustdockinglayout\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::AdjustDockingLayout","linkify":"<a name=\"cmdichildwndex__adjustdockinglayout\"></a>  CMDIChildWndEx::AdjustDockingLayout","source":"<a name=\"cmdichildwndex__adjustdockinglayout\"></a>  CMDIChildWndEx::AdjustDockingLayout"},{"content":"Adjusts the docking layout.","pos":[12441,12468]},{"pos":[12545,12555],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`hdwp`</ph>","pos":[12559,12570],"source":"[in] `hdwp`"},{"content":"Handle to a deferred window position structure.","pos":[12574,12621]},{"pos":[12631,12712],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__canshowonmditabs\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::CanShowOnMDITabs","linkify":"<a name=\"cmdichildwndex__canshowonmditabs\"></a>  CMDIChildWndEx::CanShowOnMDITabs","source":"<a name=\"cmdichildwndex__canshowonmditabs\"></a>  CMDIChildWndEx::CanShowOnMDITabs"},{"pos":[12873,12885],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[12895,12902],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12912,13001],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__canshowonwindowslist\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::CanShowOnWindowsList","linkify":"<a name=\"cmdichildwndex__canshowonwindowslist\"></a>  CMDIChildWndEx::CanShowOnWindowsList","source":"<a name=\"cmdichildwndex__canshowonwindowslist\"></a>  CMDIChildWndEx::CanShowOnWindowsList"},{"pos":[13005,13172],"content":"Specifies whether the MDI child window name can be displayed in the <bpt id=\"p1\">[</bpt>CMFCWindowsManagerDialog Class<ept id=\"p1\">](../../mfc/reference/cmfcwindowsmanagerdialog-class.md)</ept> dialog box.","source":"Specifies whether the MDI child window name can be displayed in the [CMFCWindowsManagerDialog Class](../../mfc/reference/cmfcwindowsmanagerdialog-class.md) dialog box."},{"pos":[13234,13246],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[13250,13338],"content":"<ph id=\"ph1\">`TRUE`</ph> if the window can be displayed in the <bpt id=\"p1\">**</bpt>Windows<ept id=\"p1\">**</ept> dialog box; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the window can be displayed in the **Windows** dialog box; otherwise, `FALSE`."},{"pos":[13348,13355],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this method in a derived class and return <ph id=\"ph1\">`FALSE`</ph> if the window should not be displayed in the <bpt id=\"p1\">**</bpt>Windows<ept id=\"p1\">**</ept> dialog box.","pos":[13359,13486],"source":"Override this method in a derived class and return `FALSE` if the window should not be displayed in the **Windows** dialog box."},{"content":"This function is called from <ph id=\"ph1\">`CMFCWindowsManagerDialog`</ph>.","pos":[13487,13543],"source":" This function is called from `CMFCWindowsManagerDialog`."},{"pos":[13553,13618],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__dockpane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::DockPane","linkify":"<a name=\"cmdichildwndex__dockpane\"></a>  CMDIChildWndEx::DockPane","source":"<a name=\"cmdichildwndex__dockpane\"></a>  CMDIChildWndEx::DockPane"},{"content":"Docks a pane.","pos":[13622,13635]},{"pos":[13753,13763],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pBar`</ph>","pos":[13767,13778],"source":"[in] `pBar`"},{"content":"A pointer to the pane.","pos":[13782,13804]},{"content":"[in] <ph id=\"ph1\">`nDockBarID`</ph>","pos":[13811,13828],"source":"[in] `nDockBarID`"},{"content":"The ID of the pane.","pos":[13832,13851]},{"content":"[in] <ph id=\"ph1\">`lpRect`</ph>","pos":[13858,13871],"source":"[in] `lpRect`"},{"content":"A pointer to a rectangle.","pos":[13875,13900]},{"pos":[13910,13917],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[13921,13956],"content":"The <ph id=\"ph1\">`lpRect`</ph> parameter is not used.","source":"The `lpRect` parameter is not used."},{"pos":[13966,14043],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__dockpaneleftof\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::DockPaneLeftOf","linkify":"<a name=\"cmdichildwndex__dockpaneleftof\"></a>  CMDIChildWndEx::DockPaneLeftOf","source":"<a name=\"cmdichildwndex__dockpaneleftof\"></a>  CMDIChildWndEx::DockPaneLeftOf"},{"content":"Docks one pane to the left of another pane.","pos":[14047,14090]},{"pos":[14176,14186],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to the pane that is to be docked.","pos":[14200,14243]},{"content":"A pointer to the pane that serves as the point of reference.","pos":[14263,14323]},{"pos":[14333,14345],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[14349,14387],"content":"<ph id=\"ph1\">`TRUE`</ph> on success, <ph id=\"ph2\">`FALSE`</ph> on failure.","source":"`TRUE` on success, `FALSE` on failure."},{"pos":[14397,14404],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[14408,14520],"content":"This method takes the pane specified by <ph id=\"ph1\">`pBar`</ph> and docks it at the left side of the pane specified by <ph id=\"ph2\">`pLeftOf`</ph>.","source":"This method takes the pane specified by `pBar` and docks it at the left side of the pane specified by `pLeftOf`."},{"content":"Call this method when you want to dock several panes in predefined order.","pos":[14527,14600]},{"pos":[14610,14697],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__enableautohidepanes\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::EnableAutoHidePanes","linkify":"<a name=\"cmdichildwndex__enableautohidepanes\"></a>  CMDIChildWndEx::EnableAutoHidePanes","source":"<a name=\"cmdichildwndex__enableautohidepanes\"></a>  CMDIChildWndEx::EnableAutoHidePanes"},{"content":"Enables auto-hide mode for panes when they are docked at the specified sides of the window.","pos":[14701,14792]},{"pos":[14862,14872],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`dwDockStyle`</ph>","pos":[14876,14894],"source":"[in] `dwDockStyle`"},{"content":"Specifies the sides of the main frame window that is enabled.","pos":[14898,14959]},{"content":"Use one or more of the following flags.","pos":[14960,14999]},{"pos":[15111,15123],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15127,15176],"content":"<ph id=\"ph1\">`TRUE`</ph> if the method succeeds; otherwise <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the method succeeds; otherwise `FALSE`."},{"pos":[15186,15261],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__enabledocking\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::EnableDocking","linkify":"<a name=\"cmdichildwndex__enabledocking\"></a>  CMDIChildWndEx::EnableDocking","source":"<a name=\"cmdichildwndex__enabledocking\"></a>  CMDIChildWndEx::EnableDocking"},{"content":"Enables docking of the child window to the main frame.","pos":[15265,15319]},{"pos":[15383,15393],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`dwDockStyle`</ph>","pos":[15397,15415],"source":"[in] `dwDockStyle`"},{"content":"Specifies the docking alignment to enable.","pos":[15419,15461]},{"pos":[15471,15483],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15487,15536],"content":"<ph id=\"ph1\">`TRUE`</ph> if the method succeeds; otherwise <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the method succeeds; otherwise `FALSE`."},{"pos":[15546,15553],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Call this method to enable docking alignment to the main frame.","pos":[15557,15620]},{"content":"You can pass a combination of CBRS_ALIGN_ flags (for more information, see <bpt id=\"p1\">[</bpt>CControlBar::EnableDocking<ept id=\"p1\">](../../mfc/reference/ccontrolbar-class.md#ccontrolbar__enabledocking)</ept>).","pos":[15621,15795],"source":" You can pass a combination of CBRS_ALIGN_ flags (for more information, see [CControlBar::EnableDocking](../../mfc/reference/ccontrolbar-class.md#ccontrolbar__enabledocking))."},{"pos":[15805,15888],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__getdockingmanager\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::GetDockingManager","linkify":"<a name=\"cmdichildwndex__getdockingmanager\"></a>  CMDIChildWndEx::GetDockingManager","source":"<a name=\"cmdichildwndex__getdockingmanager\"></a>  CMDIChildWndEx::GetDockingManager"},{"pos":[16054,16066],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[16076,16083],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[16093,16172],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__getdocumentname\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::GetDocumentName","linkify":"<a name=\"cmdichildwndex__getdocumentname\"></a>  CMDIChildWndEx::GetDocumentName","source":"<a name=\"cmdichildwndex__getdocumentname\"></a>  CMDIChildWndEx::GetDocumentName"},{"content":"Returns the name of the document that is displayed in the MDI child window.","pos":[16176,16251]},{"pos":[16325,16337],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A pointer to a string that contains the name of a document.","pos":[16341,16400]},{"pos":[16410,16417],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A document is what the MDI child window displays.","pos":[16421,16470]},{"content":"Generally, the window displays data that is loaded from or saved to a file.","pos":[16471,16546]},{"content":"Therefore, the name of the document is the name of the file.","pos":[16547,16607]},{"content":"The default implementation of <ph id=\"ph1\">`GetDocumentName`</ph> returns a string obtained from <ph id=\"ph2\">`CDocument::GetPathName`</ph>.","pos":[16608,16712],"source":" The default implementation of `GetDocumentName` returns a string obtained from `CDocument::GetPathName`."},{"content":"If the window displays a document that is not loaded from a file, override this method in a derived class and return a unique document identifier.","pos":[16719,16865]},{"content":"<ph id=\"ph1\">`GetDocumentName`</ph> is called by the framework when it saves the state of all opened documents.","pos":[16872,16965],"source":"`GetDocumentName` is called by the framework when it saves the state of all opened documents."},{"content":"The returned string is written to the registry.","pos":[16966,17013]},{"content":"When the framework is restoring state later, the document name is read from the registry and passed to <bpt id=\"p1\">[</bpt>CMDIFrameWndEx::CreateDocumentWindow<ept id=\"p1\">](../../mfc/reference/cmdiframewndex-class.md#cmdiframewndex__createdocumentwindow)</ept>.","pos":[17020,17244],"source":"When the framework is restoring state later, the document name is read from the registry and passed to [CMDIFrameWndEx::CreateDocumentWindow](../../mfc/reference/cmdiframewndex-class.md#cmdiframewndex__createdocumentwindow)."},{"content":"Override this method in a <bpt id=\"p1\">[</bpt>CMDIFrameWndEx<ept id=\"p1\">](../../mfc/reference/cmdiframewndex-class.md)</ept>-derived class and create or open a document that has this name and read in the file that has this name.","pos":[17245,17436],"source":" Override this method in a [CMDIFrameWndEx](../../mfc/reference/cmdiframewndex-class.md)-derived class and create or open a document that has this name and read in the file that has this name."},{"content":"If the document is not based on a file, create the document based on the document identifier itself.","pos":[17437,17537]},{"content":"You should do the preceding actions only if you intend to save and restore documents.","pos":[17538,17623]},{"pos":[17633,17640],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example demonstrates the use of the <ph id=\"ph1\">`GetDocumentName`</ph> method.","pos":[17644,17719],"source":"The following example demonstrates the use of the `GetDocumentName` method."},{"content":"This code snippet comes from the <bpt id=\"p1\">[</bpt>VisualStudioDemo Sample: MFC Visual Studio Application<ept id=\"p1\">](../../visual-cpp-samples.md)</ept>.","pos":[17720,17839],"source":" This code snippet comes from the [VisualStudioDemo Sample: MFC Visual Studio Application](../../visual-cpp-samples.md)."},{"pos":[17846,17940],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_VisualStudioDemo#17<ept id=\"p2\">](../../mfc/codesnippet/cpp/cmdichildwndex-class_2.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_VisualStudioDemo#17](../../mfc/codesnippet/cpp/cmdichildwndex-class_2.cpp)]"},{"pos":[17950,18023],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__getframeicon\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::GetFrameIcon","linkify":"<a name=\"cmdichildwndex__getframeicon\"></a>  CMDIChildWndEx::GetFrameIcon","source":"<a name=\"cmdichildwndex__getframeicon\"></a>  CMDIChildWndEx::GetFrameIcon"},{"content":"Called by the framework to retrieve the icon of the MDI child window.","pos":[18027,18096]},{"pos":[18160,18172],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A handle to the window icon.","pos":[18176,18204]},{"pos":[18214,18221],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is called by the framework to determine what icon to display on the MDI tab that contains the MDI child frame window.","pos":[18225,18354]},{"content":"By default this method returns the window icon.","pos":[18361,18408]},{"content":"Override <ph id=\"ph1\">`GetFrameIcon`</ph> in a <ph id=\"ph2\">`CMDIChildWndEx`</ph>-derived class to customize this behavior.","pos":[18409,18496],"source":" Override `GetFrameIcon` in a `CMDIChildWndEx`-derived class to customize this behavior."},{"pos":[18506,18579],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__getframetext\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::GetFrameText","linkify":"<a name=\"cmdichildwndex__getframetext\"></a>  CMDIChildWndEx::GetFrameText","source":"<a name=\"cmdichildwndex__getframetext\"></a>  CMDIChildWndEx::GetFrameText"},{"content":"Called by the framework to retrieve the text for the MDI child window.","pos":[18583,18653]},{"pos":[18719,18731],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that contains the frame window text.","pos":[18735,18780]},{"pos":[18790,18797],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is called by the framework to determine what text to display on the MDI tab that contains the MDI child frame window.","pos":[18801,18930]},{"content":"By default this method returns the window text.","pos":[18937,18984]},{"content":"Override <ph id=\"ph1\">`GetFrameText`</ph> in a <ph id=\"ph2\">`CMDIChildWndEx`</ph>-derived class to customize this behavior.","pos":[18985,19072],"source":" Override `GetFrameText` in a `CMDIChildWndEx`-derived class to customize this behavior."},{"pos":[19082,19145],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__getpane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::GetPane","linkify":"<a name=\"cmdichildwndex__getpane\"></a>  CMDIChildWndEx::GetPane","source":"<a name=\"cmdichildwndex__getpane\"></a>  CMDIChildWndEx::GetPane"},{"content":"Finds a pane by the specified control ID.","pos":[19149,19190]},{"pos":[19245,19255],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nID`</ph>","pos":[19259,19269],"source":"[in] `nID`"},{"content":"The control ID of the pane to find.","pos":[19273,19308]},{"pos":[19318,19330],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[19334,19383],"content":"A pointer to the pane if found, otherwise <ph id=\"ph1\">`NULL`</ph>.","source":"A pointer to the pane if found, otherwise `NULL`."},{"pos":[19393,19478],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__getrelatedtabgroup\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::GetRelatedTabGroup","linkify":"<a name=\"cmdichildwndex__getrelatedtabgroup\"></a>  CMDIChildWndEx::GetRelatedTabGroup","source":"<a name=\"cmdichildwndex__getrelatedtabgroup\"></a>  CMDIChildWndEx::GetRelatedTabGroup"},{"pos":[19641,19653],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[19663,19670],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[19680,19755],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__gettabbedpane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::GetTabbedPane","linkify":"<a name=\"cmdichildwndex__gettabbedpane\"></a>  CMDIChildWndEx::GetTabbedPane","source":"<a name=\"cmdichildwndex__gettabbedpane\"></a>  CMDIChildWndEx::GetTabbedPane"},{"content":"Returns a pointer to a docking pane that is part of a group of MDI tabbed documents.","pos":[19759,19843]},{"pos":[19909,19921],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A pointer to a docking pane that is part of a group of MDI tabbed documents.","pos":[19925,20001]},{"pos":[20011,20114],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__gettoolbarbuttontooltiptext\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::GetToolbarButtonToolTipText","linkify":"<a name=\"cmdichildwndex__gettoolbarbuttontooltiptext\"></a>  CMDIChildWndEx::GetToolbarButtonToolTipText","source":"<a name=\"cmdichildwndex__gettoolbarbuttontooltiptext\"></a>  CMDIChildWndEx::GetToolbarButtonToolTipText"},{"content":"Called by the framework to retrieve a tooltip for a toolbar button.","pos":[20118,20185]},{"pos":[20292,20304],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"<ph id=\"ph1\">`TRUE`</ph> if the tooltip has been displayed.","pos":[20308,20349],"source":"`TRUE` if the tooltip has been displayed."},{"content":"The default implementation returns <ph id=\"ph1\">`FALSE`</ph>.","pos":[20350,20393],"source":" The default implementation returns `FALSE`."},{"pos":[20403,20410],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this method if you want to display custom tool tips for toolbar buttons.","pos":[20414,20495]},{"pos":[20505,20574],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__insertpane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::InsertPane","linkify":"<a name=\"cmdichildwndex__insertpane\"></a>  CMDIChildWndEx::InsertPane","source":"<a name=\"cmdichildwndex__insertpane\"></a>  CMDIChildWndEx::InsertPane"},{"content":"Registers the specified pane with the docking manager.","pos":[20578,20632]},{"pos":[20755,20765],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pControlBar`</ph>","pos":[20769,20787],"source":"[in] `pControlBar`"},{"content":"A pointer to the pane to insert.","pos":[20791,20823]},{"content":"[in] <ph id=\"ph1\">`pTarget`</ph>","pos":[20830,20844],"source":"[in] `pTarget`"},{"content":"A pointer to the adjacent pane.","pos":[20848,20879]},{"content":"[in] <ph id=\"ph1\">`bAfter`</ph>","pos":[20886,20899],"source":"[in] `bAfter`"},{"content":"If <ph id=\"ph1\">`TRUE`</ph>, <ph id=\"ph2\">`pControlBar`</ph> is inserted after <ph id=\"ph3\">`pTarget`</ph>.","pos":[20903,20956],"source":" If `TRUE`, `pControlBar` is inserted after `pTarget`."},{"content":"If <ph id=\"ph1\">`FALSE`</ph>, <ph id=\"ph2\">`pControlBar`</ph> is inserted before <ph id=\"ph3\">`pTarget`</ph>.","pos":[20957,21012],"source":" If `FALSE`, `pControlBar` is inserted before `pTarget`."},{"pos":[21022,21034],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[21038,21087],"content":"<ph id=\"ph1\">`TRUE`</ph> if the method succeeds, <ph id=\"ph2\">`FALSE`</ph> otherwise.","source":"`TRUE` if the method succeeds, `FALSE` otherwise."},{"pos":[21097,21184],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__ispointneardocksite\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::IsPointNearDockSite","linkify":"<a name=\"cmdichildwndex__ispointneardocksite\"></a>  CMDIChildWndEx::IsPointNearDockSite","source":"<a name=\"cmdichildwndex__ispointneardocksite\"></a>  CMDIChildWndEx::IsPointNearDockSite"},{"content":"Determines whether a specified point is near the dock site.","pos":[21188,21247]},{"pos":[21379,21389],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`point`</ph>","pos":[21393,21405],"source":"[in] `point`"},{"content":"The specified point.","pos":[21409,21429]},{"content":"[in] <ph id=\"ph1\">`dwBarAlignment`</ph>","pos":[21436,21457],"source":"[in] `dwBarAlignment`"},{"content":"Specifies which edge the point is near.","pos":[21461,21500]},{"content":"Possible values are <ph id=\"ph1\">`CBRS_ALIGN_LEFT`</ph>, <ph id=\"ph2\">`CBRS_ALIGN_RIGHT`</ph>, <ph id=\"ph3\">`CBRS_ALIGN_TOP`</ph>, and <ph id=\"ph4\">`CBRS_ALIGN_BOTTOM`</ph>","pos":[21501,21601],"source":" Possible values are `CBRS_ALIGN_LEFT`, `CBRS_ALIGN_RIGHT`, `CBRS_ALIGN_TOP`, and `CBRS_ALIGN_BOTTOM`"},{"content":"[in] <ph id=\"ph1\">`bOuterEdge`</ph>","pos":[21608,21625],"source":"[in] `bOuterEdge`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> if the point is near the outer border of the dock site; <ph id=\"ph2\">`FALSE`</ph> otherwise.","pos":[21628,21710],"source":" `TRUE` if the point is near the outer border of the dock site; `FALSE` otherwise."},{"pos":[21720,21732],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[21736,21797],"content":"<ph id=\"ph1\">`TRUE`</ph> if the point is near the dock site; otherwise <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the point is near the dock site; otherwise `FALSE`."},{"pos":[21807,21814],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The point is near the dock site when it is within the sensitivity set in the docking manager.","pos":[21818,21911]},{"content":"The default sensitivity is 15 pixels.","pos":[21912,21949]},{"pos":[21959,22028],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__isreadonly\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::IsReadOnly","linkify":"<a name=\"cmdichildwndex__isreadonly\"></a>  CMDIChildWndEx::IsReadOnly","source":"<a name=\"cmdichildwndex__isreadonly\"></a>  CMDIChildWndEx::IsReadOnly"},{"content":"Specifies whether the document that is displayed in the child window is read-only.","pos":[22032,22114]},{"pos":[22166,22178],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[22182,22237],"content":"<ph id=\"ph1\">`TRUE`</ph> if the document is read-only; otherwise <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the document is read-only; otherwise `FALSE`."},{"pos":[22247,22254],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function is used to prevent saving of read-only documents.","pos":[22258,22321]},{"pos":[22331,22338],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example demonstrates overriding the <ph id=\"ph1\">`IsReadOnly`</ph> method.","pos":[22342,22412],"source":"The following example demonstrates overriding the `IsReadOnly` method."},{"content":"This code snippet comes from the <bpt id=\"p1\">[</bpt>VisualStudioDemo Sample: MFC Visual Studio Application<ept id=\"p1\">](../../visual-cpp-samples.md)</ept>.","pos":[22413,22532],"source":" This code snippet comes from the [VisualStudioDemo Sample: MFC Visual Studio Application](../../visual-cpp-samples.md)."},{"pos":[22539,22632],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_VisualStudioDemo#2<ept id=\"p2\">](../../mfc/codesnippet/cpp/cmdichildwndex-class_3.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_VisualStudioDemo#2](../../mfc/codesnippet/cpp/cmdichildwndex-class_3.cpp)]"},{"pos":[22642,22715],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__istabbedpane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::IsTabbedPane","linkify":"<a name=\"cmdichildwndex__istabbedpane\"></a>  CMDIChildWndEx::IsTabbedPane","source":"<a name=\"cmdichildwndex__istabbedpane\"></a>  CMDIChildWndEx::IsTabbedPane"},{"content":"Specifies whether the MDI child window contains a docking pane.","pos":[22719,22782]},{"pos":[22837,22849],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[22853,22967],"content":"<ph id=\"ph1\">`TRUE`</ph> if the MDI child window contains a docking pane that was converted to a tabbed document; otherwise <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the MDI child window contains a docking pane that was converted to a tabbed document; otherwise `FALSE`."},{"pos":[22977,23056],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__onmoveminiframe\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::OnMoveMiniFrame","linkify":"<a name=\"cmdichildwndex__onmoveminiframe\"></a>  CMDIChildWndEx::OnMoveMiniFrame","source":"<a name=\"cmdichildwndex__onmoveminiframe\"></a>  CMDIChildWndEx::OnMoveMiniFrame"},{"content":"Called by the framework to move a mini-frame window.","pos":[23060,23112]},{"pos":[23181,23191],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pFrame`</ph>","pos":[23195,23208],"source":"[in] `pFrame`"},{"content":"A pointer to a mini-frame window.","pos":[23212,23245]},{"pos":[23255,23267],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[23271,23320],"content":"<ph id=\"ph1\">`TRUE`</ph> if the method succeeds, otherwise <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the method succeeds, otherwise `FALSE`."},{"pos":[23330,23411],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__onsetpreviewmode\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::OnSetPreviewMode","linkify":"<a name=\"cmdichildwndex__onsetpreviewmode\"></a>  CMDIChildWndEx::OnSetPreviewMode","source":"<a name=\"cmdichildwndex__onsetpreviewmode\"></a>  CMDIChildWndEx::OnSetPreviewMode"},{"content":"Called by the framework to enter or exit print preview mode.","pos":[23415,23475]},{"pos":[23585,23595],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bPreview`</ph>","pos":[23599,23614],"source":"[in] `bPreview`"},{"content":"If <ph id=\"ph1\">`TRUE`</ph>, enter print preview mode.","pos":[23618,23654],"source":" If `TRUE`, enter print preview mode."},{"content":"If <ph id=\"ph1\">`FALSE`</ph>, exit print preview mode.","pos":[23655,23691],"source":" If `FALSE`, exit print preview mode."},{"content":"[in] <ph id=\"ph1\">`pState`</ph>","pos":[23698,23711],"source":"[in] `pState`"},{"content":"A pointer to the print preview state structure.","pos":[23715,23762]},{"pos":[23772,23857],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__onupdateframetitle\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::OnUpdateFrameTitle","linkify":"<a name=\"cmdichildwndex__onupdateframetitle\"></a>  CMDIChildWndEx::OnUpdateFrameTitle","source":"<a name=\"cmdichildwndex__onupdateframetitle\"></a>  CMDIChildWndEx::OnUpdateFrameTitle"},{"content":"Called by the framework to update the frame title.","pos":[23861,23911]},{"pos":[23987,23997],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bAddToTitle`</ph>","pos":[24001,24019],"source":"[in] `bAddToTitle`"},{"content":"If <ph id=\"ph1\">`TRUE`</ph>, add the document name to the title.","pos":[24023,24069],"source":" If `TRUE`, add the document name to the title."},{"pos":[24079,24154],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__panefrompoint\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::PaneFromPoint","linkify":"<a name=\"cmdichildwndex__panefrompoint\"></a>  CMDIChildWndEx::PaneFromPoint","source":"<a name=\"cmdichildwndex__panefrompoint\"></a>  CMDIChildWndEx::PaneFromPoint"},{"content":"Returns the pane that contains the given point.","pos":[24158,24205]},{"pos":[24502,24512],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`point`</ph>","pos":[24516,24528],"source":"[in] `point`"},{"content":"Specifies the point, in screen coordinates, to check.","pos":[24532,24585]},{"content":"[in] <ph id=\"ph1\">`nSensitivity`</ph>","pos":[24592,24611],"source":"[in] `nSensitivity`"},{"content":"Increase the search area by this amount.","pos":[24615,24655]},{"content":"A pane satisfies the search criteria if the given point falls in the increased area.","pos":[24656,24740]},{"content":"[in] <ph id=\"ph1\">`bExactBar`</ph>","pos":[24747,24763],"source":"[in] `bExactBar`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to ignore the <ph id=\"ph2\">`nSensitivity`</ph> parameter; otherwise, <ph id=\"ph3\">`FALSE`</ph>.","pos":[24766,24833],"source":" `TRUE` to ignore the `nSensitivity` parameter; otherwise, `FALSE`."},{"content":"[in] <ph id=\"ph1\">`pRTCBarType`</ph>","pos":[24840,24858],"source":"[in] `pRTCBarType`"},{"content":"If not <ph id=\"ph1\">`NULL`</ph>, the method searches only panes of the specified type.","pos":[24862,24930],"source":" If not `NULL`, the method searches only panes of the specified type."},{"content":"[in] <ph id=\"ph1\">`dwAlignment`</ph>","pos":[24937,24955],"source":"[in] `dwAlignment`"},{"content":"If a pane is found at the specified point, this parameter contains the side of the pane that was closest to the specified point.","pos":[24959,25087]},{"content":"For more information, see the Remarks section.","pos":[25088,25134]},{"pos":[25144,25156],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[25160,25266],"content":"A pointer to the <ph id=\"ph1\">`CBasePane`</ph>-derived object that contains the given point, or <ph id=\"ph2\">`NULL`</ph> if no pane was found.","source":"A pointer to the `CBasePane`-derived object that contains the given point, or `NULL` if no pane was found."},{"pos":[25276,25283],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Call this method to determine whether a pane contains the specified point according to the specified conditions such as runtime class and visibility.","pos":[25287,25436]},{"content":"When the function returns and a pane was found, <ph id=\"ph1\">`dwAlignment`</ph> contains the alignment of the specified point.","pos":[25443,25551],"source":"When the function returns and a pane was found, `dwAlignment` contains the alignment of the specified point."},{"content":"For example, if the point was closest to the top of the pane, <ph id=\"ph1\">`dwAlignment`</ph> is set to <ph id=\"ph2\">`CBRS_ALIGN_TOP`</ph>.","pos":[25552,25655],"source":" For example, if the point was closest to the top of the pane, `dwAlignment` is set to `CBRS_ALIGN_TOP`."},{"pos":[25665,25738],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__recalclayout\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::RecalcLayout","linkify":"<a name=\"cmdichildwndex__recalclayout\"></a>  CMDIChildWndEx::RecalcLayout","source":"<a name=\"cmdichildwndex__recalclayout\"></a>  CMDIChildWndEx::RecalcLayout"},{"content":"Recalculates the layout of the window.","pos":[25742,25780]},{"pos":[25853,25863],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bNotify`</ph>","pos":[25867,25881],"source":"[in] `bNotify`"},{"content":"If <ph id=\"ph1\">`TRUE`</ph>, the active in-place item for the window receives notification of the layout change.","pos":[25885,25979],"source":" If `TRUE`, the active in-place item for the window receives notification of the layout change."},{"pos":[25989,26088],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__removepanefromdockmanager\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::RemovePaneFromDockManager","linkify":"<a name=\"cmdichildwndex__removepanefromdockmanager\"></a>  CMDIChildWndEx::RemovePaneFromDockManager","source":"<a name=\"cmdichildwndex__removepanefromdockmanager\"></a>  CMDIChildWndEx::RemovePaneFromDockManager"},{"content":"Removes a pane from the docking manager.","pos":[26092,26132]},{"pos":[26321,26331],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pControlBar`</ph>","pos":[26335,26353],"source":"[in] `pControlBar`"},{"content":"A pointer to the pane to remove.","pos":[26357,26389]},{"content":"[in] <ph id=\"ph1\">`bDestroy`</ph>","pos":[26396,26411],"source":"[in] `bDestroy`"},{"content":"If <ph id=\"ph1\">`TRUE`</ph>, the removed pane is destroyed.","pos":[26415,26456],"source":" If `TRUE`, the removed pane is destroyed."},{"content":"[in] <ph id=\"ph1\">`bAdjustLayout`</ph>","pos":[26463,26483],"source":"[in] `bAdjustLayout`"},{"content":"If <ph id=\"ph1\">`TRUE`</ph>, adjust the docking layout immediately.","pos":[26487,26536],"source":" If `TRUE`, adjust the docking layout immediately."},{"content":"[in] <ph id=\"ph1\">`bAutoHide`</ph>","pos":[26543,26559],"source":"[in] `bAutoHide`"},{"content":"If <ph id=\"ph1\">`TRUE`</ph>, the docking layout is related to the list of autohide bars.","pos":[26563,26633],"source":" If `TRUE`, the docking layout is related to the list of autohide bars."},{"content":"If <ph id=\"ph1\">`FALSE`</ph>, the docking layout is related to the list of regular panes.","pos":[26634,26705],"source":" If `FALSE`, the docking layout is related to the list of regular panes."},{"content":"[in] <ph id=\"ph1\">`pBarReplacement`</ph>","pos":[26712,26734],"source":"[in] `pBarReplacement`"},{"content":"A pointer to a pane that replaces the removed pane.","pos":[26738,26789]},{"pos":[26799,26884],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__setrelatedtabgroup\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::SetRelatedTabGroup","linkify":"<a name=\"cmdichildwndex__setrelatedtabgroup\"></a>  CMDIChildWndEx::SetRelatedTabGroup","source":"<a name=\"cmdichildwndex__setrelatedtabgroup\"></a>  CMDIChildWndEx::SetRelatedTabGroup"},{"pos":[27053,27063],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[27067,27075],"content":"[in] <ph id=\"ph1\">`p`</ph>","source":"[in] `p`"},{"pos":[27085,27092],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[27102,27167],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__showpane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::ShowPane","linkify":"<a name=\"cmdichildwndex__showpane\"></a>  CMDIChildWndEx::ShowPane","source":"<a name=\"cmdichildwndex__showpane\"></a>  CMDIChildWndEx::ShowPane"},{"pos":[27391,27401],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pBar`</ph>","pos":[27405,27416],"source":"[in] `pBar`"},{"content":"[in] <ph id=\"ph1\">`bShow`</ph>","pos":[27420,27432],"source":" [in] `bShow`"},{"content":"[in] <ph id=\"ph1\">`bDelay`</ph>","pos":[27436,27449],"source":" [in] `bDelay`"},{"content":"[in] <ph id=\"ph1\">`bActivate`</ph>","pos":[27453,27469],"source":" [in] `bActivate`"},{"pos":[27479,27486],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[27496,27585],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__updatetaskbartabicon\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::UpdateTaskbarTabIcon","linkify":"<a name=\"cmdichildwndex__updatetaskbartabicon\"></a>  CMDIChildWndEx::UpdateTaskbarTabIcon","source":"<a name=\"cmdichildwndex__updatetaskbartabicon\"></a>  CMDIChildWndEx::UpdateTaskbarTabIcon"},{"content":"Updates the Windows 7 taskbar tab icon.","pos":[27589,27628]},{"pos":[27701,27711],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A handle to an icon to display on the Windows 7 taskbar tab.","pos":[27726,27786]},{"pos":[27796,27803],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[27813,27902],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__unregistertaskbartab\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::UnregisterTaskbarTab","linkify":"<a name=\"cmdichildwndex__unregistertaskbartab\"></a>  CMDIChildWndEx::UnregisterTaskbarTab","source":"<a name=\"cmdichildwndex__unregistertaskbartab\"></a>  CMDIChildWndEx::UnregisterTaskbarTab"},{"content":"Removes the MDI child from Windows 7 taskbar tabs.","pos":[27906,27956]},{"pos":[28051,28061],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies whether this function needs to check the number of MDI children registered with MDI tabs.","pos":[28100,28199]},{"content":"If this number is 0, then this function removes the clipping rectangle from the application's taskbar thumbnail.","pos":[28200,28312]},{"pos":[28322,28329],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[28339,28442],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__settaskbarthumbnailcliprect\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::SetTaskbarThumbnailClipRect","linkify":"<a name=\"cmdichildwndex__settaskbarthumbnailcliprect\"></a>  CMDIChildWndEx::SetTaskbarThumbnailClipRect","source":"<a name=\"cmdichildwndex__settaskbarthumbnailcliprect\"></a>  CMDIChildWndEx::SetTaskbarThumbnailClipRect"},{"content":"Called by the framework to set the clipping rectangle to select a portion of a window's client area to display as that window's thumbnail in the taskbar.","pos":[28446,28599]},{"pos":[28678,28688],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies the new clipping rectangle.","pos":[28702,28739]},{"content":"If the rectangle is empty or null, the clipping is removed.","pos":[28740,28799]},{"pos":[28809,28821],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[28825,28865],"content":"<ph id=\"ph1\">`TRUE`</ph> if successful; otherwise <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if successful; otherwise `FALSE`."},{"pos":[28875,28882],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[28892,28987],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__settaskbartabproperties\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::SetTaskbarTabProperties","linkify":"<a name=\"cmdichildwndex__settaskbartabproperties\"></a>  CMDIChildWndEx::SetTaskbarTabProperties","source":"<a name=\"cmdichildwndex__settaskbartabproperties\"></a>  CMDIChildWndEx::SetTaskbarTabProperties"},{"content":"Sets properties for a Windows 7 taskbar tab.","pos":[28991,29035]},{"pos":[29105,29115],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A combination of STPFLAG values.","pos":[29132,29164]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>ITaskbarList4::SetTabProperties<ept id=\"p1\">](http://msdn.microsoft.com/library/dd562049\\(vs.85\\).aspx)</ept>.","pos":[29165,29283],"source":" For more information, see [ITaskbarList4::SetTabProperties](http://msdn.microsoft.com/library/dd562049\\(vs.85\\).aspx)."},{"pos":[29293,29300],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[29310,29395],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__settaskbartaborder\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::SetTaskbarTabOrder","linkify":"<a name=\"cmdichildwndex__settaskbartaborder\"></a>  CMDIChildWndEx::SetTaskbarTabOrder","source":"<a name=\"cmdichildwndex__settaskbartaborder\"></a>  CMDIChildWndEx::SetTaskbarTabOrder"},{"content":"Inserts the MDI child before the specified window on Windows 7 taskbar tabs.","pos":[29399,29475]},{"pos":[29560,29570],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to the MDI child window whose thumbnail is inserted to the left.","pos":[29590,29664]},{"content":"This window must already be registered through <ph id=\"ph1\">`RegisterTaskbarTab`</ph>.","pos":[29665,29733],"source":" This window must already be registered through `RegisterTaskbarTab`."},{"content":"If this value is <ph id=\"ph1\">`NULL`</ph>, the new thumbnail is added to the end of the list.","pos":[29734,29809],"source":" If this value is `NULL`, the new thumbnail is added to the end of the list."},{"pos":[29819,29826],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[29836,29923],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__settaskbartabactive\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::SetTaskbarTabActive","linkify":"<a name=\"cmdichildwndex__settaskbartabactive\"></a>  CMDIChildWndEx::SetTaskbarTabActive","source":"<a name=\"cmdichildwndex__settaskbartabactive\"></a>  CMDIChildWndEx::SetTaskbarTabActive"},{"content":"Activates the corresponding Windows 7 taskbar tab.","pos":[29927,29977]},{"pos":[30030,30037],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[30047,30132],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__registertaskbartab\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::RegisterTaskbarTab","linkify":"<a name=\"cmdichildwndex__registertaskbartab\"></a>  CMDIChildWndEx::RegisterTaskbarTab","source":"<a name=\"cmdichildwndex__registertaskbartab\"></a>  CMDIChildWndEx::RegisterTaskbarTab"},{"content":"Registers the MDI child with Windows 7 taskbar tabs.","pos":[30136,30188]},{"pos":[30281,30291],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to the MDI child window whose thumbnail is inserted to the left.","pos":[30311,30385]},{"content":"This window must already be registered through <ph id=\"ph1\">`RegisterTaskbarTab`</ph>.","pos":[30386,30454],"source":" This window must already be registered through `RegisterTaskbarTab`."},{"content":"If this value is <ph id=\"ph1\">`NULL`</ph>, the new thumbnail is added to the end of the list.","pos":[30455,30530],"source":" If this value is `NULL`, the new thumbnail is added to the end of the list."},{"pos":[30540,30547],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[30557,30662],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__ontaskbartabthumbnailstretch\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::OnTaskbarTabThumbnailStretch","linkify":"<a name=\"cmdichildwndex__ontaskbartabthumbnailstretch\"></a>  CMDIChildWndEx::OnTaskbarTabThumbnailStretch","source":"<a name=\"cmdichildwndex__ontaskbartabthumbnailstretch\"></a>  CMDIChildWndEx::OnTaskbarTabThumbnailStretch"},{"content":"Called by the framework when it needs to stretch a bitmap for a Windows 7 taskbar tab thumbnail preview of the MDI child.","pos":[30666,30787]},{"pos":[30956,30966],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A handle to a destination bitmap.","pos":[30983,31016]},{"content":"Specifies the destination rectangle.","pos":[31036,31072]},{"content":"A handle to a source bitmap.","pos":[31092,31120]},{"content":"Specifies the source rectangle.","pos":[31140,31171]},{"pos":[31181,31188],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[31192,31262],"content":"Requirementher or him him him him him him him <bpt id=\"p1\">**</bpt>:<ept id=\"p1\">**</ept> afxmdichildwndex.h","source":"Requirementher or him him him him him him him **:** afxmdichildwndex.h"},{"pos":[31272,31389],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__ontaskbartabthumbnailmouseactivate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::OnTaskbarTabThumbnailMouseActivate","linkify":"<a name=\"cmdichildwndex__ontaskbartabthumbnailmouseactivate\"></a>  CMDIChildWndEx::OnTaskbarTabThumbnailMouseActivate","source":"<a name=\"cmdichildwndex__ontaskbartabthumbnailmouseactivate\"></a>  CMDIChildWndEx::OnTaskbarTabThumbnailMouseActivate"},{"content":"Called by the framework when the Taskbar tab thumbnail should process the WM_MOUSEACTIVATE message.","pos":[31393,31492]},{"pos":[31630,31640],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies a pointer to the top-level parent window of the window being activated.","pos":[31661,31742]},{"content":"The pointer may be temporary and should not be stored.","pos":[31743,31797]},{"content":"Specifies the hit-test area code.","pos":[31818,31851]},{"content":"A hit test is a test that determines the location of the cursor.","pos":[31852,31916]},{"content":"Specifies the mouse message number.","pos":[31936,31971]},{"pos":[31981,31988],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The default implementation activates the related MDI child frame.","pos":[31992,32057]},{"pos":[32067,32174],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__ontaskbartabthumbnailactivate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::OnTaskbarTabThumbnailActivate","linkify":"<a name=\"cmdichildwndex__ontaskbartabthumbnailactivate\"></a>  CMDIChildWndEx::OnTaskbarTabThumbnailActivate","source":"<a name=\"cmdichildwndex__ontaskbartabthumbnailactivate\"></a>  CMDIChildWndEx::OnTaskbarTabThumbnailActivate"},{"content":"Called by the framework when the Taskbar tab thumbnail should process the WM_ACTIVATE message.","pos":[32178,32272]},{"pos":[32405,32415],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies whether the <ph id=\"ph1\">`CWnd`</ph> is being activated or deactivated.","pos":[32431,32494],"source":" Specifies whether the `CWnd` is being activated or deactivated."},{"content":"Pointer to the <ph id=\"ph1\">`CWnd`</ph> being activated or deactivated.","pos":[32516,32569],"source":" Pointer to the `CWnd` being activated or deactivated."},{"content":"The pointer can be <ph id=\"ph1\">`NULL`</ph>, and it may be temporary.","pos":[32570,32621],"source":" The pointer can be `NULL`, and it may be temporary."},{"content":"Specifies the minimized state of the <ph id=\"ph1\">`CWnd`</ph> being activated or deactivated.","pos":[32644,32719],"source":" Specifies the minimized state of the `CWnd` being activated or deactivated."},{"content":"A value of <ph id=\"ph1\">`TRUE`</ph> indicates the window is minimized.","pos":[32720,32772],"source":" A value of `TRUE` indicates the window is minimized."},{"pos":[32782,32789],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The default implementation activates the related MDI child frame.","pos":[32793,32858]},{"pos":[32868,32983],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__onpresstaskbarthmbnailclosebutton\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::OnPressTaskbarThmbnailCloseButton","linkify":"<a name=\"cmdichildwndex__onpresstaskbarthmbnailclosebutton\"></a>  CMDIChildWndEx::OnPressTaskbarThmbnailCloseButton","source":"<a name=\"cmdichildwndex__onpresstaskbarthmbnailclosebutton\"></a>  CMDIChildWndEx::OnPressTaskbarThmbnailCloseButton"},{"content":"Called by the framework when the user presses the close button on the Taskbar tab thumbnail.","pos":[32987,33079]},{"pos":[33154,33161],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[33171,33260],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__ongeticonicthumbnail\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::OnGetIconicThumbnail","linkify":"<a name=\"cmdichildwndex__ongeticonicthumbnail\"></a>  CMDIChildWndEx::OnGetIconicThumbnail","source":"<a name=\"cmdichildwndex__ongeticonicthumbnail\"></a>  CMDIChildWndEx::OnGetIconicThumbnail"},{"content":"Called by the framework when it needs to obtain a bitmap for the iconic thumbnail of the MDI child.","pos":[33264,33363]},{"pos":[33462,33472],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies the width of the required bitmap.","pos":[33488,33531]},{"content":"Specifies the height of the required bitmap.","pos":[33551,33595]},{"pos":[33605,33612],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[33622,33727],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__ongeticoniclivepreviewbitmap\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::OnGetIconicLivePreviewBitmap","linkify":"<a name=\"cmdichildwndex__ongeticoniclivepreviewbitmap\"></a>  CMDIChildWndEx::OnGetIconicLivePreviewBitmap","source":"<a name=\"cmdichildwndex__ongeticoniclivepreviewbitmap\"></a>  CMDIChildWndEx::OnGetIconicLivePreviewBitmap"},{"content":"Called by the framework when it needs to obtain a bitmap for live preview of the MDI child.","pos":[33731,33822]},{"pos":[33948,33958],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"This parameter is <ph id=\"ph1\">`TRUE`</ph> if the bitmap is requested for the MDI child, which is currently active and the main window is not minimized.","pos":[33985,34119],"source":" This parameter is `TRUE` if the bitmap is requested for the MDI child, which is currently active and the main window is not minimized."},{"content":"The default processing in this case takes a snapshot of the main window.","pos":[34120,34192]},{"content":"Specifies the location of the bitmap in the main (top level) window client coordinates.","pos":[34215,34302]},{"content":"This point should be provided by the callee.","pos":[34303,34347]},{"pos":[34357,34369],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[34373,34446],"content":"If processed, returns a handle to a valid 32bpp bitmap, otherwise <ph id=\"ph1\">`NULL`</ph>.","source":"If processed, returns a handle to a valid 32bpp bitmap, otherwise `NULL`."},{"pos":[34456,34463],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this method in a derived class and return a valid 32bpp bitmap for live preview of MDI child.","pos":[34467,34569]},{"content":"This method is called only when the MDI child is displayed on Windows 7 taskbar tabs.","pos":[34570,34655]},{"content":"If you return <ph id=\"ph1\">`NULL`</ph>, MFC calls the default handlers and obtains bitmaps using <ph id=\"ph2\">`PrintClient`</ph> or <ph id=\"ph3\">`PrintWindow`</ph>.","pos":[34656,34766],"source":" If you return `NULL`, MFC calls the default handlers and obtains bitmaps using `PrintClient` or `PrintWindow`."},{"pos":[34776,34893],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__m_dwdefaulttaskbartabpropertyflags\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::m_dwDefaultTaskbarTabPropertyFlags","linkify":"<a name=\"cmdichildwndex__m_dwdefaulttaskbartabpropertyflags\"></a>  CMDIChildWndEx::m_dwDefaultTaskbarTabPropertyFlags","source":"<a name=\"cmdichildwndex__m_dwdefaulttaskbartabpropertyflags\"></a>  CMDIChildWndEx::m_dwDefaultTaskbarTabPropertyFlags"},{"pos":[34897,35066],"content":"A combination of flags, which is passed by the framework to the <ph id=\"ph1\">`SetTaskbarTabProperties`</ph> method, when a tab (MDI child) is being registered with Windows 7 taskbar tabs.","source":"A combination of flags, which is passed by the framework to the `SetTaskbarTabProperties` method, when a tab (MDI child) is being registered with Windows 7 taskbar tabs."},{"pos":[35158,35165],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The default combination is STPF_USEAPPTHUMBNAILWHENACTIVE &amp;#124; STPF_USEAPPPEEKWHENACTIVE.","pos":[35169,35260],"source":"The default combination is STPF_USEAPPTHUMBNAILWHENACTIVE &#124; STPF_USEAPPPEEKWHENACTIVE."},{"pos":[35270,35385],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__istaskbarthumbnailcliprectenabled\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::IsTaskbarThumbnailClipRectEnabled","linkify":"<a name=\"cmdichildwndex__istaskbarthumbnailcliprectenabled\"></a>  CMDIChildWndEx::IsTaskbarThumbnailClipRectEnabled","source":"<a name=\"cmdichildwndex__istaskbarthumbnailcliprectenabled\"></a>  CMDIChildWndEx::IsTaskbarThumbnailClipRectEnabled"},{"content":"Tells whether automatic selection of a portion of a window's client area to display as that window's thumbnail in the taskbar is enabled or disabled.","pos":[35389,35538]},{"pos":[35614,35626],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[35630,35748],"content":"Returns <ph id=\"ph1\">`TRUE`</ph> if automatic selection of a portion of a window's client area to display is enabled; otherwise <ph id=\"ph2\">`FALSE`</ph>.","source":"Returns `TRUE` if automatic selection of a portion of a window's client area to display is enabled; otherwise `FALSE`."},{"pos":[35758,35765],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[35775,35878],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__istaskbartabssupportenabled\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::IsTaskbarTabsSupportEnabled","linkify":"<a name=\"cmdichildwndex__istaskbartabssupportenabled\"></a>  CMDIChildWndEx::IsTaskbarTabsSupportEnabled","source":"<a name=\"cmdichildwndex__istaskbartabssupportenabled\"></a>  CMDIChildWndEx::IsTaskbarTabsSupportEnabled"},{"content":"Tells whether the MDI child can appear on Windows 7 taskbar tabs.","pos":[35882,35947]},{"pos":[36008,36020],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[36024,36152],"content":"<ph id=\"ph1\">`TRUE`</ph> if the MDI child can appear on Windows 7 taskbar tabs; <ph id=\"ph2\">`FALSE`</ph> if the MDI child can not appear on Windows 7 taskbar tabs.","source":"`TRUE` if the MDI child can appear on Windows 7 taskbar tabs; `FALSE` if the MDI child can not appear on Windows 7 taskbar tabs."},{"pos":[36162,36169],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[36179,36282],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__isregisteredwithtaskbartabs\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::IsRegisteredWithTaskbarTabs","linkify":"<a name=\"cmdichildwndex__isregisteredwithtaskbartabs\"></a>  CMDIChildWndEx::IsRegisteredWithTaskbarTabs","source":"<a name=\"cmdichildwndex__isregisteredwithtaskbartabs\"></a>  CMDIChildWndEx::IsRegisteredWithTaskbarTabs"},{"pos":[36286,36374],"content":"Returns <ph id=\"ph1\">`TRUE`</ph> if the MDI child was successfully registered with Windows 7 taskbar tabs.","source":"Returns `TRUE` if the MDI child was successfully registered with Windows 7 taskbar tabs."},{"pos":[36435,36447],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[36451,36536],"content":"<ph id=\"ph1\">`TRUE`</ph> if the MDI child is registered with Windows 7 taskbar tabs; otherwise <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the MDI child is registered with Windows 7 taskbar tabs; otherwise `FALSE`."},{"pos":[36546,36553],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[36563,36658],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__invalidateiconicbitmaps\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::InvalidateIconicBitmaps","linkify":"<a name=\"cmdichildwndex__invalidateiconicbitmaps\"></a>  CMDIChildWndEx::InvalidateIconicBitmaps","source":"<a name=\"cmdichildwndex__invalidateiconicbitmaps\"></a>  CMDIChildWndEx::InvalidateIconicBitmaps"},{"content":"Invalidates an iconic bitmap representation of a MDI child.","pos":[36662,36721]},{"pos":[36778,36790],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[36794,36940],"content":"Returns <ph id=\"ph1\">`FALSE`</ph> if Windows 7 taskbar support is disabled or the MDI child is not registered with Windows 7 taskbar tabs; otherwise returns <ph id=\"ph2\">`TRUE`</ph>.","source":"Returns `FALSE` if Windows 7 taskbar support is disabled or the MDI child is not registered with Windows 7 taskbar tabs; otherwise returns `TRUE`."},{"pos":[36950,36957],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Should be called when the live content or size of a MDI child has changed.","pos":[36961,37035]},{"pos":[37045,37148],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__gettaskbarthumbnailcliprect\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::GetTaskbarThumbnailClipRect","linkify":"<a name=\"cmdichildwndex__gettaskbarthumbnailcliprect\"></a>  CMDIChildWndEx::GetTaskbarThumbnailClipRect","source":"<a name=\"cmdichildwndex__gettaskbarthumbnailcliprect\"></a>  CMDIChildWndEx::GetTaskbarThumbnailClipRect"},{"content":"Called by the framework when it needs to select a portion of a window's client area to display as that window's thumbnail in the taskbar.","pos":[37152,37289]},{"pos":[37368,37380],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A rectangle in windows coordinates.","pos":[37384,37419]},{"content":"This rectangle is mapped to the client area of the top level frame.","pos":[37420,37487]},{"content":"The rectangle should be empty to clear the clipping rectangle.","pos":[37488,37550]},{"pos":[37560,37567],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[37577,37666],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__gettaskbarpreviewwnd\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::GetTaskbarPreviewWnd","linkify":"<a name=\"cmdichildwndex__gettaskbarpreviewwnd\"></a>  CMDIChildWndEx::GetTaskbarPreviewWnd","source":"<a name=\"cmdichildwndex__gettaskbarpreviewwnd\"></a>  CMDIChildWndEx::GetTaskbarPreviewWnd"},{"content":"Called by the framework when it needs to obtain a child window (usually a view or splitter window) to be displayed on a Windows 7 taskbar tab thumbnail.","pos":[37670,37822]},{"pos":[37885,37897],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Should return a valid pointer to a <ph id=\"ph1\">`CWnd`</ph> object, whose preview should be displayed on a Windows 7 taskbar tab related to this MDI child.","pos":[37901,38038],"source":"Should return a valid pointer to a `CWnd` object, whose preview should be displayed on a Windows 7 taskbar tab related to this MDI child."},{"content":"The default implementation returns a child window of this MDI child with AFX_IDW_PANE_FIRST control ID (which is usually a <ph id=\"ph1\">`CView`</ph>-derived class).","pos":[38039,38185],"source":" The default implementation returns a child window of this MDI child with AFX_IDW_PANE_FIRST control ID (which is usually a `CView`-derived class)."},{"pos":[38195,38202],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[38212,38289],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__gettabproxywnd\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::GetTabProxyWnd","linkify":"<a name=\"cmdichildwndex__gettabproxywnd\"></a>  CMDIChildWndEx::GetTabProxyWnd","source":"<a name=\"cmdichildwndex__gettabproxywnd\"></a>  CMDIChildWndEx::GetTabProxyWnd"},{"content":"Returns the tab proxy window registered with Windows 7 taskbar tabs.","pos":[38293,38361]},{"pos":[38421,38433],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38437,38526],"content":"A pointer to a <ph id=\"ph1\">`CMDITabProxyWnd`</ph> object, which is registered with Windows 7 taskbar tabs.","source":"A pointer to a `CMDITabProxyWnd` object, which is registered with Windows 7 taskbar tabs."},{"pos":[38536,38543],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[38553,38662],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__enabletaskbarthumbnailcliprect\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::EnableTaskbarThumbnailClipRect","linkify":"<a name=\"cmdichildwndex__enabletaskbarthumbnailcliprect\"></a>  CMDIChildWndEx::EnableTaskbarThumbnailClipRect","source":"<a name=\"cmdichildwndex__enabletaskbarthumbnailcliprect\"></a>  CMDIChildWndEx::EnableTaskbarThumbnailClipRect"},{"content":"Enables or disables automatic selection of a portion of a window's client area to display as that window's thumbnail in the taskbar.","pos":[38666,38798]},{"pos":[38881,38891],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies whether to enable ( <ph id=\"ph1\">`TRUE`</ph>), or disable ( <ph id=\"ph2\">`FALSE`</ph>) automatic selection of a portion of a window's client area to display.","pos":[38908,39039],"source":" Specifies whether to enable ( `TRUE`), or disable ( `FALSE`) automatic selection of a portion of a window's client area to display."},{"pos":[39049,39056],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[39066,39155],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__canshowontaskbartabs\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::CanShowOnTaskBarTabs","linkify":"<a name=\"cmdichildwndex__canshowontaskbartabs\"></a>  CMDIChildWndEx::CanShowOnTaskBarTabs","source":"<a name=\"cmdichildwndex__canshowontaskbartabs\"></a>  CMDIChildWndEx::CanShowOnTaskBarTabs"},{"content":"Tells the framework whether this MDI child can be displayed on Windows 7 taskbar tabs.","pos":[39159,39245]},{"pos":[39307,39319],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[39323,39411],"content":"<ph id=\"ph1\">`TRUE`</ph> if the content of the MDI child can be displayed on Windows 7 taskbar thumbnails.","source":"`TRUE` if the content of the MDI child can be displayed on Windows 7 taskbar thumbnails."},{"pos":[39421,39428],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[39432,39561],"content":"Override this method in a derived class and return <ph id=\"ph1\">`FALSE`</ph> to disable the appearance of this MDI child on Windows 7 taskbar tabs.","source":"Override this method in a derived class and return `FALSE` to disable the appearance of this MDI child on Windows 7 taskbar tabs."},{"pos":[39571,39662],"content":"<bpt id=\"p1\">&lt;a name=\"cmdichildwndex__activatetoplevelframe\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMDIChildWndEx::ActivateTopLevelFrame","linkify":"<a name=\"cmdichildwndex__activatetoplevelframe\"></a>  CMDIChildWndEx::ActivateTopLevelFrame","source":"<a name=\"cmdichildwndex__activatetoplevelframe\"></a>  CMDIChildWndEx::ActivateTopLevelFrame"},{"content":"Called by the framework to activate the top level frame when the application is activated from a taskbar tab.","pos":[39666,39775]},{"pos":[39838,39845],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[39854,39862],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[39866,39914],"source":"[Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Classes<ept id=\"p1\">](../../mfc/reference/mfc-classes.md)</ept><ph id=\"ph1\"> </ph>","pos":[39917,39964],"source":" [Classes](../../mfc/reference/mfc-classes.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CMDIChildWnd Class<ept id=\"p1\">](../../mfc/reference/cmdichildwnd-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[39967,40032],"source":" [CMDIChildWnd Class](../../mfc/reference/cmdichildwnd-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CMFCWindowsManagerDialog Class<ept id=\"p1\">](../../mfc/reference/cmfcwindowsmanagerdialog-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[40035,40124],"source":" [CMFCWindowsManagerDialog Class](../../mfc/reference/cmfcwindowsmanagerdialog-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CMDIFrameWndEx Class<ept id=\"p1\">](../../mfc/reference/cmdiframewndex-class.md)</ept>","pos":[40127,40195],"source":" [CMDIFrameWndEx Class](../../mfc/reference/cmdiframewndex-class.md)"}],"content":"---\ntitle: \"CMDIChildWndEx Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CMDIChildWndEx\"\n  - \"GetThisClass\"\n  - \"CMDIChildWndEx::PreTranslateMessage\"\n  - \"CMDIChildWndEx::ActivateFrame\"\n  - \"CMDIChildWndEx.GetThisClass\"\n  - \"CMDIChildWndEx::AddDockSite\"\n  - \"CMDIChildWndEx.CreateObject\"\n  - \"CMDIChildWndEx::CreateObject\"\n  - \"CMDIChildWndEx.ActivateFrame\"\n  - \"CMDIChildWndEx::GetThisClass\"\n  - \"CMDIChildWndEx.PreTranslateMessage\"\n  - \"PreTranslateMessage\"\n  - \"ActivateFrame\"\n  - \"CreateObject\"\n  - \"CMDIChildWndEx.AddDockSite\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CMDIChildWndEx class\"\n  - \"ActivateFrame method\"\n  - \"PreTranslateMessage method\"\n  - \"GetThisClass method\"\n  - \"CreateObject method\"\nms.assetid: d39fec06-0bd6-4271-917d-35aae3b24d8e\ncaps.latest.revision: 35\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# CMDIChildWndEx Class\nThe `CMDIChildWndEx` class provides the functionality of a Windows multiple document interface (MDI) child window. It extends the functionality of [CMDIChildWnd Class](../../mfc/reference/cmdichildwnd-class.md). The framework requires this class when an MDI application uses certain MFC classes.  \n  \n## Syntax  \n  \n```  \nclass CMDIChildWndEx : public CMDIChildWnd  \n```  \n  \n## Members  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMDIChildWndEx::ActivateTopLevelFrame](#cmdichildwndex__activatetoplevelframe)|Called internally by the framework to activate top level frame when the application should be activated from a taskbar tab.|  \n|`CMDIChildWndEx::AddDockSite`|This method is not used or implemented.|  \n|[CMDIChildWndEx::AddPane](#cmdichildwndex__addpane)|Adds a pane.|  \n|[CMDIChildWndEx::AddTabbedPane](#cmdichildwndex__addtabbedpane)|Adds a tabbed pane.|  \n|[CMDIChildWndEx::AdjustDockingLayout](#cmdichildwndex__adjustdockinglayout)|Adjusts the docking layout.|  \n|[CMDIChildWndEx::CanShowOnMDITabs](#cmdichildwndex__canshowonmditabs)||  \n|[CMDIChildWndEx::CanShowOnTaskBarTabs](#cmdichildwndex__canshowontaskbartabs)|Tells the framework whether this MDI child can be displayed on Windows 7 taskbar tabs.|  \n|[CMDIChildWndEx::CanShowOnWindowsList](#cmdichildwndex__canshowonwindowslist)|Returns `TRUE` if the MDI child window name can be displayed in the [CMFCWindowsManagerDialog Class](../../mfc/reference/cmfcwindowsmanagerdialog-class.md) dialog box. Otherwise returns `FALSE`.|  \n|`CMDIChildWndEx::CreateObject`|Called by the framework to create a dynamic instance of this class type.|  \n|[CMDIChildWndEx::DockPane](#cmdichildwndex__dockpane)|Docks a pane.|  \n|[CMDIChildWndEx::DockPaneLeftOf](#cmdichildwndex__dockpaneleftof)|Docks one pane to the left of another pane.|  \n|[CMDIChildWndEx::EnableAutoHidePanes](#cmdichildwndex__enableautohidepanes)|Enables auto-hide mode for panes when they are docked at the specified sides of the window.|  \n|[CMDIChildWndEx::EnableDocking](#cmdichildwndex__enabledocking)|Enables docking of the child window to the main frame.|  \n|[CMDIChildWndEx::EnableTaskbarThumbnailClipRect](#cmdichildwndex__enabletaskbarthumbnailcliprect)|Enables or disables automatic selection of a portion of a window's client area to display  as that window's thumbnail in the taskbar.|  \n|[CMDIChildWndEx::GetDockingManager](#cmdichildwndex__getdockingmanager)||  \n|[CMDIChildWndEx::GetDocumentName](#cmdichildwndex__getdocumentname)|Returns the name of the document that is displayed in the MDI child window.|  \n|[CMDIChildWndEx::GetFrameIcon](#cmdichildwndex__getframeicon)|Called by the framework to retrieve the MDI child window icon.|  \n|[CMDIChildWndEx::GetFrameText](#cmdichildwndex__getframetext)|Called by the framework to retrieve the text for the MDI child window.|  \n|[CMDIChildWndEx::GetPane](#cmdichildwndex__getpane)|Finds a pane by the specified control ID.|  \n|[CMDIChildWndEx::GetRelatedTabGroup](#cmdichildwndex__getrelatedtabgroup)||  \n|[CMDIChildWndEx::GetTabbedPane](#cmdichildwndex__gettabbedpane)|Returns a pointer to an embedded docking pane that was converted to a tabbed document.|  \n|[CMDIChildWndEx::GetTabProxyWnd](#cmdichildwndex__gettabproxywnd)|Returns tab proxy window actually registered with Windows 7 taskbar tabs.|  \n|[CMDIChildWndEx::GetTaskbarPreviewWnd](#cmdichildwndex__gettaskbarpreviewwnd)|Called by the framework when it needs to obtain a child window (usually a view or splitter window) to be displayed on Windows 7 taskbar tab thumbnail.|  \n|[CMDIChildWndEx::GetTaskbarThumbnailClipRect](#cmdichildwndex__gettaskbarthumbnailcliprect)|Called by the framework when it needs to select a portion of a window's client area to display  as that window's thumbnail in the taskbar.|  \n|`CMDIChildWndEx::GetThisClass`|Called by the framework to obtain a pointer to the [CRuntimeClass](../../mfc/reference/cruntimeclass-structure.md) object that is associated with this class type.|  \n|[CMDIChildWndEx::GetToolbarButtonToolTipText](#cmdichildwndex__gettoolbarbuttontooltiptext)|Called by the framework to retrieve a tooltip for a toolbar button.|  \n|[CMDIChildWndEx::InsertPane](#cmdichildwndex__insertpane)|Registers the specified pane with the docking manager.|  \n|[CMDIChildWndEx::InvalidateIconicBitmaps](#cmdichildwndex__invalidateiconicbitmaps)|Invalidates iconic bitmap representation of MDI child.|  \n|[CMDIChildWndEx::IsPointNearDockSite](#cmdichildwndex__ispointneardocksite)|Determines whether a specified point is near the dock site.|  \n|[CMDIChildWndEx::IsReadOnly](#cmdichildwndex__isreadonly)|Returns `TRUE` if the document that is displayed in the child window is read-only. Otherwise returns `FALSE`.|  \n|[CMDIChildWndEx::IsRegisteredWithTaskbarTabs](#cmdichildwndex__isregisteredwithtaskbartabs)|Returns TRUE if MDI child was successfully registered with Windows 7 taskbar tabs.|  \n|[CMDIChildWndEx::IsTabbedPane](#cmdichildwndex__istabbedpane)|Returns `TRUE` if the MDI child window contains a docking pane. Otherwise returns `FALSE`.|  \n|[CMDIChildWndEx::IsTaskbarTabsSupportEnabled](#cmdichildwndex__istaskbartabssupportenabled)|Tells whether the MDI child can appear on Windows 7 taskbar tabs.|  \n|[CMDIChildWndEx::IsTaskbarThumbnailClipRectEnabled](#cmdichildwndex__istaskbarthumbnailcliprectenabled)|Tells whether automatic selection of a portion of a window's client area to display  as that window's thumbnail in the taskbar is enabled or disabled.|  \n|[CMDIChildWndEx::m_dwDefaultTaskbarTabPropertyFlags](#cmdichildwndex__m_dwdefaulttaskbartabpropertyflags)|A combination of flags, which is passed by the framework to the SetTaskbarTabProperties method, when a tab (MDI child) is being registered with Windows 7 taskbar tabs. The default combination is STPF_USEAPPTHUMBNAILWHENACTIVE &#124; STPF_USEAPPPEEKWHENACTIVE.|  \n|[CMDIChildWndEx::OnGetIconicLivePreviewBitmap](#cmdichildwndex__ongeticoniclivepreviewbitmap)|Called by the framework when it needs to obtain a bitmap for live preview of MDI child.|  \n|[CMDIChildWndEx::OnGetIconicThumbnail](#cmdichildwndex__ongeticonicthumbnail)|Called by the framework when it needs to obtain a bitmap for iconic thumbnail of MDI child.|  \n|[CMDIChildWndEx::OnMoveMiniFrame](#cmdichildwndex__onmoveminiframe)|Called by the framework to move a mini-frame window.|  \n|[CMDIChildWndEx::OnPressTaskbarThmbnailCloseButton](#cmdichildwndex__onpresstaskbarthmbnailclosebutton)|Called by the framework when the user presses close button on Taskbar tab thumbnail..|  \n|[CMDIChildWndEx::OnSetPreviewMode](#cmdichildwndex__onsetpreviewmode)|Called by the framework to enter or exit print preview mode.|  \n|[CMDIChildWndEx::OnTaskbarTabThumbnailActivate](#cmdichildwndex__ontaskbartabthumbnailactivate)|Called by the framework when the Taskbar tab thumbnail should process WM_ACTIVATE message.|  \n|[CMDIChildWndEx::OnTaskbarTabThumbnailMouseActivate](#cmdichildwndex__ontaskbartabthumbnailmouseactivate)|Called by the framework when the Taskbar tab thumbnail should process WM_MOUSEACTIVATE message.|  \n|[CMDIChildWndEx::OnTaskbarTabThumbnailStretch](#cmdichildwndex__ontaskbartabthumbnailstretch)|Called by the framework when it needs to stretch a bitmap for Windows 7 taskbar tab thumbnail preview of MDI child.|  \n|[CMDIChildWndEx::OnUpdateFrameTitle](#cmdichildwndex__onupdateframetitle)|Called by the framework to update the frame title. (Overrides `CMDIChildWnd::OnUpdateFrameTitle`.)|  \n|[CMDIChildWndEx::PaneFromPoint](#cmdichildwndex__panefrompoint)|Returns the pane that contains the given point.|  \n|`CMDIChildWndEx::PreTranslateMessage`|Used by class [CWinApp](../../mfc/reference/cwinapp-class.md) to translate window messages before they are dispatched to the [TranslateMessage](http://msdn.microsoft.com/library/windows/desktop/ms644955) and [DispatchMessage](http://msdn.microsoft.com/library/windows/desktop/ms644934) Windows functions. (Overrides [CWnd::PreTranslateMessage](../../mfc/reference/cwnd-class.md#cwnd__pretranslatemessage).)|  \n|[CMDIChildWndEx::RecalcLayout](#cmdichildwndex__recalclayout)|Recalculates the layout of the window.|  \n|[CMDIChildWndEx::RegisterTaskbarTab](#cmdichildwndex__registertaskbartab)|Registers MDI child with Windows 7 taskbar tabs.|  \n|[CMDIChildWndEx::RemovePaneFromDockManager](#cmdichildwndex__removepanefromdockmanager)|Removes a pane from the docking manager.|  \n|[CMDIChildWndEx::SetRelatedTabGroup](#cmdichildwndex__setrelatedtabgroup)||  \n|[CMDIChildWndEx::SetTaskbarTabActive](#cmdichildwndex__settaskbartabactive)|Activates corresponding Windows 7 taskbar tab.|  \n|[CMDIChildWndEx::SetTaskbarTabOrder](#cmdichildwndex__settaskbartaborder)|Inserts MDI child before specified window on Windows 7 taskbar tabs.|  \n|[CMDIChildWndEx::SetTaskbarTabProperties](#cmdichildwndex__settaskbartabproperties)|Sets properties for a Windows 7 taskbar tab.|  \n|[CMDIChildWndEx::SetTaskbarThumbnailClipRect](#cmdichildwndex__settaskbarthumbnailcliprect)|Called internally by the framework to set clipping rectangle to select a portion of a window's client area to display  as that window's thumbnail in the taskbar.|  \n|[CMDIChildWndEx::ShowPane](#cmdichildwndex__showpane)||  \n|[CMDIChildWndEx::UnregisterTaskbarTab](#cmdichildwndex__unregistertaskbartab)|Removes MDI child from Windows 7 taskbar tabs.|  \n|[CMDIChildWndEx::UpdateTaskbarTabIcon](#cmdichildwndex__updatetaskbartabicon)|Updates Windows 7 taskbar tab icon.|  \n  \n## Remarks  \n To take advantage of extended docking features in MDI applications, derive the MDI child window class of your application from `CMDIChildWndEx` instead of [CMDIChildWnd](../../mfc/reference/cmdichildwnd-class.md).  \n  \n## Example  \n The following example derives a class from `CMDIChildWndEx`. This code snippet comes from the [VisualStudioDemo Sample: MFC Visual Studio Application](../../visual-cpp-samples.md).  \n  \n [!code-cpp[NVC_MFC_VisualStudioDemo#3](../../mfc/codesnippet/cpp/cmdichildwndex-class_1.h)]  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n [CFrameWnd](../../mfc/reference/cframewnd-class.md)  \n  \n [CMDIChildWnd](../../mfc/reference/cmdichildwnd-class.md)  \n  \n [CMDIChildWndEx](../../mfc/reference/cmdichildwndex-class.md)  \n  \n## Requirements  \n **Header:** afxMDIChildWndEx.h  \n  \n##  <a name=\"cmdichildwndex__addpane\"></a>  CMDIChildWndEx::AddPane  \n Adds a pane.  \n  \n```  \nBOOL AddPane(\n    CBasePane* pControlBar,  \n    BOOL bTail = TRUE);\n```  \n  \n### Parameters  \n [in] `pControlBar`  \n A pointer to the pane.  \n  \n [in] `bTail`  \n `TRUE` to add the pane to the end of the list of panes for the docking manager; otherwise, `FALSE`.  \n  \n### Return Value  \n `TRUE` if the pane was successfully registered with the docking manager; otherwise, `FALSE`.  \n  \n##  <a name=\"cmdichildwndex__addtabbedpane\"></a>  CMDIChildWndEx::AddTabbedPane  \n Adds a tabbed pane.  \n  \n```  \nvoid AddTabbedPane(CDockablePane* pControlBar);\n```  \n  \n### Parameters  \n [in] `pControlBar`  \n A pointer to the pane.  \n  \n##  <a name=\"cmdichildwndex__adjustdockinglayout\"></a>  CMDIChildWndEx::AdjustDockingLayout  \n Adjusts the docking layout.  \n  \n```  \nvirtual void AdjustDockingLayout(HDWP hdwp = NULL);\n```  \n  \n### Parameters  \n [in] `hdwp`  \n Handle to a deferred window position structure.  \n  \n##  <a name=\"cmdichildwndex__canshowonmditabs\"></a>  CMDIChildWndEx::CanShowOnMDITabs  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL CanShowOnMDITabs();\n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmdichildwndex__canshowonwindowslist\"></a>  CMDIChildWndEx::CanShowOnWindowsList  \n Specifies whether the MDI child window name can be displayed in the [CMFCWindowsManagerDialog Class](../../mfc/reference/cmfcwindowsmanagerdialog-class.md) dialog box.  \n  \n```  \nvirtual BOOL CanShowOnWindowsList();\n```  \n  \n### Return Value  \n `TRUE` if the window can be displayed in the **Windows** dialog box; otherwise, `FALSE`.  \n  \n### Remarks  \n Override this method in a derived class and return `FALSE` if the window should not be displayed in the **Windows** dialog box. This function is called from `CMFCWindowsManagerDialog`.  \n  \n##  <a name=\"cmdichildwndex__dockpane\"></a>  CMDIChildWndEx::DockPane  \n Docks a pane.  \n  \n```  \nvoid DockPane(\n    CBasePane* pBar,  \n    UINT nDockBarID = 0,  \n    LPCRECT lpRect = NULL);\n```  \n  \n### Parameters  \n [in] `pBar`  \n A pointer to the pane.  \n  \n [in] `nDockBarID`  \n The ID of the pane.  \n  \n [in] `lpRect`  \n A pointer to a rectangle.  \n  \n### Remarks  \n The `lpRect` parameter is not used.  \n  \n##  <a name=\"cmdichildwndex__dockpaneleftof\"></a>  CMDIChildWndEx::DockPaneLeftOf  \n Docks one pane to the left of another pane.  \n  \n```  \nBOOL DockPaneLeftOf(\n    CPane* pBar,  \n    CPane* pLeftOf);\n```  \n  \n### Parameters  \n `pBar`  \n A pointer to the pane that is to be docked.  \n  \n `pLeftOf`  \n A pointer to the pane that serves as the point of reference.  \n  \n### Return Value  \n `TRUE` on success, `FALSE` on failure.  \n  \n### Remarks  \n This method takes the pane specified by `pBar` and docks it at the left side of the pane specified by `pLeftOf`.  \n  \n Call this method when you want to dock several panes in predefined order.  \n  \n##  <a name=\"cmdichildwndex__enableautohidepanes\"></a>  CMDIChildWndEx::EnableAutoHidePanes  \n Enables auto-hide mode for panes when they are docked at the specified sides of the window.  \n  \n```  \nBOOL EnableAutoHidePanes(DWORD dwDockStyle);\n```  \n  \n### Parameters  \n [in] `dwDockStyle`  \n Specifies the sides of the main frame window that is enabled. Use one or more of the following flags.  \n  \n- `CBRS_ALIGN_LEFT`  \n  \n- `CBRS_ALIGN_RIGHT`  \n  \n- `CBRS_ALIGN_TOP`  \n  \n- `CBRS_ALIGN_BOTTOM`  \n  \n### Return Value  \n `TRUE` if the method succeeds; otherwise `FALSE`.  \n  \n##  <a name=\"cmdichildwndex__enabledocking\"></a>  CMDIChildWndEx::EnableDocking  \n Enables docking of the child window to the main frame.  \n  \n```  \nBOOL EnableDocking(DWORD dwDockStyle);\n```  \n  \n### Parameters  \n [in] `dwDockStyle`  \n Specifies the docking alignment to enable.  \n  \n### Return Value  \n `TRUE` if the method succeeds; otherwise `FALSE`.  \n  \n### Remarks  \n Call this method to enable docking alignment to the main frame. You can pass a combination of CBRS_ALIGN_ flags (for more information, see [CControlBar::EnableDocking](../../mfc/reference/ccontrolbar-class.md#ccontrolbar__enabledocking)).  \n  \n##  <a name=\"cmdichildwndex__getdockingmanager\"></a>  CMDIChildWndEx::GetDockingManager  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nCDockingManager* GetDockingManager();\n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmdichildwndex__getdocumentname\"></a>  CMDIChildWndEx::GetDocumentName  \n Returns the name of the document that is displayed in the MDI child window.  \n  \n```  \nvirtual LPCTSTR GetDocumentName(CObject** pObj);\n```  \n  \n### Return Value  \n A pointer to a string that contains the name of a document.  \n  \n### Remarks  \n A document is what the MDI child window displays. Generally, the window displays data that is loaded from or saved to a file. Therefore, the name of the document is the name of the file. The default implementation of `GetDocumentName` returns a string obtained from `CDocument::GetPathName`.  \n  \n If the window displays a document that is not loaded from a file, override this method in a derived class and return a unique document identifier.  \n  \n `GetDocumentName` is called by the framework when it saves the state of all opened documents. The returned string is written to the registry.  \n  \n When the framework is restoring state later, the document name is read from the registry and passed to [CMDIFrameWndEx::CreateDocumentWindow](../../mfc/reference/cmdiframewndex-class.md#cmdiframewndex__createdocumentwindow). Override this method in a [CMDIFrameWndEx](../../mfc/reference/cmdiframewndex-class.md)-derived class and create or open a document that has this name and read in the file that has this name. If the document is not based on a file, create the document based on the document identifier itself. You should do the preceding actions only if you intend to save and restore documents.  \n  \n### Example  \n The following example demonstrates the use of the `GetDocumentName` method. This code snippet comes from the [VisualStudioDemo Sample: MFC Visual Studio Application](../../visual-cpp-samples.md).  \n  \n [!code-cpp[NVC_MFC_VisualStudioDemo#17](../../mfc/codesnippet/cpp/cmdichildwndex-class_2.cpp)]  \n  \n##  <a name=\"cmdichildwndex__getframeicon\"></a>  CMDIChildWndEx::GetFrameIcon  \n Called by the framework to retrieve the icon of the MDI child window.  \n  \n```  \nvirtual HICON GetFrameIcon() const;\n\n \n```  \n  \n### Return Value  \n A handle to the window icon.  \n  \n### Remarks  \n This method is called by the framework to determine what icon to display on the MDI tab that contains the MDI child frame window.  \n  \n By default this method returns the window icon. Override `GetFrameIcon` in a `CMDIChildWndEx`-derived class to customize this behavior.  \n  \n##  <a name=\"cmdichildwndex__getframetext\"></a>  CMDIChildWndEx::GetFrameText  \n Called by the framework to retrieve the text for the MDI child window.  \n  \n```  \nvirtual CString GetFrameText() const;\n\n \n```  \n  \n### Return Value  \n A string that contains the frame window text.  \n  \n### Remarks  \n This method is called by the framework to determine what text to display on the MDI tab that contains the MDI child frame window.  \n  \n By default this method returns the window text. Override `GetFrameText` in a `CMDIChildWndEx`-derived class to customize this behavior.  \n  \n##  <a name=\"cmdichildwndex__getpane\"></a>  CMDIChildWndEx::GetPane  \n Finds a pane by the specified control ID.  \n  \n```  \nCBasePane* GetPane(UINT nID);\n```  \n  \n### Parameters  \n [in] `nID`  \n The control ID of the pane to find.  \n  \n### Return Value  \n A pointer to the pane if found, otherwise `NULL`.  \n  \n##  <a name=\"cmdichildwndex__getrelatedtabgroup\"></a>  CMDIChildWndEx::GetRelatedTabGroup  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nCMFCTabCtrl* GetRelatedTabGroup();\n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmdichildwndex__gettabbedpane\"></a>  CMDIChildWndEx::GetTabbedPane  \n Returns a pointer to a docking pane that is part of a group of MDI tabbed documents.  \n  \n```  \nCDockablePane* GetTabbedPane() const;\n\n \n```  \n  \n### Return Value  \n A pointer to a docking pane that is part of a group of MDI tabbed documents.  \n  \n##  <a name=\"cmdichildwndex__gettoolbarbuttontooltiptext\"></a>  CMDIChildWndEx::GetToolbarButtonToolTipText  \n Called by the framework to retrieve a tooltip for a toolbar button.  \n  \n```  \nvirtual BOOL GetToolbarButtonToolTipText(\n    CMFCToolBarButton*, \n    CString&);\n```  \n  \n### Return Value  \n `TRUE` if the tooltip has been displayed. The default implementation returns `FALSE`.  \n  \n### Remarks  \n Override this method if you want to display custom tool tips for toolbar buttons.  \n  \n##  <a name=\"cmdichildwndex__insertpane\"></a>  CMDIChildWndEx::InsertPane  \n Registers the specified pane with the docking manager.  \n  \n```  \nBOOL InsertPane(\n    CBasePane* pControlBar,  \n    CBasePane* pTarget,  \n    BOOL bAfter = TRUE);\n```  \n  \n### Parameters  \n [in] `pControlBar`  \n A pointer to the pane to insert.  \n  \n [in] `pTarget`  \n A pointer to the adjacent pane.  \n  \n [in] `bAfter`  \n If `TRUE`, `pControlBar` is inserted after `pTarget`. If `FALSE`, `pControlBar` is inserted before `pTarget`.  \n  \n### Return Value  \n `TRUE` if the method succeeds, `FALSE` otherwise.  \n  \n##  <a name=\"cmdichildwndex__ispointneardocksite\"></a>  CMDIChildWndEx::IsPointNearDockSite  \n Determines whether a specified point is near the dock site.  \n  \n```  \nBOOL IsPointNearDockSite(\n    CPoint point,  \n    DWORD& dwBarAlignment,  \n    BOOL& bOuterEdge) const;\n\n \n```  \n  \n### Parameters  \n [in] `point`  \n The specified point.  \n  \n [in] `dwBarAlignment`  \n Specifies which edge the point is near. Possible values are `CBRS_ALIGN_LEFT`, `CBRS_ALIGN_RIGHT`, `CBRS_ALIGN_TOP`, and `CBRS_ALIGN_BOTTOM`  \n  \n [in] `bOuterEdge`  \n `TRUE` if the point is near the outer border of the dock site; `FALSE` otherwise.  \n  \n### Return Value  \n `TRUE` if the point is near the dock site; otherwise `FALSE`.  \n  \n### Remarks  \n The point is near the dock site when it is within the sensitivity set in the docking manager. The default sensitivity is 15 pixels.  \n  \n##  <a name=\"cmdichildwndex__isreadonly\"></a>  CMDIChildWndEx::IsReadOnly  \n Specifies whether the document that is displayed in the child window is read-only.  \n  \n```  \nvirtual BOOL IsReadOnly();\n```  \n  \n### Return Value  \n `TRUE` if the document is read-only; otherwise `FALSE`.  \n  \n### Remarks  \n This function is used to prevent saving of read-only documents.  \n  \n### Example  \n The following example demonstrates overriding the `IsReadOnly` method. This code snippet comes from the [VisualStudioDemo Sample: MFC Visual Studio Application](../../visual-cpp-samples.md).  \n  \n [!code-cpp[NVC_MFC_VisualStudioDemo#2](../../mfc/codesnippet/cpp/cmdichildwndex-class_3.cpp)]  \n  \n##  <a name=\"cmdichildwndex__istabbedpane\"></a>  CMDIChildWndEx::IsTabbedPane  \n Specifies whether the MDI child window contains a docking pane.  \n  \n```  \nBOOL IsTabbedPane() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the MDI child window contains a docking pane that was converted to a tabbed document; otherwise `FALSE`.  \n  \n##  <a name=\"cmdichildwndex__onmoveminiframe\"></a>  CMDIChildWndEx::OnMoveMiniFrame  \n Called by the framework to move a mini-frame window.  \n  \n```  \nvirtual BOOL OnMoveMiniFrame(CWnd* pFrame);\n```  \n  \n### Parameters  \n [in] `pFrame`  \n A pointer to a mini-frame window.  \n  \n### Return Value  \n `TRUE` if the method succeeds, otherwise `FALSE`.  \n  \n##  <a name=\"cmdichildwndex__onsetpreviewmode\"></a>  CMDIChildWndEx::OnSetPreviewMode  \n Called by the framework to enter or exit print preview mode.  \n  \n```  \nvirtual void OnSetPreviewMode(\n    BOOL bPreview,  \n    CPrintPreviewState* pState);\n```  \n  \n### Parameters  \n [in] `bPreview`  \n If `TRUE`, enter print preview mode. If `FALSE`, exit print preview mode.  \n  \n [in] `pState`  \n A pointer to the print preview state structure.  \n  \n##  <a name=\"cmdichildwndex__onupdateframetitle\"></a>  CMDIChildWndEx::OnUpdateFrameTitle  \n Called by the framework to update the frame title.  \n  \n```  \nvirtual void OnUpdateFrameTitle(BOOL bAddToTitle);\n```  \n  \n### Parameters  \n [in] `bAddToTitle`  \n If `TRUE`, add the document name to the title.  \n  \n##  <a name=\"cmdichildwndex__panefrompoint\"></a>  CMDIChildWndEx::PaneFromPoint  \n Returns the pane that contains the given point.  \n  \n```  \nCBasePane* PaneFromPoint(\n    CPoint point,  \n    int nSensitivity,  \n    bool bExactBar,  \n    CRuntimeClass* pRTCBarType) const;\n\n \nCBasePane* PaneFromPoint(\n    CPoint point,  \n    int nSensitivity,  \n    DWORD& dwAlignment,  \n    CRuntimeClass* pRTCBarType) const;\n\n \n```  \n  \n### Parameters  \n [in] `point`  \n Specifies the point, in screen coordinates, to check.  \n  \n [in] `nSensitivity`  \n Increase the search area by this amount. A pane satisfies the search criteria if the given point falls in the increased area.  \n  \n [in] `bExactBar`  \n `TRUE` to ignore the `nSensitivity` parameter; otherwise, `FALSE`.  \n  \n [in] `pRTCBarType`  \n If not `NULL`, the method searches only panes of the specified type.  \n  \n [in] `dwAlignment`  \n If a pane is found at the specified point, this parameter contains the side of the pane that was closest to the specified point. For more information, see the Remarks section.  \n  \n### Return Value  \n A pointer to the `CBasePane`-derived object that contains the given point, or `NULL` if no pane was found.  \n  \n### Remarks  \n Call this method to determine whether a pane contains the specified point according to the specified conditions such as runtime class and visibility.  \n  \n When the function returns and a pane was found, `dwAlignment` contains the alignment of the specified point. For example, if the point was closest to the top of the pane, `dwAlignment` is set to `CBRS_ALIGN_TOP`.  \n  \n##  <a name=\"cmdichildwndex__recalclayout\"></a>  CMDIChildWndEx::RecalcLayout  \n Recalculates the layout of the window.  \n  \n```  \nvirtual void RecalcLayout(BOOL bNotify = TRUE);\n```  \n  \n### Parameters  \n [in] `bNotify`  \n If `TRUE`, the active in-place item for the window receives notification of the layout change.  \n  \n##  <a name=\"cmdichildwndex__removepanefromdockmanager\"></a>  CMDIChildWndEx::RemovePaneFromDockManager  \n Removes a pane from the docking manager.  \n  \n```  \nvoid RemovePaneFromDockManager(\n    CBasePane* pControlBar,  \n    BOOL bDestroy,  \n    BOOL bAdjustLayout,  \n    BOOL bAutoHide,  \n    CBasePane* pBarReplacement);\n```  \n  \n### Parameters  \n [in] `pControlBar`  \n A pointer to the pane to remove.  \n  \n [in] `bDestroy`  \n If `TRUE`, the removed pane is destroyed.  \n  \n [in] `bAdjustLayout`  \n If `TRUE`, adjust the docking layout immediately.  \n  \n [in] `bAutoHide`  \n If `TRUE`, the docking layout is related to the list of autohide bars. If `FALSE`, the docking layout is related to the list of regular panes.  \n  \n [in] `pBarReplacement`  \n A pointer to a pane that replaces the removed pane.  \n  \n##  <a name=\"cmdichildwndex__setrelatedtabgroup\"></a>  CMDIChildWndEx::SetRelatedTabGroup  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid SetRelatedTabGroup(CMFCTabCtrl* p);\n```  \n  \n### Parameters  \n [in] `p`  \n  \n### Remarks  \n  \n##  <a name=\"cmdichildwndex__showpane\"></a>  CMDIChildWndEx::ShowPane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid ShowPane(\n    CBasePane* pBar,  \n    BOOL bShow,  \n    BOOL bDelay,  \n    BOOL bActivate);\n```  \n  \n### Parameters  \n [in] `pBar`  \n [in] `bShow`  \n [in] `bDelay`  \n [in] `bActivate`  \n  \n### Remarks  \n  \n##  <a name=\"cmdichildwndex__updatetaskbartabicon\"></a>  CMDIChildWndEx::UpdateTaskbarTabIcon  \n Updates the Windows 7 taskbar tab icon.  \n  \n```  \nvirtual void UpdateTaskbarTabIcon(HICON hIcon);\n```  \n  \n### Parameters  \n `hIcon`  \n A handle to an icon to display on the Windows 7 taskbar tab.  \n  \n### Remarks  \n  \n##  <a name=\"cmdichildwndex__unregistertaskbartab\"></a>  CMDIChildWndEx::UnregisterTaskbarTab  \n Removes the MDI child from Windows 7 taskbar tabs.  \n  \n```  \nvoid UnregisterTaskbarTab(BOOL bCheckRegisteredMDIChildCount = TRUE);\n```  \n  \n### Parameters  \n `bCheckRegisteredMDIChildCount`  \n Specifies whether this function needs to check the number of MDI children registered with MDI tabs. If this number is 0, then this function removes the clipping rectangle from the application's taskbar thumbnail.  \n  \n### Remarks  \n  \n##  <a name=\"cmdichildwndex__settaskbarthumbnailcliprect\"></a>  CMDIChildWndEx::SetTaskbarThumbnailClipRect  \n Called by the framework to set the clipping rectangle to select a portion of a window's client area to display as that window's thumbnail in the taskbar.  \n  \n```  \nvirtual BOOL SetTaskbarThumbnailClipRect(CRect rect);\n```  \n  \n### Parameters  \n `rect`  \n Specifies the new clipping rectangle. If the rectangle is empty or null, the clipping is removed.  \n  \n### Return Value  \n `TRUE` if successful; otherwise `FALSE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmdichildwndex__settaskbartabproperties\"></a>  CMDIChildWndEx::SetTaskbarTabProperties  \n Sets properties for a Windows 7 taskbar tab.  \n  \n```  \nvoid SetTaskbarTabProperties(DWORD dwFlags);\n```  \n  \n### Parameters  \n `dwFlags`  \n A combination of STPFLAG values. For more information, see [ITaskbarList4::SetTabProperties](http://msdn.microsoft.com/library/dd562049\\(vs.85\\).aspx).  \n  \n### Remarks  \n  \n##  <a name=\"cmdichildwndex__settaskbartaborder\"></a>  CMDIChildWndEx::SetTaskbarTabOrder  \n Inserts the MDI child before the specified window on Windows 7 taskbar tabs.  \n  \n```  \nvoid SetTaskbarTabOrder(CMDIChildWndEx* pWndBefore = NULL);\n```  \n  \n### Parameters  \n `pWndBefore`  \n A pointer to the MDI child window whose thumbnail is inserted to the left. This window must already be registered through `RegisterTaskbarTab`. If this value is `NULL`, the new thumbnail is added to the end of the list.  \n  \n### Remarks  \n  \n##  <a name=\"cmdichildwndex__settaskbartabactive\"></a>  CMDIChildWndEx::SetTaskbarTabActive  \n Activates the corresponding Windows 7 taskbar tab.  \n  \n```  \nvoid SetTaskbarTabActive();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cmdichildwndex__registertaskbartab\"></a>  CMDIChildWndEx::RegisterTaskbarTab  \n Registers the MDI child with Windows 7 taskbar tabs.  \n  \n```  \nvirtual void RegisterTaskbarTab(CMDIChildWndEx* pWndBefore = NULL);\n```  \n  \n### Parameters  \n `pWndBefore`  \n A pointer to the MDI child window whose thumbnail is inserted to the left. This window must already be registered through `RegisterTaskbarTab`. If this value is `NULL`, the new thumbnail is added to the end of the list.  \n  \n### Remarks  \n  \n##  <a name=\"cmdichildwndex__ontaskbartabthumbnailstretch\"></a>  CMDIChildWndEx::OnTaskbarTabThumbnailStretch  \n Called by the framework when it needs to stretch a bitmap for a Windows 7 taskbar tab thumbnail preview of the MDI child.  \n  \n```  \nvirtual BOOL OnTaskbarTabThumbnailStretch(\n    HBITMAP hBmpDst,  \n    const CRect& rectDst,  \n    HBITMAP hBmpSrc,  \n    const CRect& rectSrc);\n```  \n  \n### Parameters  \n `hBmpDst`  \n A handle to a destination bitmap.  \n  \n `rectDst`  \n Specifies the destination rectangle.  \n  \n `hBmpSrc`  \n A handle to a source bitmap.  \n  \n `rectSrc`  \n Specifies the source rectangle.  \n  \n### Remarks  \n Requirementher or him him him him him him him **:** afxmdichildwndex.h  \n  \n##  <a name=\"cmdichildwndex__ontaskbartabthumbnailmouseactivate\"></a>  CMDIChildWndEx::OnTaskbarTabThumbnailMouseActivate  \n Called by the framework when the Taskbar tab thumbnail should process the WM_MOUSEACTIVATE message.  \n  \n```  \nvirtual int OnTaskbarTabThumbnailMouseActivate(\n    CWnd* pDesktopWnd,  \n    UINT nHitTest,  \n    UINT message);\n```  \n  \n### Parameters  \n `pDesktopWnd`  \n Specifies a pointer to the top-level parent window of the window being activated. The pointer may be temporary and should not be stored.  \n  \n `nHitTest`  \n Specifies the hit-test area code. A hit test is a test that determines the location of the cursor.  \n  \n `message`  \n Specifies the mouse message number.  \n  \n### Remarks  \n The default implementation activates the related MDI child frame.  \n  \n##  <a name=\"cmdichildwndex__ontaskbartabthumbnailactivate\"></a>  CMDIChildWndEx::OnTaskbarTabThumbnailActivate  \n Called by the framework when the Taskbar tab thumbnail should process the WM_ACTIVATE message.  \n  \n```  \nvirtual void OnTaskbarTabThumbnailActivate(\n    UINT nState,  \n    CWnd* pWndOther,  \n    BOOL bMinimized);\n```  \n  \n### Parameters  \n `nState`  \n Specifies whether the `CWnd` is being activated or deactivated.  \n  \n `pWndOther`  \n Pointer to the `CWnd` being activated or deactivated. The pointer can be `NULL`, and it may be temporary.  \n  \n `bMinimized`  \n Specifies the minimized state of the `CWnd` being activated or deactivated. A value of `TRUE` indicates the window is minimized.  \n  \n### Remarks  \n The default implementation activates the related MDI child frame.  \n  \n##  <a name=\"cmdichildwndex__onpresstaskbarthmbnailclosebutton\"></a>  CMDIChildWndEx::OnPressTaskbarThmbnailCloseButton  \n Called by the framework when the user presses the close button on the Taskbar tab thumbnail.  \n  \n```  \nvirtual void OnPressTaskbarThmbnailCloseButton();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cmdichildwndex__ongeticonicthumbnail\"></a>  CMDIChildWndEx::OnGetIconicThumbnail  \n Called by the framework when it needs to obtain a bitmap for the iconic thumbnail of the MDI child.  \n  \n```  \nvirtual HBITMAP OnGetIconicThumbnail(\n    int nWidth,  \n    int nHeight);\n```  \n  \n### Parameters  \n `nWidth`  \n Specifies the width of the required bitmap.  \n  \n `nHeight`  \n Specifies the height of the required bitmap.  \n  \n### Remarks  \n  \n##  <a name=\"cmdichildwndex__ongeticoniclivepreviewbitmap\"></a>  CMDIChildWndEx::OnGetIconicLivePreviewBitmap  \n Called by the framework when it needs to obtain a bitmap for live preview of the MDI child.  \n  \n```  \nvirtual HBITMAP OnGetIconicLivePreviewBitmap(\n    BOOL bIsMDIChildActive,  \n    CPoint& ptLocation);\n```  \n  \n### Parameters  \n `bIsMDIChildActive`  \n This parameter is `TRUE` if the bitmap is requested for the MDI child, which is currently active and the main window is not minimized. The default processing in this case takes a snapshot of the main window.  \n  \n `ptLocation`  \n Specifies the location of the bitmap in the main (top level) window client coordinates. This point should be provided by the callee.  \n  \n### Return Value  \n If processed, returns a handle to a valid 32bpp bitmap, otherwise `NULL`.  \n  \n### Remarks  \n Override this method in a derived class and return a valid 32bpp bitmap for live preview of MDI child. This method is called only when the MDI child is displayed on Windows 7 taskbar tabs. If you return `NULL`, MFC calls the default handlers and obtains bitmaps using `PrintClient` or `PrintWindow`.  \n  \n##  <a name=\"cmdichildwndex__m_dwdefaulttaskbartabpropertyflags\"></a>  CMDIChildWndEx::m_dwDefaultTaskbarTabPropertyFlags  \n A combination of flags, which is passed by the framework to the `SetTaskbarTabProperties` method, when a tab (MDI child) is being registered with Windows 7 taskbar tabs.  \n  \n```  \nAFX_IMPORT_DATA static DWORD m_dwDefaultTaskbarTabPropertyFlags;  \n```  \n  \n### Remarks  \n The default combination is STPF_USEAPPTHUMBNAILWHENACTIVE &#124; STPF_USEAPPPEEKWHENACTIVE.  \n  \n##  <a name=\"cmdichildwndex__istaskbarthumbnailcliprectenabled\"></a>  CMDIChildWndEx::IsTaskbarThumbnailClipRectEnabled  \n Tells whether automatic selection of a portion of a window's client area to display as that window's thumbnail in the taskbar is enabled or disabled.  \n  \n```  \nBOOL IsTaskbarThumbnailClipRectEnabled() const;\n\n \n```  \n  \n### Return Value  \n Returns `TRUE` if automatic selection of a portion of a window's client area to display is enabled; otherwise `FALSE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmdichildwndex__istaskbartabssupportenabled\"></a>  CMDIChildWndEx::IsTaskbarTabsSupportEnabled  \n Tells whether the MDI child can appear on Windows 7 taskbar tabs.  \n  \n```  \nBOOL IsTaskbarTabsSupportEnabled();\n```  \n  \n### Return Value  \n `TRUE` if the MDI child can appear on Windows 7 taskbar tabs; `FALSE` if the MDI child can not appear on Windows 7 taskbar tabs.  \n  \n### Remarks  \n  \n##  <a name=\"cmdichildwndex__isregisteredwithtaskbartabs\"></a>  CMDIChildWndEx::IsRegisteredWithTaskbarTabs  \n Returns `TRUE` if the MDI child was successfully registered with Windows 7 taskbar tabs.  \n  \n```  \nBOOL IsRegisteredWithTaskbarTabs();\n```  \n  \n### Return Value  \n `TRUE` if the MDI child is registered with Windows 7 taskbar tabs; otherwise `FALSE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmdichildwndex__invalidateiconicbitmaps\"></a>  CMDIChildWndEx::InvalidateIconicBitmaps  \n Invalidates an iconic bitmap representation of a MDI child.  \n  \n```  \nBOOL InvalidateIconicBitmaps();\n```  \n  \n### Return Value  \n Returns `FALSE` if Windows 7 taskbar support is disabled or the MDI child is not registered with Windows 7 taskbar tabs; otherwise returns `TRUE`.  \n  \n### Remarks  \n Should be called when the live content or size of a MDI child has changed.  \n  \n##  <a name=\"cmdichildwndex__gettaskbarthumbnailcliprect\"></a>  CMDIChildWndEx::GetTaskbarThumbnailClipRect  \n Called by the framework when it needs to select a portion of a window's client area to display as that window's thumbnail in the taskbar.  \n  \n```  \nvirtual CRect GetTaskbarThumbnailClipRect() const;\n\n \n```  \n  \n### Return Value  \n A rectangle in windows coordinates. This rectangle is mapped to the client area of the top level frame. The rectangle should be empty to clear the clipping rectangle.  \n  \n### Remarks  \n  \n##  <a name=\"cmdichildwndex__gettaskbarpreviewwnd\"></a>  CMDIChildWndEx::GetTaskbarPreviewWnd  \n Called by the framework when it needs to obtain a child window (usually a view or splitter window) to be displayed on a Windows 7 taskbar tab thumbnail.  \n  \n```  \nvirtual CWnd* GetTaskbarPreviewWnd();\n```  \n  \n### Return Value  \n Should return a valid pointer to a `CWnd` object, whose preview should be displayed on a Windows 7 taskbar tab related to this MDI child. The default implementation returns a child window of this MDI child with AFX_IDW_PANE_FIRST control ID (which is usually a `CView`-derived class).  \n  \n### Remarks  \n  \n##  <a name=\"cmdichildwndex__gettabproxywnd\"></a>  CMDIChildWndEx::GetTabProxyWnd  \n Returns the tab proxy window registered with Windows 7 taskbar tabs.  \n  \n```  \nCMDITabProxyWnd* GetTabProxyWnd();\n```  \n  \n### Return Value  \n A pointer to a `CMDITabProxyWnd` object, which is registered with Windows 7 taskbar tabs.  \n  \n### Remarks  \n  \n##  <a name=\"cmdichildwndex__enabletaskbarthumbnailcliprect\"></a>  CMDIChildWndEx::EnableTaskbarThumbnailClipRect  \n Enables or disables automatic selection of a portion of a window's client area to display as that window's thumbnail in the taskbar.  \n  \n```  \nvoid EnableTaskbarThumbnailClipRect(BOOL bEnable = TRUE);\n```  \n  \n### Parameters  \n `bEnable`  \n Specifies whether to enable ( `TRUE`), or disable ( `FALSE`) automatic selection of a portion of a window's client area to display.  \n  \n### Remarks  \n  \n##  <a name=\"cmdichildwndex__canshowontaskbartabs\"></a>  CMDIChildWndEx::CanShowOnTaskBarTabs  \n Tells the framework whether this MDI child can be displayed on Windows 7 taskbar tabs.  \n  \n```  \nvirtual BOOL CanShowOnTaskBarTabs();\n```  \n  \n### Return Value  \n `TRUE` if the content of the MDI child can be displayed on Windows 7 taskbar thumbnails.  \n  \n### Remarks  \n Override this method in a derived class and return `FALSE` to disable the appearance of this MDI child on Windows 7 taskbar tabs.  \n  \n##  <a name=\"cmdichildwndex__activatetoplevelframe\"></a>  CMDIChildWndEx::ActivateTopLevelFrame  \n Called by the framework to activate the top level frame when the application is activated from a taskbar tab.  \n  \n```  \nvirtual void ActivateTopLevelFrame();\n```  \n  \n### Remarks  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)   \n [CMDIChildWnd Class](../../mfc/reference/cmdichildwnd-class.md)   \n [CMFCWindowsManagerDialog Class](../../mfc/reference/cmfcwindowsmanagerdialog-class.md)   \n [CMDIFrameWndEx Class](../../mfc/reference/cmdiframewndex-class.md)\n"}