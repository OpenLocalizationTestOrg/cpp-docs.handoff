{"nodes":[{"pos":[12,42],"content":"float_control | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"float_control | Microsoft Docs","pos":[0,30]}]},{"content":"float_control","pos":[677,690]},{"content":"Specifies floating-point behavior for a function.","pos":[691,740]},{"content":"Syntax","pos":[749,755]},{"content":"Flags","pos":[832,837]},{"content":"<bpt id=\"p1\">*</bpt>,<ept id=\"p1\">*</ept> <ph id=\"ph1\">`setting`</ph> <bpt id=\"p2\">**</bpt>[push]<ept id=\"p2\">**</ept>","pos":[849,873],"source":"*,* `setting` **[push]**"},{"content":"Specifies floating-point behavior.","pos":[877,911]},{"content":"can be <bpt id=\"p1\">**</bpt>precise<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>except<ept id=\"p2\">**</ept>.","pos":[920,953],"source":" can be **precise** or **except**."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>/fp (Specify Floating-Point Behavior)<ept id=\"p1\">](../build/reference/fp-specify-floating-point-behavior.md)</ept>.","pos":[954,1078],"source":" For more information, see [/fp (Specify Floating-Point Behavior)](../build/reference/fp-specify-floating-point-behavior.md)."},{"content":"can either be <bpt id=\"p1\">**</bpt>on<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>off<ept id=\"p2\">**</ept>.","pos":[1089,1121],"source":" can either be **on** or **off**."},{"content":"If <ph id=\"ph1\">`value`</ph> is <bpt id=\"p1\">**</bpt>precise<ept id=\"p1\">**</ept>, the settings for <bpt id=\"p2\">**</bpt>precise<ept id=\"p2\">**</ept> and <bpt id=\"p3\">**</bpt>except<ept id=\"p3\">**</ept> are being specified.","pos":[1128,1219],"source":"If `value` is **precise**, the settings for **precise** and **except** are being specified."},{"content":"<bpt id=\"p1\">**</bpt>except<ept id=\"p1\">**</ept> can only be set to <bpt id=\"p2\">**</bpt>on<ept id=\"p2\">**</ept> when <bpt id=\"p3\">**</bpt>precise<ept id=\"p3\">**</ept> is also set to <bpt id=\"p4\">**</bpt>on<ept id=\"p4\">**</ept>.","pos":[1220,1296],"source":"**except** can only be set to **on** when **precise** is also set to **on**."},{"pos":[1303,1420],"content":"If the optional <bpt id=\"p1\">**</bpt>push<ept id=\"p1\">**</ept> token is added, the current setting for <ph id=\"ph1\">`value`</ph> is pushed on to the internal compiler stack.","source":"If the optional **push** token is added, the current setting for `value` is pushed on to the internal compiler stack."},{"content":"push","pos":[1429,1433]},{"content":"Push the current <ph id=\"ph1\">`float_control`</ph> setting on to the internal compiler stack","pos":[1439,1513],"source":" Push the current `float_control` setting on to the internal compiler stack"},{"content":"pop","pos":[1522,1525]},{"content":"Removes the<ph id=\"ph1\">`float_control`</ph> setting from the top of the internal compiler stack and makes that the new <ph id=\"ph2\">`float_control`</ph> setting.","pos":[1531,1657],"source":" Removes the`float_control` setting from the top of the internal compiler stack and makes that the new `float_control` setting."},{"content":"Remarks","pos":[1666,1673]},{"content":"You cannot turn <ph id=\"ph1\">`float_control precise`</ph> off when <bpt id=\"p1\">**</bpt>except<ept id=\"p1\">**</ept> is on.","pos":[1677,1743],"source":"You cannot turn `float_control precise` off when **except** is on."},{"content":"Similarly, <bpt id=\"p1\">**</bpt>precise<ept id=\"p1\">**</ept> cannot be turned off when <ph id=\"ph1\">`fenv_access`</ph> is on.","pos":[1744,1813],"source":" Similarly, **precise** cannot be turned off when `fenv_access` is on."},{"content":"To go from strict model to a fast model with the <ph id=\"ph1\">`float_control`</ph> pragma, use the following code:","pos":[1814,1910],"source":" To go from strict model to a fast model with the `float_control` pragma, use the following code:"},{"pos":[2116,2212],"content":"To go from fast model to a strict model with the <ph id=\"ph1\">`float_control`</ph> pragma, use the following code:","source":"To go from fast model to a strict model with the `float_control` pragma, use the following code:"},{"content":"Other floating-point pragmas include:","pos":[2417,2454]},{"content":"fenv_access","pos":[2465,2476]},{"content":"fp_contract","pos":[2520,2531]},{"content":"Example","pos":[2573,2580]},{"pos":[2584,2693],"content":"The following sample shows how to catch an overflow floating-point exception by using pragma <ph id=\"ph1\">`float_control`</ph>.","source":"The following sample shows how to catch an overflow floating-point exception by using pragma `float_control`."},{"content":"See Also","pos":[3331,3339]},{"content":"Pragma Directives and the __Pragma Keyword","pos":[3344,3386]}],"content":"---\ntitle: \"float_control | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"vc-pragma.float_control\"\n  - \"float_control_CPP\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"float_control pragma\"\n  - \"pragmas, float_control\"\nms.assetid: 4f4ba5cf-3707-413e-927d-5ecdbc0a9a43\ncaps.latest.revision: 11\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# float_control\nSpecifies floating-point behavior for a function.  \n  \n## Syntax  \n  \n```  \nfloat_control( value,setting [push] | push | pop )  \n```  \n  \n## Flags  \n `value` *,* `setting` **[push]**  \n Specifies floating-point behavior. `value` can be **precise** or **except**. For more information, see [/fp (Specify Floating-Point Behavior)](../build/reference/fp-specify-floating-point-behavior.md). `setting` can either be **on** or **off**.  \n  \n If `value` is **precise**, the settings for **precise** and **except** are being specified. **except** can only be set to **on** when **precise** is also set to **on**.  \n  \n If the optional **push** token is added, the current setting for `value` is pushed on to the internal compiler stack.  \n  \n **push**  \n Push the current `float_control` setting on to the internal compiler stack  \n  \n **pop**  \n Removes the`float_control` setting from the top of the internal compiler stack and makes that the new `float_control` setting.  \n  \n## Remarks  \n You cannot turn `float_control precise` off when **except** is on. Similarly, **precise** cannot be turned off when `fenv_access` is on. To go from strict model to a fast model with the `float_control` pragma, use the following code:  \n  \n```  \n#pragma float_control(except, off)  \n#pragma fenv_access(off)  \n#pragma float_control(precise, off)  \n// The following line is needed on Itanium processors  \n#pragma fp_contract(on)  \n```  \n  \n To go from fast model to a strict model with the `float_control` pragma, use the following code:  \n  \n```  \n#pragma float_control(precise, on)  \n#pragma fenv_access(on)  \n#pragma float_control(except, on)  \n// The following line is needed on Itanium processors.  \n#pragma fp_contract(off)  \n```  \n  \n Other floating-point pragmas include:  \n  \n-   [fenv_access](../preprocessor/fenv-access.md)  \n  \n-   [fp_contract](../preprocessor/fp-contract.md)  \n  \n## Example  \n The following sample shows how to catch an overflow floating-point exception by using pragma `float_control`.  \n  \n```  \n// pragma_directive_float_control.cpp  \n// compile with: /EHa  \n#include <stdio.h>  \n#include <float.h>  \n  \ndouble func( ) {  \n   return 1.1e75;  \n}  \n  \n#pragma float_control (except,on)  \n  \nint main( ) {  \n   float u[1];  \n   unsigned int currentControl;  \n   errno_t err;  \n  \n   err = _controlfp_s(&currentControl, ~_EM_OVERFLOW, _MCW_EM);  \n   if (err != 0)  \n      printf_s(\"_controlfp_s failed!\\n\");  \n  \n   try  {  \n      u[0] = func();  \n      printf_s (\"Fail\");     \n      return(1);  \n   }   \n  \n   catch (...)  {  \n      printf_s (\"Pass\");  \n      return(0);  \n   }  \n}  \n```  \n  \n```Output  \nPass  \n```  \n  \n## See Also  \n [Pragma Directives and the __Pragma Keyword](../preprocessor/pragma-directives-and-the-pragma-keyword.md)"}