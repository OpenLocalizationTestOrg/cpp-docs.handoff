<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">87ab3c11b44bf70dd5a88af316c012cb0ee05dea</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\parallel\openmp\2-3-parallel-construct.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ff636bbe9076af578eb4f5064a770017c4f8bf8a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1d53ddf4a44dbae0ef8cb5bcf819ac0942bb5e5a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>2.3 parallel Construct | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>2.3 parallel Construct</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following directive defines a parallel region, which is a region of the program that is to be executed by multiple threads in parallel.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This is the fundamental construct that starts parallel execution.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>clause<ept id="p1">*</ept> is one of the following:</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>if(<ept id="p1">**</ept> <bpt id="p2">*</bpt>scalar-expression<ept id="p2">*</ept> <bpt id="p3">**</bpt>)<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>private(<ept id="p1">**</ept> <bpt id="p2">*</bpt>variable-list<ept id="p2">*</ept> <bpt id="p3">**</bpt>)<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>firstprivate(<ept id="p1">**</ept> <bpt id="p2">*</bpt>variable-list<ept id="p2">*</ept> <bpt id="p3">**</bpt>)<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>default(shared &amp;#124; none)</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>shared(<ept id="p1">**</ept> <bpt id="p2">*</bpt>variable-list<ept id="p2">*</ept> <bpt id="p3">**</bpt>)<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>copyin(<ept id="p1">**</ept> <bpt id="p2">*</bpt>variable-list<ept id="p2">*</ept> <bpt id="p3">**</bpt>)<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>reduction(<ept id="p1">**</ept> <bpt id="p2">*</bpt>operator<ept id="p2">*</ept> <bpt id="p3">**</bpt>:<ept id="p3">**</ept>  <bpt id="p4">*</bpt>variable-list<ept id="p4">*</ept> <bpt id="p5">**</bpt>)<ept id="p5">**</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>num_threads(<ept id="p1">**</ept> <bpt id="p2">*</bpt>integer-expression<ept id="p2">*</ept> <bpt id="p3">**</bpt>)<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When a thread encounters a parallel construct, a team of threads is created if one of the following cases is true:</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>No <bpt id="p1">**</bpt>if<ept id="p1">**</ept> clause is present.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>if<ept id="p1">**</ept> expression evaluates to a nonzero value.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This thread becomes the master thread of the team, with a thread number of 0, and all threads in the team, including the master thread, execute the region in parallel.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If the value of the <bpt id="p1">**</bpt>if<ept id="p1">**</ept> expression is zero, the region is serialized.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To determine the number of threads that are requested, the following rules will be considered in order.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The first rule whose condition is met will be applied:</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">**</bpt>num_threads<ept id="p1">**</ept> clause is present, then the value of the integer expression is the number of threads requested.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">**</bpt>omp_set_num_threads<ept id="p1">**</ept> library function has been called, then the value of the argument in the most recently executed call is the number of threads requested.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If the environment variable <bpt id="p1">**</bpt>OMP_NUM_THREADS<ept id="p1">**</ept> is defined, then the value of this environment variable is the number of threads requested.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If none of the methods above were used, then the number of threads requested is implementation-defined.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">**</bpt>num_threads<ept id="p1">**</ept> clause is present then it supersedes the number of threads requested by the <bpt id="p2">**</bpt>omp_set_num_threads<ept id="p2">**</ept> library function or the <bpt id="p3">**</bpt>OMP_NUM_THREADS<ept id="p3">**</ept> environment variable only for the parallel region it is applied to.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Subsequent parallel regions are not affected by it.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The number of threads that execute the parallel region also depends upon whether or not dynamic adjustment of the number of threads is enabled.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If dynamic adjustment is disabled, then the requested number of threads will execute the parallel region.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If dynamic adjustment is enabled then the requested number of threads is the maximum number of threads that may execute the parallel region.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If a parallel region is encountered while dynamic adjustment of the number of threads is disabled, and the number of threads requested for the parallel region exceeds the number that the run-time system can supply, the behavior of the program is implementation-defined.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An implementation may, for example, interrupt the execution of the program, or it may serialize the parallel region.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>omp_set_dynamic<ept id="p1">**</ept> library function and the <bpt id="p2">**</bpt>OMP_DYNAMIC<ept id="p2">**</ept> environment variable can be used to enable and disable dynamic adjustment of the number of threads.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The number of physical processors actually hosting the threads at any given time is implementation-defined.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Once created, the number of threads in the team remains constant for the duration of that parallel region.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>It can be changed either explicitly by the user or automatically by the run-time system from one parallel region to another.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The statements contained within the dynamic extent of the parallel region are executed by each thread, and each thread can execute a path of statements that is different from the other threads.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Directives encountered outside the lexical extent of a parallel region are referred to as orphaned directives.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>There is an implied barrier at the end of a parallel region.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Only the master thread of the team continues execution at the end of a parallel region.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If a thread in a team executing a parallel region encounters another parallel construct, it creates a new team, and it becomes the master of that new team.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Nested parallel regions are serialized by default.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>As a result, by default, a nested parallel region is executed by a team composed of one thread.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The default behavior may be changed by using either the runtime library function <bpt id="p1">**</bpt>omp_set_nested<ept id="p1">**</ept> or the environment variable <bpt id="p2">**</bpt>OMP_NESTED<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>However, the number of threads in a team that execute a nested parallel region is implementation-defined.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Restrictions to the <bpt id="p1">**</bpt>parallel<ept id="p1">**</ept> directive are as follows:</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>At most one <bpt id="p1">**</bpt>if<ept id="p1">**</ept> clause can appear on the directive.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>It is unspecified whether any side effects inside the if expression or <bpt id="p1">**</bpt>num_threads<ept id="p1">**</ept> expression occur.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>throw<ept id="p1">**</ept> executed inside a parallel region must cause execution to resume within the dynamic extent of the same structured block, and it must be caught by the same thread that threw the exception.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Only a single <bpt id="p1">**</bpt>num_threads<ept id="p1">**</ept> clause can appear on the directive.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>num_threads<ept id="p1">**</ept> expression is evaluated outside the context of the parallel region, and must evaluate to a positive integer value.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The order of evaluation of the <bpt id="p1">**</bpt>if<ept id="p1">**</ept> and <bpt id="p2">**</bpt>num_threads<ept id="p2">**</ept> clauses is unspecified.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Cross References:</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>private<ept id="p1">**</ept>, <bpt id="p2">**</bpt>firstprivate<ept id="p2">**</ept>, <bpt id="p3">**</bpt>default<ept id="p3">**</ept>, <bpt id="p4">**</bpt>shared<ept id="p4">**</ept>, <bpt id="p5">**</bpt>copyin<ept id="p5">**</ept>, and <bpt id="p6">**</bpt>reduction<ept id="p6">**</ept> clauses, see <bpt id="p7">[</bpt>Section 2.7.2<ept id="p7">](../../parallel/openmp/2-7-2-data-sharing-attribute-clauses.md)</ept> on page 25.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>OMP_NUM_THREADS<ept id="p1">**</ept> environment variable, <bpt id="p2">[</bpt>Section 4.2<ept id="p2">](../../parallel/openmp/4-2-omp-num-threads.md)</ept> on page 48.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>omp_set_dynamic<ept id="p1">**</ept> library function, see <bpt id="p2">[</bpt>Section 3.1.7<ept id="p2">](../../parallel/openmp/3-1-7-omp-set-dynamic-function.md)</ept> on page 39.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>OMP_DYNAMIC<ept id="p1">**</ept> environment variable, see <bpt id="p2">[</bpt>Section 4.3<ept id="p2">](../../parallel/openmp/4-3-omp-dynamic.md)</ept> on page 49.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>omp_set_nested<ept id="p1">**</ept> function, see <bpt id="p2">[</bpt>Section 3.1.9<ept id="p2">](../../parallel/openmp/3-1-9-omp-set-nested-function.md)</ept> on page 40.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>OMP_NESTED<ept id="p1">**</ept> environment variable, see <bpt id="p2">[</bpt>Section 4.4<ept id="p2">](../../parallel/openmp/4-4-omp-nested.md)</ept> on page 49.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>omp_set_num_threads<ept id="p1">**</ept> library function, see <bpt id="p2">[</bpt>Section 3.1.1<ept id="p2">](../../parallel/openmp/3-1-1-omp-set-num-threads-function.md)</ept> on page 36.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>