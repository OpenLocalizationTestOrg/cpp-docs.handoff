{"nodes":[{"pos":[12,49],"content":"Compiler Error C2992 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C2992 | Microsoft Docs","pos":[0,37]}]},{"content":"Compiler Error C2992","pos":[619,639]},{"content":"'class' : invalid or missing type parameter list","pos":[640,688]},{"pos":[695,791],"content":"The class is preceded by a <ph id=\"ph1\">`template`</ph> or <bpt id=\"p1\">**</bpt>generic<ept id=\"p1\">**</ept> keyword with missing or invalid parameters.","source":"The class is preceded by a `template` or **generic** keyword with missing or invalid parameters."},{"content":"Example","pos":[800,807]},{"content":"The following sample generates C2992:","pos":[811,848]}],"content":"---\ntitle: \"Compiler Error C2992 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"C2992\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C2992\"\nms.assetid: 01b16447-43fe-4e91-9a5a-af884a166a31\ncaps.latest.revision: 11\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Compiler Error C2992\n'class' : invalid or missing type parameter list  \n  \n The class is preceded by a `template` or **generic** keyword with missing or invalid parameters.  \n  \n## Example  \n The following sample generates C2992:  \n  \n```  \n// C2992.cpp  \n// compile with: /c  \ntemplate <class T>   \nstruct TC1 {  \n   template <class U>  \n   struct TC2;  \n};  \n  \ntemplate <class T>   struct TC1<T>::TC2 {};   // C2992  \n  \n// OK  \ntemplate <class T>  \ntemplate <class U>  \nstruct TC1<T>::TC2 {};  \n // C2992 can also occur when using generics:  \n// C2992c.cpp  \n// compile with: /clr /c  \ngeneric <class T>  \nref struct GC1 {  \n   generic <class U>  \n   ref struct GC2;  \n};  \n  \ngeneric <class T> ref struct GC1<T>::GC2 {};   // C2992  \n  \n// OK  \ngeneric <class T>  \ngeneric <class U>  \nref struct GC1<T>::GC2 {};  \n```"}