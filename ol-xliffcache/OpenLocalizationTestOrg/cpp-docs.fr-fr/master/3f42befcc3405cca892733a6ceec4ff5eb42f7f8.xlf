<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3f42befcc3405cca892733a6ceec4ff5eb42f7f8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\build\concepts-of-isolated-applications-and-side-by-side-assemblies.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">929825c9b92e845e34740dbaa560f0ffce61e7ab</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3dc5f0efa9056e0314def187fabc7db431432b85</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Concepts of Isolated Applications and Side-by-side Assemblies | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Concepts of Isolated Applications and Side-by-side Assemblies</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>An application is considered an <bpt id="p1">[</bpt>isolated application<ept id="p1">](http://msdn.microsoft.com/library/aa375190)</ept> if all of its components are <bpt id="p2">[</bpt>side-by-side assemblies<ept id="p2">](http://msdn.microsoft.com/library/ff951640)</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A side-by-side assembly is a collection of resources—a group of DLLs, windows classes, COM servers, type libraries, or interfaces—that are deployed together and made available for an application to use at run time.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Typically, a side-by-side assembly is one to several DLLs.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Shared or private</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A side-by-side assembly can be either shared or private.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Shared side-by-side assemblies<ept id="p1">](https://msdn.microsoft.com/en-us/library/aa375996.aspx)</ept> may be used by multiple applications that specify, in their manifests, a dependence on the assembly.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Multiple versions of a side-by-side assembly can be shared by different applications that are running at the same time.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>private assembly<ept id="p1">](http://msdn.microsoft.com/library/ff951638)</ept> is an assembly that is deployed together with an application for the exclusive use of that application.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Private assemblies are installed in the folder that contains the application's executable file or one of its subfolders.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Manifests and search order</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Both isolated applications and side-by-side assemblies are described by <bpt id="p1">[</bpt>manifests<ept id="p1">](http://msdn.microsoft.com/library/aa375365)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A manifest is an XML document that can be an external file or can be embedded in an application or an assembly as a resource.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The manifest file of an isolated application is used to manage the names and versions of shared side-by-side assemblies to which the application should bind at run time.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The manifest of a side-by-side assembly specifies names, versions, resources, and dependent assemblies of side-by-side assemblies.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For a shared side-by-side assembly, its manifest is installed in the %WINDIR%\WinSxS\Manifests\ folder.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In the case of a private assembly, we recommend that you include its manifest in the DLL as a resource that has an ID equal to 1.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can also give the private assembly the same name as that of the DLL.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>About Private Assemblies<ept id="p1">](http://msdn.microsoft.com/library/ff951638)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>At execution time, Windows uses assembly information from the application manifest to search and load the corresponding side-by-side assembly.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If an isolated application specifies an assembly dependency, the operating system first searches for the assembly among the shared assemblies in the native assembly cache in the %WINDIR%\WinSxS\ folder.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If the required assembly is not found, the operating system then searches for a private assembly in a folder of the application's directory structure.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Assembly Searching Sequence<ept id="p1">](http://msdn.microsoft.com/library/aa374224)</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Changing dependencies</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can change side-by-side assembly dependencies after an application has been deployed by modifying the <bpt id="p1">[</bpt>Publisher Configuration Files<ept id="p1">](http://msdn.microsoft.com/library/aa375682)</ept> and <bpt id="p2">[</bpt>Application Configuration Files<ept id="p2">](http://msdn.microsoft.com/library/aa374182)</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A publisher configuration file, also known as a publisher policy file, is an XML file that globally redirects applications and assemblies from using one version of a side-by-side assembly to using another version of the same assembly.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For example, you could change a dependency when a bug fix or security fix is deployed for a side-by-side assembly and you want to redirect all applications to use the fixed version.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An application configuration file is an XML file that redirects a specific application from using one version of a side-by-side assembly to using another version of the same assembly.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can use an application configuration file to redirect a particular application to use a version of a side-by-side assembly that's different from the one that's defined in the publisher configuration file.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Configuration<ept id="p1">](http://msdn.microsoft.com/library/aa375123)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Visual C++ libraries</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In Visual Studio 2005 and Visual Studio 2008, redistributable libraries such as ATL, MFC, CRT, Standard C++, OpenMP, and MSDIA were deployed as shared side-by-side assemblies to the native assembly cache.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In the current version, the redistributable libraries use central deployment.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>By default, all applications that are built by using Visual C++ are built with the manifest embedded in the final binary, and the manifest describes the dependencies of the binary on the Visual C++ libraries.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To understand manifest generation for Visual C++ applications, see <bpt id="p1">[</bpt>Understanding Manifest Generation for C/C++ Programs<ept id="p1">](../build/understanding-manifest-generation-for-c-cpp-programs.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A manifest is not required for applications that are statically linked to the libraries that they use, or that use local deployment.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For more information about deployment, see <bpt id="p1">[</bpt>Deployment in Visual C++<ept id="p1">](../ide/deployment-in-visual-cpp.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Building C/C++ Isolated Applications and Side-by-side Assemblies</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>