{"nodes":[{"pos":[12,47],"content":"missing_wait Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"missing_wait Class | Microsoft Docs","pos":[0,35]}]},{"content":"missing_wait Class","pos":[628,646]},{"content":"This class describes an exception thrown when there are tasks still scheduled to a <ph id=\"ph1\">`task_group`</ph> or <ph id=\"ph2\">`structured_task_group`</ph> object at the time that object's destructor executes.","pos":[647,823],"source":"This class describes an exception thrown when there are tasks still scheduled to a `task_group` or `structured_task_group` object at the time that object's destructor executes."},{"content":"This exception will never be thrown if the destructor is reached because of a stack unwinding as the result of an exception.","pos":[824,948]},{"content":"Syntax","pos":[957,963]},{"content":"Members","pos":[1029,1036]},{"content":"Public Constructors","pos":[1046,1065]},{"content":"Name","pos":[1072,1076]},{"content":"Description","pos":[1077,1088]},{"content":"missing_wait::missing_wait Constructor","pos":[1127,1165]},{"content":"Overloaded.","pos":[1174,1185]},{"content":"Constructs a <ph id=\"ph1\">`missing_wait`</ph> object.","pos":[1186,1221],"source":" Constructs a `missing_wait` object."},{"content":"Remarks","pos":[1231,1238]},{"content":"Absent exception flow, you are responsible for calling either the <ph id=\"ph1\">`wait`</ph> or <ph id=\"ph2\">`run_and_wait`</ph> method of a <ph id=\"ph3\">`task_group`</ph> or <ph id=\"ph4\">`structured_task_group`</ph> object before allowing that object to destruct.","pos":[1242,1432],"source":"Absent exception flow, you are responsible for calling either the `wait` or `run_and_wait` method of a `task_group` or `structured_task_group` object before allowing that object to destruct."},{"content":"The runtime throws this exception as an indication that you forgot to call the <ph id=\"ph1\">`wait`</ph> or <ph id=\"ph2\">`run_and_wait`</ph> method.","pos":[1433,1544],"source":" The runtime throws this exception as an indication that you forgot to call the `wait` or `run_and_wait` method."},{"content":"Inheritance Hierarchy","pos":[1553,1574]},{"content":"Requirements","pos":[1619,1631]},{"pos":[1635,1655],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> concrt.h","source":"**Header:** concrt.h"},{"pos":[1662,1688],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> concurrency","source":"**Namespace:** concurrency"},{"pos":[1719,1757],"content":"missing_wait::missing_wait Constructor"},{"pos":[1761,1796],"content":"Constructs a <ph id=\"ph1\">`missing_wait`</ph> object.","source":"Constructs a `missing_wait` object."},{"content":"Parameters","pos":[1912,1922]},{"content":"A descriptive message of the error.","pos":[1940,1975]},{"content":"See Also","pos":[1984,1992]},{"content":"concurrency Namespace","pos":[1997,2018]},{"content":"task_group Class","pos":[2051,2067]},{"content":"task_group::wait Method","pos":[2095,2118]},{"content":"task_group::run_and_wait Method","pos":[2146,2177]},{"content":"structured_task_group Class","pos":[2205,2232]}],"content":"---\ntitle: \"missing_wait Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"concrt/concurrency::missing_wait\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"missing_wait class\"\nms.assetid: ff981875-bd43-47e3-806f-b03c9f418b18\ncaps.latest.revision: 19\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# missing_wait Class\nThis class describes an exception thrown when there are tasks still scheduled to a `task_group` or `structured_task_group` object at the time that object's destructor executes. This exception will never be thrown if the destructor is reached because of a stack unwinding as the result of an exception.  \n  \n## Syntax  \n  \n```\nclass missing_wait : public std::exception;\n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[missing_wait::missing_wait Constructor](#ctor)|Overloaded. Constructs a `missing_wait` object.|  \n  \n## Remarks  \n Absent exception flow, you are responsible for calling either the `wait` or `run_and_wait` method of a `task_group` or `structured_task_group` object before allowing that object to destruct. The runtime throws this exception as an indication that you forgot to call the `wait` or `run_and_wait` method.  \n  \n## Inheritance Hierarchy  \n `exception`  \n  \n `missing_wait`  \n  \n## Requirements  \n **Header:** concrt.h  \n  \n **Namespace:** concurrency  \n  \n##  <a name=\"ctor\"></a>  missing_wait::missing_wait Constructor  \n Constructs a `missing_wait` object.  \n  \n```\nexplicit _CRTIMP missing_wait(_In_z_ const char* _Message) throw();\n\nmissing_wait() throw();\n```  \n  \n### Parameters  \n `_Message`  \n A descriptive message of the error.  \n  \n## See Also  \n [concurrency Namespace](concurrency-namespace.md)   \n [task_group Class](task-group-class.md)   \n [task_group::wait Method](task-group-class.md)   \n [task_group::run_and_wait Method](task-group-class.md)   \n [structured_task_group Class](structured-task-group-class.md)\n"}