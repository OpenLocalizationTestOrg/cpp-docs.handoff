{"nodes":[{"pos":[12,53],"content":"COleDispatchDriver Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"COleDispatchDriver Class | Microsoft Docs","pos":[0,41]}]},{"content":"COleDispatchDriver Class","pos":[707,731]},{"content":"Implements the client side of OLE automation.","pos":[732,777]},{"content":"Syntax","pos":[786,792]},{"content":"Members","pos":[843,850]},{"content":"Public Constructors","pos":[860,879]},{"content":"Name","pos":[886,890]},{"content":"Description","pos":[891,902]},{"content":"COleDispatchDriver::COleDispatchDriver","pos":[941,979]},{"pos":[1022,1063],"content":"Constructs a <ph id=\"ph1\">`COleDispatchDriver`</ph> object.","source":"Constructs a `COleDispatchDriver` object."},{"content":"Public Methods","pos":[1074,1088]},{"content":"Name","pos":[1095,1099]},{"content":"Description","pos":[1100,1111]},{"content":"COleDispatchDriver::AttachDispatch","pos":[1150,1184]},{"pos":[1223,1293],"content":"Attaches an <ph id=\"ph1\">`IDispatch`</ph> connection to the <ph id=\"ph2\">`COleDispatchDriver`</ph> object.","source":"Attaches an `IDispatch` connection to the `COleDispatchDriver` object."},{"content":"COleDispatchDriver::CreateDispatch","pos":[1299,1333]},{"pos":[1372,1457],"content":"Creates an <ph id=\"ph1\">`IDispatch`</ph> connection and attaches it to the <ph id=\"ph2\">`COleDispatchDriver`</ph> object.","source":"Creates an `IDispatch` connection and attaches it to the `COleDispatchDriver` object."},{"content":"COleDispatchDriver::DetachDispatch","pos":[1463,1497]},{"pos":[1536,1593],"content":"Detaches an <ph id=\"ph1\">`IDispatch`</ph> connection, without releasing it.","source":"Detaches an `IDispatch` connection, without releasing it."},{"content":"COleDispatchDriver::GetProperty","pos":[1599,1630]},{"content":"Gets an automation property.","pos":[1666,1694]},{"content":"COleDispatchDriver::InvokeHelper","pos":[1700,1732]},{"content":"Helper for calling automation methods.","pos":[1769,1807]},{"content":"COleDispatchDriver::ReleaseDispatch","pos":[1813,1848]},{"pos":[1888,1923],"content":"Releases an <ph id=\"ph1\">`IDispatch`</ph> connection.","source":"Releases an `IDispatch` connection."},{"content":"COleDispatchDriver::SetProperty","pos":[1929,1960]},{"content":"Sets an automation property.","pos":[1996,2024]},{"content":"Public Operators","pos":[2035,2051]},{"content":"Name","pos":[2058,2062]},{"content":"Description","pos":[2063,2074]},{"content":"COleDispatchDriver::operator =","pos":[2113,2143]},{"pos":[2180,2241],"content":"Copies the source value into the <ph id=\"ph1\">`COleDispatchDriver`</ph> object.","source":"Copies the source value into the `COleDispatchDriver` object."},{"content":"COleDispatchDriver::operator LPDISPATCH","pos":[2247,2286]},{"pos":[2330,2374],"content":"Accesses the underlying <ph id=\"ph1\">`IDispatch`</ph> pointer.","source":"Accesses the underlying `IDispatch` pointer."},{"content":"Public Data Members","pos":[2385,2404]},{"content":"Name","pos":[2411,2415]},{"content":"Description","pos":[2416,2427]},{"content":"COleDispatchDriver::m_bAutoRelease","pos":[2466,2500]},{"pos":[2539,2631],"content":"Specifies whether to release the <ph id=\"ph1\">`IDispatch`</ph> during <ph id=\"ph2\">`ReleaseDispatch`</ph> or object destruction.","source":"Specifies whether to release the `IDispatch` during `ReleaseDispatch` or object destruction."},{"content":"COleDispatchDriver::m_lpDispatch","pos":[2637,2669]},{"pos":[2706,2795],"content":"Indicates the pointer to the <ph id=\"ph1\">`IDispatch`</ph> interface attached to this <ph id=\"ph2\">`COleDispatchDriver`</ph>.","source":"Indicates the pointer to the `IDispatch` interface attached to this `COleDispatchDriver`."},{"content":"Remarks","pos":[2805,2812]},{"pos":[2837,2864],"content":"does not have a base class."},{"content":"OLE dispatch interfaces provide access to an object's methods and properties.","pos":[2871,2948]},{"content":"Member functions of <ph id=\"ph1\">`COleDispatchDriver`</ph> attach, detach, create, and release a dispatch connection of type <ph id=\"ph2\">`IDispatch`</ph>.","pos":[2949,3068],"source":" Member functions of `COleDispatchDriver` attach, detach, create, and release a dispatch connection of type `IDispatch`."},{"content":"Other member functions use variable argument lists to simplify calling <bpt id=\"p1\">**</bpt>IDispatch::Invoke<ept id=\"p1\">**</ept>.","pos":[3069,3162],"source":" Other member functions use variable argument lists to simplify calling **IDispatch::Invoke**."},{"content":"This class can be used directly, but it is generally used only by classes created by the Add Class wizard.","pos":[3169,3275]},{"content":"When you create new C++ classes by importing a type library, the new classes are derived from <ph id=\"ph1\">`COleDispatchDriver`</ph>.","pos":[3276,3391],"source":" When you create new C++ classes by importing a type library, the new classes are derived from `COleDispatchDriver`."},{"pos":[3398,3477],"content":"For more information on using <ph id=\"ph1\">`COleDispatchDriver`</ph>, see the following articles:","source":"For more information on using `COleDispatchDriver`, see the following articles:"},{"content":"Automation Clients","pos":[3486,3504]},{"content":"Automation Servers","pos":[3547,3565]},{"content":"Inheritance Hierarchy","pos":[3608,3629]},{"content":"Requirements","pos":[3662,3674]},{"pos":[3678,3699],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxdisp.h","source":"**Header:** afxdisp.h"},{"pos":[3760,3794],"content":"COleDispatchDriver::AttachDispatch"},{"content":"Call the <ph id=\"ph1\">`AttachDispatch`</ph> member function to attach an <ph id=\"ph2\">`IDispatch`</ph> pointer to the <ph id=\"ph3\">`COleDispatchDriver`</ph> object.","pos":[3798,3908],"source":"Call the `AttachDispatch` member function to attach an `IDispatch` pointer to the `COleDispatchDriver` object."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Implementing the IDispatch Interface<ept id=\"p1\">](http://msdn.microsoft.com/en-us/0e171f7f-0022-4e9b-ac8e-98192828e945)</ept>.","pos":[3909,4044],"source":" For more information, see [Implementing the IDispatch Interface](http://msdn.microsoft.com/en-us/0e171f7f-0022-4e9b-ac8e-98192828e945)."},{"content":"Parameters","pos":[4158,4168]},{"content":"Pointer to an OLE <ph id=\"ph1\">`IDispatch`</ph> object to be attached to the <ph id=\"ph2\">`COleDispatchDriver`</ph> object.","pos":[4188,4275],"source":" Pointer to an OLE `IDispatch` object to be attached to the `COleDispatchDriver` object."},{"content":"Specifies whether the dispatch is to be released when this object goes out of scope.","pos":[4300,4384]},{"content":"Remarks","pos":[4394,4401]},{"pos":[4405,4512],"content":"This function releases any <ph id=\"ph1\">`IDispatch`</ph> pointer that is already attached to the <ph id=\"ph2\">`COleDispatchDriver`</ph> object.","source":"This function releases any `IDispatch` pointer that is already attached to the `COleDispatchDriver` object."},{"content":"Example","pos":[4522,4529]},{"pos":[4544,4565],"content":"NVC_MFCOleContainer#3"},{"pos":[4690,4728],"content":"COleDispatchDriver::COleDispatchDriver"},{"pos":[4732,4773],"content":"Constructs a <ph id=\"ph1\">`COleDispatchDriver`</ph> object.","source":"Constructs a `COleDispatchDriver` object."},{"content":"Parameters","pos":[4954,4964]},{"content":"Pointer to an OLE <ph id=\"ph1\">`IDispatch`</ph> object to be attached to the <ph id=\"ph2\">`COleDispatchDriver`</ph> object.","pos":[4984,5071],"source":" Pointer to an OLE `IDispatch` object to be attached to the `COleDispatchDriver` object."},{"content":"Specifies whether the dispatch is to be released when this object goes out of scope.","pos":[5096,5180]},{"content":"Reference to an existing <ph id=\"ph1\">`COleDispatchDriver`</ph> object.","pos":[5204,5257],"source":" Reference to an existing `COleDispatchDriver` object."},{"content":"Remarks","pos":[5267,5274]},{"pos":[5278,5475],"content":"The form <ph id=\"ph1\">`COleDispatchDriver`</ph>( <ph id=\"ph2\">`LPDISPATCH``lpDispatch`</ph>, <bpt id=\"p1\">**</bpt>BOOL<ept id=\"p1\">**</ept><ph id=\"ph3\">`bAutoRelease` = </ph><bpt id=\"p2\">**</bpt>TRUE<ept id=\"p2\">**</ept>) connects the <bpt id=\"p3\">[</bpt>IDispatch<ept id=\"p3\">](http://msdn.microsoft.com/en-us/0e171f7f-0022-4e9b-ac8e-98192828e945)</ept> interface.","source":"The form `COleDispatchDriver`( `LPDISPATCH``lpDispatch`, **BOOL**`bAutoRelease` = **TRUE**) connects the [IDispatch](http://msdn.microsoft.com/en-us/0e171f7f-0022-4e9b-ac8e-98192828e945) interface."},{"pos":[5482,5641],"content":"The form <ph id=\"ph1\">`COleDispatchDriver`</ph>( <bpt id=\"p1\">**</bpt>const<ept id=\"p1\">**</ept><ph id=\"ph2\">`COleDispatchDriver`&amp; `dispatchSrc`</ph>) copies an existing <ph id=\"ph3\">`COleDispatchDriver`</ph> object and increments the reference count.","source":"The form `COleDispatchDriver`( **const**`COleDispatchDriver`& `dispatchSrc`) copies an existing `COleDispatchDriver` object and increments the reference count."},{"content":"The form <ph id=\"ph1\">`COleDispatchDriver`</ph>( ) creates a <ph id=\"ph2\">`COleDispatchDriver`</ph> object but does not connect the <ph id=\"ph3\">`IDispatch`</ph> interface.","pos":[5648,5766],"source":"The form `COleDispatchDriver`( ) creates a `COleDispatchDriver` object but does not connect the `IDispatch` interface."},{"content":"Before using <ph id=\"ph1\">`COleDispatchDriver`</ph>( ) without arguments, you should connect an <ph id=\"ph2\">`IDispatch`</ph> to it using either <bpt id=\"p1\">[</bpt>COleDispatchDriver::CreateDispatch<ept id=\"p1\">](#coledispatchdriver__createdispatch)</ept> or <bpt id=\"p2\">[</bpt>COleDispatchDriver::AttachDispatch<ept id=\"p2\">](#coledispatchdriver__attachdispatch)</ept>.","pos":[5767,6027],"source":" Before using `COleDispatchDriver`( ) without arguments, you should connect an `IDispatch` to it using either [COleDispatchDriver::CreateDispatch](#coledispatchdriver__createdispatch) or [COleDispatchDriver::AttachDispatch](#coledispatchdriver__attachdispatch)."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Implementing the IDispatch Interface<ept id=\"p1\">](http://msdn.microsoft.com/en-us/0e171f7f-0022-4e9b-ac8e-98192828e945)</ept>.","pos":[6028,6163],"source":" For more information, see [Implementing the IDispatch Interface](http://msdn.microsoft.com/en-us/0e171f7f-0022-4e9b-ac8e-98192828e945)."},{"content":"Example","pos":[6173,6180]},{"pos":[6185,6279],"content":"See the example for <bpt id=\"p1\">[</bpt>COleDispatchDriver::CreateDispatch<ept id=\"p1\">](#coledispatchdriver__createdispatch)</ept>.","source":"See the example for [COleDispatchDriver::CreateDispatch](#coledispatchdriver__createdispatch)."},{"pos":[6340,6374],"content":"COleDispatchDriver::CreateDispatch"},{"pos":[6378,6539],"content":"Creates an <bpt id=\"p1\">[</bpt>IDispatch<ept id=\"p1\">](http://msdn.microsoft.com/en-us/0e171f7f-0022-4e9b-ac8e-98192828e945)</ept> interface object and attaches it to the <ph id=\"ph1\">`COleDispatchDriver`</ph> object.","source":"Creates an [IDispatch](http://msdn.microsoft.com/en-us/0e171f7f-0022-4e9b-ac8e-98192828e945) interface object and attaches it to the `COleDispatchDriver` object."},{"content":"Parameters","pos":[6737,6747]},{"content":"Class ID of the <ph id=\"ph1\">`IDispatch`</ph> connection object to be created.","pos":[6762,6822],"source":" Class ID of the `IDispatch` connection object to be created."},{"content":"Pointer to an OLE exception object, which will hold the status code resulting from the creation.","pos":[6841,6937]},{"content":"Pointer to the programmatic identifier, such as \"Excel.Document.5\", of the automation object for which the dispatch object is to be created.","pos":[6960,7100]},{"content":"Return Value","pos":[7110,7122]},{"content":"Nonzero on success; otherwise 0.","pos":[7126,7158]},{"content":"Example","pos":[7168,7175]},{"pos":[7190,7211],"content":"NVC_MFCOleContainer#4"},{"pos":[7332,7366],"content":"COleDispatchDriver::DetachDispatch"},{"pos":[7370,7431],"content":"Detaches the current <ph id=\"ph1\">`IDispatch`</ph> connection from this object.","source":"Detaches the current `IDispatch` connection from this object."},{"content":"Return Value","pos":[7485,7497]},{"pos":[7501,7561],"content":"A pointer to the previously attached OLE <ph id=\"ph1\">`IDispatch`</ph> object.","source":"A pointer to the previously attached OLE `IDispatch` object."},{"content":"Remarks","pos":[7571,7578]},{"pos":[7582,7614],"content":"The <ph id=\"ph1\">`IDispatch`</ph> is not released.","source":"The `IDispatch` is not released."},{"pos":[7621,7843],"content":"For more information about the <ph id=\"ph1\">`LPDISPATCH`</ph> type, see <bpt id=\"p1\">[</bpt>Implementing the IDispatch Interface<ept id=\"p1\">](http://msdn.microsoft.com/en-us/0e171f7f-0022-4e9b-ac8e-98192828e945)</ept> in the <ph id=\"ph2\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information about the `LPDISPATCH` type, see [Implementing the IDispatch Interface](http://msdn.microsoft.com/en-us/0e171f7f-0022-4e9b-ac8e-98192828e945) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Example","pos":[7853,7860]},{"pos":[7875,7896],"content":"NVC_MFCOleContainer#5"},{"pos":[8014,8045],"content":"COleDispatchDriver::GetProperty"},{"pos":[8049,8098],"content":"Gets the object property specified by <ph id=\"ph1\">`dwDispID`</ph>.","source":"Gets the object property specified by `dwDispID`."},{"content":"Parameters","pos":[8214,8224]},{"content":"Identifies the property to be retrieved.","pos":[8242,8282]},{"content":"Specifies the property to be retrieved.","pos":[8301,8340]},{"content":"For possible values, see the Remarks section for <bpt id=\"p1\">[</bpt>COleDispatchDriver::InvokeHelper<ept id=\"p1\">](#coledispatchdriver__invokehelper)</ept>.","pos":[8341,8460],"source":" For possible values, see the Remarks section for [COleDispatchDriver::InvokeHelper](#coledispatchdriver__invokehelper)."},{"content":"Address of the variable that will receive the property value.","pos":[8479,8540]},{"content":"It must match the type specified by <ph id=\"ph1\">`vtProp`</ph>.","pos":[8541,8586],"source":" It must match the type specified by `vtProp`."},{"content":"Example","pos":[8596,8603]},{"pos":[8618,8639],"content":"NVC_MFCOleContainer#6"},{"pos":[8758,8790],"content":"COleDispatchDriver::InvokeHelper"},{"pos":[8794,8892],"content":"Calls the object method or property specified by <ph id=\"ph1\">`dwDispID`</ph>, in the context specified by <ph id=\"ph2\">`wFlags`</ph>.","source":"Calls the object method or property specified by `dwDispID`, in the context specified by `wFlags`."},{"content":"Parameters","pos":[9083,9093]},{"content":"Identifies the method or property to be invoked.","pos":[9111,9159]},{"content":"Flags describing the context of the call to <bpt id=\"p1\">**</bpt>IDispatch::Invoke<ept id=\"p1\">**</ept>.","pos":[9178,9244],"source":" Flags describing the context of the call to **IDispatch::Invoke**."},{"content":".","pos":[9245,9246]},{"content":"For a list of possible values, see the <ph id=\"ph1\">`wFlags`</ph> parameter in <bpt id=\"p1\">[</bpt>IDispatch::Invoke<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms221479\\(v=vs.85\\).aspx)</ept> in the <ph id=\"ph2\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[9247,9463],"source":" For a list of possible values, see the `wFlags` parameter in [IDispatch::Invoke](http://msdn.microsoft.com/library/windows/desktop/ms221479\\(v=vs.85\\).aspx) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Specifies the type of the return value.","pos":[9481,9520]},{"content":"For possible values, see the Remarks section.","pos":[9521,9566]},{"content":"Address of the variable that will receive the property value or return value.","pos":[9584,9661]},{"content":"It must match the type specified by <ph id=\"ph1\">`vtRet`</ph>.","pos":[9662,9706],"source":" It must match the type specified by `vtRet`."},{"content":"Pointer to a null-terminated string of bytes specifying the types of the parameters following <ph id=\"ph1\">`pbParamInfo`</ph>.","pos":[9730,9838],"source":" Pointer to a null-terminated string of bytes specifying the types of the parameters following `pbParamInfo`."},{"content":"...","pos":[9846,9849]},{"content":"Variable list of parameters, of types specified in <ph id=\"ph1\">`pbParamInfo`</ph>.","pos":[9854,9919],"source":" Variable list of parameters, of types specified in `pbParamInfo`."},{"content":"Remarks","pos":[9929,9936]},{"content":"The <ph id=\"ph1\">`pbParamInfo`</ph> parameter specifies the types of the parameters passed to the method or property.","pos":[9940,10039],"source":"The `pbParamInfo` parameter specifies the types of the parameters passed to the method or property."},{"content":"The variable list of arguments is represented by <bpt id=\"p1\">**</bpt>...<ept id=\"p1\">**</ept> in the syntax declaration.","pos":[10040,10123],"source":" The variable list of arguments is represented by **...** in the syntax declaration."},{"content":"Possible values for the <ph id=\"ph1\">`vtRet`</ph> argument are taken from the <ph id=\"ph2\">`VARENUM`</ph> enumeration.","pos":[10130,10212],"source":"Possible values for the `vtRet` argument are taken from the `VARENUM` enumeration."},{"content":"Possible values are as follows:","pos":[10213,10244]},{"content":"Symbol","pos":[10251,10257]},{"content":"Return Type","pos":[10258,10269]},{"content":"short","pos":[10341,10346]},{"content":"long","pos":[10363,10367]},{"content":"float","pos":[10384,10389]},{"content":"double","pos":[10406,10412]},{"content":"CY","pos":[10429,10431]},{"content":"DATE","pos":[10450,10454]},{"content":"VT_DISPATCH","pos":[10484,10495]},{"content":"BOOL","pos":[10550,10554]},{"content":"VT_VARIANT","pos":[10563,10573]},{"content":"VARIANT","pos":[10578,10585]},{"content":"VT_UNKNOWN","pos":[10594,10604]},{"content":"The <ph id=\"ph1\">`pbParamInfo`</ph> argument is a space-separated list of <bpt id=\"p1\">**</bpt>VTS_<ept id=\"p1\">**</ept> constants.","pos":[10626,10701],"source":"The `pbParamInfo` argument is a space-separated list of **VTS_** constants."},{"content":"One or more of these values, separated by spaces (not commas), specifies the function's parameter list.","pos":[10702,10805]},{"content":"Possible values are listed with the <bpt id=\"p1\">[</bpt>EVENT_CUSTOM<ept id=\"p1\">](event-maps.md#event_custom)</ept> macro.","pos":[10806,10891],"source":" Possible values are listed with the [EVENT_CUSTOM](event-maps.md#event_custom) macro."},{"content":"This function converts the parameters to <bpt id=\"p1\">**</bpt>VARIANTARG<ept id=\"p1\">**</ept> values, then invokes the <bpt id=\"p2\">[</bpt>IDispatch::Invoke<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms221479\\(v=vs.85\\).aspx)</ept> method.","pos":[10898,11082],"source":"This function converts the parameters to **VARIANTARG** values, then invokes the [IDispatch::Invoke](http://msdn.microsoft.com/library/windows/desktop/ms221479\\(v=vs.85\\).aspx) method."},{"content":"If the call to <ph id=\"ph1\">`Invoke`</ph> fails, this function will throw an exception.","pos":[11083,11152],"source":" If the call to `Invoke` fails, this function will throw an exception."},{"content":"If the <ph id=\"ph1\">`SCODE`</ph> (status code) returned by <bpt id=\"p1\">**</bpt>IDispatch::Invoke<ept id=\"p1\">**</ept> is <ph id=\"ph2\">`DISP_E_EXCEPTION`</ph>, this function throws a <bpt id=\"p2\">[</bpt>COleException<ept id=\"p2\">](../../mfc/reference/coleexception-class.md)</ept> object; otherwise it throws a <bpt id=\"p3\">[</bpt>COleDispatchException<ept id=\"p3\">](../../mfc/reference/coledispatchexception-class.md)</ept>.","pos":[11153,11428],"source":" If the `SCODE` (status code) returned by **IDispatch::Invoke** is `DISP_E_EXCEPTION`, this function throws a [COleException](../../mfc/reference/coleexception-class.md) object; otherwise it throws a [COleDispatchException](../../mfc/reference/coledispatchexception-class.md)."},{"pos":[11435,11912],"content":"For more information, see <bpt id=\"p1\">[</bpt>VARIANTARG<ept id=\"p1\">](http://msdn.microsoft.com/en-us/e305240e-9e11-4006-98cc-26f4932d2118)</ept>, <bpt id=\"p2\">[</bpt>Implementing the IDispatch Interface<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms221037\\(v=vs.85\\).aspx)</ept>, <bpt id=\"p3\">[</bpt>IDispatch::Invoke<ept id=\"p3\">](http://msdn.microsoft.com/library/windows/desktop/ms221479\\(v=vs.85\\).aspx)</ept>, and <bpt id=\"p4\">[</bpt>Structure of COM Error Codes<ept id=\"p4\">](http://msdn.microsoft.com/library/windows/desktop/ms690088)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [VARIANTARG](http://msdn.microsoft.com/en-us/e305240e-9e11-4006-98cc-26f4932d2118), [Implementing the IDispatch Interface](http://msdn.microsoft.com/library/windows/desktop/ms221037\\(v=vs.85\\).aspx), [IDispatch::Invoke](http://msdn.microsoft.com/library/windows/desktop/ms221479\\(v=vs.85\\).aspx), and [Structure of COM Error Codes](http://msdn.microsoft.com/library/windows/desktop/ms690088) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Example","pos":[11922,11929]},{"pos":[11934,12028],"content":"See the example for <bpt id=\"p1\">[</bpt>COleDispatchDriver::CreateDispatch<ept id=\"p1\">](#coledispatchdriver__createdispatch)</ept>.","source":"See the example for [COleDispatchDriver::CreateDispatch](#coledispatchdriver__createdispatch)."},{"pos":[12089,12123],"content":"COleDispatchDriver::m_bAutoRelease"},{"pos":[12127,12373],"content":"If <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, the COM object accessed by <bpt id=\"p2\">[</bpt>m_lpDispatch<ept id=\"p2\">](#coledispatchdriver__m_lpdispatch)</ept> will be automatically released when <bpt id=\"p3\">[</bpt>ReleaseDispatch<ept id=\"p3\">](#coledispatchdriver__releasedispatch)</ept> is called or when this <ph id=\"ph1\">`COleDispatchDriver`</ph> object is destroyed.","source":"If **TRUE**, the COM object accessed by [m_lpDispatch](#coledispatchdriver__m_lpdispatch) will be automatically released when [ReleaseDispatch](#coledispatchdriver__releasedispatch) is called or when this `COleDispatchDriver` object is destroyed."},{"content":"Remarks","pos":[12421,12428]},{"pos":[12432,12499],"content":"By default, <ph id=\"ph1\">`m_bAutoRelease`</ph> is set to <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> in the constructor.","source":"By default, `m_bAutoRelease` is set to **TRUE** in the constructor."},{"pos":[12506,12794],"content":"For more information on releasing COM objects, see <bpt id=\"p1\">[</bpt>Implementing Reference Counting<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms693431)</ept> and <bpt id=\"p2\">[</bpt>IUnknown::Release<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms682317)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information on releasing COM objects, see [Implementing Reference Counting](http://msdn.microsoft.com/library/windows/desktop/ms693431) and [IUnknown::Release](http://msdn.microsoft.com/library/windows/desktop/ms682317) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Example","pos":[12804,12811]},{"pos":[12826,12847],"content":"NVC_MFCOleContainer#9"},{"pos":[12966,12998],"content":"COleDispatchDriver::m_lpDispatch"},{"pos":[13002,13081],"content":"The pointer to the <ph id=\"ph1\">`IDispatch`</ph> interface attached to this <ph id=\"ph2\">`COleDispatchDriver`</ph>.","source":"The pointer to the `IDispatch` interface attached to this `COleDispatchDriver`."},{"content":"Remarks","pos":[13133,13140]},{"pos":[13144,13217],"content":"The <ph id=\"ph1\">`m_lpDispatch`</ph> data member is a public variable of type <ph id=\"ph2\">`LPDISPATCH`</ph>.","source":"The `m_lpDispatch` data member is a public variable of type `LPDISPATCH`."},{"pos":[13224,13391],"content":"For more information, see <bpt id=\"p1\">[</bpt>IDispatch<ept id=\"p1\">](http://msdn.microsoft.com/en-us/0e171f7f-0022-4e9b-ac8e-98192828e945)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IDispatch](http://msdn.microsoft.com/en-us/0e171f7f-0022-4e9b-ac8e-98192828e945) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Example","pos":[13401,13408]},{"pos":[13413,13507],"content":"See the example for <bpt id=\"p1\">[</bpt>COleDispatchDriver::AttachDispatch<ept id=\"p1\">](#coledispatchdriver__attachdispatch)</ept>.","source":"See the example for [COleDispatchDriver::AttachDispatch](#coledispatchdriver__attachdispatch)."},{"pos":[13566,13596],"content":"COleDispatchDriver::operator ="},{"pos":[13600,13661],"content":"Copies the source value into the <ph id=\"ph1\">`COleDispatchDriver`</ph> object.","source":"Copies the source value into the `COleDispatchDriver` object."},{"content":"Parameters","pos":[13762,13772]},{"content":"A pointer to an existing <ph id=\"ph1\">`COleDispatchDriver`</ph> object.","pos":[13793,13846],"source":" A pointer to an existing `COleDispatchDriver` object."},{"pos":[13912,13951],"content":"COleDispatchDriver::operator LPDISPATCH"},{"pos":[13955,14034],"content":"Accesses the underlying <ph id=\"ph1\">`IDispatch`</ph> pointer of the <ph id=\"ph2\">`COleDispatchDriver`</ph> object.","source":"Accesses the underlying `IDispatch` pointer of the `COleDispatchDriver` object."},{"content":"Example","pos":[14083,14090]},{"pos":[14105,14126],"content":"NVC_MFCOleContainer#8"},{"pos":[14248,14283],"content":"COleDispatchDriver::ReleaseDispatch"},{"content":"Releases the <ph id=\"ph1\">`IDispatch`</ph> connection.","pos":[14287,14323],"source":"Releases the `IDispatch` connection."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Implementing the IDispatch Interface<ept id=\"p1\">](http://msdn.microsoft.com/en-us/0e171f7f-0022-4e9b-ac8e-98192828e945)</ept>","pos":[14324,14458],"source":" For more information, see [Implementing the IDispatch Interface](http://msdn.microsoft.com/en-us/0e171f7f-0022-4e9b-ac8e-98192828e945)"},{"content":"Remarks","pos":[14507,14514]},{"pos":[14518,14642],"content":"If auto release has been set for this connection, this function calls <bpt id=\"p1\">**</bpt>IDispatch::Release<ept id=\"p1\">**</ept> before releasing the interface.","source":"If auto release has been set for this connection, this function calls **IDispatch::Release** before releasing the interface."},{"content":"Example","pos":[14652,14659]},{"pos":[14664,14758],"content":"See the example for <bpt id=\"p1\">[</bpt>COleDispatchDriver::AttachDispatch<ept id=\"p1\">](#coledispatchdriver__attachdispatch)</ept>.","source":"See the example for [COleDispatchDriver::AttachDispatch](#coledispatchdriver__attachdispatch)."},{"pos":[14816,14847],"content":"COleDispatchDriver::SetProperty"},{"pos":[14851,14904],"content":"Sets the OLE object property specified by <ph id=\"ph1\">`dwDispID`</ph>.","source":"Sets the OLE object property specified by `dwDispID`."},{"content":"Parameters","pos":[15006,15016]},{"content":"Identifies the property to be set.","pos":[15034,15068]},{"content":"Specifies the type of the property to be set.","pos":[15087,15132]},{"content":"For possible values, see the Remarks section for <bpt id=\"p1\">[</bpt>COleDispatchDriver::InvokeHelper<ept id=\"p1\">](#coledispatchdriver__invokehelper)</ept>.","pos":[15133,15252],"source":" For possible values, see the Remarks section for [COleDispatchDriver::InvokeHelper](#coledispatchdriver__invokehelper)."},{"content":"...","pos":[15260,15263]},{"content":"A single parameter of the type specified by <ph id=\"ph1\">`vtProp`</ph>.","pos":[15268,15321],"source":" A single parameter of the type specified by `vtProp`."},{"content":"Example","pos":[15331,15338]},{"pos":[15353,15374],"content":"NVC_MFCOleContainer#7"},{"content":"See Also","pos":[15443,15451]},{"content":"MFC Sample CALCDRIV","pos":[15456,15475]},{"content":"MFC Sample ACDUAL","pos":[15511,15528]},{"content":"Hierarchy Chart","pos":[15564,15579]},{"content":"CCmdTarget Class","pos":[15616,15632]}],"content":"---\ntitle: \"COleDispatchDriver Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"COleDispatchDriver\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"COleDispatchDriver class\"\n  - \"Automation clients, implementing Automation\"\n  - \"OLE dispatch interface\"\nms.assetid: 3ed98daf-cdc7-4374-8a0c-cf695a8d3657\ncaps.latest.revision: 21\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# COleDispatchDriver Class\nImplements the client side of OLE automation.  \n  \n## Syntax  \n  \n```  \nclass COleDispatchDriver  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[COleDispatchDriver::COleDispatchDriver](#coledispatchdriver__coledispatchdriver)|Constructs a `COleDispatchDriver` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[COleDispatchDriver::AttachDispatch](#coledispatchdriver__attachdispatch)|Attaches an `IDispatch` connection to the `COleDispatchDriver` object.|  \n|[COleDispatchDriver::CreateDispatch](#coledispatchdriver__createdispatch)|Creates an `IDispatch` connection and attaches it to the `COleDispatchDriver` object.|  \n|[COleDispatchDriver::DetachDispatch](#coledispatchdriver__detachdispatch)|Detaches an `IDispatch` connection, without releasing it.|  \n|[COleDispatchDriver::GetProperty](#coledispatchdriver__getproperty)|Gets an automation property.|  \n|[COleDispatchDriver::InvokeHelper](#coledispatchdriver__invokehelper)|Helper for calling automation methods.|  \n|[COleDispatchDriver::ReleaseDispatch](#coledispatchdriver__releasedispatch)|Releases an `IDispatch` connection.|  \n|[COleDispatchDriver::SetProperty](#coledispatchdriver__setproperty)|Sets an automation property.|  \n  \n### Public Operators  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[COleDispatchDriver::operator =](#coledispatchdriver__operator__eq)|Copies the source value into the `COleDispatchDriver` object.|  \n|[COleDispatchDriver::operator LPDISPATCH](#coledispatchdriver__operator_lpdispatch)|Accesses the underlying `IDispatch` pointer.|  \n  \n### Public Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[COleDispatchDriver::m_bAutoRelease](#coledispatchdriver__m_bautorelease)|Specifies whether to release the `IDispatch` during `ReleaseDispatch` or object destruction.|  \n|[COleDispatchDriver::m_lpDispatch](#coledispatchdriver__m_lpdispatch)|Indicates the pointer to the `IDispatch` interface attached to this `COleDispatchDriver`.|  \n  \n## Remarks  \n `COleDispatchDriver` does not have a base class.  \n  \n OLE dispatch interfaces provide access to an object's methods and properties. Member functions of `COleDispatchDriver` attach, detach, create, and release a dispatch connection of type `IDispatch`. Other member functions use variable argument lists to simplify calling **IDispatch::Invoke**.  \n  \n This class can be used directly, but it is generally used only by classes created by the Add Class wizard. When you create new C++ classes by importing a type library, the new classes are derived from `COleDispatchDriver`.  \n  \n For more information on using `COleDispatchDriver`, see the following articles:  \n  \n- [Automation Clients](../../mfc/automation-clients.md)  \n  \n- [Automation Servers](../../mfc/automation-servers.md)  \n  \n## Inheritance Hierarchy  \n `COleDispatchDriver`  \n  \n## Requirements  \n **Header:** afxdisp.h  \n  \n##  <a name=\"coledispatchdriver__attachdispatch\"></a>  COleDispatchDriver::AttachDispatch  \n Call the `AttachDispatch` member function to attach an `IDispatch` pointer to the `COleDispatchDriver` object. For more information, see [Implementing the IDispatch Interface](http://msdn.microsoft.com/en-us/0e171f7f-0022-4e9b-ac8e-98192828e945).  \n  \n```  \nvoid AttachDispatch(\n        LPDISPATCH lpDispatch,  \n        BOOL bAutoRelease = TRUE);\n```  \n  \n### Parameters  \n `lpDispatch`  \n Pointer to an OLE `IDispatch` object to be attached to the `COleDispatchDriver` object.  \n  \n `bAutoRelease`  \n Specifies whether the dispatch is to be released when this object goes out of scope.  \n  \n### Remarks  \n This function releases any `IDispatch` pointer that is already attached to the `COleDispatchDriver` object.  \n  \n### Example  \n [!code-cpp[NVC_MFCOleContainer#3](../../mfc/codesnippet/cpp/coledispatchdriver-class_1.cpp)]  \n  \n##  <a name=\"coledispatchdriver__coledispatchdriver\"></a>  COleDispatchDriver::COleDispatchDriver  \n Constructs a `COleDispatchDriver` object.  \n  \n```  \nCOleDispatchDriver();\n\n \nCOleDispatchDriver(LPDISPATCH lpDispatch, BOOL bAutoRelease = TRUE);\n\n \nCOleDispatchDriver(const COleDispatchDriver& dispatchSrc);\n```  \n  \n### Parameters  \n `lpDispatch`  \n Pointer to an OLE `IDispatch` object to be attached to the `COleDispatchDriver` object.  \n  \n `bAutoRelease`  \n Specifies whether the dispatch is to be released when this object goes out of scope.  \n  \n `dispatchSrc`  \n Reference to an existing `COleDispatchDriver` object.  \n  \n### Remarks  \n The form `COleDispatchDriver`( `LPDISPATCH``lpDispatch`, **BOOL**`bAutoRelease` = **TRUE**) connects the [IDispatch](http://msdn.microsoft.com/en-us/0e171f7f-0022-4e9b-ac8e-98192828e945) interface.  \n  \n The form `COleDispatchDriver`( **const**`COleDispatchDriver`& `dispatchSrc`) copies an existing `COleDispatchDriver` object and increments the reference count.  \n  \n The form `COleDispatchDriver`( ) creates a `COleDispatchDriver` object but does not connect the `IDispatch` interface. Before using `COleDispatchDriver`( ) without arguments, you should connect an `IDispatch` to it using either [COleDispatchDriver::CreateDispatch](#coledispatchdriver__createdispatch) or [COleDispatchDriver::AttachDispatch](#coledispatchdriver__attachdispatch). For more information, see [Implementing the IDispatch Interface](http://msdn.microsoft.com/en-us/0e171f7f-0022-4e9b-ac8e-98192828e945).  \n  \n### Example  \n  See the example for [COleDispatchDriver::CreateDispatch](#coledispatchdriver__createdispatch).  \n  \n##  <a name=\"coledispatchdriver__createdispatch\"></a>  COleDispatchDriver::CreateDispatch  \n Creates an [IDispatch](http://msdn.microsoft.com/en-us/0e171f7f-0022-4e9b-ac8e-98192828e945) interface object and attaches it to the `COleDispatchDriver` object.  \n  \n```  \n \nBOOL CreateDispatch(\n        REFCLSID clsid,  \n        COleException* pError = NULL);\n\n \nBOOL CreateDispatch(\n    LPCTSTR lpszProgID,  \n    COleException* pError = NULL);\n```  \n  \n### Parameters  \n `clsid`  \n Class ID of the `IDispatch` connection object to be created.  \n  \n `pError`  \n Pointer to an OLE exception object, which will hold the status code resulting from the creation.  \n  \n `lpszProgID`  \n Pointer to the programmatic identifier, such as \"Excel.Document.5\", of the automation object for which the dispatch object is to be created.  \n  \n### Return Value  \n Nonzero on success; otherwise 0.  \n  \n### Example  \n [!code-cpp[NVC_MFCOleContainer#4](../../mfc/codesnippet/cpp/coledispatchdriver-class_2.cpp)]  \n  \n##  <a name=\"coledispatchdriver__detachdispatch\"></a>  COleDispatchDriver::DetachDispatch  \n Detaches the current `IDispatch` connection from this object.  \n  \n```  \nLPDISPATCH DetachDispatch();\n```  \n  \n### Return Value  \n A pointer to the previously attached OLE `IDispatch` object.  \n  \n### Remarks  \n The `IDispatch` is not released.  \n  \n For more information about the `LPDISPATCH` type, see [Implementing the IDispatch Interface](http://msdn.microsoft.com/en-us/0e171f7f-0022-4e9b-ac8e-98192828e945) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n [!code-cpp[NVC_MFCOleContainer#5](../../mfc/codesnippet/cpp/coledispatchdriver-class_3.cpp)]  \n  \n##  <a name=\"coledispatchdriver__getproperty\"></a>  COleDispatchDriver::GetProperty  \n Gets the object property specified by `dwDispID`.  \n  \n```  \nvoid GetProperty(\n    DISPID dwDispID,  \n    VARTYPE vtProp,  \n    void* pvProp) const;\n\n \n```  \n  \n### Parameters  \n `dwDispID`  \n Identifies the property to be retrieved.  \n  \n `vtProp`  \n Specifies the property to be retrieved. For possible values, see the Remarks section for [COleDispatchDriver::InvokeHelper](#coledispatchdriver__invokehelper).  \n  \n `pvProp`  \n Address of the variable that will receive the property value. It must match the type specified by `vtProp`.  \n  \n### Example  \n [!code-cpp[NVC_MFCOleContainer#6](../../mfc/codesnippet/cpp/coledispatchdriver-class_4.cpp)]  \n  \n##  <a name=\"coledispatchdriver__invokehelper\"></a>  COleDispatchDriver::InvokeHelper  \n Calls the object method or property specified by `dwDispID`, in the context specified by `wFlags`.  \n  \n```  \nvoid AFX_CDECL InvokeHelper(\n        DISPID dwDispID,  \n        WORD wFlags,  \n        VARTYPE vtRet,  \n        void* pvRet,  \n        const BYTE* pbParamInfo, ...);\n```  \n  \n### Parameters  \n `dwDispID`  \n Identifies the method or property to be invoked.  \n  \n `wFlags`  \n Flags describing the context of the call to **IDispatch::Invoke**. . For a list of possible values, see the `wFlags` parameter in [IDispatch::Invoke](http://msdn.microsoft.com/library/windows/desktop/ms221479\\(v=vs.85\\).aspx) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `vtRet`  \n Specifies the type of the return value. For possible values, see the Remarks section.  \n  \n `pvRet`  \n Address of the variable that will receive the property value or return value. It must match the type specified by `vtRet`.  \n  \n `pbParamInfo`  \n Pointer to a null-terminated string of bytes specifying the types of the parameters following `pbParamInfo`.  \n  \n *...*  \n Variable list of parameters, of types specified in `pbParamInfo`.  \n  \n### Remarks  \n The `pbParamInfo` parameter specifies the types of the parameters passed to the method or property. The variable list of arguments is represented by **...** in the syntax declaration.  \n  \n Possible values for the `vtRet` argument are taken from the `VARENUM` enumeration. Possible values are as follows:  \n  \n|Symbol|Return Type|  \n|------------|-----------------|  \n|`VT_EMPTY`|`void`|  \n|`VT_I2`|**short**|  \n|`VT_I4`|**long**|  \n|`VT_R4`|**float**|  \n|`VT_R8`|**double**|  \n|`VT_CY`|**CY**|  \n|`VT_DATE`|**DATE**|  \n|`VT_BSTR`|`BSTR`|  \n|**VT_DISPATCH**|`LPDISPATCH`|  \n|`VT_ERROR`|`SCODE`|  \n|`VT_BOOL`|**BOOL**|  \n|**VT_VARIANT**|**VARIANT**|  \n|**VT_UNKNOWN**|`LPUNKNOWN`|  \n  \n The `pbParamInfo` argument is a space-separated list of **VTS_** constants. One or more of these values, separated by spaces (not commas), specifies the function's parameter list. Possible values are listed with the [EVENT_CUSTOM](event-maps.md#event_custom) macro.  \n  \n This function converts the parameters to **VARIANTARG** values, then invokes the [IDispatch::Invoke](http://msdn.microsoft.com/library/windows/desktop/ms221479\\(v=vs.85\\).aspx) method. If the call to `Invoke` fails, this function will throw an exception. If the `SCODE` (status code) returned by **IDispatch::Invoke** is `DISP_E_EXCEPTION`, this function throws a [COleException](../../mfc/reference/coleexception-class.md) object; otherwise it throws a [COleDispatchException](../../mfc/reference/coledispatchexception-class.md).  \n  \n For more information, see [VARIANTARG](http://msdn.microsoft.com/en-us/e305240e-9e11-4006-98cc-26f4932d2118), [Implementing the IDispatch Interface](http://msdn.microsoft.com/library/windows/desktop/ms221037\\(v=vs.85\\).aspx), [IDispatch::Invoke](http://msdn.microsoft.com/library/windows/desktop/ms221479\\(v=vs.85\\).aspx), and [Structure of COM Error Codes](http://msdn.microsoft.com/library/windows/desktop/ms690088) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n  See the example for [COleDispatchDriver::CreateDispatch](#coledispatchdriver__createdispatch).  \n  \n##  <a name=\"coledispatchdriver__m_bautorelease\"></a>  COleDispatchDriver::m_bAutoRelease  \n If **TRUE**, the COM object accessed by [m_lpDispatch](#coledispatchdriver__m_lpdispatch) will be automatically released when [ReleaseDispatch](#coledispatchdriver__releasedispatch) is called or when this `COleDispatchDriver` object is destroyed.  \n  \n```  \nBOOL m_bAutoRelease;  \n```  \n  \n### Remarks  \n By default, `m_bAutoRelease` is set to **TRUE** in the constructor.  \n  \n For more information on releasing COM objects, see [Implementing Reference Counting](http://msdn.microsoft.com/library/windows/desktop/ms693431) and [IUnknown::Release](http://msdn.microsoft.com/library/windows/desktop/ms682317) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n [!code-cpp[NVC_MFCOleContainer#9](../../mfc/codesnippet/cpp/coledispatchdriver-class_5.cpp)]  \n  \n##  <a name=\"coledispatchdriver__m_lpdispatch\"></a>  COleDispatchDriver::m_lpDispatch  \n The pointer to the `IDispatch` interface attached to this `COleDispatchDriver`.  \n  \n```  \nLPDISPATCH m_lpDispatch;  \n```  \n  \n### Remarks  \n The `m_lpDispatch` data member is a public variable of type `LPDISPATCH`.  \n  \n For more information, see [IDispatch](http://msdn.microsoft.com/en-us/0e171f7f-0022-4e9b-ac8e-98192828e945) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n  See the example for [COleDispatchDriver::AttachDispatch](#coledispatchdriver__attachdispatch).  \n  \n##  <a name=\"coledispatchdriver__operator__eq\"></a>  COleDispatchDriver::operator =  \n Copies the source value into the `COleDispatchDriver` object.  \n  \n```  \nconst COleDispatchDriver& operator=(const COleDispatchDriver& dispatchSrc);\n```  \n  \n### Parameters  \n `dispatchSrc`  \n A pointer to an existing `COleDispatchDriver` object.  \n  \n##  <a name=\"coledispatchdriver__operator_lpdispatch\"></a>  COleDispatchDriver::operator LPDISPATCH  \n Accesses the underlying `IDispatch` pointer of the `COleDispatchDriver` object.  \n  \n```  \noperator LPDISPATCH();\n```   \n  \n### Example  \n [!code-cpp[NVC_MFCOleContainer#8](../../mfc/codesnippet/cpp/coledispatchdriver-class_6.cpp)]  \n  \n##  <a name=\"coledispatchdriver__releasedispatch\"></a>  COleDispatchDriver::ReleaseDispatch  \n Releases the `IDispatch` connection. For more information, see [Implementing the IDispatch Interface](http://msdn.microsoft.com/en-us/0e171f7f-0022-4e9b-ac8e-98192828e945)  \n  \n```  \nvoid ReleaseDispatch();\n```  \n  \n### Remarks  \n If auto release has been set for this connection, this function calls **IDispatch::Release** before releasing the interface.  \n  \n### Example  \n  See the example for [COleDispatchDriver::AttachDispatch](#coledispatchdriver__attachdispatch).  \n  \n##  <a name=\"coledispatchdriver__setproperty\"></a>  COleDispatchDriver::SetProperty  \n Sets the OLE object property specified by `dwDispID`.  \n  \n```  \nvoid AFX_CDECL SetProperty(\n    DISPID dwDispID,  \n    VARTYPE vtProp, ...);\n```  \n  \n### Parameters  \n `dwDispID`  \n Identifies the property to be set.  \n  \n `vtProp`  \n Specifies the type of the property to be set. For possible values, see the Remarks section for [COleDispatchDriver::InvokeHelper](#coledispatchdriver__invokehelper).  \n  \n *...*  \n A single parameter of the type specified by `vtProp`.  \n  \n### Example  \n [!code-cpp[NVC_MFCOleContainer#7](../../mfc/codesnippet/cpp/coledispatchdriver-class_7.cpp)]  \n  \n## See Also  \n [MFC Sample CALCDRIV](../../visual-cpp-samples.md)   \n [MFC Sample ACDUAL](../../visual-cpp-samples.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [CCmdTarget Class](../../mfc/reference/ccmdtarget-class.md)\n"}