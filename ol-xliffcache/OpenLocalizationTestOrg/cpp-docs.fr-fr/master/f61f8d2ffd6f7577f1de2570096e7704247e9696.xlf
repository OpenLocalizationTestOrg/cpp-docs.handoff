<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f61f8d2ffd6f7577f1de2570096e7704247e9696</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\what-is-a-carchive-object.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8acc1c96b4375572ba316260247c9d951fe5ff9d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">51b1cc8fc4133f27cc03afd0b7fea876b0dbc138</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>What Is a CArchive Object | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>What Is a CArchive Object</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CArchive`</ph> object provides a type-safe buffering mechanism for writing or reading serializable objects to or from a <ph id="ph2">`CFile`</ph> object.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Usually the <ph id="ph1">`CFile`</ph> object represents a disk file; however, it can also be a memory file (<ph id="ph2">`CSharedFile`</ph> object), perhaps representing the Clipboard.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A given <ph id="ph1">`CArchive`</ph> object either stores (writes, serializes) data or loads (reads, deserializes) data, but never both.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The life of a <ph id="ph1">`CArchive`</ph> object is limited to one pass through writing objects to a file or reading objects from a file.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Thus, two successively created <ph id="ph1">`CArchive`</ph> objects are required to serialize data to a file and then deserialize it back from the file.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When an archive stores objects to a file, the archive attaches the <ph id="ph1">`CRuntimeClass`</ph> name to the objects.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Then, when another archive loads objects from a file to memory, the <ph id="ph1">`CObject`</ph>-derived objects are dynamically reconstructed based on the <ph id="ph2">`CRuntimeClass`</ph> of the objects.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A given object may be referenced more than once as it is written to the file by the storing archive.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The loading archive, however, will reconstruct the object only once.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The details about how an archive attaches <ph id="ph1">`CRuntimeClass`</ph> information to objects and reconstructs objects, taking into account possible multiple references, are described in <bpt id="p1">[</bpt>Technical Note 2<ept id="p1">](../mfc/tn002-persistent-object-data-format.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>As data is serialized to an archive, the archive accumulates the data until its buffer is full.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Then the archive writes its buffer to the <ph id="ph1">`CFile`</ph> object pointed to by the <ph id="ph2">`CArchive`</ph> object.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Similarly, as you read data from an archive, it reads data from the file to its buffer and then from the buffer to your deserialized object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This buffering reduces the number of times a hard disk is physically read, thus improving your application's performance.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Serialization: Serializing an Object</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>