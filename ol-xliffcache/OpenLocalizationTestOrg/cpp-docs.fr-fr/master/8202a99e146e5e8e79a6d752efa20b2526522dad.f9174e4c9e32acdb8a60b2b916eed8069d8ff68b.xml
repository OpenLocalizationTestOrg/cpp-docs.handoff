{"nodes":[{"pos":[12,55],"content":"Last Character in a String | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Last Character in a String | Microsoft Docs","pos":[0,43]}]},{"content":"Last Character in a String","pos":[628,654]},{"content":"Use the following tips:","pos":[655,678]},{"content":"Trail byte ranges overlap the ASCII character set in many cases.","pos":[688,752]},{"content":"You can safely use bytewise scans for any control characters (less than 32).","pos":[753,829]},{"content":"Consider the following line of code, which might be checking to see if the last character in a string is a backslash character:","pos":[839,966]},{"content":"Because <ph id=\"ph1\">`strlen`</ph> is not MBCS-aware, it returns the number of bytes, not the number of characters, in a multibyte string.","pos":[1094,1214],"source":"Because `strlen` is not MBCS-aware, it returns the number of bytes, not the number of characters, in a multibyte string."},{"content":"Also, note that in some code pages (932, for example), '<ph id=\"ph1\">\\\\</ph>' (0x5c) is a valid trail byte (<ph id=\"ph2\">`sz`</ph> is a C string).","pos":[1215,1325],"source":" Also, note that in some code pages (932, for example), '\\\\' (0x5c) is a valid trail byte (`sz` is a C string)."},{"content":"One possible solution is to rewrite the code this way:","pos":[1336,1390]},{"content":"This code uses the MBCS functions <ph id=\"ph1\">`_mbsrchr`</ph> and <ph id=\"ph2\">`_mbsinc`</ph>.","pos":[1590,1649],"source":"This code uses the MBCS functions `_mbsrchr` and `_mbsinc`."},{"content":"Because these functions are MBCS-aware, they can distinguish between a '<ph id=\"ph1\">\\\\</ph>' character and a trail byte '<ph id=\"ph2\">\\\\</ph>'.","pos":[1650,1758],"source":" Because these functions are MBCS-aware, they can distinguish between a '\\\\' character and a trail byte '\\\\'."},{"content":"The code performs some action if the last character in the string is a null ('\\0').","pos":[1759,1842]},{"content":"See Also","pos":[1851,1859]},{"content":"MBCS Programming Tips","pos":[1864,1885]},{"content":"Character Assignment","pos":[1926,1946]}],"content":"---\ntitle: \"Last Character in a String | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"last character in string\"\n  - \"MBCS [C++], last character in string\"\nms.assetid: 0a180376-4e55-41e8-9c64-539c7b6d8047\ncaps.latest.revision: 7\nauthor: \"ghogen\"\nms.author: \"ghogen\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Last Character in a String\nUse the following tips:  \n  \n-   Trail byte ranges overlap the ASCII character set in many cases. You can safely use bytewise scans for any control characters (less than 32).  \n  \n-   Consider the following line of code, which might be checking to see if the last character in a string is a backslash character:  \n  \n    ```  \n    if ( sz[ strlen( sz ) - 1 ] == '\\\\' )    // Is last character a '\\'?  \n        // . . .  \n    ```  \n  \n     Because `strlen` is not MBCS-aware, it returns the number of bytes, not the number of characters, in a multibyte string. Also, note that in some code pages (932, for example), '\\\\' (0x5c) is a valid trail byte (`sz` is a C string).  \n  \n     One possible solution is to rewrite the code this way:  \n  \n    ```  \n    char *pLast;  \n    pLast = _mbsrchr( sz, '\\\\' );    // find last occurrence of '\\' in sz  \n    if ( pLast && ( *_mbsinc( pLast ) == '\\0' ) )  \n        // . . .  \n    ```  \n  \n     This code uses the MBCS functions `_mbsrchr` and `_mbsinc`. Because these functions are MBCS-aware, they can distinguish between a '\\\\' character and a trail byte '\\\\'. The code performs some action if the last character in the string is a null ('\\0').  \n  \n## See Also  \n [MBCS Programming Tips](../text/mbcs-programming-tips.md)   \n [Character Assignment](../text/character-assignment.md)"}