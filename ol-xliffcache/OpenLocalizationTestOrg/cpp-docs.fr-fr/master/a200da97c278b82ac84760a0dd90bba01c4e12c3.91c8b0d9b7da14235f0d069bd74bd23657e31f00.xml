{"nodes":[{"pos":[12,49],"content":"Compiler Error C3059 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C3059 | Microsoft Docs","pos":[0,37]}]},{"content":"Compiler Error C3059","pos":[619,639]},{"content":"'var' : 'threadprivate' symbol cannot be used in the 'clause' clause","pos":[640,708]},{"pos":[715,811],"content":"A <bpt id=\"p1\">[</bpt>threadprivate<ept id=\"p1\">](../../parallel/openmp/reference/threadprivate.md)</ept> symbol was used in a clause.","source":"A [threadprivate](../../parallel/openmp/reference/threadprivate.md) symbol was used in a clause."},{"content":"The following sample generates C3059:","pos":[818,855]},{"content":"Possible resolution:","pos":[1086,1106]}],"content":"---\ntitle: \"Compiler Error C3059 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"C3059\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C3059\"\nms.assetid: 57220324-8286-4cab-a1ab-45385eb1eae0\ncaps.latest.revision: 10\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Compiler Error C3059\n'var' : 'threadprivate' symbol cannot be used in the 'clause' clause  \n  \n A [threadprivate](../../parallel/openmp/reference/threadprivate.md) symbol was used in a clause.  \n  \n The following sample generates C3059:  \n  \n```  \n// C3059.cpp  \n// compile with: /openmp  \n#include \"omp.h\"  \nint x, y;  \n#pragma omp threadprivate(x, y)  \n  \nint main() {  \n   #pragma omp parallel private(x, y)   // C3059  \n   {  \n      x = y;  \n   }  \n}  \n```  \n  \n Possible resolution:  \n  \n```  \n// C3059b.cpp  \n// compile with: /openmp  \n#include \"omp.h\"  \nint x = 0, y = 0;  \n  \nint main() {  \n   #pragma omp parallel firstprivate(y) private(x)  \n   {  \n      x = y;  \n   }  \n}  \n```"}