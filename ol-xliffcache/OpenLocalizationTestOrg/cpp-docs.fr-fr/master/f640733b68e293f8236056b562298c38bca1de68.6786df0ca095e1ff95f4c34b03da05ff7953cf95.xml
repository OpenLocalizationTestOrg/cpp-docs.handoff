{"nodes":[{"pos":[12,77],"content":"collection_adapter::collection_adapter (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"collection_adapter::collection_adapter (STL-CLR) | Microsoft Docs","pos":[0,65]}]},{"content":"collection_adapter::collection_adapter (STL/CLR)","pos":[723,771]},{"content":"Constructs an adapter object.","pos":[772,801]},{"content":"Syntax","pos":[810,816]},{"content":"Parameters","pos":[1016,1026]},{"content":"collection","pos":[1030,1040]},{"content":"BCL handle to wrap.","pos":[1044,1063]},{"content":"right","pos":[1070,1075]},{"content":"Object to copy.","pos":[1079,1094]},{"content":"Remarks","pos":[1103,1110]},{"content":"The constructor:","pos":[1114,1130]},{"pos":[1167,1212],"content":"initializes the stored handle with <ph id=\"ph1\">`nullptr`</ph>.","source":"initializes the stored handle with `nullptr`."},{"content":"The constructor:","pos":[1219,1235]},{"pos":[1303,1435],"content":"initializes the stored handle with <ph id=\"ph1\">`right``.`</ph><bpt id=\"p1\">[</bpt>collection_adapter::base (STL/CLR)<ept id=\"p1\">](../dotnet/collection-adapter-base-stl-clr.md)</ept><ph id=\"ph2\">`()`</ph>.","source":"initializes the stored handle with `right``.`[collection_adapter::base (STL/CLR)](../dotnet/collection-adapter-base-stl-clr.md)`()`."},{"content":"The constructor:","pos":[1442,1458]},{"pos":[1526,1659],"content":"initializes the stored handle with <ph id=\"ph1\">`right``-&gt;`</ph><bpt id=\"p1\">[</bpt>collection_adapter::base (STL/CLR)<ept id=\"p1\">](../dotnet/collection-adapter-base-stl-clr.md)</ept><ph id=\"ph2\">`()`</ph>.","source":"initializes the stored handle with `right``->`[collection_adapter::base (STL/CLR)](../dotnet/collection-adapter-base-stl-clr.md)`()`."},{"content":"The constructor:","pos":[1666,1682]},{"pos":[1735,1788],"content":"initializes the stored handle with with <ph id=\"ph1\">`collection`</ph>.","source":"initializes the stored handle with with `collection`."},{"content":"Example","pos":[1797,1804]},{"content":"Requirements","pos":[2935,2947]},{"pos":[2951,2980],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/adapter&gt;","source":"**Header:** \\<cliext/adapter>"},{"pos":[2987,3008],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[3017,3025]},{"content":"collection_adapter (STL/CLR)","pos":[3030,3058]},{"content":"collection_adapter::operator= (STL/CLR)","pos":[3106,3145]}],"content":"---\ntitle: \"collection_adapter::collection_adapter (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::collection_adapter\"\n  - \"cliext::collection_adapter::collection_adapter\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"collection_adapter member [STL/CLR]\"\nms.assetid: 7e2bb75b-d735-4135-9523-719683e06fe9\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# collection_adapter::collection_adapter (STL/CLR)\nConstructs an adapter object.  \n  \n## Syntax  \n  \n```  \ncollection_adapter();  \ncollection_adapter(collection_adapter<Coll>% right);  \ncollection_adapter(collection_adapter<Coll>^ right);  \ncollection_adapter(Coll^ collection);  \n```  \n  \n#### Parameters  \n collection  \n BCL handle to wrap.  \n  \n right  \n Object to copy.  \n  \n## Remarks  \n The constructor:  \n  \n `collection_adapter();`  \n  \n initializes the stored handle with `nullptr`.  \n  \n The constructor:  \n  \n `collection_adapter(collection_adapter<Coll>% right);`  \n  \n initializes the stored handle with `right``.`[collection_adapter::base (STL/CLR)](../dotnet/collection-adapter-base-stl-clr.md)`()`.  \n  \n The constructor:  \n  \n `collection_adapter(collection_adapter<Coll>^ right);`  \n  \n initializes the stored handle with `right``->`[collection_adapter::base (STL/CLR)](../dotnet/collection-adapter-base-stl-clr.md)`()`.  \n  \n The constructor:  \n  \n `collection_adapter(Coll^ collection);`  \n  \n initializes the stored handle with with `collection`.  \n  \n## Example  \n  \n```  \n// cliext_collection_adapter_construct.cpp   \n// compile with: /clr   \n#include <cliext/adapter>   \n#include <cliext/deque>   \n  \ntypedef cliext::collection_adapter<   \n    System::Collections::ICollection> Mycoll;   \nint main()   \n    {   \n    cliext::deque<wchar_t> d6x(6, L'x');   \n  \n// construct an empty container   \n    Mycoll c1;   \n    System::Console::WriteLine(\"base() null = {0}\", c1.base() == nullptr);   \n  \n// construct with a handle   \n    Mycoll c2(%d6x);   \n    for each (wchar_t elem in c2)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// construct by copying another container   \n    Mycoll c3(c2);   \n    for each (wchar_t elem in c3)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// construct by copying a container handle   \n    Mycoll c4(%c3);   \n    for each (wchar_t elem in c4)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \nbase() null = True  \n x x x x x x  \n x x x x x x  \n x x x x x x  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/adapter>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [collection_adapter (STL/CLR)](../dotnet/collection-adapter-stl-clr.md)   \n [collection_adapter::operator= (STL/CLR)](../dotnet/collection-adapter-operator-assign-stl-clr.md)"}