{"nodes":[{"pos":[12,40],"content":"Command IDs | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Command IDs | Microsoft Docs","pos":[0,28]}]},{"content":"Command IDs","pos":[583,594]},{"content":"A command is fully described by its command ID alone (encoded in the <bpt id=\"p1\">**</bpt>WM_COMMAND<ept id=\"p1\">**</ept> message).","pos":[595,688],"source":"A command is fully described by its command ID alone (encoded in the **WM_COMMAND** message)."},{"content":"This ID is assigned to the user-interface object that generates the command.","pos":[689,765]},{"content":"Typically, IDs are named for the functionality of the user-interface object they are assigned to.","pos":[766,863]},{"content":"For example, a Clear All item in the Edit menu might be assigned an ID such as <bpt id=\"p1\">**</bpt>ID_EDIT_CLEAR_ALL<ept id=\"p1\">**</ept>.","pos":[870,971],"source":"For example, a Clear All item in the Edit menu might be assigned an ID such as **ID_EDIT_CLEAR_ALL**."},{"content":"The class library predefines some IDs, particularly for commands that the framework handles itself, such as <bpt id=\"p1\">**</bpt>ID_EDIT_CLEAR_ALL<ept id=\"p1\">**</ept> or <ph id=\"ph1\">`ID_FILE_OPEN`</ph>.","pos":[972,1120],"source":" The class library predefines some IDs, particularly for commands that the framework handles itself, such as **ID_EDIT_CLEAR_ALL** or `ID_FILE_OPEN`."},{"content":"You will create other command IDs yourself.","pos":[1121,1164]},{"content":"When you create your own menus in the Visual C++ menu editor, it is a good idea to follow the class library's naming convention as illustrated by <ph id=\"ph1\">`ID_FILE_OPEN`</ph>.","pos":[1171,1332],"source":"When you create your own menus in the Visual C++ menu editor, it is a good idea to follow the class library's naming convention as illustrated by `ID_FILE_OPEN`."},{"content":"<bpt id=\"p1\">[</bpt>Standard Commands<ept id=\"p1\">](../mfc/standard-commands.md)</ept> explains the standard commands defined by the class library.","pos":[1333,1442],"source":"[Standard Commands](../mfc/standard-commands.md) explains the standard commands defined by the class library."},{"content":"See Also","pos":[1451,1459]},{"content":"User-Interface Objects and Command IDs","pos":[1464,1502]}],"content":"---\ntitle: \"Command IDs | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"command IDs, MFC\"\n  - \"command IDs\"\nms.assetid: e0171a2b-45b9-41fa-945d-ec2f7602ded0\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Command IDs\nA command is fully described by its command ID alone (encoded in the **WM_COMMAND** message). This ID is assigned to the user-interface object that generates the command. Typically, IDs are named for the functionality of the user-interface object they are assigned to.  \n  \n For example, a Clear All item in the Edit menu might be assigned an ID such as **ID_EDIT_CLEAR_ALL**. The class library predefines some IDs, particularly for commands that the framework handles itself, such as **ID_EDIT_CLEAR_ALL** or `ID_FILE_OPEN`. You will create other command IDs yourself.  \n  \n When you create your own menus in the Visual C++ menu editor, it is a good idea to follow the class library's naming convention as illustrated by `ID_FILE_OPEN`. [Standard Commands](../mfc/standard-commands.md) explains the standard commands defined by the class library.  \n  \n## See Also  \n [User-Interface Objects and Command IDs](../mfc/user-interface-objects-and-command-ids.md)\n\n"}