<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3cbbd05915eb08cbb77925b21a892cd852a8ff07</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\specifying-compiler-optimization-for-an-atl-project.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d665b0e90e2022f3abf40e45c3aa4ae6451400ac</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4569c6881176d762476bc02ed1f4ff7f911f686e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifying Compiler Optimization for an ATL Project | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Specifying Compiler Optimization for an ATL Project</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>By default, the <bpt id="p1">[</bpt>ATL Control Wizard<ept id="p1">](../../atl/reference/atl-control-wizard.md)</ept> generates new classes with the ATL_NO_VTABLE macro, as follows:</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>ATL then defines _ATL_NO_VTABLE as follows:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If you do not define _ATL_DISABLE_NO_VTABLE, the ATL_NO_VTABLE macro expands to <ph id="ph1">`declspec(novtable)`</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Using <ph id="ph1">`declspec(novtable)`</ph>in a class declaration prevents the vtable pointer from being initialized in the class constructor and destructor.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When you build your project, the linker eliminates the vtable and all functions to which the vtable points.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You must use ATL_NO_VTABLE, and consequently <ph id="ph1">`declspec(novtable)`</ph>, with only base classes that are not directly creatable.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You must not use <ph id="ph1">`declspec(novtable)`</ph> with the most-derived class in your project, because this class (usually <bpt id="p1">[</bpt>CComObject<ept id="p1">](../../atl/reference/ccomobject-class.md)</ept>, <bpt id="p2">[</bpt>CComAggObject<ept id="p2">](../../atl/reference/ccomaggobject-class.md)</ept>, or <bpt id="p3">[</bpt>CComPolyObject<ept id="p3">](../../atl/reference/ccompolyobject-class.md)</ept>) initializes the vtable pointer for your project.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You must not call virtual functions from the constructor of any object that uses <ph id="ph1">`declspec(novtable)`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You should move those calls to the <bpt id="p1">[</bpt>FinalConstruct<ept id="p1">](ccomobjectrootex-class.md#ccomobjectrootex__finalconstruct)</ept> method.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If you are unsure whether you should use the <ph id="ph1">`declspec(novtable)`</ph> modifier, you can remove the ATL_NO_VTABLE macro from any class definition, or you can globally disable it by specifying</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>in stdafx.h, before all other ATL header files are included.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>ATL Project Wizard</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Visual C++ Project Types</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Creating Desktop Projects By Using Application Wizards</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Programming with ATL and C Run-Time Code</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Fundamentals of ATL COM Objects</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>novtable</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Default ATL Project Configurations</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>