<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2c6d30733c00ce70c6ccdea7523dd68c0f8835d9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\adding-multiple-views-to-a-single-document.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3ace7288394435a9551ceae881a6d49a90db588f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8ab894f215b52c08e75c03ec5f717fbf71bb8144</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Adding Multiple Views to a Single Document | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Adding Multiple Views to a Single Document</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In a single-document interface (SDI) application created with the Microsoft Foundation Class (MFC) Library, each document type is associated with a single view type.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In some cases, it is desirable to have the ability to switch the current view of a document with a new view.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For additional procedures on implementing multiple views for a single document, see <bpt id="p1">[</bpt>CDocument::AddView<ept id="p1">](../mfc/reference/cdocument-class.md#cdocument__addview)</ept> and the <bpt id="p2">[</bpt>COLLECT<ept id="p2">](../visual-cpp-samples.md)</ept> MFC sample.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can implement this functionality by adding a new <ph id="ph1">`CView`</ph>-derived class and additional code for switching the views dynamically to an existing MFC application.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The steps are as follows:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Modify the Existing Application Class</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Create and Modify the New View Class</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Create and Attach the New View</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Implement the Switching Function</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Add Support for Switching the View</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The remainder of this topic assumes the following:</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The name of the <ph id="ph1">`CWinApp`</ph>-derived object is <ph id="ph2">`CMyWinApp`</ph>, and <ph id="ph3">`CMyWinApp`</ph> is declared and defined in MYWINAPP.H and MYWINAPP.CPP.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>is the name of the new <ph id="ph1">`CView`</ph>-derived object, and <ph id="ph2">`CNewView`</ph> is declared and defined in NEWVIEW.H and NEWVIEW.CPP.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Modify the Existing Application Class</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For the application to switch between views, you need to modify the application class by adding member variables to store the views and a method to switch them.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Add the following code to the declaration of <ph id="ph1">`CMyWinApp`</ph> in MYWINAPP.H:</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>NVC_MFCDocViewSDI#1</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The new member variables, <ph id="ph1">`m_pOldView`</ph> and <ph id="ph2">`m_pNewView`</ph>, point to the current view and the newly created one.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The new method (<ph id="ph1">`SwitchView`</ph>) switches the views when requested by the user.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The body of the method is discussed later in this topic in <bpt id="p1">[</bpt>Implement the Switching Function<ept id="p1">](#vcconswitchingfunctiona4)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The last modification to the application class requires including a new header file that defines a Windows message (<bpt id="p1">**</bpt>WM_INITIALUPDATE<ept id="p1">**</ept>) that is used in the switching function.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Insert the following line in the include section of MYWINAPP.CPP:</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>NVC_MFCDocViewSDI#2</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Save your changes and continue to the next step.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Create and Modify the New View Class</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Creating the new view class is made easy by using the <bpt id="p1">**</bpt>New Class<ept id="p1">**</ept> command available from Class View.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The only requirement for this class is that it derives from <ph id="ph1">`CView`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Add this new class to the application.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For specific information on adding a new class to the project, see <bpt id="p1">[</bpt>Adding a Class<ept id="p1">](../ide/adding-a-class-visual-cpp.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Once you have added the class to the project, you need to change the accessibility of some view class members.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Modify NEWVIEW.H by changing the access specifier from <ph id="ph1">`protected`</ph> to <bpt id="p1">**</bpt>public<ept id="p1">**</ept> for the constructor and destructor.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This allows the class to be created and destroyed dynamically and to modify the view appearance before it is visible.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Save your changes and continue to the next step.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Create and Attach the New View</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To create and attach the new view, you need to modify the <ph id="ph1">`InitInstance`</ph> function of your application class.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The modification adds new code that creates a new view object and then initializes both <ph id="ph1">`m_pOldView`</ph> and <ph id="ph2">`m_pNewView`</ph> with the two existing view objects.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Because the new view is created within the <ph id="ph1">`InitInstance`</ph> function, both the new and existing views persist for the lifetime of the application.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>However, the application could just as easily create the new view dynamically.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Insert this code after the call to <ph id="ph1">`ProcessShellCommand`</ph>:</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>NVC_MFCDocViewSDI#3</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Save your changes and continue to the next step.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Implement the Switching Function</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In the previous step, you added code that created and initialized a new view object.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The last major piece is to implement the switching method, <ph id="ph1">`SwitchView`</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>At the end of the implementation file for your application class (MYWINAPP.CPP), add the following method definition:</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>NVC_MFCDocViewSDI#4</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Save your changes and continue to the next step.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Add Support for Switching the View</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The final step involves adding code that calls the <ph id="ph1">`SwitchView`</ph> method when the application needs to switch between views.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This can be done in several ways: by either adding a new menu item for the user to choose or switching the views internally when certain conditions are met.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For more information on adding new menu items and command handler functions, see <bpt id="p1">[</bpt>Handlers for Commands and Control Notifications<ept id="p1">](../mfc/handlers-for-commands-and-control-notifications.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Document/View Architecture</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>