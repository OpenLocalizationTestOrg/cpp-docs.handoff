{"nodes":[{"pos":[12,58],"content":"A.9   Using single Directives | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"A.9   Using single Directives | Microsoft Docs","pos":[0,46]}]},{"content":"A.9   Using single Directives","pos":[538,567]},{"content":"The following example demonstrates the <ph id=\"ph1\">`single`</ph> directive (<bpt id=\"p1\">[</bpt>Section 2.4.3<ept id=\"p1\">](../../parallel/openmp/2-4-3-single-construct.md)</ept> on page 15).","pos":[568,704],"source":"The following example demonstrates the `single` directive ([Section 2.4.3](../../parallel/openmp/2-4-3-single-construct.md) on page 15)."},{"content":"In the example, only one thread (usually the first thread that encounters the <ph id=\"ph1\">`single`</ph> directive) prints the progress message.","pos":[705,831],"source":" In the example, only one thread (usually the first thread that encounters the `single` directive) prints the progress message."},{"content":"The user must not make any assumptions as to which thread will execute the <ph id=\"ph1\">`single`</ph> section.","pos":[832,924],"source":" The user must not make any assumptions as to which thread will execute the `single` section."},{"content":"All other threads will skip the <ph id=\"ph1\">`single`</ph> section and stop at the barrier at the end of the <ph id=\"ph2\">`single`</ph> construct.","pos":[925,1035],"source":" All other threads will skip the `single` section and stop at the barrier at the end of the `single` construct."},{"content":"If other threads can proceed without waiting for the thread executing the <ph id=\"ph1\">`single`</ph> section, a <ph id=\"ph2\">`nowait`</ph> clause can be specified on the <ph id=\"ph3\">`single`</ph> directive.","pos":[1036,1189],"source":" If other threads can proceed without waiting for the thread executing the `single` section, a `nowait` clause can be specified on the `single` directive."}],"content":"---\ntitle: \"A.9   Using single Directives | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nms.assetid: 0c0f9495-5794-4db9-883b-a12e3a9f1328\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# A.9   Using single Directives\nThe following example demonstrates the `single` directive ([Section 2.4.3](../../parallel/openmp/2-4-3-single-construct.md) on page 15). In the example, only one thread (usually the first thread that encounters the `single` directive) prints the progress message. The user must not make any assumptions as to which thread will execute the `single` section. All other threads will skip the `single` section and stop at the barrier at the end of the `single` construct. If other threads can proceed without waiting for the thread executing the `single` section, a `nowait` clause can be specified on the `single` directive.  \n  \n```  \n#pragma omp parallel  \n{  \n    #pragma omp single  \n        printf_s(\"Beginning work1.\\n\");  \n    work1();  \n    #pragma omp single  \n        printf_s(\"Finishing work1.\\n\");  \n    #pragma omp single nowait  \n        printf_s(\"Finished work1 and beginning work2.\\n\");  \n    work2();  \n}  \n```"}