{"nodes":[{"pos":[12,49],"content":"Compiler Error C2768 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C2768 | Microsoft Docs","pos":[0,37]}]},{"content":"Compiler Error C2768","pos":[597,617]},{"content":"'function' : illegal use of explicit template arguments","pos":[618,673]},{"content":"The compiler was unable to determine if a function definition was supposed to be an explicit specialization of a function template or if the function definition was supposed to be for a new function.","pos":[680,879]},{"content":"This error was introduced in Visual Studio .NET 2003, as part of the compiler conformance enhancements.","pos":[886,989]},{"content":"The following sample generates C2768:","pos":[996,1033]}],"content":"---\ntitle: \"Compiler Error C2768 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C2768\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C2768\"\nms.assetid: a7f6047a-6a80-4737-ad5c-c12868639fb5\ncaps.latest.revision: 9\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Error C2768\n'function' : illegal use of explicit template arguments  \n  \n The compiler was unable to determine if a function definition was supposed to be an explicit specialization of a function template or if the function definition was supposed to be for a new function.  \n  \n This error was introduced in Visual Studio .NET 2003, as part of the compiler conformance enhancements.  \n  \n The following sample generates C2768:  \n  \n```  \n// C2768.cpp  \ntemplate<typename T>  \nvoid f(T) {}  \n  \nvoid f<int>(int) {}   // C2768  \n  \n// an explicit specialization  \ntemplate<>  \nvoid f<int>(int) {}   \n  \n// global nontemplate function overload  \nvoid f(int) {}  \n```"}