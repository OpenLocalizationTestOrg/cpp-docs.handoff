{"nodes":[{"pos":[12,46],"content":"CAtlModuleT Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CAtlModuleT Class | Microsoft Docs","pos":[0,34]}]},{"pos":[703,720],"content":"CAtlModuleT Class","linkify":"CAtlModuleT Class","nodes":[{"content":"CAtlModuleT Class","pos":[0,17]}]},{"content":"This class implements an ATL module.","pos":[721,757]},{"pos":[766,772],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[875,885],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Your class derived from <ph id=\"ph1\">`CAtlModuleT`</ph>.","pos":[896,934],"source":" Your class derived from `CAtlModuleT`."},{"pos":[943,950],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[960,979],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[986,990]},{"content":"Description","pos":[991,1002]},{"pos":[1040,1093],"content":"<bpt id=\"p1\">[</bpt>CAtlModuleT::CAtlModuleT<ept id=\"p1\">](#catlmodulet__catlmodulet)</ept>","source":"[CAtlModuleT::CAtlModuleT](#catlmodulet__catlmodulet)"},{"content":"The constructor.","pos":[1094,1110]},{"pos":[1121,1135],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1142,1146]},{"content":"Description","pos":[1147,1158]},{"pos":[1196,1245],"content":"<bpt id=\"p1\">[</bpt>CAtlModuleT::InitLibId<ept id=\"p1\">](#catlmodulet__initlibid)</ept>","source":"[CAtlModuleT::InitLibId](#catlmodulet__initlibid)"},{"content":"Initializes the data member containing the GUID of the current module.","pos":[1246,1316]},{"pos":[1321,1378],"content":"<bpt id=\"p1\">[</bpt>CAtlModuleT::RegisterAppId<ept id=\"p1\">](#catlmodulet__registerappid)</ept>","source":"[CAtlModuleT::RegisterAppId](#catlmodulet__registerappid)"},{"content":"Adds the EXE to the registry.","pos":[1379,1408]},{"pos":[1413,1472],"content":"<bpt id=\"p1\">[</bpt>CAtlModuleT::RegisterServer<ept id=\"p1\">](#catlmodulet__registerserver)</ept>","source":"[CAtlModuleT::RegisterServer](#catlmodulet__registerserver)"},{"content":"Adds the service to the registry.","pos":[1473,1506]},{"pos":[1511,1572],"content":"<bpt id=\"p1\">[</bpt>CAtlModuleT::UnregisterAppId<ept id=\"p1\">](#catlmodulet__unregisterappid)</ept>","source":"[CAtlModuleT::UnregisterAppId](#catlmodulet__unregisterappid)"},{"content":"Removes the EXE from the registry.","pos":[1573,1607]},{"pos":[1612,1675],"content":"<bpt id=\"p1\">[</bpt>CAtlModuleT::UnregisterServer<ept id=\"p1\">](#catlmodulet__unregisterserver)</ept>","source":"[CAtlModuleT::UnregisterServer](#catlmodulet__unregisterserver)"},{"content":"Removes the service from the registry.","pos":[1676,1714]},{"pos":[1719,1788],"content":"<bpt id=\"p1\">[</bpt>CAtlModuleT::UpdateRegistryAppId<ept id=\"p1\">](#catlmodulet__updateregistryappid)</ept>","source":"[CAtlModuleT::UpdateRegistryAppId](#catlmodulet__updateregistryappid)"},{"content":"Updates the EXE information in the registry.","pos":[1789,1833]},{"pos":[1843,1850],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"<ph id=\"ph1\">`CAtlModuleT`</ph>, derived from <bpt id=\"p1\">[</bpt>CAtlModule<ept id=\"p1\">](../../atl/reference/catlmodule-class.md)</ept>, implements an Executable (EXE) or a Service (EXE) ATL module.","pos":[1854,1998],"source":"`CAtlModuleT`, derived from [CAtlModule](../../atl/reference/catlmodule-class.md), implements an Executable (EXE) or a Service (EXE) ATL module."},{"content":"An Executable module is a local, out-of-process server, whereas a Service module is a Windows application that runs in the background when Windows starts.","pos":[1999,2153]},{"pos":[2160,2254],"content":"<ph id=\"ph1\">`CAtlModuleT`</ph> provides support for initializing, registering, and unregistering of the module.","source":"`CAtlModuleT` provides support for initializing, registering, and unregistering of the module."},{"pos":[2263,2284],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[2288,2330],"content":"<bpt id=\"p1\">[</bpt>_ATL_MODULE<ept id=\"p1\">](atl-typedefs.md#_atl_module)</ept>","source":"[_ATL_MODULE](atl-typedefs.md#_atl_module)"},{"pos":[2338,2391],"content":"<bpt id=\"p1\">[</bpt>CAtlModule<ept id=\"p1\">](../../atl/reference/catlmodule-class.md)</ept>","source":"[CAtlModule](../../atl/reference/catlmodule-class.md)"},{"pos":[2420,2432],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2436,2457],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlbase.h","source":"**Header:** atlbase.h"},{"pos":[2467,2532],"content":"<bpt id=\"p1\">&lt;a name=\"catlmodulet__catlmodulet\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAtlModuleT::CAtlModuleT","linkify":"<a name=\"catlmodulet__catlmodulet\"></a>  CAtlModuleT::CAtlModuleT","source":"<a name=\"catlmodulet__catlmodulet\"></a>  CAtlModuleT::CAtlModuleT"},{"content":"The constructor.","pos":[2536,2552]},{"pos":[2598,2605],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2609,2665],"content":"Calls <bpt id=\"p1\">[</bpt>CAtlModuleT::InitLibId<ept id=\"p1\">](#catlmodulet__initlibid)</ept>.","source":"Calls [CAtlModuleT::InitLibId](#catlmodulet__initlibid)."},{"pos":[2675,2736],"content":"<bpt id=\"p1\">&lt;a name=\"catlmodulet__initlibid\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAtlModuleT::InitLibId","linkify":"<a name=\"catlmodulet__initlibid\"></a>  CAtlModuleT::InitLibId","source":"<a name=\"catlmodulet__initlibid\"></a>  CAtlModuleT::InitLibId"},{"content":"Initializes the data member containing the GUID of the current module.","pos":[2740,2810]},{"pos":[2866,2873],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2877,2957],"content":"Called by the constructor <bpt id=\"p1\">[</bpt>CAtlModuleT::CAtlModuleT<ept id=\"p1\">](#catlmodulet__catlmodulet)</ept>.","source":"Called by the constructor [CAtlModuleT::CAtlModuleT](#catlmodulet__catlmodulet)."},{"pos":[2967,3036],"content":"<bpt id=\"p1\">&lt;a name=\"catlmodulet__registerappid\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAtlModuleT::RegisterAppId","linkify":"<a name=\"catlmodulet__registerappid\"></a>  CAtlModuleT::RegisterAppId","source":"<a name=\"catlmodulet__registerappid\"></a>  CAtlModuleT::RegisterAppId"},{"content":"Adds the EXE to the registry.","pos":[3040,3069]},{"pos":[3125,3137],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[3141,3197]},{"pos":[3207,3278],"content":"<bpt id=\"p1\">&lt;a name=\"catlmodulet__registerserver\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAtlModuleT::RegisterServer","linkify":"<a name=\"catlmodulet__registerserver\"></a>  CAtlModuleT::RegisterServer","source":"<a name=\"catlmodulet__registerserver\"></a>  CAtlModuleT::RegisterServer"},{"content":"Adds the service to the registry.","pos":[3282,3315]},{"pos":[3433,3443],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"TRUE if the type library is to be registered.","pos":[3464,3509]},{"content":"The default value is FALSE.","pos":[3510,3537]},{"content":"Points to the CLSID of the object to be registered.","pos":[3556,3607]},{"content":"If NULL (the default value), all objects in the object map will be registered.","pos":[3608,3686]},{"pos":[3696,3708],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[3712,3768]},{"pos":[3778,3851],"content":"<bpt id=\"p1\">&lt;a name=\"catlmodulet__unregisterappid\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAtlModuleT::UnregisterAppId","linkify":"<a name=\"catlmodulet__unregisterappid\"></a>  CAtlModuleT::UnregisterAppId","source":"<a name=\"catlmodulet__unregisterappid\"></a>  CAtlModuleT::UnregisterAppId"},{"content":"Removes the EXE from the registry.","pos":[3855,3889]},{"pos":[3947,3959],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[3963,4019]},{"pos":[4029,4104],"content":"<bpt id=\"p1\">&lt;a name=\"catlmodulet__unregisterserver\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAtlModuleT::UnregisterServer","linkify":"<a name=\"catlmodulet__unregisterserver\"></a>  CAtlModuleT::UnregisterServer","source":"<a name=\"catlmodulet__unregisterserver\"></a>  CAtlModuleT::UnregisterServer"},{"content":"Removes the service from the registry.","pos":[4108,4146]},{"pos":[4260,4270],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"TRUE if the type library is also to be unregistered.","pos":[4293,4345]},{"content":"Points to the CLSID of the object to be unregistered.","pos":[4364,4417]},{"content":"If NULL (the default value), all objects in the object map will be unregistered.","pos":[4418,4498]},{"pos":[4508,4520],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[4524,4580]},{"pos":[4590,4671],"content":"<bpt id=\"p1\">&lt;a name=\"catlmodulet__updateregistryappid\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAtlModuleT::UpdateRegistryAppId","linkify":"<a name=\"catlmodulet__updateregistryappid\"></a>  CAtlModuleT::UpdateRegistryAppId","source":"<a name=\"catlmodulet__updateregistryappid\"></a>  CAtlModuleT::UpdateRegistryAppId"},{"content":"Updates the EXE information in the registry.","pos":[4675,4719]},{"pos":[4815,4825],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Reserved.","pos":[4844,4853]},{"pos":[4863,4875],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[4879,4935]},{"pos":[4944,4952],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>CAtlModule Class<ept id=\"p1\">](../../atl/reference/catlmodule-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[4956,5016],"source":"[CAtlModule Class](../../atl/reference/catlmodule-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Class Overview<ept id=\"p1\">](../../atl/atl-class-overview.md)</ept><ph id=\"ph1\"> </ph>","pos":[5019,5070],"source":" [Class Overview](../../atl/atl-class-overview.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept>","pos":[5073,5123],"source":" [Module Classes](../../atl/atl-module-classes.md)"}],"content":"---\ntitle: \"CAtlModuleT Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ATL::CAtlModuleT<T>\"\n  - \"ATL.CAtlModuleT\"\n  - \"ATL.CAtlModuleT<T>\"\n  - \"ATL::CAtlModuleT\"\n  - \"CAtlModuleT\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CAtlModuleT class\"\nms.assetid: 9b74d02f-9117-47b1-a05e-c5945f83dd2b\ncaps.latest.revision: 19\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CAtlModuleT Class\nThis class implements an ATL module.  \n  \n## Syntax  \n  \n```\ntemplate <class T>\n    class ATL_NO_VTABLE CAtlModuleT :\n    public CAtlModule\n```  \n  \n#### Parameters  \n `T`  \n Your class derived from `CAtlModuleT`.  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAtlModuleT::CAtlModuleT](#catlmodulet__catlmodulet)|The constructor.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAtlModuleT::InitLibId](#catlmodulet__initlibid)|Initializes the data member containing the GUID of the current module.|  \n|[CAtlModuleT::RegisterAppId](#catlmodulet__registerappid)|Adds the EXE to the registry.|  \n|[CAtlModuleT::RegisterServer](#catlmodulet__registerserver)|Adds the service to the registry.|  \n|[CAtlModuleT::UnregisterAppId](#catlmodulet__unregisterappid)|Removes the EXE from the registry.|  \n|[CAtlModuleT::UnregisterServer](#catlmodulet__unregisterserver)|Removes the service from the registry.|  \n|[CAtlModuleT::UpdateRegistryAppId](#catlmodulet__updateregistryappid)|Updates the EXE information in the registry.|  \n  \n## Remarks  \n `CAtlModuleT`, derived from [CAtlModule](../../atl/reference/catlmodule-class.md), implements an Executable (EXE) or a Service (EXE) ATL module. An Executable module is a local, out-of-process server, whereas a Service module is a Windows application that runs in the background when Windows starts.  \n  \n `CAtlModuleT` provides support for initializing, registering, and unregistering of the module.  \n  \n## Inheritance Hierarchy  \n [_ATL_MODULE](atl-typedefs.md#_atl_module)  \n\n  \n [CAtlModule](../../atl/reference/catlmodule-class.md)  \n  \n `CAtlModuleT`  \n  \n## Requirements  \n **Header:** atlbase.h  \n  \n##  <a name=\"catlmodulet__catlmodulet\"></a>  CAtlModuleT::CAtlModuleT  \n The constructor.  \n  \n```\nCAtlModuleT() throw();\n```  \n  \n### Remarks  \n Calls [CAtlModuleT::InitLibId](#catlmodulet__initlibid).  \n  \n##  <a name=\"catlmodulet__initlibid\"></a>  CAtlModuleT::InitLibId  \n Initializes the data member containing the GUID of the current module.  \n  \n```\nstatic void InitLibId() throw();\n```  \n  \n### Remarks  \n Called by the constructor [CAtlModuleT::CAtlModuleT](#catlmodulet__catlmodulet).  \n  \n##  <a name=\"catlmodulet__registerappid\"></a>  CAtlModuleT::RegisterAppId  \n Adds the EXE to the registry.  \n  \n```\nHRESULT RegisterAppId() throw();\n```  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"catlmodulet__registerserver\"></a>  CAtlModuleT::RegisterServer  \n Adds the service to the registry.  \n  \n```\nHRESULT RegisterServer(\n    BOOL bRegTypeLib = FALSE,\n    const CLSID* pCLSID = NULL) throw();\n```  \n  \n### Parameters  \n `bRegTypeLib`  \n TRUE if the type library is to be registered. The default value is FALSE.  \n  \n `pCLSID`  \n Points to the CLSID of the object to be registered. If NULL (the default value), all objects in the object map will be registered.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"catlmodulet__unregisterappid\"></a>  CAtlModuleT::UnregisterAppId  \n Removes the EXE from the registry.  \n  \n```\nHRESULT UnregisterAppId() throw();\n```  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"catlmodulet__unregisterserver\"></a>  CAtlModuleT::UnregisterServer  \n Removes the service from the registry.  \n  \n```\nHRESULT UnregisterServer(\n    BOOL bUnRegTypeLib,\n    const CLSID* pCLSID = NULL) throw();\n```  \n  \n### Parameters  \n `bUnRegTypeLib`  \n TRUE if the type library is also to be unregistered.  \n  \n `pCLSID`  \n Points to the CLSID of the object to be unregistered. If NULL (the default value), all objects in the object map will be unregistered.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"catlmodulet__updateregistryappid\"></a>  CAtlModuleT::UpdateRegistryAppId  \n Updates the EXE information in the registry.  \n  \n```\nstatic HRESULT WINAPI UpdateRegistryAppId(BOOL  /* bRegister*/) throw();\n```  \n  \n### Parameters  \n `bRegister`  \n Reserved.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n## See Also  \n [CAtlModule Class](../../atl/reference/catlmodule-class.md)   \n [Class Overview](../../atl/atl-class-overview.md)   \n [Module Classes](../../atl/atl-module-classes.md)\n"}