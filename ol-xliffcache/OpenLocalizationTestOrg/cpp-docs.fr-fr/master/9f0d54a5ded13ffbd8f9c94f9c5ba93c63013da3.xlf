<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9f0d54a5ded13ffbd8f9c94f9c5ba93c63013da3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\tn055-migrating-mfc-odbc-database-class-applications-to-mfc-dao-classes.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c79ca21123704e4c3f3ddc45b8d781609bfdd5a7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ceb080ee14b7ed5b7cc69cb9a1ac6a986833914f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>TN055: Migrating MFC ODBC Database Class Applications to MFC DAO Classes | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>TN055: Migrating MFC ODBC Database Class Applications to MFC DAO Classes</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>As of Visual C++ .NET, the Visual C++ environment and wizards no longer support DAO (although the DAO classes are included and you can still use them).</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Microsoft recommends that you use <bpt id="p1">[</bpt>OLE DB Templates<ept id="p1">](../data/oledb/ole-db-templates.md)</ept> or <bpt id="p2">[</bpt>ODBC and MFC<ept id="p2">](../data/odbc/odbc-and-mfc.md)</ept> for new projects.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You should only use DAO in maintaining existing applications.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Overview</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In many situations it may be desirable to migrate applications that use MFC's ODBC database classes to MFC's DAO database classes.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This technical note will detail most of the differences between the MFC ODBC and DAO classes.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>With the differences in mind, it should not be overly difficult to migrate applications from the ODBC classes to the MFC classes if desired.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Why Migrate from ODBC to DAO</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>There are a number of reasons why you might want to migrate applications from the ODBC Database Classes to the DAO Database Classes, but the decision is not necessarily simple or obvious.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>One thing to keep in mind is that the Microsoft Jet database engine that is used by DAO can read any ODBC data source for which you have an ODBC driver.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>It may be more efficient to use the ODBC Database Classes or call ODBC directly yourself, but the Microsoft Jet database engine can read ODBC data.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Some simple cases that make the ODBC/DAO decision easy.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For instance, when you only need access to data in a format that the Microsoft Jet engine can read directly (Access format, Excel format, and so on) the obvious choice is to use the DAO Database Classes.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>More complex cases arise when your data exists on a server or on a variety of different servers.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In this case, the decision to use the ODBC Database classes or the DAO Database classes is a difficult one.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If you want to do things like heterogeneous joins (join data from servers in multiple formats like SQL Server and Oracle), then the Microsoft Jet database engine will perform the join for you rather than forcing you to do the work necessary if you used the ODBC Database Classes or called ODBC directly.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you are using an ODBC driver that supports driver cursors, your best choice might be the ODBC Database classes.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The choice can be complicated, so you might want to write some sample code to test the performance of various methods given your special needs.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This technical note assumes that you have made the decision to migrate from the ODBC Database Classes to the DAO Database classes.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Similarities Between ODBC Database Classes and MFC DAO Database Classes</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The original design of the MFC ODBC classes was based on the DAO object model that has been in use in Microsoft Access and Microsoft Visual Basic.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This means that there are many common features of the ODBC and DAO MFC classes, which will not all be listed in this section.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In general, the programming models are the same.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>To highlight a few similarities:</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Both the ODBC and DAO classes have database objects that manage using the underlying database management system (DBMS).</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Both have recordset objects representing a set of results returned from that DBMS.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The DAO database and recordset objects have members nearly identical to the ODBC classes.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>With both sets of classes, the code to retrieve data is identical except for some object and member name changes.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Changes will be required, but usually the process is a straightforward name change when switching from the ODBC classes to DAO classes.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For example, in both models the procedure to retrieve data is to create and open a database object, create and open a recordset object, and navigate (move) though the data performing some operation.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Differences Between ODBC and DAO MFC Classes</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The DAO classes include more objects and a richer set of methods, but this section will only detail the differences in similar classes and functionality.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Probably the most obvious differences between the classes are the name changes for similar classes and global functions.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The following list shows the name changes of the objects, methods and global functions associated with the database classes:</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Class or function</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Equivalent in MFC DAO classes</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>RFX_Date</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>DFX_Date<ept id="p1">**</ept> (<ph id="ph1">`COleDateTime`</ph>-based)</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`RFX_Date`</ph> function is based on <ph id="ph2">`CTime`</ph> and <bpt id="p1">**</bpt>TIMESTAMP_STRUCT<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The major changes to functionality which may affect your application and require more than simple name changes are listed below.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The constants and macros used to specify things like recordset open type and recordset open options have been changed.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>With the ODBC classes MFC needed to define these options via macros or enumerated types.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>With the DAO classes, DAO provides the definition of these options in a header file (DBDAOINT.H).</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Thus the recordset type is an enumerated member of <ph id="ph1">`CRecordset`</ph>, but with DAO it is a constant instead.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example you would use <bpt id="p1">**</bpt>snapshot<ept id="p1">**</ept> when specifying the type of <ph id="ph1">`CRecordset`</ph> in ODBC but <bpt id="p2">**</bpt>DB_OPEN_SNAPSHOT<ept id="p2">**</ept> when specifying the type of <ph id="ph2">`CDaoRecordset`</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The default recordset type for <ph id="ph1">`CRecordset`</ph> is <bpt id="p1">**</bpt>snapshot<ept id="p1">**</ept> while the default recordset type for <ph id="ph2">`CDaoRecordset`</ph> is <bpt id="p2">**</bpt>dynaset<ept id="p2">**</ept> (see the Note below for an additional issue about ODBC class snapshots).</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The ODBC <ph id="ph1">`CRecordset`</ph> class has an option to create a forward-only recordset type.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`CDaoRecordset`</ph> class, forward-only is not a recordset type, but rather a property (or option) of certain types of recordsets.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>An append-only recordset when opening a <ph id="ph1">`CRecordset`</ph> object meant that the recordset's data could be read and appended.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>With <ph id="ph1">`CDaoRecordset`</ph> object, the append-only option means literally that the recordset's data can only be appended (and not read).</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The ODBC classes' transaction member functions are members of <ph id="ph1">`CDatabase`</ph> and act at the database level.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In the DAO classes, the transaction member functions are members of a higher level class (<ph id="ph1">`CDaoWorkspace`</ph>) and thus may impact multiple <ph id="ph2">`CDaoDatabase`</ph> objects sharing the same workspace (transaction space).</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The exception class has been changed.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CDBExceptions<ept id="p1">**</ept> are thrown in the ODBC classes and <bpt id="p2">**</bpt>CDaoExceptions<ept id="p2">**</ept> in the DAO classes.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>uses <ph id="ph1">`CTime`</ph> and <bpt id="p1">**</bpt>TIMESTAMP_STRUCT<ept id="p1">**</ept> objects while <bpt id="p2">**</bpt>DFX_Date<ept id="p2">**</ept> uses <ph id="ph2">`COleDateTime`</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`COleDateTime`</ph> is nearly identical to <ph id="ph2">`CTime`</ph>, but is based on a 8-byte OLE <bpt id="p1">**</bpt>DATE<ept id="p1">**</ept> rather than a 4-byte <ph id="ph3">`time_t`</ph> so it can hold a much bigger range of data.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>DAO (<ph id="ph1">`CDaoRecordset`</ph>) snapshots are read-only while ODBC (<ph id="ph2">`CRecordset`</ph>) snapshots may be updateable depending on the driver and use of the ODBC cursor library.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If you are using the cursor library, <ph id="ph1">`CRecordset`</ph> snapshots are updateable.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If you are using any of the Microsoft drivers from Desktop Driver Pack 3.0 without the ODBC cursor library, the <ph id="ph1">`CRecordset`</ph> snapshots are read-only.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If you are using another driver, check the driver's documentation to see if snapshots (<bpt id="p1">**</bpt>STATIC_CURSORS<ept id="p1">**</ept>) are read-only.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Technical Notes by Number</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Technical Notes by Category</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>