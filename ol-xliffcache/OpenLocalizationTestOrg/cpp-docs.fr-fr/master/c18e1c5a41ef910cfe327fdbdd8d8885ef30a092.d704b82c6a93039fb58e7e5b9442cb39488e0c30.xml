{"nodes":[{"pos":[12,53],"content":"_ATL_FUNC_INFO Structure | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_ATL_FUNC_INFO Structure | Microsoft Docs","pos":[0,41]}]},{"content":"_ATL_FUNC_INFO Structure","pos":[703,727]},{"content":"Contains type information used to describe a method or property on a dispinterface.","pos":[728,811]},{"content":"Syntax","pos":[820,826]},{"content":"Members","pos":[975,982]},{"content":"cc","pos":[988,990]},{"content":"The calling convention.","pos":[996,1019]},{"content":"When using this structure with the <bpt id=\"p1\">[</bpt>IDispEventSimpleImpl<ept id=\"p1\">](../../atl/reference/idispeventsimpleimpl-class.md)</ept> class, this member must be <bpt id=\"p2\">**</bpt>CC_STDCALL<ept id=\"p2\">**</ept>.","pos":[1020,1171],"source":" When using this structure with the [IDispEventSimpleImpl](../../atl/reference/idispeventsimpleimpl-class.md) class, this member must be **CC_STDCALL**."},{"content":"is the only option supported in Windows CE for the <ph id=\"ph1\">`CALLCONV`</ph> field of the <ph id=\"ph2\">`_ATL_FUNC_INFO`</ph> structure.","pos":[1183,1285],"source":" is the only option supported in Windows CE for the `CALLCONV` field of the `_ATL_FUNC_INFO` structure."},{"content":"Any other value is unsupported thus its behavior undefined.","pos":[1286,1345]},{"content":"vtReturn","pos":[1354,1362]},{"content":"The variant type of the function return value.","pos":[1368,1414]},{"content":"nParams","pos":[1423,1430]},{"content":"The number of function parameters.","pos":[1436,1470]},{"content":"pVarTypes","pos":[1479,1488]},{"content":"An array of variant types of the function parameters.","pos":[1494,1547]},{"content":"Remarks","pos":[1556,1563]},{"content":"Internally, ATL uses this structure to hold information obtained from a type library.","pos":[1567,1652]},{"content":"You may need to manipulate this structure directly if you provide type information for an event handler used with the <bpt id=\"p1\">[</bpt>IDispEventSimpleImpl<ept id=\"p1\">](../../atl/reference/idispeventsimpleimpl-class.md)</ept> class and <bpt id=\"p2\">[</bpt>SINK_ENTRY_INFO<ept id=\"p2\">](http://msdn.microsoft.com/library/1a0ae260-2c82-4926-a537-db01e5f206a7)</ept> macro.","pos":[1653,1951],"source":" You may need to manipulate this structure directly if you provide type information for an event handler used with the [IDispEventSimpleImpl](../../atl/reference/idispeventsimpleimpl-class.md) class and [SINK_ENTRY_INFO](http://msdn.microsoft.com/library/1a0ae260-2c82-4926-a537-db01e5f206a7) macro."},{"content":"Example","pos":[1960,1967]},{"content":"Given a dispinterface method defined in IDL:","pos":[1971,2015]},{"pos":[2033,2054],"content":"NVC_ATL_Windowing#139"},{"pos":[2120,2167],"content":"you would define an <ph id=\"ph1\">`_ATL_FUNC_INFO`</ph> structure:","source":"you would define an `_ATL_FUNC_INFO` structure:"},{"pos":[2185,2206],"content":"NVC_ATL_Windowing#140"},{"content":"Requirements","pos":[2272,2284]},{"pos":[2288,2308],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlcom.h","source":"**Header:** atlcom.h"},{"content":"See Also","pos":[2317,2325]},{"content":"Structures","pos":[2330,2340]},{"content":"IDispEventSimpleImpl Class","pos":[2386,2412]},{"content":"SINK_ENTRY_INFO","pos":[2470,2485]}],"content":"---\ntitle: \"_ATL_FUNC_INFO Structure | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"_ATL_FUNC_INFO\"\n  - \"ATL::_ATL_FUNC_INFO\"\n  - \"ATL._ATL_FUNC_INFO\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"_ATL_FUNC_INFO structure\"\n  - \"ATL_FUNC_INFO structure\"\nms.assetid: 441ebe2c-f971-47de-9f52-a258e8d6f88e\ncaps.latest.revision: 21\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _ATL_FUNC_INFO Structure\nContains type information used to describe a method or property on a dispinterface.  \n  \n## Syntax  \n  \n```\nstruct _ATL_FUNC_INFO {\n    CALLCONV cc;\n    VARTYPE vtReturn;\n    SHORT nParams;\n    VARTYPE pVarTypes[_ATL_MAX_VARTYPES];\n};\n```  \n  \n## Members  \n **cc**  \n The calling convention. When using this structure with the [IDispEventSimpleImpl](../../atl/reference/idispeventsimpleimpl-class.md) class, this member must be **CC_STDCALL**. `CC_CDECL` is the only option supported in Windows CE for the `CALLCONV` field of the `_ATL_FUNC_INFO` structure. Any other value is unsupported thus its behavior undefined.  \n  \n **vtReturn**  \n The variant type of the function return value.  \n  \n **nParams**  \n The number of function parameters.  \n  \n **pVarTypes**  \n An array of variant types of the function parameters.  \n  \n## Remarks  \n Internally, ATL uses this structure to hold information obtained from a type library. You may need to manipulate this structure directly if you provide type information for an event handler used with the [IDispEventSimpleImpl](../../atl/reference/idispeventsimpleimpl-class.md) class and [SINK_ENTRY_INFO](http://msdn.microsoft.com/library/1a0ae260-2c82-4926-a537-db01e5f206a7) macro.  \n  \n## Example  \n Given a dispinterface method defined in IDL:  \n  \n [!code-cpp[NVC_ATL_Windowing#139](../../atl/codesnippet/cpp/atl-func-info-structure_1.idl)]  \n  \n you would define an `_ATL_FUNC_INFO` structure:  \n  \n [!code-cpp[NVC_ATL_Windowing#140](../../atl/codesnippet/cpp/atl-func-info-structure_2.h)]  \n  \n## Requirements  \n **Header:** atlcom.h  \n  \n## See Also  \n [Structures](../../atl/reference/atl-structures.md)   \n [IDispEventSimpleImpl Class](../../atl/reference/idispeventsimpleimpl-class.md)   \n [SINK_ENTRY_INFO](http://msdn.microsoft.com/library/1a0ae260-2c82-4926-a537-db01e5f206a7)\n\n\n\n\n\n"}