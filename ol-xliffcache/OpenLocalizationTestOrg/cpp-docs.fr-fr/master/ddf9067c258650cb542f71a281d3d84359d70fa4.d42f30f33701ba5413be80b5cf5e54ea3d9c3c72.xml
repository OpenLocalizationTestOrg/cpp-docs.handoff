{"nodes":[{"pos":[12,46],"content":"CRowsetImpl Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CRowsetImpl Class | Microsoft Docs","pos":[0,34]}]},{"content":"CRowsetImpl Class","pos":[650,667]},{"content":"Provides a standard OLE DB rowset implementation without requiring multiple inheritance of many implementation interfaces.","pos":[668,790]},{"content":"Syntax","pos":[799,805]},{"content":"Parameters","pos":[1253,1263]},{"content":"The user's class that derives from <ph id=\"ph1\">`CRowsetImpl`</ph>.","pos":[1274,1323],"source":" The user's class that derives from `CRowsetImpl`."},{"content":"The user record class.","pos":[1343,1365]},{"content":"The class that contains properties for the rowset; typically the command.","pos":[1390,1463]},{"content":"The class that will act as storage for the rowset's data.","pos":[1485,1542]},{"content":"This parameter defaults to <ph id=\"ph1\">`CAtlArray`</ph>, but it can be any class that supports the required functionality.","pos":[1543,1648],"source":" This parameter defaults to `CAtlArray`, but it can be any class that supports the required functionality."},{"content":"Members","pos":[1657,1664]},{"content":"Methods","pos":[1674,1681]},{"content":"NameFromDBID","pos":[1703,1715]},{"pos":[1763,1835],"content":"Extracts a string from a <bpt id=\"p1\">**</bpt>DBID<ept id=\"p1\">**</ept> and copies it to the <ph id=\"ph1\">`bstr`</ph> passed in.","source":"Extracts a string from a **DBID** and copies it to the `bstr` passed in."},{"content":"SetCommandText","pos":[1841,1855]},{"pos":[1905,2099],"content":"Validates and stores the <bpt id=\"p1\">**</bpt>DBID<ept id=\"p1\">**</ept>s in the two strings (<bpt id=\"p2\">[</bpt>m_strCommandText<ept id=\"p2\">](../../data/oledb/crowsetimpl-m-strcommandtext.md)</ept> and <bpt id=\"p3\">[</bpt>m_strIndexText<ept id=\"p3\">](../../data/oledb/crowsetimpl-m-strindextext.md)</ept>).","source":"Validates and stores the **DBID**s in the two strings ([m_strCommandText](../../data/oledb/crowsetimpl-m-strcommandtext.md) and [m_strIndexText](../../data/oledb/crowsetimpl-m-strindextext.md))."},{"content":"Overridable Methods","pos":[2110,2129]},{"content":"GetColumnInfo","pos":[2151,2164]},{"content":"Retrieves column information for a particular client request.","pos":[2213,2274]},{"content":"GetCommandFromID","pos":[2280,2296]},{"pos":[2348,2608],"content":"Checks to see if either or both parameters contain string values, and if so, copies the string values to the data members <bpt id=\"p1\">[</bpt>m_strCommandText<ept id=\"p1\">](../../data/oledb/crowsetimpl-m-strcommandtext.md)</ept> and <bpt id=\"p2\">[</bpt>m_strIndexText<ept id=\"p2\">](../../data/oledb/crowsetimpl-m-strindextext.md)</ept>.","source":"Checks to see if either or both parameters contain string values, and if so, copies the string values to the data members [m_strCommandText](../../data/oledb/crowsetimpl-m-strcommandtext.md) and [m_strIndexText](../../data/oledb/crowsetimpl-m-strindextext.md)."},{"content":"ValidateCommandID","pos":[2614,2631]},{"pos":[2684,2930],"content":"Checks to see if either or both <bpt id=\"p1\">**</bpt>DBID<ept id=\"p1\">**</ept>s contain string values, and if so, copies them to its data members <bpt id=\"p2\">[</bpt>m_strCommandText<ept id=\"p2\">](../../data/oledb/crowsetimpl-m-strcommandtext.md)</ept> and <bpt id=\"p3\">[</bpt>m_strIndexText<ept id=\"p3\">](../../data/oledb/crowsetimpl-m-strindextext.md)</ept>.","source":"Checks to see if either or both **DBID**s contain string values, and if so, copies them to its data members [m_strCommandText](../../data/oledb/crowsetimpl-m-strcommandtext.md) and [m_strIndexText](../../data/oledb/crowsetimpl-m-strindextext.md)."},{"content":"Data Members","pos":[2941,2953]},{"content":"m_rgRowData","pos":[2975,2986]},{"content":"By default, a <ph id=\"ph1\">`CAtlArray`</ph> that templatizes on the user record template argument to <ph id=\"ph2\">`CRowsetImpl`</ph>.","pos":[3033,3130],"source":"By default, a `CAtlArray` that templatizes on the user record template argument to `CRowsetImpl`."},{"content":"Another array type class can be used by changing the <ph id=\"ph1\">`ArrayType`</ph> template argument to <ph id=\"ph2\">`CRowsetImpl`</ph>.","pos":[3131,3231],"source":" Another array type class can be used by changing the `ArrayType` template argument to `CRowsetImpl`."},{"content":"m_strCommandText","pos":[3237,3253]},{"content":"Contains the rowset's initial command.","pos":[3305,3343]},{"content":"m_strIndexText","pos":[3349,3363]},{"content":"Contains the rowset's initial index.","pos":[3413,3449]},{"content":"Remarks","pos":[3459,3466]},{"content":"provides overrides in the form of static upcasts.","pos":[3484,3533]},{"content":"The methods control the manner in which a given rowset will validate command text.","pos":[3534,3616]},{"content":"You can create your own <ph id=\"ph1\">`CRowsetImpl`</ph>-style class by making your implementation interfaces multiple-inherited.","pos":[3617,3727],"source":" You can create your own `CRowsetImpl`-style class by making your implementation interfaces multiple-inherited."},{"content":"The only method for which you must provide implementation is <bpt id=\"p1\">**</bpt>Execute<ept id=\"p1\">**</ept>.","pos":[3728,3801],"source":" The only method for which you must provide implementation is **Execute**."},{"content":"Depending on what type of rowset you are creating, the creator methods will expect different signatures for <bpt id=\"p1\">**</bpt>Execute<ept id=\"p1\">**</ept>.","pos":[3802,3922],"source":" Depending on what type of rowset you are creating, the creator methods will expect different signatures for **Execute**."},{"content":"For example, if you are using a <ph id=\"ph1\">`CRowsetImpl`</ph>-derived class to implement a schema rowset, the <bpt id=\"p1\">**</bpt>Execute<ept id=\"p1\">**</ept> method will have the following signature:","pos":[3923,4070],"source":" For example, if you are using a `CRowsetImpl`-derived class to implement a schema rowset, the **Execute** method will have the following signature:"},{"pos":[4167,4318],"content":"If you are creating a <ph id=\"ph1\">`CRowsetImpl`</ph>-derived class to implement a command or session's rowset, the <bpt id=\"p1\">**</bpt>Execute<ept id=\"p1\">**</ept> method will have the following signature:","source":"If you are creating a `CRowsetImpl`-derived class to implement a command or session's rowset, the **Execute** method will have the following signature:"},{"pos":[4382,4555],"content":"To implement any of the <ph id=\"ph1\">`CRowsetImpl`</ph>-derived <bpt id=\"p1\">**</bpt>Execute<ept id=\"p1\">**</ept> methods, you must populate your internal data buffers (<bpt id=\"p2\">[</bpt>m_rgRowData<ept id=\"p2\">](../../data/oledb/crowsetimpl-m-rgrowdata.md)</ept>).","source":"To implement any of the `CRowsetImpl`-derived **Execute** methods, you must populate your internal data buffers ([m_rgRowData](../../data/oledb/crowsetimpl-m-rgrowdata.md))."},{"content":"Requirements","pos":[4564,4576]},{"pos":[4580,4599],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atldb.h","source":"**Header:** atldb.h"}],"content":"---\ntitle: \"CRowsetImpl Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"CRowsetImpl\"\n  - \"ATL.CRowsetImpl\"\n  - \"ATL::CRowsetImpl\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CRowsetImpl class\"\nms.assetid: e97614b3-b11d-4806-a0d3-b9401331473f\ncaps.latest.revision: 12\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CRowsetImpl Class\nProvides a standard OLE DB rowset implementation without requiring multiple inheritance of many implementation interfaces.  \n  \n## Syntax  \n  \n```  \ntemplate <  \n   class T,  \n   class Storage,  \n   class CreatorClass,  \n   class ArrayType = CAtlArray<Storage>,   \n   class RowClass = CSimpleRow,   \n   class RowsetInterface = IRowsetImpl < T, IRowset >   \n>  \nclass CRowsetImpl :    \n   public CComObjectRootEx<CreatorClass::_ThreadModel>,   \n   public CRowsetBaseImpl<T, Storage, ArrayType, RowsetInterface>,   \n   public IRowsetInfoImpl<T, CreatorClass::_PropClass>  \n```  \n  \n#### Parameters  \n `T`  \n The user's class that derives from `CRowsetImpl`.  \n  \n `Storage`  \n The user record class.  \n  \n `CreatorClass`  \n The class that contains properties for the rowset; typically the command.  \n  \n `ArrayType`  \n The class that will act as storage for the rowset's data. This parameter defaults to `CAtlArray`, but it can be any class that supports the required functionality.  \n  \n## Members  \n  \n### Methods  \n  \n|||  \n|-|-|  \n|[NameFromDBID](../../data/oledb/crowsetimpl-namefromdbid.md)|Extracts a string from a **DBID** and copies it to the `bstr` passed in.|  \n|[SetCommandText](../../data/oledb/crowsetimpl-setcommandtext.md)|Validates and stores the **DBID**s in the two strings ([m_strCommandText](../../data/oledb/crowsetimpl-m-strcommandtext.md) and [m_strIndexText](../../data/oledb/crowsetimpl-m-strindextext.md)).|  \n  \n### Overridable Methods  \n  \n|||  \n|-|-|  \n|[GetColumnInfo](../../data/oledb/crowsetimpl-getcolumninfo.md)|Retrieves column information for a particular client request.|  \n|[GetCommandFromID](../../data/oledb/crowsetimpl-getcommandfromid.md)|Checks to see if either or both parameters contain string values, and if so, copies the string values to the data members [m_strCommandText](../../data/oledb/crowsetimpl-m-strcommandtext.md) and [m_strIndexText](../../data/oledb/crowsetimpl-m-strindextext.md).|  \n|[ValidateCommandID](../../data/oledb/crowsetimpl-validatecommandid.md)|Checks to see if either or both **DBID**s contain string values, and if so, copies them to its data members [m_strCommandText](../../data/oledb/crowsetimpl-m-strcommandtext.md) and [m_strIndexText](../../data/oledb/crowsetimpl-m-strindextext.md).|  \n  \n### Data Members  \n  \n|||  \n|-|-|  \n|[m_rgRowData](../../data/oledb/crowsetimpl-m-rgrowdata.md)|By default, a `CAtlArray` that templatizes on the user record template argument to `CRowsetImpl`. Another array type class can be used by changing the `ArrayType` template argument to `CRowsetImpl`.|  \n|[m_strCommandText](../../data/oledb/crowsetimpl-m-strcommandtext.md)|Contains the rowset's initial command.|  \n|[m_strIndexText](../../data/oledb/crowsetimpl-m-strindextext.md)|Contains the rowset's initial index.|  \n  \n## Remarks  \n `CRowsetImpl` provides overrides in the form of static upcasts. The methods control the manner in which a given rowset will validate command text. You can create your own `CRowsetImpl`-style class by making your implementation interfaces multiple-inherited. The only method for which you must provide implementation is **Execute**. Depending on what type of rowset you are creating, the creator methods will expect different signatures for **Execute**. For example, if you are using a `CRowsetImpl`-derived class to implement a schema rowset, the **Execute** method will have the following signature:  \n  \n `HRESULT Execute(LONG* pcRows, ULONG cRestrictions, const VARIANT* rgRestrictions)`  \n  \n If you are creating a `CRowsetImpl`-derived class to implement a command or session's rowset, the **Execute** method will have the following signature:  \n  \n `HRESULT Execute(LONG* pcRows, DBPARAMS* pParams)`  \n  \n To implement any of the `CRowsetImpl`-derived **Execute** methods, you must populate your internal data buffers ([m_rgRowData](../../data/oledb/crowsetimpl-m-rgrowdata.md)).  \n  \n## Requirements  \n **Header:** atldb.h"}