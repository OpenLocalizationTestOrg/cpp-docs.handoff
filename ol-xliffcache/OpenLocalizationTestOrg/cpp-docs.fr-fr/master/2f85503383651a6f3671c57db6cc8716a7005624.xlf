<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2f85503383651a6f3671c57db6cc8716a7005624</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\database-macros-and-globals.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">193e3f29b1422e9396d310d0857024ac5f0b440b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8efa3ae1f7f2d3d20d0c6a563ab331eb86276f1e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Database Macros and Globals | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Database Macros and Globals</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The macros and globals listed below apply to ODBC-based database applications.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>They are not used with DAO-based applications.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Before MFC 4.2, the macros <ph id="ph1">`AFX_SQL_ASYNC`</ph> and <ph id="ph2">`AFX_SQL_SYNC`</ph> gave asynchronous operations an opportunity to yield time to other processes.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Beginning with MFC 4.2, the implementation of these macros changed because the MFC ODBC classes used only synchronous operations.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The macro <ph id="ph1">`AFX_ODBC_CALL`</ph> was new to MFC 4.2.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Database Macros</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>AFX_ODBC_CALL</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Calls an ODBC API function that returns <ph id="ph1">`SQL_STILL_EXECUTING`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>will repeatedly call the function until it no longer returns <ph id="ph1">`SQL_STILL_EXECUTING`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>AFX_SQL_ASYNC</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Calls <ph id="ph1">`AFX_ODBC_CALL`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>AFX_SQL_SYNC</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Calls an ODBC API function that does not return <ph id="ph1">`SQL_STILL_EXECUTING`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Database Globals</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>AfxGetHENV</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Retrieves a handle to the ODBC environment currently in use by MFC.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can use this handle in direct ODBC calls.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>AFX_ODBC_CALL</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Use this macro to call any ODBC API function that may return <ph id="ph1">`SQL_STILL_EXECUTING`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>An ODBC API function.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For more information about ODBC API functions, see the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>repeatedly calls the function until it no longer returns <ph id="ph1">`SQL_STILL_EXECUTING`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Before invoking <ph id="ph1">`AFX_ODBC_CALL`</ph>, you must declare a variable, <ph id="ph2">`nRetCode`</ph>, of type <bpt id="p1">**</bpt>RETCODE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Note that the MFC ODBC classes now use only synchronous processing.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In order to perform an asynchronous operation, you must call the ODBC API function <bpt id="p1">**</bpt>SQLSetConnectOption<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For more information, see the topic "Executing Functions Asynchronously" in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This example uses <ph id="ph1">`AFX_ODBC_CALL`</ph> to call the <bpt id="p1">**</bpt>SQLColumns<ept id="p1">**</ept> ODBC API function, which returns a list of the columns in the table named by <ph id="ph2">`strTableName`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Note the declaration of <ph id="ph1">`nRetCode`</ph> and the use of recordset data members to pass parameters to the function.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The example also illustrates checking the results of the call with <bpt id="p1">**</bpt>Check<ept id="p1">**</ept>, a member function of class <ph id="ph1">`CRecordset`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The variable <ph id="ph1">`prs`</ph> is a pointer to a <ph id="ph2">`CRecordset`</ph> object, declared elsewhere.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>NVC_MFCDatabase#39</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>AFX_SQL_ASYNC</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The implementation of this macro changed in MFC 4.2.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A pointer to a <ph id="ph1">`CRecordset`</ph> object or a <ph id="ph2">`CDatabase`</ph> object.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Beginning with MFC 4.2, this parameter value is ignored.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>An ODBC API function.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For more information about ODBC API functions, see the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>simply calls the macro <bpt id="p1">[</bpt>AFX_ODBC_CALL<ept id="p1">](#afx_odbc_call)</ept> and ignores the <ph id="ph1">`prs`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In versions of MFC prior to 4.2, <ph id="ph1">`AFX_SQL_ASYNC`</ph> was used to call ODBC API functions that might return <ph id="ph2">`SQL_STILL_EXECUTING`</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If an ODBC API function did return <ph id="ph1">`SQL_STILL_EXECUTING`</ph>, then <ph id="ph2">`AFX_SQL_ASYNC`</ph> would call <ph id="ph3">`prs-&gt;OnWaitForDataSource`</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The MFC ODBC classes now use only synchronous processing.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In order to perform an asynchronous operation, you must call the ODBC API function <bpt id="p1">**</bpt>SQLSetConnectOption<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For more information, see the topic "Executing Functions Asynchronously" in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>AFX_SQL_SYNC</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`AFX_SQL_SYNC`</ph> macro simply calls the function <ph id="ph2">`SQLFunc`</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>An ODBC API function.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For more information about these functions, see the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Use this macro to call ODBC API functions that will not return <ph id="ph1">`SQL_STILL_EXECUTING`</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Before calling <ph id="ph1">`AFX_SQL_SYNC`</ph>, you must declare a variable, <ph id="ph2">`nRetCode`</ph>, of type <bpt id="p1">**</bpt>RETCODE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>You can check the value of <ph id="ph1">`nRetCode`</ph> after the macro call.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Note that the implementation of <ph id="ph1">`AFX_SQL_SYNC`</ph> changed in MFC 4.2.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Because checking the server status was no longer required, <ph id="ph1">`AFX_SQL_SYNC`</ph> simply assigns a value to <ph id="ph2">`nRetCode`</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>For example, instead of making the call</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>NVC_MFCDatabase#40</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>you can simply make the assignment</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>NVC_MFCDatabase#41</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>AfxGetHENV</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>You can use the returned handle in direct ODBC calls, but you must not close the handle or assume that the handle is still valid and available after any existing <ph id="ph1">`CDatabase`</ph>- or <ph id="ph2">`CRecordset`</ph>-derived objects have been destroyed.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The handle to the ODBC environment currently in use by MFC.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Can be <ph id="ph1">`SQL_HENV_NULL`</ph> if there are no <bpt id="p1">[</bpt>CDatabase<ept id="p1">](../../mfc/reference/cdatabase-class.md)</ept> objects and no <bpt id="p2">[</bpt>CRecordset<ept id="p2">](../../mfc/reference/crecordset-class.md)</ept> objects in use.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Macros and Globals</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>