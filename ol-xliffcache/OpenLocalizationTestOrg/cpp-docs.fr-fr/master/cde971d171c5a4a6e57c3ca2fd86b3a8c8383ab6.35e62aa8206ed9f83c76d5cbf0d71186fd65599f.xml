{"nodes":[{"pos":[12,47],"content":"tiled_extent Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"tiled_extent Class | Microsoft Docs","pos":[0,35]}]},{"content":"tiled_extent Class","pos":[577,595]},{"pos":[596,746],"content":"A <ph id=\"ph1\">`tiled_extent`</ph> object is an <ph id=\"ph2\">`extent`</ph> object of one to three dimensions that subdivides the extent space into one-, two-, or three-dimensional tiles.","source":"A `tiled_extent` object is an `extent` object of one to three dimensions that subdivides the extent space into one-, two-, or three-dimensional tiles."},{"content":"Syntax","pos":[756,762]},{"content":"Parameters","pos":[1127,1137]},{"content":"The length of the most significant dimension.","pos":[1152,1197]},{"content":"The length of the next-to-most significant dimension.","pos":[1215,1268]},{"content":"The length of the least significant dimension.","pos":[1286,1332]},{"content":"Members","pos":[1341,1348]},{"content":"Public Constructors","pos":[1358,1377]},{"content":"Name","pos":[1384,1388]},{"content":"Description","pos":[1389,1400]},{"content":"tiled_extent::tiled_extent Constructor","pos":[1439,1477]},{"pos":[1486,1541],"content":"Initializes a new instance of the <ph id=\"ph1\">`tiled_extent`</ph> class.","source":"Initializes a new instance of the `tiled_extent` class."},{"content":"Public Methods","pos":[1553,1567]},{"content":"Name","pos":[1574,1578]},{"content":"Description","pos":[1579,1590]},{"content":"tiled_extent::get_tile_extent Method","pos":[1629,1665]},{"pos":[1699,1823],"content":"Returns an <ph id=\"ph1\">`extent`</ph> object  that captures the values of the <ph id=\"ph2\">`tiled_extent`</ph> template arguments <ph id=\"ph3\">`_Dim0`</ph>, <ph id=\"ph4\">`_Dim1`</ph>, and <ph id=\"ph5\">`_Dim2`</ph>.","source":"Returns an `extent` object  that captures the values of the `tiled_extent` template arguments `_Dim0`, `_Dim1`, and `_Dim2`."},{"content":"tiled_extent::pad Method","pos":[1829,1853]},{"pos":[1875,1982],"content":"Returns a new <ph id=\"ph1\">`tiled_extent`</ph> object with extents adjusted up to be evenly divisible by the tile dimensions.","source":"Returns a new `tiled_extent` object with extents adjusted up to be evenly divisible by the tile dimensions."},{"content":"tiled_extent::truncate Method","pos":[1988,2017]},{"pos":[2044,2153],"content":"Returns a new <ph id=\"ph1\">`tiled_extent`</ph> object with extents adjusted down to be evenly divisible by the tile dimensions.","source":"Returns a new `tiled_extent` object with extents adjusted down to be evenly divisible by the tile dimensions."},{"content":"Public Operators","pos":[2164,2180]},{"content":"Name","pos":[2187,2191]},{"content":"Description","pos":[2192,2203]},{"content":"tiled_extent::operator= Operator","pos":[2242,2274]},{"pos":[2304,2376],"content":"Copies the contents of the specified <ph id=\"ph1\">`tiled_index`</ph> object into this one.","source":"Copies the contents of the specified `tiled_index` object into this one."},{"content":"Public Constants","pos":[2388,2404]},{"content":"Name","pos":[2411,2415]},{"content":"Description","pos":[2416,2427]},{"content":"tiled_extent::tile_dim0 Constant","pos":[2466,2498]},{"content":"Stores the length of the most significant dimension.","pos":[2526,2578]},{"content":"tiled_extent::tile_dim1 Constant","pos":[2584,2616]},{"content":"Stores the length of the next-to-most significant dimension.","pos":[2644,2704]},{"content":"tiled_extent::tile_dim2 Constant","pos":[2710,2742]},{"content":"Stores the length of the least significant dimension.","pos":[2770,2823]},{"content":"Public Data Members","pos":[2835,2854]},{"content":"Name","pos":[2861,2865]},{"content":"Description","pos":[2866,2877]},{"content":"tiled_extent::tile_extent Data Member","pos":[2916,2953]},{"pos":[2983,3104],"content":"Gets an <ph id=\"ph1\">`extent`</ph> object  that captures the values of the <ph id=\"ph2\">`tiled_extent`</ph> template arguments <ph id=\"ph3\">`_Dim0`</ph>, <ph id=\"ph4\">`_Dim1`</ph>, and <ph id=\"ph5\">`_Dim2`</ph>.","source":"Gets an `extent` object  that captures the values of the `tiled_extent` template arguments `_Dim0`, `_Dim1`, and `_Dim2`."},{"content":"Inheritance Hierarchy","pos":[3114,3135]},{"content":"Requirements","pos":[3177,3189]},{"pos":[3193,3210],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> amp.h","source":"**Header:** amp.h"},{"pos":[3217,3243],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> Concurrency","source":"**Namespace:** Concurrency"},{"pos":[3286,3310],"content":"tiled_extent Constructor"},{"pos":[3313,3368],"content":"Initializes a new instance of the <ph id=\"ph1\">`tiled_extent`</ph> class.","source":"Initializes a new instance of the `tiled_extent` class."},{"content":"Syntax","pos":[3378,3384]},{"content":"Parameters","pos":[3550,3560]},{"content":"The <ph id=\"ph1\">`extent`</ph> or <ph id=\"ph2\">`tiled_extent`</ph> object to copy.","pos":[3576,3622],"source":" The `extent` or `tiled_extent` object to copy."},{"pos":[3683,3698],"content":"get_tile_extent"},{"pos":[3702,3825],"content":"Returns an <ph id=\"ph1\">`extent`</ph> object that captures the values of the <ph id=\"ph2\">`tiled_extent`</ph> template arguments <ph id=\"ph3\">`_Dim0`</ph>, <ph id=\"ph4\">`_Dim1`</ph>, and <ph id=\"ph5\">`_Dim2`</ph>.","source":"Returns an `extent` object that captures the values of the `tiled_extent` template arguments `_Dim0`, `_Dim1`, and `_Dim2`."},{"content":"Syntax","pos":[3835,3841]},{"content":"Return Value","pos":[3937,3949]},{"pos":[3953,4033],"content":"An <ph id=\"ph1\">`extent`</ph> object that captures the dimensions of this <ph id=\"ph2\">`tiled_extent`</ph> instance.","source":"An `extent` object that captures the dimensions of this `tiled_extent` instance."},{"pos":[4078,4081],"content":"pad"},{"pos":[4085,4192],"content":"Returns a new <ph id=\"ph1\">`tiled_extent`</ph> object with extents adjusted up to be evenly divisible by the tile dimensions.","source":"Returns a new `tiled_extent` object with extents adjusted up to be evenly divisible by the tile dimensions."},{"content":"Syntax","pos":[4202,4208]},{"content":"Return Value","pos":[4261,4273]},{"pos":[4277,4317],"content":"The new <ph id=\"ph1\">`tiled_extent`</ph> object, by value.","source":"The new `tiled_extent` object, by value."},{"pos":[4362,4370],"content":"truncate"},{"pos":[4374,4483],"content":"Returns a new <ph id=\"ph1\">`tiled_extent`</ph> object with extents adjusted down to be evenly divisible by the tile dimensions.","source":"Returns a new `tiled_extent` object with extents adjusted down to be evenly divisible by the tile dimensions."},{"content":"Syntax","pos":[4493,4499]},{"content":"Return Value","pos":[4557,4569]},{"pos":[4573,4682],"content":"Returns a new <ph id=\"ph1\">`tiled_extent`</ph> object with extents adjusted down to be evenly divisible by the tile dimensions.","source":"Returns a new `tiled_extent` object with extents adjusted down to be evenly divisible by the tile dimensions."},{"pos":[4732,4741],"content":"operator="},{"pos":[4745,4817],"content":"Copies the contents of the specified <ph id=\"ph1\">`tiled_index`</ph> object into this one.","source":"Copies the contents of the specified `tiled_index` object into this one."},{"content":"Syntax","pos":[4827,4833]},{"content":"Parameters","pos":[4943,4953]},{"content":"The <ph id=\"ph1\">`tiled_index`</ph> object to copy from.","pos":[4969,5007],"source":" The `tiled_index` object to copy from."},{"content":"Return Value","pos":[5017,5029]},{"pos":[5033,5076],"content":"A reference to this <ph id=\"ph1\">`tiled_index`</ph> instance.","source":"A reference to this `tiled_index` instance."},{"pos":[5124,5133],"content":"tile_dim0"},{"content":"Stores the length of the most significant dimension.","pos":[5137,5189]},{"content":"Syntax","pos":[5199,5205]},{"pos":[5308,5317],"content":"tile_dim1"},{"content":"Stores the length of the next-to-most significant dimension.","pos":[5321,5381]},{"content":"Syntax","pos":[5391,5397]},{"pos":[5497,5506],"content":"tile_dim2"},{"content":"Stores the length of the least significant dimension.","pos":[5510,5563]},{"content":"Syntax","pos":[5573,5579]},{"pos":[5681,5692],"content":"tile_extent"},{"pos":[5698,5818],"content":"Gets an <ph id=\"ph1\">`extent`</ph> object that captures the values of the <ph id=\"ph2\">`tiled_extent`</ph> template arguments <ph id=\"ph3\">`_Dim0`</ph>, <ph id=\"ph4\">`_Dim1`</ph>, and <ph id=\"ph5\">`_Dim2`</ph>.","source":"Gets an `extent` object that captures the values of the `tiled_extent` template arguments `_Dim0`, `_Dim1`, and `_Dim2`."},{"content":"Syntax","pos":[5828,5834]},{"content":"See Also","pos":[5945,5953]},{"content":"Concurrency Namespace (C++ AMP)","pos":[5958,5989]}],"content":"---\ntitle: \"tiled_extent Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"amp/Concurrency::tiled_extent\"\ndev_langs: \n  - \"C++\"\nms.assetid: 671ecaf8-c7b0-4ac8-bbdc-e30bd92da7c0\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# tiled_extent Class\nA `tiled_extent` object is an `extent` object of one to three dimensions that subdivides the extent space into one-, two-, or three-dimensional tiles.  \n  \n### Syntax  \n  \n```  \ntemplate <\n    int _Dim0,  \n    int _Dim1,  \n    int _Dim2  \n>  \nclass tiled_extent : public Concurrency::extent<3>;  \n \ntemplate <\n    int _Dim0,  \n    int _Dim1  \n>  \nclass tiled_extent<_Dim0, _Dim1, 0> : public Concurrency::extent<2>;  \n \ntemplate <\n    int _Dim0  \n>  \nclass tiled_extent<_Dim0, 0, 0> : public Concurrency::extent<1>;  \n```  \n  \n### Parameters  \n `_Dim0`  \n The length of the most significant dimension.  \n  \n `_Dim1`  \n The length of the next-to-most significant dimension.  \n  \n `_Dim2`  \n The length of the least significant dimension.  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[tiled_extent::tiled_extent Constructor](#ctor)|Initializes a new instance of the `tiled_extent` class.|  \n\n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[tiled_extent::get_tile_extent Method](#tiled_extent__get_tile_extent)|Returns an `extent` object  that captures the values of the `tiled_extent` template arguments `_Dim0`, `_Dim1`, and `_Dim2`.|  \n|[tiled_extent::pad Method](#tiled_extent__pad)|Returns a new `tiled_extent` object with extents adjusted up to be evenly divisible by the tile dimensions.|  \n|[tiled_extent::truncate Method](#tiled_extent__truncate)|Returns a new `tiled_extent` object with extents adjusted down to be evenly divisible by the tile dimensions.|  \n  \n### Public Operators  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[tiled_extent::operator= Operator](#tiled_extent__operator_eq)|Copies the contents of the specified `tiled_index` object into this one.|  \n\n  \n### Public Constants  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[tiled_extent::tile_dim0 Constant](#tiled_extent__tile_dim0)|Stores the length of the most significant dimension.|  \n|[tiled_extent::tile_dim1 Constant](#tiled_extent__tile_dim1)|Stores the length of the next-to-most significant dimension.|  \n|[tiled_extent::tile_dim2 Constant](#tiled_extent__tile_dim2)|Stores the length of the least significant dimension.|  \n\n  \n### Public Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[tiled_extent::tile_extent Data Member](#tiled_extent__tile_extent)|Gets an `extent` object  that captures the values of the `tiled_extent` template arguments `_Dim0`, `_Dim1`, and `_Dim2`.|  \n  \n## Inheritance Hierarchy  \n `extent`  \n  \n `tiled_extent`  \n  \n## Requirements  \n **Header:** amp.h  \n  \n **Namespace:** Concurrency  \n\n## <a name=\"tiled_extent__ctor\"> </a>  tiled_extent Constructor  \nInitializes a new instance of the `tiled_extent` class.  \n  \n### Syntax  \n  \n```  \ntiled_extent();  \n  \ntiled_extent(  \n    const Concurrency::extent<rank>& _Other );  \n  \ntiled_extent(  \n    const tiled_extent& _Other );  \n```  \n  \n### Parameters  \n `_Other`  \n The `extent` or `tiled_extent` object to copy.  \n  \n\n  \n\n## <a name=\"tiled_extent__get_tile_extent\"> </a>  get_tile_extent   \nReturns an `extent` object that captures the values of the `tiled_extent` template arguments `_Dim0`, `_Dim1`, and `_Dim2`.  \n  \n### Syntax  \n  \n```  \nConcurrency::extent<rank> get_tile_extent() const restrict(amp,cpu);  \n```  \n  \n### Return Value  \n An `extent` object that captures the dimensions of this `tiled_extent` instance.  \n  \n\n## <a name=\"tiled_extent__pad\"> </a>  pad   \nReturns a new `tiled_extent` object with extents adjusted up to be evenly divisible by the tile dimensions.  \n  \n### Syntax  \n  \n```  \ntiled_extent pad() const;  \n```  \n  \n### Return Value  \n The new `tiled_extent` object, by value. \n## <a name=\"tiled_extent__truncate\"> </a>  truncate   \nReturns a new `tiled_extent` object with extents adjusted down to be evenly divisible by the tile dimensions.  \n  \n### Syntax  \n  \n```  \ntiled_extent truncate() const;  \n```  \n  \n### Return Value  \n Returns a new `tiled_extent` object with extents adjusted down to be evenly divisible by the tile dimensions.  \n\n## <a name=\"tiled_extent__operator_eq\"> </a>  operator=   \nCopies the contents of the specified `tiled_index` object into this one.  \n  \n### Syntax  \n  \n```  \ntiled_extent&  operator= (  \n    const tiled_extent& _Other ) restrict (amp, cpu);  \n```  \n  \n### Parameters  \n `_Other`  \n The `tiled_index` object to copy from.  \n  \n### Return Value  \n A reference to this `tiled_index` instance.  \n\n## <a name=\"tiled_extent__tile_dim0\"> </a>  tile_dim0   \nStores the length of the most significant dimension.  \n  \n### Syntax  \n  \n```  \nstatic const int tile_dim0 = _Dim0;  \n```  \n  \n## <a name=\"tiled_extent__tile_dim1\"> </a>  tile_dim1   \nStores the length of the next-to-most significant dimension.  \n  \n### Syntax  \n  \n```  \nstatic const int tile_dim1 = _Dim1;  \n```  \n## <a name=\"tiled_extent__tile_dim2\"> </a>  tile_dim2   \nStores the length of the least significant dimension.  \n  \n### Syntax  \n  \n```  \nstatic const int tile_dim2 = _Dim2;  \n```  \n## <a name=\"tiled_extent__tile_extent\"> </a>  tile_extent   \n  Gets an `extent` object that captures the values of the `tiled_extent` template arguments `_Dim0`, `_Dim1`, and `_Dim2`.  \n  \n### Syntax  \n  \n```  \n__declspec(property(get= get_tile_extent)) Concurrency::extent<rank> tile_extent;  \n```  \n  \n  \n## See Also  \n [Concurrency Namespace (C++ AMP)](concurrency-namespace-cpp-amp.md)\n"}