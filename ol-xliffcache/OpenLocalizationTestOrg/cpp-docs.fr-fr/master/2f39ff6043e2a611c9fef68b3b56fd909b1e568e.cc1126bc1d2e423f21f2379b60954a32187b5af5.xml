{"nodes":[{"pos":[12,50],"content":"CComCritSecLock Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CComCritSecLock Class | Microsoft Docs","pos":[0,38]}]},{"content":"CComCritSecLock Class","pos":[739,760]},{"content":"This class provides methods for locking and unlocking a critical section object.","pos":[761,841]},{"content":"Syntax","pos":[850,856]},{"content":"Parameters","pos":[924,934]},{"content":"TLock","pos":[939,944]},{"content":"The object to be locked and unlocked.","pos":[949,986]},{"content":"Members","pos":[995,1002]},{"content":"Public Constructors","pos":[1012,1031]},{"content":"Name","pos":[1038,1042]},{"content":"Description","pos":[1043,1054]},{"content":"CComCritSecLock::CComCritSecLock","pos":[1093,1125]},{"content":"The constructor.","pos":[1151,1167]},{"content":"CComCritSecLock::~CComCritSecLock","pos":[1173,1206]},{"content":"The destructor.","pos":[1232,1247]},{"content":"Public Methods","pos":[1258,1272]},{"content":"Name","pos":[1279,1283]},{"content":"Description","pos":[1284,1295]},{"content":"CComCritSecLock::Lock","pos":[1334,1355]},{"content":"Call this method to lock the critical section object.","pos":[1381,1434]},{"content":"CComCritSecLock::Unlock","pos":[1440,1463]},{"content":"Call this method to unlock the critical section object.","pos":[1491,1546]},{"content":"Remarks","pos":[1556,1563]},{"pos":[1567,1805],"content":"Use this class to lock and unlock objects in a safer way than with the <bpt id=\"p1\">[</bpt>CComCriticalSection Class<ept id=\"p1\">](../../atl/reference/ccomcriticalsection-class.md)</ept> or <bpt id=\"p2\">[</bpt>CComAutoCriticalSection Class<ept id=\"p2\">](../../atl/reference/ccomautocriticalsection-class.md)</ept>.","source":"Use this class to lock and unlock objects in a safer way than with the [CComCriticalSection Class](../../atl/reference/ccomcriticalsection-class.md) or [CComAutoCriticalSection Class](../../atl/reference/ccomautocriticalsection-class.md)."},{"content":"Requirements","pos":[1814,1826]},{"pos":[1830,1851],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlbase.h","source":"**Header:** atlbase.h"},{"pos":[1899,1931],"content":"CComCritSecLock::CComCritSecLock"},{"content":"The constructor.","pos":[1935,1951]},{"content":"Parameters","pos":[2034,2044]},{"content":"cs","pos":[2049,2051]},{"content":"The critical section object.","pos":[2056,2084]},{"content":"The initial lock state: <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> means locked.","pos":[2109,2155],"source":" The initial lock state: **true** means locked."},{"content":"Remarks","pos":[2165,2172]},{"content":"Initializes the critical section object.","pos":[2176,2216]},{"pos":[2264,2297],"content":"CComCritSecLock::~CComCritSecLock"},{"content":"The destructor.","pos":[2301,2316]},{"content":"Remarks","pos":[2367,2374]},{"content":"Unlocks the critical section object.","pos":[2378,2414]},{"pos":[2462,2483],"content":"CComCritSecLock::Lock"},{"content":"Call this method to lock the critical section object.","pos":[2487,2540]},{"content":"Return Value","pos":[2587,2599]},{"content":"Returns S_OK if the object has successfully been locked, or an error HRESULT on failure.","pos":[2603,2691]},{"content":"Remarks","pos":[2701,2708]},{"content":"If the object is already locked, an ASSERT error will occur in debug builds.","pos":[2712,2788]},{"pos":[2838,2861],"content":"CComCritSecLock::Unlock"},{"content":"Call this method to unlock the critical section object.","pos":[2865,2920]},{"content":"Remarks","pos":[2966,2973]},{"content":"If the object is already unlocked, an ASSERT error will occur in debug builds.","pos":[2977,3055]},{"content":"See Also","pos":[3064,3072]},{"content":"CComCriticalSection Class","pos":[3077,3102]},{"content":"CComAutoCriticalSection Class","pos":[3159,3188]}],"content":"---\ntitle: \"CComCritSecLock Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ATL::CComCritSecLock\"\n  - \"ATL.CComCritSecLock<TLock>\"\n  - \"ATL::CComCritSecLock<TLock>\"\n  - \"ATL.CComCritSecLock\"\n  - \"CComCritSecLock\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CComCritSecLock class\"\nms.assetid: 223152a1-86c3-4ef9-89a7-f455fe791b0e\ncaps.latest.revision: 19\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CComCritSecLock Class\nThis class provides methods for locking and unlocking a critical section object.  \n  \n## Syntax  \n  \n```\ntemplate<class TLock> class CComCritSecLock\n```  \n  \n#### Parameters  \n *TLock*  \n The object to be locked and unlocked.  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CComCritSecLock::CComCritSecLock](#ccomcritseclock__ctor)|The constructor.|  \n|[CComCritSecLock::~CComCritSecLock](#ccomcritseclock__dtor)|The destructor.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CComCritSecLock::Lock](#ccomcritseclock__lock)|Call this method to lock the critical section object.|  \n|[CComCritSecLock::Unlock](#ccomcritseclock__unlock)|Call this method to unlock the critical section object.|  \n  \n## Remarks  \n Use this class to lock and unlock objects in a safer way than with the [CComCriticalSection Class](../../atl/reference/ccomcriticalsection-class.md) or [CComAutoCriticalSection Class](../../atl/reference/ccomautocriticalsection-class.md).  \n  \n## Requirements  \n **Header:** atlbase.h  \n  \n##  <a name=\"ccomcritseclock__ctor\"></a>  CComCritSecLock::CComCritSecLock  \n The constructor.  \n  \n```\nCComCritSecLock(\n    TLock& cs,  bool bInitialLock = true);\n```  \n  \n### Parameters  \n *cs*  \n The critical section object.  \n  \n `bInitialLock`  \n The initial lock state: **true** means locked.  \n  \n### Remarks  \n Initializes the critical section object.  \n  \n##  <a name=\"ccomcritseclock__dtor\"></a>  CComCritSecLock::~CComCritSecLock  \n The destructor.  \n  \n```\n~CComCritSecLock() throw();\n```  \n  \n### Remarks  \n Unlocks the critical section object.  \n  \n##  <a name=\"ccomcritseclock__lock\"></a>  CComCritSecLock::Lock  \n Call this method to lock the critical section object.  \n  \n```\nHRESULT Lock() throw();\n```  \n  \n### Return Value  \n Returns S_OK if the object has successfully been locked, or an error HRESULT on failure.  \n  \n### Remarks  \n If the object is already locked, an ASSERT error will occur in debug builds.  \n  \n##  <a name=\"ccomcritseclock__unlock\"></a>  CComCritSecLock::Unlock  \n Call this method to unlock the critical section object.  \n  \n```\nvoid Unlock() throw();\n```  \n  \n### Remarks  \n If the object is already unlocked, an ASSERT error will occur in debug builds.  \n  \n## See Also  \n [CComCriticalSection Class](../../atl/reference/ccomcriticalsection-class.md)   \n [CComAutoCriticalSection Class](../../atl/reference/ccomautocriticalsection-class.md)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}