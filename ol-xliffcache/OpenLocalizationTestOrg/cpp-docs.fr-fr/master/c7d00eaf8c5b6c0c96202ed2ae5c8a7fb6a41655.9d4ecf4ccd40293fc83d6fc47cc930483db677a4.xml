{"nodes":[{"pos":[12,46],"content":"-Zc (Conformance) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"-Zc (Conformance) | Microsoft Docs","pos":[0,34]}]},{"content":"/Zc (Conformance)","pos":[706,723]},{"content":"You can use the <bpt id=\"p1\">**</bpt>/Zc<ept id=\"p1\">**</ept> compiler option to specify standard or Microsoft-specific compiler behavior.","pos":[724,824],"source":"You can use the **/Zc** compiler option to specify standard or Microsoft-specific compiler behavior."},{"content":"Here are the <bpt id=\"p1\">**</bpt>/Zc<ept id=\"p1\">**</ept> compiler options:","pos":[825,863],"source":" Here are the **/Zc** compiler options:"},{"content":"/Zc:forScope","pos":[874,886]},{"content":"/Zc:wchar_t","pos":[972,983]},{"content":"/Zc:auto","pos":[1055,1063]},{"content":"/Zc:trigraphs","pos":[1130,1143]},{"content":"/Zc:rvalueCast","pos":[1217,1231]},{"content":"/Zc:strictStrings","pos":[1313,1330]},{"content":"/Zc:inline","pos":[1424,1434]},{"content":"/Zc:implicitNoexcept","pos":[1509,1529]},{"pos":[1613,1736],"content":"For more information about conformance issues in Visual C++, see <bpt id=\"p1\">[</bpt>Nonstandard Behavior<ept id=\"p1\">](../../cpp/nonstandard-behavior.md)</ept>.","source":"For more information about conformance issues in Visual C++, see [Nonstandard Behavior](../../cpp/nonstandard-behavior.md)."},{"content":"See Also","pos":[1745,1753]},{"content":"Compiler Options","pos":[1758,1774]},{"content":"Setting Compiler Options","pos":[1824,1848]}],"content":"---\ntitle: \"-Zc (Conformance) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"/zc\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"/Zc compiler options [C++]\"\n  - \"-Zc compiler options [C++]\"\n  - \"Conformance compiler options\"\n  - \"Zc compiler options [C++]\"\nms.assetid: db1cc175-6e93-4a2e-9396-c3725d2d8f71\ncaps.latest.revision: 15\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# /Zc (Conformance)\nYou can use the **/Zc** compiler option to specify standard or Microsoft-specific compiler behavior. Here are the **/Zc** compiler options:  \n  \n-   [/Zc:forScope](../../build/reference/zc-forscope-force-conformance-in-for-loop-scope.md)  \n  \n-   [/Zc:wchar_t](../../build/reference/zc-wchar-t-wchar-t-is-native-type.md)  \n  \n-   [/Zc:auto](../../build/reference/zc-auto-deduce-variable-type.md)  \n  \n-   [/Zc:trigraphs](../../build/reference/zc-trigraphs-trigraphs-substitution.md)  \n  \n-   [/Zc:rvalueCast](../../build/reference/zc-rvaluecast-enforce-type-conversion-rules.md)  \n  \n-   [/Zc:strictStrings](../../build/reference/zc-strictstrings-disable-string-literal-type-conversion.md)  \n  \n-   [/Zc:inline](../../build/reference/zc-inline-remove-unreferenced-comdat.md)  \n  \n-   [/Zc:implicitNoexcept](../../build/reference/zc-implicitnoexcept-implicit-exception-specifiers.md)  \n  \n For more information about conformance issues in Visual C++, see [Nonstandard Behavior](../../cpp/nonstandard-behavior.md).  \n  \n## See Also  \n [Compiler Options](../../build/reference/compiler-options.md)   \n [Setting Compiler Options](../../build/reference/setting-compiler-options.md)"}