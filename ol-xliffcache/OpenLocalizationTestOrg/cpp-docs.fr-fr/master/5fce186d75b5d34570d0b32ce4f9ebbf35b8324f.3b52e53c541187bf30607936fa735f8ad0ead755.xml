{"nodes":[{"pos":[12,46],"content":"is_integral Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"is_integral Class | Microsoft Docs","pos":[0,34]}]},{"pos":[763,780],"content":"is_integral Class","linkify":"is_integral Class","nodes":[{"content":"is_integral Class","pos":[0,17]}]},{"content":"Tests if type is integral.","pos":[781,807]},{"pos":[816,822],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[892,902],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The type to query.","pos":[914,932]},{"pos":[941,948],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[952,1124],"content":"An instance of the type predicate holds true if the type <ph id=\"ph1\">`Ty`</ph> is one of the integral types, or a <ph id=\"ph2\">`cv-qualified`</ph> form of one of the integral types, otherwise it holds false.","source":"An instance of the type predicate holds true if the type `Ty` is one of the integral types, or a `cv-qualified` form of one of the integral types, otherwise it holds false."},{"content":"An integral type is one of <ph id=\"ph1\">`bool`</ph>, <ph id=\"ph2\">`char`</ph>, <ph id=\"ph3\">`unsigned char`</ph>, <ph id=\"ph4\">`signed char`</ph>, <ph id=\"ph5\">`wchar_t`</ph>, <ph id=\"ph6\">`short`</ph>, <ph id=\"ph7\">`unsigned short`</ph>, <ph id=\"ph8\">`int`</ph>, <ph id=\"ph9\">`unsigned int`</ph>, <ph id=\"ph10\">`long`</ph>, and <ph id=\"ph11\">`unsigned long`</ph>.","pos":[1131,1295],"source":"An integral type is one of `bool`, `char`, `unsigned char`, `signed char`, `wchar_t`, `short`, `unsigned short`, `int`, `unsigned int`, `long`, and `unsigned long`."},{"content":"In addition, with compilers that provide them, an integral type can be one of <ph id=\"ph1\">`long long`</ph>, <ph id=\"ph2\">`unsigned long long`</ph>, <ph id=\"ph3\">`__int64`</ph>, and <ph id=\"ph4\">`unsigned __int64`</ph>.","pos":[1296,1443],"source":" In addition, with compilers that provide them, an integral type can be one of `long long`, `unsigned long long`, `__int64`, and `unsigned __int64`."},{"pos":[1452,1459],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2196,2208],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2212,2237],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> &lt;type_traits&gt;","source":"**Header:** <type_traits>"},{"pos":[2244,2262],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"pos":[2271,2279],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>&lt;type_traits&gt;<ept id=\"p1\">](../standard-library/type-traits.md)</ept><ph id=\"ph1\"> </ph>","pos":[2283,2335],"source":"[<type_traits>](../standard-library/type-traits.md) "},{"content":"<bpt id=\"p1\"> [</bpt>is_enum Class<ept id=\"p1\">](../standard-library/is-enum-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[2338,2393],"source":" [is_enum Class](../standard-library/is-enum-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>is_floating_point Class<ept id=\"p1\">](../standard-library/is-floating-point-class.md)</ept>","pos":[2396,2470],"source":" [is_floating_point Class](../standard-library/is-floating-point-class.md)"}],"content":"---\ntitle: \"is_integral Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std::tr1::is_integral\"\n  - \"std.tr1.is_integral\"\n  - \"is_integral\"\n  - \"std.is_integral\"\n  - \"std::is_integral\"\n  - \"type_traits/std::is_integral\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"is_integral class [TR1]\"\n  - \"is_integral\"\nms.assetid: fe9279d0-4495-4e88-bf23-153cc6602397\ncaps.latest.revision: 19\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# is_integral Class\nTests if type is integral.  \n  \n## Syntax  \n  \n```  \ntemplate <class Ty>  \nstruct is_integral;  \n```  \n  \n#### Parameters  \n `Ty`  \n The type to query.  \n  \n## Remarks  \n An instance of the type predicate holds true if the type `Ty` is one of the integral types, or a `cv-qualified` form of one of the integral types, otherwise it holds false.  \n  \n An integral type is one of `bool`, `char`, `unsigned char`, `signed char`, `wchar_t`, `short`, `unsigned short`, `int`, `unsigned int`, `long`, and `unsigned long`. In addition, with compilers that provide them, an integral type can be one of `long long`, `unsigned long long`, `__int64`, and `unsigned __int64`.  \n  \n## Example  \n  \n```cpp  \n// std_tr1__type_traits__is_integral.cpp   \n// compile with: /EHsc   \n#include <type_traits>   \n#include <iostream>   \n  \nstruct trivial   \n    {   \n    int val;   \n    };   \n  \nint main()   \n    {   \n    std::cout << \"is_integral<trivial> == \" << std::boolalpha   \n        << std::is_integral<trivial>::value << std::endl;   \n    std::cout << \"is_integral<int> == \" << std::boolalpha   \n        << std::is_integral<int>::value << std::endl;   \n    std::cout << \"is_integral<float> == \" << std::boolalpha   \n        << std::is_integral<float>::value << std::endl;   \n  \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \nis_integral<trivial> == false  \nis_integral<int> == true  \nis_integral<float> == false  \n```  \n  \n## Requirements  \n **Header:** <type_traits>  \n  \n **Namespace:** std  \n  \n## See Also  \n [<type_traits>](../standard-library/type-traits.md)   \n [is_enum Class](../standard-library/is-enum-class.md)   \n [is_floating_point Class](../standard-library/is-floating-point-class.md)\n"}