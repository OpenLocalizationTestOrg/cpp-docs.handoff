{"nodes":[{"pos":[12,42],"content":"sampler Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"sampler Class | Microsoft Docs","pos":[0,30]}]},{"pos":[522,535],"content":"sampler Class","linkify":"sampler Class","nodes":[{"content":"sampler Class","pos":[0,13]}]},{"content":"The sampler class aggregates sampling configuration information to be used for texture sampling.","pos":[536,632]},{"pos":[641,647],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[688,695],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[705,724],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[731,735]},{"content":"Description","pos":[736,747]},{"pos":[785,822],"content":"<bpt id=\"p1\">[</bpt>sampler::sampler Constructor<ept id=\"p1\">](#ctor)</ept>","source":"[sampler::sampler Constructor](#ctor)"},{"content":"Overloaded.","pos":[823,834]},{"content":"Constructs a sampler instance.","pos":[835,865]},{"pos":[876,890],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[897,901]},{"content":"Description","pos":[902,913]},{"pos":[951,1004],"content":"<bpt id=\"p1\">[</bpt>sampler::get_address_mode Method<ept id=\"p1\">](#get_address_mode)</ept>","source":"[sampler::get_address_mode Method](#get_address_mode)"},{"pos":[1005,1074],"content":"Returns the <ph id=\"ph1\">`address_mode`</ph> that’s associated with the sampler object.","source":"Returns the `address_mode` that’s associated with the sampler object."},{"pos":[1079,1132],"content":"<bpt id=\"p1\">[</bpt>sampler::get_border_color Method<ept id=\"p1\">](#get_border_color)</ept>","source":"[sampler::get_border_color Method](#get_border_color)"},{"content":"Returns the border color that’s associated with the sampler object.","pos":[1133,1200]},{"pos":[1205,1256],"content":"<bpt id=\"p1\">[</bpt>sampler::get_filter_mode Method<ept id=\"p1\">](#get_filter_mode)</ept>","source":"[sampler::get_filter_mode Method](#get_filter_mode)"},{"pos":[1257,1325],"content":"Returns the <ph id=\"ph1\">`filter_mode`</ph> that’s associated with the sampler object.","source":"Returns the `filter_mode` that’s associated with the sampler object."},{"pos":[1336,1352],"content":"Public Operators","linkify":"Public Operators","nodes":[{"content":"Public Operators","pos":[0,16]}]},{"content":"Name","pos":[1359,1363]},{"content":"Description","pos":[1364,1375]},{"pos":[1413,1456],"content":"<bpt id=\"p1\">[</bpt>sampler::operator= Operator<ept id=\"p1\">](#operator_eq)</ept>","source":"[sampler::operator= Operator](#operator_eq)"},{"content":"Overloaded.","pos":[1457,1468]},{"content":"Assignment operator.","pos":[1469,1489]},{"pos":[1500,1519],"content":"Public Data Members","linkify":"Public Data Members","nodes":[{"content":"Public Data Members","pos":[0,19]}]},{"content":"Name","pos":[1526,1530]},{"content":"Description","pos":[1531,1542]},{"pos":[1580,1630],"content":"<bpt id=\"p1\">[</bpt>sampler::address_mode Data Member<ept id=\"p1\">](#address_mode)</ept>","source":"[sampler::address_mode Data Member](#address_mode)"},{"pos":[1631,1677],"content":"Gets the address mode of the <ph id=\"ph1\">`sampler`</ph> object.","source":"Gets the address mode of the `sampler` object."},{"pos":[1682,1732],"content":"<bpt id=\"p1\">[</bpt>sampler::border_color Data Member<ept id=\"p1\">](#border_color)</ept>","source":"[sampler::border_color Data Member](#border_color)"},{"pos":[1733,1779],"content":"Gets the border color of the <ph id=\"ph1\">`sampler`</ph> object.","source":"Gets the border color of the `sampler` object."},{"pos":[1784,1832],"content":"<bpt id=\"p1\">[</bpt>sampler::filter_mode Data Member<ept id=\"p1\">](#filter_mode)</ept>","source":"[sampler::filter_mode Data Member](#filter_mode)"},{"pos":[1833,1878],"content":"Gets the filter mode of the <ph id=\"ph1\">`sampler`</ph> object.","source":"Gets the filter mode of the `sampler` object."},{"pos":[1888,1909],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[1931,1943],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1947,1973],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> amp_graphics.h","source":"**Header:** amp_graphics.h"},{"pos":[1980,2016],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> concurrency::graphics","source":"**Namespace:** concurrency::graphics"},{"pos":[2026,2075],"content":"<bpt id=\"p1\">&lt;a name=\"ctor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  sampler::sampler Constructor","linkify":"<a name=\"ctor\"></a>  sampler::sampler Constructor","source":"<a name=\"ctor\"></a>  sampler::sampler Constructor"},{"pos":[2079,2143],"content":"Constructs an instance of the <bpt id=\"p1\">[</bpt>sampler Class<ept id=\"p1\">](sampler-class.md)</ept>.","source":"Constructs an instance of the [sampler Class](sampler-class.md)."},{"pos":[2812,2822],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The filter mode to be used in sampling.","pos":[2844,2883]},{"content":"The addressing mode to be used in sampling for all dimensions.","pos":[2909,2971]},{"content":"The border color to be used if the address mode is address_border.","pos":[2997,3063]},{"content":"The default value is <ph id=\"ph1\">`float_4(0.0f, 0.0f, 0.0f, 0.0f)`</ph>.","pos":[3064,3119],"source":" The default value is `float_4(0.0f, 0.0f, 0.0f, 0.0f)`."},{"content":"[5] Copy Constructor","pos":[3138,3158]},{"content":"The <ph id=\"ph1\">`sampler`</ph> object to copy into the new <ph id=\"ph2\">`sampler`</ph> instance.","pos":[3162,3223],"source":" The `sampler` object to copy into the new `sampler` instance."},{"content":"[6] Move Constructor","pos":[3230,3250]},{"content":"The <ph id=\"ph1\">`sampler`</ph> object to move into the new <ph id=\"ph2\">`sampler`</ph> instance.","pos":[3254,3315],"source":" The `sampler` object to move into the new `sampler` instance."},{"pos":[3325,3387],"content":"<bpt id=\"p1\">&lt;a name=\"address_mode\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  sampler::address_mode Data Member","linkify":"<a name=\"address_mode\"></a>  sampler::address_mode Data Member","source":"<a name=\"address_mode\"></a>  sampler::address_mode Data Member"},{"pos":[3391,3437],"content":"Gets the address mode of the <ph id=\"ph1\">`sampler`</ph> object.","source":"Gets the address mode of the `sampler` object."},{"pos":[3558,3620],"content":"<bpt id=\"p1\">&lt;a name=\"border_color\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  sampler::border_color Data Member","linkify":"<a name=\"border_color\"></a>  sampler::border_color Data Member","source":"<a name=\"border_color\"></a>  sampler::border_color Data Member"},{"pos":[3624,3670],"content":"Gets the border color of the <ph id=\"ph1\">`sampler`</ph> object.","source":"Gets the border color of the `sampler` object."},{"pos":[3786,3846],"content":"<bpt id=\"p1\">&lt;a name=\"filter_mode\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  sampler::filter_mode Data Member","linkify":"<a name=\"filter_mode\"></a>  sampler::filter_mode Data Member","source":"<a name=\"filter_mode\"></a>  sampler::filter_mode Data Member"},{"pos":[3850,3895],"content":"Gets the filter mode of the <ph id=\"ph1\">`sampler`</ph> object.","source":"Gets the filter mode of the `sampler` object."},{"pos":[4013,4078],"content":"<bpt id=\"p1\">&lt;a name=\"get_address_mode\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  sampler::get_address_mode Method","linkify":"<a name=\"get_address_mode\"></a>  sampler::get_address_mode Method","source":"<a name=\"get_address_mode\"></a>  sampler::get_address_mode Method"},{"pos":[4082,4143],"content":"Returns the filter mode that’s configured for this <ph id=\"ph1\">`sampler`</ph>.","source":"Returns the filter mode that’s configured for this `sampler`."},{"pos":[4238,4250],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The address mode that’s configured for the sampler.","pos":[4254,4305]},{"pos":[4315,4380],"content":"<bpt id=\"p1\">&lt;a name=\"get_border_color\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  sampler::get_border_color Method","linkify":"<a name=\"get_border_color\"></a>  sampler::get_border_color Method","source":"<a name=\"get_border_color\"></a>  sampler::get_border_color Method"},{"pos":[4384,4446],"content":"Returns the border color that’s configured for this <ph id=\"ph1\">`sampler`</ph>.","source":"Returns the border color that’s configured for this `sampler`."},{"pos":[4547,4559],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A float_4 that contains the border color.","pos":[4563,4604]},{"pos":[4614,4677],"content":"<bpt id=\"p1\">&lt;a name=\"get_filter_mode\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  sampler::get_filter_mode Method","linkify":"<a name=\"get_filter_mode\"></a>  sampler::get_filter_mode Method","source":"<a name=\"get_filter_mode\"></a>  sampler::get_filter_mode Method"},{"pos":[4681,4742],"content":"Returns the filter mode that’s configured for this <ph id=\"ph1\">`sampler`</ph>.","source":"Returns the filter mode that’s configured for this `sampler`."},{"pos":[4846,4858],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The filter mode that’s configured for the sampler.","pos":[4862,4912]},{"pos":[4922,4977],"content":"<bpt id=\"p1\">&lt;a name=\"operator_eq\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  sampler::operator= Operator","linkify":"<a name=\"operator_eq\"></a>  sampler::operator= Operator","source":"<a name=\"operator_eq\"></a>  sampler::operator= Operator"},{"content":"Assigns the value of another sampler object to an existing sampler.","pos":[4981,5048]},{"pos":[5269,5279],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[1] Copy Assignment Operator","pos":[5295,5323]},{"content":"The <ph id=\"ph1\">`sampler`</ph> object to copy into this <ph id=\"ph2\">`sampler`</ph>.","pos":[5327,5376],"source":" The `sampler` object to copy into this `sampler`."},{"content":"[2] Move Assignment Operator","pos":[5383,5411]},{"content":"The <ph id=\"ph1\">`sampler`</ph> object to move into this <ph id=\"ph2\">`sampler`</ph>.","pos":[5415,5464],"source":" The `sampler` object to move into this `sampler`."},{"pos":[5474,5486],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A reference to this sampler instance.","pos":[5490,5527]},{"pos":[5536,5544],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[5548,5616],"content":"<bpt id=\"p1\">[</bpt>Concurrency::graphics Namespace<ept id=\"p1\">](concurrency-graphics-namespace.md)</ept>","source":"[Concurrency::graphics Namespace](concurrency-graphics-namespace.md)"}],"content":"---\ntitle: \"sampler Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nms.assetid: 9a6a9807-497d-402d-b092-8c4d86275b80\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# sampler Class\nThe sampler class aggregates sampling configuration information to be used for texture sampling.  \n  \n## Syntax  \n  \n```  \nclass sampler;  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[sampler::sampler Constructor](#ctor)|Overloaded. Constructs a sampler instance.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[sampler::get_address_mode Method](#get_address_mode)|Returns the `address_mode` that’s associated with the sampler object.|  \n|[sampler::get_border_color Method](#get_border_color)|Returns the border color that’s associated with the sampler object.|  \n|[sampler::get_filter_mode Method](#get_filter_mode)|Returns the `filter_mode` that’s associated with the sampler object.|  \n  \n### Public Operators  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[sampler::operator= Operator](#operator_eq)|Overloaded. Assignment operator.|  \n  \n### Public Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[sampler::address_mode Data Member](#address_mode)|Gets the address mode of the `sampler` object.|  \n|[sampler::border_color Data Member](#border_color)|Gets the border color of the `sampler` object.|  \n|[sampler::filter_mode Data Member](#filter_mode)|Gets the filter mode of the `sampler` object.|  \n  \n## Inheritance Hierarchy  \n `sampler`  \n  \n## Requirements  \n **Header:** amp_graphics.h  \n  \n **Namespace:** concurrency::graphics  \n  \n##  <a name=\"ctor\"></a>  sampler::sampler Constructor  \n Constructs an instance of the [sampler Class](sampler-class.md).  \n  \n```  \nsampler() restrict(cpu);\n\n *// [1] default constructor  \n \nsampler(// [2] constructor  \n    filter_mode _Filter_mode) restrict(cpu);\n\n \nsampler(// [3] constructor  \n    address_mode _Address_mode,  \n    float_4 _Border_color = float_4(0.0f,\n    0.0f,\n    0.0f,\n    0.0f)) restrict(cpu);\n\n \nsampler(// [4] constructor  \n    filter_mode _Filter_mode,  \n    address_mode _Address_mode,  \n    float_4 _Border_color = float_4(0.0f,\n    0.0f,\n    0.0f,\n    0.0f)) restrict(cpu);\n\n \nsampler(// [5] copy constructor  \n    const sampler& _Other) restrict(amp,\n    cpu);\n\n \nsampler(// [6] move constructor  \n    sampler&& _Other) restrict(amp,\n    cpu);\n```  \n  \n### Parameters  \n `_Filter_mode`  \n The filter mode to be used in sampling.  \n  \n `_Address_mode`  \n The addressing mode to be used in sampling for all dimensions.  \n  \n `_Border_color`  \n The border color to be used if the address mode is address_border. The default value is `float_4(0.0f, 0.0f, 0.0f, 0.0f)`.  \n  \n `_Other`  \n [5] Copy Constructor  \n The `sampler` object to copy into the new `sampler` instance.  \n  \n [6] Move Constructor  \n The `sampler` object to move into the new `sampler` instance.  \n  \n##  <a name=\"address_mode\"></a>  sampler::address_mode Data Member  \n Gets the address mode of the `sampler` object.  \n  \n```  \n__declspec(property(get= get_address_mode)) Concurrency::graphics::address_mode address_mode;  \n```  \n  \n##  <a name=\"border_color\"></a>  sampler::border_color Data Member  \n Gets the border color of the `sampler` object.  \n  \n```  \n__declspec(property(get= get_border_color)) Concurrency::graphics::float_4 border_color;  \n```  \n  \n##  <a name=\"filter_mode\"></a>  sampler::filter_mode Data Member  \n Gets the filter mode of the `sampler` object.  \n  \n```  \n__declspec(property(get= get_filter_mode)) Concurrency::graphics::filter_mode filter_mode;  \n```  \n  \n##  <a name=\"get_address_mode\"></a>  sampler::get_address_mode Method  \n Returns the filter mode that’s configured for this `sampler`.  \n  \n```  \nConcurrency::graphics::address_mode get_address_mode() const __GPU;  \n```  \n  \n### Return Value  \n The address mode that’s configured for the sampler.  \n  \n##  <a name=\"get_border_color\"></a>  sampler::get_border_color Method  \n Returns the border color that’s configured for this `sampler`.  \n  \n```  \nConcurrency::graphics::float_4 get_border_color() const restrict(amp, cpu);\n```  \n  \n### Return Value  \n A float_4 that contains the border color.  \n  \n##  <a name=\"get_filter_mode\"></a>  sampler::get_filter_mode Method  \n Returns the filter mode that’s configured for this `sampler`.  \n  \n```  \nConcurrency::graphics::filter_mode get_filter_mode() const restrict(amp, cpu);\n```  \n  \n### Return Value  \n The filter mode that’s configured for the sampler.  \n  \n##  <a name=\"operator_eq\"></a>  sampler::operator= Operator  \n Assigns the value of another sampler object to an existing sampler.  \n  \n```  \nsampler& operator= (// [1] copy assignment operator const sampler& _Other) restrict(amp,\n    cpu);\n\n \nsampler& operator= (// [2] move assingment operator sampler&& _Other) restrict(amp,\n    cpu);\n```  \n  \n### Parameters  \n `_Other`  \n [1] Copy Assignment Operator  \n The `sampler` object to copy into this `sampler`.  \n  \n [2] Move Assignment Operator  \n The `sampler` object to move into this `sampler`.  \n  \n### Return Value  \n A reference to this sampler instance.  \n  \n## See Also  \n [Concurrency::graphics Namespace](concurrency-graphics-namespace.md)\n"}