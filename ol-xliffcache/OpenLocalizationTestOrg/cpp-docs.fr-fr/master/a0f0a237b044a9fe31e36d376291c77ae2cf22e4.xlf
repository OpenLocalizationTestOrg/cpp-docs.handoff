<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a0f0a237b044a9fe31e36d376291c77ae2cf22e4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\colecurrency-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">185361fbdd5987fc1bb4dd9b8fdb9dd1a2a5a43a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04eb585fa29925b4341be5c1fa5015bae640e558</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>COleCurrency Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>COleCurrency Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Encapsulates the <ph id="ph1">`CURRENCY`</ph> data type of OLE automation.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>COleCurrency::COleCurrency</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`COleCurrency`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>COleCurrency::Format</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Generates a formatted string representation of a <ph id="ph1">`COleCurrency`</ph> object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>COleCurrency::GetStatus</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets the status (validity) of this <ph id="ph1">`COleCurrency`</ph> object.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>COleCurrency::ParseCurrency</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Reads a <bpt id="p1">**</bpt>CURRENCY<ept id="p1">**</ept> value from a string and sets the value of <ph id="ph1">`COleCurrency`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>COleCurrency::SetCurrency</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Sets the value of this <ph id="ph1">`COleCurrency`</ph> object.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>COleCurrency::SetStatus</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Sets the status (validity) for this <ph id="ph1">`COleCurrency`</ph> object.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Public Operators</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>operator =</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Copies a <ph id="ph1">`COleCurrency`</ph> value.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>operator +, -</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Adds, subtracts, and changes sign of <ph id="ph1">`COleCurrency`</ph> values.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>operator +=, -=</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Adds and subtracts a <ph id="ph1">`COleCurrency`</ph> value from this <ph id="ph2">`COleCurrency`</ph> object.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>operator */</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Scales a <ph id="ph1">`COleCurrency`</ph> value by an integer value.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>operator *=, /=</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Scales this <ph id="ph1">`COleCurrency`</ph> value by an integer value.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>operator &lt;&lt;</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Outputs a <ph id="ph1">`COleCurrency`</ph> value to <ph id="ph2">`CArchive`</ph> or <ph id="ph3">`CDumpContext`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>operator &gt;&gt;</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Inputs a <ph id="ph1">`COleCurrency`</ph> object from <ph id="ph2">`CArchive`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>operator CURRENCY</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Converts a <ph id="ph1">`COleCurrency`</ph> value into a <bpt id="p1">**</bpt>CURRENCY<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>operator ==, &lt;, &lt;=, etc.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Compares two <ph id="ph1">`COleCurrency`</ph> values.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Public Data Members</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>COleCurrency::m_cur</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Contains the underlying <bpt id="p1">**</bpt>CURRENCY<ept id="p1">**</ept> for this <ph id="ph1">`COleCurrency`</ph> object.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>COleCurrency::m_status</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Contains the status of this <ph id="ph1">`COleCurrency`</ph> object.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> does not have a base class.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CURRENCY<ept id="p1">**</ept> is implemented as an 8-byte, two's-complement integer value scaled by 10,000.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This gives a fixed-point number with 15 digits to the left of the decimal point and 4 digits to the right.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>CURRENCY<ept id="p1">**</ept> data type is extremely useful for calculations involving money, or for any fixed-point calculation where accuracy is important.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>It is one of the possible types for the <ph id="ph1">`VARIANT`</ph> data type of OLE automation.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> also implements some basic arithmetic operations for this fixed-point type.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The supported operations have been selected to control the rounding errors which occur during fixed-point calculations.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxdisp.h</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>COleCurrency::COleCurrency</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Constructs a <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>CURRENCY<ept id="p1">**</ept> value to be copied into the new <bpt id="p2">**</bpt>COleCurrency<ept id="p2">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>An existing <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> object to be copied into the new <bpt id="p2">**</bpt>COleCurrency<ept id="p2">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>varSrc</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>An existing <bpt id="p1">**</bpt>VARIANT<ept id="p1">**</ept> data structure (possibly a <ph id="ph1">`COleVariant`</ph> object) to be converted to a currency value ( <ph id="ph2">`VT_CY`</ph>) and copied into the new <bpt id="p2">**</bpt>COleCurrency<ept id="p2">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>,</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Indicate the units and fractional part (in 1/10,000's) of the value to be copied into the new <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>All of these constructors create new <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> objects initialized to the specified value.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>A brief description of each of these constructors follows.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, the status of the new <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> item is set to valid.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Â <bpt id="p1">**</bpt>)<ept id="p1">**</ept>Â Â Â Constructs a <bpt id="p2">**</bpt>COleCurrency<ept id="p2">**</ept> object initialized to 0 (zero).</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Â <ph id="ph1">`cySrc`</ph>Â <bpt id="p1">**</bpt>)<ept id="p1">**</ept>Â Â Â Constructs a <bpt id="p2">**</bpt>COleCurrency<ept id="p2">**</ept> object from a <bpt id="p3">[</bpt>CURRENCY<ept id="p3">](http://msdn.microsoft.com/en-us/5e81273c-7289-45c7-93c0-32c1553f708e)</ept> value.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Â <ph id="ph1">`curSrc`</ph>Â <bpt id="p1">**</bpt>)<ept id="p1">**</ept>Â Â Â Constructs a <bpt id="p2">**</bpt>COleCurrency<ept id="p2">**</ept> object from an existing <bpt id="p3">**</bpt>COleCurrency<ept id="p3">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The new object has the same status as the source object.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Â <bpt id="p1">*</bpt>varSrc<ept id="p1">*</ept>Â <bpt id="p2">**</bpt>)<ept id="p2">**</ept>Â Â Â Constructs a <bpt id="p3">**</bpt>COleCurrency<ept id="p3">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Attempts to convert a <bpt id="p1">[</bpt>VARIANT<ept id="p1">](http://msdn.microsoft.com/en-us/e305240e-9e11-4006-98cc-26f4932d2118)</ept> structure or <ph id="ph1">`COleVariant`</ph> object to a currency ( <ph id="ph2">`VT_CY`</ph>) value.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>If this conversion is successful, the converted value is copied into the new <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>If it is not, the value of the <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> object is set to zero (0) and its status to invalid.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Â <ph id="ph1">`nUnits`</ph><bpt id="p1">**</bpt>,<ept id="p1">**</ept> <ph id="ph2">`nFractionalUnits`</ph>Â <bpt id="p2">**</bpt>)<ept id="p2">**</ept>Â Â Â Constructs a <bpt id="p3">**</bpt>COleCurrency<ept id="p3">**</ept> object from the specified numerical components.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>If the absolute value of the fractional part is greater than 10,000, the appropriate adjustment is made to the units.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Note that the units and fractional part are specified by signed long values.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>CURRENCY<ept id="p1">](http://msdn.microsoft.com/en-us/5e81273c-7289-45c7-93c0-32c1553f708e)</ept> and <bpt id="p2">[</bpt>VARIANT<ept id="p2">](http://msdn.microsoft.com/en-us/e305240e-9e11-4006-98cc-26f4932d2118)</ept> entries in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The following examples show the effects of the zero-parameter and two-parameter constructors:</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>NVC_MFCOleContainer#10</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>COleCurrency::Format</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Call this member function to create a formatted representation of the currency value.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Indicates flags for locale settings.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Only the following flag is relevant to currency:</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>LOCALE_NOUSEROVERRIDE<ept id="p1">**</ept>Â Â Â Use the system default locale settings, rather than custom user settings.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Indicates locale ID to use for the conversion.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CString`</ph> that contains the formatted currency value.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>It formats the value using the local language specifications (locale IDs).</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>A currency symbol is not included in the value returned.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>If the status of this <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> object is null, the return value is an empty string.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>If the status is invalid, the return string is specified by the string resource <bpt id="p1">**</bpt>IDS_INVALID_CURRENCY<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>NVC_MFCOleContainer#11</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>COleCurrency::GetStatus</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Call this member function to get the status (validity) of a given <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Returns the status of this <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> value.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The return value is defined by the <ph id="ph1">`CurrencyStatus`</ph> enumerated type that is defined within the <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> class.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>For a brief description of these status values, see the following list:</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>COleCurrency::valid<ept id="p1">**</ept>Â Â Â Indicates that this <bpt id="p2">**</bpt>COleCurrency<ept id="p2">**</ept> object is valid.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>COleCurrency::invalid<ept id="p1">**</ept>Â Â Â Indicates that this <bpt id="p2">**</bpt>COleCurrency<ept id="p2">**</ept> object is invalid; that is, its value may be incorrect.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>COleCurrency::null<ept id="p1">**</ept>Â Â Â Indicates that this <bpt id="p2">**</bpt>COleCurrency<ept id="p2">**</ept> object is null, that is, that no value has been supplied for this object.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>(This is "null" in the database sense of "having no value," as opposed to the C++ <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.)</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The status of a <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> object is invalid in the following cases:</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>If its value is set from a <bpt id="p1">**</bpt>VARIANT<ept id="p1">**</ept> or <ph id="ph1">`COleVariant`</ph> value that could not be converted to a currency value.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>If this object has experienced an overflow or underflow during an arithmetic assignment operation, for example <ph id="ph1">`+=`</ph> or <bpt id="p1">**</bpt><ph id="ph2">\*=</ph><ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>If an invalid value was assigned to this object.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>If the status of this object was explicitly set to invalid using <bpt id="p1">[</bpt>SetStatus<ept id="p1">](#colecurrency__setstatus)</ept>.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>For more information on operations that may set the status to invalid, see the following member functions:</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>COleCurrency</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>operator =</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>operator + -</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>operator += and -=</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>operator * /</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>operator *= and /=</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>NVC_MFCOleContainer#12</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>COleCurrency::m_cur</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The underlying <bpt id="p1">[</bpt>CURRENCY<ept id="p1">](http://msdn.microsoft.com/en-us/5e81273c-7289-45c7-93c0-32c1553f708e)</ept> structure for this <bpt id="p2">**</bpt>COleCurrency<ept id="p2">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Changing the value in the <bpt id="p1">**</bpt>CURRENCY<ept id="p1">**</ept> structure accessed by the pointer returned by this function will change the value of this <bpt id="p2">**</bpt>COleCurrency<ept id="p2">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>It does not change the status of this <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>CURRENCY<ept id="p1">](http://msdn.microsoft.com/en-us/5e81273c-7289-45c7-93c0-32c1553f708e)</ept> entry in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>COleCurrency::m_status</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The type of this data member is the enumerated type <ph id="ph1">`CurrencyStatus`</ph>, which is defined within the <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> class.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>For a brief description of these status values, see the following list:</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>COleCurrency::valid<ept id="p1">**</ept>Â Â Â Indicates that this <bpt id="p2">**</bpt>COleCurrency<ept id="p2">**</ept> object is valid.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>COleCurrency::invalid<ept id="p1">**</ept>Â Â Â Indicates that this <bpt id="p2">**</bpt>COleCurrency<ept id="p2">**</ept> object is invalid; that is, its value may be incorrect.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>COleCurrency::null<ept id="p1">**</ept>Â Â Â Indicates that this <bpt id="p2">**</bpt>COleCurrency<ept id="p2">**</ept> object is null, that is, that no value has been supplied for this object.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>(This is "null" in the database sense of "having no value," as opposed to the C++ <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.)</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The status of a <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> object is invalid in the following cases:</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>If its value is set from a <bpt id="p1">**</bpt>VARIANT<ept id="p1">**</ept> or <ph id="ph1">`COleVariant`</ph> value that could not be converted to a currency value.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>If this object has experienced an overflow or underflow during an arithmetic assignment operation, for example <ph id="ph1">`+=`</ph> or <bpt id="p1">**</bpt><ph id="ph2">\*=</ph><ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>If an invalid value was assigned to this object.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>If the status of this object was explicitly set to invalid using <bpt id="p1">[</bpt>SetStatus<ept id="p1">](#colecurrency__setstatus)</ept>.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>For more information on operations that may set the status to invalid, see the following member functions:</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>COleCurrency</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>operator =</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>operator +, -</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>operator +=, -=</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>operator */</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>operator *=, /=</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>This data member is for advanced programming situations.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>You should use the inline member functions <bpt id="p1">[</bpt>GetStatus<ept id="p1">](#colecurrency__getstatus)</ept> and <bpt id="p2">[</bpt>SetStatus<ept id="p2">](#colecurrency__setstatus)</ept>.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>See <ph id="ph1">`SetStatus`</ph> for further cautions regarding explicitly setting this data member.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>COleCurrency::operator =</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>These overloaded assignment operators copy the source currency value into this <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>A brief description of each operator follows:</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>operator =(<ept id="p1">**</ept> <ph id="ph1">`cySrc`</ph> <bpt id="p2">**</bpt>)<ept id="p2">**</ept>Â Â Â The <ph id="ph2">`CURRENCY`</ph> value is copied into the <bpt id="p3">**</bpt>COleCurrency<ept id="p3">**</ept> object and its status is set to valid.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>operator =(<ept id="p1">**</ept> <ph id="ph1">`curSrc`</ph> <bpt id="p2">**</bpt>)<ept id="p2">**</ept>Â Â Â The value and status of the operand, an existing <bpt id="p3">**</bpt>COleCurrency<ept id="p3">**</ept> object are copied into this <bpt id="p4">**</bpt>COleCurrency<ept id="p4">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>operator =(<ept id="p1">**</ept> <bpt id="p2">*</bpt>varSrc<ept id="p2">*</ept> <bpt id="p3">**</bpt>)<ept id="p3">**</ept>Â Â Â If the conversion of the <ph id="ph1">`VARIANT`</ph> value (or <bpt id="p4">[</bpt>COleVariant<ept id="p4">](../../mfc/reference/colevariant-class.md)</ept> object) to a currency ( <ph id="ph2">`VT_CY`</ph>) is successful, the converted value is copied into this <bpt id="p5">**</bpt>COleCurrency<ept id="p5">**</ept> object and its status is set to valid.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>If the conversion is not successful, the value of the <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> object is set to 0 and its status to invalid.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>CURRENCY<ept id="p1">](http://msdn.microsoft.com/en-us/5e81273c-7289-45c7-93c0-32c1553f708e)</ept> and <bpt id="p2">[</bpt>VARIANT<ept id="p2">](http://msdn.microsoft.com/en-us/e305240e-9e11-4006-98cc-26f4932d2118)</ept> entries in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>NVC_MFCOleContainer#15</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>COleCurrency::operator +, -</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>These operators allow you to add and subtract two <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> values to and from each other and to change the sign of a <bpt id="p2">**</bpt>COleCurrency<ept id="p2">**</ept> value.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>If either of the operands is null, the status of the resulting <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> value is null.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>If the arithmetic operation overflows, the resulting <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> value is invalid.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>If the operand is invalid and the other is not null, the status of the resulting <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> value is invalid.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>For more information on the valid, invalid, and null status values, see the <bpt id="p1">[</bpt>m_status<ept id="p1">](#colecurrency__m_status)</ept> member variable.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>NVC_MFCOleContainer#16</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>COleCurrency::operator +=, -=</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Allow you to add and subtract a <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> value to and from this <bpt id="p2">**</bpt>COleCurrency<ept id="p2">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>If either of the operands is null, the status of this <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> object is set to null.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>If the arithmetic operation overflows, the status of this <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> object is set to invalid.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>If either of the operands is invalid and the other is not null, the status of this <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> object is set to invalid.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>For more information on the valid, invalid, and null status values, see the <bpt id="p1">[</bpt>m_status<ept id="p1">](#colecurrency__m_status)</ept> member variable.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>NVC_MFCOleContainer#17</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>COleCurrency::operator * and /</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Allow you to scale a <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> value by an integral value.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> operand is null, the status of the resulting <bpt id="p2">**</bpt>COleCurrency<ept id="p2">**</ept> value is null.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>If the arithmetic operation overflows or underflows, the status of the resulting <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> value is invalid.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> operand is invalid, the status of the resulting <bpt id="p2">**</bpt>COleCurrency<ept id="p2">**</ept> value is invalid.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>For more information on the valid, invalid, and null status values, see the <bpt id="p1">[</bpt>m_status<ept id="p1">](#colecurrency__m_status)</ept> member variable.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>NVC_MFCOleContainer#18</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>COleCurrency::operator *=, /=</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Allow you to scale this <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> value by an integral value.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> operand is null, the status of this <bpt id="p2">**</bpt>COleCurrency<ept id="p2">**</ept> object is set to null.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>If the arithmetic operation overflows, the status of this <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> object is set to invalid.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> operand is invalid, the status of this <bpt id="p2">**</bpt>COleCurrency<ept id="p2">**</ept> object is set to invalid.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>For more information on the valid, invalid, and null status values, see the <bpt id="p1">[</bpt>m_status<ept id="p1">](#colecurrency__m_status)</ept> member variable.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>NVC_MFCOleContainer#19</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>COleCurrency::operator <ph id="ph1">&amp;lt;&amp;lt;</ph>,</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Supports diagnostic dumping and storing to an archive.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The extraction ( <bpt id="p1">**</bpt><ph id="ph1">&gt;&gt;</ph><ept id="p1">**</ept>) operator supports loading from an archive.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>COleCurrency::operator CURRENCY</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">`CURRENCY`</ph> structure whose value is copied from this <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>COleCurrency::ParseCurrency</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Call this member function to parse a string to read a currency value.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>lpszCurrency</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>A pointer to the null-terminated string which is to be parsed.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Indicates flags for locale settings, possibly the following flag:</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>LOCALE_NOUSEROVERRIDE<ept id="p1">**</ept>Â Â Â Use the system default locale settings, rather than custom user settings.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Indicates locale ID to use for the conversion.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Nonzero if the string was successfully converted to a currency value, otherwise 0.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>It uses local language specifications (locale IDs) for the meaning of nonnumeric characters in the source string.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>For a discussion of locale ID values, see <bpt id="p1">[</bpt>Supporting Multiple Languages<ept id="p1">](http://msdn.microsoft.com/en-us/47dc5add-232c-4268-b977-43e12da81ede)</ept>.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>If the string was successfully converted to a currency value, the value of this <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> object is set to that value and its status to valid.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>If the string could not be converted to a currency value or if there was a numerical overflow, the status of this <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> object is invalid.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>If the string conversion failed due to memory allocation errors, this function throws a <bpt id="p1">[</bpt>CMemoryException<ept id="p1">](../../mfc/reference/cmemoryexception-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>In any other error state, this function throws a <bpt id="p1">[</bpt>COleException<ept id="p1">](../../mfc/reference/coleexception-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>NVC_MFCOleContainer#13</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>COleCurrency Relational Operators</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Compare two currency values and return nonzero if the condition is true; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The return value of the ordering operations ( <bpt id="p1">**</bpt><ph id="ph1">&lt;</ph><ept id="p1">**</ept>, <bpt id="p2">**</bpt><ph id="ph2">\&lt;=</ph><ept id="p2">**</ept>, <bpt id="p3">**</bpt><ph id="ph3">&gt;</ph><ept id="p3">**</ept>, <bpt id="p4">**</bpt><ph id="ph4">&gt;=</ph><ept id="p4">**</ept>) is undefined if the status of either operand is null or invalid.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The equality operators ( <ph id="ph1">`==`</ph>, <ph id="ph2">`!=`</ph>) consider the status of the operands.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>NVC_MFCOleContainer#20</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>COleCurrency::SetCurrency</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Call this member function to set the units and fractional part of this <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>,</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Indicate the units and fractional part (in 1/10,000's) of the value to be copied into this <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>If the absolute value of the fractional part is greater than 10,000, the appropriate adjustment is made to the units, as shown in the third of the following examples.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Note that the units and fractional part are specified by signed long values.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The fourth of the following examples shows what happens when the parameters have different signs.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>NVC_MFCOleContainer#14</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>COleCurrency::SetStatus</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Call this member function to set the status (validity) of this <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>status</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>The new status for this <bpt id="p1">**</bpt>COleCurrency<ept id="p1">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>status<ept id="p1">*</ept> parameter value is defined by the <ph id="ph1">`CurrencyStatus`</ph> enumerated type, which is defined within the <bpt id="p2">**</bpt>COleCurrency<ept id="p2">**</ept> class.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>For a brief description of these status values, see the following list:</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>COleCurrency::valid<ept id="p1">**</ept>Â Â Â Indicates that this <bpt id="p2">**</bpt>COleCurrency<ept id="p2">**</ept> object is valid.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>COleCurrency::invalid<ept id="p1">**</ept>Â Â Â Indicates that this <bpt id="p2">**</bpt>COleCurrency<ept id="p2">**</ept> object is invalid; that is, its value may be incorrect.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>COleCurrency::null<ept id="p1">**</ept>Â Â Â Indicates that this <bpt id="p2">**</bpt>COleCurrency<ept id="p2">**</ept> object is null, that is, that no value has been supplied for this object.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>(This is "null" in the database sense of "having no value," as opposed to the C++ <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.)</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>This function is for advanced programming situations.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>This function does not alter the data in this object.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>It will most often be used to set the status to null or invalid.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Note that the assignment operator ( <bpt id="p1">[</bpt>operator =<ept id="p1">](#colecurrency__operator_eq)</ept>) and <bpt id="p2">[</bpt>SetCurrency<ept id="p2">](#colecurrency__setcurrency)</ept> do set the status to of the object based on the source value(s).</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Hierarchy Chart</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>COleVariant Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>