{"nodes":[{"pos":[12,55],"content":"ames, Add Property Wizard | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ames, Add Property Wizard | Microsoft Docs","pos":[0,42]}]},{"content":"Names, Add Property Wizard","pos":[580,606]},{"content":"Use this wizard to add a property to an interface.","pos":[607,657]},{"content":"Property type","pos":[666,679]},{"content":"Sets the type of property you are adding.","pos":[685,726]},{"content":"For MFC dispinterfaces, provide your own type or select from the predefined list.","pos":[727,808]},{"content":"If you provide a stock implementation of a property, <bpt id=\"p1\">**</bpt>Property type<ept id=\"p1\">**</ept> is set to the stock type and is unavailable for change.","pos":[809,935],"source":" If you provide a stock implementation of a property, **Property type** is set to the stock type and is unavailable for change."},{"content":"Property name","pos":[944,957]},{"content":"Sets the name of the property.","pos":[963,993]},{"content":"For MFC dispinterfaces associated with ActiveX controls, you can supply your own name or you can select a stock property name from the predefined list.","pos":[994,1145]},{"content":"If you provide your own property name, the <bpt id=\"p1\">**</bpt>Stock<ept id=\"p1\">**</ept> implementation type is unavailable.","pos":[1146,1234],"source":" If you provide your own property name, the **Stock** implementation type is unavailable."},{"content":"See <bpt id=\"p1\">[</bpt>Stock Properties<ept id=\"p1\">](../ide/stock-properties.md)</ept> for a description of the properties in the list.","pos":[1235,1334],"source":" See [Stock Properties](../ide/stock-properties.md) for a description of the properties in the list."},{"content":"Interface type","pos":[1341,1355]},{"content":"Description","pos":[1356,1367]},{"content":"ATL dual interface, custom interface, and local custom interface","pos":[1415,1479]},{"content":"Provide a property name.","pos":[1480,1504]},{"content":"MFC dispinterface, MFC ActiveX control dispinterface","pos":[1509,1561]},{"content":"Provide a property name or select a stock property from the list.","pos":[1562,1627]},{"content":"If you select a property from the list, the appropriate value appears in the <bpt id=\"p1\">**</bpt>Property type<ept id=\"p1\">**</ept> box.","pos":[1628,1727],"source":" If you select a property from the list, the appropriate value appears in the **Property type** box."},{"content":"You can change this type, depending on your selection under <bpt id=\"p1\">**</bpt>Implementation type<ept id=\"p1\">**</ept>.","pos":[1728,1812],"source":" You can change this type, depending on your selection under **Implementation type**."},{"content":"Return type","pos":[1822,1833]},{"content":"ATL interfaces only.","pos":[1839,1859]},{"content":"Sets the return type for the property.","pos":[1860,1898]},{"content":"For dual interfaces, <ph id=\"ph1\">`HRESULT`</ph> is always the return type, and this box is unavailable.","pos":[1899,1985],"source":" For dual interfaces, `HRESULT` is always the return type, and this box is unavailable."},{"content":"For custom interfaces, you can select a return type from the list.","pos":[1986,2052]},{"content":"is still recommended, because it provides a standard way to return errors.","pos":[2063,2137]},{"content":"Variable name","pos":[2146,2159]},{"content":"MFC dispinterfaces only.","pos":[2165,2189]},{"content":"Available only if you specify <bpt id=\"p1\">**</bpt>Member variable<ept id=\"p1\">**</ept> under <bpt id=\"p2\">**</bpt>Implementation type<ept id=\"p2\">**</ept>.","pos":[2190,2270],"source":" Available only if you specify **Member variable** under **Implementation type**."},{"content":"Sets the name of the member variable with which the property is associated.","pos":[2271,2346]},{"content":"By default, the variable name is set to m_<bpt id=\"p1\">*</bpt>PropertyName<ept id=\"p1\">*</ept>.","pos":[2347,2404],"source":" By default, the variable name is set to m_*PropertyName*."},{"content":"You can edit this name.","pos":[2405,2428]},{"content":"Notification function","pos":[2437,2458]},{"content":"MFC dispinterfaces only.","pos":[2464,2488]},{"content":"Available only if you specify <bpt id=\"p1\">**</bpt>Member variable<ept id=\"p1\">**</ept> under <bpt id=\"p2\">**</bpt>Implementation type<ept id=\"p2\">**</ept>.","pos":[2489,2569],"source":" Available only if you specify **Member variable** under **Implementation type**."},{"content":"Sets the name of the notification function called if the property changes.","pos":[2570,2644]},{"content":"By default, the name of the notification function is set to On<bpt id=\"p1\">*</bpt>PropertyName<ept id=\"p1\">*</ept>Changed.","pos":[2645,2729],"source":" By default, the name of the notification function is set to On*PropertyName*Changed."},{"content":"You can edit this name.","pos":[2730,2753]},{"content":"Get function","pos":[2762,2774]},{"content":"For MFC dispinterfaces.","pos":[2780,2803]},{"content":"Available only if you specify <bpt id=\"p1\">**</bpt>Get/Set methods<ept id=\"p1\">**</ept> under <bpt id=\"p2\">**</bpt>Implementation type<ept id=\"p2\">**</ept>.","pos":[2804,2884],"source":" Available only if you specify **Get/Set methods** under **Implementation type**."},{"content":"Sets the name of the function to get the property.","pos":[2885,2935]},{"content":"By default, the name of the Get function is set to Get<bpt id=\"p1\">*</bpt>PropertyName<ept id=\"p1\">*</ept>.","pos":[2936,3005],"source":" By default, the name of the Get function is set to Get*PropertyName*."},{"content":"You can edit this name.","pos":[3006,3029]},{"content":"If you delete the name, the function <bpt id=\"p1\">[</bpt>GetNotSupported<ept id=\"p1\">](../mfc/reference/colecontrol-class.md#getnotsupported)</ept> is inserted into the interface dispatch map.","pos":[3030,3184],"source":" If you delete the name, the function [GetNotSupported](../mfc/reference/colecontrol-class.md#getnotsupported) is inserted into the interface dispatch map."},{"content":"The Get<bpt id=\"p1\">*</bpt>PropertyName<ept id=\"p1\">*</ept> function specifies that the property as readable.","pos":[3185,3256],"source":" The Get*PropertyName* function specifies that the property as readable."},{"content":"Set function","pos":[3265,3277]},{"content":"MFC dispinterfaces only.","pos":[3283,3307]},{"content":"Available only if you specify <bpt id=\"p1\">**</bpt>Get/Set methods<ept id=\"p1\">**</ept> under <bpt id=\"p2\">**</bpt>Implementation type<ept id=\"p2\">**</ept>.","pos":[3308,3388],"source":" Available only if you specify **Get/Set methods** under **Implementation type**."},{"content":"Sets the name of the function to set the property.","pos":[3389,3439]},{"content":"By default, the name of the Set function is set to Set<bpt id=\"p1\">*</bpt>PropertyName<ept id=\"p1\">*</ept>.","pos":[3440,3509],"source":" By default, the name of the Set function is set to Set*PropertyName*."},{"content":"You can edit this name.","pos":[3510,3533]},{"content":"If you delete the name, the function <bpt id=\"p1\">[</bpt>SetNotSupported<ept id=\"p1\">](../mfc/reference/colecontrol-class.md#setnotsupported)</ept> is inserted into the interface dispatch map.","pos":[3534,3688],"source":" If you delete the name, the function [SetNotSupported](../mfc/reference/colecontrol-class.md#setnotsupported) is inserted into the interface dispatch map."},{"content":"The Set<bpt id=\"p1\">*</bpt>PropertyName<ept id=\"p1\">*</ept> function specifies that the property is writable.","pos":[3689,3760],"source":" The Set*PropertyName* function specifies that the property is writable."},{"content":"Implementation type","pos":[3769,3788]},{"content":"MFC dispinterfaces only.","pos":[3794,3818]},{"content":"Specifies how to implement the property you are adding.","pos":[3819,3874]},{"content":"Implementation type","pos":[3881,3900]},{"content":"Description","pos":[3901,3912]},{"content":"Stock","pos":[3967,3972]},{"content":"Specifies a stock implementation for the property selected in <bpt id=\"p1\">**</bpt>Property name<ept id=\"p1\">**</ept>.","pos":[3975,4055],"source":"Specifies a stock implementation for the property selected in **Property name**."},{"content":"The default.","pos":[4056,4068]},{"content":"See <bpt id=\"p1\">[</bpt>Stock Properties<ept id=\"p1\">](../ide/stock-properties.md)</ept> for more information.","pos":[4069,4141],"source":" See [Stock Properties](../ide/stock-properties.md) for more information."},{"content":"If you specify <bpt id=\"p1\">**</bpt>Stock<ept id=\"p1\">**</ept>, then <bpt id=\"p2\">**</bpt>Property type<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>Parameter type<ept id=\"p3\">**</ept>, and <bpt id=\"p4\">**</bpt>Parameter name<ept id=\"p4\">**</ept> are dimmed.","pos":[4154,4258],"source":" If you specify **Stock**, then **Property type**, **Parameter type**, and **Parameter name** are dimmed."},{"content":"Member variable","pos":[4265,4280]},{"content":"Specifies the property is added as a member variable.","pos":[4283,4336]},{"content":"You can add custom properties or most stock properties as member variables.","pos":[4337,4412]},{"content":"You cannot specify <bpt id=\"p1\">**</bpt>Member variable<ept id=\"p1\">**</ept> for <bpt id=\"p2\">**</bpt>Caption<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>hWnd<ept id=\"p3\">**</ept>, and <bpt id=\"p4\">**</bpt>Text<ept id=\"p4\">**</ept> properties.","pos":[4413,4503],"source":" You cannot specify **Member variable** for **Caption**, **hWnd**, and **Text** properties."},{"content":"Provides default names under <bpt id=\"p1\">**</bpt>Variable name<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Notification function<ept id=\"p2\">**</ept>.","pos":[4516,4593],"source":" Provides default names under **Variable name** and **Notification function**."},{"content":"You can edit this name.","pos":[4594,4617]},{"content":"Get/Set methods","pos":[4624,4639]},{"content":"Specifies the property is added as Get<bpt id=\"p1\">*</bpt>PropertyName<ept id=\"p1\">*</ept> and Set<bpt id=\"p2\">*</bpt>PropertyName<ept id=\"p2\">*</ept> functions, by default.","pos":[4642,4739],"source":"Specifies the property is added as Get*PropertyName* and Set*PropertyName* functions, by default."},{"content":"These names appear under <bpt id=\"p1\">**</bpt>Get function<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Set function<ept id=\"p2\">**</ept>.","pos":[4740,4803],"source":" These names appear under **Get function** and **Set function**."},{"content":"You can change the default <bpt id=\"p1\">**</bpt>Property type<ept id=\"p1\">**</ept>, which passes a value for the Get function.","pos":[4816,4904],"source":" You can change the default **Property type**, which passes a value for the Get function."},{"content":"You can specify parameters for the <bpt id=\"p1\">**</bpt>Get<ept id=\"p1\">**</ept> and <ph id=\"ph1\">`Set`</ph> functions.","pos":[4905,4968],"source":" You can specify parameters for the **Get** and `Set` functions."},{"content":"Get function","pos":[4978,4990]},{"content":"For ATL interfaces.","pos":[4996,5015]},{"content":"Sets the property as readable; that is, it creates the <bpt id=\"p1\">**</bpt>Get<ept id=\"p1\">**</ept> method for retrieving this property from the object.","pos":[5016,5131],"source":" Sets the property as readable; that is, it creates the **Get** method for retrieving this property from the object."},{"content":"You must select <bpt id=\"p1\">**</bpt>Get<ept id=\"p1\">**</ept>, <ph id=\"ph1\">`Put`</ph>, or both.","pos":[5132,5172],"source":" You must select **Get**, `Put`, or both."},{"content":"Put function","pos":[5181,5193]},{"content":"ATL interfaces only.","pos":[5199,5219]},{"content":"Sets the property writable; that is, it creates the <ph id=\"ph1\">`Put`</ph> method for setting, or \"putting,\" this property of the object.","pos":[5220,5340],"source":" Sets the property writable; that is, it creates the `Put` method for setting, or \"putting,\" this property of the object."},{"content":"You must select <bpt id=\"p1\">**</bpt>Get<ept id=\"p1\">**</ept>, <ph id=\"ph1\">`Put`</ph>, or both.","pos":[5341,5381],"source":" You must select **Get**, `Put`, or both."},{"content":"If you select this option, you can choose from the following two ways to implement the method:","pos":[5382,5476]},{"content":"Option","pos":[5483,5489]},{"content":"Description","pos":[5490,5501]},{"content":"PropPut","pos":[5543,5550]},{"content":"The <bpt id=\"p1\">[</bpt>PropPut<ept id=\"p1\">](../windows/propput.md)</ept> function returns a copy of the object.","pos":[5553,5628],"source":"The [PropPut](../windows/propput.md) function returns a copy of the object."},{"content":"This is the default and the most common way to make the property writable.","pos":[5629,5703]},{"content":"PropPutRef","pos":[5710,5720]},{"content":"The <bpt id=\"p1\">[</bpt>PropPutRef<ept id=\"p1\">](../windows/propputref.md)</ept> function returns a reference to the object, rather than returning the copy of the object itself.","pos":[5723,5862],"source":"The [PropPutRef](../windows/propputref.md) function returns a reference to the object, rather than returning the copy of the object itself."},{"content":"Consider using this option for objects, such as large structs or arrays, that may have initialization overhead.","pos":[5863,5974]},{"content":"Parameter attributes","pos":[5984,6004]},{"content":"ATL interfaces only.","pos":[6010,6030]},{"content":"Sets whether the parameter specified by <bpt id=\"p1\">**</bpt>Parameter name<ept id=\"p1\">**</ept> is <bpt id=\"p2\">**</bpt>in<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>out<ept id=\"p3\">**</ept>, both, or none.","pos":[6031,6124],"source":" Sets whether the parameter specified by **Parameter name** is **in**, **out**, both, or none."},{"content":"Option","pos":[6131,6137]},{"content":"Description","pos":[6138,6149]},{"content":"in","pos":[6191,6193]},{"content":"Indicates that the parameter is passed from the calling procedure to the called procedure.","pos":[6196,6286]},{"content":"out","pos":[6293,6296]},{"content":"Indicates that the pointer parameter is returned from the called procedure to the calling procedure (from the server to the client).","pos":[6299,6431]},{"content":"Parameter type","pos":[6441,6455]},{"content":"Sets the data type of the parameter.","pos":[6461,6497]},{"content":"Select the type from the list.","pos":[6498,6528]},{"content":"Parameter name","pos":[6537,6551]},{"content":"Sets the name of a parameter you are adding for the property, if the property has parameters.","pos":[6557,6650]},{"content":"Once you click <bpt id=\"p1\">**</bpt>Add<ept id=\"p1\">**</ept>, the parameter name appears in <bpt id=\"p2\">**</bpt>Parameter list<ept id=\"p2\">**</ept>.","pos":[6651,6724],"source":" Once you click **Add**, the parameter name appears in **Parameter list**."},{"content":"Parameter list","pos":[6733,6747]},{"content":"Displays the list of attributes to be added to the property.","pos":[6753,6813]},{"content":"Each item in the list consists of the parameter name, parameter type, and attributes.","pos":[6814,6899]},{"content":"Use <bpt id=\"p1\">**</bpt>Add<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Remove<ept id=\"p2\">**</ept> to update the list.","pos":[6900,6946],"source":" Use **Add** and **Remove** to update the list."},{"content":"Add","pos":[6955,6958]},{"content":"Adds the parameter you specify in <bpt id=\"p1\">**</bpt>Parameter name<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Parameter type<ept id=\"p2\">**</ept> to the <bpt id=\"p3\">**</bpt>Parameter list<ept id=\"p3\">**</ept>.","pos":[6964,7066],"source":" Adds the parameter you specify in **Parameter name** and **Parameter type** to the **Parameter list**."},{"content":"You must click <bpt id=\"p1\">**</bpt>Add<ept id=\"p1\">**</ept> to add a parameter to the list.","pos":[7067,7121],"source":" You must click **Add** to add a parameter to the list."},{"content":"Remove","pos":[7130,7136]},{"content":"Removes the parameter you select in <bpt id=\"p1\">**</bpt>Parameter list<ept id=\"p1\">**</ept>.","pos":[7142,7197],"source":" Removes the parameter you select in **Parameter list**."},{"content":"Default property","pos":[7206,7222]},{"content":"MFC dispinterface only.","pos":[7228,7251]},{"content":"Sets this property as the default for the interface.","pos":[7252,7304]},{"content":"An interface can have only one default property; once you specify the default property, for any other properties you add to the interface, this box is unavailable.","pos":[7305,7468]},{"content":"See Also","pos":[7477,7485]},{"content":"Adding a Property","pos":[7490,7507]},{"content":"IDL Attributes, Add Property Wizard","pos":[7554,7589]},{"content":"Implementing an Interface","pos":[7642,7667]}],"content":"---\ntitle: \"Names, Add Property Wizard | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"vc.codewiz.prop.overview\"\ndev_langs: \n  - \"C++\"\nms.assetid: 0453b7ea-89cb-41a1-80a2-d45f61589c0a\ncaps.latest.revision: 6\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Names, Add Property Wizard\nUse this wizard to add a property to an interface.  \n  \n **Property type**  \n Sets the type of property you are adding. For MFC dispinterfaces, provide your own type or select from the predefined list. If you provide a stock implementation of a property, **Property type** is set to the stock type and is unavailable for change.  \n  \n **Property name**  \n Sets the name of the property. For MFC dispinterfaces associated with ActiveX controls, you can supply your own name or you can select a stock property name from the predefined list. If you provide your own property name, the **Stock** implementation type is unavailable. See [Stock Properties](../ide/stock-properties.md) for a description of the properties in the list.  \n  \n|Interface type|Description|  \n|--------------------|-----------------|  \n|ATL dual interface, custom interface, and local custom interface|Provide a property name.|  \n|MFC dispinterface, MFC ActiveX control dispinterface|Provide a property name or select a stock property from the list. If you select a property from the list, the appropriate value appears in the **Property type** box. You can change this type, depending on your selection under **Implementation type**.|  \n  \n **Return type**  \n ATL interfaces only. Sets the return type for the property. For dual interfaces, `HRESULT` is always the return type, and this box is unavailable. For custom interfaces, you can select a return type from the list. `HRESULT` is still recommended, because it provides a standard way to return errors.  \n  \n **Variable name**  \n MFC dispinterfaces only. Available only if you specify **Member variable** under **Implementation type**. Sets the name of the member variable with which the property is associated. By default, the variable name is set to m_*PropertyName*. You can edit this name.  \n  \n **Notification function**  \n MFC dispinterfaces only. Available only if you specify **Member variable** under **Implementation type**. Sets the name of the notification function called if the property changes. By default, the name of the notification function is set to On*PropertyName*Changed. You can edit this name.  \n  \n **Get function**  \n For MFC dispinterfaces. Available only if you specify **Get/Set methods** under **Implementation type**. Sets the name of the function to get the property. By default, the name of the Get function is set to Get*PropertyName*. You can edit this name. If you delete the name, the function [GetNotSupported](../mfc/reference/colecontrol-class.md#getnotsupported) is inserted into the interface dispatch map. The Get*PropertyName* function specifies that the property as readable.  \n  \n **Set function**  \n MFC dispinterfaces only. Available only if you specify **Get/Set methods** under **Implementation type**. Sets the name of the function to set the property. By default, the name of the Set function is set to Set*PropertyName*. You can edit this name. If you delete the name, the function [SetNotSupported](../mfc/reference/colecontrol-class.md#setnotsupported) is inserted into the interface dispatch map. The Set*PropertyName* function specifies that the property is writable.  \n  \n **Implementation type**  \n MFC dispinterfaces only. Specifies how to implement the property you are adding.  \n  \n|Implementation type|Description|  \n|-------------------------|-----------------|  \n|**Stock**|Specifies a stock implementation for the property selected in **Property name**. The default. See [Stock Properties](../ide/stock-properties.md) for more information.<br /><br /> If you specify **Stock**, then **Property type**, **Parameter type**, and **Parameter name** are dimmed.|  \n|**Member variable**|Specifies the property is added as a member variable. You can add custom properties or most stock properties as member variables. You cannot specify **Member variable** for **Caption**, **hWnd**, and **Text** properties.<br /><br /> Provides default names under **Variable name** and **Notification function**. You can edit this name.|  \n|**Get/Set methods**|Specifies the property is added as Get*PropertyName* and Set*PropertyName* functions, by default. These names appear under **Get function** and **Set function**.<br /><br /> You can change the default **Property type**, which passes a value for the Get function. You can specify parameters for the **Get** and `Set` functions.|  \n  \n **Get function**  \n For ATL interfaces. Sets the property as readable; that is, it creates the **Get** method for retrieving this property from the object. You must select **Get**, `Put`, or both.  \n  \n **Put function**  \n ATL interfaces only. Sets the property writable; that is, it creates the `Put` method for setting, or \"putting,\" this property of the object. You must select **Get**, `Put`, or both. If you select this option, you can choose from the following two ways to implement the method:  \n  \n|Option|Description|  \n|------------|-----------------|  \n|**PropPut**|The [PropPut](../windows/propput.md) function returns a copy of the object. This is the default and the most common way to make the property writable.|  \n|**PropPutRef**|The [PropPutRef](../windows/propputref.md) function returns a reference to the object, rather than returning the copy of the object itself. Consider using this option for objects, such as large structs or arrays, that may have initialization overhead.|  \n  \n **Parameter attributes**  \n ATL interfaces only. Sets whether the parameter specified by **Parameter name** is **in**, **out**, both, or none.  \n  \n|Option|Description|  \n|------------|-----------------|  \n|**in**|Indicates that the parameter is passed from the calling procedure to the called procedure.|  \n|**out**|Indicates that the pointer parameter is returned from the called procedure to the calling procedure (from the server to the client).|  \n  \n **Parameter type**  \n Sets the data type of the parameter. Select the type from the list.  \n  \n **Parameter name**  \n Sets the name of a parameter you are adding for the property, if the property has parameters. Once you click **Add**, the parameter name appears in **Parameter list**.  \n  \n **Parameter list**  \n Displays the list of attributes to be added to the property. Each item in the list consists of the parameter name, parameter type, and attributes. Use **Add** and **Remove** to update the list.  \n  \n **Add**  \n Adds the parameter you specify in **Parameter name** and **Parameter type** to the **Parameter list**. You must click **Add** to add a parameter to the list.  \n  \n **Remove**  \n Removes the parameter you select in **Parameter list**.  \n  \n **Default property**  \n MFC dispinterface only. Sets this property as the default for the interface. An interface can have only one default property; once you specify the default property, for any other properties you add to the interface, this box is unavailable.  \n  \n## See Also  \n [Adding a Property](../ide/adding-a-property-visual-cpp.md)   \n [IDL Attributes, Add Property Wizard](../ide/idl-attributes-add-property-wizard.md)   \n [Implementing an Interface](../ide/implementing-an-interface-visual-cpp.md)"}