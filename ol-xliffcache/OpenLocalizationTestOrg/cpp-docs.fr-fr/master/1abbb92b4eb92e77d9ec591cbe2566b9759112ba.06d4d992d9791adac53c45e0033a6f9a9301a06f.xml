{"nodes":[{"pos":[12,57],"content":"isascii, __isascii, iswascii | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"isascii, __isascii, iswascii | Microsoft Docs","pos":[0,45]}]},{"content":"isascii, __isascii, iswascii","pos":[1200,1228]},{"content":"Determines whether a particular character is an ASCII character.","pos":[1229,1293]},{"content":"Syntax","pos":[1302,1308]},{"content":"Parameters","pos":[1434,1444]},{"content":"Integer to test.","pos":[1455,1471]},{"content":"Return Value","pos":[1480,1492]},{"content":"Each of these routines returns nonzero if <ph id=\"ph1\">`c`</ph> is a particular representation of an ASCII character.","pos":[1496,1595],"source":"Each of these routines returns nonzero if `c` is a particular representation of an ASCII character."},{"content":"returns a nonzero value if <ph id=\"ph1\">`c`</ph> is an ASCII character (in the range 0x00 – 0x7F).","pos":[1608,1688],"source":" returns a nonzero value if `c` is an ASCII character (in the range 0x00 – 0x7F)."},{"content":"returns a nonzero value if <ph id=\"ph1\">`c`</ph> is a wide-character representation of an ASCII character.","pos":[1700,1788],"source":" returns a nonzero value if `c` is a wide-character representation of an ASCII character."},{"content":"Each of these routines returns 0 if <ph id=\"ph1\">`c`</ph> does not satisfy the test condition.","pos":[1789,1865],"source":" Each of these routines returns 0 if `c` does not satisfy the test condition."},{"content":"Remarks","pos":[1874,1881]},{"pos":[1885,2006],"content":"Both <ph id=\"ph1\">`__isascii`</ph> and <ph id=\"ph2\">`iswascii`</ph> are implemented as macros unless the preprocessor macro _CTYPE_DISABLE_MACROS is defined.","source":"Both `__isascii` and `iswascii` are implemented as macros unless the preprocessor macro _CTYPE_DISABLE_MACROS is defined."},{"pos":[2013,2200],"content":"For backward compatibility, <ph id=\"ph1\">`isascii`</ph> is implemented as a macro only if <bpt id=\"p1\">[</bpt>__STDC<ph id=\"ph2\">\\_\\_</ph><ept id=\"p1\">](../../preprocessor/predefined-macros.md)</ept> is not defined or is defined as 0; otherwise it is undefined.","source":"For backward compatibility, `isascii` is implemented as a macro only if [__STDC\\_\\_](../../preprocessor/predefined-macros.md) is not defined or is defined as 0; otherwise it is undefined."},{"content":"Generic-Text Routine Mappings","pos":[2210,2239]},{"content":"Tchar.h routine","pos":[2246,2261]},{"content":"_UNICODE and _MBCS not defined","pos":[2262,2292]},{"content":"_MBCS defined","pos":[2293,2306]},{"content":"_UNICODE defined","pos":[2307,2323]},{"content":"Requirements","pos":[2494,2506]},{"content":"Routine","pos":[2513,2520]},{"content":"Required header","pos":[2521,2536]},{"pos":[2590,2591],"content":","},{"content":"C: <ph id=\"ph1\">\\&lt;</ph>ctype.h&gt;","pos":[2604,2617],"source":"C: \\<ctype.h>"},{"content":"C++: <ph id=\"ph1\">\\&lt;</ph>cctype&gt; or <ph id=\"ph2\">\\&lt;</ph>ctype.h&gt;","pos":[2630,2658],"source":"C++: \\<cctype> or \\<ctype.h>"},{"content":"C: <ph id=\"ph1\">\\&lt;</ph>wctype.h&gt;, <ph id=\"ph2\">\\&lt;</ph>ctype.h&gt;, or <ph id=\"ph3\">\\&lt;</ph>wchar.h&gt;","pos":[2674,2715],"source":"C: \\<wctype.h>, \\<ctype.h>, or \\<wchar.h>"},{"content":"C++: <ph id=\"ph1\">\\&lt;</ph>cwctype&gt;, <ph id=\"ph2\">\\&lt;</ph>cctype&gt;, <ph id=\"ph3\">\\&lt;</ph>wctype.h&gt;, <ph id=\"ph4\">\\&lt;</ph>ctype.h&gt;, or <ph id=\"ph5\">\\&lt;</ph>wchar.h&gt;","pos":[2728,2794],"source":"C++: \\<cwctype>, \\<cctype>, \\<wctype.h>, \\<ctype.h>, or \\<wchar.h>"},{"content":"The <ph id=\"ph1\">`isascii`</ph>, <ph id=\"ph2\">`__isascii`</ph> and <ph id=\"ph3\">`iswascii`</ph> functions are Microsoft specific.","pos":[2802,2877],"source":"The `isascii`, `__isascii` and `iswascii` functions are Microsoft specific."},{"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","pos":[2878,3002],"source":" For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"content":"See Also","pos":[3011,3019]},{"content":"Character Classification","pos":[3024,3048]},{"content":"Locale","pos":[3108,3114]},{"content":"is, isw Routines","pos":[3156,3172]}],"content":"---\ntitle: \"isascii, __isascii, iswascii | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"iswascii\"\n  - \"__isascii\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-string-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"iswascii\"\n  - \"istascii\"\n  - \"__isascii\"\n  - \"_istascii\"\n  - \"isascii\"\n  - \"ctype/isascii\"\n  - \"ctype/__isascii\"\n  - \"corecrt_wctype/iswascii\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"__isascii function\"\n  - \"_isascii function\"\n  - \"isascii function\"\n  - \"_istascii function\"\n  - \"istascii function\"\n  - \"iswascii function\"\nms.assetid: ba4325ad-7cb3-4fb9-b096-58906d67971a\ncaps.latest.revision: 22\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# isascii, __isascii, iswascii\nDetermines whether a particular character is an ASCII character.  \n  \n## Syntax  \n  \n```  \nint __isascii(   \n   int c   \n);  \nint iswascii(   \n   wint_t c   \n);  \n#define isascii __isascii  \n```  \n  \n#### Parameters  \n `c`  \n Integer to test.  \n  \n## Return Value  \n Each of these routines returns nonzero if `c` is a particular representation of an ASCII character. `__isascii` returns a nonzero value if `c` is an ASCII character (in the range 0x00 – 0x7F). `iswascii` returns a nonzero value if `c` is a wide-character representation of an ASCII character. Each of these routines returns 0 if `c` does not satisfy the test condition.  \n  \n## Remarks  \n Both `__isascii` and `iswascii` are implemented as macros unless the preprocessor macro _CTYPE_DISABLE_MACROS is defined.  \n  \n For backward compatibility, `isascii` is implemented as a macro only if [__STDC\\_\\_](../../preprocessor/predefined-macros.md) is not defined or is defined as 0; otherwise it is undefined.  \n  \n### Generic-Text Routine Mappings  \n  \n|Tchar.h routine|_UNICODE and _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|--------------------------------------|--------------------|-----------------------|  \n|`_istascii`|`__isascii`|`__isascii`|`iswascii`|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`isascii`, `__isascii`|C: \\<ctype.h><br /><br /> C++: \\<cctype> or \\<ctype.h>|  \n|`iswascii`|C: \\<wctype.h>, \\<ctype.h>, or \\<wchar.h><br /><br /> C++: \\<cwctype>, \\<cctype>, \\<wctype.h>, \\<ctype.h>, or \\<wchar.h>|  \n  \n The `isascii`, `__isascii` and `iswascii` functions are Microsoft specific. For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## See Also  \n [Character Classification](../../c-runtime-library/character-classification.md)   \n [Locale](../../c-runtime-library/locale.md)   \n [is, isw Routines](../../c-runtime-library/is-isw-routines.md)"}