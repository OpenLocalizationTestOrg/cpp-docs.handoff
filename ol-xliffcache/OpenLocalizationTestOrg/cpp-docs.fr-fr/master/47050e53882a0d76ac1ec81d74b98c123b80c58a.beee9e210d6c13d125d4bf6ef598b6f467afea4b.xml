{"nodes":[{"pos":[12,53],"content":"unary_delegate (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"unary_delegate (STL-CLR) | Microsoft Docs","pos":[0,41]}]},{"content":"unary_delegate (STL/CLR)","pos":[641,665]},{"content":"The genereic class describes a one-argument delegate.","pos":[666,719]},{"content":"You use it specify a delegate in terms of its argument and return types.","pos":[720,792]},{"content":"Syntax","pos":[801,807]},{"content":"Parameters","pos":[923,933]},{"content":"Arg","pos":[937,940]},{"content":"The type of the argument.","pos":[944,969]},{"content":"Result","pos":[976,982]},{"content":"The return type.","pos":[986,1002]},{"content":"Remarks","pos":[1011,1018]},{"content":"The genereic delegate describes a one-argument function.","pos":[1022,1078]},{"content":"Note that for:","pos":[1085,1099]},{"pos":[1184,1236],"content":"the types <ph id=\"ph1\">`Fun1`</ph> and <ph id=\"ph2\">`Fun2`</ph> are synonyms, while for:","source":"the types `Fun1` and `Fun2` are synonyms, while for:"},{"content":"they are not the same type.","pos":[1307,1334]},{"content":"Example","pos":[1343,1350]},{"content":"Requirements","pos":[1921,1933]},{"pos":[1937,1969],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/functional&gt;","source":"**Header:** \\<cliext/functional>"},{"pos":[1976,1997],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2006,2014]},{"content":"binary_delegate (STL/CLR)","pos":[2019,2044]},{"content":"binary_delegate_noreturn (STL/CLR)","pos":[2089,2123]},{"content":"unary_delegate_noreturn (STL/CLR)","pos":[2177,2210]}],"content":"---\ntitle: \"unary_delegate (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::unary_delegate\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"unary_delegate function [STL/CLR]\"\nms.assetid: b3ee253c-98e8-466e-a272-505e47aed061\ncaps.latest.revision: 14\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# unary_delegate (STL/CLR)\nThe genereic class describes a one-argument delegate. You use it specify a delegate in terms of its argument and return types.  \n  \n## Syntax  \n  \n```  \ngeneric<typename Arg,  \n    typename Result>  \n    delegate Result unary_delegate(Arg);  \n```  \n  \n#### Parameters  \n Arg  \n The type of the argument.  \n  \n Result  \n The return type.  \n  \n## Remarks  \n The genereic delegate describes a one-argument function.  \n  \n Note that for:  \n  \n `unary_delegare<int, int> Fun1;`  \n  \n `unary_delegare<int, int> Fun2;`  \n  \n the types `Fun1` and `Fun2` are synonyms, while for:  \n  \n `delegate int Fun1(int);`  \n  \n `delegate int Fun2(int);`  \n  \n they are not the same type.  \n  \n## Example  \n  \n```  \n// cliext_unary_delegate.cpp   \n// compile with: /clr   \n#include <cliext/functional>   \n  \nint hash_val(wchar_t val)   \n    {   \n    return ((val * 17 + 31) % 67);   \n    }   \n  \ntypedef cliext::unary_delegate<wchar_t, int> Mydelegate;   \nint main()   \n    {   \n    Mydelegate^ myhash = gcnew Mydelegate(&hash_val);   \n  \n    System::Console::WriteLine(\"hash(L'a') = {0}\", myhash(L'a'));   \n    System::Console::WriteLine(\"hash(L'b') = {0}\", myhash(L'b'));   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \nhash(L'a') = 5  \nhash(L'b') = 22  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/functional>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [binary_delegate (STL/CLR)](../dotnet/binary-delegate-stl-clr.md)   \n [binary_delegate_noreturn (STL/CLR)](../dotnet/binary-delegate-noreturn-stl-clr.md)   \n [unary_delegate_noreturn (STL/CLR)](../dotnet/unary-delegate-noreturn-stl-clr.md)"}