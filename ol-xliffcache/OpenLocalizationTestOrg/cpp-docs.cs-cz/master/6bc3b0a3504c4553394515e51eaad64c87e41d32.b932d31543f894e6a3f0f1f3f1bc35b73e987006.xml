{"nodes":[{"pos":[12,44],"content":"_cexit, _c_exit | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_cexit, _c_exit | Microsoft Docs","pos":[0,32]}]},{"pos":[1073,1088],"content":"_cexit, _c_exit","linkify":"_cexit, _c_exit","nodes":[{"content":"_cexit, _c_exit","pos":[0,15]}]},{"content":"Performs cleanup operations and returns without terminating the process.","pos":[1089,1161]},{"pos":[1170,1176],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1247,1254],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`_cexit`</ph> function calls, in last-in, first-out (LIFO) order, the functions registered by <ph id=\"ph2\">`atexit`</ph> and <ph id=\"ph3\">`_onexit`</ph>.","pos":[1258,1374],"source":"The `_cexit` function calls, in last-in, first-out (LIFO) order, the functions registered by `atexit` and `_onexit`."},{"content":"Then <ph id=\"ph1\">`_cexit`</ph> flushes all I/O buffers and closes all open streams before returning.","pos":[1375,1458],"source":" Then `_cexit` flushes all I/O buffers and closes all open streams before returning."},{"content":"<ph id=\"ph1\">`_c_exit`</ph> is the same as <ph id=\"ph2\">`_exit`</ph> but returns to the calling process without processing <ph id=\"ph3\">`atexit`</ph> or <ph id=\"ph4\">`_onexit`</ph> or flushing stream buffers.","pos":[1459,1595],"source":"`_c_exit` is the same as `_exit` but returns to the calling process without processing `atexit` or `_onexit` or flushing stream buffers."},{"content":"The behavior of <ph id=\"ph1\">`exit`</ph>,<ph id=\"ph2\">`_exit`</ph>, <ph id=\"ph3\">`_cexit`</ph>, and <ph id=\"ph4\">`_c_exit`</ph> is shown in the following table.","pos":[1596,1684],"source":" The behavior of `exit`,`_exit`, `_cexit`, and `_c_exit` is shown in the following table."},{"content":"Function","pos":[1691,1699]},{"content":"Behavior","pos":[1700,1708]},{"content":"Performs complete C library termination procedures, terminates process, and exits with supplied status code.","pos":[1754,1862]},{"content":"Performs quick C library termination procedures, terminates process, and exits with supplied status code.","pos":[1875,1980]},{"content":"Performs complete C library termination procedures and returns to caller, but does not terminate process.","pos":[1994,2099]},{"content":"Performs quick C library termination procedures and returns to caller, but does not terminate process.","pos":[2114,2216]},{"content":"When you call the <ph id=\"ph1\">`_cexit`</ph> or <ph id=\"ph2\">`_c_exit`</ph> functions, the destructors for any temporary or automatic objects that exist at the time of the call are not called.","pos":[2224,2380],"source":"When you call the `_cexit` or `_c_exit` functions, the destructors for any temporary or automatic objects that exist at the time of the call are not called."},{"content":"An automatic object is an object that is defined in a function where the object is not declared to be static.","pos":[2381,2490]},{"content":"A temporary object is an object created by the compiler.","pos":[2491,2547]},{"content":"To destroy an automatic object before calling <ph id=\"ph1\">`_cexit`</ph> or <ph id=\"ph2\">`_c_exit`</ph>, explicitly call the destructor for the object, as follows:","pos":[2548,2675],"source":" To destroy an automatic object before calling `_cexit` or `_c_exit`, explicitly call the destructor for the object, as follows:"},{"pos":[2732,2744],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[2751,2758]},{"content":"Required header","pos":[2759,2774]},{"content":"<ph id=\"ph1\">\\&lt;</ph>process.h&gt;","pos":[2828,2840],"source":"\\<process.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>process.h&gt;","pos":[2855,2867],"source":"\\<process.h>"},{"pos":[2875,2993],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"pos":[3002,3027],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"pos":[3031,3168],"content":"<bpt id=\"p1\">[</bpt>System::Diagnostics::Process::CloseMainWindow<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.diagnostics.process.closemainwindow.aspx)</ept>","source":"[System::Diagnostics::Process::CloseMainWindow](https://msdn.microsoft.com/en-us/library/system.diagnostics.process.closemainwindow.aspx)"},{"pos":[3177,3185],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Process and Environment Control<ept id=\"p1\">](../../c-runtime-library/process-and-environment-control.md)</ept><ph id=\"ph1\"> </ph>","pos":[3189,3283],"source":"[Process and Environment Control](../../c-runtime-library/process-and-environment-control.md) "},{"content":"<bpt id=\"p1\"> [</bpt>abort<ept id=\"p1\">](../../c-runtime-library/reference/abort.md)</ept><ph id=\"ph1\"> </ph>","pos":[3286,3339],"source":" [abort](../../c-runtime-library/reference/abort.md) "},{"content":"<bpt id=\"p1\"> [</bpt>atexit<ept id=\"p1\">](../../c-runtime-library/reference/atexit.md)</ept><ph id=\"ph1\"> </ph>","pos":[3342,3397],"source":" [atexit](../../c-runtime-library/reference/atexit.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_exec, _wexec Functions<ept id=\"p1\">](../../c-runtime-library/exec-wexec-functions.md)</ept><ph id=\"ph1\"> </ph>","pos":[3400,3476],"source":" [_exec, _wexec Functions](../../c-runtime-library/exec-wexec-functions.md) "},{"content":"<bpt id=\"p1\"> [</bpt>exit, _Exit, _exit<ept id=\"p1\">](../../c-runtime-library/reference/exit-exit-exit.md)</ept><ph id=\"ph1\"> </ph>","pos":[3479,3554],"source":" [exit, _Exit, _exit](../../c-runtime-library/reference/exit-exit-exit.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_onexit, _onexit_m<ept id=\"p1\">](../../c-runtime-library/reference/onexit-onexit-m.md)</ept><ph id=\"ph1\"> </ph>","pos":[3557,3633],"source":" [_onexit, _onexit_m](../../c-runtime-library/reference/onexit-onexit-m.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_spawn, _wspawn Functions<ept id=\"p1\">](../../c-runtime-library/spawn-wspawn-functions.md)</ept><ph id=\"ph1\"> </ph>","pos":[3636,3716],"source":" [_spawn, _wspawn Functions](../../c-runtime-library/spawn-wspawn-functions.md) "},{"content":"<bpt id=\"p1\"> [</bpt>system, _wsystem<ept id=\"p1\">](../../c-runtime-library/reference/system-wsystem.md)</ept>","pos":[3719,3791],"source":" [system, _wsystem](../../c-runtime-library/reference/system-wsystem.md)"}],"content":"---\ntitle: \"_cexit, _c_exit | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_c_exit\"\n  - \"_cexit\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-runtime-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_cexit\"\n  - \"c_exit\"\n  - \"_c_exit\"\n  - \"cexit\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"cleanup operations during processes\"\n  - \"cexit function\"\n  - \"_c_exit function\"\n  - \"_cexit function\"\n  - \"c_exit function\"\nms.assetid: f3072045-9924-4b1a-9fef-b0dcd6d12663\ncaps.latest.revision: 12\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _cexit, _c_exit\nPerforms cleanup operations and returns without terminating the process.  \n  \n## Syntax  \n  \n```  \nvoid _cexit( void );  \nvoid _c_exit( void );  \n```  \n  \n## Remarks  \n The `_cexit` function calls, in last-in, first-out (LIFO) order, the functions registered by `atexit` and `_onexit`. Then `_cexit` flushes all I/O buffers and closes all open streams before returning. `_c_exit` is the same as `_exit` but returns to the calling process without processing `atexit` or `_onexit` or flushing stream buffers. The behavior of `exit`,`_exit`, `_cexit`, and `_c_exit` is shown in the following table.  \n  \n|Function|Behavior|  \n|--------------|--------------|  \n|`exit`|Performs complete C library termination procedures, terminates process, and exits with supplied status code.|  \n|`_exit`|Performs quick C library termination procedures, terminates process, and exits with supplied status code.|  \n|`_cexit`|Performs complete C library termination procedures and returns to caller, but does not terminate process.|  \n|`_c_exit`|Performs quick C library termination procedures and returns to caller, but does not terminate process.|  \n  \n When you call the `_cexit` or `_c_exit` functions, the destructors for any temporary or automatic objects that exist at the time of the call are not called. An automatic object is an object that is defined in a function where the object is not declared to be static. A temporary object is an object created by the compiler. To destroy an automatic object before calling `_cexit` or `_c_exit`, explicitly call the destructor for the object, as follows:  \n  \n```  \nmyObject.myClass::~myClass( );  \n```  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_cexit`|\\<process.h>|  \n|`_c_exit`|\\<process.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## .NET Framework Equivalent  \n [System::Diagnostics::Process::CloseMainWindow](https://msdn.microsoft.com/en-us/library/system.diagnostics.process.closemainwindow.aspx)  \n  \n## See Also  \n [Process and Environment Control](../../c-runtime-library/process-and-environment-control.md)   \n [abort](../../c-runtime-library/reference/abort.md)   \n [atexit](../../c-runtime-library/reference/atexit.md)   \n [_exec, _wexec Functions](../../c-runtime-library/exec-wexec-functions.md)   \n [exit, _Exit, _exit](../../c-runtime-library/reference/exit-exit-exit.md)   \n [_onexit, _onexit_m](../../c-runtime-library/reference/onexit-onexit-m.md)   \n [_spawn, _wspawn Functions](../../c-runtime-library/spawn-wspawn-functions.md)   \n [system, _wsystem](../../c-runtime-library/reference/system-wsystem.md)"}