{"nodes":[{"pos":[12,60],"content":"Unicode: The Wide-Character Set | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Unicode: The Wide-Character Set | Microsoft Docs","pos":[0,48]}]},{"content":"Unicode: The Wide-Character Set","pos":[683,714]},{"content":"A wide character is a 2-byte multilingual character code.","pos":[715,772]},{"content":"Any character in use in modern computing worldwide, including technical symbols and special publishing characters, can be represented according to the Unicode specification as a wide character.","pos":[773,966]},{"content":"Developed and maintained by a large consortium that includes Microsoft, the Unicode standard is now widely accepted.","pos":[967,1083]},{"content":"A wide character is of type <ph id=\"ph1\">`wchar_t`</ph>.","pos":[1090,1128],"source":"A wide character is of type `wchar_t`."},{"content":"A wide-character string is represented as a <ph id=\"ph1\">`wchar_t[]`</ph> array and is pointed to by a <ph id=\"ph2\">`wchar_t*`</ph> pointer.","pos":[1129,1233],"source":" A wide-character string is represented as a `wchar_t[]` array and is pointed to by a `wchar_t*` pointer."},{"content":"You can represent any ASCII character as a wide character by prefixing the letter <ph id=\"ph1\">`L`</ph> to the character.","pos":[1234,1337],"source":" You can represent any ASCII character as a wide character by prefixing the letter `L` to the character."},{"content":"For example, L'\\0' is the terminating wide (16-bit) <ph id=\"ph1\">`NULL`</ph> character.","pos":[1338,1407],"source":" For example, L'\\0' is the terminating wide (16-bit) `NULL` character."},{"content":"Similarly, you can represent any ASCII string literal as a wide-character string literal simply by prefixing the letter L to the ASCII literal (L\"Hello\").","pos":[1408,1562]},{"content":"Generally, wide characters take up more space in memory than multibyte characters but are faster to process.","pos":[1569,1677]},{"content":"In addition, only one locale can be represented at a time in multibyte encoding, whereas all character sets in the world are represented simultaneously by the Unicode representation.","pos":[1678,1860]},{"content":"See Also","pos":[1869,1877]},{"content":"Internationalization","pos":[1882,1902]},{"content":"Run-Time Routines by Category","pos":[1955,1984]}],"content":"---\ntitle: \"Unicode: The Wide-Character Set | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"c.international\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"Unicode [C++], wide character set\"\n  - \"wide characters [C++], Unicode\"\nms.assetid: b6a05a21-59a5-4d30-8c85-2dbe185f7a74\ncaps.latest.revision: 8\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Unicode: The Wide-Character Set\nA wide character is a 2-byte multilingual character code. Any character in use in modern computing worldwide, including technical symbols and special publishing characters, can be represented according to the Unicode specification as a wide character. Developed and maintained by a large consortium that includes Microsoft, the Unicode standard is now widely accepted.  \n  \n A wide character is of type `wchar_t`. A wide-character string is represented as a `wchar_t[]` array and is pointed to by a `wchar_t*` pointer. You can represent any ASCII character as a wide character by prefixing the letter `L` to the character. For example, L'\\0' is the terminating wide (16-bit) `NULL` character. Similarly, you can represent any ASCII string literal as a wide-character string literal simply by prefixing the letter L to the ASCII literal (L\"Hello\").  \n  \n Generally, wide characters take up more space in memory than multibyte characters but are faster to process. In addition, only one locale can be represented at a time in multibyte encoding, whereas all character sets in the world are represented simultaneously by the Unicode representation.  \n  \n## See Also  \n [Internationalization](../c-runtime-library/internationalization.md)   \n [Run-Time Routines by Category](../c-runtime-library/run-time-routines-by-category.md)"}