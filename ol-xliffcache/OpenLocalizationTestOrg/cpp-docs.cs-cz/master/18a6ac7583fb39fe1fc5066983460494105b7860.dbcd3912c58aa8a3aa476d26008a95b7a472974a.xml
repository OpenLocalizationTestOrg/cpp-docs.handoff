{"nodes":[{"pos":[12,49],"content":"Compiler Error C3408 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C3408 | Microsoft Docs","pos":[0,37]}]},{"pos":[619,639],"content":"Compiler Error C3408","linkify":"Compiler Error C3408","nodes":[{"content":"Compiler Error C3408","pos":[0,20]}]},{"content":"'attribute': attribute is not allowed on template definitions","pos":[640,701]},{"content":"Attributes cannot be applied to template definitions.","pos":[708,761]},{"pos":[770,777],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following sample generates C3408.","pos":[781,818]}],"content":"---\ntitle: \"Compiler Error C3408 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"C3408\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C3408\"\nms.assetid: 1f5ea979-fb1e-4214-b310-6fd6ca8249b1\ncaps.latest.revision: 12\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Compiler Error C3408\n'attribute': attribute is not allowed on template definitions  \n  \n Attributes cannot be applied to template definitions.  \n  \n## Example  \n The following sample generates C3408.  \n  \n```  \n// C3408.cpp  \n// compile with: /c  \ntemplate <class T> struct PTS {  \n   enum {  \n      IsPointer = 0,  \n      IsPointerToDataMember = 0  \n   };  \n};  \n  \ntemplate <class T>   \n[coclass]   // C3408  \nstruct PTS<T*> {  \n   enum {  \n      IsPointer = 1,  \n      IsPointerToDataMember = 0  \n   };  \n};  \n  \ntemplate   \n<class T, class U>   \nstruct PTS<T U::*> {  \n   enum {  \n      IsPointer = 1,  \n      IsPointerToDataMember = 1  \n   };  \n};  \n  \nstruct S{};  \n  \nextern \"C\" int printf(const char*,...);  \n  \nint main() {  \n   S s, *pS;  \n   int S::*ptm;  \n  \n   printf(\"PTS<S>::IsPointer == %d PTS<S>::IsPointerToDataMember == %d\\n\", PTS<S>::IsPointer, PTS<S>:: IsPointerToDataMember);  \n   printf(\"PTS<S*>::IsPointer == %d PTS<S*>::IsPointerToDataMember == %d\\n\", PTS<S*>::IsPointer, PTS<S*>:: IsPointerToDataMember);  \n   printf(\"PTS<int S::*>::IsPointer == %d PTS<int S::*>::IsPointerToDataMember == %d\\n\", PTS<int S::*>::IsPointer, PTS<int S::*>:: IsPointerToDataMember);  \n}  \n```"}