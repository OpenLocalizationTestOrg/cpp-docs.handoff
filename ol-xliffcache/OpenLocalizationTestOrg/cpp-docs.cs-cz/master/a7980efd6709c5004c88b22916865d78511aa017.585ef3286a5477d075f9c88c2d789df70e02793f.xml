{"nodes":[{"pos":[12,49],"content":"basic_iostream Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"basic_iostream Class | Microsoft Docs","pos":[0,37]}]},{"pos":[699,719],"content":"basic_iostream Class","linkify":"basic_iostream Class","nodes":[{"content":"basic_iostream Class","pos":[0,20]}]},{"content":"A stream class that can do both input and output.","pos":[720,769]},{"pos":[778,784],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1072,1079],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The template class describes an object that controls insertions, through its base class <bpt id=\"p1\">[</bpt>basic_ostream<ept id=\"p1\">](../standard-library/basic-ostream-class.md)</ept><ph id=\"ph1\">&lt; </ph><ph id=\"ph2\">`Elem`</ph>, <ph id=\"ph3\">`Tr`</ph>&gt;, and extractions, through its base class <bpt id=\"p2\">[</bpt>basic_istream<ept id=\"p2\">](../standard-library/basic-istream-class.md)</ept><ph id=\"ph4\">&lt; </ph><ph id=\"ph5\">`Elem`</ph>, <ph id=\"ph6\">`Tr`</ph>&gt;.","pos":[1083,1362],"source":"The template class describes an object that controls insertions, through its base class [basic_ostream](../standard-library/basic-ostream-class.md)< `Elem`, `Tr`>, and extractions, through its base class [basic_istream](../standard-library/basic-istream-class.md)< `Elem`, `Tr`>."},{"content":"The two objects share a common virtual base class <bpt id=\"p1\">[</bpt>basic_ios<ept id=\"p1\">](../standard-library/basic-ios-class.md)</ept><ph id=\"ph1\">&lt; </ph><ph id=\"ph2\">`Elem`</ph>, <ph id=\"ph3\">`Tr`</ph>&gt;.","pos":[1363,1480],"source":" The two objects share a common virtual base class [basic_ios](../standard-library/basic-ios-class.md)< `Elem`, `Tr`>."},{"content":"They also manage a common stream buffer, with elements of type <ph id=\"ph1\">`Elem`</ph>, whose character traits are determined by the class <ph id=\"ph2\">`Tr`</ph>.","pos":[1481,1608],"source":" They also manage a common stream buffer, with elements of type `Elem`, whose character traits are determined by the class `Tr`."},{"content":"The constructor initializes its base classes through <ph id=\"ph1\">`basic_istream`</ph>( <bpt id=\"p1\">**</bpt>strbuf<ept id=\"p1\">**</ept>) and <ph id=\"ph2\">`basic_ostream`</ph>( <bpt id=\"p2\">**</bpt>strbuf<ept id=\"p2\">**</ept>).","pos":[1609,1724],"source":" The constructor initializes its base classes through `basic_istream`( **strbuf**) and `basic_ostream`( **strbuf**)."},{"pos":[1734,1746],"content":"Constructors","linkify":"Constructors","nodes":[{"content":"Constructors","pos":[0,12]}]},{"pos":[1767,1816],"content":"<bpt id=\"p1\">[</bpt>basic_iostream<ept id=\"p1\">](#basic_iostream__basic_iostream)</ept>","source":"[basic_iostream](#basic_iostream__basic_iostream)"},{"pos":[1817,1850],"content":"Create a <ph id=\"ph1\">`basic_iostream`</ph> object.","source":"Create a `basic_iostream` object."},{"pos":[1861,1877],"content":"Member Functions","linkify":"Member Functions","nodes":[{"content":"Member Functions","pos":[0,16]}]},{"pos":[1898,1927],"content":"<bpt id=\"p1\">[</bpt>swap<ept id=\"p1\">](#basic_iostream__swap)</ept>","source":"[swap](#basic_iostream__swap)"},{"pos":[1928,2023],"content":"Exchanges the contents of the provided <ph id=\"ph1\">`basic_iostream`</ph> object for the contents of this object.","source":"Exchanges the contents of the provided `basic_iostream` object for the contents of this object."},{"pos":[2034,2043],"content":"Operators","linkify":"Operators","nodes":[{"content":"Operators","pos":[0,9]}]},{"pos":[2064,2105],"content":"<bpt id=\"p1\">[</bpt>operator=<ept id=\"p1\">](#basic_iostream__operator_eq)</ept>","source":"[operator=](#basic_iostream__operator_eq)"},{"content":"Assigns the value of a specified <ph id=\"ph1\">`basic_iostream`</ph> object to this object.","pos":[2106,2178],"source":"Assigns the value of a specified `basic_iostream` object to this object."},{"content":"This is a move assignment involving an <ph id=\"ph1\">`rvalue`</ph> that does not leave a copy behind.","pos":[2179,2261],"source":" This is a move assignment involving an `rvalue` that does not leave a copy behind."},{"pos":[2271,2283],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2287,2309],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>istream&gt;","source":"**Header:** \\<istream>"},{"pos":[2316,2334],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"pos":[2344,2421],"content":"<bpt id=\"p1\">&lt;a name=\"basic_iostream__basic_iostream\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  basic_iostream::basic_iostream","linkify":"<a name=\"basic_iostream__basic_iostream\"></a>  basic_iostream::basic_iostream","source":"<a name=\"basic_iostream__basic_iostream\"></a>  basic_iostream::basic_iostream"},{"pos":[2425,2458],"content":"Create a <ph id=\"ph1\">`basic_iostream`</ph> object.","source":"Create a `basic_iostream` object."},{"pos":[2603,2613],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"An existing <ph id=\"ph1\">`basic_streambuf`</ph> object.","pos":[2630,2667],"source":" An existing `basic_streambuf` object."},{"content":"An existing <ph id=\"ph1\">`basic_iostream`</ph> object that is used to construct a new <ph id=\"ph2\">`basic_iostream`</ph>.","pos":[2686,2771],"source":" An existing `basic_iostream` object that is used to construct a new `basic_iostream`."},{"pos":[2781,2788],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2792,2915],"content":"The first constructor initializes the base objects by way of <ph id=\"ph1\">`basic_istream(`` strbuf``)`</ph> and <ph id=\"ph2\">`basic_ostream(`` strbuf``)`</ph>.","source":"The first constructor initializes the base objects by way of `basic_istream(`` strbuf``)` and `basic_ostream(`` strbuf``)`."},{"pos":[2922,3005],"content":"The second constructor initializes the base objects by calling move <ph id=\"ph1\">`(`` right``)`</ph>.","source":"The second constructor initializes the base objects by calling move `(`` right``)`."},{"pos":[3015,3084],"content":"<bpt id=\"p1\">&lt;a name=\"basic_iostream__operator_eq\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  basic_iostream::operator=","linkify":"<a name=\"basic_iostream__operator_eq\"></a>  basic_iostream::operator=","source":"<a name=\"basic_iostream__operator_eq\"></a>  basic_iostream::operator="},{"content":"Assign the value of a specified <ph id=\"ph1\">`basic_iostream`</ph> object to this object.","pos":[3088,3159],"source":"Assign the value of a specified `basic_iostream` object to this object."},{"content":"This is a move assignment involving an <ph id=\"ph1\">`rvalue`</ph> that does not leave a copy behind.","pos":[3160,3242],"source":" This is a move assignment involving an `rvalue` that does not leave a copy behind."},{"pos":[3318,3328],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"An <ph id=\"ph1\">`rvalue`</ph> reference to a <ph id=\"ph2\">`basic_iostream`</ph> object to assign from.","pos":[3344,3410],"source":" An `rvalue` reference to a `basic_iostream` object to assign from."},{"pos":[3420,3427],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3431,3477],"content":"The member operator calls swap <ph id=\"ph1\">`(`` right``)`</ph>.","source":"The member operator calls swap `(`` right``)`."},{"pos":[3487,3544],"content":"<bpt id=\"p1\">&lt;a name=\"basic_iostream__swap\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  basic_iostream::swap","linkify":"<a name=\"basic_iostream__swap\"></a>  basic_iostream::swap","source":"<a name=\"basic_iostream__swap\"></a>  basic_iostream::swap"},{"pos":[3548,3643],"content":"Exchanges the contents of the provided <ph id=\"ph1\">`basic_iostream`</ph> object for the contents of this object.","source":"Exchanges the contents of the provided `basic_iostream` object for the contents of this object."},{"pos":[3702,3712],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The <ph id=\"ph1\">`basic_iostream`</ph> object to swap.","pos":[3728,3764],"source":" The `basic_iostream` object to swap."},{"pos":[3774,3781],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3785,3830],"content":"The member function calls swap <ph id=\"ph1\">`(`` right``)`</ph>","source":"The member function calls swap `(`` right``)`"},{"pos":[3839,3847],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Thread Safety in the C++ Standard Library<ept id=\"p1\">](../standard-library/thread-safety-in-the-cpp-standard-library.md)</ept><ph id=\"ph1\"> </ph>","pos":[3851,3961],"source":"[Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md) "},{"content":"<bpt id=\"p1\"> [</bpt>iostream Programming<ept id=\"p1\">](../standard-library/iostream-programming.md)</ept><ph id=\"ph1\"> </ph>","pos":[3964,4033],"source":" [iostream Programming](../standard-library/iostream-programming.md) "},{"content":"<bpt id=\"p1\"> [</bpt>iostreams Conventions<ept id=\"p1\">](../standard-library/iostreams-conventions.md)</ept>","pos":[4036,4106],"source":" [iostreams Conventions](../standard-library/iostreams-conventions.md)"}],"content":"---\ntitle: \"basic_iostream Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"istream/std::basic_iostream\"\n  - \"std.basic_iostream\"\n  - \"basic_iostream\"\n  - \"std::basic_iostream\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"basic_iostream class\"\nms.assetid: 294b680b-eb49-4066-8db2-6d52dac9d6e3\ncaps.latest.revision: 22\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# basic_iostream Class\nA stream class that can do both input and output.  \n  \n## Syntax  \n  \n```  \ntemplate <class Elem, class Tr = char_traits<Elem>>  \nclass basic_iostream : public basic_istream<Elem, Tr>,  \n    public basic_ostream<Elem, Tr>  \n{  \npublic:  \n    explicit basic_iostream(basic_streambuf<Elem, Tr>* strbuf);\n\n    virtual ~basic_iostream();\n\n};  \n```  \n  \n## Remarks  \n The template class describes an object that controls insertions, through its base class [basic_ostream](../standard-library/basic-ostream-class.md)< `Elem`, `Tr`>, and extractions, through its base class [basic_istream](../standard-library/basic-istream-class.md)< `Elem`, `Tr`>. The two objects share a common virtual base class [basic_ios](../standard-library/basic-ios-class.md)< `Elem`, `Tr`>. They also manage a common stream buffer, with elements of type `Elem`, whose character traits are determined by the class `Tr`. The constructor initializes its base classes through `basic_istream`( **strbuf**) and `basic_ostream`( **strbuf**).  \n  \n### Constructors  \n  \n|||  \n|-|-|  \n|[basic_iostream](#basic_iostream__basic_iostream)|Create a `basic_iostream` object.|  \n  \n### Member Functions  \n  \n|||  \n|-|-|  \n|[swap](#basic_iostream__swap)|Exchanges the contents of the provided `basic_iostream` object for the contents of this object.|  \n  \n### Operators  \n  \n|||  \n|-|-|  \n|[operator=](#basic_iostream__operator_eq)|Assigns the value of a specified `basic_iostream` object to this object. This is a move assignment involving an `rvalue` that does not leave a copy behind.|  \n  \n## Requirements  \n **Header:** \\<istream>  \n  \n **Namespace:** std  \n  \n##  <a name=\"basic_iostream__basic_iostream\"></a>  basic_iostream::basic_iostream  \n Create a `basic_iostream` object.  \n  \n```  \nexplicit basic_iostream(basic_streambuf<Elem, Tr>* strbuf);\n\nbasic_iostream(basic_iostream&& right);\n\nbasic_iostream();\n```  \n  \n### Parameters  \n ` strbuf`  \n An existing `basic_streambuf` object.  \n  \n ` right`  \n An existing `basic_iostream` object that is used to construct a new `basic_iostream`.  \n  \n### Remarks  \n The first constructor initializes the base objects by way of `basic_istream(`` strbuf``)` and `basic_ostream(`` strbuf``)`.  \n  \n The second constructor initializes the base objects by calling move `(`` right``)`.  \n  \n##  <a name=\"basic_iostream__operator_eq\"></a>  basic_iostream::operator=  \n Assign the value of a specified `basic_iostream` object to this object. This is a move assignment involving an `rvalue` that does not leave a copy behind.  \n  \n```  \nbasic_iostream& operator=(basic_iostream&& right);\n```  \n  \n### Parameters  \n ` right`  \n An `rvalue` reference to a `basic_iostream` object to assign from.  \n  \n### Remarks  \n The member operator calls swap `(`` right``)`.  \n  \n##  <a name=\"basic_iostream__swap\"></a>  basic_iostream::swap  \n Exchanges the contents of the provided `basic_iostream` object for the contents of this object.  \n  \n```  \nvoid swap(basic_iostream& right);\n```  \n  \n### Parameters  \n ` right`  \n The `basic_iostream` object to swap.  \n  \n### Remarks  \n The member function calls swap `(`` right``)`  \n  \n## See Also  \n [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)   \n [iostream Programming](../standard-library/iostream-programming.md)   \n [iostreams Conventions](../standard-library/iostreams-conventions.md)\n\n"}