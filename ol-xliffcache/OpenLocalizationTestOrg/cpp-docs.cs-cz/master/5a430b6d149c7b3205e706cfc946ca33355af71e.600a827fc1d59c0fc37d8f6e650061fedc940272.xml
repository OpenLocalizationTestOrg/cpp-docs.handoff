{"nodes":[{"pos":[12,47],"content":"_com_ptr_t::Detach | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_com_ptr_t::Detach | Microsoft Docs","pos":[0,35]}]},{"content":"_com_ptr_t::Detach","pos":[643,661]},{"content":"Microsoft Specific","pos":[664,682]},{"content":"Extracts and returns the encapsulated interface pointer.","pos":[691,747]},{"content":"Syntax","pos":[756,762]},{"content":"Remarks","pos":[825,832]},{"content":"Extracts and returns the encapsulated interface pointer, and then clears the encapsulated pointer storage to <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[836,954],"source":"Extracts and returns the encapsulated interface pointer, and then clears the encapsulated pointer storage to **NULL**."},{"content":"This removes the interface pointer from encapsulation.","pos":[955,1009]},{"content":"It is up to you to call <bpt id=\"p1\">**</bpt>Release<ept id=\"p1\">**</ept> on the returned interface pointer.","pos":[1010,1080],"source":" It is up to you to call **Release** on the returned interface pointer."},{"content":"END Microsoft Specific","pos":[1089,1111]},{"content":"See Also","pos":[1122,1130]},{"content":"_com_ptr_t Class","pos":[1135,1151]}],"content":"---\ntitle: \"_com_ptr_t::Detach | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"_com_ptr_t::Detach\"\n  - \"_com_ptr_t.Detach\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"Detach method\"\nms.assetid: 0652053e-af37-44e9-a278-2522212ebfed\ncaps.latest.revision: 6\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _com_ptr_t::Detach\n**Microsoft Specific**  \n  \n Extracts and returns the encapsulated interface pointer.  \n  \n## Syntax  \n  \n```  \n  \nInterface* Detach( ) throw( );  \n  \n```  \n  \n## Remarks  \n Extracts and returns the encapsulated interface pointer, and then clears the encapsulated pointer storage to **NULL**. This removes the interface pointer from encapsulation. It is up to you to call **Release** on the returned interface pointer.  \n  \n **END Microsoft Specific**  \n  \n## See Also  \n [_com_ptr_t Class](../cpp/com-ptr-t-class.md)"}