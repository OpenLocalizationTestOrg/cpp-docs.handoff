{"nodes":[{"pos":[12,46],"content":"regex_error Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"regex_error Class | Microsoft Docs","pos":[0,34]}]},{"content":"regex_error Class","pos":[665,682]},{"content":"Reports a bad basic_regex object.","pos":[683,716]},{"content":"Syntax","pos":[725,731]},{"content":"Remarks","pos":[935,942]},{"pos":[946,1065],"content":"The class describes an exception object thrown to report an error in the construction or use of a <ph id=\"ph1\">`basic_regex`</ph> object.","source":"The class describes an exception object thrown to report an error in the construction or use of a `basic_regex` object."},{"content":"Requirements","pos":[1074,1086]},{"pos":[1090,1110],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>regex&gt;","source":"**Header:** \\<regex>"},{"pos":[1117,1135],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"pos":[1179,1196],"content":"regex_error::code"},{"content":"Returns the error code.","pos":[1200,1223]},{"content":"Remarks","pos":[1290,1297]},{"content":"The member function returns the value that was passed to the object's constructor.","pos":[1301,1383]},{"content":"Example","pos":[1393,1400]},{"pos":[2177,2201],"content":"regex_error::regex_error"},{"content":"Constructs the object.","pos":[2205,2227]},{"content":"Parameters","pos":[2300,2310]},{"content":"The error code.","pos":[2325,2340]},{"content":"Remarks","pos":[2350,2357]},{"pos":[2361,2427],"content":"The constructor constructs an object that holds the value <ph id=\"ph1\">`error`</ph>.","source":"The constructor constructs an object that holds the value `error`."},{"content":"Example","pos":[2437,2444]},{"content":"See Also","pos":[3184,3192]},{"content":"regex&gt;","pos":[3199,3205],"source":"regex>"},{"content":"regex_error","pos":[3242,3253]}],"content":"---\ntitle: \"regex_error Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std::tr1::regex_error\"\n  - \"regex_error\"\n  - \"std.tr1.regex_error\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"regex_error class [TR1]\"\nms.assetid: 3333a1a3-ca6f-4612-84b2-1b4c7e3db5a4\ncaps.latest.revision: 19\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# regex_error Class\nReports a bad basic_regex object.  \n  \n## Syntax  \n  \n```  \nclass regex_error  \n : public std::runtime_error {  \npublic:  \n    explicit regex_error(regex_constants::error_code error);\n\n    regex_constants::error_code code() const;\n\n \n };  \n```  \n  \n## Remarks  \n The class describes an exception object thrown to report an error in the construction or use of a `basic_regex` object.  \n  \n## Requirements  \n **Header:** \\<regex>  \n  \n **Namespace:** std  \n  \n##  <a name=\"regex_error__code\"></a>  regex_error::code  \n Returns the error code.  \n  \n```  \nregex_constants::error_code code() const;\n```  \n  \n### Remarks  \n The member function returns the value that was passed to the object's constructor.  \n  \n### Example  \n  \n```cpp  \n// std_tr1__regex__regex_error_code.cpp   \n// compile with: /EHsc   \n#include <regex>   \n#include <iostream>   \n  \nint main()   \n    {   \n    std::regex_error paren(std::regex_constants::error_paren);   \n  \n    try   \n        {   \n        std::regex rx(\"(a\");   \n        }   \n    catch (const std::regex_error& rerr)   \n        {   \n        std::cout << \"regex error: \"   \n            << (rerr.code() == paren.code()   \n                 \"unbalanced parentheses\" : \"\")   \n            << std::endl;   \n        }   \n    catch (...)   \n        {   \n        std::cout << \"unknown exception\" << std::endl;   \n        }   \n  \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \nregex error: unbalanced parentheses  \n```  \n  \n##  <a name=\"regex_error__regex_error\"></a>  regex_error::regex_error  \n Constructs the object.  \n  \n```  \nregex_error(regex_constants::error_code error);\n```  \n  \n### Parameters  \n `error`  \n The error code.  \n  \n### Remarks  \n The constructor constructs an object that holds the value `error`.  \n  \n### Example  \n  \n```cpp  \n// std_tr1__regex__regex_error_construct.cpp   \n// compile with: /EHsc   \n#include <regex>   \n#include <iostream>   \n  \nint main()   \n    {   \n    std::regex_error paren(std::regex_constants::error_paren);   \n  \n    try   \n        {   \n        std::regex rx(\"(a\");   \n        }   \n    catch (const std::regex_error& rerr)   \n        {   \n        std::cout << \"regex error: \"   \n            << (rerr.code() == paren.code()   \n                 \"unbalanced parentheses\" : \"\")   \n            << std::endl;   \n        }   \n    catch (...)   \n        {   \n        std::cout << \"unknown exception\" << std::endl;   \n        }   \n  \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \nregex error: unbalanced parentheses  \n```  \n  \n## See Also  \n [\\<regex>](../standard-library/regex.md)   \n [regex_error](../standard-library/regex-error-class.md)\n"}