{"nodes":[{"pos":[12,49],"content":"overflow_error Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"overflow_error Class | Microsoft Docs","pos":[0,37]}]},{"pos":[701,721],"content":"overflow_error Class","linkify":"overflow_error Class","nodes":[{"content":"overflow_error Class","pos":[0,20]}]},{"content":"The class serves as the base class for all exceptions thrown to report an arithmetic overflow.","pos":[722,816]},{"pos":[825,831],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1022,1029],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1033,1198],"content":"The value returned by <bpt id=\"p1\">[</bpt>what<ept id=\"p1\">](../standard-library/exception-class.md)</ept> is a copy of <bpt id=\"p2\">**</bpt>message<ept id=\"p2\">**</ept><ph id=\"ph1\">`.`</ph><bpt id=\"p3\">[</bpt>data<ept id=\"p3\">](../standard-library/basic-string-class.md#basic_string__data)</ept>.","source":"The value returned by [what](../standard-library/exception-class.md) is a copy of **message**`.`[data](../standard-library/basic-string-class.md#basic_string__data)."},{"pos":[1207,1214],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1761,1773],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1777,1801],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>stdexcept&gt;","source":"**Header:** \\<stdexcept>"},{"pos":[1808,1826],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"pos":[1835,1843],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>runtime_error Class<ept id=\"p1\">](../standard-library/runtime-error-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[1847,1913],"source":"[runtime_error Class](../standard-library/runtime-error-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Thread Safety in the C++ Standard Library<ept id=\"p1\">](../standard-library/thread-safety-in-the-cpp-standard-library.md)</ept>","pos":[1916,2026],"source":" [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)"}],"content":"---\ntitle: \"overflow_error Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std::overflow_error\"\n  - \"std.overflow_error\"\n  - \"overflow_error\"\n  - \"stdexcept/std::overflow_error\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"overflow_error class\"\nms.assetid: bae7128d-e36b-4a45-84f1-2f89da441d20\ncaps.latest.revision: 20\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# overflow_error Class\nThe class serves as the base class for all exceptions thrown to report an arithmetic overflow.  \n  \n## Syntax  \n  \n```  \nclass overflow_error : public runtime_error {  \npublic:  \n    explicit overflow_error(const string& message);\n\n    explicit overflow_error(const char *message);\n\n};  \n```  \n  \n## Remarks  \n The value returned by [what](../standard-library/exception-class.md) is a copy of **message**`.`[data](../standard-library/basic-string-class.md#basic_string__data).  \n  \n## Example  \n  \n```cpp  \n// overflow_error.cpp  \n// compile with: /EHsc /GR  \n#include <bitset>  \n#include <iostream>  \n  \nusing namespace std;  \n  \nint main( )  \n{  \n   try   \n   {  \n      bitset< 33 > bitset;  \n      bitset[32] = 1;  \n      bitset[0] = 1;  \n      unsigned long x = bitset.to_ulong( );  \n   }  \n   catch ( exception &e )   \n   {  \n      cerr << \"Caught \" << e.what( ) << endl;  \n      cerr << \"Type \" << typeid( e ).name( ) << endl;  \n   };  \n}  \n\\* Output:   \nCaught bitset<N> overflow  \nType class std::overflow_error  \n*\\  \n```  \n  \n## Requirements  \n **Header:** \\<stdexcept>  \n  \n **Namespace:** std  \n  \n## See Also  \n [runtime_error Class](../standard-library/runtime-error-class.md)   \n [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)\n\n"}