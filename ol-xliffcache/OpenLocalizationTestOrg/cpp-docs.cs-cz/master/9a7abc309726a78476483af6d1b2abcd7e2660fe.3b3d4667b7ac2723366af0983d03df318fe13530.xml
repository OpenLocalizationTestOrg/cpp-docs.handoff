{"nodes":[{"pos":[12,52],"content":"CAutoHideDockSite Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CAutoHideDockSite Class | Microsoft Docs","pos":[0,40]}]},{"content":"CAutoHideDockSite Class","pos":[773,796]},{"pos":[797,925],"content":"The <ph id=\"ph1\">`CAutoHideDockSite`</ph> extends the <bpt id=\"p1\">[</bpt>CDockSite Class<ept id=\"p1\">](../../mfc/reference/cdocksite-class.md)</ept> to implement auto-hide dock panes.","source":"The `CAutoHideDockSite` extends the [CDockSite Class](../../mfc/reference/cdocksite-class.md) to implement auto-hide dock panes."},{"content":"Syntax","pos":[934,940]},{"content":"Members","pos":[1009,1016]},{"content":"Public Constructors","pos":[1026,1045]},{"content":"Name","pos":[1066,1070]},{"content":"Description","pos":[1071,1082]},{"pos":[1126,1166],"content":"Constructs a <ph id=\"ph1\">`CAutoHideDockSite`</ph> object.","source":"Constructs a `CAutoHideDockSite` object."},{"content":"Destructor.","pos":[1211,1222]},{"content":"Public Methods","pos":[1233,1247]},{"content":"Name","pos":[1268,1272]},{"content":"Description","pos":[1273,1284]},{"pos":[1330,1398],"content":"Indicates whether the <ph id=\"ph1\">`CAutoHideDockSite`</ph> is shown on the pane menu.","source":"Indicates whether the `CAutoHideDockSite` is shown on the pane menu."},{"content":"CAutoHideDockSite::CanAcceptPane","pos":[1404,1436]},{"pos":[1473,1601],"content":"Determines whether a base pane object is derived from the <bpt id=\"p1\">[</bpt>CMFCAutoHideBar Class<ept id=\"p1\">](../../mfc/reference/cmfcautohidebar-class.md)</ept>.","source":"Determines whether a base pane object is derived from the [CMFCAutoHideBar Class](../../mfc/reference/cmfcautohidebar-class.md)."},{"content":"CAutoHideDockSite::DockPane","pos":[1607,1634]},{"pos":[1666,1714],"content":"Docks a pane to this <ph id=\"ph1\">`CAuotHideDockSite`</ph> object.","source":"Docks a pane to this `CAuotHideDockSite` object."},{"content":"CAutoHideDockSite::GetAlignRect","pos":[1720,1751]},{"content":"Retrieves the size of the dock site in screen coordinates.","pos":[1787,1845]},{"content":"CAutoHideDockSite::RepositionPanes","pos":[1851,1885]},{"pos":[1924,2011],"content":"Redraws the pane on the <ph id=\"ph1\">`CAutoHideDockSite`</ph> with the global margins and button spacing.","source":"Redraws the pane on the `CAutoHideDockSite` with the global margins and button spacing."},{"content":"CAutoHideDockSite::SetOffsetLeft","pos":[2017,2049]},{"content":"Sets the margin on the left side of the docking bar.","pos":[2086,2138]},{"content":"CAutoHideDockSite::SetOffsetRight","pos":[2144,2177]},{"content":"Sets the margin on the right side of the docking bar.","pos":[2215,2268]},{"content":"CAutoHideDockSite::UnSetAutoHideMode","pos":[2274,2310]},{"pos":[2351,2514],"content":"Calls <bpt id=\"p1\">[</bpt>CMFCAutoHideBar::UnSetAutoHideMode<ept id=\"p1\">](../../mfc/reference/cmfcautohidebar-class.md#cmfcautohidebar__unsetautohidemode)</ept> for objects on the <ph id=\"ph1\">`CAutoHideDockSite`</ph>.","source":"Calls [CMFCAutoHideBar::UnSetAutoHideMode](../../mfc/reference/cmfcautohidebar-class.md#cmfcautohidebar__unsetautohidemode) for objects on the `CAutoHideDockSite`."},{"content":"Data Members","pos":[2525,2537]},{"content":"Name","pos":[2558,2562]},{"content":"Description","pos":[2563,2574]},{"content":"CAutoHideDockSite::m_nExtraSpace","pos":[2580,2612]},{"content":"Defines the size of the space between the toolbars and the edge of the docking bar.","pos":[2649,2732]},{"content":"This space is measured from either the left edge or the top edge, depending on the alignment for the dock space.","pos":[2733,2845]},{"content":"Remarks","pos":[2855,2862]},{"content":"When you call <bpt id=\"p1\">[</bpt>CFrameWndEx::EnableAutoHidePanes<ept id=\"p1\">](../../mfc/reference/cframewndex-class.md#cframewndex__enableautohidepanes)</ept>, the framework automatically creates a <ph id=\"ph1\">`CAutoHideDockSite`</ph> object.","pos":[2866,3056],"source":"When you call [CFrameWndEx::EnableAutoHidePanes](../../mfc/reference/cframewndex-class.md#cframewndex__enableautohidepanes), the framework automatically creates a `CAutoHideDockSite` object."},{"content":"In most cases, you should not have to instantiate or use this class directly.","pos":[3057,3134]},{"pos":[3141,3308],"content":"The docking bar is the gap between the left side of the dock pane and the left side of the <bpt id=\"p1\">[</bpt>CMFCAutoHideButton Class<ept id=\"p1\">](../../mfc/reference/cmfcautohidebutton-class.md)</ept>.","source":"The docking bar is the gap between the left side of the dock pane and the left side of the [CMFCAutoHideButton Class](../../mfc/reference/cmfcautohidebutton-class.md)."},{"content":"Inheritance Hierarchy","pos":[3317,3338]},{"content":"CObject","pos":[3343,3350]},{"content":"CCmdTarget","pos":[3397,3407]},{"content":"CWnd","pos":[3457,3461]},{"content":"CBasePane","pos":[3505,3514]},{"content":"CDockSite","pos":[3563,3572]},{"content":"Example","pos":[3622,3629]},{"pos":[3633,3807],"content":"The following example demonstrates how to retrieve a <ph id=\"ph1\">`CAutoHideDockSite`</ph> object from a <ph id=\"ph2\">`CMFCAutoHideBar`</ph> object, and how to set the left and right margins of the docking bar.","source":"The following example demonstrates how to retrieve a `CAutoHideDockSite` object from a `CMFCAutoHideBar` object, and how to set the left and right margins of the docking bar."},{"pos":[3825,3845],"content":"NVC_MFC_RibbonApp#29"},{"content":"Requirements","pos":[3923,3935]},{"pos":[3939,3972],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxautohidedocksite.h","source":"**Header:** afxautohidedocksite.h"},{"pos":[4031,4063],"content":"CAutoHideDockSite::CanAcceptPane"},{"pos":[4067,4208],"content":"Determines whether a base pane is a <bpt id=\"p1\">[</bpt>CMFCAutoHideBar<ept id=\"p1\">](../../mfc/reference/cmfcautohidebar-class.md)</ept> object or derived from <ph id=\"ph1\">`CMFCAutoHideBar`</ph>.","source":"Determines whether a base pane is a [CMFCAutoHideBar](../../mfc/reference/cmfcautohidebar-class.md) object or derived from `CMFCAutoHideBar`."},{"content":"Parameters","pos":[4293,4303]},{"content":"Parameter","pos":[4324,4333]},{"content":"Description","pos":[4334,4345]},{"pos":[4350,4354],"content":"[in]"},{"content":"The base pane that the framework tests.","pos":[4362,4401]},{"content":"Return Value","pos":[4412,4424]},{"pos":[4435,4498],"content":"if <ph id=\"ph1\">`pBar`</ph> is derived from <ph id=\"ph2\">`CMFCAutoHideBar`</ph>; <ph id=\"ph3\">`FALSE`</ph> otherwise.","source":" if `pBar` is derived from `CMFCAutoHideBar`; `FALSE` otherwise."},{"content":"Remarks","pos":[4508,4515]},{"pos":[4519,4661],"content":"If a base pane object is derived from <ph id=\"ph1\">`CMFCAutoHideBar`</ph>, it can contain a <bpt id=\"p1\">[</bpt>CAutoHideDockSite<ept id=\"p1\">](../../mfc/reference/cautohidedocksite-class.md)</ept>.","source":"If a base pane object is derived from `CMFCAutoHideBar`, it can contain a [CAutoHideDockSite](../../mfc/reference/cautohidedocksite-class.md)."},{"pos":[4715,4742],"content":"CAutoHideDockSite::DockPane"},{"pos":[4746,4842],"content":"Docks a pane to this <bpt id=\"p1\">[</bpt>CAutoHideDockSite<ept id=\"p1\">](../../mfc/reference/cautohidedocksite-class.md)</ept> object.","source":"Docks a pane to this [CAutoHideDockSite](../../mfc/reference/cautohidedocksite-class.md) object."},{"content":"Parameters","pos":[4970,4980]},{"content":"Parameter","pos":[5001,5010]},{"content":"Description","pos":[5011,5022]},{"pos":[5027,5031],"content":"[in]"},{"content":"The pane that the framework docks.","pos":[5039,5073]},{"pos":[5078,5082],"content":"[in]"},{"content":"Docking options for the pane.","pos":[5096,5125]},{"pos":[5130,5134],"content":"[in]"},{"content":"A rectangle that specifies the boundaries for the docked pane.","pos":[5144,5206]},{"content":"Remarks","pos":[5217,5224]},{"pos":[5228,5329],"content":"The default implementation does not use the parameter <ph id=\"ph1\">`dockMethod`</ph>, which is provided for future use.","source":"The default implementation does not use the parameter `dockMethod`, which is provided for future use."},{"content":"If <ph id=\"ph1\">`lpRect`</ph> is <ph id=\"ph2\">`NULL`</ph>, the framework puts the pane in the default location on the dock site.","pos":[5336,5428],"source":"If `lpRect` is `NULL`, the framework puts the pane in the default location on the dock site."},{"content":"If the dock site is horizontal, the default location is at the far left of the dock site.","pos":[5429,5518]},{"content":"Otherwise, the default location is at the top of the dock site.","pos":[5519,5582]},{"pos":[5640,5671],"content":"CAutoHideDockSite::GetAlignRect"},{"content":"Retrieves the size of the dock site in screen coordinates.","pos":[5675,5733]},{"content":"Parameters","pos":[5799,5809]},{"content":"Parameter","pos":[5830,5839]},{"content":"Description","pos":[5840,5851]},{"pos":[5856,5860],"content":"[in]"},{"content":"A reference to a rectangle.","pos":[5868,5895]},{"content":"The method stores the size of the dock site in this rectangle.","pos":[5896,5958]},{"content":"Remarks","pos":[5969,5976]},{"content":"The rectangle is adjusted for the offset margins so that they are not included.","pos":[5980,6059]},{"pos":[6118,6150],"content":"CAutoHideDockSite::m_nExtraSpace"},{"pos":[6154,6361],"content":"The size of the space between the edges of the <bpt id=\"p1\">[</bpt>CAutoHideDockSite Class<ept id=\"p1\">](../../mfc/reference/cautohidedocksite-class.md)</ept> and the <bpt id=\"p2\">[</bpt>CMFCAutoHideBar Class<ept id=\"p2\">](../../mfc/reference/cmfcautohidebar-class.md)</ept> objects.","source":"The size of the space between the edges of the [CAutoHideDockSite Class](../../mfc/reference/cautohidedocksite-class.md) and the [CMFCAutoHideBar Class](../../mfc/reference/cmfcautohidebar-class.md) objects."},{"content":"Remarks","pos":[6414,6421]},{"content":"When a <ph id=\"ph1\">`CMFCAutoHideBar`</ph> is docked at a <ph id=\"ph2\">`CAutoHideDockSite`</ph>, it should not occupy the whole dock site.","pos":[6425,6527],"source":"When a `CMFCAutoHideBar` is docked at a `CAutoHideDockSite`, it should not occupy the whole dock site."},{"content":"This global variable controls the extra space between the left or top border of the <ph id=\"ph1\">`CMFCAutoHideBar`</ph> and the corresponding <ph id=\"ph2\">`CAutoHideDockSite`</ph> edge.","pos":[6528,6677],"source":" This global variable controls the extra space between the left or top border of the `CMFCAutoHideBar` and the corresponding `CAutoHideDockSite` edge."},{"content":"Whether the top or left edge is used depends on the current alignment.","pos":[6678,6748]},{"pos":[6807,6839],"content":"CAutoHideDockSite::SetOffsetLeft"},{"content":"Sets the margin on the left side of the docking bar.","pos":[6843,6895]},{"content":"Parameters","pos":[6953,6963]},{"content":"[in]","pos":[6967,6971]},{"content":"The new offset.","pos":[6985,7000]},{"content":"Remarks","pos":[7010,7017]},{"content":"<bpt id=\"p1\">[</bpt>CMFCAutoHideBar<ept id=\"p1\">](../../mfc/reference/cmfcautohidebar-class.md)</ept> objects are positioned statically on the <bpt id=\"p2\">[</bpt>CAutoHideDockSite<ept id=\"p2\">](../../mfc/reference/cautohidedocksite-class.md)</ept> object.","pos":[7021,7201],"source":"[CMFCAutoHideBar](../../mfc/reference/cmfcautohidebar-class.md) objects are positioned statically on the [CAutoHideDockSite](../../mfc/reference/cautohidedocksite-class.md) object."},{"content":"This means that the user cannot manually change the location of <ph id=\"ph1\">`CMFCAutoHideBar`</ph> objects.","pos":[7202,7292],"source":" This means that the user cannot manually change the location of `CMFCAutoHideBar` objects."},{"content":"The <ph id=\"ph1\">`SetOffsetLeft`</ph> method controls the spacing between the left side of the left-most <ph id=\"ph2\">`CMFCAutoHideBar`</ph> and the left side of the <ph id=\"ph3\">`CAutoHideDockSite`</ph>.","pos":[7293,7443],"source":" The `SetOffsetLeft` method controls the spacing between the left side of the left-most `CMFCAutoHideBar` and the left side of the `CAutoHideDockSite`."},{"pos":[7503,7536],"content":"CAutoHideDockSite::SetOffsetRight"},{"content":"Sets the margin on the right side of the docking bar.","pos":[7540,7593]},{"content":"Parameters","pos":[7652,7662]},{"content":"[in]","pos":[7666,7670]},{"content":"The new offset.","pos":[7684,7699]},{"content":"Remarks","pos":[7709,7716]},{"content":"<bpt id=\"p1\">[</bpt>CMFCAutoHideBar<ept id=\"p1\">](../../mfc/reference/cmfcautohidebar-class.md)</ept> objects are positioned statically on the <bpt id=\"p2\">[</bpt>CAutoHideDockSite<ept id=\"p2\">](../../mfc/reference/cautohidedocksite-class.md)</ept> object.","pos":[7720,7900],"source":"[CMFCAutoHideBar](../../mfc/reference/cmfcautohidebar-class.md) objects are positioned statically on the [CAutoHideDockSite](../../mfc/reference/cautohidedocksite-class.md) object."},{"content":"This means that the user cannot manually change the location of the <ph id=\"ph1\">`CMFCAutoHideBar`</ph> objects.","pos":[7901,7995],"source":" This means that the user cannot manually change the location of the `CMFCAutoHideBar` objects."},{"content":"The <ph id=\"ph1\">`SetOffsetRight`</ph> method controls the spacing between the right side of the right-most <ph id=\"ph2\">`CMFCAutoHideBar`</ph> and the right side of the <ph id=\"ph3\">`CAutoHideDockSite`</ph>.","pos":[7996,8150],"source":" The `SetOffsetRight` method controls the spacing between the right side of the right-most `CMFCAutoHideBar` and the right side of the `CAutoHideDockSite`."},{"pos":[8211,8245],"content":"CAutoHideDockSite::RepositionPanes"},{"pos":[8249,8342],"content":"Redraws the panes on the <bpt id=\"p1\">[</bpt>CAutoHideDockSite<ept id=\"p1\">](../../mfc/reference/cautohidedocksite-class.md)</ept>.","source":"Redraws the panes on the [CAutoHideDockSite](../../mfc/reference/cautohidedocksite-class.md)."},{"content":"Parameters","pos":[8423,8433]},{"content":"Parameter","pos":[8454,8463]},{"content":"Description","pos":[8464,8475]},{"pos":[8480,8484],"content":"[in]"},{"content":"A reserved value.","pos":[8505,8522]},{"content":"Remarks","pos":[8533,8540]},{"content":"The default implementation does not use <ph id=\"ph1\">`rectNewClientArea`</ph>.","pos":[8544,8604],"source":"The default implementation does not use `rectNewClientArea`."},{"content":"It redraws the panes with the global toolbar margins and button spacing.","pos":[8605,8677]},{"pos":[8740,8776],"content":"CAutoHideDockSite::UnSetAutoHideMode"},{"pos":[8780,8933],"content":"Calls <bpt id=\"p1\">[</bpt>CMFCAutoHideBar::UnSetAutoHideMode<ept id=\"p1\">](../../mfc/reference/cmfcautohidebar-class.md#cmfcautohidebar__unsetautohidemode)</ept> for objects on the dock site.","source":"Calls [CMFCAutoHideBar::UnSetAutoHideMode](../../mfc/reference/cmfcautohidebar-class.md#cmfcautohidebar__unsetautohidemode) for objects on the dock site."},{"content":"Parameters","pos":[9017,9027]},{"content":"Parameter","pos":[9048,9057]},{"content":"Description","pos":[9058,9069]},{"pos":[9074,9078],"content":"[in]"},{"pos":[9098,9272],"content":"A pointer to a <bpt id=\"p1\">[</bpt>CMFCAutoHideBar<ept id=\"p1\">](../../mfc/reference/cmfcautohidebar-class.md)</ept> object pane located on the <bpt id=\"p2\">[</bpt>CAutoHideDockSite<ept id=\"p2\">](../../mfc/reference/cautohidedocksite-class.md)</ept>.","source":"A pointer to a [CMFCAutoHideBar](../../mfc/reference/cmfcautohidebar-class.md) object pane located on the [CAutoHideDockSite](../../mfc/reference/cautohidedocksite-class.md)."},{"content":"Remarks","pos":[9283,9290]},{"content":"This method searches for the row that contains <ph id=\"ph1\">`pAutoHideToolbar`</ph>.","pos":[9294,9360],"source":"This method searches for the row that contains `pAutoHideToolbar`."},{"content":"It calls <ph id=\"ph1\">`CMFCAutoHideBar.UnSetAutoHideMode`</ph> for all the <ph id=\"ph2\">`CMFCAutoHideBar`</ph> objects on that row.","pos":[9361,9456],"source":" It calls `CMFCAutoHideBar.UnSetAutoHideMode` for all the `CMFCAutoHideBar` objects on that row."},{"content":"If <ph id=\"ph1\">`pAutoHideToolbar`</ph> is not found or it is <ph id=\"ph2\">`NULL`</ph>, this method calls <ph id=\"ph3\">`CMFCAutoHideBar.UnSetAutoHideMode`</ph> for all the <ph id=\"ph4\">`CMFCAutoHideBar`</ph> objects on the <ph id=\"ph5\">`CAutoHideDockSite`</ph>.","pos":[9457,9628],"source":" If `pAutoHideToolbar` is not found or it is `NULL`, this method calls `CMFCAutoHideBar.UnSetAutoHideMode` for all the `CMFCAutoHideBar` objects on the `CAutoHideDockSite`."},{"content":"See Also","pos":[9637,9645]},{"content":"Hierarchy Chart","pos":[9650,9665]},{"content":"Classes","pos":[9702,9709]},{"content":"CDockSite Class","pos":[9752,9767]}],"content":"---\ntitle: \"CAutoHideDockSite Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CAutoHideDockSite\"\n  - \"AllowShowOnPaneMenu\"\n  - \"CAutoHideDockSite::AllowShowOnPaneMenu\"\n  - \"CAutoHideDockSite.AllowShowOnPaneMenu\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"AllowShowOnPaneMenu method\"\n  - \"CAutoHideDockSite class\"\nms.assetid: 2a0f6bec-c369-4ab7-977d-564e7946ebad\ncaps.latest.revision: 32\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CAutoHideDockSite Class\nThe `CAutoHideDockSite` extends the [CDockSite Class](../../mfc/reference/cdocksite-class.md) to implement auto-hide dock panes.  \n  \n## Syntax  \n  \n```  \nclass CAutoHideDockSite : public CDockSite  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|||  \n|-|-|  \n|Name|Description|  \n|`CAutoHideDockSite::CAutoHideDockSite`|Constructs a `CAutoHideDockSite` object.|  \n|`CAutoHideDockSite::~CAutoHideDockSite`|Destructor.|  \n  \n### Public Methods  \n  \n|||  \n|-|-|  \n|Name|Description|  \n|`CAutoHideDockSite::AllowShowOnPaneMenu`|Indicates whether the `CAutoHideDockSite` is shown on the pane menu.|  \n|[CAutoHideDockSite::CanAcceptPane](#cautohidedocksite__canacceptpane)|Determines whether a base pane object is derived from the [CMFCAutoHideBar Class](../../mfc/reference/cmfcautohidebar-class.md).|  \n|[CAutoHideDockSite::DockPane](#cautohidedocksite__dockpane)|Docks a pane to this `CAuotHideDockSite` object.|  \n|[CAutoHideDockSite::GetAlignRect](#cautohidedocksite__getalignrect)|Retrieves the size of the dock site in screen coordinates.|  \n|[CAutoHideDockSite::RepositionPanes](#cautohidedocksite__repositionpanes)|Redraws the pane on the `CAutoHideDockSite` with the global margins and button spacing.|  \n|[CAutoHideDockSite::SetOffsetLeft](#cautohidedocksite__setoffsetleft)|Sets the margin on the left side of the docking bar.|  \n|[CAutoHideDockSite::SetOffsetRight](#cautohidedocksite__setoffsetright)|Sets the margin on the right side of the docking bar.|  \n|[CAutoHideDockSite::UnSetAutoHideMode](#cautohidedocksite__unsetautohidemode)|Calls [CMFCAutoHideBar::UnSetAutoHideMode](../../mfc/reference/cmfcautohidebar-class.md#cmfcautohidebar__unsetautohidemode) for objects on the `CAutoHideDockSite`.|  \n  \n### Data Members  \n  \n|||  \n|-|-|  \n|Name|Description|  \n|[CAutoHideDockSite::m_nExtraSpace](#cautohidedocksite__m_nextraspace)|Defines the size of the space between the toolbars and the edge of the docking bar. This space is measured from either the left edge or the top edge, depending on the alignment for the dock space.|  \n  \n## Remarks  \n When you call [CFrameWndEx::EnableAutoHidePanes](../../mfc/reference/cframewndex-class.md#cframewndex__enableautohidepanes), the framework automatically creates a `CAutoHideDockSite` object. In most cases, you should not have to instantiate or use this class directly.  \n  \n The docking bar is the gap between the left side of the dock pane and the left side of the [CMFCAutoHideButton Class](../../mfc/reference/cmfcautohidebutton-class.md).  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n [CBasePane](../../mfc/reference/cbasepane-class.md)  \n  \n [CDockSite](../../mfc/reference/cdocksite-class.md)  \n  \n## Example  \n The following example demonstrates how to retrieve a `CAutoHideDockSite` object from a `CMFCAutoHideBar` object, and how to set the left and right margins of the docking bar.  \n  \n [!code-cpp[NVC_MFC_RibbonApp#29](../../mfc/reference/codesnippet/cpp/cautohidedocksite-class_1.cpp)]  \n  \n## Requirements  \n **Header:** afxautohidedocksite.h  \n  \n##  <a name=\"cautohidedocksite__canacceptpane\"></a>  CAutoHideDockSite::CanAcceptPane  \n Determines whether a base pane is a [CMFCAutoHideBar](../../mfc/reference/cmfcautohidebar-class.md) object or derived from `CMFCAutoHideBar`.  \n  \n```  \nvirtual BOOL CanAcceptPane(const CBasePane* pBar) const;\n\n \n```  \n  \n### Parameters  \n  \n|||  \n|-|-|  \n|Parameter|Description|  \n|[in] `pBar`|The base pane that the framework tests.|  \n  \n### Return Value  \n `TRUE` if `pBar` is derived from `CMFCAutoHideBar`; `FALSE` otherwise.  \n  \n### Remarks  \n If a base pane object is derived from `CMFCAutoHideBar`, it can contain a [CAutoHideDockSite](../../mfc/reference/cautohidedocksite-class.md).  \n  \n##  <a name=\"cautohidedocksite__dockpane\"></a>  CAutoHideDockSite::DockPane  \n Docks a pane to this [CAutoHideDockSite](../../mfc/reference/cautohidedocksite-class.md) object.  \n  \n```  \nvirtual void DockPane(\n    CPane* pWnd,  \n    AFX_DOCK_METHOD dockMethod,  \n    LPRECT lpRect = NULL);\n```  \n  \n### Parameters  \n  \n|||  \n|-|-|  \n|Parameter|Description|  \n|[in] `pWnd`|The pane that the framework docks.|  \n|[in] `dockMethod`|Docking options for the pane.|  \n|[in] `lpRect`|A rectangle that specifies the boundaries for the docked pane.|  \n  \n### Remarks  \n The default implementation does not use the parameter `dockMethod`, which is provided for future use.  \n  \n If `lpRect` is `NULL`, the framework puts the pane in the default location on the dock site. If the dock site is horizontal, the default location is at the far left of the dock site. Otherwise, the default location is at the top of the dock site.  \n  \n##  <a name=\"cautohidedocksite__getalignrect\"></a>  CAutoHideDockSite::GetAlignRect  \n Retrieves the size of the dock site in screen coordinates.  \n  \n```  \nvoid GetAlignRect(CRect& rect) const;\n\n \n```  \n  \n### Parameters  \n  \n|||  \n|-|-|  \n|Parameter|Description|  \n|[in] `rect`|A reference to a rectangle. The method stores the size of the dock site in this rectangle.|  \n  \n### Remarks  \n The rectangle is adjusted for the offset margins so that they are not included.  \n  \n##  <a name=\"cautohidedocksite__m_nextraspace\"></a>  CAutoHideDockSite::m_nExtraSpace  \n The size of the space between the edges of the [CAutoHideDockSite Class](../../mfc/reference/cautohidedocksite-class.md) and the [CMFCAutoHideBar Class](../../mfc/reference/cmfcautohidebar-class.md) objects.  \n  \n```  \nstatic int m_nExtraSpace;  \n```  \n  \n### Remarks  \n When a `CMFCAutoHideBar` is docked at a `CAutoHideDockSite`, it should not occupy the whole dock site. This global variable controls the extra space between the left or top border of the `CMFCAutoHideBar` and the corresponding `CAutoHideDockSite` edge. Whether the top or left edge is used depends on the current alignment.  \n  \n##  <a name=\"cautohidedocksite__setoffsetleft\"></a>  CAutoHideDockSite::SetOffsetLeft  \n Sets the margin on the left side of the docking bar.  \n  \n```  \nvoid SetOffsetLeft(int nOffset);\n```  \n  \n### Parameters  \n [in] `nOffset`  \n The new offset.  \n  \n### Remarks  \n [CMFCAutoHideBar](../../mfc/reference/cmfcautohidebar-class.md) objects are positioned statically on the [CAutoHideDockSite](../../mfc/reference/cautohidedocksite-class.md) object. This means that the user cannot manually change the location of `CMFCAutoHideBar` objects. The `SetOffsetLeft` method controls the spacing between the left side of the left-most `CMFCAutoHideBar` and the left side of the `CAutoHideDockSite`.  \n  \n##  <a name=\"cautohidedocksite__setoffsetright\"></a>  CAutoHideDockSite::SetOffsetRight  \n Sets the margin on the right side of the docking bar.  \n  \n```  \nvoid SetOffsetRight(int nOffset);\n```  \n  \n### Parameters  \n [in] `nOffset`  \n The new offset.  \n  \n### Remarks  \n [CMFCAutoHideBar](../../mfc/reference/cmfcautohidebar-class.md) objects are positioned statically on the [CAutoHideDockSite](../../mfc/reference/cautohidedocksite-class.md) object. This means that the user cannot manually change the location of the `CMFCAutoHideBar` objects. The `SetOffsetRight` method controls the spacing between the right side of the right-most `CMFCAutoHideBar` and the right side of the `CAutoHideDockSite`.  \n  \n##  <a name=\"cautohidedocksite__repositionpanes\"></a>  CAutoHideDockSite::RepositionPanes  \n Redraws the panes on the [CAutoHideDockSite](../../mfc/reference/cautohidedocksite-class.md).  \n  \n```  \nvirtual void RepositionPanes(CRect& rectNewClientArea);\n```  \n  \n### Parameters  \n  \n|||  \n|-|-|  \n|Parameter|Description|  \n|[in] `rectNewClientArea`|A reserved value.|  \n  \n### Remarks  \n The default implementation does not use `rectNewClientArea`. It redraws the panes with the global toolbar margins and button spacing.  \n  \n##  <a name=\"cautohidedocksite__unsetautohidemode\"></a>  CAutoHideDockSite::UnSetAutoHideMode  \n Calls [CMFCAutoHideBar::UnSetAutoHideMode](../../mfc/reference/cmfcautohidebar-class.md#cmfcautohidebar__unsetautohidemode) for objects on the dock site.  \n  \n```  \nvoid UnSetAutoHideMode(CMFCAutoHideBar* pAutoHideToolbar);\n```  \n  \n### Parameters  \n  \n|||  \n|-|-|  \n|Parameter|Description|  \n|[in] `pAutoHideToolbar`|A pointer to a [CMFCAutoHideBar](../../mfc/reference/cmfcautohidebar-class.md) object pane located on the [CAutoHideDockSite](../../mfc/reference/cautohidedocksite-class.md).|  \n  \n### Remarks  \n This method searches for the row that contains `pAutoHideToolbar`. It calls `CMFCAutoHideBar.UnSetAutoHideMode` for all the `CMFCAutoHideBar` objects on that row. If `pAutoHideToolbar` is not found or it is `NULL`, this method calls `CMFCAutoHideBar.UnSetAutoHideMode` for all the `CMFCAutoHideBar` objects on the `CAutoHideDockSite`.  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)   \n [CDockSite Class](../../mfc/reference/cdocksite-class.md)\n"}