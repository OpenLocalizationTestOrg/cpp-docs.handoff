{"nodes":[{"pos":[12,81],"content":"_cprintf_p, _cprintf_p_l, _cwprintf_p, _cwprintf_p_l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_cprintf_p, _cprintf_p_l, _cwprintf_p, _cwprintf_p_l | Microsoft Docs","pos":[0,69]}]},{"pos":[1440,1492],"content":"_cprintf_p, _cprintf_p_l, _cwprintf_p, _cwprintf_p_l","linkify":"_cprintf_p, _cprintf_p_l, _cwprintf_p, _cwprintf_p_l","nodes":[{"content":"_cprintf_p, _cprintf_p_l, _cwprintf_p, _cwprintf_p_l","pos":[0,52]}]},{"content":"Formats and prints to the console, and supports positional parameters in the format string.","pos":[1493,1584]},{"pos":[1592,1812],"content":"[!IMPORTANT]\n This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":" This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","pos":[13,218],"nodes":[{"content":"This API cannot be used in applications that execute in the Windows Runtime.","pos":[1,77]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.","pos":[78,205],"source":" For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)."}]}]},{"pos":[1821,1827],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[2192,2202],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Format-control string.","pos":[2218,2240]},{"content":"Optional parameters.","pos":[2261,2281]},{"content":"The locale to use.","pos":[2300,2318]},{"pos":[2327,2339],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of characters printed or a negative value if an error occurs.","pos":[2343,2415]},{"pos":[2424,2431],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"These functions format and print a series of characters and values directly to the console, using the <ph id=\"ph1\">`_putch`</ph> and <ph id=\"ph2\">`_putwch`</ph> functions to output characters.","pos":[2435,2591],"source":"These functions format and print a series of characters and values directly to the console, using the `_putch` and `_putwch` functions to output characters."},{"content":"Each <ph id=\"ph1\">`argument`</ph> (if any) is converted and output according to the corresponding format specification in <ph id=\"ph2\">`format`</ph>.","pos":[2592,2705],"source":" Each `argument` (if any) is converted and output according to the corresponding format specification in `format`."},{"content":"The format has the same form and function as the <ph id=\"ph1\">`format`</ph> parameter for the <bpt id=\"p1\">[</bpt>printf_p<ept id=\"p1\">](../../c-runtime-library/format-specification-syntax-printf-and-wprintf-functions.md)</ept> function.","pos":[2706,2887],"source":" The format has the same form and function as the `format` parameter for the [printf_p](../../c-runtime-library/format-specification-syntax-printf-and-wprintf-functions.md) function."},{"content":"The difference between <ph id=\"ph1\">`_cprintf_p`</ph> and <ph id=\"ph2\">`cprintf_s`</ph> is that <ph id=\"ph3\">`_cprintf_p`</ph> supports positional parameters, which allows specifying the order in which the arguments are used in the format string.","pos":[2888,3080],"source":" The difference between `_cprintf_p` and `cprintf_s` is that `_cprintf_p` supports positional parameters, which allows specifying the order in which the arguments are used in the format string."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>printf_p Positional Parameters<ept id=\"p1\">](../../c-runtime-library/printf-p-positional-parameters.md)</ept>.","pos":[3081,3199],"source":" For more information, see [printf_p Positional Parameters](../../c-runtime-library/printf-p-positional-parameters.md)."},{"content":"Unlike the <ph id=\"ph1\">`fprintf_p`</ph>, <ph id=\"ph2\">`printf_p`</ph>, and <ph id=\"ph3\">`sprintf_p`</ph> functions, neither <ph id=\"ph4\">`_cprintf_p`</ph> nor <ph id=\"ph5\">`_cwprintf_p`</ph> translates line-feed characters into carriage return–line feed (CR-LF) combinations when output.","pos":[3206,3404],"source":"Unlike the `fprintf_p`, `printf_p`, and `sprintf_p` functions, neither `_cprintf_p` nor `_cwprintf_p` translates line-feed characters into carriage return–line feed (CR-LF) combinations when output."},{"content":"An important distinction is that <ph id=\"ph1\">`_cwprintf_p`</ph> displays Unicode characters when used in Windows NT.","pos":[3405,3504],"source":" An important distinction is that `_cwprintf_p` displays Unicode characters when used in Windows NT."},{"content":"Unlike <ph id=\"ph1\">`_cprintf_p`</ph>, <ph id=\"ph2\">`_cwprintf_p`</ph> uses the current console locale settings.","pos":[3505,3581],"source":" Unlike `_cprintf_p`, `_cwprintf_p` uses the current console locale settings."},{"pos":[3588,3737],"content":"The versions of these functions with the <ph id=\"ph1\">`_l`</ph> suffix are identical except that they use the locale parameter passed in instead of the current locale.","source":"The versions of these functions with the `_l` suffix are identical except that they use the locale parameter passed in instead of the current locale."},{"pos":[3745,3811],"content":"[!IMPORTANT]\n Ensure that `format` is not a user-defined string.","leadings":["","> "],"nodes":[{"content":"Ensure that <ph id=\"ph1\">`format`</ph> is not a user-defined string.","pos":[14,64],"source":" Ensure that `format` is not a user-defined string."}]},{"content":"Also, like <ph id=\"ph1\">`_cprintf_s`</ph> and <ph id=\"ph2\">`_cwprintf_s`</ph>, they validate the input pointer and the format string.","pos":[3818,3915],"source":"Also, like `_cprintf_s` and `_cwprintf_s`, they validate the input pointer and the format string."},{"content":"If <ph id=\"ph1\">`format`</ph> or <ph id=\"ph2\">`argument`</ph> are <ph id=\"ph3\">`NULL`</ph>, or of the format string contains invalid formatting characters, these functions invoke the invalid parameter handler, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[3916,4160],"source":" If `format` or `argument` are `NULL`, or of the format string contains invalid formatting characters, these functions invoke the invalid parameter handler, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, these functions return -1 and set <ph id=\"ph1\">`errno`</ph> to <ph id=\"ph2\">`EINVAL`</ph>.","pos":[4161,4252],"source":" If execution is allowed to continue, these functions return -1 and set `errno` to `EINVAL`."},{"pos":[4262,4291],"content":"Generic-Text Routine Mappings","linkify":"Generic-Text Routine Mappings","nodes":[{"content":"Generic-Text Routine Mappings","pos":[0,29]}]},{"content":"Tchar.h routine","pos":[4298,4313]},{"content":"_UNICODE and _MBCS not defined","pos":[4314,4344]},{"content":"_MBCS defined","pos":[4345,4358]},{"content":"_UNICODE defined","pos":[4359,4375]},{"pos":[4619,4631],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[4638,4645]},{"content":"Required header","pos":[4646,4661]},{"pos":[4706,4733],"content":"<ph id=\"ph1\">`_cprintf_p`</ph>,<ph id=\"ph2\">`_cprintf_p_l`</ph>","source":"`_cprintf_p`,`_cprintf_p_l`"},{"content":"<ph id=\"ph1\">\\&lt;</ph>conio.h&gt;","pos":[4734,4744],"source":"\\<conio.h>"},{"pos":[4749,4778],"content":"<ph id=\"ph1\">`_cwprintf_p`</ph>,<ph id=\"ph2\">`_cwprintf_p_l`</ph>","source":"`_cwprintf_p`,`_cwprintf_p_l`"},{"content":"<ph id=\"ph1\">\\&lt;</ph>conio.h&gt;","pos":[4779,4789],"source":"\\<conio.h>"},{"pos":[4797,4895],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[4904,4911],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[5494,5502],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Console and Port I/O<ept id=\"p1\">](../../c-runtime-library/console-and-port-i-o.md)</ept><ph id=\"ph1\"> </ph>","pos":[5506,5578],"source":"[Console and Port I/O](../../c-runtime-library/console-and-port-i-o.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_cscanf, _cscanf_l, _cwscanf, _cwscanf_l<ept id=\"p1\">](../../c-runtime-library/reference/cscanf-cscanf-l-cwscanf-cwscanf-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[5581,5697],"source":" [_cscanf, _cscanf_l, _cwscanf, _cwscanf_l](../../c-runtime-library/reference/cscanf-cscanf-l-cwscanf-cwscanf-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_cscanf_s, _cscanf_s_l, _cwscanf_s, _cwscanf_s_l<ept id=\"p1\">](../../c-runtime-library/reference/cscanf-s-cscanf-s-l-cwscanf-s-cwscanf-s-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[5700,5832],"source":" [_cscanf_s, _cscanf_s_l, _cwscanf_s, _cwscanf_s_l](../../c-runtime-library/reference/cscanf-s-cscanf-s-l-cwscanf-s-cwscanf-s-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_fprintf_p, _fprintf_p_l, _fwprintf_p, _fwprintf_p_l<ept id=\"p1\">](../../c-runtime-library/reference/fprintf-p-fprintf-p-l-fwprintf-p-fwprintf-p-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[5835,5975],"source":" [_fprintf_p, _fprintf_p_l, _fwprintf_p, _fwprintf_p_l](../../c-runtime-library/reference/fprintf-p-fprintf-p-l-fwprintf-p-fwprintf-p-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>fprintf_s, _fprintf_s_l, fwprintf_s, _fwprintf_s_l<ept id=\"p1\">](../../c-runtime-library/reference/fprintf-s-fprintf-s-l-fwprintf-s-fwprintf-s-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[5978,6116],"source":" [fprintf_s, _fprintf_s_l, fwprintf_s, _fwprintf_s_l](../../c-runtime-library/reference/fprintf-s-fprintf-s-l-fwprintf-s-fwprintf-s-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_printf_p, _printf_p_l, _wprintf_p, _wprintf_p_l<ept id=\"p1\">](../../c-runtime-library/reference/printf-p-printf-p-l-wprintf-p-wprintf-p-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[6119,6251],"source":" [_printf_p, _printf_p_l, _wprintf_p, _wprintf_p_l](../../c-runtime-library/reference/printf-p-printf-p-l-wprintf-p-wprintf-p-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>printf_s, _printf_s_l, wprintf_s, _wprintf_s_l<ept id=\"p1\">](../../c-runtime-library/reference/printf-s-printf-s-l-wprintf-s-wprintf-s-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[6254,6384],"source":" [printf_s, _printf_s_l, wprintf_s, _wprintf_s_l](../../c-runtime-library/reference/printf-s-printf-s-l-wprintf-s-wprintf-s-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_sprintf_p, _sprintf_p_l, _swprintf_p, _swprintf_p_l<ept id=\"p1\">](../../c-runtime-library/reference/sprintf-p-sprintf-p-l-swprintf-p-swprintf-p-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[6387,6527],"source":" [_sprintf_p, _sprintf_p_l, _swprintf_p, _swprintf_p_l](../../c-runtime-library/reference/sprintf-p-sprintf-p-l-swprintf-p-swprintf-p-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_vfprintf_p, _vfprintf_p_l, _vfwprintf_p, _vfwprintf_p_l<ept id=\"p1\">](../../c-runtime-library/reference/vfprintf-p-vfprintf-p-l-vfwprintf-p-vfwprintf-p-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[6530,6678],"source":" [_vfprintf_p, _vfprintf_p_l, _vfwprintf_p, _vfwprintf_p_l](../../c-runtime-library/reference/vfprintf-p-vfprintf-p-l-vfwprintf-p-vfwprintf-p-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_cprintf_s, _cprintf_s_l, _cwprintf_s, _cwprintf_s_l<ept id=\"p1\">](../../c-runtime-library/reference/cprintf-s-cprintf-s-l-cwprintf-s-cwprintf-s-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[6681,6821],"source":" [_cprintf_s, _cprintf_s_l, _cwprintf_s, _cwprintf_s_l](../../c-runtime-library/reference/cprintf-s-cprintf-s-l-cwprintf-s-cwprintf-s-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>printf_p Positional Parameters<ept id=\"p1\">](../../c-runtime-library/printf-p-positional-parameters.md)</ept><ph id=\"ph1\"> </ph>","pos":[6824,6917],"source":" [printf_p Positional Parameters](../../c-runtime-library/printf-p-positional-parameters.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Format Specification Syntax: printf and wprintf Functions<ept id=\"p1\">](../../c-runtime-library/format-specification-syntax-printf-and-wprintf-functions.md)</ept>","pos":[6920,7065],"source":" [Format Specification Syntax: printf and wprintf Functions](../../c-runtime-library/format-specification-syntax-printf-and-wprintf-functions.md)"}],"content":"---\ntitle: \"_cprintf_p, _cprintf_p_l, _cwprintf_p, _cwprintf_p_l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_cprintf_p_l\"\n  - \"_cwprintf_p_l\"\n  - \"_cwprintf_p\"\n  - \"_cprintf_p\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"cprintf_p\"\n  - \"cwprintf_p\"\n  - \"tcprintf_p\"\n  - \"_cwprintf_p_l\"\n  - \"_cprintf_p\"\n  - \"csprintf_p_l\"\n  - \"_cprintf_p_l\"\n  - \"_cwprintf_p\"\n  - \"_tcprintf_p\"\n  - \"cprintf_p_l\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"_cwprintf_p_l function\"\n  - \"cwprintf_p function\"\n  - \"tcprintf_p_l function\"\n  - \"cprintf_p_l function\"\n  - \"_tcprintf_p function\"\n  - \"_tcprintf_p_l function\"\n  - \"_cprintf_p function\"\n  - \"_cprintf_p_l function\"\n  - \"cwprintf_p_l function\"\n  - \"_cwprintf_p function\"\n  - \"tcprintf_p function\"\n  - \"cprintf_p function\"\nms.assetid: 1f82fd7d-13c8-4c4a-a3e4-db0df3873564\ncaps.latest.revision: 26\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _cprintf_p, _cprintf_p_l, _cwprintf_p, _cwprintf_p_l\nFormats and prints to the console, and supports positional parameters in the format string.  \n  \n> [!IMPORTANT]\n>  This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \nint _cprintf_p(   \n   const char * format [,   \n   argument] ...   \n);  \nint _cprintf_p_l(   \n   const char * format,  \n   locale_t locale [,   \n   argument] ...   \n);  \nint _cwprintf_p(  \n   const wchar * format [,   \n   argument] ...  \n);  \nint _cwprintf_p_l(  \n   const wchar * format,  \n   locale_t locale [,  \n   argument] ...  \n);  \n```  \n  \n#### Parameters  \n `format`  \n Format-control string.  \n  \n `argument`  \n Optional parameters.  \n  \n `locale`  \n The locale to use.  \n  \n## Return Value  \n The number of characters printed or a negative value if an error occurs.  \n  \n## Remarks  \n These functions format and print a series of characters and values directly to the console, using the `_putch` and `_putwch` functions to output characters. Each `argument` (if any) is converted and output according to the corresponding format specification in `format`. The format has the same form and function as the `format` parameter for the [printf_p](../../c-runtime-library/format-specification-syntax-printf-and-wprintf-functions.md) function. The difference between `_cprintf_p` and `cprintf_s` is that `_cprintf_p` supports positional parameters, which allows specifying the order in which the arguments are used in the format string. For more information, see [printf_p Positional Parameters](../../c-runtime-library/printf-p-positional-parameters.md).  \n  \n Unlike the `fprintf_p`, `printf_p`, and `sprintf_p` functions, neither `_cprintf_p` nor `_cwprintf_p` translates line-feed characters into carriage return–line feed (CR-LF) combinations when output. An important distinction is that `_cwprintf_p` displays Unicode characters when used in Windows NT. Unlike `_cprintf_p`, `_cwprintf_p` uses the current console locale settings.  \n  \n The versions of these functions with the `_l` suffix are identical except that they use the locale parameter passed in instead of the current locale.  \n  \n> [!IMPORTANT]\n>  Ensure that `format` is not a user-defined string.  \n  \n Also, like `_cprintf_s` and `_cwprintf_s`, they validate the input pointer and the format string. If `format` or `argument` are `NULL`, or of the format string contains invalid formatting characters, these functions invoke the invalid parameter handler, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, these functions return -1 and set `errno` to `EINVAL`.  \n  \n### Generic-Text Routine Mappings  \n  \n|Tchar.h routine|_UNICODE and _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|--------------------------------------|--------------------|-----------------------|  \n|`_tcprintf_p`|`_cprintf_p`|`_cprintf_p`|`_cwprintf_p`|  \n|`_tcprintf_p_l`|`_cprintf_p_l`|`_cprintf_p_l`|`_cwprintf_p_l`|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_cprintf_p`,`_cprintf_p_l`|\\<conio.h>|  \n|`_cwprintf_p`,`_cwprintf_p_l`|\\<conio.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```  \n// crt_cprintf_p.c  \n// This program displays some variables to the console  \n// using the _cprintf_p function.  \n  \n#include <conio.h>  \n  \nint main( void )  \n{  \n    int         i = -16,  \n                h = 29;  \n    unsigned    u = 62511;  \n    char        c = 'A';  \n    char        s[] = \"Test\";  \n  \n    // Note that console output does not translate  \n    // \\n as standard output does. Use \\r\\n instead.  \n    _cprintf_p( \"%2$d  %1$.4x  %3$u  %4$c %5$s\\r\\n\",   \n                h, i, u, c, s );  \n}  \n```  \n  \n```Output  \n-16  001d  62511  A Test  \n```  \n  \n## See Also  \n [Console and Port I/O](../../c-runtime-library/console-and-port-i-o.md)   \n [_cscanf, _cscanf_l, _cwscanf, _cwscanf_l](../../c-runtime-library/reference/cscanf-cscanf-l-cwscanf-cwscanf-l.md)   \n [_cscanf_s, _cscanf_s_l, _cwscanf_s, _cwscanf_s_l](../../c-runtime-library/reference/cscanf-s-cscanf-s-l-cwscanf-s-cwscanf-s-l.md)   \n [_fprintf_p, _fprintf_p_l, _fwprintf_p, _fwprintf_p_l](../../c-runtime-library/reference/fprintf-p-fprintf-p-l-fwprintf-p-fwprintf-p-l.md)   \n [fprintf_s, _fprintf_s_l, fwprintf_s, _fwprintf_s_l](../../c-runtime-library/reference/fprintf-s-fprintf-s-l-fwprintf-s-fwprintf-s-l.md)   \n [_printf_p, _printf_p_l, _wprintf_p, _wprintf_p_l](../../c-runtime-library/reference/printf-p-printf-p-l-wprintf-p-wprintf-p-l.md)   \n [printf_s, _printf_s_l, wprintf_s, _wprintf_s_l](../../c-runtime-library/reference/printf-s-printf-s-l-wprintf-s-wprintf-s-l.md)   \n [_sprintf_p, _sprintf_p_l, _swprintf_p, _swprintf_p_l](../../c-runtime-library/reference/sprintf-p-sprintf-p-l-swprintf-p-swprintf-p-l.md)   \n [_vfprintf_p, _vfprintf_p_l, _vfwprintf_p, _vfwprintf_p_l](../../c-runtime-library/reference/vfprintf-p-vfprintf-p-l-vfwprintf-p-vfwprintf-p-l.md)   \n [_cprintf_s, _cprintf_s_l, _cwprintf_s, _cwprintf_s_l](../../c-runtime-library/reference/cprintf-s-cprintf-s-l-cwprintf-s-cwprintf-s-l.md)   \n [printf_p Positional Parameters](../../c-runtime-library/printf-p-positional-parameters.md)   \n [Format Specification Syntax: printf and wprintf Functions](../../c-runtime-library/format-specification-syntax-printf-and-wprintf-functions.md)"}