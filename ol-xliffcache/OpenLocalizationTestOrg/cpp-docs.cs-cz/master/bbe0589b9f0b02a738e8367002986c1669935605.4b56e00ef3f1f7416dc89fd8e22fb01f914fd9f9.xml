{"nodes":[{"pos":[12,50],"content":"wstring_convert Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"wstring_convert Class | Microsoft Docs","pos":[0,38]}]},{"pos":[781,802],"content":"wstring_convert Class","linkify":"wstring_convert Class","nodes":[{"content":"wstring_convert Class","pos":[0,21]}]},{"pos":[803,901],"content":"The template class <ph id=\"ph1\">`wstring_convert`</ph> performs conversions between a wide string and a byte string.","source":"The template class `wstring_convert` performs conversions between a wide string and a byte string."},{"pos":[910,916],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1009,1019],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Codecvt","pos":[1023,1030]},{"content":"The <bpt id=\"p1\">[</bpt>locale<ept id=\"p1\">](../standard-library/locale-class.md)</ept> facet that represents the conversion object.","pos":[1034,1128],"source":" The [locale](../standard-library/locale-class.md) facet that represents the conversion object."},{"content":"Elem","pos":[1135,1139]},{"content":"The wide-character element type.","pos":[1143,1175]},{"pos":[1184,1191],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The template class describes an object that controls conversions between wide string objects of class <ph id=\"ph1\">`std::basic_string&lt;Elem&gt;`</ph> and byte string objects of class <ph id=\"ph2\">`std::basic_string&lt;char&gt;`</ph> (also known as <ph id=\"ph3\">`std::string`</ph>).","pos":[1195,1412],"source":"The template class describes an object that controls conversions between wide string objects of class `std::basic_string<Elem>` and byte string objects of class `std::basic_string<char>` (also known as `std::string`)."},{"content":"The template class defines the types <ph id=\"ph1\">`wide_string`</ph> and <ph id=\"ph2\">`byte_string`</ph> as synonyms for these two types.","pos":[1413,1514],"source":" The template class defines the types `wide_string` and `byte_string` as synonyms for these two types."},{"content":"Conversion between a sequence of <ph id=\"ph1\">`Elem`</ph> values (stored in a <ph id=\"ph2\">`wide_string`</ph> object) and multibyte sequences (stored in a <ph id=\"ph3\">`byte_string`</ph> object) is performed by an object of class <ph id=\"ph4\">`Codecvt&lt;Elem, char, std::mbstate_t&gt;`</ph>, which meets the requirements of the standard code-conversion facet <ph id=\"ph5\">`std::codecvt&lt;Elem, char, std::mbstate_t&gt;`</ph>.","pos":[1515,1840],"source":" Conversion between a sequence of `Elem` values (stored in a `wide_string` object) and multibyte sequences (stored in a `byte_string` object) is performed by an object of class `Codecvt<Elem, char, std::mbstate_t>`, which meets the requirements of the standard code-conversion facet `std::codecvt<Elem, char, std::mbstate_t>`."},{"content":"An object of this template class stores:","pos":[1847,1887]},{"content":"A byte string to display on errors","pos":[1897,1931]},{"content":"A wide string to display on errors","pos":[1941,1975]},{"content":"A pointer to the allocated conversion object (which is freed when the wbuffer_convert object is destroyed)","pos":[1985,2091]},{"pos":[2101,2177],"content":"A conversion state object of type <bpt id=\"p1\">[</bpt>state_type<ept id=\"p1\">](#wstring_convert__state_type)</ept>","source":"A conversion state object of type [state_type](#wstring_convert__state_type)"},{"content":"A conversion count","pos":[2187,2205]},{"pos":[2215,2227],"content":"Constructors","linkify":"Constructors","nodes":[{"content":"Constructors","pos":[0,12]}]},{"pos":[2248,2300],"content":"<bpt id=\"p1\">[</bpt>wstring_convert<ept id=\"p1\">](#wstring_convert__wstring_convert)</ept>","source":"[wstring_convert](#wstring_convert__wstring_convert)"},{"pos":[2301,2348],"content":"Constructs an object of type <ph id=\"ph1\">`wstring_convert`</ph>.","source":"Constructs an object of type `wstring_convert`."},{"pos":[2359,2367],"content":"Typedefs","linkify":"Typedefs","nodes":[{"content":"Typedefs","pos":[0,8]}]},{"pos":[2388,2432],"content":"<bpt id=\"p1\">[</bpt>byte_string<ept id=\"p1\">](#wstring_convert__byte_string)</ept>","source":"[byte_string](#wstring_convert__byte_string)"},{"content":"A type that represents a byte string.","pos":[2433,2470]},{"pos":[2475,2519],"content":"<bpt id=\"p1\">[</bpt>wide_string<ept id=\"p1\">](#wstring_convert__wide_string)</ept>","source":"[wide_string](#wstring_convert__wide_string)"},{"content":"A type that represents a wide string.","pos":[2520,2557]},{"pos":[2562,2604],"content":"<bpt id=\"p1\">[</bpt>state_type<ept id=\"p1\">](#wstring_convert__state_type)</ept>","source":"[state_type](#wstring_convert__state_type)"},{"content":"A type that represents the conversion state.","pos":[2605,2649]},{"pos":[2654,2692],"content":"<bpt id=\"p1\">[</bpt>int_type<ept id=\"p1\">](#wstring_convert__int_type)</ept>","source":"[int_type](#wstring_convert__int_type)"},{"content":"A type that represents an integer.","pos":[2693,2727]},{"pos":[2738,2754],"content":"Member Functions","linkify":"Member Functions","nodes":[{"content":"Member Functions","pos":[0,16]}]},{"pos":[2775,2817],"content":"<bpt id=\"p1\">[</bpt>from_bytes<ept id=\"p1\">](#wstring_convert__from_bytes)</ept>","source":"[from_bytes](#wstring_convert__from_bytes)"},{"content":"Converts a byte string to a wide string.","pos":[2818,2858]},{"pos":[2863,2901],"content":"<bpt id=\"p1\">[</bpt>to_bytes<ept id=\"p1\">](#wstring_convert__to_bytes)</ept>","source":"[to_bytes](#wstring_convert__to_bytes)"},{"content":"Converts a wide string to a byte string.","pos":[2902,2942]},{"pos":[2947,2987],"content":"<bpt id=\"p1\">[</bpt>converted<ept id=\"p1\">](#wstring_convert__converted)</ept>","source":"[converted](#wstring_convert__converted)"},{"content":"Returns the number of successful conversions.","pos":[2988,3033]},{"pos":[3038,3070],"content":"<bpt id=\"p1\">[</bpt>state<ept id=\"p1\">](#wstring_convert__state)</ept>","source":"[state](#wstring_convert__state)"},{"content":"Returns an object representing the state of the conversion.","pos":[3071,3130]},{"pos":[3140,3152],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3156,3177],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>locale&gt;","source":"**Header:** \\<locale>"},{"pos":[3184,3202],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"pos":[3212,3285],"content":"<bpt id=\"p1\">&lt;a name=\"wstring_convert__byte_string\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  wstring_convert::byte_string","linkify":"<a name=\"wstring_convert__byte_string\"></a>  wstring_convert::byte_string","source":"<a name=\"wstring_convert__byte_string\"></a>  wstring_convert::byte_string"},{"content":"A type that represents a byte string.","pos":[3289,3326]},{"pos":[3394,3401],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3405,3457],"content":"The type is a synonym for <ph id=\"ph1\">`std::basic_string&lt;char&gt;`</ph>.","source":"The type is a synonym for `std::basic_string<char>`."},{"pos":[3467,3536],"content":"<bpt id=\"p1\">&lt;a name=\"wstring_convert__converted\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  wstring_convert::converted","linkify":"<a name=\"wstring_convert__converted\"></a>  wstring_convert::converted","source":"<a name=\"wstring_convert__converted\"></a>  wstring_convert::converted"},{"content":"Returns the number of successful conversions.","pos":[3540,3585]},{"pos":[3634,3646],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of successful conversions.","pos":[3650,3687]},{"pos":[3697,3704],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The number of successful conversions is stored in the conversion count object.","pos":[3708,3786]},{"pos":[3796,3867],"content":"<bpt id=\"p1\">&lt;a name=\"wstring_convert__from_bytes\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  wstring_convert::from_bytes","linkify":"<a name=\"wstring_convert__from_bytes\"></a>  wstring_convert::from_bytes","source":"<a name=\"wstring_convert__from_bytes\"></a>  wstring_convert::from_bytes"},{"content":"Converts a byte string to a wide string.","pos":[3871,3911]},{"pos":[4120,4130],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[4137,4146]},{"content":"Description","pos":[4147,4158]},{"content":"The single-element byte sequence to be converted.","pos":[4208,4257]},{"content":"The C-style, null-terminated sequence of characters to be converted.","pos":[4268,4336]},{"pos":[4348,4413],"content":"The <bpt id=\"p1\">[</bpt>byte_string<ept id=\"p1\">](#wstring_convert__byte_string)</ept> to be converted.","source":"The [byte_string](#wstring_convert__byte_string) to be converted."},{"content":"The first character in a range of characters to be converted.","pos":[4426,4487]},{"content":"The last character in a range of characters to be converted.","pos":[4499,4559]},{"pos":[4570,4582],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A wide string object resulting from the conversion.","pos":[4586,4637]},{"pos":[4647,4654],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If the <bpt id=\"p1\">[</bpt>conversion state<ept id=\"p1\">](../standard-library/wstring-convert-class.md)</ept> object was <ph id=\"ph1\">`not`</ph> constructed with an explicit value, it is set to its default value (the initial conversion state) before the conversion begins.","pos":[4658,4874],"source":"If the [conversion state](../standard-library/wstring-convert-class.md) object was `not` constructed with an explicit value, it is set to its default value (the initial conversion state) before the conversion begins."},{"content":"Otherwise it is left unchanged.","pos":[4875,4906]},{"content":"The number of input elements successfully converted is stored in the conversion count object.","pos":[4913,5006]},{"content":"If no conversion error occurs, the member function returns the converted wide string.","pos":[5007,5092]},{"content":"Otherwise, if the object was constructed with an initializer for the wide-string error message, the member function returns the wide-string error message object.","pos":[5093,5254]},{"content":"Otherwise, the member function throws an object of class <bpt id=\"p1\">[</bpt>range_error<ept id=\"p1\">](../standard-library/range-error-class.md)</ept>.","pos":[5255,5368],"source":" Otherwise, the member function throws an object of class [range_error](../standard-library/range-error-class.md)."},{"pos":[5378,5445],"content":"<bpt id=\"p1\">&lt;a name=\"wstring_convert__int_type\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  wstring_convert::int_type","linkify":"<a name=\"wstring_convert__int_type\"></a>  wstring_convert::int_type","source":"<a name=\"wstring_convert__int_type\"></a>  wstring_convert::int_type"},{"content":"A type that represents an integer.","pos":[5449,5483]},{"pos":[5568,5575],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5579,5642],"content":"The type is a synonym for <ph id=\"ph1\">`wide_string::traits_type::int_type`</ph>.","source":"The type is a synonym for `wide_string::traits_type::int_type`."},{"pos":[5652,5713],"content":"<bpt id=\"p1\">&lt;a name=\"wstring_convert__state\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  wstring_convert::state","linkify":"<a name=\"wstring_convert__state\"></a>  wstring_convert::state","source":"<a name=\"wstring_convert__state\"></a>  wstring_convert::state"},{"content":"Returns an object representing the state of the conversion.","pos":[5717,5776]},{"pos":[5825,5837],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[5841,5961],"content":"The <bpt id=\"p1\">[</bpt>conversion state<ept id=\"p1\">](../standard-library/wstring-convert-class.md)</ept> object that represents the state of the conversion.","source":"The [conversion state](../standard-library/wstring-convert-class.md) object that represents the state of the conversion."},{"pos":[5971,5978],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5988,6059],"content":"<bpt id=\"p1\">&lt;a name=\"wstring_convert__state_type\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  wstring_convert::state_type","linkify":"<a name=\"wstring_convert__state_type\"></a>  wstring_convert::state_type","source":"<a name=\"wstring_convert__state_type\"></a>  wstring_convert::state_type"},{"content":"A type that represents the conversion state.","pos":[6063,6107]},{"pos":[6179,6186],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The type describes an object that can represent a conversion state.","pos":[6190,6257]},{"content":"The type is a synonym for <ph id=\"ph1\">`Codecvt::state_type`</ph>.","pos":[6258,6306],"source":" The type is a synonym for `Codecvt::state_type`."},{"pos":[6316,6383],"content":"<bpt id=\"p1\">&lt;a name=\"wstring_convert__to_bytes\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  wstring_convert::to_bytes","linkify":"<a name=\"wstring_convert__to_bytes\"></a>  wstring_convert::to_bytes","source":"<a name=\"wstring_convert__to_bytes\"></a>  wstring_convert::to_bytes"},{"content":"Converts a wide string to a byte string.","pos":[6387,6427]},{"pos":[6629,6639],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[6646,6655]},{"content":"Description","pos":[6656,6667]},{"content":"The wide character to be converted.","pos":[6717,6752]},{"pos":[6764,6840],"content":"The C-style, null-terminated sequence, beginning at <ph id=\"ph1\">`wptr`</ph>, to be converted.","source":"The C-style, null-terminated sequence, beginning at `wptr`, to be converted."},{"pos":[6852,6917],"content":"The <bpt id=\"p1\">[</bpt>wide_string<ept id=\"p1\">](#wstring_convert__wide_string)</ept> to be converted.","source":"The [wide_string](#wstring_convert__wide_string) to be converted."},{"content":"The first element in a range of elements to be converted.","pos":[6930,6987]},{"content":"The last element in a range of elements to be converted.","pos":[6999,7055]},{"pos":[7066,7073],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If the <bpt id=\"p1\">[</bpt>conversion state<ept id=\"p1\">](../standard-library/wstring-convert-class.md)</ept> object was <ph id=\"ph1\">`not`</ph> constructed with an explicit value, it is set to its default value (the initial conversion state) before the conversion begins.","pos":[7077,7293],"source":"If the [conversion state](../standard-library/wstring-convert-class.md) object was `not` constructed with an explicit value, it is set to its default value (the initial conversion state) before the conversion begins."},{"content":"Otherwise it is left unchanged.","pos":[7294,7325]},{"content":"The number of input elements successfully converted is stored in the conversion count object.","pos":[7332,7425]},{"content":"If no conversion error occurs, the member function returns the converted byte string.","pos":[7426,7511]},{"content":"Otherwise, if the object was constructed with an initializer for the byte-string error message, the member function returns the byte-string error message object.","pos":[7512,7673]},{"content":"Otherwise, the member function throws an object of class <bpt id=\"p1\">[</bpt>range_error<ept id=\"p1\">](../standard-library/range-error-class.md)</ept>.","pos":[7674,7787],"source":" Otherwise, the member function throws an object of class [range_error](../standard-library/range-error-class.md)."},{"pos":[7797,7870],"content":"<bpt id=\"p1\">&lt;a name=\"wstring_convert__wide_string\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  wstring_convert::wide_string","linkify":"<a name=\"wstring_convert__wide_string\"></a>  wstring_convert::wide_string","source":"<a name=\"wstring_convert__wide_string\"></a>  wstring_convert::wide_string"},{"content":"A type that represents a wide string.","pos":[7874,7911]},{"pos":[7979,7986],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7990,8042],"content":"The type is a synonym for <ph id=\"ph1\">`std::basic_string&lt;Elem&gt;`</ph>.","source":"The type is a synonym for `std::basic_string<Elem>`."},{"pos":[8052,8133],"content":"<bpt id=\"p1\">&lt;a name=\"wstring_convert__wstring_convert\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  wstring_convert::wstring_convert","linkify":"<a name=\"wstring_convert__wstring_convert\"></a>  wstring_convert::wstring_convert","source":"<a name=\"wstring_convert__wstring_convert\"></a>  wstring_convert::wstring_convert"},{"pos":[8137,8184],"content":"Constructs an object of type <ph id=\"ph1\">`wstring_convert`</ph>.","source":"Constructs an object of type `wstring_convert`."},{"pos":[8388,8398],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[8405,8414]},{"content":"Description","pos":[8415,8426]},{"pos":[8477,8532],"content":"The object of type <ph id=\"ph1\">`Codecvt`</ph> to perform the conversion.","source":"The object of type `Codecvt` to perform the conversion."},{"pos":[8546,8642],"content":"The object of type <bpt id=\"p1\">[</bpt>state_type<ept id=\"p1\">](#wstring_convert__state_type)</ept> representing the conversion state.","source":"The object of type [state_type](#wstring_convert__state_type) representing the conversion state."},{"pos":[8655,8725],"content":"The <bpt id=\"p1\">[</bpt>byte_string<ept id=\"p1\">](#wstring_convert__byte_string)</ept> to display on errors.","source":"The [byte_string](#wstring_convert__byte_string) to display on errors."},{"pos":[8737,8807],"content":"The <bpt id=\"p1\">[</bpt>wide_string<ept id=\"p1\">](#wstring_convert__wide_string)</ept> to display on errors.","source":"The [wide_string](#wstring_convert__wide_string) to display on errors."},{"pos":[8818,8825],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[8829,8941],"content":"The first constructor stores <bpt id=\"p1\">*</bpt>Pcvt_arg<ept id=\"p1\">*</ept> in the <bpt id=\"p2\">[</bpt>conversion object<ept id=\"p2\">](../standard-library/wstring-convert-class.md)</ept>","source":"The first constructor stores *Pcvt_arg* in the [conversion object](../standard-library/wstring-convert-class.md)"}],"content":"---\ntitle: \"wstring_convert Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"cvt.wstring_convert\"\n  - \"wstring_convert\"\n  - \"stdext::cvt::wstring_convert\"\n  - \"cvt::wstring_convert\"\n  - \"wstring/stdext::cvt::wstring_convert\"\n  - \"stdext.cvt.wstring_convert\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"wstring_convert class\"\nms.assetid: e34f5b65-d572-4bdc-ac69-20778712e376\ncaps.latest.revision: 25\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# wstring_convert Class\nThe template class `wstring_convert` performs conversions between a wide string and a byte string.  \n  \n## Syntax  \n  \n```\ntemplate <class Codecvt, class Elem = wchar_t>\nclass wstring_convert\n```  \n  \n#### Parameters  \n Codecvt  \n The [locale](../standard-library/locale-class.md) facet that represents the conversion object.  \n  \n Elem  \n The wide-character element type.  \n  \n## Remarks  \n The template class describes an object that controls conversions between wide string objects of class `std::basic_string<Elem>` and byte string objects of class `std::basic_string<char>` (also known as `std::string`). The template class defines the types `wide_string` and `byte_string` as synonyms for these two types. Conversion between a sequence of `Elem` values (stored in a `wide_string` object) and multibyte sequences (stored in a `byte_string` object) is performed by an object of class `Codecvt<Elem, char, std::mbstate_t>`, which meets the requirements of the standard code-conversion facet `std::codecvt<Elem, char, std::mbstate_t>`.  \n  \n An object of this template class stores:  \n  \n-   A byte string to display on errors  \n  \n-   A wide string to display on errors  \n  \n-   A pointer to the allocated conversion object (which is freed when the wbuffer_convert object is destroyed)  \n  \n-   A conversion state object of type [state_type](#wstring_convert__state_type)  \n  \n-   A conversion count  \n  \n### Constructors  \n  \n|||  \n|-|-|  \n|[wstring_convert](#wstring_convert__wstring_convert)|Constructs an object of type `wstring_convert`.|  \n  \n### Typedefs  \n  \n|||  \n|-|-|  \n|[byte_string](#wstring_convert__byte_string)|A type that represents a byte string.|  \n|[wide_string](#wstring_convert__wide_string)|A type that represents a wide string.|  \n|[state_type](#wstring_convert__state_type)|A type that represents the conversion state.|  \n|[int_type](#wstring_convert__int_type)|A type that represents an integer.|  \n  \n### Member Functions  \n  \n|||  \n|-|-|  \n|[from_bytes](#wstring_convert__from_bytes)|Converts a byte string to a wide string.|  \n|[to_bytes](#wstring_convert__to_bytes)|Converts a wide string to a byte string.|  \n|[converted](#wstring_convert__converted)|Returns the number of successful conversions.|  \n|[state](#wstring_convert__state)|Returns an object representing the state of the conversion.|  \n  \n## Requirements  \n **Header:** \\<locale>  \n  \n **Namespace:** std  \n  \n##  <a name=\"wstring_convert__byte_string\"></a>  wstring_convert::byte_string  \n A type that represents a byte string.  \n  \n```\ntypedef std::basic_string<char> byte_string;\n```  \n  \n### Remarks  \n The type is a synonym for `std::basic_string<char>`.  \n  \n##  <a name=\"wstring_convert__converted\"></a>  wstring_convert::converted  \n Returns the number of successful conversions.  \n  \n```\nsize_t converted() const;\n```  \n  \n### Return Value  \n The number of successful conversions.  \n  \n### Remarks  \n The number of successful conversions is stored in the conversion count object.  \n  \n##  <a name=\"wstring_convert__from_bytes\"></a>  wstring_convert::from_bytes  \n Converts a byte string to a wide string.  \n  \n```\nwide_string from_bytes(char Byte);\nwide_string from_bytes(const char* ptr);\nwide_string from_bytes(const byte_string& Bstr);\nwide_string from_bytes(const char* first, const char* last);\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|`Byte`|The single-element byte sequence to be converted.|  \n|`ptr`|The C-style, null-terminated sequence of characters to be converted.|  \n|`Bstr`|The [byte_string](#wstring_convert__byte_string) to be converted.|  \n|`first`|The first character in a range of characters to be converted.|  \n|`last`|The last character in a range of characters to be converted.|  \n  \n### Return Value  \n A wide string object resulting from the conversion.  \n  \n### Remarks  \n If the [conversion state](../standard-library/wstring-convert-class.md) object was `not` constructed with an explicit value, it is set to its default value (the initial conversion state) before the conversion begins. Otherwise it is left unchanged.  \n  \n The number of input elements successfully converted is stored in the conversion count object. If no conversion error occurs, the member function returns the converted wide string. Otherwise, if the object was constructed with an initializer for the wide-string error message, the member function returns the wide-string error message object. Otherwise, the member function throws an object of class [range_error](../standard-library/range-error-class.md).  \n  \n##  <a name=\"wstring_convert__int_type\"></a>  wstring_convert::int_type  \n A type that represents an integer.  \n  \n```\ntypedef typename wide_string::traits_type::int_type int_type;\n```  \n  \n### Remarks  \n The type is a synonym for `wide_string::traits_type::int_type`.  \n  \n##  <a name=\"wstring_convert__state\"></a>  wstring_convert::state  \n Returns an object representing the state of the conversion.  \n  \n```\nstate_type state() const;\n```  \n  \n### Return Value  \n The [conversion state](../standard-library/wstring-convert-class.md) object that represents the state of the conversion.  \n  \n### Remarks  \n  \n##  <a name=\"wstring_convert__state_type\"></a>  wstring_convert::state_type  \n A type that represents the conversion state.  \n  \n```\ntypedef typename Codecvt::state_type state_type;\n```  \n  \n### Remarks  \n The type describes an object that can represent a conversion state. The type is a synonym for `Codecvt::state_type`.  \n  \n##  <a name=\"wstring_convert__to_bytes\"></a>  wstring_convert::to_bytes  \n Converts a wide string to a byte string.  \n  \n```\nbyte_string to_bytes(Elem Char);\nbyte_string to_bytes(const Elem* Wptr);\nbyte_string to_bytes(const wide_string& Wstr);\nbyte_string to_bytes(const Elem* first, const Elem* last);\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|`Char`|The wide character to be converted.|  \n|`Wptr`|The C-style, null-terminated sequence, beginning at `wptr`, to be converted.|  \n|`Wstr`|The [wide_string](#wstring_convert__wide_string) to be converted.|  \n|`first`|The first element in a range of elements to be converted.|  \n|`last`|The last element in a range of elements to be converted.|  \n  \n### Remarks  \n If the [conversion state](../standard-library/wstring-convert-class.md) object was `not` constructed with an explicit value, it is set to its default value (the initial conversion state) before the conversion begins. Otherwise it is left unchanged.  \n  \n The number of input elements successfully converted is stored in the conversion count object. If no conversion error occurs, the member function returns the converted byte string. Otherwise, if the object was constructed with an initializer for the byte-string error message, the member function returns the byte-string error message object. Otherwise, the member function throws an object of class [range_error](../standard-library/range-error-class.md).  \n  \n##  <a name=\"wstring_convert__wide_string\"></a>  wstring_convert::wide_string  \n A type that represents a wide string.  \n  \n```\ntypedef std::basic_string<Elem> wide_string;\n```  \n  \n### Remarks  \n The type is a synonym for `std::basic_string<Elem>`.  \n  \n##  <a name=\"wstring_convert__wstring_convert\"></a>  wstring_convert::wstring_convert  \n Constructs an object of type `wstring_convert`.  \n  \n```\nwstring_convert(Codecvt *Pcvt = new Codecvt);\nwstring_convert(Codecvt *Pcvt, state_type _State);\nwstring_convert(const byte_string& _Berr, const wide_string& Werr = wide_string());\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|`*Pcvt`|The object of type `Codecvt` to perform the conversion.|  \n|`_State`|The object of type [state_type](#wstring_convert__state_type) representing the conversion state.|  \n|`_Berr`|The [byte_string](#wstring_convert__byte_string) to display on errors.|  \n|`Werr`|The [wide_string](#wstring_convert__wide_string) to display on errors.|  \n  \n### Remarks  \n The first constructor stores *Pcvt_arg* in the [conversion object](../standard-library/wstring-convert-class.md)\n"}