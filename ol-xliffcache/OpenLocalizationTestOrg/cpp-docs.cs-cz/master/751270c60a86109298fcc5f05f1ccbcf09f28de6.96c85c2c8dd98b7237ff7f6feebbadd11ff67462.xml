{"nodes":[{"pos":[12,49],"content":"Preprocessor Grammar | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Preprocessor Grammar | Microsoft Docs","pos":[0,37]}]},{"content":"Preprocessor Grammar","pos":[634,654]},{"pos":[655,698],"content":"<bpt id=\"p1\">**</bpt>#define<ept id=\"p1\">**</ept>  <bpt id=\"p2\">*</bpt>identifier<ept id=\"p2\">*</ept> <bpt id=\"p3\">*</bpt>token-string<ept id=\"p3\">*</ept>opt","source":"**#define**  *identifier* *token-string*opt"},{"pos":[705,813],"content":"<bpt id=\"p1\">*</bpt><ph id=\"ph1\">#</ph><ept id=\"p1\">*</ept> <bpt id=\"p2\">**</bpt>define<ept id=\"p2\">**</ept>  <bpt id=\"p3\">*</bpt>identifier<ept id=\"p3\">*</ept>[<bpt id=\"p4\">**</bpt>(<ept id=\"p4\">**</ept> <bpt id=\"p5\">*</bpt>identifier<ept id=\"p5\">*</ept>opt<bpt id=\"p6\">**</bpt>,<ept id=\"p6\">**</ept> <bpt id=\"p7\">*</bpt>...<ept id=\"p7\">*</ept> <bpt id=\"p8\">**</bpt>,<ept id=\"p8\">**</ept> <bpt id=\"p9\">*</bpt>identifier<ept id=\"p9\">*</ept>opt <bpt id=\"p10\">**</bpt>)<ept id=\"p10\">**</ept>] <bpt id=\"p11\">*</bpt>token-string<ept id=\"p11\">*</ept>opt","source":"*#* **define**  *identifier*[**(** *identifier*opt**,** *...* **,** *identifier*opt **)**] *token-string*opt"},{"pos":[820,852],"content":"<bpt id=\"p1\">**</bpt>defined(<ept id=\"p1\">**</ept>  <bpt id=\"p2\">*</bpt>identifier<ept id=\"p2\">*</ept> <bpt id=\"p3\">**</bpt>)<ept id=\"p3\">**</ept>","source":"**defined(**  *identifier* **)**"},{"pos":[859,884],"content":"<bpt id=\"p1\">**</bpt>defined<ept id=\"p1\">**</ept>  <bpt id=\"p2\">*</bpt>identifier<ept id=\"p2\">*</ept>","source":"**defined**  *identifier*"},{"pos":[902,923],"content":"<bpt id=\"p1\">**</bpt>\"<ept id=\"p1\">**</ept><bpt id=\"p2\">*</bpt>path-spec<ept id=\"p2\">*</ept><bpt id=\"p3\">**</bpt>\"<ept id=\"p3\">**</ept>","source":"**\"***path-spec***\"**"},{"pos":[941,963],"content":"<bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\&lt;</ph><ept id=\"p1\">**</ept><bpt id=\"p2\">*</bpt>path-spec<ept id=\"p2\">*</ept><bpt id=\"p3\">**</bpt><ph id=\"ph2\">&gt;</ph><ept id=\"p3\">**</ept>","source":"**\\<***path-spec***>**"},{"pos":[970,1024],"content":"<bpt id=\"p1\">**</bpt>#line<ept id=\"p1\">**</ept>  <bpt id=\"p2\">*</bpt>digit-sequence<ept id=\"p2\">*</ept>  <bpt id=\"p3\">**</bpt>\"<ept id=\"p3\">**</ept> <bpt id=\"p4\">*</bpt>filename<ept id=\"p4\">*</ept> <bpt id=\"p5\">**</bpt>\"<ept id=\"p5\">**</ept>opt","source":"**#line**  *digit-sequence*  **\"** *filename* **\"**opt"},{"pos":[1031,1058],"content":"<bpt id=\"p1\">*</bpt><ph id=\"ph1\">#</ph><ept id=\"p1\">*</ept> <bpt id=\"p2\">**</bpt>undef<ept id=\"p2\">**</ept>  <bpt id=\"p3\">*</bpt>identifier<ept id=\"p3\">*</ept>","source":"*#* **undef**  *identifier*"},{"pos":[1065,1091],"content":"<bpt id=\"p1\">**</bpt>#error<ept id=\"p1\">**</ept>  <bpt id=\"p2\">*</bpt>token-string<ept id=\"p2\">*</ept>","source":"**#error**  *token-string*"},{"pos":[1098,1125],"content":"<bpt id=\"p1\">**</bpt>#pragma<ept id=\"p1\">**</ept>  <bpt id=\"p2\">*</bpt>token-string<ept id=\"p2\">*</ept>","source":"**#pragma**  *token-string*"},{"content":"<bpt id=\"p1\">*</bpt>conditional<ept id=\"p1\">*</ept> :","pos":[1132,1147],"source":"*conditional* :"},{"content":"<bpt id=\"p1\"> *</bpt>if-part elif-parts<ept id=\"p1\">*</ept>opt<bpt id=\"p2\">*</bpt>else-part<ept id=\"p2\">*</ept>opt<bpt id=\"p3\">*</bpt>endif-line<ept id=\"p3\">*</ept>","pos":[1150,1200],"source":" *if-part elif-parts*opt*else-part*opt*endif-line*"},{"content":"<bpt id=\"p1\">*</bpt>if-part<ept id=\"p1\">*</ept> :","pos":[1207,1218],"source":"*if-part* :"},{"content":"if-linetext","pos":[1223,1234]},{"content":"<bpt id=\"p1\">*</bpt>if-line<ept id=\"p1\">*</ept> :","pos":[1242,1253],"source":"*if-line* :"},{"content":"<bpt id=\"p1\"> **</bpt>#if<ept id=\"p1\">**</ept>  <bpt id=\"p2\">*</bpt>constant-expression<ept id=\"p2\">*</ept>","pos":[1256,1287],"source":" **#if**  *constant-expression*"},{"pos":[1294,1318],"content":"<bpt id=\"p1\">**</bpt>#ifdef<ept id=\"p1\">**</ept>  <bpt id=\"p2\">*</bpt>identifier<ept id=\"p2\">*</ept>","source":"**#ifdef**  *identifier*"},{"pos":[1325,1350],"content":"<bpt id=\"p1\">**</bpt>#ifndef<ept id=\"p1\">**</ept>  <bpt id=\"p2\">*</bpt>identifier<ept id=\"p2\">*</ept>","source":"**#ifndef**  *identifier*"},{"content":"<bpt id=\"p1\">*</bpt>elif-parts<ept id=\"p1\">*</ept> :","pos":[1357,1371],"source":"*elif-parts* :"},{"content":"elif-line text","pos":[1376,1390]},{"content":"elif-parts elif-line text","pos":[1399,1424]},{"content":"<bpt id=\"p1\">*</bpt>elif-line<ept id=\"p1\">*</ept> :","pos":[1432,1445],"source":"*elif-line* :"},{"content":"<bpt id=\"p1\"> **</bpt>#elif<ept id=\"p1\">**</ept>  <bpt id=\"p2\">*</bpt>constant-expression<ept id=\"p2\">*</ept>","pos":[1448,1481],"source":" **#elif**  *constant-expression*"},{"content":"<bpt id=\"p1\">*</bpt>else-part<ept id=\"p1\">*</ept> :","pos":[1488,1501],"source":"*else-part* :"},{"content":"else-linetext","pos":[1506,1519]},{"content":"<bpt id=\"p1\">*</bpt>else-line<ept id=\"p1\">*</ept> :","pos":[1527,1540],"source":"*else-line* :"},{"content":"<bpt id=\"p1\">*</bpt>endif-line<ept id=\"p1\">*</ept> :","pos":[1558,1572],"source":"*endif-line* :"},{"content":"<bpt id=\"p1\">*</bpt>digit-sequence<ept id=\"p1\">*</ept> :","pos":[1591,1609],"source":"*digit-sequence* :"},{"content":"digit","pos":[1614,1619]},{"content":"digit-sequence digit","pos":[1628,1648]},{"content":"<bpt id=\"p1\">*</bpt>digit<ept id=\"p1\">*</ept> : one of","pos":[1656,1672],"source":"*digit* : one of"},{"content":"0 1 2 3 4 5 6 7 8 9","pos":[1678,1697]},{"content":"<bpt id=\"p1\">*</bpt>token-string<ept id=\"p1\">*</ept> :","pos":[1706,1722],"source":"*token-string* :"},{"content":"String of tokens","pos":[1726,1742]},{"content":"<bpt id=\"p1\">*</bpt>token<ept id=\"p1\">*</ept> :","pos":[1749,1758],"source":"*token* :"},{"content":"keyword","pos":[1763,1770]},{"content":"identifier","pos":[1779,1789]},{"content":"constant","pos":[1798,1806]},{"content":"operator","pos":[1815,1823]},{"content":"<bpt id=\"p1\">*</bpt>filename<ept id=\"p1\">*</ept> :","pos":[1850,1862],"source":"*filename* :"},{"content":"Legal operating system filename","pos":[1866,1897]},{"content":"<bpt id=\"p1\">*</bpt>path-spec<ept id=\"p1\">*</ept> :","pos":[1904,1917],"source":"*path-spec* :"},{"content":"Legal file path","pos":[1921,1936]},{"content":"<bpt id=\"p1\">*</bpt>text<ept id=\"p1\">*</ept> :","pos":[1943,1951],"source":"*text* :"},{"content":"Any sequence of text","pos":[1955,1975]},{"pos":[1983,2226],"content":"[!NOTE]\n The following nonterminals are expanded in the [Lexical Conventions](../cpp/lexical-conventions.md) section of the *C++ Language Reference*: `constant`, `constant`-*expression*, *identifier*, *keyword*, `operator`, and `punctuator`.","leadings":["","> "],"nodes":[{"content":"The following nonterminals are expanded in the <bpt id=\"p1\">[</bpt>Lexical Conventions<ept id=\"p1\">](../cpp/lexical-conventions.md)</ept> section of the <bpt id=\"p2\">*</bpt>C++ Language Reference<ept id=\"p2\">*</ept>: <ph id=\"ph1\">`constant`</ph>, <ph id=\"ph2\">`constant`-</ph><bpt id=\"p3\">*</bpt>expression<ept id=\"p3\">*</ept>, <bpt id=\"p4\">*</bpt>identifier<ept id=\"p4\">*</ept>, <bpt id=\"p5\">*</bpt>keyword<ept id=\"p5\">*</ept>, <ph id=\"ph3\">`operator`</ph>, and <ph id=\"ph4\">`punctuator`</ph>.","pos":[9,241],"source":" The following nonterminals are expanded in the [Lexical Conventions](../cpp/lexical-conventions.md) section of the *C++ Language Reference*: `constant`, `constant`-*expression*, *identifier*, *keyword*, `operator`, and `punctuator`."}]},{"content":"See Also","pos":[2235,2243]},{"content":"Grammar Summary (C/C++)","pos":[2248,2271]}],"content":"---\ntitle: \"Preprocessor Grammar | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"preprocessor\"\n  - \"grammar, preprocessor\"\n  - \"preprocessor, grammar\"\nms.assetid: 6cd33fad-0b08-4592-9be8-7359c43e24e9\ncaps.latest.revision: 7\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Preprocessor Grammar\n**#define**  *identifier* *token-string*opt  \n  \n *#* **define**  *identifier*[**(** *identifier*opt**,** *...* **,** *identifier*opt **)**] *token-string*opt  \n  \n **defined(**  *identifier* **)**  \n  \n **defined**  *identifier*  \n  \n `#include` **\"***path-spec***\"**  \n  \n `#include` **\\<***path-spec***>**  \n  \n **#line**  *digit-sequence*  **\"** *filename* **\"**opt  \n  \n *#* **undef**  *identifier*  \n  \n **#error**  *token-string*  \n  \n **#pragma**  *token-string*  \n  \n *conditional* :  \n *if-part elif-parts*opt*else-part*opt*endif-line*  \n  \n *if-part* :  \n *if-linetext*  \n  \n *if-line* :  \n **#if**  *constant-expression*  \n  \n **#ifdef**  *identifier*  \n  \n **#ifndef**  *identifier*  \n  \n *elif-parts* :  \n *elif-line text*  \n  \n *elif-parts elif-line text*  \n  \n *elif-line* :  \n **#elif**  *constant-expression*  \n  \n *else-part* :  \n *else-linetext*  \n  \n *else-line* :  \n `#else`  \n  \n *endif-line* :  \n `#endif`  \n  \n *digit-sequence* :  \n *digit*  \n  \n *digit-sequence digit*  \n  \n *digit* : one of  \n **0 1 2 3 4 5 6 7 8 9**  \n  \n *token-string* :  \n String of tokens  \n  \n *token* :  \n *keyword*  \n  \n *identifier*  \n  \n *constant*  \n  \n *operator*  \n  \n `punctuator`  \n  \n *filename* :  \n Legal operating system filename  \n  \n *path-spec* :  \n Legal file path  \n  \n *text* :  \n Any sequence of text  \n  \n> [!NOTE]\n>  The following nonterminals are expanded in the [Lexical Conventions](../cpp/lexical-conventions.md) section of the *C++ Language Reference*: `constant`, `constant`-*expression*, *identifier*, *keyword*, `operator`, and `punctuator`.  \n  \n## See Also  \n [Grammar Summary (C/C++)](../preprocessor/grammar-summary-c-cpp.md)"}