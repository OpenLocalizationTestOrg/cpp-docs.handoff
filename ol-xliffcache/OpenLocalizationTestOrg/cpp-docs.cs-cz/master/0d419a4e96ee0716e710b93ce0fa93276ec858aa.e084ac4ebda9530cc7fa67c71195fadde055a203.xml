{"nodes":[{"pos":[12,61],"content":"Compiler Warning (level 4) C4435 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Warning (level 4) C4435 | Microsoft Docs","pos":[0,49]}]},{"content":"Compiler Warning (level 4) C4435","pos":[549,581]},{"content":"'class1' : Object layout under /vd2 will change due to virtual base 'class2'","pos":[582,658]},{"content":"This warning is off by default.","pos":[665,696]},{"content":"See <bpt id=\"p1\">[</bpt>Compiler Warnings That Are Off by Default<ept id=\"p1\">](../../preprocessor/compiler-warnings-that-are-off-by-default.md)</ept> for more information.","pos":[697,831],"source":" See [Compiler Warnings That Are Off by Default](../../preprocessor/compiler-warnings-that-are-off-by-default.md) for more information."},{"content":"Under the default compile option of /vd1, the derived class does not have a <ph id=\"ph1\">`vtordisp`</ph> field for the indicated virtual base.","pos":[838,962],"source":"Under the default compile option of /vd1, the derived class does not have a `vtordisp` field for the indicated virtual base."},{"content":"If /vd2 or <ph id=\"ph1\">`#pragma vtordisp(2)`</ph> is in effect, a <ph id=\"ph2\">`vtordisp`</ph> field will be present, changing the object layout.","pos":[964,1074],"source":"  If /vd2 or `#pragma vtordisp(2)` is in effect, a `vtordisp` field will be present, changing the object layout."},{"content":"This can lead to binary compatibility problems if interacting modules are compiled with different <ph id=\"ph1\">`vtordisp`</ph> settings.","pos":[1076,1194],"source":"  This can lead to binary compatibility problems if interacting modules are compiled with different `vtordisp` settings."},{"content":"Example","pos":[1203,1210]},{"content":"The following sample generates C4435.","pos":[1214,1251]},{"content":"See Also","pos":[1452,1460]},{"content":"vtordisp","pos":[1465,1473]},{"content":"/vd (Disable Construction Displacements)","pos":[1512,1552]}],"content":"---\ntitle: \"Compiler Warning (level 4) C4435 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\ndev_langs: \n  - \"C++\"\nms.assetid: a04524af-2b71-4ff9-9729-d9d1d1904ed7\ncaps.latest.revision: 2\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Warning (level 4) C4435\n'class1' : Object layout under /vd2 will change due to virtual base 'class2'  \n  \n This warning is off by default. See [Compiler Warnings That Are Off by Default](../../preprocessor/compiler-warnings-that-are-off-by-default.md) for more information.  \n  \n Under the default compile option of /vd1, the derived class does not have a `vtordisp` field for the indicated virtual base.  If /vd2 or `#pragma vtordisp(2)` is in effect, a `vtordisp` field will be present, changing the object layout.  This can lead to binary compatibility problems if interacting modules are compiled with different `vtordisp` settings.  \n  \n## Example  \n The following sample generates C4435.  \n  \n```cpp  \n// C4435.cpp  \n// compile with: /c /W4  \n#pragma warning(default : 4435)  \nclass A  \n{  \npublic:  \n    virtual ~A() {}  \n};  \n  \nclass B : public virtual A  // C4435  \n{};  \n```  \n  \n## See Also  \n [vtordisp](../../preprocessor/vtordisp.md)   \n [/vd (Disable Construction Displacements)](../../build/reference/vd-disable-construction-displacements.md)"}