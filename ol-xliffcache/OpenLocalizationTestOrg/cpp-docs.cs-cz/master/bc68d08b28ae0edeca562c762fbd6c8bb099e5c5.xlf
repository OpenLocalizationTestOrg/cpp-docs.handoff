<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bc68d08b28ae0edeca562c762fbd6c8bb099e5c5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\build\reference\using-verify-instead-of-assert.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c29a5869ef766794c7d33e839af422d6b6f2d1e0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">257cc5037f29e96d8de5513d64c18ffcec976251</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Using VERIFY Instead of ASSERT | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Using VERIFY Instead of ASSERT</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Suppose that when you run the debug version of your MFC application, there are no problems.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>However, the release version of the same application crashes, returns incorrect results, and/or exhibits some other abnormal behavior.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This problem can be caused when you place important code in an ASSERT statement to verify that it performs correctly.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Because ASSERT statements are commented out in a release build of an MFC program, the code does not run in a release build.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If you are using ASSERT to confirm that a function call succeeded, consider using <bpt id="p1">[</bpt>VERIFY<ept id="p1">](http://msdn.microsoft.com/Library/3e1ab4ee-cbc7-4290-a777-c92f42ce7b96)</ept> instead.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The VERIFY macro evaluates its own arguments in both debug and release builds of the application.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Another preferred technique is to assign the function's return value to a temporary variable and then test the variable in an ASSERT statement.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Examine the following code fragment:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This code runs perfectly in a debug version of an MFC application.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If the call to <ph id="ph1">`calloc( )`</ph> fails, a diagnostic message that includes the file and line number appears.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>However, in a retail build of an MFC application:</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>the call to <ph id="ph1">`calloc( )`</ph> never occurs, leaving <ph id="ph2">`buf`</ph> uninitialized, or</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>copies "<ph id="ph1">`Hello, World`</ph>" into a random piece of memory, possibly crashing the application or causing the system to stop responding, or</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>attempts to free memory that was never allocated.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To use ASSERT correctly, the code sample should be changed to the following:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Or, you can use VERIFY instead:</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Fixing Release Build Problems</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>