{"nodes":[{"pos":[12,48],"content":"CMFCPopupMenu Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CMFCPopupMenu Class | Microsoft Docs","pos":[0,36]}]},{"pos":[613,632],"content":"CMFCPopupMenu Class","linkify":"CMFCPopupMenu Class","nodes":[{"content":"CMFCPopupMenu Class","pos":[0,19]}]},{"content":"Implements Windows pop-up menu functionality and extends it by adding features such as tear-off menus and tooltips.","pos":[633,748]},{"pos":[757,763],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[832,839],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[849,871],"content":"Protected Constructors","linkify":"Protected Constructors","nodes":[{"content":"Protected Constructors","pos":[0,22]}]},{"content":"Name","pos":[878,882]},{"content":"Description","pos":[883,894]},{"pos":[932,993],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::CMFCPopupMenu<ept id=\"p1\">](#cmfcpopupmenu__cmfcpopupmenu)</ept>","source":"[CMFCPopupMenu::CMFCPopupMenu](#cmfcpopupmenu__cmfcpopupmenu)"},{"pos":[994,1030],"content":"Constructs a <ph id=\"ph1\">`CMFCPopupMenu`</ph> object.","source":"Constructs a `CMFCPopupMenu` object."},{"pos":[1041,1055],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1062,1066]},{"content":"Description","pos":[1067,1078]},{"pos":[1116,1185],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::ActivatePopupMenu<ept id=\"p1\">](#cmfcpopupmenu__activatepopupmenu)</ept>","source":"[CMFCPopupMenu::ActivatePopupMenu](#cmfcpopupmenu__activatepopupmenu)"},{"pos":[1191,1276],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::AlwaysShowEmptyToolsEntry<ept id=\"p1\">](#cmfcpopupmenu__alwaysshowemptytoolsentry)</ept>","source":"[CMFCPopupMenu::AlwaysShowEmptyToolsEntry](#cmfcpopupmenu__alwaysshowemptytoolsentry)"},{"content":"Sets whether a pop-up menu is enabled to show empty entries for user-defined tools.","pos":[1277,1360]},{"pos":[1365,1438],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::AreAllCommandsShown<ept id=\"p1\">](#cmfcpopupmenu__areallcommandsshown)</ept>","source":"[CMFCPopupMenu::AreAllCommandsShown](#cmfcpopupmenu__areallcommandsshown)"},{"pos":[1444,1497],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::CheckArea<ept id=\"p1\">](#cmfcpopupmenu__checkarea)</ept>","source":"[CMFCPopupMenu::CheckArea](#cmfcpopupmenu__checkarea)"},{"content":"Determines the location of a point relative to the pop-up menu.","pos":[1498,1561]},{"pos":[1566,1619],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::CloseMenu<ept id=\"p1\">](#cmfcpopupmenu__closemenu)</ept>","source":"[CMFCPopupMenu::CloseMenu](#cmfcpopupmenu__closemenu)"},{"pos":[1625,1672],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::Create<ept id=\"p1\">](#cmfcpopupmenu__create)</ept>","source":"[CMFCPopupMenu::Create](#cmfcpopupmenu__create)"},{"pos":[1673,1741],"content":"Creates a pop-up menu and attaches it to the <ph id=\"ph1\">`CMFCPopupMenu`</ph> object.","source":"Creates a pop-up menu and attaches it to the `CMFCPopupMenu` object."},{"pos":[1746,1829],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::DefaultMouseClickOnClose<ept id=\"p1\">](#cmfcpopupmenu__defaultmouseclickonclose)</ept>","source":"[CMFCPopupMenu::DefaultMouseClickOnClose](#cmfcpopupmenu__defaultmouseclickonclose)"},{"pos":[1835,1898],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::EnableMenuLogo<ept id=\"p1\">](#cmfcpopupmenu__enablemenulogo)</ept>","source":"[CMFCPopupMenu::EnableMenuLogo](#cmfcpopupmenu__enablemenulogo)"},{"content":"Initializes the logo for a pop-up menu.","pos":[1899,1938]},{"pos":[1943,2008],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::EnableMenuSound<ept id=\"p1\">](#cmfcpopupmenu__enablemenusound)</ept>","source":"[CMFCPopupMenu::EnableMenuSound](#cmfcpopupmenu__enablemenusound)"},{"content":"Enables menu sound.","pos":[2009,2028]},{"pos":[2033,2092],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::EnableResize<ept id=\"p1\">](#cmfcpopupmenu__enableresize)</ept>","source":"[CMFCPopupMenu::EnableResize](#cmfcpopupmenu__enableresize)"},{"pos":[2098,2163],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::EnableScrolling<ept id=\"p1\">](#cmfcpopupmenu__enablescrolling)</ept>","source":"[CMFCPopupMenu::EnableScrolling](#cmfcpopupmenu__enablescrolling)"},{"pos":[2169,2236],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::EnableVertResize<ept id=\"p1\">](#cmfcpopupmenu__enablevertresize)</ept>","source":"[CMFCPopupMenu::EnableVertResize](#cmfcpopupmenu__enablevertresize)"},{"pos":[2242,2317],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::FindSubItemByCommand<ept id=\"p1\">](#cmfcpopupmenu__findsubitembycommand)</ept>","source":"[CMFCPopupMenu::FindSubItemByCommand](#cmfcpopupmenu__findsubitembycommand)"},{"pos":[2323,2384],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::GetActiveMenu<ept id=\"p1\">](#cmfcpopupmenu__getactivemenu)</ept>","source":"[CMFCPopupMenu::GetActiveMenu](#cmfcpopupmenu__getactivemenu)"},{"content":"Returns the currently active menu.","pos":[2385,2419]},{"pos":[2424,2493],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::GetAnimationSpeed<ept id=\"p1\">](#cmfcpopupmenu__getanimationspeed)</ept>","source":"[CMFCPopupMenu::GetAnimationSpeed](#cmfcpopupmenu__getanimationspeed)"},{"content":"Returns the animation speed for pop-up menus.","pos":[2494,2539]},{"pos":[2544,2611],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::GetAnimationType<ept id=\"p1\">](#cmfcpopupmenu__getanimationtype)</ept>","source":"[CMFCPopupMenu::GetAnimationType](#cmfcpopupmenu__getanimationtype)"},{"content":"Returns the current type of pop-up menu animation.","pos":[2612,2662]},{"pos":[2667,2734],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::GetDropDirection<ept id=\"p1\">](#cmfcpopupmenu__getdropdirection)</ept>","source":"[CMFCPopupMenu::GetDropDirection](#cmfcpopupmenu__getdropdirection)"},{"pos":[2740,2809],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::GetForceMenuFocus<ept id=\"p1\">](#cmfcpopupmenu__getforcemenufocus)</ept>","source":"[CMFCPopupMenu::GetForceMenuFocus](#cmfcpopupmenu__getforcemenufocus)"},{"content":"Indicates whether the focus is returned to the menu bar when a pop-up menu is displayed.","pos":[2810,2898]},{"pos":[2903,2966],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::GetForceShadow<ept id=\"p1\">](#cmfcpopupmenu__getforceshadow)</ept>","source":"[CMFCPopupMenu::GetForceShadow](#cmfcpopupmenu__getforceshadow)"},{"pos":[2972,3023],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::GetHMenu<ept id=\"p1\">](#cmfcpopupmenu__gethmenu)</ept>","source":"[CMFCPopupMenu::GetHMenu](#cmfcpopupmenu__gethmenu)"},{"content":"Returns a handle to the attached menu resource.","pos":[3024,3071]},{"pos":[3076,3131],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::GetMenuBar<ept id=\"p1\">](#cmfcpopupmenu__getmenubar)</ept>","source":"[CMFCPopupMenu::GetMenuBar](#cmfcpopupmenu__getmenubar)"},{"pos":[3132,3242],"content":"Returns the <bpt id=\"p1\">[</bpt>CMFCPopupMenuBar<ept id=\"p1\">](../../mfc/reference/cmfcpopupmenubar-class.md)</ept> embedded inside the pop-up menu.","source":"Returns the [CMFCPopupMenuBar](../../mfc/reference/cmfcpopupmenubar-class.md) embedded inside the pop-up menu."},{"pos":[3247,3304],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::GetMenuItem<ept id=\"p1\">](#cmfcpopupmenu__getmenuitem)</ept>","source":"[CMFCPopupMenu::GetMenuItem](#cmfcpopupmenu__getmenuitem)"},{"content":"Returns a pointer to the menu item at the specified index.","pos":[3305,3363]},{"pos":[3368,3435],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::GetMenuItemCount<ept id=\"p1\">](#cmfcpopupmenu__getmenuitemcount)</ept>","source":"[CMFCPopupMenu::GetMenuItemCount](#cmfcpopupmenu__getmenuitemcount)"},{"content":"Returns the number of items in a popup menu.","pos":[3436,3480]},{"pos":[3485,3546],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::GetMessageWnd<ept id=\"p1\">](#cmfcpopupmenu__getmessagewnd)</ept>","source":"[CMFCPopupMenu::GetMessageWnd](#cmfcpopupmenu__getmessagewnd)"},{"content":"Returns a pointer to the window where the framework routes the pop-up menu messages.","pos":[3547,3631]},{"pos":[3636,3697],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::GetParentArea<ept id=\"p1\">](#cmfcpopupmenu__getparentarea)</ept>","source":"[CMFCPopupMenu::GetParentArea](#cmfcpopupmenu__getparentarea)"},{"pos":[3703,3768],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::GetParentButton<ept id=\"p1\">](#cmfcpopupmenu__getparentbutton)</ept>","source":"[CMFCPopupMenu::GetParentButton](#cmfcpopupmenu__getparentbutton)"},{"content":"Returns a pointer to the parent toolbar button.","pos":[3769,3816]},{"pos":[3821,3892],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::GetParentPopupMenu<ept id=\"p1\">](#cmfcpopupmenu__getparentpopupmenu)</ept>","source":"[CMFCPopupMenu::GetParentPopupMenu](#cmfcpopupmenu__getparentpopupmenu)"},{"content":"Returns a pointer to the parent pop-up menu.","pos":[3893,3937]},{"pos":[3942,4021],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::GetParentRibbonElement<ept id=\"p1\">](#cmfcpopupmenu__getparentribbonelement)</ept>","source":"[CMFCPopupMenu::GetParentRibbonElement](#cmfcpopupmenu__getparentribbonelement)"},{"pos":[4027,4094],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::GetParentToolBar<ept id=\"p1\">](#cmfcpopupmenu__getparenttoolbar)</ept>","source":"[CMFCPopupMenu::GetParentToolBar](#cmfcpopupmenu__getparenttoolbar)"},{"content":"Returns a pointer to the parent toolbar.","pos":[4095,4135]},{"pos":[4140,4217],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::GetQuickCustomizeType<ept id=\"p1\">](#cmfcpopupmenu__getquickcustomizetype)</ept>","source":"[CMFCPopupMenu::GetQuickCustomizeType](#cmfcpopupmenu__getquickcustomizetype)"},{"pos":[4223,4278],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::GetSelItem<ept id=\"p1\">](#cmfcpopupmenu__getselitem)</ept>","source":"[CMFCPopupMenu::GetSelItem](#cmfcpopupmenu__getselitem)"},{"content":"Returns a pointer to the currently selected menu command.","pos":[4279,4336]},{"pos":[4341,4404],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::HasBeenResized<ept id=\"p1\">](#cmfcpopupmenu__hasbeenresized)</ept>","source":"[CMFCPopupMenu::HasBeenResized](#cmfcpopupmenu__hasbeenresized)"},{"pos":[4410,4489],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::HideRarelyUsedCommands<ept id=\"p1\">](#cmfcpopupmenu__hiderarelyusedcommands)</ept>","source":"[CMFCPopupMenu::HideRarelyUsedCommands](#cmfcpopupmenu__hiderarelyusedcommands)"},{"content":"Indicates whether the pop-up menu can hide rarely used commands.","pos":[4490,4554]},{"pos":[4559,4612],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::InCommand<ept id=\"p1\">](#cmfcpopupmenu__incommand)</ept>","source":"[CMFCPopupMenu::InCommand](#cmfcpopupmenu__incommand)"},{"pos":[4618,4673],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::InsertItem<ept id=\"p1\">](#cmfcpopupmenu__insertitem)</ept>","source":"[CMFCPopupMenu::InsertItem](#cmfcpopupmenu__insertitem)"},{"content":"Inserts a new item into the pop-up menu at the specified location.","pos":[4674,4740]},{"pos":[4745,4810],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::InsertSeparator<ept id=\"p1\">](#cmfcpopupmenu__insertseparator)</ept>","source":"[CMFCPopupMenu::InsertSeparator](#cmfcpopupmenu__insertseparator)"},{"content":"Inserts a separator into the pop-up menu at the specified location.","pos":[4811,4878]},{"pos":[4883,4944],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::IsAlwaysClose<ept id=\"p1\">](#cmfcpopupmenu__isalwaysclose)</ept>","source":"[CMFCPopupMenu::IsAlwaysClose](#cmfcpopupmenu__isalwaysclose)"},{"pos":[4950,5039],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::IsAlwaysShowEmptyToolsEntry<ept id=\"p1\">](#cmfcpopupmenu__isalwaysshowemptytoolsentry)</ept>","source":"[CMFCPopupMenu::IsAlwaysShowEmptyToolsEntry](#cmfcpopupmenu__isalwaysshowemptytoolsentry)"},{"pos":[5045,5110],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::IsCustomizePane<ept id=\"p1\">](#cmfcpopupmenu__iscustomizepane)</ept>","source":"[CMFCPopupMenu::IsCustomizePane](#cmfcpopupmenu__iscustomizepane)"},{"pos":[5111,5188],"content":"Indicates whether the pop-up menu is functioning as a <bpt id=\"p1\">**</bpt>QuickCustomizePane<ept id=\"p1\">**</ept>.","source":"Indicates whether the pop-up menu is functioning as a **QuickCustomizePane**."},{"pos":[5193,5248],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::IsEscClose<ept id=\"p1\">](#cmfcpopupmenu__isescclose)</ept>","source":"[CMFCPopupMenu::IsEscClose](#cmfcpopupmenu__isescclose)"},{"pos":[5254,5301],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::IsIdle<ept id=\"p1\">](#cmfcpopupmenu__isidle)</ept>","source":"[CMFCPopupMenu::IsIdle](#cmfcpopupmenu__isidle)"},{"content":"Indicates whether a pop-up menu is currently idle.","pos":[5302,5352]},{"pos":[5357,5414],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::IsMenuSound<ept id=\"p1\">](#cmfcpopupmenu__ismenusound)</ept>","source":"[CMFCPopupMenu::IsMenuSound](#cmfcpopupmenu__ismenusound)"},{"pos":[5420,5487],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::IsQuickCustomize<ept id=\"p1\">](#cmfcpopupmenu__isquickcustomize)</ept>","source":"[CMFCPopupMenu::IsQuickCustomize](#cmfcpopupmenu__isquickcustomize)"},{"pos":[5488,5630],"content":"Determines whether the associated <bpt id=\"p1\">[</bpt>CMFCToolBarMenuButton Class<ept id=\"p1\">](../../mfc/reference/cmfctoolbarmenubutton-class.md)</ept> is in QuickCustomize mode.","source":"Determines whether the associated [CMFCToolBarMenuButton Class](../../mfc/reference/cmfctoolbarmenubutton-class.md) is in QuickCustomize mode."},{"pos":[5635,5692],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::IsResizeble<ept id=\"p1\">](#cmfcpopupmenu__isresizeble)</ept>","source":"[CMFCPopupMenu::IsResizeble](#cmfcpopupmenu__isresizeble)"},{"pos":[5698,5757],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::IsRightAlign<ept id=\"p1\">](#cmfcpopupmenu__isrightalign)</ept>","source":"[CMFCPopupMenu::IsRightAlign](#cmfcpopupmenu__isrightalign)"},{"content":"Indicates whether the menu is right-aligned or left-aligned.","pos":[5758,5818]},{"pos":[5823,5882],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::IsScrollable<ept id=\"p1\">](#cmfcpopupmenu__isscrollable)</ept>","source":"[CMFCPopupMenu::IsScrollable](#cmfcpopupmenu__isscrollable)"},{"pos":[5888,5961],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::IsSendMenuSelectMsg<ept id=\"p1\">](#cmfcpopupmenu__issendmenuselectmsg)</ept>","source":"[CMFCPopupMenu::IsSendMenuSelectMsg](#cmfcpopupmenu__issendmenuselectmsg)"},{"content":"Indicates whether the framework notifies the parent frame when the user selects a command from the pop-up menu.","pos":[5962,6073]},{"pos":[6078,6127],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::IsShown<ept id=\"p1\">](#cmfcpopupmenu__isshown)</ept>","source":"[CMFCPopupMenu::IsShown](#cmfcpopupmenu__isshown)"},{"content":"Indicates whether the pop-up menu is currently visible.","pos":[6128,6183]},{"pos":[6188,6235],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::MoveTo<ept id=\"p1\">](#cmfcpopupmenu__moveto)</ept>","source":"[CMFCPopupMenu::MoveTo](#cmfcpopupmenu__moveto)"},{"pos":[6241,6292],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::OnCmdMsg<ept id=\"p1\">](#cmfcpopupmenu__oncmdmsg)</ept>","source":"[CMFCPopupMenu::OnCmdMsg](#cmfcpopupmenu__oncmdmsg)"},{"pos":[6293,6327],"content":"(Overrides <ph id=\"ph1\">`CFrameWnd::OnCmdMsg`</ph>.)","source":"(Overrides `CFrameWnd::OnCmdMsg`.)"},{"pos":[6332,6389],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::PostCommand<ept id=\"p1\">](#cmfcpopupmenu__postcommand)</ept>","source":"[CMFCPopupMenu::PostCommand](#cmfcpopupmenu__postcommand)"},{"pos":[6395,6468],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::PreTranslateMessage<ept id=\"p1\">](#cmfcpopupmenu__pretranslatemessage)</ept>","source":"[CMFCPopupMenu::PreTranslateMessage](#cmfcpopupmenu__pretranslatemessage)"},{"pos":[6469,6514],"content":"(Overrides <ph id=\"ph1\">`CFrameWnd::PreTranslateMessage`</ph>.)","source":"(Overrides `CFrameWnd::PreTranslateMessage`.)"},{"pos":[6519,6578],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::RecalcLayout<ept id=\"p1\">](#cmfcpopupmenu__recalclayout)</ept>","source":"[CMFCPopupMenu::RecalcLayout](#cmfcpopupmenu__recalclayout)"},{"content":"Called by the framework when the standard control bars are toggled on or off or when the frame window is resized.","pos":[6579,6692]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CFrameWnd::RecalcLayout<ept id=\"p1\">](../../mfc/reference/cframewnd-class.md#cframewnd__recalclayout)</ept>.)","pos":[6693,6795],"source":" (Overrides [CFrameWnd::RecalcLayout](../../mfc/reference/cframewnd-class.md#cframewnd__recalclayout).)"},{"pos":[6800,6863],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::RemoveAllItems<ept id=\"p1\">](#cmfcpopupmenu__removeallitems)</ept>","source":"[CMFCPopupMenu::RemoveAllItems](#cmfcpopupmenu__removeallitems)"},{"content":"Clears all the items from a pop-up menu.","pos":[6864,6904]},{"pos":[6909,6964],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::RemoveItem<ept id=\"p1\">](#cmfcpopupmenu__removeitem)</ept>","source":"[CMFCPopupMenu::RemoveItem](#cmfcpopupmenu__removeitem)"},{"content":"Removes the specified item from a pop-up menu.","pos":[6965,7011]},{"pos":[7016,7069],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::SaveState<ept id=\"p1\">](#cmfcpopupmenu__savestate)</ept>","source":"[CMFCPopupMenu::SaveState](#cmfcpopupmenu__savestate)"},{"pos":[7075,7144],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::SetAnimationSpeed<ept id=\"p1\">](#cmfcpopupmenu__setanimationspeed)</ept>","source":"[CMFCPopupMenu::SetAnimationSpeed](#cmfcpopupmenu__setanimationspeed)"},{"content":"Sets the animation speed for pop-up menus.","pos":[7145,7187]},{"pos":[7192,7259],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::SetAnimationType<ept id=\"p1\">](#cmfcpopupmenu__setanimationtype)</ept>","source":"[CMFCPopupMenu::SetAnimationType](#cmfcpopupmenu__setanimationtype)"},{"content":"Sets the animation type for the pop-up menu.","pos":[7260,7304]},{"pos":[7309,7372],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::SetAutoDestroy<ept id=\"p1\">](#cmfcpopupmenu__setautodestroy)</ept>","source":"[CMFCPopupMenu::SetAutoDestroy](#cmfcpopupmenu__setautodestroy)"},{"pos":[7378,7441],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::SetDefaultItem<ept id=\"p1\">](#cmfcpopupmenu__setdefaultitem)</ept>","source":"[CMFCPopupMenu::SetDefaultItem](#cmfcpopupmenu__setdefaultitem)"},{"content":"Sets the default command for the pop-up menu.","pos":[7442,7487]},{"pos":[7492,7561],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::SetForceMenuFocus<ept id=\"p1\">](#cmfcpopupmenu__setforcemenufocus)</ept>","source":"[CMFCPopupMenu::SetForceMenuFocus](#cmfcpopupmenu__setforcemenufocus)"},{"content":"Forces the input focus to return to the menu bar when a pop-up menu is displayed.","pos":[7562,7643]},{"pos":[7648,7711],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::SetForceShadow<ept id=\"p1\">](#cmfcpopupmenu__setforceshadow)</ept>","source":"[CMFCPopupMenu::SetForceShadow](#cmfcpopupmenu__setforceshadow)"},{"content":"Forces the framework to draw menu shadows when pop-up menus appear outside the main frame.","pos":[7712,7802]},{"pos":[7807,7864],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::SetMaxWidth<ept id=\"p1\">](#cmfcpopupmenu__setmaxwidth)</ept>","source":"[CMFCPopupMenu::SetMaxWidth](#cmfcpopupmenu__setmaxwidth)"},{"content":"Set the maximum width for the pop-up menu.","pos":[7865,7907]},{"pos":[7912,7973],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::SetMessageWnd<ept id=\"p1\">](#cmfcpopupmenu__setmessagewnd)</ept>","source":"[CMFCPopupMenu::SetMessageWnd](#cmfcpopupmenu__setmessagewnd)"},{"pos":[7979,8058],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::SetParentRibbonElement<ept id=\"p1\">](#cmfcpopupmenu__setparentribbonelement)</ept>","source":"[CMFCPopupMenu::SetParentRibbonElement](#cmfcpopupmenu__setparentribbonelement)"},{"pos":[8064,8141],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::SetQuickCustomizeType<ept id=\"p1\">](#cmfcpopupmenu__setquickcustomizetype)</ept>","source":"[CMFCPopupMenu::SetQuickCustomizeType](#cmfcpopupmenu__setquickcustomizetype)"},{"pos":[8147,8206],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::SetQuickMode<ept id=\"p1\">](#cmfcpopupmenu__setquickmode)</ept>","source":"[CMFCPopupMenu::SetQuickMode](#cmfcpopupmenu__setquickmode)"},{"pos":[8212,8273],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::SetRightAlign<ept id=\"p1\">](#cmfcpopupmenu__setrightalign)</ept>","source":"[CMFCPopupMenu::SetRightAlign](#cmfcpopupmenu__setrightalign)"},{"content":"Sets the menu alignment for pop-up menus.","pos":[8274,8315]},{"pos":[8320,8395],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::SetSendMenuSelectMsg<ept id=\"p1\">](#cmfcpopupmenu__setsendmenuselectmsg)</ept>","source":"[CMFCPopupMenu::SetSendMenuSelectMsg](#cmfcpopupmenu__setsendmenuselectmsg)"},{"content":"Sets a flag that controls whether the pop-up menu notifies its parent frame when the user selects a command.","pos":[8396,8504]},{"pos":[8509,8574],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::ShowAllCommands<ept id=\"p1\">](#cmfcpopupmenu__showallcommands)</ept>","source":"[CMFCPopupMenu::ShowAllCommands](#cmfcpopupmenu__showallcommands)"},{"content":"Forces the pop-up menu to display all commands.","pos":[8575,8622]},{"pos":[8627,8688],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::TriggerResize<ept id=\"p1\">](#cmfcpopupmenu__triggerresize)</ept>","source":"[CMFCPopupMenu::TriggerResize](#cmfcpopupmenu__triggerresize)"},{"pos":[8694,8761],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::UpdateAllShadows<ept id=\"p1\">](#cmfcpopupmenu__updateallshadows)</ept>","source":"[CMFCPopupMenu::UpdateAllShadows](#cmfcpopupmenu__updateallshadows)"},{"content":"Updates the shadows for all opened pop-up menus.","pos":[8762,8810]},{"pos":[8815,8874],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::UpdateShadow<ept id=\"p1\">](#cmfcpopupmenu__updateshadow)</ept>","source":"[CMFCPopupMenu::UpdateShadow](#cmfcpopupmenu__updateshadow)"},{"content":"Updates the shadow for the pop-up menu.","pos":[8875,8914]},{"pos":[8925,8942],"content":"Protected Methods","linkify":"Protected Methods","nodes":[{"content":"Protected Methods","pos":[0,17]}]},{"content":"Name","pos":[8949,8953]},{"content":"Description","pos":[8954,8965]},{"pos":[9003,9070],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::CreateTearOffBar<ept id=\"p1\">](#cmfcpopupmenu__createtearoffbar)</ept>","source":"[CMFCPopupMenu::CreateTearOffBar](#cmfcpopupmenu__createtearoffbar)"},{"pos":[9076,9133],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::OnChangeHot<ept id=\"p1\">](#cmfcpopupmenu__onchangehot)</ept>","source":"[CMFCPopupMenu::OnChangeHot](#cmfcpopupmenu__onchangehot)"},{"pos":[9139,9198],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu::OnChooseItem<ept id=\"p1\">](#cmfcpopupmenu__onchooseitem)</ept>","source":"[CMFCPopupMenu::OnChooseItem](#cmfcpopupmenu__onchooseitem)"},{"pos":[9210,9217],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Normally, MFC creates pop-up menus automatically.","pos":[9221,9270]},{"content":"If you want to create a <ph id=\"ph1\">`CMFCPopupMenu`</ph> object manually, allocate one on the heap and then call <bpt id=\"p1\">[</bpt>CMFCPopupMenu::Create<ept id=\"p1\">](#cmfcpopupmenu__create)</ept>.","pos":[9271,9415],"source":" If you want to create a `CMFCPopupMenu` object manually, allocate one on the heap and then call [CMFCPopupMenu::Create](#cmfcpopupmenu__create)."},{"pos":[9424,9431],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example demonstrates how to configure a pop-up menu object.","pos":[9435,9508]},{"content":"The example shows how to set the logo and the sound of the pop-up menu, set the animation speed and type, draw menu shadows when the pop-up menu appears outside the main frame, set the maximum width, and set the right menu alignment of the pop-up menu.","pos":[9509,9761]},{"content":"This code snippet is part of the <bpt id=\"p1\">[</bpt>Custom Pages sample<ept id=\"p1\">](../../visual-cpp-samples.md)</ept>.","pos":[9762,9846],"source":" This code snippet is part of the [Custom Pages sample](../../visual-cpp-samples.md)."},{"pos":[9853,9950],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CustomPages#2<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cmfcpopupmenu-class_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CustomPages#2](../../mfc/reference/codesnippet/cpp/cmfcpopupmenu-class_1.cpp)]"},{"pos":[9959,9980],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[9984,10031],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[10038,10091],"content":"<bpt id=\"p1\">[</bpt>CCmdTarget<ept id=\"p1\">](../../mfc/reference/ccmdtarget-class.md)</ept>","source":"[CCmdTarget](../../mfc/reference/ccmdtarget-class.md)"},{"pos":[10098,10139],"content":"<bpt id=\"p1\">[</bpt>CWnd<ept id=\"p1\">](../../mfc/reference/cwnd-class.md)</ept>","source":"[CWnd](../../mfc/reference/cwnd-class.md)"},{"pos":[10146,10197],"content":"<bpt id=\"p1\">[</bpt>CFrameWnd<ept id=\"p1\">](../../mfc/reference/cframewnd-class.md)</ept>","source":"[CFrameWnd](../../mfc/reference/cframewnd-class.md)"},{"pos":[10204,10263],"content":"<bpt id=\"p1\">[</bpt>CMiniFrameWnd<ept id=\"p1\">](../../mfc/reference/cminiframewnd-class.md)</ept>","source":"[CMiniFrameWnd](../../mfc/reference/cminiframewnd-class.md)"},{"pos":[10270,10329],"content":"<bpt id=\"p1\">[</bpt>CMFCPopupMenu<ept id=\"p1\">](../../mfc/reference/cmfcpopupmenu-class.md)</ept>","source":"[CMFCPopupMenu](../../mfc/reference/cmfcpopupmenu-class.md)"},{"pos":[10338,10350],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[10354,10380],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxpopupmenu.h","source":"**Header:** afxpopupmenu.h"},{"pos":[10390,10471],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__activatepopupmenu\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::ActivatePopupMenu","linkify":"<a name=\"cmfcpopupmenu__activatepopupmenu\"></a>  CMFCPopupMenu::ActivatePopupMenu","source":"<a name=\"cmfcpopupmenu__activatepopupmenu\"></a>  CMFCPopupMenu::ActivatePopupMenu"},{"pos":[10700,10710],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pTopFrame`</ph>","pos":[10714,10730],"source":"[in] `pTopFrame`"},{"content":"[in] <ph id=\"ph1\">`pPopupMenu`</ph>","pos":[10734,10751],"source":" [in] `pPopupMenu`"},{"pos":[10761,10773],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[10783,10790],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10800,10897],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__alwaysshowemptytoolsentry\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::AlwaysShowEmptyToolsEntry","linkify":"<a name=\"cmfcpopupmenu__alwaysshowemptytoolsentry\"></a>  CMFCPopupMenu::AlwaysShowEmptyToolsEntry","source":"<a name=\"cmfcpopupmenu__alwaysshowemptytoolsentry\"></a>  CMFCPopupMenu::AlwaysShowEmptyToolsEntry"},{"content":"Sets whether a pop-up menu is enabled to show empty entries for user-defined tools.","pos":[10901,10984]},{"pos":[11067,11077],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bShow`</ph>","pos":[11081,11093],"source":"[in] `bShow`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> if the pop-up menu can display empty entries; <ph id=\"ph2\">`FALSE`</ph> otherwise.","pos":[11096,11168],"source":" `TRUE` if the pop-up menu can display empty entries; `FALSE` otherwise."},{"pos":[11178,11263],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__areallcommandsshown\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::AreAllCommandsShown","linkify":"<a name=\"cmfcpopupmenu__areallcommandsshown\"></a>  CMFCPopupMenu::AreAllCommandsShown","source":"<a name=\"cmfcpopupmenu__areallcommandsshown\"></a>  CMFCPopupMenu::AreAllCommandsShown"},{"pos":[11428,11440],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[11450,11457],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[11467,11532],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__checkarea\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::CheckArea","linkify":"<a name=\"cmfcpopupmenu__checkarea\"></a>  CMFCPopupMenu::CheckArea","source":"<a name=\"cmfcpopupmenu__checkarea\"></a>  CMFCPopupMenu::CheckArea"},{"content":"Determines the location of a point relative to the pop-up menu.","pos":[11536,11599]},{"pos":[11682,11692],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`ptScreen`</ph>","pos":[11696,11711],"source":"[in] `ptScreen`"},{"content":"A point, in screen coordinates.","pos":[11715,11746]},{"pos":[11756,11768],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A MENUAREA_TYPE parameter that indicates where the point is relative to the pop-up menu.","pos":[11772,11860]},{"pos":[11870,11877],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A MENUAREA_TYPE parameter can have any one of the following values.","pos":[11881,11948]},{"pos":[11958,12006],"content":"OUTSIDE - <ph id=\"ph1\">`ptScreen`</ph> is outside the pop-up menu.","source":"OUTSIDE - `ptScreen` is outside the pop-up menu."},{"pos":[12016,12054],"content":"LOGO - <ph id=\"ph1\">`ptScreen`</ph> is over a logo area.","source":"LOGO - `ptScreen` is over a logo area."},{"pos":[12064,12122],"content":"TEAROFF_CAPTION - <ph id=\"ph1\">`ptScreen`</ph> is over the tear-off caption.","source":"TEAROFF_CAPTION - `ptScreen` is over the tear-off caption."},{"pos":[12132,12204],"content":"SHADOW_BOTTOM - <ph id=\"ph1\">`ptScreen`</ph> is over the bottom shadow of the pop-up menu.","source":"SHADOW_BOTTOM - `ptScreen` is over the bottom shadow of the pop-up menu."},{"pos":[12214,12284],"content":"SHADOW_RIGHT - <ph id=\"ph1\">`ptScreen`</ph> is over the right shadow of the pop-up menu.","source":"SHADOW_RIGHT - `ptScreen` is over the right shadow of the pop-up menu."},{"pos":[12294,12330],"content":"MENU - <ph id=\"ph1\">`ptScreen`</ph> is over a command.","source":"MENU - `ptScreen` is over a command."},{"pos":[12340,12405],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__closemenu\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::CloseMenu","linkify":"<a name=\"cmfcpopupmenu__closemenu\"></a>  CMFCPopupMenu::CloseMenu","source":"<a name=\"cmfcpopupmenu__closemenu\"></a>  CMFCPopupMenu::CloseMenu"},{"pos":[12578,12588],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[12592,12613],"content":"[in] <ph id=\"ph1\">`bSetFocusToBar`</ph>","source":"[in] `bSetFocusToBar`"},{"pos":[12623,12630],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12640,12713],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__cmfcpopupmenu\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::CMFCPopupMenu","linkify":"<a name=\"cmfcpopupmenu__cmfcpopupmenu\"></a>  CMFCPopupMenu::CMFCPopupMenu","source":"<a name=\"cmfcpopupmenu__cmfcpopupmenu\"></a>  CMFCPopupMenu::CMFCPopupMenu"},{"pos":[12717,12797],"content":"Constructs a <bpt id=\"p1\">[</bpt>CMFCPopupMenu<ept id=\"p1\">](../../mfc/reference/cmfcpopupmenu-class.md)</ept> object.","source":"Constructs a [CMFCPopupMenu](../../mfc/reference/cmfcpopupmenu-class.md) object."},{"pos":[12908,12918],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pCustPage`</ph>","pos":[12922,12938],"source":"[in] `pCustPage`"},{"content":"A pointer to a customization page.","pos":[12942,12976]},{"content":"[in] <ph id=\"ph1\">`lpszTitle`</ph>","pos":[12983,12999],"source":"[in] `lpszTitle`"},{"content":"A string that contains the menu caption.","pos":[13003,13043]},{"pos":[13053,13060],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method allocates the resources for a <ph id=\"ph1\">`CMFCPopupMenu`</ph>.","pos":[13064,13122],"source":"This method allocates the resources for a `CMFCPopupMenu`."},{"content":"To create the pop-up menu item, call <bpt id=\"p1\">[</bpt>CMFCPopupMenu::Create<ept id=\"p1\">](#cmfcpopupmenu__create)</ept>.","pos":[13123,13208],"source":" To create the pop-up menu item, call [CMFCPopupMenu::Create](#cmfcpopupmenu__create)."},{"pos":[13218,13277],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__create\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::Create","linkify":"<a name=\"cmfcpopupmenu__create\"></a>  CMFCPopupMenu::Create","source":"<a name=\"cmfcpopupmenu__create\"></a>  CMFCPopupMenu::Create"},{"pos":[13281,13391],"content":"Creates a pop-up menu and attaches it to a <bpt id=\"p1\">[</bpt>CMFCPopupMenu<ept id=\"p1\">](../../mfc/reference/cmfcpopupmenu-class.md)</ept> object.","source":"Creates a pop-up menu and attaches it to a [CMFCPopupMenu](../../mfc/reference/cmfcpopupmenu-class.md) object."},{"pos":[13565,13575],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pWndParent`</ph>","pos":[13579,13596],"source":"[in] `pWndParent`"},{"content":"The parent window for the <ph id=\"ph1\">`CMFCPopupMenu`</ph>.","pos":[13600,13642],"source":" The parent window for the `CMFCPopupMenu`."},{"content":"[in] <ph id=\"ph1\">`x`</ph>","pos":[13649,13657],"source":"[in] `x`"},{"content":"The horizontal screen coordinate for the location of the pop-up menu","pos":[13661,13729]},{"content":"[in] <ph id=\"ph1\">`y`</ph>","pos":[13736,13744],"source":"[in] `y`"},{"content":"The vertical screen coordinate for the location of the pop-menu.","pos":[13748,13812]},{"content":"[in] <ph id=\"ph1\">`hMenu`</ph>","pos":[13819,13831],"source":"[in] `hMenu`"},{"content":"A handle to a menu resource.","pos":[13835,13863]},{"content":"[in] <ph id=\"ph1\">`bLocked`</ph>","pos":[13870,13884],"source":"[in] `bLocked`"},{"content":"A Boolean parameter that indicates whether the menu is customizable.","pos":[13888,13956]},{"content":"<ph id=\"ph1\">`FALSE`</ph> indicates that the pop-up menu is customizable.","pos":[13957,14012],"source":"`FALSE` indicates that the pop-up menu is customizable."},{"content":"[in] <ph id=\"ph1\">`bOwnMessage`</ph>","pos":[14019,14037],"source":"[in] `bOwnMessage`"},{"content":"A Boolean parameter that indicates how the framework routes the menu messages.","pos":[14041,14119]},{"content":"See the Remarks section for more details.","pos":[14120,14161]},{"pos":[14171,14183],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[14187,14241],"content":"<ph id=\"ph1\">`TRUE`</ph> if the method is successful; otherwise <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the method is successful; otherwise `FALSE`."},{"pos":[14251,14258],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If <ph id=\"ph1\">`bOwnMessage`</ph> is <ph id=\"ph2\">`TRUE`</ph>, the framework routes any menu messages to <ph id=\"ph3\">`pWndParent`</ph>.","pos":[14262,14345],"source":"If `bOwnMessage` is `TRUE`, the framework routes any menu messages to `pWndParent`."},{"content":"<ph id=\"ph1\">`pWndParent`</ph> must not be <ph id=\"ph2\">`NULL`</ph> if <ph id=\"ph3\">`bOwnMessage`</ph> is <ph id=\"ph4\">`TRUE.`</ph> If <ph id=\"ph5\">`bOwnMessage`</ph> is <ph id=\"ph6\">`FALSE`</ph>, the framework routes the menu messages to the parent pop-up menu.","pos":[14346,14500],"source":"`pWndParent` must not be `NULL` if `bOwnMessage` is `TRUE.` If `bOwnMessage` is `FALSE`, the framework routes the menu messages to the parent pop-up menu."},{"pos":[14510,14517],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example demonstrates how to use the <ph id=\"ph1\">`Create`</ph> method of the <ph id=\"ph2\">`CMFCPopuMenu`</ph> class.","pos":[14521,14615],"source":"The following example demonstrates how to use the `Create` method of the `CMFCPopuMenu` class."},{"content":"This code snippet is part of the <bpt id=\"p1\">[</bpt>Custom Pages sample<ept id=\"p1\">](../../visual-cpp-samples.md)</ept>.","pos":[14616,14700],"source":" This code snippet is part of the [Custom Pages sample](../../visual-cpp-samples.md)."},{"pos":[14707,14804],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CustomPages#1<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cmfcpopupmenu-class_2.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CustomPages#1](../../mfc/reference/codesnippet/cpp/cmfcpopupmenu-class_2.cpp)]"},{"pos":[14814,14893],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__createtearoffbar\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::CreateTearOffBar","linkify":"<a name=\"cmfcpopupmenu__createtearoffbar\"></a>  CMFCPopupMenu::CreateTearOffBar","source":"<a name=\"cmfcpopupmenu__createtearoffbar\"></a>  CMFCPopupMenu::CreateTearOffBar"},{"pos":[15121,15131],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pWndMain`</ph>","pos":[15135,15150],"source":"[in] `pWndMain`"},{"content":"[in] <ph id=\"ph1\">`uiID`</ph>","pos":[15154,15165],"source":" [in] `uiID`"},{"content":"[in] <ph id=\"ph1\">`lpszName`</ph>","pos":[15169,15184],"source":" [in] `lpszName`"},{"pos":[15194,15206],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15216,15223],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[15233,15328],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__defaultmouseclickonclose\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::DefaultMouseClickOnClose","linkify":"<a name=\"cmfcpopupmenu__defaultmouseclickonclose\"></a>  CMFCPopupMenu::DefaultMouseClickOnClose","source":"<a name=\"cmfcpopupmenu__defaultmouseclickonclose\"></a>  CMFCPopupMenu::DefaultMouseClickOnClose"},{"pos":[15506,15518],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15528,15535],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[15545,15620],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__enablemenulogo\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::EnableMenuLogo","linkify":"<a name=\"cmfcpopupmenu__enablemenulogo\"></a>  CMFCPopupMenu::EnableMenuLogo","source":"<a name=\"cmfcpopupmenu__enablemenulogo\"></a>  CMFCPopupMenu::EnableMenuLogo"},{"content":"Initializes the logo for a pop-up menu.","pos":[15624,15663]},{"pos":[15781,15791],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`iLogoSize`</ph>","pos":[15795,15811],"source":"[in] `iLogoSize`"},{"content":"The size of the logo, in pixels.","pos":[15815,15847]},{"content":"[in] <ph id=\"ph1\">`nLogoLocation`</ph>","pos":[15854,15874],"source":"[in] `nLogoLocation`"},{"content":"An enumerated data type that indicates the location of the logo.","pos":[15878,15942]},{"pos":[15952,15959],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[15963,16130],"content":"To display the logo, implement the method <bpt id=\"p1\">[</bpt>CFrameWndEx::OnDrawMenuLogo<ept id=\"p1\">](../../mfc/reference/cframewndex-class.md#cframewndex__ondrawmenulogo)</ept> in the main frame window.","source":"To display the logo, implement the method [CFrameWndEx::OnDrawMenuLogo](../../mfc/reference/cframewndex-class.md#cframewndex__ondrawmenulogo) in the main frame window."},{"pos":[16137,16250],"content":"The possible values for <ph id=\"ph1\">`nLogoLocation`</ph> are MENU_LOGO_LEFT, MENU_LOGO_RIGHT, MENU_LOGO_TOP, and MENU_LOGO_BOTTOM.","source":"The possible values for `nLogoLocation` are MENU_LOGO_LEFT, MENU_LOGO_RIGHT, MENU_LOGO_TOP, and MENU_LOGO_BOTTOM."},{"pos":[16260,16337],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__enablemenusound\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::EnableMenuSound","linkify":"<a name=\"cmfcpopupmenu__enablemenusound\"></a>  CMFCPopupMenu::EnableMenuSound","source":"<a name=\"cmfcpopupmenu__enablemenusound\"></a>  CMFCPopupMenu::EnableMenuSound"},{"content":"Enables menu sound.","pos":[16341,16360]},{"pos":[16435,16445],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bEnable`</ph>","pos":[16449,16463],"source":"[in] `bEnable`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to enable sound, <ph id=\"ph2\">`FALSE`</ph> otherwise.","pos":[16466,16509],"source":" `TRUE` to enable sound, `FALSE` otherwise."},{"pos":[16519,16526],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If you enable sound, the framework calls the <bpt id=\"p1\">[</bpt>PlaySound<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774426)</ept> method when a user opens a pop-up menu or selects a menu command.","pos":[16530,16712],"source":"If you enable sound, the framework calls the [PlaySound](http://msdn.microsoft.com/library/windows/desktop/bb774426) method when a user opens a pop-up menu or selects a menu command."},{"content":"By default, this feature is enabled.","pos":[16713,16749]},{"pos":[16759,16830],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__enableresize\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::EnableResize","linkify":"<a name=\"cmfcpopupmenu__enableresize\"></a>  CMFCPopupMenu::EnableResize","source":"<a name=\"cmfcpopupmenu__enableresize\"></a>  CMFCPopupMenu::EnableResize"},{"pos":[16998,17008],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[17012,17032],"content":"[in] <ph id=\"ph1\">`sizeMinResize`</ph>","source":"[in] `sizeMinResize`"},{"pos":[17042,17049],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[17059,17136],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__enablescrolling\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::EnableScrolling","linkify":"<a name=\"cmfcpopupmenu__enablescrolling\"></a>  CMFCPopupMenu::EnableScrolling","source":"<a name=\"cmfcpopupmenu__enablescrolling\"></a>  CMFCPopupMenu::EnableScrolling"},{"pos":[17299,17309],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[17313,17324],"content":"[in] <ph id=\"ph1\">`BOOL`</ph>","source":"[in] `BOOL`"},{"pos":[17334,17341],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[17351,17430],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__enablevertresize\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::EnableVertResize","linkify":"<a name=\"cmfcpopupmenu__enablevertresize\"></a>  CMFCPopupMenu::EnableVertResize","source":"<a name=\"cmfcpopupmenu__enablevertresize\"></a>  CMFCPopupMenu::EnableVertResize"},{"pos":[17597,17607],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[17611,17628],"content":"[in] <ph id=\"ph1\">`nMinResize`</ph>","source":"[in] `nMinResize`"},{"pos":[17638,17645],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[17655,17742],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__findsubitembycommand\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::FindSubItemByCommand","linkify":"<a name=\"cmfcpopupmenu__findsubitembycommand\"></a>  CMFCPopupMenu::FindSubItemByCommand","source":"<a name=\"cmfcpopupmenu__findsubitembycommand\"></a>  CMFCPopupMenu::FindSubItemByCommand"},{"pos":[17936,17946],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[17950,17962],"content":"[in] <ph id=\"ph1\">`uiCmd`</ph>","source":"[in] `uiCmd`"},{"pos":[17972,17984],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[17994,18001],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[18011,18084],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__getactivemenu\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::GetActiveMenu","linkify":"<a name=\"cmfcpopupmenu__getactivemenu\"></a>  CMFCPopupMenu::GetActiveMenu","source":"<a name=\"cmfcpopupmenu__getactivemenu\"></a>  CMFCPopupMenu::GetActiveMenu"},{"content":"Returns the currently active menu.","pos":[18088,18122]},{"pos":[18186,18198],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A pointer to the active pop-up menu, or NULL if no pop-up menu is currently active.","pos":[18202,18285]},{"pos":[18295,18302],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Each application can have at most one active pop-up menu.","pos":[18306,18363]},{"pos":[18373,18454],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__getanimationspeed\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::GetAnimationSpeed","linkify":"<a name=\"cmfcpopupmenu__getanimationspeed\"></a>  CMFCPopupMenu::GetAnimationSpeed","source":"<a name=\"cmfcpopupmenu__getanimationspeed\"></a>  CMFCPopupMenu::GetAnimationSpeed"},{"content":"Returns the animation speed for pop-up menus.","pos":[18458,18503]},{"pos":[18561,18573],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer that indicates the time, in milliseconds, that a pop-up menu animation takes to finish.","pos":[18577,18675]},{"pos":[18685,18692],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The animation speed is a global value.","pos":[18696,18734]},{"content":"Use <bpt id=\"p1\">[</bpt>CMFCPopupMenu::SetAnimationSpeed<ept id=\"p1\">](#cmfcpopupmenu__setanimationspeed)</ept> to change the animation speed for pop-up menus.","pos":[18735,18856],"source":" Use [CMFCPopupMenu::SetAnimationSpeed](#cmfcpopupmenu__setanimationspeed) to change the animation speed for pop-up menus."},{"pos":[18866,18945],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__getanimationtype\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::GetAnimationType","linkify":"<a name=\"cmfcpopupmenu__getanimationtype\"></a>  CMFCPopupMenu::GetAnimationType","source":"<a name=\"cmfcpopupmenu__getanimationtype\"></a>  CMFCPopupMenu::GetAnimationType"},{"content":"Returns the current type of pop-up animation.","pos":[18949,18994]},{"pos":[19098,19108],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bNoSystem`</ph>","pos":[19112,19128],"source":"[in] `bNoSystem`"},{"content":"A Boolean parameter that indicates whether this method checks the global value.","pos":[19132,19211]},{"content":"FALSE if you want this method to return the animation style for this instance of the <bpt id=\"p1\">[</bpt>CMFCPopupMenu Class<ept id=\"p1\">](../../mfc/reference/cmfcpopupmenu-class.md)</ept>.","pos":[19212,19363],"source":" FALSE if you want this method to return the animation style for this instance of the [CMFCPopupMenu Class](../../mfc/reference/cmfcpopupmenu-class.md)."},{"pos":[19373,19385],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An enumerated value that describes the animation type.","pos":[19389,19443]},{"pos":[19453,19460],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The style of animation for pop-up menus is global for your application.","pos":[19464,19535]},{"content":"Use <bpt id=\"p1\">[</bpt>CMFCPopupMenu::SetAnimationType<ept id=\"p1\">](#cmfcpopupmenu__setanimationtype)</ept> to set the animation style.","pos":[19536,19635],"source":" Use [CMFCPopupMenu::SetAnimationType](#cmfcpopupmenu__setanimationtype) to set the animation style."},{"content":"The following table lists the possible animation types.","pos":[19642,19697]},{"content":"NO_ANIMATION","pos":[19704,19716]},{"content":"The pop-up menu is not animated and appears immediately.","pos":[19720,19776]},{"content":"UNFOLD","pos":[19783,19789]},{"content":"The framework reveals the pop-up menu from the upper-left corner to the lower right corner.","pos":[19793,19884]},{"content":"SLIDE","pos":[19891,19896]},{"content":"The pop-up menu moves from top to bottom.","pos":[19900,19941]},{"content":"FADE","pos":[19948,19952]},{"content":"The pop-up menu first appears transparent and gradually solidifies.","pos":[19956,20023]},{"pos":[20033,20112],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__getdropdirection\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::GetDropDirection","linkify":"<a name=\"cmfcpopupmenu__getdropdirection\"></a>  CMFCPopupMenu::GetDropDirection","source":"<a name=\"cmfcpopupmenu__getdropdirection\"></a>  CMFCPopupMenu::GetDropDirection"},{"pos":[20284,20296],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[20306,20313],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[20323,20404],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__getforcemenufocus\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::GetForceMenuFocus","linkify":"<a name=\"cmfcpopupmenu__getforcemenufocus\"></a>  CMFCPopupMenu::GetForceMenuFocus","source":"<a name=\"cmfcpopupmenu__getforcemenufocus\"></a>  CMFCPopupMenu::GetForceMenuFocus"},{"content":"Indicates whether the focus is returned to the menu bar when a pop-up menu is displayed.","pos":[20408,20496]},{"pos":[20554,20566],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[20570,20702],"content":"<ph id=\"ph1\">`TRUE`</ph> if the input focus is returned to the menu bar when a pop-up menu is displayed; <ph id=\"ph2\">`FALSE`</ph> if the pop-up menu retains the focus.","source":"`TRUE` if the input focus is returned to the menu bar when a pop-up menu is displayed; `FALSE` if the pop-up menu retains the focus."},{"pos":[20712,20719],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"By default, your application does not return focus to the menu bar.","pos":[20723,20790]},{"content":"To change this setting, use <bpt id=\"p1\">[</bpt>CMFCPopupMenu::SetForceMenuFocus<ept id=\"p1\">](#cmfcpopupmenu__setforcemenufocus)</ept>.","pos":[20791,20889],"source":" To change this setting, use [CMFCPopupMenu::SetForceMenuFocus](#cmfcpopupmenu__setforcemenufocus)."},{"pos":[20899,20974],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__getforceshadow\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::GetForceShadow","linkify":"<a name=\"cmfcpopupmenu__getforceshadow\"></a>  CMFCPopupMenu::GetForceShadow","source":"<a name=\"cmfcpopupmenu__getforceshadow\"></a>  CMFCPopupMenu::GetForceShadow"},{"pos":[21142,21154],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[21164,21171],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[21181,21244],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__gethmenu\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::GetHMenu","linkify":"<a name=\"cmfcpopupmenu__gethmenu\"></a>  CMFCPopupMenu::GetHMenu","source":"<a name=\"cmfcpopupmenu__gethmenu\"></a>  CMFCPopupMenu::GetHMenu"},{"content":"Returns a handle to the attached menu resource.","pos":[21248,21295]},{"pos":[21338,21405],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__getmenubar\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::GetMenuBar","linkify":"<a name=\"cmfcpopupmenu__getmenubar\"></a>  CMFCPopupMenu::GetMenuBar","source":"<a name=\"cmfcpopupmenu__getmenubar\"></a>  CMFCPopupMenu::GetMenuBar"},{"pos":[21409,21519],"content":"Returns the <bpt id=\"p1\">[</bpt>CMFCPopupMenuBar<ept id=\"p1\">](../../mfc/reference/cmfcpopupmenubar-class.md)</ept> embedded inside the pop-up menu.","source":"Returns the [CMFCPopupMenuBar](../../mfc/reference/cmfcpopupmenubar-class.md) embedded inside the pop-up menu."},{"pos":[21584,21596],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[21600,21645],"content":"A pointer to the embedded <ph id=\"ph1\">`CMFCPopupMenuBar`</ph>.","source":"A pointer to the embedded `CMFCPopupMenuBar`."},{"pos":[21655,21662],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The pop-up menu has an embedded <ph id=\"ph1\">`CMFCPopupMenuBar`</ph> object.","pos":[21666,21724],"source":"The pop-up menu has an embedded `CMFCPopupMenuBar` object."},{"content":"You must override this method in a derived class if you are using a different embedded class.","pos":[21725,21818]},{"pos":[21828,21897],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__getmenuitem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::GetMenuItem","linkify":"<a name=\"cmfcpopupmenu__getmenuitem\"></a>  CMFCPopupMenu::GetMenuItem","source":"<a name=\"cmfcpopupmenu__getmenuitem\"></a>  CMFCPopupMenu::GetMenuItem"},{"content":"Returns a pointer to the menu item at the specified index.","pos":[21901,21959]},{"pos":[22041,22051],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`iIndex`</ph>","pos":[22055,22068],"source":"[in] `iIndex`"},{"content":"The zero-based index of a menu item.","pos":[22072,22108]},{"pos":[22118,22130],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A pointer to a menu item.","pos":[22134,22159]},{"content":"<ph id=\"ph1\">`NULL`</ph> if the index is invalid.","pos":[22160,22191],"source":"`NULL` if the index is invalid."},{"pos":[22201,22208],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Menu items are represented by the <bpt id=\"p1\">[</bpt>CMFCToolBarMenuButton Class<ept id=\"p1\">](../../mfc/reference/cmfctoolbarmenubutton-class.md)</ept>.","pos":[22212,22328],"source":"Menu items are represented by the [CMFCToolBarMenuButton Class](../../mfc/reference/cmfctoolbarmenubutton-class.md)."},{"content":"When you call this method, it returns a pointer to the appropriate <ph id=\"ph1\">`CMFCToolBarMenuButton`</ph>.","pos":[22329,22420],"source":" When you call this method, it returns a pointer to the appropriate `CMFCToolBarMenuButton`."},{"pos":[22430,22509],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__getmenuitemcount\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::GetMenuItemCount","linkify":"<a name=\"cmfcpopupmenu__getmenuitemcount\"></a>  CMFCPopupMenu::GetMenuItemCount","source":"<a name=\"cmfcpopupmenu__getmenuitemcount\"></a>  CMFCPopupMenu::GetMenuItemCount"},{"content":"Returns the number of items in a pop-up menu.","pos":[22513,22558]},{"pos":[22616,22628],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of items in the menu.","pos":[22632,22664]},{"pos":[22674,22747],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__getmessagewnd\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::GetMessageWnd","linkify":"<a name=\"cmfcpopupmenu__getmessagewnd\"></a>  CMFCPopupMenu::GetMessageWnd","source":"<a name=\"cmfcpopupmenu__getmessagewnd\"></a>  CMFCPopupMenu::GetMessageWnd"},{"content":"Returns a pointer to the window where the framework routes the pop-up menu messages.","pos":[22751,22835]},{"pos":[22892,22904],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[22908,23001],"content":"A pointer to the window that receives the pop-up menu messages; <ph id=\"ph1\">`NULL`</ph> if there is no window.","source":"A pointer to the window that receives the pop-up menu messages; `NULL` if there is no window."},{"pos":[23011,23018],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[23022,23170],"content":"When you use the method <bpt id=\"p1\">[</bpt>CMFCPopupMenu::Create<ept id=\"p1\">](#cmfcpopupmenu__create)</ept> to create a pop-up menu, you specify what window receives the menu messages.","source":"When you use the method [CMFCPopupMenu::Create](#cmfcpopupmenu__create) to create a pop-up menu, you specify what window receives the menu messages."},{"pos":[23180,23253],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__getparentarea\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::GetParentArea","linkify":"<a name=\"cmfcpopupmenu__getparentarea\"></a>  CMFCPopupMenu::GetParentArea","source":"<a name=\"cmfcpopupmenu__getparentarea\"></a>  CMFCPopupMenu::GetParentArea"},{"pos":[23432,23442],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[23446,23466],"content":"[in] <ph id=\"ph1\">`rectParentBtn`</ph>","source":"[in] `rectParentBtn`"},{"pos":[23476,23488],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[23498,23505],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[23515,23592],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__getparentbutton\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::GetParentButton","linkify":"<a name=\"cmfcpopupmenu__getparentbutton\"></a>  CMFCPopupMenu::GetParentButton","source":"<a name=\"cmfcpopupmenu__getparentbutton\"></a>  CMFCPopupMenu::GetParentButton"},{"content":"Returns a pointer to the parent toolbar button.","pos":[23596,23643]},{"pos":[23719,23731],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A pointer to the parent toolbar button.","pos":[23735,23774]},{"content":"<ph id=\"ph1\">`NULL`</ph> if the pop-up menu has no parent toolbar button.","pos":[23775,23830],"source":"`NULL` if the pop-up menu has no parent toolbar button."},{"pos":[23840,23847],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A <bpt id=\"p1\">[</bpt>CMFCPopupMenu<ept id=\"p1\">](../../mfc/reference/cmfcpopupmenu-class.md)</ept> can be associated with a button on the menu.","pos":[23851,23957],"source":"A [CMFCPopupMenu](../../mfc/reference/cmfcpopupmenu-class.md) can be associated with a button on the menu."},{"content":"In this scenario, the pop-up menu appears when a user selects the parent toolbar button.","pos":[23958,24046]},{"content":"If the pop-up menu is a shortcut menu, it will have no parent toolbar button.","pos":[24053,24130]},{"pos":[24140,24223],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__getparentpopupmenu\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::GetParentPopupMenu","linkify":"<a name=\"cmfcpopupmenu__getparentpopupmenu\"></a>  CMFCPopupMenu::GetParentPopupMenu","source":"<a name=\"cmfcpopupmenu__getparentpopupmenu\"></a>  CMFCPopupMenu::GetParentPopupMenu"},{"content":"Returns a pointer to the parent pop-up menu.","pos":[24227,24271]},{"pos":[24342,24354],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[24358,24491],"content":"A pointer to the parent <bpt id=\"p1\">[</bpt>CMFCPopupMenu<ept id=\"p1\">](../../mfc/reference/cmfcpopupmenu-class.md)</ept> object; <ph id=\"ph1\">`NULL`</ph> if there is no parent pop-up menu.","source":"A pointer to the parent [CMFCPopupMenu](../../mfc/reference/cmfcpopupmenu-class.md) object; `NULL` if there is no parent pop-up menu."},{"pos":[24501,24508],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[24512,24586],"content":"A pop-up menu has a parent <ph id=\"ph1\">`CMFCPopupMenu`</ph> object only if it is a submenu.","source":"A pop-up menu has a parent `CMFCPopupMenu` object only if it is a submenu."},{"pos":[24596,24687],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__getparentribbonelement\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::GetParentRibbonElement","linkify":"<a name=\"cmfcpopupmenu__getparentribbonelement\"></a>  CMFCPopupMenu::GetParentRibbonElement","source":"<a name=\"cmfcpopupmenu__getparentribbonelement\"></a>  CMFCPopupMenu::GetParentRibbonElement"},{"pos":[24873,24885],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[24895,24902],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[24912,24991],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__getparenttoolbar\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::GetParentToolBar","linkify":"<a name=\"cmfcpopupmenu__getparenttoolbar\"></a>  CMFCPopupMenu::GetParentToolBar","source":"<a name=\"cmfcpopupmenu__getparenttoolbar\"></a>  CMFCPopupMenu::GetParentToolBar"},{"content":"Returns a pointer to the parent toolbar.","pos":[24995,25035]},{"pos":[25102,25114],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A pointer to the parent toolbar.","pos":[25118,25150]},{"content":"<ph id=\"ph1\">`NULL`</ph> if the pop-up menu has no parent toolbar.","pos":[25151,25199],"source":"`NULL` if the pop-up menu has no parent toolbar."},{"pos":[25209,25216],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[25220,25337],"content":"If the <bpt id=\"p1\">[</bpt>CMFCPopupMenu<ept id=\"p1\">](../../mfc/reference/cmfcpopupmenu-class.md)</ept> is a shortcut menu, then it has no parent toolbar.","source":"If the [CMFCPopupMenu](../../mfc/reference/cmfcpopupmenu-class.md) is a shortcut menu, then it has no parent toolbar."},{"pos":[25347,25436],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__getquickcustomizetype\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::GetQuickCustomizeType","linkify":"<a name=\"cmfcpopupmenu__getquickcustomizetype\"></a>  CMFCPopupMenu::GetQuickCustomizeType","source":"<a name=\"cmfcpopupmenu__getquickcustomizetype\"></a>  CMFCPopupMenu::GetQuickCustomizeType"},{"pos":[25619,25631],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[25641,25648],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[25658,25725],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__getselitem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::GetSelItem","linkify":"<a name=\"cmfcpopupmenu__getselitem\"></a>  CMFCPopupMenu::GetSelItem","source":"<a name=\"cmfcpopupmenu__getselitem\"></a>  CMFCPopupMenu::GetSelItem"},{"content":"Returns a pointer to the currently selected menu command.","pos":[25729,25786]},{"pos":[25848,25860],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[25864,25944],"content":"A pointer to the currently selected menu command; <ph id=\"ph1\">`NULL`</ph> if no item is selected.","source":"A pointer to the currently selected menu command; `NULL` if no item is selected."},{"pos":[25954,25961],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[25965,26154],"content":"The menu commands on a pop-up menu are represented by the <bpt id=\"p1\">[</bpt>CMFCToolBarMenuButton Class<ept id=\"p1\">](../../mfc/reference/cmfctoolbarmenubutton-class.md)</ept>, or a class derived from <ph id=\"ph1\">`CMFCToolBarMenuButton`</ph>.","source":"The menu commands on a pop-up menu are represented by the [CMFCToolBarMenuButton Class](../../mfc/reference/cmfctoolbarmenubutton-class.md), or a class derived from `CMFCToolBarMenuButton`."},{"pos":[26164,26239],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__hasbeenresized\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::HasBeenResized","linkify":"<a name=\"cmfcpopupmenu__hasbeenresized\"></a>  CMFCPopupMenu::HasBeenResized","source":"<a name=\"cmfcpopupmenu__hasbeenresized\"></a>  CMFCPopupMenu::HasBeenResized"},{"pos":[26399,26411],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[26421,26428],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[26438,26529],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__hiderarelyusedcommands\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::HideRarelyUsedCommands","linkify":"<a name=\"cmfcpopupmenu__hiderarelyusedcommands\"></a>  CMFCPopupMenu::HideRarelyUsedCommands","source":"<a name=\"cmfcpopupmenu__hiderarelyusedcommands\"></a>  CMFCPopupMenu::HideRarelyUsedCommands"},{"content":"Indicates whether the pop-up menu can hide rarely used commands.","pos":[26533,26597]},{"pos":[26662,26674],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[26678,26757],"content":"<ph id=\"ph1\">`TRUE`</ph> if the pop-up menu can hide the rarely used commands; otherwise <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the pop-up menu can hide the rarely used commands; otherwise `FALSE`."},{"pos":[26767,26774],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method specifies only whether a pop-up menu can hide rarely used commands, not if that configuration is enabled.","pos":[26778,26895]},{"content":"A pop-up menu can hide rarely used commands if it has a parent button and the parent window is derived from the <bpt id=\"p1\">[</bpt>CMFCMenuBar Class<ept id=\"p1\">](../../mfc/reference/cmfcmenubar-class.md)</ept>.","pos":[26896,27070],"source":" A pop-up menu can hide rarely used commands if it has a parent button and the parent window is derived from the [CMFCMenuBar Class](../../mfc/reference/cmfcmenubar-class.md)."},{"content":"Use <bpt id=\"p1\">[</bpt>CMFCMenuBar::SetRecentlyUsedMenus<ept id=\"p1\">](../../mfc/reference/cmfcmenubar-class.md#cmfcmenubar__setrecentlyusedmenus)</ept> to enable this feature and <bpt id=\"p2\">[</bpt>CMFCMenuBar::IsRecentlyUsedMenus<ept id=\"p2\">](../../mfc/reference/cmfcmenubar-class.md#cmfcmenubar__isrecentlyusedmenus)</ept> to determine if this feature is currently enabled.","pos":[27071,27374],"source":" Use [CMFCMenuBar::SetRecentlyUsedMenus](../../mfc/reference/cmfcmenubar-class.md#cmfcmenubar__setrecentlyusedmenus) to enable this feature and [CMFCMenuBar::IsRecentlyUsedMenus](../../mfc/reference/cmfcmenubar-class.md#cmfcmenubar__isrecentlyusedmenus) to determine if this feature is currently enabled."},{"content":"You must call both of these methods for the parent window.","pos":[27375,27433]},{"pos":[27443,27508],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__incommand\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::InCommand","linkify":"<a name=\"cmfcpopupmenu__incommand\"></a>  CMFCPopupMenu::InCommand","source":"<a name=\"cmfcpopupmenu__incommand\"></a>  CMFCPopupMenu::InCommand"},{"pos":[27662,27674],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[27684,27691],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[27701,27768],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__insertitem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::InsertItem","linkify":"<a name=\"cmfcpopupmenu__insertitem\"></a>  CMFCPopupMenu::InsertItem","source":"<a name=\"cmfcpopupmenu__insertitem\"></a>  CMFCPopupMenu::InsertItem"},{"content":"Inserts a new item into the pop-up menu at the specified location.","pos":[27772,27838]},{"pos":[27946,27956],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`button`</ph>","pos":[27960,27973],"source":"[in] `button`"},{"content":"A reference to the menu item to add.","pos":[27977,28013]},{"content":"[in] <ph id=\"ph1\">`iInsertAt`</ph>","pos":[28020,28036],"source":"[in] `iInsertAt`"},{"content":"The zero-based index for the new item.","pos":[28040,28078]},{"content":"If <ph id=\"ph1\">`iInsertAt`</ph> is -1, the item is added to the end of the menu.","pos":[28079,28142],"source":" If `iInsertAt` is -1, the item is added to the end of the menu."},{"pos":[28152,28164],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The zero-based index of the position where the item was inserted.","pos":[28168,28233]},{"content":"-1 if the method fails.","pos":[28234,28257]},{"pos":[28267,28274],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[28278,28429],"content":"This method will fail if you provide an invalid value for <ph id=\"ph1\">`iInsertAt`</ph>, such as an integer larger than the number of items currently on the pop-up menu.","source":"This method will fail if you provide an invalid value for `iInsertAt`, such as an integer larger than the number of items currently on the pop-up menu."},{"pos":[28439,28516],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__insertseparator\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::InsertSeparator","linkify":"<a name=\"cmfcpopupmenu__insertseparator\"></a>  CMFCPopupMenu::InsertSeparator","source":"<a name=\"cmfcpopupmenu__insertseparator\"></a>  CMFCPopupMenu::InsertSeparator"},{"content":"Inserts a separator into the pop-up menu at the specified location.","pos":[28520,28587]},{"pos":[28653,28663],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`iInsertAt`</ph>","pos":[28667,28683],"source":"[in] `iInsertAt`"},{"content":"The zero-based index of the position where this method will insert the separator.","pos":[28687,28768]},{"pos":[28778,28790],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The zero-based index of the position where the separator was inserted.","pos":[28794,28864]},{"content":"-1 if this method fails.","pos":[28865,28889]},{"pos":[28899,28906],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[28910,29011],"content":"A value of -1 for <ph id=\"ph1\">`iInsertAt`</ph> means this method will add the separator to the end of the pop-up menu.","source":"A value of -1 for `iInsertAt` means this method will add the separator to the end of the pop-up menu."},{"pos":[29018,29071],"content":"This method fails if <ph id=\"ph1\">`iInsertAt`</ph> is an invalid value.","source":"This method fails if `iInsertAt` is an invalid value."},{"pos":[29081,29154],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__isalwaysclose\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::IsAlwaysClose","linkify":"<a name=\"cmfcpopupmenu__isalwaysclose\"></a>  CMFCPopupMenu::IsAlwaysClose","source":"<a name=\"cmfcpopupmenu__isalwaysclose\"></a>  CMFCPopupMenu::IsAlwaysClose"},{"pos":[29321,29333],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[29343,29350],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[29360,29461],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__isalwaysshowemptytoolsentry\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::IsAlwaysShowEmptyToolsEntry","linkify":"<a name=\"cmfcpopupmenu__isalwaysshowemptytoolsentry\"></a>  CMFCPopupMenu::IsAlwaysShowEmptyToolsEntry","source":"<a name=\"cmfcpopupmenu__isalwaysshowemptytoolsentry\"></a>  CMFCPopupMenu::IsAlwaysShowEmptyToolsEntry"},{"pos":[29642,29654],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[29664,29671],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[29681,29758],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__iscustomizepane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::IsCustomizePane","linkify":"<a name=\"cmfcpopupmenu__iscustomizepane\"></a>  CMFCPopupMenu::IsCustomizePane","source":"<a name=\"cmfcpopupmenu__iscustomizepane\"></a>  CMFCPopupMenu::IsCustomizePane"},{"pos":[29762,29839],"content":"Indicates whether the pop-up menu is functioning as a <bpt id=\"p1\">**</bpt>QuickCustomizePane<ept id=\"p1\">**</ept>.","source":"Indicates whether the pop-up menu is functioning as a **QuickCustomizePane**."},{"pos":[29888,29900],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[29904,29971],"content":"<ph id=\"ph1\">`TRUE`</ph> if the pop-up is a <bpt id=\"p1\">**</bpt>QuckCustomizePane<ept id=\"p1\">**</ept>; otherwise <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the pop-up is a **QuckCustomizePane**; otherwise `FALSE`."},{"pos":[29981,29988],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use the <bpt id=\"p1\">**</bpt>QuickCustomizePane<ept id=\"p1\">**</ept> to enable the user to directly customize the pop-up menu.","pos":[29992,30080],"source":"Use the **QuickCustomizePane** to enable the user to directly customize the pop-up menu."},{"content":"The <bpt id=\"p1\">**</bpt>QuickCustomizePane<ept id=\"p1\">**</ept> is a <bpt id=\"p2\">[</bpt>CMFCPopupMenu<ept id=\"p2\">](../../mfc/reference/cmfcpopupmenu-class.md)</ept> that appears when the user clicks on a toolbar button to edit it directly.","pos":[30081,30247],"source":" The **QuickCustomizePane** is a [CMFCPopupMenu](../../mfc/reference/cmfcpopupmenu-class.md) that appears when the user clicks on a toolbar button to edit it directly."},{"pos":[30254,30421],"content":"Your application should call this method during <bpt id=\"p1\">[</bpt>CMDIFrameWndEx::OnShowCustomizePane<ept id=\"p1\">](../../mfc/reference/cmdiframewndex-class.md#cmdiframewndex__onshowcustomizepane)</ept>.","source":"Your application should call this method during [CMDIFrameWndEx::OnShowCustomizePane](../../mfc/reference/cmdiframewndex-class.md#cmdiframewndex__onshowcustomizepane)."},{"pos":[30431,30498],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__isescclose\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::IsEscClose","linkify":"<a name=\"cmfcpopupmenu__isescclose\"></a>  CMFCPopupMenu::IsEscClose","source":"<a name=\"cmfcpopupmenu__isescclose\"></a>  CMFCPopupMenu::IsEscClose"},{"pos":[30645,30657],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[30667,30674],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[30684,30743],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__isidle\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::IsIdle","linkify":"<a name=\"cmfcpopupmenu__isidle\"></a>  CMFCPopupMenu::IsIdle","source":"<a name=\"cmfcpopupmenu__isidle\"></a>  CMFCPopupMenu::IsIdle"},{"content":"Indicates whether a pop-up menu is currently idle.","pos":[30747,30797]},{"pos":[30854,30866],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[30870,30931],"content":"<ph id=\"ph1\">`TRUE`</ph> if the pop-up menu is in idle mode; otherwise <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the pop-up menu is in idle mode; otherwise `FALSE`."},{"pos":[30941,30948],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"By default, a pop-up menu is in idle mode if the display animation is complete and the user is not scrolling the pop-up menu.","pos":[30952,31077]},{"pos":[31087,31156],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__ismenusound\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::IsMenuSound","linkify":"<a name=\"cmfcpopupmenu__ismenusound\"></a>  CMFCPopupMenu::IsMenuSound","source":"<a name=\"cmfcpopupmenu__ismenusound\"></a>  CMFCPopupMenu::IsMenuSound"},{"pos":[31321,31333],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[31343,31350],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[31360,31439],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__isquickcustomize\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::IsQuickCustomize","linkify":"<a name=\"cmfcpopupmenu__isquickcustomize\"></a>  CMFCPopupMenu::IsQuickCustomize","source":"<a name=\"cmfcpopupmenu__isquickcustomize\"></a>  CMFCPopupMenu::IsQuickCustomize"},{"pos":[31443,31585],"content":"Determines whether the associated <bpt id=\"p1\">[</bpt>CMFCToolBarMenuButton Class<ept id=\"p1\">](../../mfc/reference/cmfctoolbarmenubutton-class.md)</ept> is in QuickCustomize mode.","source":"Determines whether the associated [CMFCToolBarMenuButton Class](../../mfc/reference/cmfctoolbarmenubutton-class.md) is in QuickCustomize mode."},{"pos":[31635,31647],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"<ph id=\"ph1\">`TRUE`</ph> if the associated menu button is in QuickCustomize mode; otherwise <ph id=\"ph2\">`FALSE`</ph>.","pos":[31651,31733],"source":"`TRUE` if the associated menu button is in QuickCustomize mode; otherwise `FALSE`."},{"content":"This method will also return <ph id=\"ph1\">`FALSE`</ph> if the pop-up menu is not associated with a <ph id=\"ph2\">`CMFCToolBarMenuButton`</ph>.","pos":[31734,31839],"source":" This method will also return `FALSE` if the pop-up menu is not associated with a `CMFCToolBarMenuButton`."},{"pos":[31849,31856],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"In QuickCustomize mode the user selects a button on a toolbar to customize the button directly.","pos":[31860,31955]},{"pos":[31965,32034],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__isresizeble\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::IsResizeble","linkify":"<a name=\"cmfcpopupmenu__isresizeble\"></a>  CMFCPopupMenu::IsResizeble","source":"<a name=\"cmfcpopupmenu__isresizeble\"></a>  CMFCPopupMenu::IsResizeble"},{"pos":[32191,32203],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32213,32220],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[32230,32301],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__isrightalign\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::IsRightAlign","linkify":"<a name=\"cmfcpopupmenu__isrightalign\"></a>  CMFCPopupMenu::IsRightAlign","source":"<a name=\"cmfcpopupmenu__isrightalign\"></a>  CMFCPopupMenu::IsRightAlign"},{"content":"Indicates whether the menu is right-aligned or left-aligned.","pos":[32305,32365]},{"pos":[32420,32432],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32436,32506],"content":"<ph id=\"ph1\">`TRUE`</ph> if the menu is right-aligned; <ph id=\"ph2\">`FALSE`</ph> if the menu left-aligned.","source":"`TRUE` if the menu is right-aligned; `FALSE` if the menu left-aligned."},{"pos":[32516,32523],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You can use <bpt id=\"p1\">[</bpt>CMFCPopupMenu::SetRightAlign<ept id=\"p1\">](#cmfcpopupmenu__setrightalign)</ept> to set the menu alignment.","pos":[32527,32627],"source":"You can use [CMFCPopupMenu::SetRightAlign](#cmfcpopupmenu__setrightalign) to set the menu alignment."},{"content":"By default, pop-up menus use left-alignment.","pos":[32628,32672]},{"content":"Menu alignment is not a global setting and can vary between pop-up menus.","pos":[32679,32752]},{"pos":[32762,32833],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__isscrollable\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::IsScrollable","linkify":"<a name=\"cmfcpopupmenu__isscrollable\"></a>  CMFCPopupMenu::IsScrollable","source":"<a name=\"cmfcpopupmenu__isscrollable\"></a>  CMFCPopupMenu::IsScrollable"},{"pos":[32991,33003],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[33013,33020],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[33030,33115],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__issendmenuselectmsg\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::IsSendMenuSelectMsg","linkify":"<a name=\"cmfcpopupmenu__issendmenuselectmsg\"></a>  CMFCPopupMenu::IsSendMenuSelectMsg","source":"<a name=\"cmfcpopupmenu__issendmenuselectmsg\"></a>  CMFCPopupMenu::IsSendMenuSelectMsg"},{"content":"Indicates whether the framework notifies the parent frame when the user selects a command from the pop-up menu.","pos":[33119,33230]},{"pos":[33290,33302],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[33306,33375],"content":"<ph id=\"ph1\">`TRUE`</ph> if the framework notifies the parent frame; otherwise <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the framework notifies the parent frame; otherwise `FALSE`."},{"pos":[33385,33392],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[33396,33513],"content":"The framework notifies the parent frame by sending it the <ph id=\"ph1\">`WM_MENUSELECT`</ph> message when a used selects a menu command.","source":"The framework notifies the parent frame by sending it the `WM_MENUSELECT` message when a used selects a menu command."},{"pos":[33523,33584],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__isshown\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::IsShown","linkify":"<a name=\"cmfcpopupmenu__isshown\"></a>  CMFCPopupMenu::IsShown","source":"<a name=\"cmfcpopupmenu__isshown\"></a>  CMFCPopupMenu::IsShown"},{"content":"Indicates whether the pop-up menu is currently visible.","pos":[33588,33643]},{"pos":[33693,33705],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[33709,33763],"content":"<ph id=\"ph1\">`TRUE`</ph> if a pop-up menu is visible; otherwise <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if a pop-up menu is visible; otherwise `FALSE`."},{"pos":[33773,33832],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__moveto\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::MoveTo","linkify":"<a name=\"cmfcpopupmenu__moveto\"></a>  CMFCPopupMenu::MoveTo","source":"<a name=\"cmfcpopupmenu__moveto\"></a>  CMFCPopupMenu::MoveTo"},{"pos":[33991,34001],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[34005,34014],"content":"[in] <ph id=\"ph1\">`pt`</ph>","source":"[in] `pt`"},{"pos":[34024,34031],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[34041,34110],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__onchangehot\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::OnChangeHot","linkify":"<a name=\"cmfcpopupmenu__onchangehot\"></a>  CMFCPopupMenu::OnChangeHot","source":"<a name=\"cmfcpopupmenu__onchangehot\"></a>  CMFCPopupMenu::OnChangeHot"},{"pos":[34274,34284],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[34288,34299],"content":"[in] <ph id=\"ph1\">`nHot`</ph>","source":"[in] `nHot`"},{"pos":[34309,34316],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[34326,34397],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__onchooseitem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::OnChooseItem","linkify":"<a name=\"cmfcpopupmenu__onchooseitem\"></a>  CMFCPopupMenu::OnChooseItem","source":"<a name=\"cmfcpopupmenu__onchooseitem\"></a>  CMFCPopupMenu::OnChooseItem"},{"pos":[34567,34577],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[34581,34596],"content":"[in] <ph id=\"ph1\">`uidCmdID`</ph>","source":"[in] `uidCmdID`"},{"pos":[34606,34613],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[34623,34686],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__oncmdmsg\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::OnCmdMsg","linkify":"<a name=\"cmfcpopupmenu__oncmdmsg\"></a>  CMFCPopupMenu::OnCmdMsg","source":"<a name=\"cmfcpopupmenu__oncmdmsg\"></a>  CMFCPopupMenu::OnCmdMsg"},{"pos":[34929,34939],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nID`</ph>","pos":[34943,34953],"source":"[in] `nID`"},{"content":"[in] <ph id=\"ph1\">`nCode`</ph>","pos":[34957,34969],"source":" [in] `nCode`"},{"content":"[in] <ph id=\"ph1\">`pExtra`</ph>","pos":[34973,34986],"source":" [in] `pExtra`"},{"content":"[in] <ph id=\"ph1\">`pHandlerInfo`</ph>","pos":[34990,35009],"source":" [in] `pHandlerInfo`"},{"pos":[35019,35031],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[35041,35048],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[35058,35127],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__postcommand\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::PostCommand","linkify":"<a name=\"cmfcpopupmenu__postcommand\"></a>  CMFCPopupMenu::PostCommand","source":"<a name=\"cmfcpopupmenu__postcommand\"></a>  CMFCPopupMenu::PostCommand"},{"pos":[35291,35301],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[35305,35323],"content":"[in] <ph id=\"ph1\">`uiCommandID`</ph>","source":"[in] `uiCommandID`"},{"pos":[35333,35345],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[35355,35362],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[35372,35457],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__pretranslatemessage\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::PreTranslateMessage","linkify":"<a name=\"cmfcpopupmenu__pretranslatemessage\"></a>  CMFCPopupMenu::PreTranslateMessage","source":"<a name=\"cmfcpopupmenu__pretranslatemessage\"></a>  CMFCPopupMenu::PreTranslateMessage"},{"pos":[35630,35640],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[35644,35655],"content":"[in] <ph id=\"ph1\">`pMsg`</ph>","source":"[in] `pMsg`"},{"pos":[35665,35677],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[35687,35694],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[35704,35775],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__recalclayout\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::RecalcLayout","linkify":"<a name=\"cmfcpopupmenu__recalclayout\"></a>  CMFCPopupMenu::RecalcLayout","source":"<a name=\"cmfcpopupmenu__recalclayout\"></a>  CMFCPopupMenu::RecalcLayout"},{"pos":[35951,35961],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[35965,35979],"content":"[in] <ph id=\"ph1\">`bNotify`</ph>","source":"[in] `bNotify`"},{"pos":[35989,35996],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[36006,36081],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__removeallitems\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::RemoveAllItems","linkify":"<a name=\"cmfcpopupmenu__removeallitems\"></a>  CMFCPopupMenu::RemoveAllItems","source":"<a name=\"cmfcpopupmenu__removeallitems\"></a>  CMFCPopupMenu::RemoveAllItems"},{"content":"Clears all the items from a pop-up menu.","pos":[36085,36125]},{"pos":[36173,36240],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__removeitem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::RemoveItem","linkify":"<a name=\"cmfcpopupmenu__removeitem\"></a>  CMFCPopupMenu::RemoveItem","source":"<a name=\"cmfcpopupmenu__removeitem\"></a>  CMFCPopupMenu::RemoveItem"},{"content":"Removes the specified item from the pop-up menu.","pos":[36244,36292]},{"pos":[36346,36356],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`iIndex`</ph>","pos":[36360,36373],"source":"[in] `iIndex`"},{"content":"The zero-based index of the item to delete.","pos":[36377,36420]},{"pos":[36430,36442],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[36446,36500],"content":"<ph id=\"ph1\">`TRUE`</ph> if the method is successful; otherwise <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the method is successful; otherwise `FALSE`."},{"pos":[36510,36517],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method automatically arranges any separators that are affected by the removal of an item.","pos":[36521,36615]},{"content":"For more information about how the framework rearranges separators, see <bpt id=\"p1\">[</bpt>CMFCToolBar::RemoveButton<ept id=\"p1\">](../../mfc/reference/cmfctoolbar-class.md#cmfctoolbar__removebutton)</ept>.","pos":[36616,36784],"source":" For more information about how the framework rearranges separators, see [CMFCToolBar::RemoveButton](../../mfc/reference/cmfctoolbar-class.md#cmfctoolbar__removebutton)."},{"pos":[36794,36859],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__savestate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::SaveState","linkify":"<a name=\"cmfcpopupmenu__savestate\"></a>  CMFCPopupMenu::SaveState","source":"<a name=\"cmfcpopupmenu__savestate\"></a>  CMFCPopupMenu::SaveState"},{"pos":[37013,37020],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[37030,37111],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__setanimationspeed\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::SetAnimationSpeed","linkify":"<a name=\"cmfcpopupmenu__setanimationspeed\"></a>  CMFCPopupMenu::SetAnimationSpeed","source":"<a name=\"cmfcpopupmenu__setanimationspeed\"></a>  CMFCPopupMenu::SetAnimationSpeed"},{"content":"Sets the animation speed for pop-up menus.","pos":[37115,37157]},{"pos":[37227,37237],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nElapse`</ph>","pos":[37241,37255],"source":"[in] `nElapse`"},{"content":"The new animation speed, in milliseconds.","pos":[37259,37300]},{"pos":[37310,37317],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The animation speed is a global value and affects all the pop-up menus in the application.","pos":[37321,37411]},{"content":"This value specifies how long it takes for the animation for a pop-up menu to finish.","pos":[37412,37497]},{"content":"By default, this parameter is set to 30 milliseconds.","pos":[37504,37557]},{"content":"The range of valid values for <ph id=\"ph1\">`nElapse`</ph> is from 0 to 200.","pos":[37558,37615],"source":" The range of valid values for `nElapse` is from 0 to 200."},{"pos":[37625,37704],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__setanimationtype\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::SetAnimationType","linkify":"<a name=\"cmfcpopupmenu__setanimationtype\"></a>  CMFCPopupMenu::SetAnimationType","source":"<a name=\"cmfcpopupmenu__setanimationtype\"></a>  CMFCPopupMenu::SetAnimationType"},{"content":"Sets the animation type for this pop-up menu.","pos":[37708,37753]},{"pos":[37844,37854],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`type`</ph>","pos":[37858,37869],"source":"[in] `type`"},{"content":"An enumerated data type that specifies the type of animation.","pos":[37873,37934]},{"pos":[37944,37951],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[37955,38065],"content":"See <bpt id=\"p1\">[</bpt>CMFCPopupMenu::GetAnimationType<ept id=\"p1\">](#cmfcpopupmenu__getanimationtype)</ept> for a list of valid values for <ph id=\"ph1\">`type`</ph>.","source":"See [CMFCPopupMenu::GetAnimationType](#cmfcpopupmenu__getanimationtype) for a list of valid values for `type`."},{"pos":[38075,38150],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__setautodestroy\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::SetAutoDestroy","linkify":"<a name=\"cmfcpopupmenu__setautodestroy\"></a>  CMFCPopupMenu::SetAutoDestroy","source":"<a name=\"cmfcpopupmenu__setautodestroy\"></a>  CMFCPopupMenu::SetAutoDestroy"},{"pos":[38325,38335],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[38339,38358],"content":"[in] <ph id=\"ph1\">`bAutoDestroy`</ph>","source":"[in] `bAutoDestroy`"},{"pos":[38368,38375],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[38385,38460],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__setdefaultitem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::SetDefaultItem","linkify":"<a name=\"cmfcpopupmenu__setdefaultitem\"></a>  CMFCPopupMenu::SetDefaultItem","source":"<a name=\"cmfcpopupmenu__setdefaultitem\"></a>  CMFCPopupMenu::SetDefaultItem"},{"content":"Sets the default command for the pop-up menu.","pos":[38464,38509]},{"pos":[38567,38577],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`uiCmd`</ph>","pos":[38581,38593],"source":"[in] `uiCmd`"},{"content":"The menu command ID of the new default command.","pos":[38597,38644]},{"pos":[38654,38661],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The default command in the pop-up menu is the command that is selected when the pop-up menu appears.","pos":[38665,38765]},{"pos":[38775,38856],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__setforcemenufocus\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::SetForceMenuFocus","linkify":"<a name=\"cmfcpopupmenu__setforcemenufocus\"></a>  CMFCPopupMenu::SetForceMenuFocus","source":"<a name=\"cmfcpopupmenu__setforcemenufocus\"></a>  CMFCPopupMenu::SetForceMenuFocus"},{"content":"Forces the input focus to return to the menu bar when a pop-up menu is displayed.","pos":[38860,38941]},{"pos":[39010,39020],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bValue`</ph>","pos":[39024,39037],"source":"[in] `bValue`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> if you want the framework to force the input focus to the menu bar when a pop-up menu is displayed.","pos":[39040,39147],"source":" `TRUE` if you want the framework to force the input focus to the menu bar when a pop-up menu is displayed."},{"content":"<ph id=\"ph1\">`FALSE`</ph> if you want the pop-up menu to retain the focus.","pos":[39148,39204],"source":"`FALSE` if you want the pop-up menu to retain the focus."},{"pos":[39214,39221],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method sets a flag that is global for all pop-up menus in the application.","pos":[39225,39304]},{"content":"By default, this feature is not enabled.","pos":[39305,39345]},{"pos":[39355,39430],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__setforceshadow\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::SetForceShadow","linkify":"<a name=\"cmfcpopupmenu__setforceshadow\"></a>  CMFCPopupMenu::SetForceShadow","source":"<a name=\"cmfcpopupmenu__setforceshadow\"></a>  CMFCPopupMenu::SetForceShadow"},{"content":"Forces the framework to draw menu shadows when pop-up menus appear outside the main frame.","pos":[39434,39524]},{"pos":[39590,39600],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bValue`</ph>","pos":[39604,39617],"source":"[in] `bValue`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> if you want the framework to draw menu shadows, <ph id=\"ph2\">`FALSE`</ph> otherwise.","pos":[39620,39694],"source":" `TRUE` if you want the framework to draw menu shadows, `FALSE` otherwise."},{"pos":[39704,39711],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When you call this method, it sets a global flag in your application.","pos":[39715,39784]},{"content":"This flag affects all pop-up menus in your application.","pos":[39785,39840]},{"pos":[39850,39919],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__setmaxwidth\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::SetMaxWidth","linkify":"<a name=\"cmfcpopupmenu__setmaxwidth\"></a>  CMFCPopupMenu::SetMaxWidth","source":"<a name=\"cmfcpopupmenu__setmaxwidth\"></a>  CMFCPopupMenu::SetMaxWidth"},{"content":"Set the maximum width for the pop-up menu.","pos":[39923,39965]},{"pos":[40023,40033],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`iMaxWidth`</ph>","pos":[40037,40053],"source":"[in] `iMaxWidth`"},{"content":"The maximum width for the pop-up menu, in pixels.","pos":[40057,40106]},{"pos":[40116,40123],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If the text associated with a menu command will not fit in the maximum width, it is truncated and the part that does not fit is replaced by three dots.","pos":[40127,40278]},{"pos":[40288,40361],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__setmessagewnd\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::SetMessageWnd","linkify":"<a name=\"cmfcpopupmenu__setmessagewnd\"></a>  CMFCPopupMenu::SetMessageWnd","source":"<a name=\"cmfcpopupmenu__setmessagewnd\"></a>  CMFCPopupMenu::SetMessageWnd"},{"pos":[40524,40534],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[40538,40552],"content":"[in] <ph id=\"ph1\">`pMsgWnd`</ph>","source":"[in] `pMsgWnd`"},{"pos":[40562,40569],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[40579,40670],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__setparentribbonelement\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::SetParentRibbonElement","linkify":"<a name=\"cmfcpopupmenu__setparentribbonelement\"></a>  CMFCPopupMenu::SetParentRibbonElement","source":"<a name=\"cmfcpopupmenu__setparentribbonelement\"></a>  CMFCPopupMenu::SetParentRibbonElement"},{"pos":[40857,40867],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[40871,40883],"content":"[in] <ph id=\"ph1\">`pElem`</ph>","source":"[in] `pElem`"},{"pos":[40893,40900],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[40910,40999],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__setquickcustomizetype\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::SetQuickCustomizeType","linkify":"<a name=\"cmfcpopupmenu__setquickcustomizetype\"></a>  CMFCPopupMenu::SetQuickCustomizeType","source":"<a name=\"cmfcpopupmenu__setquickcustomizetype\"></a>  CMFCPopupMenu::SetQuickCustomizeType"},{"pos":[41182,41192],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[41196,41207],"content":"[in] <ph id=\"ph1\">`Type`</ph>","source":"[in] `Type`"},{"pos":[41217,41224],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[41234,41305],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__setquickmode\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::SetQuickMode","linkify":"<a name=\"cmfcpopupmenu__setquickmode\"></a>  CMFCPopupMenu::SetQuickMode","source":"<a name=\"cmfcpopupmenu__setquickmode\"></a>  CMFCPopupMenu::SetQuickMode"},{"pos":[41454,41461],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[41471,41544],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__setrightalign\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::SetRightAlign","linkify":"<a name=\"cmfcpopupmenu__setrightalign\"></a>  CMFCPopupMenu::SetRightAlign","source":"<a name=\"cmfcpopupmenu__setrightalign\"></a>  CMFCPopupMenu::SetRightAlign"},{"content":"Sets the menu alignment for pop-up menus.","pos":[41548,41589]},{"pos":[41659,41669],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bRightAlign`</ph>","pos":[41673,41691],"source":"[in] `bRightAlign`"},{"content":"A Boolean that indicates the menu alignment.","pos":[41695,41739]},{"content":"<ph id=\"ph1\">`TRUE`</ph> indicates right alignment, <ph id=\"ph2\">`FALSE`</ph> indicates left alignment.","pos":[41740,41807],"source":"`TRUE` indicates right alignment, `FALSE` indicates left alignment."},{"pos":[41817,41824],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"By default, all pop-up menus are left-aligned.","pos":[41828,41874]},{"pos":[41884,41971],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__setsendmenuselectmsg\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::SetSendMenuSelectMsg","linkify":"<a name=\"cmfcpopupmenu__setsendmenuselectmsg\"></a>  CMFCPopupMenu::SetSendMenuSelectMsg","source":"<a name=\"cmfcpopupmenu__setsendmenuselectmsg\"></a>  CMFCPopupMenu::SetSendMenuSelectMsg"},{"content":"Sets a flag that controls whether the pop-up menu notifies its parent frame when the user selects a command.","pos":[41975,42083]},{"pos":[42160,42170],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bSet`</ph>","pos":[42174,42185],"source":"[in] `bSet`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> if the pop-up menu notifies its parent frame, <ph id=\"ph2\">`FALSE`</ph> otherwise.","pos":[42188,42260],"source":" `TRUE` if the pop-up menu notifies its parent frame, `FALSE` otherwise."},{"pos":[42270,42277],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a global option for all the pop-up menus in an application.","pos":[42281,42348]},{"content":"If it is enabled, the pop-up menus will send a <ph id=\"ph1\">`WM_MENUSELECT`</ph> message to the parent frame when the user selects a command.","pos":[42349,42472],"source":" If it is enabled, the pop-up menus will send a `WM_MENUSELECT` message to the parent frame when the user selects a command."},{"pos":[42482,42559],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__showallcommands\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::ShowAllCommands","linkify":"<a name=\"cmfcpopupmenu__showallcommands\"></a>  CMFCPopupMenu::ShowAllCommands","source":"<a name=\"cmfcpopupmenu__showallcommands\"></a>  CMFCPopupMenu::ShowAllCommands"},{"content":"Forces the pop-up menu to display all commands.","pos":[42563,42610]},{"pos":[42659,42666],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is not a global setting and affects only the current pop-up menu.","pos":[42670,42740]},{"pos":[42750,42823],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__triggerresize\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::TriggerResize","linkify":"<a name=\"cmfcpopupmenu__triggerresize\"></a>  CMFCPopupMenu::TriggerResize","source":"<a name=\"cmfcpopupmenu__triggerresize\"></a>  CMFCPopupMenu::TriggerResize"},{"pos":[42973,42980],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[42990,43069],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__updateallshadows\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::UpdateAllShadows","linkify":"<a name=\"cmfcpopupmenu__updateallshadows\"></a>  CMFCPopupMenu::UpdateAllShadows","source":"<a name=\"cmfcpopupmenu__updateallshadows\"></a>  CMFCPopupMenu::UpdateAllShadows"},{"content":"Updates the shadows for all opened pop-up menus.","pos":[43073,43121]},{"pos":[43204,43214],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`lprectScreen`</ph>","pos":[43218,43237],"source":"[in] `lprectScreen`"},{"content":"A rectangle that specifies the region to update, in screen coordinates.","pos":[43241,43312]},{"pos":[43322,43329],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is useful when pop-up menus are displayed over animated controls or other windows that have dynamic content.","pos":[43333,43453]},{"pos":[43463,43534],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpopupmenu__updateshadow\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPopupMenu::UpdateShadow","linkify":"<a name=\"cmfcpopupmenu__updateshadow\"></a>  CMFCPopupMenu::UpdateShadow","source":"<a name=\"cmfcpopupmenu__updateshadow\"></a>  CMFCPopupMenu::UpdateShadow"},{"content":"Updates the shadow for the pop-up menu.","pos":[43538,43577]},{"pos":[43649,43659],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`lprectScreen`</ph>","pos":[43663,43682],"source":"[in] `lprectScreen`"},{"content":"A rectangle, in screen coordinates, that specifies the boundaries of the region to update.","pos":[43686,43776]},{"pos":[43786,43793],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Call this method when a pop-up menu that has a shadow overlaps an animated image.","pos":[43797,43878]},{"pos":[43887,43895],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[43899,43947],"source":"[Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Classes<ept id=\"p1\">](../../mfc/reference/mfc-classes.md)</ept><ph id=\"ph1\"> </ph>","pos":[43950,43997],"source":" [Classes](../../mfc/reference/mfc-classes.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CMFCPopupMenuBar Class<ept id=\"p1\">](../../mfc/reference/cmfcpopupmenubar-class.md)</ept>","pos":[44000,44072],"source":" [CMFCPopupMenuBar Class](../../mfc/reference/cmfcpopupmenubar-class.md)"}],"content":"---\ntitle: \"CMFCPopupMenu Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CMFCPopupMenu\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CMFCPopupMenu class\"\nms.assetid: 9555dca1-8c9c-44c9-af72-0659ddad128e\ncaps.latest.revision: 40\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CMFCPopupMenu Class\nImplements Windows pop-up menu functionality and extends it by adding features such as tear-off menus and tooltips.  \n  \n## Syntax  \n  \n```  \nclass CMFCPopupMenu : public CMiniFrameWnd  \n```  \n  \n## Members  \n  \n### Protected Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCPopupMenu::CMFCPopupMenu](#cmfcpopupmenu__cmfcpopupmenu)|Constructs a `CMFCPopupMenu` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCPopupMenu::ActivatePopupMenu](#cmfcpopupmenu__activatepopupmenu)||  \n|[CMFCPopupMenu::AlwaysShowEmptyToolsEntry](#cmfcpopupmenu__alwaysshowemptytoolsentry)|Sets whether a pop-up menu is enabled to show empty entries for user-defined tools.|  \n|[CMFCPopupMenu::AreAllCommandsShown](#cmfcpopupmenu__areallcommandsshown)||  \n|[CMFCPopupMenu::CheckArea](#cmfcpopupmenu__checkarea)|Determines the location of a point relative to the pop-up menu.|  \n|[CMFCPopupMenu::CloseMenu](#cmfcpopupmenu__closemenu)||  \n|[CMFCPopupMenu::Create](#cmfcpopupmenu__create)|Creates a pop-up menu and attaches it to the `CMFCPopupMenu` object.|  \n|[CMFCPopupMenu::DefaultMouseClickOnClose](#cmfcpopupmenu__defaultmouseclickonclose)||  \n|[CMFCPopupMenu::EnableMenuLogo](#cmfcpopupmenu__enablemenulogo)|Initializes the logo for a pop-up menu.|  \n|[CMFCPopupMenu::EnableMenuSound](#cmfcpopupmenu__enablemenusound)|Enables menu sound.|  \n|[CMFCPopupMenu::EnableResize](#cmfcpopupmenu__enableresize)||  \n|[CMFCPopupMenu::EnableScrolling](#cmfcpopupmenu__enablescrolling)||  \n|[CMFCPopupMenu::EnableVertResize](#cmfcpopupmenu__enablevertresize)||  \n|[CMFCPopupMenu::FindSubItemByCommand](#cmfcpopupmenu__findsubitembycommand)||  \n|[CMFCPopupMenu::GetActiveMenu](#cmfcpopupmenu__getactivemenu)|Returns the currently active menu.|  \n|[CMFCPopupMenu::GetAnimationSpeed](#cmfcpopupmenu__getanimationspeed)|Returns the animation speed for pop-up menus.|  \n|[CMFCPopupMenu::GetAnimationType](#cmfcpopupmenu__getanimationtype)|Returns the current type of pop-up menu animation.|  \n|[CMFCPopupMenu::GetDropDirection](#cmfcpopupmenu__getdropdirection)||  \n|[CMFCPopupMenu::GetForceMenuFocus](#cmfcpopupmenu__getforcemenufocus)|Indicates whether the focus is returned to the menu bar when a pop-up menu is displayed.|  \n|[CMFCPopupMenu::GetForceShadow](#cmfcpopupmenu__getforceshadow)||  \n|[CMFCPopupMenu::GetHMenu](#cmfcpopupmenu__gethmenu)|Returns a handle to the attached menu resource.|  \n|[CMFCPopupMenu::GetMenuBar](#cmfcpopupmenu__getmenubar)|Returns the [CMFCPopupMenuBar](../../mfc/reference/cmfcpopupmenubar-class.md) embedded inside the pop-up menu.|  \n|[CMFCPopupMenu::GetMenuItem](#cmfcpopupmenu__getmenuitem)|Returns a pointer to the menu item at the specified index.|  \n|[CMFCPopupMenu::GetMenuItemCount](#cmfcpopupmenu__getmenuitemcount)|Returns the number of items in a popup menu.|  \n|[CMFCPopupMenu::GetMessageWnd](#cmfcpopupmenu__getmessagewnd)|Returns a pointer to the window where the framework routes the pop-up menu messages.|  \n|[CMFCPopupMenu::GetParentArea](#cmfcpopupmenu__getparentarea)||  \n|[CMFCPopupMenu::GetParentButton](#cmfcpopupmenu__getparentbutton)|Returns a pointer to the parent toolbar button.|  \n|[CMFCPopupMenu::GetParentPopupMenu](#cmfcpopupmenu__getparentpopupmenu)|Returns a pointer to the parent pop-up menu.|  \n|[CMFCPopupMenu::GetParentRibbonElement](#cmfcpopupmenu__getparentribbonelement)||  \n|[CMFCPopupMenu::GetParentToolBar](#cmfcpopupmenu__getparenttoolbar)|Returns a pointer to the parent toolbar.|  \n|[CMFCPopupMenu::GetQuickCustomizeType](#cmfcpopupmenu__getquickcustomizetype)||  \n|[CMFCPopupMenu::GetSelItem](#cmfcpopupmenu__getselitem)|Returns a pointer to the currently selected menu command.|  \n|[CMFCPopupMenu::HasBeenResized](#cmfcpopupmenu__hasbeenresized)||  \n|[CMFCPopupMenu::HideRarelyUsedCommands](#cmfcpopupmenu__hiderarelyusedcommands)|Indicates whether the pop-up menu can hide rarely used commands.|  \n|[CMFCPopupMenu::InCommand](#cmfcpopupmenu__incommand)||  \n|[CMFCPopupMenu::InsertItem](#cmfcpopupmenu__insertitem)|Inserts a new item into the pop-up menu at the specified location.|  \n|[CMFCPopupMenu::InsertSeparator](#cmfcpopupmenu__insertseparator)|Inserts a separator into the pop-up menu at the specified location.|  \n|[CMFCPopupMenu::IsAlwaysClose](#cmfcpopupmenu__isalwaysclose)||  \n|[CMFCPopupMenu::IsAlwaysShowEmptyToolsEntry](#cmfcpopupmenu__isalwaysshowemptytoolsentry)||  \n|[CMFCPopupMenu::IsCustomizePane](#cmfcpopupmenu__iscustomizepane)|Indicates whether the pop-up menu is functioning as a **QuickCustomizePane**.|  \n|[CMFCPopupMenu::IsEscClose](#cmfcpopupmenu__isescclose)||  \n|[CMFCPopupMenu::IsIdle](#cmfcpopupmenu__isidle)|Indicates whether a pop-up menu is currently idle.|  \n|[CMFCPopupMenu::IsMenuSound](#cmfcpopupmenu__ismenusound)||  \n|[CMFCPopupMenu::IsQuickCustomize](#cmfcpopupmenu__isquickcustomize)|Determines whether the associated [CMFCToolBarMenuButton Class](../../mfc/reference/cmfctoolbarmenubutton-class.md) is in QuickCustomize mode.|  \n|[CMFCPopupMenu::IsResizeble](#cmfcpopupmenu__isresizeble)||  \n|[CMFCPopupMenu::IsRightAlign](#cmfcpopupmenu__isrightalign)|Indicates whether the menu is right-aligned or left-aligned.|  \n|[CMFCPopupMenu::IsScrollable](#cmfcpopupmenu__isscrollable)||  \n|[CMFCPopupMenu::IsSendMenuSelectMsg](#cmfcpopupmenu__issendmenuselectmsg)|Indicates whether the framework notifies the parent frame when the user selects a command from the pop-up menu.|  \n|[CMFCPopupMenu::IsShown](#cmfcpopupmenu__isshown)|Indicates whether the pop-up menu is currently visible.|  \n|[CMFCPopupMenu::MoveTo](#cmfcpopupmenu__moveto)||  \n|[CMFCPopupMenu::OnCmdMsg](#cmfcpopupmenu__oncmdmsg)|(Overrides `CFrameWnd::OnCmdMsg`.)|  \n|[CMFCPopupMenu::PostCommand](#cmfcpopupmenu__postcommand)||  \n|[CMFCPopupMenu::PreTranslateMessage](#cmfcpopupmenu__pretranslatemessage)|(Overrides `CFrameWnd::PreTranslateMessage`.)|  \n|[CMFCPopupMenu::RecalcLayout](#cmfcpopupmenu__recalclayout)|Called by the framework when the standard control bars are toggled on or off or when the frame window is resized. (Overrides [CFrameWnd::RecalcLayout](../../mfc/reference/cframewnd-class.md#cframewnd__recalclayout).)|  \n|[CMFCPopupMenu::RemoveAllItems](#cmfcpopupmenu__removeallitems)|Clears all the items from a pop-up menu.|  \n|[CMFCPopupMenu::RemoveItem](#cmfcpopupmenu__removeitem)|Removes the specified item from a pop-up menu.|  \n|[CMFCPopupMenu::SaveState](#cmfcpopupmenu__savestate)||  \n|[CMFCPopupMenu::SetAnimationSpeed](#cmfcpopupmenu__setanimationspeed)|Sets the animation speed for pop-up menus.|  \n|[CMFCPopupMenu::SetAnimationType](#cmfcpopupmenu__setanimationtype)|Sets the animation type for the pop-up menu.|  \n|[CMFCPopupMenu::SetAutoDestroy](#cmfcpopupmenu__setautodestroy)||  \n|[CMFCPopupMenu::SetDefaultItem](#cmfcpopupmenu__setdefaultitem)|Sets the default command for the pop-up menu.|  \n|[CMFCPopupMenu::SetForceMenuFocus](#cmfcpopupmenu__setforcemenufocus)|Forces the input focus to return to the menu bar when a pop-up menu is displayed.|  \n|[CMFCPopupMenu::SetForceShadow](#cmfcpopupmenu__setforceshadow)|Forces the framework to draw menu shadows when pop-up menus appear outside the main frame.|  \n|[CMFCPopupMenu::SetMaxWidth](#cmfcpopupmenu__setmaxwidth)|Set the maximum width for the pop-up menu.|  \n|[CMFCPopupMenu::SetMessageWnd](#cmfcpopupmenu__setmessagewnd)||  \n|[CMFCPopupMenu::SetParentRibbonElement](#cmfcpopupmenu__setparentribbonelement)||  \n|[CMFCPopupMenu::SetQuickCustomizeType](#cmfcpopupmenu__setquickcustomizetype)||  \n|[CMFCPopupMenu::SetQuickMode](#cmfcpopupmenu__setquickmode)||  \n|[CMFCPopupMenu::SetRightAlign](#cmfcpopupmenu__setrightalign)|Sets the menu alignment for pop-up menus.|  \n|[CMFCPopupMenu::SetSendMenuSelectMsg](#cmfcpopupmenu__setsendmenuselectmsg)|Sets a flag that controls whether the pop-up menu notifies its parent frame when the user selects a command.|  \n|[CMFCPopupMenu::ShowAllCommands](#cmfcpopupmenu__showallcommands)|Forces the pop-up menu to display all commands.|  \n|[CMFCPopupMenu::TriggerResize](#cmfcpopupmenu__triggerresize)||  \n|[CMFCPopupMenu::UpdateAllShadows](#cmfcpopupmenu__updateallshadows)|Updates the shadows for all opened pop-up menus.|  \n|[CMFCPopupMenu::UpdateShadow](#cmfcpopupmenu__updateshadow)|Updates the shadow for the pop-up menu.|  \n  \n### Protected Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCPopupMenu::CreateTearOffBar](#cmfcpopupmenu__createtearoffbar)||  \n|[CMFCPopupMenu::OnChangeHot](#cmfcpopupmenu__onchangehot)||  \n|[CMFCPopupMenu::OnChooseItem](#cmfcpopupmenu__onchooseitem)||  \n  \n### Remarks  \n Normally, MFC creates pop-up menus automatically. If you want to create a `CMFCPopupMenu` object manually, allocate one on the heap and then call [CMFCPopupMenu::Create](#cmfcpopupmenu__create).  \n  \n## Example  \n The following example demonstrates how to configure a pop-up menu object. The example shows how to set the logo and the sound of the pop-up menu, set the animation speed and type, draw menu shadows when the pop-up menu appears outside the main frame, set the maximum width, and set the right menu alignment of the pop-up menu. This code snippet is part of the [Custom Pages sample](../../visual-cpp-samples.md).  \n  \n [!code-cpp[NVC_MFC_CustomPages#2](../../mfc/reference/codesnippet/cpp/cmfcpopupmenu-class_1.cpp)]  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n [CFrameWnd](../../mfc/reference/cframewnd-class.md)  \n  \n [CMiniFrameWnd](../../mfc/reference/cminiframewnd-class.md)  \n  \n [CMFCPopupMenu](../../mfc/reference/cmfcpopupmenu-class.md)  \n  \n## Requirements  \n **Header:** afxpopupmenu.h  \n  \n##  <a name=\"cmfcpopupmenu__activatepopupmenu\"></a>  CMFCPopupMenu::ActivatePopupMenu  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nstatic BOOL __stdcall ActivatePopupMenu(\n    CFrameWnd* pTopFrame,  \n    CMFCPopupMenu* pPopupMenu);\n```  \n  \n### Parameters  \n [in] `pTopFrame`  \n [in] `pPopupMenu`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__alwaysshowemptytoolsentry\"></a>  CMFCPopupMenu::AlwaysShowEmptyToolsEntry  \n Sets whether a pop-up menu is enabled to show empty entries for user-defined tools.  \n  \n```  \nstatic void AlwaysShowEmptyToolsEntry(BOOL bShow = TRUE);\n```  \n  \n### Parameters  \n [in] `bShow`  \n `TRUE` if the pop-up menu can display empty entries; `FALSE` otherwise.  \n  \n##  <a name=\"cmfcpopupmenu__areallcommandsshown\"></a>  CMFCPopupMenu::AreAllCommandsShown  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL AreAllCommandsShown() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__checkarea\"></a>  CMFCPopupMenu::CheckArea  \n Determines the location of a point relative to the pop-up menu.  \n  \n```  \nMENUAREA_TYPE CheckArea(const CPoint& ptScreen) const;\n\n \n```  \n  \n### Parameters  \n [in] `ptScreen`  \n A point, in screen coordinates.  \n  \n### Return Value  \n A MENUAREA_TYPE parameter that indicates where the point is relative to the pop-up menu.  \n  \n### Remarks  \n A MENUAREA_TYPE parameter can have any one of the following values.  \n  \n-   OUTSIDE - `ptScreen` is outside the pop-up menu.  \n  \n-   LOGO - `ptScreen` is over a logo area.  \n  \n-   TEAROFF_CAPTION - `ptScreen` is over the tear-off caption.  \n  \n-   SHADOW_BOTTOM - `ptScreen` is over the bottom shadow of the pop-up menu.  \n  \n-   SHADOW_RIGHT - `ptScreen` is over the right shadow of the pop-up menu.  \n  \n-   MENU - `ptScreen` is over a command.  \n  \n##  <a name=\"cmfcpopupmenu__closemenu\"></a>  CMFCPopupMenu::CloseMenu  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid CloseMenu(BOOL bSetFocusToBar = FALSE);\n```  \n  \n### Parameters  \n [in] `bSetFocusToBar`  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__cmfcpopupmenu\"></a>  CMFCPopupMenu::CMFCPopupMenu  \n Constructs a [CMFCPopupMenu](../../mfc/reference/cmfcpopupmenu-class.md) object.  \n  \n```  \nCMFCPopupMenu(\n    CMFCToolBarsMenuPropertyPage* pCustPage,  \n    LPCTSTR lpszTitle);\n```  \n  \n### Parameters  \n [in] `pCustPage`  \n A pointer to a customization page.  \n  \n [in] `lpszTitle`  \n A string that contains the menu caption.  \n  \n### Remarks  \n This method allocates the resources for a `CMFCPopupMenu`. To create the pop-up menu item, call [CMFCPopupMenu::Create](#cmfcpopupmenu__create).  \n  \n##  <a name=\"cmfcpopupmenu__create\"></a>  CMFCPopupMenu::Create  \n Creates a pop-up menu and attaches it to a [CMFCPopupMenu](../../mfc/reference/cmfcpopupmenu-class.md) object.  \n  \n```  \nvirtual BOOL Create(\n    CWnd* pWndParent,  \n    int x,  \n    int y,  \n    HMENU hMenu,  \n    BOOL bLocked = FALSE,  \n    BOOL bOwnMessage = FALSE);\n```  \n  \n### Parameters  \n [in] `pWndParent`  \n The parent window for the `CMFCPopupMenu`.  \n  \n [in] `x`  \n The horizontal screen coordinate for the location of the pop-up menu  \n  \n [in] `y`  \n The vertical screen coordinate for the location of the pop-menu.  \n  \n [in] `hMenu`  \n A handle to a menu resource.  \n  \n [in] `bLocked`  \n A Boolean parameter that indicates whether the menu is customizable. `FALSE` indicates that the pop-up menu is customizable.  \n  \n [in] `bOwnMessage`  \n A Boolean parameter that indicates how the framework routes the menu messages. See the Remarks section for more details.  \n  \n### Return Value  \n `TRUE` if the method is successful; otherwise `FALSE`.  \n  \n### Remarks  \n If `bOwnMessage` is `TRUE`, the framework routes any menu messages to `pWndParent`. `pWndParent` must not be `NULL` if `bOwnMessage` is `TRUE.` If `bOwnMessage` is `FALSE`, the framework routes the menu messages to the parent pop-up menu.  \n  \n### Example  \n The following example demonstrates how to use the `Create` method of the `CMFCPopuMenu` class. This code snippet is part of the [Custom Pages sample](../../visual-cpp-samples.md).  \n  \n [!code-cpp[NVC_MFC_CustomPages#1](../../mfc/reference/codesnippet/cpp/cmfcpopupmenu-class_2.cpp)]  \n  \n##  <a name=\"cmfcpopupmenu__createtearoffbar\"></a>  CMFCPopupMenu::CreateTearOffBar  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual CPane* CreateTearOffBar(\n    CFrameWnd* pWndMain,  \n    UINT uiID,  \n    LPCTSTR lpszName);\n```  \n  \n### Parameters  \n [in] `pWndMain`  \n [in] `uiID`  \n [in] `lpszName`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__defaultmouseclickonclose\"></a>  CMFCPopupMenu::DefaultMouseClickOnClose  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL DefaultMouseClickOnClose() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__enablemenulogo\"></a>  CMFCPopupMenu::EnableMenuLogo  \n Initializes the logo for a pop-up menu.  \n  \n```  \nvoid EnableMenuLogo(\n    int iLogoSize,  \n    LOGO_LOCATION nLogoLocation = MENU_LOGO_LEFT);\n```  \n  \n### Parameters  \n [in] `iLogoSize`  \n The size of the logo, in pixels.  \n  \n [in] `nLogoLocation`  \n An enumerated data type that indicates the location of the logo.  \n  \n### Remarks  \n To display the logo, implement the method [CFrameWndEx::OnDrawMenuLogo](../../mfc/reference/cframewndex-class.md#cframewndex__ondrawmenulogo) in the main frame window.  \n  \n The possible values for `nLogoLocation` are MENU_LOGO_LEFT, MENU_LOGO_RIGHT, MENU_LOGO_TOP, and MENU_LOGO_BOTTOM.  \n  \n##  <a name=\"cmfcpopupmenu__enablemenusound\"></a>  CMFCPopupMenu::EnableMenuSound  \n Enables menu sound.  \n  \n```  \nstatic void EnableMenuSound(BOOL bEnable = TRUE);\n```  \n  \n### Parameters  \n [in] `bEnable`  \n `TRUE` to enable sound, `FALSE` otherwise.  \n  \n### Remarks  \n If you enable sound, the framework calls the [PlaySound](http://msdn.microsoft.com/library/windows/desktop/bb774426) method when a user opens a pop-up menu or selects a menu command. By default, this feature is enabled.  \n  \n##  <a name=\"cmfcpopupmenu__enableresize\"></a>  CMFCPopupMenu::EnableResize  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid EnableResize(CSize sizeMinResize);\n```  \n  \n### Parameters  \n [in] `sizeMinResize`  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__enablescrolling\"></a>  CMFCPopupMenu::EnableScrolling  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid EnableScrolling(BOOL = TRUE);\n```  \n  \n### Parameters  \n [in] `BOOL`  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__enablevertresize\"></a>  CMFCPopupMenu::EnableVertResize  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid EnableVertResize(int nMinResize);\n```  \n  \n### Parameters  \n [in] `nMinResize`  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__findsubitembycommand\"></a>  CMFCPopupMenu::FindSubItemByCommand  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nCMFCToolBarMenuButton* FindSubItemByCommand(UINT uiCmd) const;\n\n \n```  \n  \n### Parameters  \n [in] `uiCmd`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__getactivemenu\"></a>  CMFCPopupMenu::GetActiveMenu  \n Returns the currently active menu.  \n  \n```  \nstatic CMFCPopupMenu* GetActiveMenu();\n```  \n  \n### Return Value  \n A pointer to the active pop-up menu, or NULL if no pop-up menu is currently active.  \n  \n### Remarks  \n Each application can have at most one active pop-up menu.  \n  \n##  <a name=\"cmfcpopupmenu__getanimationspeed\"></a>  CMFCPopupMenu::GetAnimationSpeed  \n Returns the animation speed for pop-up menus.  \n  \n```  \nstatic UINT GetAnimationSpeed();\n```  \n  \n### Return Value  \n An integer that indicates the time, in milliseconds, that a pop-up menu animation takes to finish.  \n  \n### Remarks  \n The animation speed is a global value. Use [CMFCPopupMenu::SetAnimationSpeed](#cmfcpopupmenu__setanimationspeed) to change the animation speed for pop-up menus.  \n  \n##  <a name=\"cmfcpopupmenu__getanimationtype\"></a>  CMFCPopupMenu::GetAnimationType  \n Returns the current type of pop-up animation.  \n  \n```  \nstatic CMFCPopupMenu::ANIMATION_TYPE GetAnimationType(BOOL bNoSystem = FALSE);\n```  \n  \n### Parameters  \n [in] `bNoSystem`  \n A Boolean parameter that indicates whether this method checks the global value. FALSE if you want this method to return the animation style for this instance of the [CMFCPopupMenu Class](../../mfc/reference/cmfcpopupmenu-class.md).  \n  \n### Return Value  \n An enumerated value that describes the animation type.  \n  \n### Remarks  \n The style of animation for pop-up menus is global for your application. Use [CMFCPopupMenu::SetAnimationType](#cmfcpopupmenu__setanimationtype) to set the animation style.  \n  \n The following table lists the possible animation types.  \n  \n NO_ANIMATION  \n The pop-up menu is not animated and appears immediately.  \n  \n UNFOLD  \n The framework reveals the pop-up menu from the upper-left corner to the lower right corner.  \n  \n SLIDE  \n The pop-up menu moves from top to bottom.  \n  \n FADE  \n The pop-up menu first appears transparent and gradually solidifies.  \n  \n##  <a name=\"cmfcpopupmenu__getdropdirection\"></a>  CMFCPopupMenu::GetDropDirection  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nDROP_DIRECTION GetDropDirection() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__getforcemenufocus\"></a>  CMFCPopupMenu::GetForceMenuFocus  \n Indicates whether the focus is returned to the menu bar when a pop-up menu is displayed.  \n  \n```  \nstatic BOOL GetForceMenuFocus();\n```  \n  \n### Return Value  \n `TRUE` if the input focus is returned to the menu bar when a pop-up menu is displayed; `FALSE` if the pop-up menu retains the focus.  \n  \n### Remarks  \n By default, your application does not return focus to the menu bar. To change this setting, use [CMFCPopupMenu::SetForceMenuFocus](#cmfcpopupmenu__setforcemenufocus).  \n  \n##  <a name=\"cmfcpopupmenu__getforceshadow\"></a>  CMFCPopupMenu::GetForceShadow  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nstatic BOOL __stdcall GetForceShadow();\n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__gethmenu\"></a>  CMFCPopupMenu::GetHMenu  \n Returns a handle to the attached menu resource.  \n  \n```  \nHMENU GetHMenu();\n```  \n  \n##  <a name=\"cmfcpopupmenu__getmenubar\"></a>  CMFCPopupMenu::GetMenuBar  \n Returns the [CMFCPopupMenuBar](../../mfc/reference/cmfcpopupmenubar-class.md) embedded inside the pop-up menu.  \n  \n```  \nvirtual CMFCPopupMenuBar* GetMenuBar();\n```  \n  \n### Return Value  \n A pointer to the embedded `CMFCPopupMenuBar`.  \n  \n### Remarks  \n The pop-up menu has an embedded `CMFCPopupMenuBar` object. You must override this method in a derived class if you are using a different embedded class.  \n  \n##  <a name=\"cmfcpopupmenu__getmenuitem\"></a>  CMFCPopupMenu::GetMenuItem  \n Returns a pointer to the menu item at the specified index.  \n  \n```  \nCMFCToolBarMenuButton* GetMenuItem(int iIndex) const;\n\n \n```  \n  \n### Parameters  \n [in] `iIndex`  \n The zero-based index of a menu item.  \n  \n### Return Value  \n A pointer to a menu item. `NULL` if the index is invalid.  \n  \n### Remarks  \n Menu items are represented by the [CMFCToolBarMenuButton Class](../../mfc/reference/cmfctoolbarmenubutton-class.md). When you call this method, it returns a pointer to the appropriate `CMFCToolBarMenuButton`.  \n  \n##  <a name=\"cmfcpopupmenu__getmenuitemcount\"></a>  CMFCPopupMenu::GetMenuItemCount  \n Returns the number of items in a pop-up menu.  \n  \n```  \nint GetMenuItemCount() const;\n\n \n```  \n  \n### Return Value  \n The number of items in the menu.  \n  \n##  <a name=\"cmfcpopupmenu__getmessagewnd\"></a>  CMFCPopupMenu::GetMessageWnd  \n Returns a pointer to the window where the framework routes the pop-up menu messages.  \n  \n```  \nCWnd* GetMessageWnd() const;\n\n \n```  \n  \n### Return Value  \n A pointer to the window that receives the pop-up menu messages; `NULL` if there is no window.  \n  \n### Remarks  \n When you use the method [CMFCPopupMenu::Create](#cmfcpopupmenu__create) to create a pop-up menu, you specify what window receives the menu messages.  \n  \n##  <a name=\"cmfcpopupmenu__getparentarea\"></a>  CMFCPopupMenu::GetParentArea  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual CWnd* GetParentArea(CRect& rectParentBtn);\n```  \n  \n### Parameters  \n [in] `rectParentBtn`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__getparentbutton\"></a>  CMFCPopupMenu::GetParentButton  \n Returns a pointer to the parent toolbar button.  \n  \n```  \nCMFCToolBarMenuButton* GetParentButton() const;\n\n \n```  \n  \n### Return Value  \n A pointer to the parent toolbar button. `NULL` if the pop-up menu has no parent toolbar button.  \n  \n### Remarks  \n A [CMFCPopupMenu](../../mfc/reference/cmfcpopupmenu-class.md) can be associated with a button on the menu. In this scenario, the pop-up menu appears when a user selects the parent toolbar button.  \n  \n If the pop-up menu is a shortcut menu, it will have no parent toolbar button.  \n  \n##  <a name=\"cmfcpopupmenu__getparentpopupmenu\"></a>  CMFCPopupMenu::GetParentPopupMenu  \n Returns a pointer to the parent pop-up menu.  \n  \n```  \nCMFCPopupMenu* GetParentPopupMenu() const;\n\n \n```  \n  \n### Return Value  \n A pointer to the parent [CMFCPopupMenu](../../mfc/reference/cmfcpopupmenu-class.md) object; `NULL` if there is no parent pop-up menu.  \n  \n### Remarks  \n A pop-up menu has a parent `CMFCPopupMenu` object only if it is a submenu.  \n  \n##  <a name=\"cmfcpopupmenu__getparentribbonelement\"></a>  CMFCPopupMenu::GetParentRibbonElement  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nCMFCRibbonBaseElement* GetParentRibbonElement() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__getparenttoolbar\"></a>  CMFCPopupMenu::GetParentToolBar  \n Returns a pointer to the parent toolbar.  \n  \n```  \nCMFCToolBar* GetParentToolBar() const;\n\n \n```  \n  \n### Return Value  \n A pointer to the parent toolbar. `NULL` if the pop-up menu has no parent toolbar.  \n  \n### Remarks  \n If the [CMFCPopupMenu](../../mfc/reference/cmfcpopupmenu-class.md) is a shortcut menu, then it has no parent toolbar.  \n  \n##  <a name=\"cmfcpopupmenu__getquickcustomizetype\"></a>  CMFCPopupMenu::GetQuickCustomizeType  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nQUICK_CUSTOMIZE_TYPE GetQuickCustomizeType() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__getselitem\"></a>  CMFCPopupMenu::GetSelItem  \n Returns a pointer to the currently selected menu command.  \n  \n```  \nCMFCToolBarMenuButton* GetSelItem();\n```  \n  \n### Return Value  \n A pointer to the currently selected menu command; `NULL` if no item is selected.  \n  \n### Remarks  \n The menu commands on a pop-up menu are represented by the [CMFCToolBarMenuButton Class](../../mfc/reference/cmfctoolbarmenubutton-class.md), or a class derived from `CMFCToolBarMenuButton`.  \n  \n##  <a name=\"cmfcpopupmenu__hasbeenresized\"></a>  CMFCPopupMenu::HasBeenResized  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL HasBeenResized() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__hiderarelyusedcommands\"></a>  CMFCPopupMenu::HideRarelyUsedCommands  \n Indicates whether the pop-up menu can hide rarely used commands.  \n  \n```  \nBOOL HideRarelyUsedCommands() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the pop-up menu can hide the rarely used commands; otherwise `FALSE`.  \n  \n### Remarks  \n This method specifies only whether a pop-up menu can hide rarely used commands, not if that configuration is enabled. A pop-up menu can hide rarely used commands if it has a parent button and the parent window is derived from the [CMFCMenuBar Class](../../mfc/reference/cmfcmenubar-class.md). Use [CMFCMenuBar::SetRecentlyUsedMenus](../../mfc/reference/cmfcmenubar-class.md#cmfcmenubar__setrecentlyusedmenus) to enable this feature and [CMFCMenuBar::IsRecentlyUsedMenus](../../mfc/reference/cmfcmenubar-class.md#cmfcmenubar__isrecentlyusedmenus) to determine if this feature is currently enabled. You must call both of these methods for the parent window.  \n  \n##  <a name=\"cmfcpopupmenu__incommand\"></a>  CMFCPopupMenu::InCommand  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL InCommand();\n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__insertitem\"></a>  CMFCPopupMenu::InsertItem  \n Inserts a new item into the pop-up menu at the specified location.  \n  \n```  \nint InsertItem(\n    const CMFCToolBarMenuButton& button,  \n    int iInsertA = -1);\n```  \n  \n### Parameters  \n [in] `button`  \n A reference to the menu item to add.  \n  \n [in] `iInsertAt`  \n The zero-based index for the new item. If `iInsertAt` is -1, the item is added to the end of the menu.  \n  \n### Return Value  \n The zero-based index of the position where the item was inserted. -1 if the method fails.  \n  \n### Remarks  \n This method will fail if you provide an invalid value for `iInsertAt`, such as an integer larger than the number of items currently on the pop-up menu.  \n  \n##  <a name=\"cmfcpopupmenu__insertseparator\"></a>  CMFCPopupMenu::InsertSeparator  \n Inserts a separator into the pop-up menu at the specified location.  \n  \n```  \nint InsertSeparator(int iInsertAt = -1);\n```  \n  \n### Parameters  \n [in] `iInsertAt`  \n The zero-based index of the position where this method will insert the separator.  \n  \n### Return Value  \n The zero-based index of the position where the separator was inserted. -1 if this method fails.  \n  \n### Remarks  \n A value of -1 for `iInsertAt` means this method will add the separator to the end of the pop-up menu.  \n  \n This method fails if `iInsertAt` is an invalid value.  \n  \n##  <a name=\"cmfcpopupmenu__isalwaysclose\"></a>  CMFCPopupMenu::IsAlwaysClose  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL IsAlwaysClose() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__isalwaysshowemptytoolsentry\"></a>  CMFCPopupMenu::IsAlwaysShowEmptyToolsEntry  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nstatic BOOL __stdcall IsAlwaysShowEmptyToolsEntry();\n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__iscustomizepane\"></a>  CMFCPopupMenu::IsCustomizePane  \n Indicates whether the pop-up menu is functioning as a **QuickCustomizePane**.  \n  \n```  \nBOOL IsCustomizePane();\n```  \n  \n### Return Value  \n `TRUE` if the pop-up is a **QuckCustomizePane**; otherwise `FALSE`.  \n  \n### Remarks  \n Use the **QuickCustomizePane** to enable the user to directly customize the pop-up menu. The **QuickCustomizePane** is a [CMFCPopupMenu](../../mfc/reference/cmfcpopupmenu-class.md) that appears when the user clicks on a toolbar button to edit it directly.  \n  \n Your application should call this method during [CMDIFrameWndEx::OnShowCustomizePane](../../mfc/reference/cmdiframewndex-class.md#cmdiframewndex__onshowcustomizepane).  \n  \n##  <a name=\"cmfcpopupmenu__isescclose\"></a>  CMFCPopupMenu::IsEscClose  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL IsEscClose();\n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__isidle\"></a>  CMFCPopupMenu::IsIdle  \n Indicates whether a pop-up menu is currently idle.  \n  \n```  \nvirtual BOOL IsIdle() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the pop-up menu is in idle mode; otherwise `FALSE`.  \n  \n### Remarks  \n By default, a pop-up menu is in idle mode if the display animation is complete and the user is not scrolling the pop-up menu.  \n  \n##  <a name=\"cmfcpopupmenu__ismenusound\"></a>  CMFCPopupMenu::IsMenuSound  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nstatic UINT __stdcall IsMenuSound();\n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__isquickcustomize\"></a>  CMFCPopupMenu::IsQuickCustomize  \n Determines whether the associated [CMFCToolBarMenuButton Class](../../mfc/reference/cmfctoolbarmenubutton-class.md) is in QuickCustomize mode.  \n  \n```  \nBOOL IsQuickCustomize();\n```  \n  \n### Return Value  \n `TRUE` if the associated menu button is in QuickCustomize mode; otherwise `FALSE`. This method will also return `FALSE` if the pop-up menu is not associated with a `CMFCToolBarMenuButton`.  \n  \n### Remarks  \n In QuickCustomize mode the user selects a button on a toolbar to customize the button directly.  \n  \n##  <a name=\"cmfcpopupmenu__isresizeble\"></a>  CMFCPopupMenu::IsResizeble  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL IsResizeble() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__isrightalign\"></a>  CMFCPopupMenu::IsRightAlign  \n Indicates whether the menu is right-aligned or left-aligned.  \n  \n```  \nBOOL IsRightAlign() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the menu is right-aligned; `FALSE` if the menu left-aligned.  \n  \n### Remarks  \n You can use [CMFCPopupMenu::SetRightAlign](#cmfcpopupmenu__setrightalign) to set the menu alignment. By default, pop-up menus use left-alignment.  \n  \n Menu alignment is not a global setting and can vary between pop-up menus.  \n  \n##  <a name=\"cmfcpopupmenu__isscrollable\"></a>  CMFCPopupMenu::IsScrollable  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL IsScrollable() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__issendmenuselectmsg\"></a>  CMFCPopupMenu::IsSendMenuSelectMsg  \n Indicates whether the framework notifies the parent frame when the user selects a command from the pop-up menu.  \n  \n```  \nstatic BOOL IsSendMenuSelectMsg();\n```  \n  \n### Return Value  \n `TRUE` if the framework notifies the parent frame; otherwise `FALSE`.  \n  \n### Remarks  \n The framework notifies the parent frame by sending it the `WM_MENUSELECT` message when a used selects a menu command.  \n  \n##  <a name=\"cmfcpopupmenu__isshown\"></a>  CMFCPopupMenu::IsShown  \n Indicates whether the pop-up menu is currently visible.  \n  \n```  \nBOOL IsShown() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if a pop-up menu is visible; otherwise `FALSE`.  \n  \n##  <a name=\"cmfcpopupmenu__moveto\"></a>  CMFCPopupMenu::MoveTo  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid MoveTo(const CPoint& pt);\n```  \n  \n### Parameters  \n [in] `pt`  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__onchangehot\"></a>  CMFCPopupMenu::OnChangeHot  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void OnChangeHot(int nHot);\n```  \n  \n### Parameters  \n [in] `nHot`  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__onchooseitem\"></a>  CMFCPopupMenu::OnChooseItem  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void OnChooseItem(UINT uidCmdID);\n```  \n  \n### Parameters  \n [in] `uidCmdID`  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__oncmdmsg\"></a>  CMFCPopupMenu::OnCmdMsg  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL OnCmdMsg(\n    UINT nID,  \n    int nCode,  \n    void* pExtra,  \n    AFX_CMDHANDLERINFO* pHandlerInfo);\n```  \n  \n### Parameters  \n [in] `nID`  \n [in] `nCode`  \n [in] `pExtra`  \n [in] `pHandlerInfo`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__postcommand\"></a>  CMFCPopupMenu::PostCommand  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL PostCommand(UINT uiCommandID);\n```  \n  \n### Parameters  \n [in] `uiCommandID`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__pretranslatemessage\"></a>  CMFCPopupMenu::PreTranslateMessage  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL PreTranslateMessage(MSG* pMsg);\n```  \n  \n### Parameters  \n [in] `pMsg`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__recalclayout\"></a>  CMFCPopupMenu::RecalcLayout  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void RecalcLayout(BOOL bNotify = TRUE);\n```  \n  \n### Parameters  \n [in] `bNotify`  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__removeallitems\"></a>  CMFCPopupMenu::RemoveAllItems  \n Clears all the items from a pop-up menu.  \n  \n```  \nvoid RemoveAllItems();\n```  \n  \n##  <a name=\"cmfcpopupmenu__removeitem\"></a>  CMFCPopupMenu::RemoveItem  \n Removes the specified item from the pop-up menu.  \n  \n```  \nBOOL RemoveItem(int iIndex);\n```  \n  \n### Parameters  \n [in] `iIndex`  \n The zero-based index of the item to delete.  \n  \n### Return Value  \n `TRUE` if the method is successful; otherwise `FALSE`.  \n  \n### Remarks  \n This method automatically arranges any separators that are affected by the removal of an item. For more information about how the framework rearranges separators, see [CMFCToolBar::RemoveButton](../../mfc/reference/cmfctoolbar-class.md#cmfctoolbar__removebutton).  \n  \n##  <a name=\"cmfcpopupmenu__savestate\"></a>  CMFCPopupMenu::SaveState  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void SaveState();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__setanimationspeed\"></a>  CMFCPopupMenu::SetAnimationSpeed  \n Sets the animation speed for pop-up menus.  \n  \n```  \nstatic void SetAnimationSpeed(UINT nElapse);\n```  \n  \n### Parameters  \n [in] `nElapse`  \n The new animation speed, in milliseconds.  \n  \n### Remarks  \n The animation speed is a global value and affects all the pop-up menus in the application. This value specifies how long it takes for the animation for a pop-up menu to finish.  \n  \n By default, this parameter is set to 30 milliseconds. The range of valid values for `nElapse` is from 0 to 200.  \n  \n##  <a name=\"cmfcpopupmenu__setanimationtype\"></a>  CMFCPopupMenu::SetAnimationType  \n Sets the animation type for this pop-up menu.  \n  \n```  \nstatic void SetAnimationType(CMFCPopupMenu::ANIMATION_TYPE type);\n```  \n  \n### Parameters  \n [in] `type`  \n An enumerated data type that specifies the type of animation.  \n  \n### Remarks  \n See [CMFCPopupMenu::GetAnimationType](#cmfcpopupmenu__getanimationtype) for a list of valid values for `type`.  \n  \n##  <a name=\"cmfcpopupmenu__setautodestroy\"></a>  CMFCPopupMenu::SetAutoDestroy  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid SetAutoDestroy(BOOL bAutoDestroy = TRUE);\n```  \n  \n### Parameters  \n [in] `bAutoDestroy`  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__setdefaultitem\"></a>  CMFCPopupMenu::SetDefaultItem  \n Sets the default command for the pop-up menu.  \n  \n```  \nvoid SetDefaultItem(UINT uiCmd);\n```  \n  \n### Parameters  \n [in] `uiCmd`  \n The menu command ID of the new default command.  \n  \n### Remarks  \n The default command in the pop-up menu is the command that is selected when the pop-up menu appears.  \n  \n##  <a name=\"cmfcpopupmenu__setforcemenufocus\"></a>  CMFCPopupMenu::SetForceMenuFocus  \n Forces the input focus to return to the menu bar when a pop-up menu is displayed.  \n  \n```  \nstatic void SetForceMenuFocus(BOOL bValue);\n```  \n  \n### Parameters  \n [in] `bValue`  \n `TRUE` if you want the framework to force the input focus to the menu bar when a pop-up menu is displayed. `FALSE` if you want the pop-up menu to retain the focus.  \n  \n### Remarks  \n This method sets a flag that is global for all pop-up menus in the application. By default, this feature is not enabled.  \n  \n##  <a name=\"cmfcpopupmenu__setforceshadow\"></a>  CMFCPopupMenu::SetForceShadow  \n Forces the framework to draw menu shadows when pop-up menus appear outside the main frame.  \n  \n```  \nstatic void SetForceShadow(BOOL bValue);\n```  \n  \n### Parameters  \n [in] `bValue`  \n `TRUE` if you want the framework to draw menu shadows, `FALSE` otherwise.  \n  \n### Remarks  \n When you call this method, it sets a global flag in your application. This flag affects all pop-up menus in your application.  \n  \n##  <a name=\"cmfcpopupmenu__setmaxwidth\"></a>  CMFCPopupMenu::SetMaxWidth  \n Set the maximum width for the pop-up menu.  \n  \n```  \nvoid SetMaxWidth(int iMaxWidth);\n```  \n  \n### Parameters  \n [in] `iMaxWidth`  \n The maximum width for the pop-up menu, in pixels.  \n  \n### Remarks  \n If the text associated with a menu command will not fit in the maximum width, it is truncated and the part that does not fit is replaced by three dots.  \n  \n##  <a name=\"cmfcpopupmenu__setmessagewnd\"></a>  CMFCPopupMenu::SetMessageWnd  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid SetMessageWnd(CWnd* pMsgWnd);\n```  \n  \n### Parameters  \n [in] `pMsgWnd`  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__setparentribbonelement\"></a>  CMFCPopupMenu::SetParentRibbonElement  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid SetParentRibbonElement(CMFCRibbonBaseElement* pElem);\n```  \n  \n### Parameters  \n [in] `pElem`  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__setquickcustomizetype\"></a>  CMFCPopupMenu::SetQuickCustomizeType  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid SetQuickCustomizeType(QUICK_CUSTOMIZE_TYPE Type);\n```  \n  \n### Parameters  \n [in] `Type`  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__setquickmode\"></a>  CMFCPopupMenu::SetQuickMode  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid SetQuickMode();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__setrightalign\"></a>  CMFCPopupMenu::SetRightAlign  \n Sets the menu alignment for pop-up menus.  \n  \n```  \nvoid SetRightAlign(BOOL bRightAlign = TRUE);\n```  \n  \n### Parameters  \n [in] `bRightAlign`  \n A Boolean that indicates the menu alignment. `TRUE` indicates right alignment, `FALSE` indicates left alignment.  \n  \n### Remarks  \n By default, all pop-up menus are left-aligned.  \n  \n##  <a name=\"cmfcpopupmenu__setsendmenuselectmsg\"></a>  CMFCPopupMenu::SetSendMenuSelectMsg  \n Sets a flag that controls whether the pop-up menu notifies its parent frame when the user selects a command.  \n  \n```  \nstatic void SetSendMenuSelectMsg(BOOL bSet = TRUE);\n```  \n  \n### Parameters  \n [in] `bSet`  \n `TRUE` if the pop-up menu notifies its parent frame, `FALSE` otherwise.  \n  \n### Remarks  \n This is a global option for all the pop-up menus in an application. If it is enabled, the pop-up menus will send a `WM_MENUSELECT` message to the parent frame when the user selects a command.  \n  \n##  <a name=\"cmfcpopupmenu__showallcommands\"></a>  CMFCPopupMenu::ShowAllCommands  \n Forces the pop-up menu to display all commands.  \n  \n```  \nvoid ShowAllCommands();\n```  \n  \n### Remarks  \n This is not a global setting and affects only the current pop-up menu.  \n  \n##  <a name=\"cmfcpopupmenu__triggerresize\"></a>  CMFCPopupMenu::TriggerResize  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid TriggerResize();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpopupmenu__updateallshadows\"></a>  CMFCPopupMenu::UpdateAllShadows  \n Updates the shadows for all opened pop-up menus.  \n  \n```  \nstatic void UpdateAllShadows(LPRECT lprectScreen = NULL);\n```  \n  \n### Parameters  \n [in] `lprectScreen`  \n A rectangle that specifies the region to update, in screen coordinates.  \n  \n### Remarks  \n This method is useful when pop-up menus are displayed over animated controls or other windows that have dynamic content.  \n  \n##  <a name=\"cmfcpopupmenu__updateshadow\"></a>  CMFCPopupMenu::UpdateShadow  \n Updates the shadow for the pop-up menu.  \n  \n```  \nvoid UpdateShadow(LPRECT lprectScreen = NULL);\n```  \n  \n### Parameters  \n [in] `lprectScreen`  \n A rectangle, in screen coordinates, that specifies the boundaries of the region to update.  \n  \n### Remarks  \n Call this method when a pop-up menu that has a shadow overlaps an animated image.  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)   \n [CMFCPopupMenuBar Class](../../mfc/reference/cmfcpopupmenubar-class.md)\n"}