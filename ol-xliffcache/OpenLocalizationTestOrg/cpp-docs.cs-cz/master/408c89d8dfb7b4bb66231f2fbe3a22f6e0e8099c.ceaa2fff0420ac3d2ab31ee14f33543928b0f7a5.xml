{"nodes":[{"pos":[12,62],"content":"InterfaceTraits::CanCastTo Method | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"InterfaceTraits::CanCastTo Method | Microsoft Docs","pos":[0,50]}]},{"content":"InterfaceTraits::CanCastTo Method","pos":[698,731]},{"content":"Supports the WRL infrastructure and is not intended to be used directly from your code.","pos":[732,819]},{"content":"Syntax","pos":[828,834]},{"content":"Parameters","pos":[997,1007]},{"content":"The name of a pointer to a type.","pos":[1020,1052]},{"content":"The interface ID of <ph id=\"ph1\">`Base`</ph>.","pos":[1069,1096],"source":" The interface ID of `Base`."},{"content":"If this operation is successful, <ph id=\"ph1\">`ppv`</ph> points to the interface specified by <ph id=\"ph2\">`Base`</ph>.","pos":[1112,1195],"source":" If this operation is successful, `ppv` points to the interface specified by `Base`."},{"content":"Otherwise, <ph id=\"ph1\">`ppv`</ph> is set to <ph id=\"ph2\">`nullptr`</ph>.","pos":[1196,1233],"source":" Otherwise, `ppv` is set to `nullptr`."},{"content":"Return Value","pos":[1242,1254]},{"pos":[1265,1359],"content":"if this operation is successful and <ph id=\"ph1\">`ptr`</ph> is cast to a pointer to <ph id=\"ph2\">`Base`</ph>; otherwise, <ph id=\"ph3\">`false`</ph> .","source":" if this operation is successful and `ptr` is cast to a pointer to `Base`; otherwise, `false` ."},{"content":"Remarks","pos":[1368,1375]},{"pos":[1379,1454],"content":"Indicates whether the specified pointer can be cast to a pointer to <ph id=\"ph1\">`Base`</ph>.","source":"Indicates whether the specified pointer can be cast to a pointer to `Base`."},{"pos":[1461,1600],"content":"For more information about <ph id=\"ph1\">`Base`</ph>, see the Public Typedefs section in <bpt id=\"p1\">[</bpt>InterfaceTraits Structure<ept id=\"p1\">](../windows/interfacetraits-structure.md)</ept>.","source":"For more information about `Base`, see the Public Typedefs section in [InterfaceTraits Structure](../windows/interfacetraits-structure.md)."},{"content":"Requirements","pos":[1609,1621]},{"pos":[1625,1649],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> implements.h","source":"**Header:** implements.h"},{"pos":[1656,1694],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> Microsoft::WRL::Details","source":"**Namespace:** Microsoft::WRL::Details"},{"content":"See Also","pos":[1703,1711]},{"content":"InterfaceTraits Structure","pos":[1716,1741]},{"content":"Microsoft::WRL::Details Namespace","pos":[1789,1822]}],"content":"---\ntitle: \"InterfaceTraits::CanCastTo Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"implements/Microsoft::WRL::Details::InterfaceTraits::CanCastTo\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CanCastTo method\"\nms.assetid: 275847cb-69ea-42bf-910f-05ba6ef8b48d\ncaps.latest.revision: 5\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# InterfaceTraits::CanCastTo Method\nSupports the WRL infrastructure and is not intended to be used directly from your code.  \n  \n## Syntax  \n  \n```  \n  \ntemplate<typename T>  \nstatic __forceinline bool CanCastTo(  \n   _In_ T* ptr,  \n   REFIID riid,  \n   _Deref_out_ void **ppv  \n);  \n  \n```  \n  \n#### Parameters  \n `ptr`  \n The name of a pointer to a type.  \n  \n `riid`  \n The interface ID of `Base`.  \n  \n `ppv`  \n If this operation is successful, `ppv` points to the interface specified by `Base`. Otherwise, `ppv` is set to `nullptr`.  \n  \n## Return Value  \n `true` if this operation is successful and `ptr` is cast to a pointer to `Base`; otherwise, `false` .  \n  \n## Remarks  \n Indicates whether the specified pointer can be cast to a pointer to `Base`.  \n  \n For more information about `Base`, see the Public Typedefs section in [InterfaceTraits Structure](../windows/interfacetraits-structure.md).  \n  \n## Requirements  \n **Header:** implements.h  \n  \n **Namespace:** Microsoft::WRL::Details  \n  \n## See Also  \n [InterfaceTraits Structure](../windows/interfacetraits-structure.md)   \n [Microsoft::WRL::Details Namespace](../windows/microsoft-wrl-details-namespace.md)"}