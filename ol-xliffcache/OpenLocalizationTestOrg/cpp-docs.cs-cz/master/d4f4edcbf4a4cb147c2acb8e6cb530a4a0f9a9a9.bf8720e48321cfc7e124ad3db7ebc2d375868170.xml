{"nodes":[{"pos":[12,61],"content":"Compiler Warning (level 4) C4706 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Warning (level 4) C4706 | Microsoft Docs","pos":[0,49]}]},{"content":"Compiler Warning (level 4) C4706","pos":[609,641]},{"content":"assignment within conditional expression","pos":[642,682]},{"content":"The test value in a conditional expression was the result of an assignment.","pos":[689,764]},{"content":"An assignment has a value (the value on the left side of the assignment) that can be used legally in another expression, including a test expression.","pos":[771,920]},{"content":"The following sample generates C4706:","pos":[927,964]},{"content":"The warning will occur even if you double the parentheses around the test condition:","pos":[1111,1195]},{"content":"If your intention is to test a relation and not to make an assignment, use the <ph id=\"ph1\">`==`</ph> operator.","pos":[1347,1440],"source":"If your intention is to test a relation and not to make an assignment, use the `==` operator."},{"content":"For example, the following line tests whether a and b are equal:","pos":[1441,1505]},{"content":"If you intend to make your test value the result of an assignment, test to ensure that the assignment is non-zero or not null.","pos":[1643,1769]},{"content":"For example, the following code will not generate this warning:","pos":[1770,1833]}],"content":"---\ntitle: \"Compiler Warning (level 4) C4706 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C4706\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C4706\"\nms.assetid: 89cd3f4f-812c-4a4b-9426-65a5a6d1b99c\ncaps.latest.revision: 6\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Warning (level 4) C4706\nassignment within conditional expression  \n  \n The test value in a conditional expression was the result of an assignment.  \n  \n An assignment has a value (the value on the left side of the assignment) that can be used legally in another expression, including a test expression.  \n  \n The following sample generates C4706:  \n  \n```  \n// C4706a.cpp  \n// compile with: /W4  \nint main()  \n{  \n   int a = 0, b = 0;  \n   if ( a  = b ) // C4706  \n   {  \n   }  \n}  \n```  \n  \n The warning will occur even if you double the parentheses around the test condition:  \n  \n```  \n// C4706b.cpp  \n// compile with: /W4  \nint main()  \n{  \n   int a = 0, b = 0;  \n   if ( ( a  =  b ) ) // C4706  \n   {  \n   }  \n}  \n```  \n  \n If your intention is to test a relation and not to make an assignment, use the `==` operator. For example, the following line tests whether a and b are equal:  \n  \n```  \n// C4706c.cpp  \n// compile with: /W4  \nint main()  \n{  \n   int a = 0, b = 0;  \n   if ( a == b )  \n   {  \n   }  \n}  \n```  \n  \n If you intend to make your test value the result of an assignment, test to ensure that the assignment is non-zero or not null. For example, the following code will not generate this warning:  \n  \n```  \n// C4706d.cpp  \n// compile with: /W4  \nint main()  \n{  \n   int a = 0, b = 0;  \n   if ( ( a = b ) != 0 )  \n   {  \n   }  \n}  \n```"}