{"nodes":[{"pos":[12,80],"content":"Hosting a Windows Forms User Control as an MFC View | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Hosting a Windows Forms User Control as an MFC View | Microsoft Docs","pos":[0,68]}]},{"content":"Hosting a Windows Forms User Control as an MFC View","pos":[723,774]},{"content":"MFC uses the CWinFormsView class to host a Windows Forms user control in an MFC view.","pos":[775,860]},{"content":"MFC Windows Forms views are ActiveX controls.","pos":[861,906]},{"content":"The user control is hosted as a child of the native view and occupies the entire client area of the native view.","pos":[907,1019]},{"content":"The end result resembles the model used by the <bpt id=\"p1\">[</bpt>CFormView Class<ept id=\"p1\">](../mfc/reference/cformview-class.md)</ept>.","pos":[1026,1128],"source":"The end result resembles the model used by the [CFormView Class](../mfc/reference/cformview-class.md)."},{"content":"This lets you take advantage of the Windows Forms designer and runtime to create rich form-based views.","pos":[1129,1232]},{"content":"Because MFC Windows Forms views are ActiveX controls, they do not have the same <ph id=\"ph1\">`hwnd`</ph> as MFC views.","pos":[1239,1339],"source":"Because MFC Windows Forms views are ActiveX controls, they do not have the same `hwnd` as MFC views."},{"content":"Also they cannot be passed as a pointer to a <bpt id=\"p1\">[</bpt>CView<ept id=\"p1\">](../mfc/reference/cview-class.md)</ept> view.","pos":[1340,1431],"source":" Also they cannot be passed as a pointer to a [CView](../mfc/reference/cview-class.md) view."},{"content":"In general, use .NET Framework methods to work with Windows Forms views and rely less on Win32.","pos":[1432,1527]},{"pos":[1534,1749],"content":"For a sample application that shows Windows Forms used with MFC, see <bpt id=\"p1\">[</bpt>MFC and Windows Forms Integration<ept id=\"p1\">](http://www.microsoft.com/downloads/details.aspx?FamilyID=987021bc-e575-4fe3-baa9-15aa50b0f599&amp;displaylang=en)</ept>.","source":"For a sample application that shows Windows Forms used with MFC, see [MFC and Windows Forms Integration](http://www.microsoft.com/downloads/details.aspx?FamilyID=987021bc-e575-4fe3-baa9-15aa50b0f599&displaylang=en)."},{"content":"In This Section","pos":[1758,1773]},{"content":"How to: Create the User Control and Host MDI View","pos":[1778,1827]},{"content":"How to: Add Command Routing to the Windows Forms Control","pos":[1899,1955]},{"content":"How to: Call Properties and Methods of the Windows Forms Control","pos":[2034,2098]},{"content":"See Also","pos":[2186,2194]},{"content":"Using a Windows Form User Control in MFC","pos":[2199,2239]},{"content":"How to: Author Composite Controls","pos":[2301,2334]}],"content":"---\ntitle: \"Hosting a Windows Forms User Control as an MFC View | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"MFC [C++], Windows Forms support\"\n  - \"Windows Forms controls [C++], hosting as an MFC view\"\n  - \"hosting Windows Forms control [C++]\"\nms.assetid: 43c02ab4-1366-434c-a980-0b19326d6ea0\ncaps.latest.revision: 12\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Hosting a Windows Forms User Control as an MFC View\nMFC uses the CWinFormsView class to host a Windows Forms user control in an MFC view. MFC Windows Forms views are ActiveX controls. The user control is hosted as a child of the native view and occupies the entire client area of the native view.  \n  \n The end result resembles the model used by the [CFormView Class](../mfc/reference/cformview-class.md). This lets you take advantage of the Windows Forms designer and runtime to create rich form-based views.  \n  \n Because MFC Windows Forms views are ActiveX controls, they do not have the same `hwnd` as MFC views. Also they cannot be passed as a pointer to a [CView](../mfc/reference/cview-class.md) view. In general, use .NET Framework methods to work with Windows Forms views and rely less on Win32.  \n  \n For a sample application that shows Windows Forms used with MFC, see [MFC and Windows Forms Integration](http://www.microsoft.com/downloads/details.aspx?FamilyID=987021bc-e575-4fe3-baa9-15aa50b0f599&displaylang=en).  \n  \n## In This Section  \n [How to: Create the User Control and Host MDI View](../dotnet/how-to-create-the-user-control-and-host-mdi-view.md)  \n  \n [How to: Add Command Routing to the Windows Forms Control](../dotnet/how-to-add-command-routing-to-the-windows-forms-control.md)  \n  \n [How to: Call Properties and Methods of the Windows Forms Control](../dotnet/how-to-call-properties-and-methods-of-the-windows-forms-control.md)  \n  \n## See Also  \n [Using a Windows Form User Control in MFC](../dotnet/using-a-windows-form-user-control-in-mfc.md)   \n [How to: Author Composite Controls](http://msdn.microsoft.com/Library/79c9cf05-5ab6-4a18-886d-88a64748b098)"}