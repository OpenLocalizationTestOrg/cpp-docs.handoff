{"nodes":[{"pos":[12,63],"content":"Application Domains and Visual C++ | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Application Domains and Visual C++ | Microsoft Docs","pos":[0,51]}]},{"content":"Application Domains and Visual C++","pos":[797,831]},{"content":"If you have a <ph id=\"ph1\">`__clrcall`</ph> virtual function, the vtable will be per application domain (appdomain).","pos":[832,930],"source":"If you have a `__clrcall` virtual function, the vtable will be per application domain (appdomain)."},{"content":"If you create an object in one appdomain, you can only call the virtual function from within that appdomain.","pos":[931,1039]},{"content":"All functions defined in <bpt id=\"p1\">**</bpt>/clr:pure<ept id=\"p1\">**</ept> compilands use the <ph id=\"ph1\">`__clrcall`</ph> calling convention.","pos":[1040,1129],"source":" All functions defined in **/clr:pure** compilands use the `__clrcall` calling convention."},{"content":"Therefore, all vtables defined in <bpt id=\"p1\">**</bpt>/clr:pure<ept id=\"p1\">**</ept> compilands are per appdomain.","pos":[1130,1207],"source":" Therefore, all vtables defined in **/clr:pure** compilands are per appdomain."},{"content":"In mixed mode (<bpt id=\"p1\">**</bpt>/clr<ept id=\"p1\">**</ept>) you will have per process vtables if your type has no <ph id=\"ph1\">`__clrcall`</ph> virtual functions.","pos":[1208,1317],"source":" In mixed mode (**/clr**) you will have per process vtables if your type has no `__clrcall` virtual functions."},{"content":"For more information, see","pos":[1324,1349]},{"content":"appdomain","pos":[1360,1369]},{"content":"__clrcall","pos":[1402,1411]},{"content":"How to: Migrate to /clr:pure (C++/CLI)","pos":[1442,1480]},{"content":"process","pos":[1541,1548]},{"content":"See Also","pos":[1577,1585]},{"content":"Mixed (Native and Managed) Assemblies","pos":[1590,1627]}],"content":"---\ntitle: \"Application Domains and Visual C++ | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"interop [C++], application domains\"\n  - \"application domains [C++], C++\"\n  - \"/clr compiler option [C++], application domains\"\n  - \"interoperability [C++], application domains\"\n  - \"mixed assemblies [C++], application domains\"\nms.assetid: 75a08efc-9b02-40ba-99b7-dcbd71010bbf\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Application Domains and Visual C++\nIf you have a `__clrcall` virtual function, the vtable will be per application domain (appdomain). If you create an object in one appdomain, you can only call the virtual function from within that appdomain. All functions defined in **/clr:pure** compilands use the `__clrcall` calling convention. Therefore, all vtables defined in **/clr:pure** compilands are per appdomain. In mixed mode (**/clr**) you will have per process vtables if your type has no `__clrcall` virtual functions.  \n  \n For more information, see  \n  \n-   [appdomain](../cpp/appdomain.md)  \n  \n-   [__clrcall](../cpp/clrcall.md)  \n  \n-   [How to: Migrate to /clr:pure (C++/CLI)](../dotnet/how-to-migrate-to-clr-pure-cpp-cli.md)  \n  \n-   [process](../cpp/process.md)  \n  \n## See Also  \n [Mixed (Native and Managed) Assemblies](../dotnet/mixed-native-and-managed-assemblies.md)"}