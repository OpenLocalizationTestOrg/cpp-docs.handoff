{"nodes":[{"pos":[12,69],"content":"task_options Class (Concurrency Runtime) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"task_options Class (Concurrency Runtime) | Microsoft Docs","pos":[0,57]}]},{"pos":[604,644],"content":"task_options Class (Concurrency Runtime)","linkify":"task_options Class (Concurrency Runtime)","nodes":[{"content":"task_options Class (Concurrency Runtime)","pos":[0,40]}]},{"content":"Represents the allowed options for creating a task","pos":[645,695]},{"pos":[704,710],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[752,759],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[769,788],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[795,799]},{"content":"Description","pos":[800,811]},{"pos":[849,918],"content":"<bpt id=\"p1\">[</bpt>task_options::task_options Constructor (Concurrency Runtime)<ept id=\"p1\">](#ctor)</ept>","source":"[task_options::task_options Constructor (Concurrency Runtime)](#ctor)"},{"content":"Overloaded.","pos":[919,930]},{"content":"Default list of task creation options","pos":[931,968]},{"pos":[979,993],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1000,1004]},{"content":"Description","pos":[1005,1016]},{"pos":[1054,1146],"content":"<bpt id=\"p1\">[</bpt>task_options::get_cancellation_token Method (Concurrency Runtime)<ept id=\"p1\">](#get_cancellation_token)</ept>","source":"[task_options::get_cancellation_token Method (Concurrency Runtime)](#get_cancellation_token)"},{"content":"Returns the cancellation token","pos":[1147,1177]},{"pos":[1182,1278],"content":"<bpt id=\"p1\">[</bpt>task_options::get_continuation_context Method (Concurrency Runtime)<ept id=\"p1\">](#get_continuation_context)</ept>","source":"[task_options::get_continuation_context Method (Concurrency Runtime)](#get_continuation_context)"},{"content":"Returns the continuation context","pos":[1279,1311]},{"pos":[1316,1390],"content":"<bpt id=\"p1\">[</bpt>task_options::get_scheduler Method (Concurrency Runtime)<ept id=\"p1\">](#get_scheduler)</ept>","source":"[task_options::get_scheduler Method (Concurrency Runtime)](#get_scheduler)"},{"content":"Returns the scheduler","pos":[1391,1412]},{"pos":[1417,1509],"content":"<bpt id=\"p1\">[</bpt>task_options::has_cancellation_token Method (Concurrency Runtime)<ept id=\"p1\">](#has_cancellation_token)</ept>","source":"[task_options::has_cancellation_token Method (Concurrency Runtime)](#has_cancellation_token)"},{"content":"Indicates whether a cancellation token was specified by the user","pos":[1510,1574]},{"pos":[1579,1653],"content":"<bpt id=\"p1\">[</bpt>task_options::has_scheduler Method (Concurrency Runtime)<ept id=\"p1\">](#has_scheduler)</ept>","source":"[task_options::has_scheduler Method (Concurrency Runtime)](#has_scheduler)"},{"content":"Indicates whether a scheduler n was specified by the user","pos":[1654,1711]},{"pos":[1716,1808],"content":"<bpt id=\"p1\">[</bpt>task_options::set_cancellation_token Method (Concurrency Runtime)<ept id=\"p1\">](#set_cancellation_token)</ept>","source":"[task_options::set_cancellation_token Method (Concurrency Runtime)](#set_cancellation_token)"},{"content":"Sets the given token in the options","pos":[1809,1844]},{"pos":[1849,1945],"content":"<bpt id=\"p1\">[</bpt>task_options::set_continuation_context Method (Concurrency Runtime)<ept id=\"p1\">](#set_continuation_context)</ept>","source":"[task_options::set_continuation_context Method (Concurrency Runtime)](#set_continuation_context)"},{"content":"Sets the given continuation context in the options","pos":[1946,1996]},{"pos":[2006,2027],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[2054,2066],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2070,2092],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> ppltasks.h","source":"**Header:** ppltasks.h"},{"pos":[2099,2125],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> concurrency","source":"**Namespace:** concurrency"},{"pos":[2135,2239],"content":"<bpt id=\"p1\">&lt;a name=\"get_cancellation_token\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  task_options::get_cancellation_token Method (Concurrency Runtime)","linkify":"<a name=\"get_cancellation_token\"></a>  task_options::get_cancellation_token Method (Concurrency Runtime)","source":"<a name=\"get_cancellation_token\"></a>  task_options::get_cancellation_token Method (Concurrency Runtime)"},{"content":"Returns the cancellation token","pos":[2243,2273]},{"pos":[2347,2359],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[2369,2477],"content":"<bpt id=\"p1\">&lt;a name=\"get_continuation_context\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  task_options::get_continuation_context Method (Concurrency Runtime)","linkify":"<a name=\"get_continuation_context\"></a>  task_options::get_continuation_context Method (Concurrency Runtime)","source":"<a name=\"get_continuation_context\"></a>  task_options::get_continuation_context Method (Concurrency Runtime)"},{"content":"Returns the continuation context","pos":[2481,2513]},{"pos":[2596,2608],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[2618,2704],"content":"<bpt id=\"p1\">&lt;a name=\"get_scheduler\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  task_options::get_scheduler Method (Concurrency Runtime)","linkify":"<a name=\"get_scheduler\"></a>  task_options::get_scheduler Method (Concurrency Runtime)","source":"<a name=\"get_scheduler\"></a>  task_options::get_scheduler Method (Concurrency Runtime)"},{"content":"Returns the scheduler","pos":[2708,2729]},{"pos":[2789,2801],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[2811,2915],"content":"<bpt id=\"p1\">&lt;a name=\"has_cancellation_token\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  task_options::has_cancellation_token Method (Concurrency Runtime)","linkify":"<a name=\"has_cancellation_token\"></a>  task_options::has_cancellation_token Method (Concurrency Runtime)","source":"<a name=\"has_cancellation_token\"></a>  task_options::has_cancellation_token Method (Concurrency Runtime)"},{"content":"Indicates whether a cancellation token was specified by the user","pos":[2919,2983]},{"pos":[3043,3055],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[3065,3151],"content":"<bpt id=\"p1\">&lt;a name=\"has_scheduler\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  task_options::has_scheduler Method (Concurrency Runtime)","linkify":"<a name=\"has_scheduler\"></a>  task_options::has_scheduler Method (Concurrency Runtime)","source":"<a name=\"has_scheduler\"></a>  task_options::has_scheduler Method (Concurrency Runtime)"},{"content":"Indicates whether a scheduler n was specified by the user","pos":[3155,3212]},{"pos":[3263,3275],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[3285,3389],"content":"<bpt id=\"p1\">&lt;a name=\"set_cancellation_token\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  task_options::set_cancellation_token Method (Concurrency Runtime)","linkify":"<a name=\"set_cancellation_token\"></a>  task_options::set_cancellation_token Method (Concurrency Runtime)","source":"<a name=\"set_cancellation_token\"></a>  task_options::set_cancellation_token Method (Concurrency Runtime)"},{"content":"Sets the given token in the options","pos":[3393,3428]},{"pos":[3507,3517],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[3539,3647],"content":"<bpt id=\"p1\">&lt;a name=\"set_continuation_context\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  task_options::set_continuation_context Method (Concurrency Runtime)","linkify":"<a name=\"set_continuation_context\"></a>  task_options::set_continuation_context Method (Concurrency Runtime)","source":"<a name=\"set_continuation_context\"></a>  task_options::set_continuation_context Method (Concurrency Runtime)"},{"content":"Sets the given continuation context in the options","pos":[3651,3701]},{"pos":[3803,3813],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[3849,3930],"content":"<bpt id=\"p1\">&lt;a name=\"ctor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  task_options::task_options Constructor (Concurrency Runtime)","linkify":"<a name=\"ctor\"></a>  task_options::task_options Constructor (Concurrency Runtime)","source":"<a name=\"ctor\"></a>  task_options::task_options Constructor (Concurrency Runtime)"},{"content":"Default list of task creation options","pos":[3934,3971]},{"pos":[4467,4477],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[4574,4582],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[4586,4635],"content":"<bpt id=\"p1\">[</bpt>concurrency Namespace<ept id=\"p1\">](concurrency-namespace.md)</ept>","source":"[concurrency Namespace](concurrency-namespace.md)"}],"content":"---\ntitle: \"task_options Class (Concurrency Runtime) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"ppltasks/concurrency::task_options\"\ndev_langs: \n  - \"C++\"\nms.assetid: f93d146b-70f7-46ec-8c2f-c33b8bb0af69\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# task_options Class (Concurrency Runtime)\nRepresents the allowed options for creating a task  \n  \n## Syntax  \n  \n```\nclass task_options;\n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[task_options::task_options Constructor (Concurrency Runtime)](#ctor)|Overloaded. Default list of task creation options|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[task_options::get_cancellation_token Method (Concurrency Runtime)](#get_cancellation_token)|Returns the cancellation token|  \n|[task_options::get_continuation_context Method (Concurrency Runtime)](#get_continuation_context)|Returns the continuation context|  \n|[task_options::get_scheduler Method (Concurrency Runtime)](#get_scheduler)|Returns the scheduler|  \n|[task_options::has_cancellation_token Method (Concurrency Runtime)](#has_cancellation_token)|Indicates whether a cancellation token was specified by the user|  \n|[task_options::has_scheduler Method (Concurrency Runtime)](#has_scheduler)|Indicates whether a scheduler n was specified by the user|  \n|[task_options::set_cancellation_token Method (Concurrency Runtime)](#set_cancellation_token)|Sets the given token in the options|  \n|[task_options::set_continuation_context Method (Concurrency Runtime)](#set_continuation_context)|Sets the given continuation context in the options|  \n  \n## Inheritance Hierarchy  \n `task_options`  \n  \n## Requirements  \n **Header:** ppltasks.h  \n  \n **Namespace:** concurrency  \n  \n##  <a name=\"get_cancellation_token\"></a>  task_options::get_cancellation_token Method (Concurrency Runtime)  \n Returns the cancellation token  \n  \n```\ncancellation_token get_cancellation_token() const;\n```  \n  \n### Return Value  \n  \n##  <a name=\"get_continuation_context\"></a>  task_options::get_continuation_context Method (Concurrency Runtime)  \n Returns the continuation context  \n  \n```\ntask_continuation_context get_continuation_context() const;\n```  \n  \n### Return Value  \n  \n##  <a name=\"get_scheduler\"></a>  task_options::get_scheduler Method (Concurrency Runtime)  \n Returns the scheduler  \n  \n```\nscheduler_ptr get_scheduler() const;\n```  \n  \n### Return Value  \n  \n##  <a name=\"has_cancellation_token\"></a>  task_options::has_cancellation_token Method (Concurrency Runtime)  \n Indicates whether a cancellation token was specified by the user  \n  \n```\nbool has_cancellation_token() const;\n```  \n  \n### Return Value  \n  \n##  <a name=\"has_scheduler\"></a>  task_options::has_scheduler Method (Concurrency Runtime)  \n Indicates whether a scheduler n was specified by the user  \n  \n```\nbool has_scheduler() const;\n```  \n  \n### Return Value  \n  \n##  <a name=\"set_cancellation_token\"></a>  task_options::set_cancellation_token Method (Concurrency Runtime)  \n Sets the given token in the options  \n  \n```\nvoid set_cancellation_token(cancellation_token _Token);\n```  \n  \n### Parameters  \n `_Token`  \n  \n##  <a name=\"set_continuation_context\"></a>  task_options::set_continuation_context Method (Concurrency Runtime)  \n Sets the given continuation context in the options  \n  \n```\nvoid set_continuation_context(task_continuation_context _ContinuationContext);\n```  \n  \n### Parameters  \n `_ContinuationContext`  \n  \n##  <a name=\"ctor\"></a>  task_options::task_options Constructor (Concurrency Runtime)  \n Default list of task creation options  \n  \n```\ntask_options();\n\ntask_options(\n    cancellation_token _Token);\n\ntask_options(\n    task_continuation_context _ContinuationContext);\n\ntask_options(\n    cancellation_token _Token,\n    task_continuation_context _ContinuationContext);\n\ntemplate<typename _SchedType>\ntask_options(\n    std::shared_ptr<_SchedType> _Scheduler);\n\ntask_options(\n    scheduler_interface& _Scheduler);\n\ntask_options(\n    scheduler_ptr _Scheduler);\n\ntask_options(\n    const task_options& _TaskOptions);\n```  \n  \n### Parameters  \n `_SchedType`  \n `_Token`  \n `_ContinuationContext`  \n `_Scheduler`  \n `_TaskOptions`  \n  \n## See Also  \n [concurrency Namespace](concurrency-namespace.md)\n"}