{"nodes":[{"pos":[12,37],"content":"noreturn | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"noreturn | Microsoft Docs","pos":[0,25]}]},{"content":"noreturn","pos":[673,681]},{"content":"Microsoft Specific","pos":[685,703]},{"content":"This <ph id=\"ph1\">`__declspec`</ph> attribute tells the compiler that a function does not return.","pos":[707,786],"source":"This `__declspec` attribute tells the compiler that a function does not return."},{"content":"As a consequence, the compiler knows that the code following a call to a <bpt id=\"p1\">**</bpt>__declspec(noreturn)<ept id=\"p1\">**</ept> function is unreachable.","pos":[787,909],"source":" As a consequence, the compiler knows that the code following a call to a **__declspec(noreturn)** function is unreachable."},{"content":"If the compiler finds a function with a control path that does not return a value, it generates a warning (C4715) or error message (C2202).","pos":[916,1055]},{"content":"If the control path cannot be reached due to a function that never returns, you can use <bpt id=\"p1\">**</bpt>__declspec(noreturn)<ept id=\"p1\">**</ept> to prevent this warning or error.","pos":[1056,1202],"source":" If the control path cannot be reached due to a function that never returns, you can use **__declspec(noreturn)** to prevent this warning or error."},{"pos":[1210,1327],"content":"[!NOTE]\n Adding **__declspec(noreturn)** to a function that is expected to return can result in undefined behavior.","leadings":["","> "],"nodes":[{"content":"Adding <bpt id=\"p1\">**</bpt>__declspec(noreturn)<ept id=\"p1\">**</ept> to a function that is expected to return can result in undefined behavior.","pos":[9,115],"source":" Adding **__declspec(noreturn)** to a function that is expected to return can result in undefined behavior."}]},{"content":"Example","pos":[1336,1343]},{"content":"In the following sample,the <bpt id=\"p1\">**</bpt>else<ept id=\"p1\">**</ept> clause does not contain a return statement.","pos":[1347,1427],"source":"In the following sample,the **else** clause does not contain a return statement."},{"content":"Declaring <ph id=\"ph1\">`fatal`</ph> as <bpt id=\"p1\">**</bpt>__declspec(noreturn)<ept id=\"p1\">**</ept> avoids an error or warning message.","pos":[1429,1510],"source":"  Declaring `fatal` as **__declspec(noreturn)** avoids an error or warning message."},{"content":"See Also","pos":[1709,1717]},{"content":"__declspec","pos":[1722,1732]},{"content":"Keywords","pos":[1759,1767]}],"content":"---\ntitle: \"noreturn | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"noreturn_cpp\"\n  - \"noreturn\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"__declspec keyword [C++], noreturn\"\n  - \"noreturn __declspec keyword\"\nms.assetid: 9c6517e5-22d7-4051-9974-3d2200ae4d1d\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# noreturn\n## Microsoft Specific  \n This `__declspec` attribute tells the compiler that a function does not return. As a consequence, the compiler knows that the code following a call to a **__declspec(noreturn)** function is unreachable.  \n  \n If the compiler finds a function with a control path that does not return a value, it generates a warning (C4715) or error message (C2202). If the control path cannot be reached due to a function that never returns, you can use **__declspec(noreturn)** to prevent this warning or error.  \n  \n> [!NOTE]\n>  Adding **__declspec(noreturn)** to a function that is expected to return can result in undefined behavior.  \n  \n## Example  \n In the following sample,the **else** clause does not contain a return statement.  Declaring `fatal` as **__declspec(noreturn)** avoids an error or warning message.  \n  \n```  \n// noreturn2.cpp  \n__declspec(noreturn) extern void fatal () {}  \n  \nint main() {  \n   if(1)  \n     return 1;  \n   else if(0)  \n     return 0;  \n   else  \n     fatal();  \n}  \n```  \n  \n## See Also  \n [__declspec](../cpp/declspec.md)   \n [Keywords](../cpp/keywords-cpp.md)"}