{"nodes":[{"pos":[12,42],"content":"Failure Hooks | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Failure Hooks | Microsoft Docs","pos":[0,30]}]},{"content":"Failure Hooks","pos":[589,602]},{"content":"The failure hook is enabled in the same manner as the <bpt id=\"p1\">[</bpt>notification hook<ept id=\"p1\">](../../build/reference/notification-hooks.md)</ept>.","pos":[603,722],"source":"The failure hook is enabled in the same manner as the [notification hook](../../build/reference/notification-hooks.md)."},{"content":"The hook routine needs to return a suitable value so that processing can continue (an HINSTANCE or FARPROC) or 0 to indicate that an exception should be thrown.","pos":[723,883]},{"content":"The pointer variable that refers to the user-defined function is:","pos":[890,955]},{"pos":[1099,1250],"content":"The <bpt id=\"p1\">**</bpt>DelayLoadInfo<ept id=\"p1\">**</ept> structure contains all the pertinent data necessary for accurate reporting of the error, including the value from <ph id=\"ph1\">`GetLastError`</ph>.","source":"The **DelayLoadInfo** structure contains all the pertinent data necessary for accurate reporting of the error, including the value from `GetLastError`."},{"pos":[1257,1329],"content":"If the notification is <bpt id=\"p1\">**</bpt>dliFailLoadLib<ept id=\"p1\">**</ept>, the hook function can return:","source":"If the notification is **dliFailLoadLib**, the hook function can return:"},{"content":"0, if it cannot handle the failure.","pos":[1339,1374]},{"content":"An HMODULE, if the failure hook fixed the problem and loaded the library itself.","pos":[1384,1464]},{"pos":[1471,1543],"content":"If the notification is <bpt id=\"p1\">**</bpt>dliFailGetProc<ept id=\"p1\">**</ept>, the hook function can return:","source":"If the notification is **dliFailGetProc**, the hook function can return:"},{"content":"0, if it cannot handle the failure.","pos":[1553,1588]},{"content":"A valid proc address (import function address), if the failure hook succeeded in getting the address itself.","pos":[1598,1706]},{"content":"See Also","pos":[1715,1723]},{"content":"Error Handling and Notification","pos":[1728,1759]}],"content":"---\ntitle: \"Failure Hooks | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"delayed loading of DLLs, failure hooks\"\nms.assetid: 12bb303b-ffe6-4471-bffe-9ef4f8bb2d30\ncaps.latest.revision: 7\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Failure Hooks\nThe failure hook is enabled in the same manner as the [notification hook](../../build/reference/notification-hooks.md). The hook routine needs to return a suitable value so that processing can continue (an HINSTANCE or FARPROC) or 0 to indicate that an exception should be thrown.  \n  \n The pointer variable that refers to the user-defined function is:  \n  \n```  \n// This is the failure hook, dliNotify = {dliFailLoadLib|dliFailGetProc}  \nExternC  \nPfnDliHook   __pfnDliFailureHook2;  \n```  \n  \n The **DelayLoadInfo** structure contains all the pertinent data necessary for accurate reporting of the error, including the value from `GetLastError`.  \n  \n If the notification is **dliFailLoadLib**, the hook function can return:  \n  \n-   0, if it cannot handle the failure.  \n  \n-   An HMODULE, if the failure hook fixed the problem and loaded the library itself.  \n  \n If the notification is **dliFailGetProc**, the hook function can return:  \n  \n-   0, if it cannot handle the failure.  \n  \n-   A valid proc address (import function address), if the failure hook succeeded in getting the address itself.  \n  \n## See Also  \n [Error Handling and Notification](../../build/reference/error-handling-and-notification.md)"}