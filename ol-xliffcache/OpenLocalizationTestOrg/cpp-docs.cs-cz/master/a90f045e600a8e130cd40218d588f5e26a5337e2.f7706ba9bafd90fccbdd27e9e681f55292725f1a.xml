{"nodes":[{"pos":[12,49],"content":"Compiler Error C2558 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C2558 | Microsoft Docs","pos":[0,37]}]},{"content":"Compiler Error C2558","pos":[598,618]},{"content":"'identifier' : no copy constructor available or copy constructor is declared 'explicit'","pos":[619,706]},{"content":"A copy constructor initializes an object from another object of the same type.","pos":[713,791]},{"content":"(It makes a copy of the object.) The compiler generates a default copy constructor if you do not define any constructors.","pos":[792,913]},{"content":"To fix this error","pos":[923,940]},{"content":"The problem can occur when an attempt is made to copy a class whose copy constructor is <ph id=\"ph1\">`private`</ph>.","pos":[950,1048],"source":"The problem can occur when an attempt is made to copy a class whose copy constructor is `private`."},{"content":"In most cases, a class that has a <ph id=\"ph1\">`private`</ph> copy constructor should not be copied.","pos":[1049,1131],"source":" In most cases, a class that has a `private` copy constructor should not be copied."},{"content":"A common programming technique declares a <ph id=\"ph1\">`private`</ph> copy constructor to prevent the direct use of a class.","pos":[1132,1238],"source":" A common programming technique declares a `private` copy constructor to prevent the direct use of a class."},{"content":"The class may be useless by itself or require another class in order to work correctly.","pos":[1239,1326]},{"content":"If you determine that it is safe to use a class that has a <ph id=\"ph1\">`private`</ph> copy constructor, derive a new class from the class that has the <ph id=\"ph2\">`private`</ph> constructor and make a <ph id=\"ph3\">`public`</ph> or <ph id=\"ph4\">`protected`</ph> copy constructor available in the new class.","pos":[1337,1572],"source":"If you determine that it is safe to use a class that has a `private` copy constructor, derive a new class from the class that has the `private` constructor and make a `public` or `protected` copy constructor available in the new class."},{"content":"Use the derived class in place of the original.","pos":[1573,1620]},{"content":"The problem can occur when an attempt is made to copy a class whose copy constructor is explicit.","pos":[1630,1727]},{"content":"Declaring a copy constructor as <ph id=\"ph1\">`explicit`</ph> prevents passing/returning objects of a class to/from functions.","pos":[1728,1835],"source":" Declaring a copy constructor as `explicit` prevents passing/returning objects of a class to/from functions."},{"content":"For more information about explicit constructors, see <bpt id=\"p1\">[</bpt>User-Defined Type Conversions<ept id=\"p1\">](../../cpp/user-defined-type-conversions-cpp.md)</ept>.","pos":[1836,1970],"source":" For more information about explicit constructors, see [User-Defined Type Conversions](../../cpp/user-defined-type-conversions-cpp.md)."},{"content":"The problem can occur when an attempt is made to copy a class instance declared <ph id=\"ph1\">`const`</ph> by using a copy constructor that does not take a <ph id=\"ph2\">`const`</ph> reference parameter.","pos":[1980,2145],"source":"The problem can occur when an attempt is made to copy a class instance declared `const` by using a copy constructor that does not take a `const` reference parameter."},{"content":"Declare your copy constructor with a <ph id=\"ph1\">`const`</ph> type reference instead of a non-const type reference.","pos":[2146,2244],"source":" Declare your copy constructor with a `const` type reference instead of a non-const type reference."}],"content":"---\ntitle: \"Compiler Error C2558 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C2558\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C2558\"\nms.assetid: 822b701e-dcae-423a-b21f-47f36aff9c90\ncaps.latest.revision: 12\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Error C2558\n'identifier' : no copy constructor available or copy constructor is declared 'explicit'  \n  \n A copy constructor initializes an object from another object of the same type. (It makes a copy of the object.) The compiler generates a default copy constructor if you do not define any constructors.  \n  \n### To fix this error  \n  \n1.  The problem can occur when an attempt is made to copy a class whose copy constructor is `private`. In most cases, a class that has a `private` copy constructor should not be copied. A common programming technique declares a `private` copy constructor to prevent the direct use of a class. The class may be useless by itself or require another class in order to work correctly.  \n  \n     If you determine that it is safe to use a class that has a `private` copy constructor, derive a new class from the class that has the `private` constructor and make a `public` or `protected` copy constructor available in the new class. Use the derived class in place of the original.  \n  \n2.  The problem can occur when an attempt is made to copy a class whose copy constructor is explicit. Declaring a copy constructor as `explicit` prevents passing/returning objects of a class to/from functions. For more information about explicit constructors, see [User-Defined Type Conversions](../../cpp/user-defined-type-conversions-cpp.md).  \n  \n3.  The problem can occur when an attempt is made to copy a class instance declared `const` by using a copy constructor that does not take a `const` reference parameter. Declare your copy constructor with a `const` type reference instead of a non-const type reference."}