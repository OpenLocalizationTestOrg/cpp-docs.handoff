{"nodes":[{"pos":[12,47],"content":"_ultoa_s, _ultow_s | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_ultoa_s, _ultow_s | Microsoft Docs","pos":[0,35]}]},{"content":"_ultoa_s, _ultow_s","pos":[1139,1157]},{"content":"Convert an unsigned long integer to a string.","pos":[1158,1203]},{"content":"These are versions of <bpt id=\"p1\">[</bpt>_ultoa, _ultow<ept id=\"p1\">](../../c-runtime-library/reference/ultoa-ultow.md)</ept> with security enhancements as described in <bpt id=\"p2\">[</bpt>Security Features in the CRT<ept id=\"p2\">](../../c-runtime-library/security-features-in-the-crt.md)</ept>.","pos":[1204,1424],"source":" These are versions of [_ultoa, _ultow](../../c-runtime-library/reference/ultoa-ultow.md) with security enhancements as described in [Security Features in the CRT](../../c-runtime-library/security-features-in-the-crt.md)."},{"content":"Syntax","pos":[1433,1439]},{"content":"Parameters","pos":[1953,1963]},{"content":"Number to be converted.","pos":[1978,2001]},{"content":"String result.","pos":[2017,2031]},{"content":"The size of the <ph id=\"ph1\">`str`</ph> in bytes for <ph id=\"ph2\">`_ultoa_s`</ph> or words for <ph id=\"ph3\">`_ultow_s`</ph>.","pos":[2053,2123],"source":" The size of the `str` in bytes for `_ultoa_s` or words for `_ultow_s`."},{"content":"Base of <ph id=\"ph1\">`value`</ph>.","pos":[2141,2157],"source":" Base of `value`."},{"content":"Return Value","pos":[2166,2178]},{"content":"Zero if the function was successful or an error code.","pos":[2182,2235]},{"content":"Remarks","pos":[2244,2251]},{"content":"The <ph id=\"ph1\">`_ultoa_s`</ph> function converts the digits of <ph id=\"ph2\">`value`</ph> to a null-terminated character string and stores the result (up to 33 bytes) in <ph id=\"ph3\">`str`</ph>.","pos":[2255,2396],"source":"The `_ultoa_s` function converts the digits of `value` to a null-terminated character string and stores the result (up to 33 bytes) in `str`."},{"content":"The <ph id=\"ph1\">`radix`</ph> argument specifies the base of <ph id=\"ph2\">`value`</ph>, which must be in the range 2 – 36.","pos":[2397,2483],"source":" The `radix` argument specifies the base of `value`, which must be in the range 2 – 36."},{"content":"is a wide character version of <ph id=\"ph1\">`_ultoa_s`</ph>; the second argument of <ph id=\"ph2\">`_ultow_s`</ph> is a wide character strings.","pos":[2495,2600],"source":" is a wide character version of `_ultoa_s`; the second argument of `_ultow_s` is a wide character strings."},{"content":"If <ph id=\"ph1\">`str`</ph> is a <ph id=\"ph2\">`NULL`</ph> pointer, or if <ph id=\"ph3\">`sizeOfstr`</ph> is less than or equal to zero, the invalid parameter handler is invoked, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[2607,2816],"source":"If `str` is a `NULL` pointer, or if `sizeOfstr` is less than or equal to zero, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, these functions return -1 and set <ph id=\"ph1\">`errno`</ph> to <ph id=\"ph2\">`EINVAL`</ph> or if the <ph id=\"ph3\">`value`</ph> or <ph id=\"ph4\">`str`</ph> out of range of a long integer, these functions will return a -1 and set the <ph id=\"ph5\">`errno`</ph> to <ph id=\"ph6\">`ERANGE`</ph>.","pos":[2817,3032],"source":" If execution is allowed to continue, these functions return -1 and set `errno` to `EINVAL` or if the `value` or `str` out of range of a long integer, these functions will return a -1 and set the `errno` to `ERANGE`."},{"content":"In C++, using these functions is simplified by template overloads; the overloads can infer buffer length automatically (eliminating the need to specify a size argument) and they can automatically replace older, non-secure functions with their newer, secure counterparts.","pos":[3039,3309]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Secure Template Overloads<ept id=\"p1\">](../../c-runtime-library/secure-template-overloads.md)</ept>.","pos":[3310,3418],"source":" For more information, see [Secure Template Overloads](../../c-runtime-library/secure-template-overloads.md)."},{"content":"Generic-Text Routine Mappings","pos":[3428,3457]},{"content":"TCHAR.H routine","pos":[3464,3479]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[3480,3508],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[3509,3522]},{"content":"_UNICODE defined","pos":[3523,3539]},{"content":"Requirements","pos":[3705,3717]},{"content":"Routine","pos":[3724,3731]},{"content":"Required header","pos":[3732,3747]},{"content":"stdlib.h&gt;","pos":[3805,3814],"source":"stdlib.h>"},{"content":"stdlib.h&gt;","pos":[3832,3841],"source":"stdlib.h>"},{"pos":[3849,3973],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"content":".NET Framework Equivalent","pos":[3982,4007]},{"content":"System::Convert::ToString","pos":[4012,4037]},{"content":"See Also","pos":[4118,4126]},{"content":"Data Conversion","pos":[4131,4146]},{"content":"_ultoa, _ultow","pos":[4197,4211]},{"content":"_ltoa, _ltow","pos":[4268,4280]},{"content":"_ltoa_s, _ltow_s","pos":[4335,4351]},{"content":"_ltoa_s, _ltow_s","pos":[4410,4426]}],"content":"---\ntitle: \"_ultoa_s, _ultow_s | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_ultow_s\"\n  - \"_ultoa_s\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-convert-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_ultow_s\"\n  - \"ultoa_s\"\n  - \"ultow_s\"\n  - \"_ultoa_s\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"_ultoa_s function\"\n  - \"converting integers\"\n  - \"integers, converting\"\n  - \"_ultow_s function\"\n  - \"ultoa_s function\"\n  - \"converting numbers, to strings\"\n  - \"ultow_s function\"\nms.assetid: 606ce905-6752-46ac-a15a-bdc22920e1d4\ncaps.latest.revision: 16\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _ultoa_s, _ultow_s\nConvert an unsigned long integer to a string. These are versions of [_ultoa, _ultow](../../c-runtime-library/reference/ultoa-ultow.md) with security enhancements as described in [Security Features in the CRT](../../c-runtime-library/security-features-in-the-crt.md).  \n  \n## Syntax  \n  \n```  \nerrno_t _ultoa_s(  \n    unsigned long value,  \n    char *str,  \n    size_t sizeOfstr,  \n    int radix   \n);  \nerrno_t _ultow_s(  \n    unsigned long value,  \n    wchar_t *str,  \n    size_t sizeOfstr,  \n    int radix   \n);  \ntemplate <size_t size>  \nerrno_t _ultoa_s(  \n    unsigned long value,  \n    char (&str)[size],  \n    int radix   \n); // C++ only  \ntemplate <size_t size>  \nerrno_t _ultow_s(  \n    unsigned long value,  \n    wchar_t (&str)[size],  \n    int radix   \n); // C++ only  \n```  \n  \n#### Parameters  \n `value`  \n Number to be converted.  \n  \n `str`  \n String result.  \n  \n `sizeOfstr`  \n The size of the `str` in bytes for `_ultoa_s` or words for `_ultow_s`.  \n  \n `radix`  \n Base of `value`.  \n  \n## Return Value  \n Zero if the function was successful or an error code.  \n  \n## Remarks  \n The `_ultoa_s` function converts the digits of `value` to a null-terminated character string and stores the result (up to 33 bytes) in `str`. The `radix` argument specifies the base of `value`, which must be in the range 2 – 36. `_ultow_s` is a wide character version of `_ultoa_s`; the second argument of `_ultow_s` is a wide character strings.  \n  \n If `str` is a `NULL` pointer, or if `sizeOfstr` is less than or equal to zero, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, these functions return -1 and set `errno` to `EINVAL` or if the `value` or `str` out of range of a long integer, these functions will return a -1 and set the `errno` to `ERANGE`.  \n  \n In C++, using these functions is simplified by template overloads; the overloads can infer buffer length automatically (eliminating the need to specify a size argument) and they can automatically replace older, non-secure functions with their newer, secure counterparts. For more information, see [Secure Template Overloads](../../c-runtime-library/secure-template-overloads.md).  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_ultot_s`|`_ultoa_s`|`_ultoa_s`|`_ultow_s`|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_ultoa_s`|\\<stdlib.h>|  \n|`_ultow_s`|\\<stdlib.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## .NET Framework Equivalent  \n [System::Convert::ToString](https://msdn.microsoft.com/en-us/library/system.convert.tostring.aspx)  \n  \n## See Also  \n [Data Conversion](../../c-runtime-library/data-conversion.md)   \n [_ultoa, _ultow](../../c-runtime-library/reference/ultoa-ultow.md)   \n [_ltoa, _ltow](../../c-runtime-library/reference/ltoa-ltow.md)   \n [_ltoa_s, _ltow_s](../../c-runtime-library/reference/ltoa-s-ltow-s.md)   \n [_ltoa_s, _ltow_s](../../c-runtime-library/reference/ltoa-s-ltow-s.md)"}