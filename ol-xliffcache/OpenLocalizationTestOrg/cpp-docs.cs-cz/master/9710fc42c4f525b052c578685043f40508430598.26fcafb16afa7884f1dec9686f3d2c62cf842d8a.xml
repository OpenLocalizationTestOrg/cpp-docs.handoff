{"nodes":[{"pos":[12,45],"content":"__ptr32, __ptr64 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"__ptr32, __ptr64 | Microsoft Docs","pos":[0,33]}]},{"content":"__ptr32, __ptr64","pos":[798,814]},{"content":"Microsoft Specific","pos":[818,836]},{"pos":[850,961],"content":"represents a native pointer on a 32-bit system, while <ph id=\"ph1\">`__ptr64`</ph> represents a native pointer on a 64-bit system.","source":" represents a native pointer on a 32-bit system, while `__ptr64` represents a native pointer on a 64-bit system."},{"content":"The following example shows how to declare each of these pointer types:","pos":[968,1039]},{"content":"On a 32-bit system, a pointer declared with <ph id=\"ph1\">`__ptr64`</ph> is truncated to a 32-bit pointer.","pos":[1103,1190],"source":"On a 32-bit system, a pointer declared with `__ptr64` is truncated to a 32-bit pointer."},{"content":"On a 64-bit system, a pointer declared with <ph id=\"ph1\">`__ptr32`</ph> is coerced to a 64-bit pointer.","pos":[1191,1276],"source":" On a 64-bit system, a pointer declared with `__ptr32` is coerced to a 64-bit pointer."},{"pos":[1284,1420],"content":"[!NOTE]\n You cannot use `__ptr32` or `__ptr64` when compiling with **/clr:pure**. Otherwise, `Compiler Error C2472` will be generated.","leadings":["","> "],"nodes":[{"content":" You cannot use `__ptr32` or `__ptr64` when compiling with **/clr:pure**. Otherwise, `Compiler Error C2472` will be generated.","pos":[8,134],"nodes":[{"content":"You cannot use <ph id=\"ph1\">`__ptr32`</ph> or <ph id=\"ph2\">`__ptr64`</ph> when compiling with <bpt id=\"p1\">**</bpt>/clr:pure<ept id=\"p1\">**</ept>.","pos":[1,73],"source":" You cannot use `__ptr32` or `__ptr64` when compiling with **/clr:pure**."},{"content":"Otherwise, <ph id=\"ph1\">`Compiler Error C2472`</ph> will be generated.","pos":[74,126],"source":" Otherwise, `Compiler Error C2472` will be generated."}]}]},{"content":"Example","pos":[1429,1436]},{"pos":[1440,1547],"content":"The following example shows how to declare and allocate pointers with the <ph id=\"ph1\">`__ptr32`</ph> and <ph id=\"ph2\">`__ptr64`</ph> keywords.","source":"The following example shows how to declare and allocate pointers with the `__ptr32` and `__ptr64` keywords."},{"content":"END Microsoft Specific","pos":[1921,1943]},{"content":"See Also","pos":[1952,1960]},{"content":"Fundamental Types","pos":[1965,1982]}],"content":"---\ntitle: \"__ptr32, __ptr64 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"__ptr32_cpp\"\n  - \"__ptr64_cpp\"\n  - \"__ptr32\"\n  - \"__ptr64\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"__ptr64 keyword [C++]\"\n  - \"_ptr32 keyword [C++]\"\n  - \"ptr32 keyword [C++]\"\n  - \"ptr64 keyword [C++]\"\n  - \"_ptr64 keyword [C++]\"\n  - \"__ptr32 keyword [C++]\"\nms.assetid: afb563d8-7458-4fe7-9c30-bd4b5385a59f\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# __ptr32, __ptr64\n## Microsoft Specific  \n `__ptr32` represents a native pointer on a 32-bit system, while `__ptr64` represents a native pointer on a 64-bit system.  \n  \n The following example shows how to declare each of these pointer types:  \n  \n```  \nint * __ptr32 p32;  \nint * __ptr64 p64;  \n```  \n  \n On a 32-bit system, a pointer declared with `__ptr64` is truncated to a 32-bit pointer. On a 64-bit system, a pointer declared with `__ptr32` is coerced to a 64-bit pointer.  \n  \n> [!NOTE]\n>  You cannot use `__ptr32` or `__ptr64` when compiling with **/clr:pure**. Otherwise, `Compiler Error C2472` will be generated.  \n  \n## Example  \n The following example shows how to declare and allocate pointers with the `__ptr32` and `__ptr64` keywords.  \n  \n```  \n#include <cstdlib>  \n#include <iostream>  \n  \nint main()  \n{  \n    using namespace std;  \n  \n    int * __ptr32 p32;  \n    int * __ptr64 p64;  \n  \n    p32 = (int * __ptr32)malloc(4);  \n    *p32 = 32;  \n    cout << *p32 << endl;  \n  \n    p64 = (int * __ptr64)malloc(4);  \n    *p64 = 64;  \n    cout << *p64 << endl;  \n}  \n```  \n  \n```Output  \n32  \n64  \n```  \n  \n## END Microsoft Specific  \n  \n## See Also  \n [Fundamental Types](../cpp/fundamental-types-cpp.md)"}