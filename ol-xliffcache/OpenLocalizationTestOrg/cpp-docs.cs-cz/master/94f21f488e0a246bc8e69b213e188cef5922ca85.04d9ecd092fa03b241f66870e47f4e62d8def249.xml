{"nodes":[{"pos":[12,53],"content":"basic_stringstream Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"basic_stringstream Class | Microsoft Docs","pos":[0,41]}]},{"content":"basic_stringstream Class","pos":[723,747]},{"pos":[748,962],"content":"Describes an object that controls insertion and extraction of elements and encoded objects using a stream buffer of class <bpt id=\"p1\">[</bpt>basic_stringbuf<ept id=\"p1\">](../standard-library/basic-stringbuf-class.md)</ept><ph id=\"ph1\">&lt; </ph><bpt id=\"p2\">**</bpt>Elem<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>Tr<ept id=\"p3\">**</ept>, <ph id=\"ph2\">`Alloc`</ph>&gt;.","source":"Describes an object that controls insertion and extraction of elements and encoded objects using a stream buffer of class [basic_stringbuf](../standard-library/basic-stringbuf-class.md)< **Elem**, **Tr**, `Alloc`>."},{"content":"Syntax","pos":[971,977]},{"content":"Parameters","pos":[1149,1159]},{"content":"The allocator class.","pos":[1174,1194]},{"content":"The type of the basic element of the string.","pos":[1211,1255]},{"content":"Tr","pos":[1263,1265]},{"content":"The character traits specialized on the basic element of the string.","pos":[1270,1338]},{"content":"Remarks","pos":[1347,1354]},{"content":"The template class describes an object that controls insertion and extraction of elements and encoded objects using a stream buffer of class <bpt id=\"p1\">[</bpt>basic_stringbuf<ept id=\"p1\">](../standard-library/basic-stringbuf-class.md)</ept><ph id=\"ph1\">&lt; </ph><bpt id=\"p2\">**</bpt>Elem<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>Tr<ept id=\"p3\">**</ept>, <ph id=\"ph2\">`Alloc`</ph>&gt;, with elements of type <bpt id=\"p4\">**</bpt>Elem<ept id=\"p4\">**</ept>, whose character traits are determined by the class <bpt id=\"p5\">**</bpt>Tr<ept id=\"p5\">**</ept>, and whose elements are allocated by an allocator of class <ph id=\"ph3\">`Alloc`</ph>.","pos":[1358,1749],"source":"The template class describes an object that controls insertion and extraction of elements and encoded objects using a stream buffer of class [basic_stringbuf](../standard-library/basic-stringbuf-class.md)< **Elem**, **Tr**, `Alloc`>, with elements of type **Elem**, whose character traits are determined by the class **Tr**, and whose elements are allocated by an allocator of class `Alloc`."},{"content":"The object stores an object of class basic_stringbuf&lt; <bpt id=\"p1\">**</bpt>Elem<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>Tr<ept id=\"p2\">**</ept>, <ph id=\"ph1\">`Alloc`</ph>&gt;.","pos":[1750,1831],"source":" The object stores an object of class basic_stringbuf< **Elem**, **Tr**, `Alloc`>."},{"content":"Constructors","pos":[1841,1853]},{"content":"basic_stringstream","pos":[1875,1893]},{"pos":[1936,1986],"content":"Constructs an object of type <ph id=\"ph1\">`basic_stringstream`</ph>.","source":"Constructs an object of type `basic_stringstream`."},{"content":"Typedefs","pos":[1997,2005]},{"content":"allocator_type","pos":[2027,2041]},{"pos":[2080,2137],"content":"The type is a synonym for the template parameter <ph id=\"ph1\">`Alloc`</ph>.","source":"The type is a synonym for the template parameter `Alloc`."},{"content":"Member Functions","pos":[2148,2164]},{"content":"rdbuf","pos":[2186,2191]},{"pos":[2221,2378],"content":"Returns the address of the stored stream buffer of type <ph id=\"ph1\">`pointer`</ph> to <bpt id=\"p1\">[</bpt>basic_stringbuf<ept id=\"p1\">](../standard-library/basic-stringbuf-class.md)</ept><ph id=\"ph2\">&lt; `Elem`</ph>, <ph id=\"ph3\">`Tr`</ph>, <ph id=\"ph4\">`Alloc`</ph>&gt;.","source":"Returns the address of the stored stream buffer of type `pointer` to [basic_stringbuf](../standard-library/basic-stringbuf-class.md)< `Elem`, `Tr`, `Alloc`>."},{"content":"str","pos":[2384,2387]},{"content":"Sets or gets the text in a string buffer without changing the write position.","pos":[2415,2492]},{"content":"Requirements","pos":[2502,2514]},{"pos":[2518,2540],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>sstream&gt;","source":"**Header:** \\<sstream>"},{"pos":[2547,2565],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"pos":[2626,2660],"content":"basic_stringstream::allocator_type"},{"pos":[2664,2721],"content":"The type is a synonym for the template parameter <ph id=\"ph1\">`Alloc`</ph>.","source":"The type is a synonym for the template parameter `Alloc`."},{"pos":[2833,2871],"content":"basic_stringstream::basic_stringstream"},{"pos":[2875,2925],"content":"Constructs an object of type <ph id=\"ph1\">`basic_stringstream`</ph>.","source":"Constructs an object of type `basic_stringstream`."},{"content":"Parameters","pos":[3165,3175]},{"content":"One of the enumerations in <bpt id=\"p1\">[</bpt>ios_base::openmode<ept id=\"p1\">](../standard-library/ios-base-class.md#ios_base__openmode)</ept>.","pos":[3190,3296],"source":" One of the enumerations in [ios_base::openmode](../standard-library/ios-base-class.md#ios_base__openmode)."},{"content":"An object of type <ph id=\"ph1\">`basic_string`</ph>.","pos":[3313,3346],"source":" An object of type `basic_string`."},{"content":"Remarks","pos":[3356,3363]},{"content":"The first constructor initializes the base class by calling <bpt id=\"p1\">[</bpt>basic_iostream<ept id=\"p1\">](../standard-library/basic-iostream-class.md)</ept>( <bpt id=\"p2\">**</bpt>sb<ept id=\"p2\">**</ept>), where <bpt id=\"p3\">**</bpt>sb<ept id=\"p3\">**</ept> is the stored object of class <bpt id=\"p4\">[</bpt>basic_stringbuf<ept id=\"p4\">](../standard-library/basic-stringbuf-class.md)</ept><ph id=\"ph1\">&lt; </ph><bpt id=\"p5\">**</bpt>Elem<ept id=\"p5\">**</ept>, <bpt id=\"p6\">**</bpt>Tr<ept id=\"p6\">**</ept>, <ph id=\"ph2\">`Alloc`</ph>&gt;.","pos":[3367,3634],"source":"The first constructor initializes the base class by calling [basic_iostream](../standard-library/basic-iostream-class.md)( **sb**), where **sb** is the stored object of class [basic_stringbuf](../standard-library/basic-stringbuf-class.md)< **Elem**, **Tr**, `Alloc`>."},{"content":"It also initializes <bpt id=\"p1\">**</bpt>sb<ept id=\"p1\">**</ept> by calling basic_stringbuf&lt; <bpt id=\"p2\">**</bpt>Elem<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>Tr<ept id=\"p3\">**</ept>, <ph id=\"ph1\">`Alloc`</ph>&gt;( <ph id=\"ph2\">`_Mode`</ph>).","pos":[3635,3727],"source":" It also initializes **sb** by calling basic_stringbuf< **Elem**, **Tr**, `Alloc`>( `_Mode`)."},{"content":"The second constructor initializes the base class by calling basic_iostream( <bpt id=\"p1\">**</bpt>sb<ept id=\"p1\">**</ept>).","pos":[3734,3819],"source":"The second constructor initializes the base class by calling basic_iostream( **sb**)."},{"content":"It also initializes <bpt id=\"p1\">**</bpt>sb<ept id=\"p1\">**</ept> by calling basic_stringbuf&lt; <bpt id=\"p2\">**</bpt>Elem<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>Tr<ept id=\"p3\">**</ept>, <ph id=\"ph1\">`Alloc`</ph>&gt;(_ <bpt id=\"p4\">*</bpt>Str<ept id=\"p4\">*</ept>, <ph id=\"ph2\">`_Mode`</ph>).","pos":[3820,3920],"source":" It also initializes **sb** by calling basic_stringbuf< **Elem**, **Tr**, `Alloc`>(_ *Str*, `_Mode`)."},{"pos":[3972,3997],"content":"basic_stringstream::rdbuf"},{"pos":[4001,4164],"content":"Returns the address of the stored stream buffer of type <bpt id=\"p1\">**</bpt>pointer<ept id=\"p1\">**</ept> to <bpt id=\"p2\">[</bpt>basic_stringbuf<ept id=\"p2\">](../standard-library/basic-stringbuf-class.md)</ept><ph id=\"ph1\">&lt; </ph><bpt id=\"p3\">**</bpt>Elem<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>Tr<ept id=\"p4\">**</ept>, <ph id=\"ph2\">`Alloc`</ph>&gt;.","source":"Returns the address of the stored stream buffer of type **pointer** to [basic_stringbuf](../standard-library/basic-stringbuf-class.md)< **Elem**, **Tr**, `Alloc`>."},{"content":"Return Value","pos":[4238,4250]},{"pos":[4254,4361],"content":"The address of the stored stream buffer of type <bpt id=\"p1\">**</bpt>pointer<ept id=\"p1\">**</ept> to basic_stringbuf&lt; <bpt id=\"p2\">**</bpt>Elem<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>Tr<ept id=\"p3\">**</ept>, <ph id=\"ph1\">`Alloc`</ph>&gt;.","source":"The address of the stored stream buffer of type **pointer** to basic_stringbuf< **Elem**, **Tr**, `Alloc`>."},{"content":"Example","pos":[4371,4378]},{"pos":[4383,4508],"content":"See <bpt id=\"p1\">[</bpt>basic_filebuf::close<ept id=\"p1\">](../standard-library/basic-filebuf-class.md#basic_filebuf__close)</ept> for an example that uses <ph id=\"ph1\">`rdbuf`</ph>.","source":"See [basic_filebuf::close](../standard-library/basic-filebuf-class.md#basic_filebuf__close) for an example that uses `rdbuf`."},{"pos":[4558,4581],"content":"basic_stringstream::str"},{"content":"Sets or gets the text in a string buffer without changing the write position.","pos":[4585,4662]},{"content":"Parameters","pos":[4794,4804]},{"content":"The new string.","pos":[4821,4836]},{"content":"Return Value","pos":[4846,4858]},{"pos":[4862,5053],"content":"Returns an object of class <bpt id=\"p1\">[</bpt>basic_string<ept id=\"p1\">](../standard-library/basic-string-class.md)</ept><ph id=\"ph1\">&lt; </ph><bpt id=\"p2\">**</bpt>Elem<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>Tr<ept id=\"p3\">**</ept>, <ph id=\"ph2\">`Alloc`</ph>&gt;, whose controlled sequence is a copy of the sequence controlled by <bpt id=\"p4\">**</bpt><ph id=\"ph3\">\\*</ph>this<ept id=\"p4\">**</ept>.","source":"Returns an object of class [basic_string](../standard-library/basic-string-class.md)< **Elem**, **Tr**, `Alloc`>, whose controlled sequence is a copy of the sequence controlled by **\\*this**."},{"content":"Remarks","pos":[5063,5070]},{"content":"The first member function returns <bpt id=\"p1\">[</bpt>rdbuf<ept id=\"p1\">](#basic_stringstream__rdbuf)</ept><ph id=\"ph1\"> -&gt; </ph><bpt id=\"p2\">[</bpt>str<ept id=\"p2\">](../standard-library/basic-stringbuf-class.md#basic_stringbuf__str)</ept>.","pos":[5074,5220],"source":"The first member function returns [rdbuf](#basic_stringstream__rdbuf) -> [str](../standard-library/basic-stringbuf-class.md#basic_stringbuf__str)."},{"content":"The second member function calls <ph id=\"ph1\">`rdbuf` -&gt; </ph><bpt id=\"p1\">**</bpt>str<ept id=\"p1\">**</ept>( <ph id=\"ph2\">`_Newstr`</ph>).","pos":[5221,5285],"source":" The second member function calls `rdbuf` -> **str**( `_Newstr`)."},{"content":"Example","pos":[5295,5302]},{"pos":[5307,5434],"content":"See <bpt id=\"p1\">[</bpt>basic_stringbuf::str<ept id=\"p1\">](../standard-library/basic-stringbuf-class.md#basic_stringbuf__str)</ept> for an example that uses <bpt id=\"p2\">**</bpt>str<ept id=\"p2\">**</ept>.","source":"See [basic_stringbuf::str](../standard-library/basic-stringbuf-class.md#basic_stringbuf__str) for an example that uses **str**."},{"content":"See Also","pos":[5443,5451]},{"content":"Thread Safety in the C++ Standard Library","pos":[5456,5497]},{"content":"iostream Programming","pos":[5570,5590]},{"content":"iostreams Conventions","pos":[5642,5663]}],"content":"---\ntitle: \"basic_stringstream Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std.basic_stringstream\"\n  - \"basic_stringstream\"\n  - \"std::basic_stringstream\"\n  - \"sstream/std::basic_stringstream\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"basic_stringstream class\"\nms.assetid: 49629814-ca37-45c5-931b-4ff894e6ebd2\ncaps.latest.revision: 19\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# basic_stringstream Class\nDescribes an object that controls insertion and extraction of elements and encoded objects using a stream buffer of class [basic_stringbuf](../standard-library/basic-stringbuf-class.md)< **Elem**, **Tr**, `Alloc`>.  \n  \n## Syntax  \n  \n```  \ntemplate <class Elem, class Tr = char_traits<Elem>, class Alloc = allocator<Elem>>  \nclass basic_stringstream : public basic_iostream<Elem, Tr>  \n```  \n  \n#### Parameters  \n `Alloc`  \n The allocator class.  \n  \n `Elem`  \n The type of the basic element of the string.  \n  \n *Tr*  \n The character traits specialized on the basic element of the string.  \n  \n## Remarks  \n The template class describes an object that controls insertion and extraction of elements and encoded objects using a stream buffer of class [basic_stringbuf](../standard-library/basic-stringbuf-class.md)< **Elem**, **Tr**, `Alloc`>, with elements of type **Elem**, whose character traits are determined by the class **Tr**, and whose elements are allocated by an allocator of class `Alloc`. The object stores an object of class basic_stringbuf< **Elem**, **Tr**, `Alloc`>.  \n  \n### Constructors  \n  \n|||  \n|-|-|  \n|[basic_stringstream](#basic_stringstream__basic_stringstream)|Constructs an object of type `basic_stringstream`.|  \n  \n### Typedefs  \n  \n|||  \n|-|-|  \n|[allocator_type](#basic_stringstream__allocator_type)|The type is a synonym for the template parameter `Alloc`.|  \n  \n### Member Functions  \n  \n|||  \n|-|-|  \n|[rdbuf](#basic_stringstream__rdbuf)|Returns the address of the stored stream buffer of type `pointer` to [basic_stringbuf](../standard-library/basic-stringbuf-class.md)< `Elem`, `Tr`, `Alloc`>.|  \n|[str](#basic_stringstream__str)|Sets or gets the text in a string buffer without changing the write position.|  \n  \n## Requirements  \n **Header:** \\<sstream>  \n  \n **Namespace:** std  \n  \n##  <a name=\"basic_stringstream__allocator_type\"></a>  basic_stringstream::allocator_type  \n The type is a synonym for the template parameter `Alloc`.  \n  \n```  \ntypedef Alloc allocator_type;  \n```  \n  \n##  <a name=\"basic_stringstream__basic_stringstream\"></a>  basic_stringstream::basic_stringstream  \n Constructs an object of type `basic_stringstream`.  \n  \n```  \nexplicit basic_stringstream(ios_base::openmode _Mode = ios_base::in | ios_base::out);\n\nexplicit basic_stringstream(const basic_string<Elem, Tr, Alloc>& str, ios_base::openmode _Mode = ios_base::in | ios_base::out);\n```  \n  \n### Parameters  \n `_Mode`  \n One of the enumerations in [ios_base::openmode](../standard-library/ios-base-class.md#ios_base__openmode).  \n  \n ` str`  \n An object of type `basic_string`.  \n  \n### Remarks  \n The first constructor initializes the base class by calling [basic_iostream](../standard-library/basic-iostream-class.md)( **sb**), where **sb** is the stored object of class [basic_stringbuf](../standard-library/basic-stringbuf-class.md)< **Elem**, **Tr**, `Alloc`>. It also initializes **sb** by calling basic_stringbuf< **Elem**, **Tr**, `Alloc`>( `_Mode`).  \n  \n The second constructor initializes the base class by calling basic_iostream( **sb**). It also initializes **sb** by calling basic_stringbuf< **Elem**, **Tr**, `Alloc`>(_ *Str*, `_Mode`).  \n  \n##  <a name=\"basic_stringstream__rdbuf\"></a>  basic_stringstream::rdbuf  \n Returns the address of the stored stream buffer of type **pointer** to [basic_stringbuf](../standard-library/basic-stringbuf-class.md)< **Elem**, **Tr**, `Alloc`>.  \n  \n```  \nbasic_stringbuf<Elem, Tr, Alloc> *rdbuf() const;\n```  \n  \n### Return Value  \n The address of the stored stream buffer of type **pointer** to basic_stringbuf< **Elem**, **Tr**, `Alloc`>.  \n  \n### Example  \n  See [basic_filebuf::close](../standard-library/basic-filebuf-class.md#basic_filebuf__close) for an example that uses `rdbuf`.  \n  \n##  <a name=\"basic_stringstream__str\"></a>  basic_stringstream::str  \n Sets or gets the text in a string buffer without changing the write position.  \n  \n```  \nbasic_string<Elem, Tr, Alloc> str() const;\n\n \nvoid str(\n    const basic_string<Elem, Tr, Alloc>& _Newstr);\n```  \n  \n### Parameters  \n `_Newstr`  \n The new string.  \n  \n### Return Value  \n Returns an object of class [basic_string](../standard-library/basic-string-class.md)< **Elem**, **Tr**, `Alloc`>, whose controlled sequence is a copy of the sequence controlled by **\\*this**.  \n  \n### Remarks  \n The first member function returns [rdbuf](#basic_stringstream__rdbuf) -> [str](../standard-library/basic-stringbuf-class.md#basic_stringbuf__str). The second member function calls `rdbuf` -> **str**( `_Newstr`).  \n  \n### Example  \n  See [basic_stringbuf::str](../standard-library/basic-stringbuf-class.md#basic_stringbuf__str) for an example that uses **str**.  \n  \n## See Also  \n [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)   \n [iostream Programming](../standard-library/iostream-programming.md)   \n [iostreams Conventions](../standard-library/iostreams-conventions.md)\n\n"}