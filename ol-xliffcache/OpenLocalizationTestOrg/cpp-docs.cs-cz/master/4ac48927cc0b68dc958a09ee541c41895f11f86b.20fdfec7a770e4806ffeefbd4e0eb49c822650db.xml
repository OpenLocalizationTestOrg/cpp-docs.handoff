{"nodes":[{"pos":[12,83],"content":"Overloading the &gt;&gt; Operator for Your Own Classes | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Overloading the <ph id=\"ph1\">&amp;gt;&amp;gt;</ph> Operator for Your Own Classes | Microsoft Docs","pos":[0,71],"source":"Overloading the &gt;&gt; Operator for Your Own Classes | Microsoft Docs"}]},{"content":"Overloading the <ph id=\"ph1\">&amp;gt;&amp;gt;</ph> Operator for Your Own Classes","pos":[705,759],"source":"Overloading the &gt;&gt; Operator for Your Own Classes"},{"content":"Input streams use the extraction (<ph id=\"ph1\">`&gt;&gt;`</ph>) operator for the standard types.","pos":[760,832],"source":"Input streams use the extraction (`>>`) operator for the standard types."},{"content":"You can write similar extraction operators for your own types; your success depends on using white space precisely.","pos":[833,948]},{"pos":[955,1039],"content":"Here is an example of an extraction operator for the <ph id=\"ph1\">`Date`</ph> class presented earlier:","source":"Here is an example of an extraction operator for the `Date` class presented earlier:"},{"content":"See Also","pos":[1168,1176]},{"content":"Input Streams","pos":[1181,1194]}],"content":"---\ntitle: \"Overloading the &gt;&gt; Operator for Your Own Classes | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"operator>>\"\n  - \"operator>>, overloading for your own classes\"\n  - \"operator >>, overloading for your own classes\"\nms.assetid: 40dab4e0-3f97-4745-9cc8-b86e740fa246\ncaps.latest.revision: 8\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Overloading the &gt;&gt; Operator for Your Own Classes\nInput streams use the extraction (`>>`) operator for the standard types. You can write similar extraction operators for your own types; your success depends on using white space precisely.  \n  \n Here is an example of an extraction operator for the `Date` class presented earlier:  \n  \n```  \nistream& operator>> (istream& is, Date& dt)  \n{  \n    is>> dt.mo>> dt.da>> dt.yr;  \n    return is;  \n}  \n```  \n  \n## See Also  \n [Input Streams](../standard-library/input-streams.md)\n\n"}