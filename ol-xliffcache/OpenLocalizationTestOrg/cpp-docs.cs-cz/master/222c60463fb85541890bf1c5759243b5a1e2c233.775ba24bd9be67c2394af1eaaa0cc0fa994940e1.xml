{"nodes":[{"pos":[12,37],"content":"__rdtscp | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"__rdtscp | Microsoft Docs","pos":[0,25]}]},{"content":"__rdtscp","pos":[668,676]},{"content":"Microsoft Specific","pos":[679,697]},{"pos":[706,833],"content":"Generates the <ph id=\"ph1\">`rdtscp`</ph> instruction, writes <ph id=\"ph2\">`TSC_AUX[31:0`</ph>] to memory, and returns the 64-bit Time Stamp Counter (<ph id=\"ph3\">`TSC)`</ph> result.","source":"Generates the `rdtscp` instruction, writes `TSC_AUX[31:0`] to memory, and returns the 64-bit Time Stamp Counter (`TSC)` result."},{"content":"Syntax","pos":[842,848]},{"content":"Parameters","pos":[932,942]},{"content":"[out]","pos":[946,951]},{"content":"Pointer to a location that will contain the contents of the machine-specific register <ph id=\"ph1\">`TSC_AUX[31:0]`</ph>.","pos":[961,1063],"source":" Pointer to a location that will contain the contents of the machine-specific register `TSC_AUX[31:0]`."},{"content":"Return Value","pos":[1072,1084]},{"content":"A 64-bit unsigned integer tick count.","pos":[1088,1125]},{"content":"Requirements","pos":[1134,1146]},{"content":"Intrinsic","pos":[1153,1162]},{"content":"Architecture","pos":[1163,1175]},{"content":"AMD NPT Family 0Fh or later versions","pos":[1230,1266]},{"pos":[1274,1301],"content":"<bpt id=\"p1\">**</bpt>Header file<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>intrin.h&gt;","source":"**Header file** \\<intrin.h>"},{"content":"Remarks","pos":[1310,1317]},{"content":"This intrinsic generates the <ph id=\"ph1\">`rdtscp`</ph> instruction.","pos":[1321,1371],"source":"This intrinsic generates the `rdtscp` instruction."},{"content":"To determine hardware support for this instruction, call the <ph id=\"ph1\">`__cpuid`</ph> intrinsic with <ph id=\"ph2\">`InfoType=0x80000001`</ph> and check bit 27 of <ph id=\"ph3\">`CPUInfo[3] (EDX)`</ph>.","pos":[1372,1519],"source":" To determine hardware support for this instruction, call the `__cpuid` intrinsic with `InfoType=0x80000001` and check bit 27 of `CPUInfo[3] (EDX)`."},{"content":"This bit is 1 if the instruction is supported, and 0 otherwise.","pos":[1520,1583]},{"content":"If you run code that uses this intrinsic on hardware that does not support the <ph id=\"ph1\">`rdtscp`</ph> instruction, the results are unpredictable.","pos":[1585,1716],"source":"  If you run code that uses this intrinsic on hardware that does not support the `rdtscp` instruction, the results are unpredictable."},{"pos":[1724,1856],"content":"[!CAUTION]\n Unlike `rdtsc`, `rdtscp` is a serializing instruction; nevertheless, the compiler can move code around this intrinsic.","leadings":["","> "],"nodes":[{"content":"Unlike <ph id=\"ph1\">`rdtsc`</ph>, <ph id=\"ph2\">`rdtscp`</ph> is a serializing instruction; nevertheless, the compiler can move code around this intrinsic.","pos":[12,130],"source":" Unlike `rdtsc`, `rdtscp` is a serializing instruction; nevertheless, the compiler can move code around this intrinsic."}]},{"content":"The interpretation of the TSC value in this generation of hardware differs from that in earlier versions of <ph id=\"ph1\">[!INCLUDE[vcprx64](../assembler/inline/includes/vcprx64_md.md)]</ph>.","pos":[1863,2035],"source":"The interpretation of the TSC value in this generation of hardware differs from that in earlier versions of [!INCLUDE[vcprx64](../assembler/inline/includes/vcprx64_md.md)]."},{"content":"See hardware manuals for more information.","pos":[2037,2079]},{"pos":[2086,2162],"content":"The meaning of the value in <ph id=\"ph1\">`TSC_AUX[31:0]`</ph> depends on the operating system.","source":"The meaning of the value in `TSC_AUX[31:0]` depends on the operating system."},{"content":"Example","pos":[2171,2178]},{"content":"END Microsoft Specific","pos":[2465,2487]},{"content":"Copyright 2007 by Advanced Micro Devices, Inc. All rights reserved.","pos":[2491,2558]},{"content":"Reproduced with permission from Advanced Micro Devices, Inc.","pos":[2559,2619]},{"content":"See Also","pos":[2628,2636]},{"content":"__rdtsc","pos":[2641,2648]},{"content":"Compiler Intrinsics","pos":[2679,2698]}],"content":"---\ntitle: \"__rdtscp | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"__rdtscp\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"rdtscp intrinsic\"\n  - \"__rdtscp intrinsic\"\n  - \"rdtscp instruction\"\nms.assetid: f17d9a9c-88bb-44e0-b69d-d516bc1c93ee\ncaps.latest.revision: 13\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# __rdtscp\n**Microsoft Specific**  \n  \n Generates the `rdtscp` instruction, writes `TSC_AUX[31:0`] to memory, and returns the 64-bit Time Stamp Counter (`TSC)` result.  \n  \n## Syntax  \n  \n```  \nunsigned __int64 __rdtscp(  \n   unsigned int * Aux  \n);  \n```  \n  \n#### Parameters  \n [out] `Aux`  \n Pointer to a location that will contain the contents of the machine-specific register `TSC_AUX[31:0]`.  \n  \n## Return Value  \n A 64-bit unsigned integer tick count.  \n  \n## Requirements  \n  \n|Intrinsic|Architecture|  \n|---------------|------------------|  \n|`__rdtscp`|AMD NPT Family 0Fh or later versions|  \n  \n **Header file** \\<intrin.h>  \n  \n## Remarks  \n This intrinsic generates the `rdtscp` instruction. To determine hardware support for this instruction, call the `__cpuid` intrinsic with `InfoType=0x80000001` and check bit 27 of `CPUInfo[3] (EDX)`. This bit is 1 if the instruction is supported, and 0 otherwise.  If you run code that uses this intrinsic on hardware that does not support the `rdtscp` instruction, the results are unpredictable.  \n  \n> [!CAUTION]\n>  Unlike `rdtsc`, `rdtscp` is a serializing instruction; nevertheless, the compiler can move code around this intrinsic.  \n  \n The interpretation of the TSC value in this generation of hardware differs from that in earlier versions of [!INCLUDE[vcprx64](../assembler/inline/includes/vcprx64_md.md)].  See hardware manuals for more information.  \n  \n The meaning of the value in `TSC_AUX[31:0]` depends on the operating system.  \n  \n## Example  \n  \n```  \n#include <intrin.h>   \n#include <stdio.h>  \nint main()   \n{  \n unsigned __int64 i;  \n unsigned int ui;  \n i = __rdtscp(&ui);  \n printf_s(\"%I64d ticks\\n\", i);  \n printf_s(\"TSC_AUX was %x\\n\", ui);  \n}  \n```  \n  \n```Output  \n3363423610155519 ticks  \nTSC_AUX was 0  \n```  \n  \n## END Microsoft Specific  \n Copyright 2007 by Advanced Micro Devices, Inc. All rights reserved. Reproduced with permission from Advanced Micro Devices, Inc.  \n  \n## See Also  \n [__rdtsc](../intrinsics/rdtsc.md)   \n [Compiler Intrinsics](../intrinsics/compiler-intrinsics.md)"}