{"nodes":[{"pos":[12,50],"content":"CAnimationColor Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CAnimationColor Class | Microsoft Docs","pos":[0,38]}]},{"pos":[664,685],"content":"CAnimationColor Class","linkify":"CAnimationColor Class","nodes":[{"content":"CAnimationColor Class","pos":[0,21]}]},{"content":"Implements the functionality of a color whose red, green, and blue components can be animated.","pos":[686,780]},{"pos":[789,795],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[874,881],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[891,910],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[917,921]},{"content":"Description","pos":[922,933]},{"pos":[971,1040],"content":"<bpt id=\"p1\">[</bpt>CAnimationColor::CAnimationColor<ept id=\"p1\">](#canimationcolor__canimationcolor)</ept>","source":"[CAnimationColor::CAnimationColor](#canimationcolor__canimationcolor)"},{"content":"Overloaded.","pos":[1041,1052]},{"content":"Constructs an animation color object.","pos":[1053,1090]},{"pos":[1101,1115],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1122,1126]},{"content":"Description","pos":[1127,1138]},{"pos":[1176,1241],"content":"<bpt id=\"p1\">[</bpt>CAnimationColor::AddTransition<ept id=\"p1\">](#canimationcolor__addtransition)</ept>","source":"[CAnimationColor::AddTransition](#canimationcolor__addtransition)"},{"content":"Adds transitions for Red, Green and Blue components.","pos":[1242,1294]},{"pos":[1299,1346],"content":"<bpt id=\"p1\">[</bpt>CAnimationColor::GetB<ept id=\"p1\">](#canimationcolor__getb)</ept>","source":"[CAnimationColor::GetB](#canimationcolor__getb)"},{"content":"Provides access to CAnimationVariable representing Blue component.","pos":[1347,1413]},{"pos":[1418,1487],"content":"<bpt id=\"p1\">[</bpt>CAnimationColor::GetDefaultValue<ept id=\"p1\">](#canimationcolor__getdefaultvalue)</ept>","source":"[CAnimationColor::GetDefaultValue](#canimationcolor__getdefaultvalue)"},{"content":"Returns the default values for color components.","pos":[1488,1536]},{"pos":[1541,1588],"content":"<bpt id=\"p1\">[</bpt>CAnimationColor::GetG<ept id=\"p1\">](#canimationcolor__getg)</ept>","source":"[CAnimationColor::GetG](#canimationcolor__getg)"},{"content":"Provides access to CAnimationVariable representing Green component.","pos":[1589,1656]},{"pos":[1661,1708],"content":"<bpt id=\"p1\">[</bpt>CAnimationColor::GetR<ept id=\"p1\">](#canimationcolor__getr)</ept>","source":"[CAnimationColor::GetR](#canimationcolor__getr)"},{"content":"Provides access to CAnimationVariable representing Red component.","pos":[1709,1774]},{"pos":[1779,1834],"content":"<bpt id=\"p1\">[</bpt>CAnimationColor::GetValue<ept id=\"p1\">](#canimationcolor__getvalue)</ept>","source":"[CAnimationColor::GetValue](#canimationcolor__getvalue)"},{"content":"Returns current value.","pos":[1835,1857]},{"pos":[1862,1931],"content":"<bpt id=\"p1\">[</bpt>CAnimationColor::SetDefaultValue<ept id=\"p1\">](#canimationcolor__setdefaultvalue)</ept>","source":"[CAnimationColor::SetDefaultValue](#canimationcolor__setdefaultvalue)"},{"content":"Sets default value.","pos":[1932,1951]},{"pos":[1962,1979],"content":"Protected Methods","linkify":"Protected Methods","nodes":[{"content":"Protected Methods","pos":[0,17]}]},{"content":"Name","pos":[1986,1990]},{"content":"Description","pos":[1991,2002]},{"pos":[2040,2127],"content":"<bpt id=\"p1\">[</bpt>CAnimationColor::GetAnimationVariableList<ept id=\"p1\">](#canimationcolor__getanimationvariablelist)</ept>","source":"[CAnimationColor::GetAnimationVariableList](#canimationcolor__getanimationvariablelist)"},{"content":"Puts the encapsulated animation variables into a list.","pos":[2128,2182]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CAnimationBaseObject::GetAnimationVariableList<ept id=\"p1\">](../../mfc/reference/canimationbaseobject-class.md#canimationbaseobject__getanimationvariablelist)</ept>.)","pos":[2183,2342],"source":" (Overrides [CAnimationBaseObject::GetAnimationVariableList](../../mfc/reference/canimationbaseobject-class.md#canimationbaseobject__getanimationvariablelist).)"},{"pos":[2353,2369],"content":"Public Operators","linkify":"Public Operators","nodes":[{"content":"Public Operators","pos":[0,16]}]},{"content":"Name","pos":[2376,2380]},{"content":"Description","pos":[2381,2392]},{"pos":[2430,2503],"content":"<bpt id=\"p1\">[</bpt>CAnimationColor::operator COLORREF<ept id=\"p1\">](#canimationcolor__operator_colorref)</ept>","source":"[CAnimationColor::operator COLORREF](#canimationcolor__operator_colorref)"},{"pos":[2509,2568],"content":"<bpt id=\"p1\">[</bpt>CAnimationColor::operator=<ept id=\"p1\">](#canimationcolor__operator_eq)</ept>","source":"[CAnimationColor::operator=](#canimationcolor__operator_eq)"},{"content":"Assigns color to CAnimationColor.","pos":[2569,2602]},{"pos":[2613,2635],"content":"Protected Data Members","linkify":"Protected Data Members","nodes":[{"content":"Protected Data Members","pos":[0,22]}]},{"content":"Name","pos":[2642,2646]},{"content":"Description","pos":[2647,2658]},{"pos":[2696,2751],"content":"<bpt id=\"p1\">[</bpt>CAnimationColor::m_bValue<ept id=\"p1\">](#canimationcolor__m_bvalue)</ept>","source":"[CAnimationColor::m_bValue](#canimationcolor__m_bvalue)"},{"content":"The encapsulated animation variable that represents Blue component of animation color.","pos":[2752,2838]},{"pos":[2843,2898],"content":"<bpt id=\"p1\">[</bpt>CAnimationColor::m_gValue<ept id=\"p1\">](#canimationcolor__m_gvalue)</ept>","source":"[CAnimationColor::m_gValue](#canimationcolor__m_gvalue)"},{"content":"The encapsulated animation variable that represents Green component of animation color.","pos":[2899,2986]},{"pos":[2991,3046],"content":"<bpt id=\"p1\">[</bpt>CAnimationColor::m_rValue<ept id=\"p1\">](#canimationcolor__m_rvalue)</ept>","source":"[CAnimationColor::m_rValue](#canimationcolor__m_rvalue)"},{"content":"The encapsulated animation variable that represents Red component of animation color.","pos":[3047,3132]},{"pos":[3142,3149],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The CAnimationColor class encapsulates three CAnimationVariable objects and can represent in applications a color.","pos":[3153,3267]},{"content":"For example, you can use this class to animate colors of any object on the screen (like text color, background color etc).","pos":[3268,3390]},{"content":"To use this class in application, just instantiate an object of this class, add it to animation controller using CAnimationController::AddAnimationObject and call AddTransition for each transition to be applied to Red, Green and Blue components.","pos":[3391,3636]},{"pos":[3645,3666],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[3670,3717],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[3724,3797],"content":"<bpt id=\"p1\">[</bpt>CAnimationBaseObject<ept id=\"p1\">](../../mfc/reference/canimationbaseobject-class.md)</ept>","source":"[CAnimationBaseObject](../../mfc/reference/canimationbaseobject-class.md)"},{"pos":[3804,3867],"content":"<bpt id=\"p1\">[</bpt>CAnimationColor<ept id=\"p1\">](../../mfc/reference/canimationcolor-class.md)</ept>","source":"[CAnimationColor](../../mfc/reference/canimationcolor-class.md)"},{"pos":[3876,3888],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3892,3928],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxanimationcontroller.h","source":"**Header:** afxanimationcontroller.h"},{"pos":[3938,4015],"content":"<bpt id=\"p1\">&lt;a name=\"canimationcolor__addtransition\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationColor::AddTransition","linkify":"<a name=\"canimationcolor__addtransition\"></a>  CAnimationColor::AddTransition","source":"<a name=\"canimationcolor__addtransition\"></a>  CAnimationColor::AddTransition"},{"content":"Adds transitions for Red, Green and Blue components.","pos":[4019,4071]},{"pos":[4226,4236],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Transition for Red component.","pos":[4258,4287]},{"content":"Transition for Green component.","pos":[4312,4343]},{"content":"Transition for Blue component.","pos":[4368,4398]},{"pos":[4408,4415],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Call this function to add the specified transitions to the internal list of transitions to be applied to animation variables representing color components.","pos":[4419,4574]},{"content":"When you add transitions, they are not applied immediately and stored in an internal list.","pos":[4575,4665]},{"content":"Transitions are applied (added to a storyboard for a particular value) when you call CAnimationController::AnimateGroup.","pos":[4666,4786]},{"content":"If you don't need to apply a transition to one of the color components, you can pass NULL.","pos":[4787,4877]},{"pos":[4887,4968],"content":"<bpt id=\"p1\">&lt;a name=\"canimationcolor__canimationcolor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationColor::CAnimationColor","linkify":"<a name=\"canimationcolor__canimationcolor\"></a>  CAnimationColor::CAnimationColor","source":"<a name=\"canimationcolor__canimationcolor\"></a>  CAnimationColor::CAnimationColor"},{"content":"Constructs a CAnimationColor object.","pos":[4972,5008]},{"pos":[5181,5191],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies default color.","pos":[5206,5230]},{"content":"Specifies Group ID.","pos":[5251,5270]},{"content":"Specifies Object ID.","pos":[5292,5312]},{"content":"Specifies user-defined data.","pos":[5335,5363]},{"pos":[5373,5380],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The object is constructed with default values for red, green, blue, Object ID and Group ID, which will be set to 0.","pos":[5384,5499]},{"content":"They can be changed later at runtime using SetDefaultValue and SetID.","pos":[5500,5569]},{"pos":[5579,5678],"content":"<bpt id=\"p1\">&lt;a name=\"canimationcolor__getanimationvariablelist\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationColor::GetAnimationVariableList","linkify":"<a name=\"canimationcolor__getanimationvariablelist\"></a>  CAnimationColor::GetAnimationVariableList","source":"<a name=\"canimationcolor__getanimationvariablelist\"></a>  CAnimationColor::GetAnimationVariableList"},{"content":"Puts the encapsulated animation variables into a list.","pos":[5682,5736]},{"pos":[5864,5874],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"When the function returns, it contains pointers to three CAnimationVariable objects representing red, green and blue components.","pos":[5887,6015]},{"pos":[6025,6084],"content":"<bpt id=\"p1\">&lt;a name=\"canimationcolor__getb\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationColor::GetB","linkify":"<a name=\"canimationcolor__getb\"></a>  CAnimationColor::GetB","source":"<a name=\"canimationcolor__getb\"></a>  CAnimationColor::GetB"},{"content":"Provides access to CAnimationVariable representing Blue component.","pos":[6088,6154]},{"pos":[6207,6219],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A reference to encapsulated CAnimationVariable representing Blue component.","pos":[6223,6298]},{"pos":[6308,6315],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You can call this method to get direct access to underlying CAnimationVariable representing Blue component.","pos":[6319,6426]},{"pos":[6436,6517],"content":"<bpt id=\"p1\">&lt;a name=\"canimationcolor__getdefaultvalue\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationColor::GetDefaultValue","linkify":"<a name=\"canimationcolor__getdefaultvalue\"></a>  CAnimationColor::GetDefaultValue","source":"<a name=\"canimationcolor__getdefaultvalue\"></a>  CAnimationColor::GetDefaultValue"},{"content":"Returns the default values for color components.","pos":[6521,6569]},{"pos":[6622,6634],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A COLORREF value containing defaults for RGB components.","pos":[6638,6694]},{"pos":[6704,6711],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Call this function to retrieve default value, which was previously set by constructor or SetDefaultValue.","pos":[6715,6820]},{"pos":[6830,6889],"content":"<bpt id=\"p1\">&lt;a name=\"canimationcolor__getg\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationColor::GetG","linkify":"<a name=\"canimationcolor__getg\"></a>  CAnimationColor::GetG","source":"<a name=\"canimationcolor__getg\"></a>  CAnimationColor::GetG"},{"content":"Provides access to CAnimationVariable representing Green component.","pos":[6893,6960]},{"pos":[7013,7025],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A reference to encapsulated CAnimationVariable representing Green component.","pos":[7029,7105]},{"pos":[7115,7122],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You can call this method to get direct access to underlying CAnimationVariable representing Green component.","pos":[7126,7234]},{"pos":[7244,7303],"content":"<bpt id=\"p1\">&lt;a name=\"canimationcolor__getr\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationColor::GetR","linkify":"<a name=\"canimationcolor__getr\"></a>  CAnimationColor::GetR","source":"<a name=\"canimationcolor__getr\"></a>  CAnimationColor::GetR"},{"content":"Provides access to CAnimationVariable representing Red component.","pos":[7307,7372]},{"pos":[7425,7437],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A reference to encapsulated CAnimationVariable representing Red component.","pos":[7441,7515]},{"pos":[7525,7532],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You can call this method to get direct access to underlying CAnimationVariable representing Red component.","pos":[7536,7642]},{"pos":[7652,7719],"content":"<bpt id=\"p1\">&lt;a name=\"canimationcolor__getvalue\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationColor::GetValue","linkify":"<a name=\"canimationcolor__getvalue\"></a>  CAnimationColor::GetValue","source":"<a name=\"canimationcolor__getvalue\"></a>  CAnimationColor::GetValue"},{"content":"Returns current value.","pos":[7723,7745]},{"pos":[7802,7812],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Output.","pos":[7827,7834]},{"content":"Contains the current value when this method returns.","pos":[7835,7887]},{"pos":[7897,7909],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"TRUE, if the current value was successfully retrieved; otherwise FALSE.","pos":[7913,7984]},{"pos":[7994,8001],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Call this function to retrieve the current value of animation color.","pos":[8005,8073]},{"content":"If this method fails or underlying COM objects for color components have not been initialized, color contains default value, which was previously set in constructor or by SetDefaultValue.","pos":[8074,8261]},{"pos":[8271,8338],"content":"<bpt id=\"p1\">&lt;a name=\"canimationcolor__m_bvalue\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationColor::m_bValue","linkify":"<a name=\"canimationcolor__m_bvalue\"></a>  CAnimationColor::m_bValue","source":"<a name=\"canimationcolor__m_bvalue\"></a>  CAnimationColor::m_bValue"},{"content":"The encapsulated animation variable that represents Blue component of animation color.","pos":[8342,8428]},{"pos":[8484,8551],"content":"<bpt id=\"p1\">&lt;a name=\"canimationcolor__m_gvalue\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationColor::m_gValue","linkify":"<a name=\"canimationcolor__m_gvalue\"></a>  CAnimationColor::m_gValue","source":"<a name=\"canimationcolor__m_gvalue\"></a>  CAnimationColor::m_gValue"},{"content":"The encapsulated animation variable that represents Green component of animation color.","pos":[8555,8642]},{"pos":[8698,8765],"content":"<bpt id=\"p1\">&lt;a name=\"canimationcolor__m_rvalue\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationColor::m_rValue","linkify":"<a name=\"canimationcolor__m_rvalue\"></a>  CAnimationColor::m_rValue","source":"<a name=\"canimationcolor__m_rvalue\"></a>  CAnimationColor::m_rValue"},{"content":"The encapsulated animation variable that represents Red component of animation color.","pos":[8769,8854]},{"pos":[8910,8995],"content":"<bpt id=\"p1\">&lt;a name=\"canimationcolor__operator_colorref\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationColor::operator COLORREF","linkify":"<a name=\"canimationcolor__operator_colorref\"></a>  CAnimationColor::operator COLORREF","source":"<a name=\"canimationcolor__operator_colorref\"></a>  CAnimationColor::operator COLORREF"},{"pos":[9042,9054],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[9064,9135],"content":"<bpt id=\"p1\">&lt;a name=\"canimationcolor__operator_eq\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationColor::operator=","linkify":"<a name=\"canimationcolor__operator_eq\"></a>  CAnimationColor::operator=","source":"<a name=\"canimationcolor__operator_eq\"></a>  CAnimationColor::operator="},{"content":"Assigns color to CAnimationColor.","pos":[9139,9172]},{"pos":[9229,9239],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies new value Animation Color.","pos":[9254,9290]},{"pos":[9300,9307],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"It's recommended to do that before animation start, because this operator calls SetDefaultValue, which recreates the underlying COM objects for color components if they have been created.","pos":[9311,9498]},{"content":"If you subscribed this animation object to events (ValueChanged or IntegerValueChanged), you need to re-enable these events.","pos":[9499,9623]},{"pos":[9633,9714],"content":"<bpt id=\"p1\">&lt;a name=\"canimationcolor__setdefaultvalue\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationColor::SetDefaultValue","linkify":"<a name=\"canimationcolor__setdefaultvalue\"></a>  CAnimationColor::SetDefaultValue","source":"<a name=\"canimationcolor__setdefaultvalue\"></a>  CAnimationColor::SetDefaultValue"},{"content":"Sets default value.","pos":[9718,9737]},{"pos":[9800,9810],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies new default values for red, green and blue components.","pos":[9825,9889]},{"pos":[9899,9906],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use this function to set a default value to animation object.","pos":[9910,9971]},{"content":"This methods assigns default values to color components of animation color.","pos":[9972,10047]},{"content":"It also recreates underlying COM objects if they have been created.","pos":[10048,10115]},{"content":"If you subscribed this animation object to events (ValueChanged or IntegerValueChanged), you need to re-enable these events.","pos":[10116,10240]},{"pos":[10249,10257],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[10261,10306],"content":"<bpt id=\"p1\">[</bpt>Classes<ept id=\"p1\">](../../mfc/reference/mfc-classes.md)</ept>","source":"[Classes](../../mfc/reference/mfc-classes.md)"}],"content":"---\ntitle: \"CAnimationColor Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CAnimationColor\"\n  - \"afxanimationcontroller/CAnimationColor\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CAnimationColor class\"\nms.assetid: 88bfabd4-efeb-4652-87e8-304253d8e48c\ncaps.latest.revision: 17\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CAnimationColor Class\nImplements the functionality of a color whose red, green, and blue components can be animated.  \n  \n## Syntax  \n  \n```  \nclass CAnimationColor : public CAnimationBaseObject;  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAnimationColor::CAnimationColor](#canimationcolor__canimationcolor)|Overloaded. Constructs an animation color object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAnimationColor::AddTransition](#canimationcolor__addtransition)|Adds transitions for Red, Green and Blue components.|  \n|[CAnimationColor::GetB](#canimationcolor__getb)|Provides access to CAnimationVariable representing Blue component.|  \n|[CAnimationColor::GetDefaultValue](#canimationcolor__getdefaultvalue)|Returns the default values for color components.|  \n|[CAnimationColor::GetG](#canimationcolor__getg)|Provides access to CAnimationVariable representing Green component.|  \n|[CAnimationColor::GetR](#canimationcolor__getr)|Provides access to CAnimationVariable representing Red component.|  \n|[CAnimationColor::GetValue](#canimationcolor__getvalue)|Returns current value.|  \n|[CAnimationColor::SetDefaultValue](#canimationcolor__setdefaultvalue)|Sets default value.|  \n  \n### Protected Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAnimationColor::GetAnimationVariableList](#canimationcolor__getanimationvariablelist)|Puts the encapsulated animation variables into a list. (Overrides [CAnimationBaseObject::GetAnimationVariableList](../../mfc/reference/canimationbaseobject-class.md#canimationbaseobject__getanimationvariablelist).)|  \n  \n### Public Operators  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAnimationColor::operator COLORREF](#canimationcolor__operator_colorref)||  \n|[CAnimationColor::operator=](#canimationcolor__operator_eq)|Assigns color to CAnimationColor.|  \n  \n### Protected Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAnimationColor::m_bValue](#canimationcolor__m_bvalue)|The encapsulated animation variable that represents Blue component of animation color.|  \n|[CAnimationColor::m_gValue](#canimationcolor__m_gvalue)|The encapsulated animation variable that represents Green component of animation color.|  \n|[CAnimationColor::m_rValue](#canimationcolor__m_rvalue)|The encapsulated animation variable that represents Red component of animation color.|  \n  \n## Remarks  \n The CAnimationColor class encapsulates three CAnimationVariable objects and can represent in applications a color. For example, you can use this class to animate colors of any object on the screen (like text color, background color etc). To use this class in application, just instantiate an object of this class, add it to animation controller using CAnimationController::AddAnimationObject and call AddTransition for each transition to be applied to Red, Green and Blue components.  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CAnimationBaseObject](../../mfc/reference/canimationbaseobject-class.md)  \n  \n [CAnimationColor](../../mfc/reference/canimationcolor-class.md)  \n  \n## Requirements  \n **Header:** afxanimationcontroller.h  \n  \n##  <a name=\"canimationcolor__addtransition\"></a>  CAnimationColor::AddTransition  \n Adds transitions for Red, Green and Blue components.  \n  \n```  \nvoid AddTransition(\n    CBaseTransition* pRTransition,  \n    CBaseTransition* pGTransition,  \n    CBaseTransition* pBTransition);\n```  \n  \n### Parameters  \n `pRTransition`  \n Transition for Red component.  \n  \n `pGTransition`  \n Transition for Green component.  \n  \n `pBTransition`  \n Transition for Blue component.  \n  \n### Remarks  \n Call this function to add the specified transitions to the internal list of transitions to be applied to animation variables representing color components. When you add transitions, they are not applied immediately and stored in an internal list. Transitions are applied (added to a storyboard for a particular value) when you call CAnimationController::AnimateGroup. If you don't need to apply a transition to one of the color components, you can pass NULL.  \n  \n##  <a name=\"canimationcolor__canimationcolor\"></a>  CAnimationColor::CAnimationColor  \n Constructs a CAnimationColor object.  \n  \n```  \nCAnimationColor();\n\n \nCAnimationColor(\n    COLORREF color,  \n    UINT32 nGroupID,  \n    UINT32 nObjectID = (UINT32)-1,  \n    DWORD dwUserData = 0);\n```  \n  \n### Parameters  \n `color`  \n Specifies default color.  \n  \n `nGroupID`  \n Specifies Group ID.  \n  \n `nObjectID`  \n Specifies Object ID.  \n  \n `dwUserData`  \n Specifies user-defined data.  \n  \n### Remarks  \n The object is constructed with default values for red, green, blue, Object ID and Group ID, which will be set to 0. They can be changed later at runtime using SetDefaultValue and SetID.  \n  \n##  <a name=\"canimationcolor__getanimationvariablelist\"></a>  CAnimationColor::GetAnimationVariableList  \n Puts the encapsulated animation variables into a list.  \n  \n```  \nvirtual void GetAnimationVariableList(\n    CList<CAnimationVariable*, \n    CAnimationVariable*>& lst);\n```  \n  \n### Parameters  \n `lst`  \n When the function returns, it contains pointers to three CAnimationVariable objects representing red, green and blue components.  \n  \n##  <a name=\"canimationcolor__getb\"></a>  CAnimationColor::GetB  \n Provides access to CAnimationVariable representing Blue component.  \n  \n```  \nCAnimationVariable& GetB();\n```  \n  \n### Return Value  \n A reference to encapsulated CAnimationVariable representing Blue component.  \n  \n### Remarks  \n You can call this method to get direct access to underlying CAnimationVariable representing Blue component.  \n  \n##  <a name=\"canimationcolor__getdefaultvalue\"></a>  CAnimationColor::GetDefaultValue  \n Returns the default values for color components.  \n  \n```  \nCOLORREF GetDefaultValue();\n```  \n  \n### Return Value  \n A COLORREF value containing defaults for RGB components.  \n  \n### Remarks  \n Call this function to retrieve default value, which was previously set by constructor or SetDefaultValue.  \n  \n##  <a name=\"canimationcolor__getg\"></a>  CAnimationColor::GetG  \n Provides access to CAnimationVariable representing Green component.  \n  \n```  \nCAnimationVariable& GetG();\n```  \n  \n### Return Value  \n A reference to encapsulated CAnimationVariable representing Green component.  \n  \n### Remarks  \n You can call this method to get direct access to underlying CAnimationVariable representing Green component.  \n  \n##  <a name=\"canimationcolor__getr\"></a>  CAnimationColor::GetR  \n Provides access to CAnimationVariable representing Red component.  \n  \n```  \nCAnimationVariable& GetR();\n```  \n  \n### Return Value  \n A reference to encapsulated CAnimationVariable representing Red component.  \n  \n### Remarks  \n You can call this method to get direct access to underlying CAnimationVariable representing Red component.  \n  \n##  <a name=\"canimationcolor__getvalue\"></a>  CAnimationColor::GetValue  \n Returns current value.  \n  \n```  \nBOOL GetValue(COLORREF& color);\n```  \n  \n### Parameters  \n `color`  \n Output. Contains the current value when this method returns.  \n  \n### Return Value  \n TRUE, if the current value was successfully retrieved; otherwise FALSE.  \n  \n### Remarks  \n Call this function to retrieve the current value of animation color. If this method fails or underlying COM objects for color components have not been initialized, color contains default value, which was previously set in constructor or by SetDefaultValue.  \n  \n##  <a name=\"canimationcolor__m_bvalue\"></a>  CAnimationColor::m_bValue  \n The encapsulated animation variable that represents Blue component of animation color.  \n  \n```  \nCAnimationVariable m_bValue;  \n```  \n  \n##  <a name=\"canimationcolor__m_gvalue\"></a>  CAnimationColor::m_gValue  \n The encapsulated animation variable that represents Green component of animation color.  \n  \n```  \nCAnimationVariable m_gValue;  \n```  \n  \n##  <a name=\"canimationcolor__m_rvalue\"></a>  CAnimationColor::m_rValue  \n The encapsulated animation variable that represents Red component of animation color.  \n  \n```  \nCAnimationVariable m_rValue;  \n```  \n  \n##  <a name=\"canimationcolor__operator_colorref\"></a>  CAnimationColor::operator COLORREF  \n  \n```  \noperator COLORREF();\n```   \n  \n### Return Value  \n  \n##  <a name=\"canimationcolor__operator_eq\"></a>  CAnimationColor::operator=  \n Assigns color to CAnimationColor.  \n  \n```  \nvoid operator=(COLORREF color);\n```  \n  \n### Parameters  \n `color`  \n Specifies new value Animation Color.  \n  \n### Remarks  \n It's recommended to do that before animation start, because this operator calls SetDefaultValue, which recreates the underlying COM objects for color components if they have been created. If you subscribed this animation object to events (ValueChanged or IntegerValueChanged), you need to re-enable these events.  \n  \n##  <a name=\"canimationcolor__setdefaultvalue\"></a>  CAnimationColor::SetDefaultValue  \n Sets default value.  \n  \n```  \nvoid SetDefaultValue(COLORREF color);\n```  \n  \n### Parameters  \n `color`  \n Specifies new default values for red, green and blue components.  \n  \n### Remarks  \n Use this function to set a default value to animation object. This methods assigns default values to color components of animation color. It also recreates underlying COM objects if they have been created. If you subscribed this animation object to events (ValueChanged or IntegerValueChanged), you need to re-enable these events.  \n  \n## See Also  \n [Classes](../../mfc/reference/mfc-classes.md)\n"}