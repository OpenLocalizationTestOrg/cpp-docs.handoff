{"nodes":[{"pos":[12,87],"content":"strlen, wcslen, _mbslen, _mbslen_l, _mbstrlen, _mbstrlen_l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"strlen, wcslen, _mbslen, _mbslen_l, _mbstrlen, _mbstrlen_l | Microsoft Docs","pos":[0,75]}]},{"content":"strlen, wcslen, _mbslen, _mbslen_l, _mbstrlen, _mbstrlen_l","pos":[1543,1601]},{"content":"Gets the length of a string, by using the current locale or a specified locale.","pos":[1602,1681]},{"content":"More secure versions of these functions are available; see <bpt id=\"p1\">[</bpt>strnlen, strnlen_s, wcsnlen, wcsnlen_s, _mbsnlen, _mbsnlen_l, _mbstrnlen, _mbstrnlen_l<ept id=\"p1\">](../../c-runtime-library/reference/strnlen-strnlen-s.md)</ept>","pos":[1682,1885],"source":" More secure versions of these functions are available; see [strnlen, strnlen_s, wcsnlen, wcsnlen_s, _mbsnlen, _mbsnlen_l, _mbstrnlen, _mbstrnlen_l](../../c-runtime-library/reference/strnlen-strnlen-s.md)"},{"pos":[1893,2159],"content":"[!IMPORTANT]\n `_mbslen`, `_mbslen_l`, `_mbstrlen`, and `_mbstrlen_l` cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":", `_mbslen_l`, `_mbstrlen`, and `_mbstrlen_l` cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","pos":[23,264],"nodes":[{"content":", <ph id=\"ph1\">`_mbslen_l`</ph>, <ph id=\"ph2\">`_mbstrlen`</ph>, and <ph id=\"ph3\">`_mbstrlen_l`</ph> cannot be used in applications that execute in the Windows Runtime.","pos":[0,113],"source":", `_mbslen_l`, `_mbstrlen`, and `_mbstrlen_l` cannot be used in applications that execute in the Windows Runtime."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.","pos":[114,241],"source":" For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)."}]}]},{"content":"Syntax","pos":[2168,2174]},{"content":"Parameters","pos":[2539,2549]},{"content":"Null-terminated string.","pos":[2562,2585]},{"content":"Locale to use.","pos":[2604,2618]},{"content":"Return Value","pos":[2627,2639]},{"content":"Each of these functions returns the number of characters in <ph id=\"ph1\">`str`</ph>, excluding the terminal <ph id=\"ph2\">`NULL`</ph>.","pos":[2643,2740],"source":"Each of these functions returns the number of characters in `str`, excluding the terminal `NULL`."},{"content":"No return value is reserved to indicate an error, except for <ph id=\"ph1\">`_mbstrlen`</ph> and <ph id=\"ph2\">`_mbstrlen_l`</ph>, which return <ph id=\"ph3\">`((size_t)(-1))`</ph> if the string contains an invalid multibyte character.","pos":[2741,2917],"source":" No return value is reserved to indicate an error, except for `_mbstrlen` and `_mbstrlen_l`, which return `((size_t)(-1))` if the string contains an invalid multibyte character."},{"content":"Remarks","pos":[2926,2933]},{"content":"interprets the string as a single-byte character string, so its return value is always equal to the number of bytes, even if the string contains multibyte characters.","pos":[2946,3112]},{"content":"is a wide-character version of <ph id=\"ph1\">`strlen`</ph>; the argument of <ph id=\"ph2\">`wcslen`</ph> is a wide-character string and the count of characters is in wide (two-byte) characters.","pos":[3122,3276],"source":" is a wide-character version of `strlen`; the argument of `wcslen` is a wide-character string and the count of characters is in wide (two-byte) characters."},{"content":"and <ph id=\"ph1\">`strlen`</ph> behave identically otherwise.","pos":[3286,3328],"source":" and `strlen` behave identically otherwise."},{"content":"<bpt id=\"p1\">**</bpt>Security Note<ept id=\"p1\">**</ept> These functions incur a potential threat brought about by a buffer overrun problem.","pos":[3335,3436],"source":"**Security Note** These functions incur a potential threat brought about by a buffer overrun problem."},{"content":"Buffer overrun problems are a frequent method of system attack, resulting in an unwarranted elevation of privilege.","pos":[3437,3552]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Avoiding Buffer Overruns<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms717795)</ept>.","pos":[3553,3666],"source":" For more information, see [Avoiding Buffer Overruns](http://msdn.microsoft.com/library/windows/desktop/ms717795)."},{"content":"Generic-Text Routine Mappings","pos":[3676,3705]},{"content":"TCHAR.H routine","pos":[3712,3727]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[3728,3756],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[3757,3770]},{"content":"_UNICODE defined","pos":[3771,3787]},{"content":"and <ph id=\"ph1\">`_mbslen_l`</ph> return the number of multibyte characters in a multibyte-character string but they do not test for multibyte-character validity.","pos":[4044,4188],"source":" and `_mbslen_l` return the number of multibyte characters in a multibyte-character string but they do not test for multibyte-character validity."},{"content":"and <ph id=\"ph1\">`_mbstrlen_l`</ph> test for multibyte-character validity and recognize multibyte-character sequences.","pos":[4201,4301],"source":" and `_mbstrlen_l` test for multibyte-character validity and recognize multibyte-character sequences."},{"content":"If the string passed to <ph id=\"ph1\">`_mbstrlen`</ph> or <ph id=\"ph2\">`_mbstrlen_l`</ph> contains an invalid multibyte character for the code page, the function returns -1 and sets <ph id=\"ph3\">`errno`</ph> to <ph id=\"ph4\">`EILSEQ`</ph>.","pos":[4302,4467],"source":" If the string passed to `_mbstrlen` or `_mbstrlen_l` contains an invalid multibyte character for the code page, the function returns -1 and sets `errno` to `EILSEQ`."},{"content":"The output value is affected by the setting of the <ph id=\"ph1\">`LC_CTYPE`</ph> category setting of the locale; see <bpt id=\"p1\">[</bpt>setlocale<ept id=\"p1\">](../../c-runtime-library/reference/setlocale-wsetlocale.md)</ept> for more information.","pos":[4474,4664],"source":"The output value is affected by the setting of the `LC_CTYPE` category setting of the locale; see [setlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md) for more information."},{"content":"The versions of these functions without the <ph id=\"ph1\">`_l`</ph> suffix use the current locale for this locale-dependent behavior; the versions with the <ph id=\"ph2\">`_l`</ph> suffix are identical except that they use the locale parameter passed in instead.","pos":[4665,4888],"source":" The versions of these functions without the `_l` suffix use the current locale for this locale-dependent behavior; the versions with the `_l` suffix are identical except that they use the locale parameter passed in instead."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Locale<ept id=\"p1\">](../../c-runtime-library/locale.md)</ept>.","pos":[4889,4959],"source":" For more information, see [Locale](../../c-runtime-library/locale.md)."},{"content":"Requirements","pos":[4968,4980]},{"content":"Routine","pos":[4987,4994]},{"content":"Required header","pos":[4995,5010]},{"content":"string.h&gt;","pos":[5066,5075],"source":"string.h>"},{"content":"string.h&gt; or <ph id=\"ph1\">\\&lt;</ph>wchar.h&gt;","pos":[5091,5114],"source":"string.h> or \\<wchar.h>"},{"pos":[5128,5129],"content":","},{"content":"mbstring.h&gt;","pos":[5144,5155],"source":"mbstring.h>"},{"pos":[5171,5172],"content":","},{"content":"stdlib.h&gt;","pos":[5189,5198],"source":"stdlib.h>"},{"pos":[5206,5310],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":"Example","pos":[5319,5326]},{"content":".NET Framework Equivalent","pos":[7148,7173]},{"content":"System::String::Length","pos":[7178,7200]},{"content":"See Also","pos":[7278,7286]},{"content":"String Manipulation","pos":[7291,7310]},{"content":"Interpretation of Multibyte-Character Sequences","pos":[7369,7416]},{"content":"Locale","pos":[7499,7505]},{"content":"setlocale, _wsetlocale","pos":[7547,7569]},{"content":"strcat, wcscat, _mbscat","pos":[7635,7658]},{"content":"strcmp, wcscmp, _mbscmp","pos":[7724,7747]},{"content":"strcoll Functions","pos":[7813,7830]},{"content":"strcpy, wcscpy, _mbscpy","pos":[7883,7906]},{"content":"strrchr, wcsrchr, _mbsrchr, _mbsrchr_l","pos":[7972,8010]},{"content":"_strset, _strset_l, _wcsset, _wcsset_l, _mbsset, _mbsset_l","pos":[8089,8147]},{"content":"strspn, wcsspn, _mbsspn, _mbsspn_l","pos":[8240,8274]}],"content":"---\ntitle: \"strlen, wcslen, _mbslen, _mbslen_l, _mbstrlen, _mbstrlen_l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_mbslen\"\n  - \"_mbslen_l\"\n  - \"_mbstrlen\"\n  - \"wcslen\"\n  - \"_mbstrlen_l\"\n  - \"strlen\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-multibyte-l1-1-0.dll\"\n  - \"api-ms-win-crt-string-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_mbstrlen\"\n  - \"wcslen\"\n  - \"_tcslen\"\n  - \"_ftcslen\"\n  - \"strlen\"\n  - \"_mbslen\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"wcslen function\"\n  - \"string length, getting\"\n  - \"ftcslen function\"\n  - \"lengths, strings\"\n  - \"mbstrlen_l function\"\n  - \"_mbslen_l function\"\n  - \"_tcslen function\"\n  - \"mbslen_l function\"\n  - \"mbslen function\"\n  - \"_mbstrlen function\"\n  - \"strings [C++], getting length\"\n  - \"mbstrlen function\"\n  - \"_mbstrlen_l function\"\n  - \"_ftcslen function\"\n  - \"tcslen function\"\n  - \"strlen function\"\n  - \"_mbslen function\"\nms.assetid: 16462f2a-1e0f-4eb3-be55-bf1c83f374c2\ncaps.latest.revision: 32\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# strlen, wcslen, _mbslen, _mbslen_l, _mbstrlen, _mbstrlen_l\nGets the length of a string, by using the current locale or a specified locale. More secure versions of these functions are available; see [strnlen, strnlen_s, wcsnlen, wcsnlen_s, _mbsnlen, _mbsnlen_l, _mbstrnlen, _mbstrnlen_l](../../c-runtime-library/reference/strnlen-strnlen-s.md)  \n  \n> [!IMPORTANT]\n>  `_mbslen`, `_mbslen_l`, `_mbstrlen`, and `_mbstrlen_l` cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \nsize_t strlen(  \n   const char *str  \n);  \nsize_t wcslen(  \n   const wchar_t *str   \n);  \nsize_t _mbslen(  \n   const unsigned char *str   \n);  \nsize_t _mbslen_l(  \n   const unsigned char *str,  \n   _locale_t locale  \n);  \nsize_t _mbstrlen(  \n   const char *str  \n);  \nsize_t _mbstrlen_l(  \n   const char *str,  \n   _locale_t locale  \n);  \n```  \n  \n#### Parameters  \n `str`  \n Null-terminated string.  \n  \n `locale`  \n Locale to use.  \n  \n## Return Value  \n Each of these functions returns the number of characters in `str`, excluding the terminal `NULL`. No return value is reserved to indicate an error, except for `_mbstrlen` and `_mbstrlen_l`, which return `((size_t)(-1))` if the string contains an invalid multibyte character.  \n  \n## Remarks  \n `strlen` interprets the string as a single-byte character string, so its return value is always equal to the number of bytes, even if the string contains multibyte characters. `wcslen` is a wide-character version of `strlen`; the argument of `wcslen` is a wide-character string and the count of characters is in wide (two-byte) characters. `wcslen` and `strlen` behave identically otherwise.  \n  \n **Security Note** These functions incur a potential threat brought about by a buffer overrun problem. Buffer overrun problems are a frequent method of system attack, resulting in an unwarranted elevation of privilege. For more information, see [Avoiding Buffer Overruns](http://msdn.microsoft.com/library/windows/desktop/ms717795).  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_tcslen`|`strlen`|`strlen`|`wcslen`|  \n|`_tcsclen`|`strlen`|`_mbslen`|`wcslen`|  \n|`_tcsclen_l`|`strlen`|`_mbslen_l`|`wcslen`|  \n  \n `_mbslen` and `_mbslen_l` return the number of multibyte characters in a multibyte-character string but they do not test for multibyte-character validity. `_mbstrlen` and `_mbstrlen_l` test for multibyte-character validity and recognize multibyte-character sequences. If the string passed to `_mbstrlen` or `_mbstrlen_l` contains an invalid multibyte character for the code page, the function returns -1 and sets `errno` to `EILSEQ`.  \n  \n The output value is affected by the setting of the `LC_CTYPE` category setting of the locale; see [setlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md) for more information. The versions of these functions without the `_l` suffix use the current locale for this locale-dependent behavior; the versions with the `_l` suffix are identical except that they use the locale parameter passed in instead. For more information, see [Locale](../../c-runtime-library/locale.md).  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`strlen`|\\<string.h>|  \n|`wcslen`|\\<string.h> or \\<wchar.h>|  \n|`_mbslen`, `_mbslen_l`|\\<mbstring.h>|  \n|`_mbstrlen`, `_mbstrlen_l`|\\<stdlib.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```  \n// crt_strlen.c  \n// Determine the length of a string. For the multi-byte character  \n// example to work correctly, the Japanese language support for  \n// non-Unicode programs must be enabled by the operating system.  \n  \n#include <string.h>  \n#include <locale.h>  \n  \nint main()  \n{  \n   char* str1 = \"Count.\";  \n   wchar_t* wstr1 = L\"Count.\";  \n   char * mbstr1;  \n   char * locale_string;  \n  \n   // strlen gives the length of single-byte character string  \n   printf(\"Length of '%s' : %d\\n\", str1, strlen(str1) );  \n  \n   // wstrlen gives the length of a wide character string  \n   wprintf(L\"Length of '%s' : %d\\n\", wstr1, wcslen(wstr1) );  \n  \n   // A multibyte string: [A] [B] [C] [katakana A] [D] [\\0]  \n   // in Code Page 932. For this example to work correctly,  \n   // the Japanese language support must be enabled by the  \n   // operating system.  \n   mbstr1 = \"ABC\" \"\\x83\\x40\" \"D\";  \n  \n   locale_string = setlocale(LC_CTYPE, \"Japanese_Japan\");  \n  \n   if (locale_string == NULL)  \n   {  \n      printf(\"Japanese locale not enabled. Exiting.\\n\");  \n      exit(1);  \n   }  \n   else  \n   {  \n      printf(\"Locale set to %s\\n\", locale_string);  \n   }  \n  \n   // _mbslen will recognize the Japanese multibyte character if the  \n   // current locale used by the operating system is Japanese  \n   printf(\"Length of '%s' : %d\\n\", mbstr1, _mbslen(mbstr1) );  \n  \n   // _mbstrlen will recognize the Japanese multibyte character  \n   // since the CRT locale is set to Japanese even if the OS locale  \n   // isnot.   \n   printf(\"Length of '%s' : %d\\n\", mbstr1, _mbstrlen(mbstr1) );  \n   printf(\"Bytes in '%s' : %d\\n\", mbstr1, strlen(mbstr1) );     \n  \n}  \n```  \n  \n```Output  \nLength of 'Count.' : 6  \nLength of 'Count.' : 6  \nLength of 'ABCァD' : 5  \nLength of 'ABCァD' : 5  \nBytes in 'ABCァD' : 6  \n```  \n  \n## .NET Framework Equivalent  \n [System::String::Length](https://msdn.microsoft.com/en-us/library/system.string.length.aspx)  \n  \n## See Also  \n [String Manipulation](../../c-runtime-library/string-manipulation-crt.md)   \n [Interpretation of Multibyte-Character Sequences](../../c-runtime-library/interpretation-of-multibyte-character-sequences.md)   \n [Locale](../../c-runtime-library/locale.md)   \n [setlocale, _wsetlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md)   \n [strcat, wcscat, _mbscat](../../c-runtime-library/reference/strcat-wcscat-mbscat.md)   \n [strcmp, wcscmp, _mbscmp](../../c-runtime-library/reference/strcmp-wcscmp-mbscmp.md)   \n [strcoll Functions](../../c-runtime-library/strcoll-functions.md)   \n [strcpy, wcscpy, _mbscpy](../../c-runtime-library/reference/strcpy-wcscpy-mbscpy.md)   \n [strrchr, wcsrchr, _mbsrchr, _mbsrchr_l](../../c-runtime-library/reference/strrchr-wcsrchr-mbsrchr-mbsrchr-l.md)   \n [_strset, _strset_l, _wcsset, _wcsset_l, _mbsset, _mbsset_l](../../c-runtime-library/reference/strset-strset-l-wcsset-wcsset-l-mbsset-mbsset-l.md)   \n [strspn, wcsspn, _mbsspn, _mbsspn_l](../../c-runtime-library/reference/strspn-wcsspn-mbsspn-mbsspn-l.md)"}