<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">17a83043cc400b4d99cafd2e933126a60d37cbf5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\cpp\while-statement-cpp.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">081bb90e03e86aef1a552cfbd9665ea35e32c990</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6d0f8a3dc94e6ba4eb3bc0f8f6cd5b3f25be092e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>while Statement (C++) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>while Statement (C++)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Executes <bpt id="p1">*</bpt>statement<ept id="p1">*</ept> repeatedly until <bpt id="p2">*</bpt>expression<ept id="p2">*</ept> evaluates to zero.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The test of <bpt id="p1">*</bpt>expression<ept id="p1">*</ept> takes place before each execution of the loop; therefore, a <ph id="ph1">`while`</ph> loop executes zero or more times.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>expression<ept id="p1">*</ept> must be of an integral type, a pointer type, or a class type with an unambiguous conversion to an integral or pointer type.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`while`</ph> loop can also terminate when a <bpt id="p1">[</bpt>break<ept id="p1">](../cpp/break-statement-cpp.md)</ept>, <bpt id="p2">[</bpt>goto<ept id="p2">](../cpp/goto-statement-cpp.md)</ept>, or <bpt id="p3">[</bpt>return<ept id="p3">](../cpp/return-statement-cpp.md)</ept> within the statement body is executed.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>continue<ept id="p1">](../cpp/continue-statement-cpp.md)</ept> to terminate the current iteration without exiting the <ph id="ph1">`while`</ph> loop.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>continue<ept id="p1">**</ept> passes control to the next iteration of the <ph id="ph1">`while`</ph> loop.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following code uses a <ph id="ph1">`while`</ph> loop to trim trailing underscores from a string:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The termination condition is evaluated at the top of the loop.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If there are no trailing underscores, the loop never executes.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Iteration Statements</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Keywords</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>do-while Statement (C++)</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>for Statement (C++)</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Range-based for Statement (C++)</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>