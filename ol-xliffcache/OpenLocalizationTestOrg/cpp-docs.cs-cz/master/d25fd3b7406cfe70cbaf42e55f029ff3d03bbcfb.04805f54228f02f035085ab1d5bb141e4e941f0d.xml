{"nodes":[{"pos":[12,54],"content":"CMFCColorPickerCtrl Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CMFCColorPickerCtrl Class | Microsoft Docs","pos":[0,42]}]},{"pos":[631,656],"content":"CMFCColorPickerCtrl Class","linkify":"CMFCColorPickerCtrl Class","nodes":[{"content":"CMFCColorPickerCtrl Class","pos":[0,25]}]},{"pos":[657,756],"content":"The <ph id=\"ph1\">`CMFCColorPickerCtrl`</ph> class provides functionality for a control that is used to select colors.","source":"The `CMFCColorPickerCtrl` class provides functionality for a control that is used to select colors."},{"pos":[765,771],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[840,847],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[857,876],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[883,887]},{"content":"Description","pos":[888,899]},{"pos":[937,1022],"content":"<bpt id=\"p1\">[</bpt>CMFCColorPickerCtrl::CMFCColorPickerCtrl<ept id=\"p1\">](#cmfccolorpickerctrl__cmfccolorpickerctrl)</ept>","source":"[CMFCColorPickerCtrl::CMFCColorPickerCtrl](#cmfccolorpickerctrl__cmfccolorpickerctrl)"},{"pos":[1023,1065],"content":"Constructs a <ph id=\"ph1\">`CMFCColorPickerCtrl`</ph> object.","source":"Constructs a `CMFCColorPickerCtrl` object."},{"pos":[1076,1090],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1097,1101]},{"content":"Description","pos":[1102,1113]},{"pos":[1151,1214],"content":"<bpt id=\"p1\">[</bpt>CMFCColorPickerCtrl::GetColor<ept id=\"p1\">](#cmfccolorpickerctrl__getcolor)</ept>","source":"[CMFCColorPickerCtrl::GetColor](#cmfccolorpickerctrl__getcolor)"},{"content":"Retrieves the color that the user selects.","pos":[1215,1257]},{"pos":[1262,1321],"content":"<bpt id=\"p1\">[</bpt>CMFCColorPickerCtrl::GetHLS<ept id=\"p1\">](#cmfccolorpickerctrl__gethls)</ept>","source":"[CMFCColorPickerCtrl::GetHLS](#cmfccolorpickerctrl__gethls)"},{"content":"Retrieves the hue, luminance and saturation values of the color that the user selects.","pos":[1322,1408]},{"pos":[1413,1472],"content":"<bpt id=\"p1\">[</bpt>CMFCColorPickerCtrl::GetHue<ept id=\"p1\">](#cmfccolorpickerctrl__gethue)</ept>","source":"[CMFCColorPickerCtrl::GetHue](#cmfccolorpickerctrl__gethue)"},{"content":"Retrieves the hue component of the color that the user selects.","pos":[1473,1536]},{"pos":[1541,1612],"content":"<bpt id=\"p1\">[</bpt>CMFCColorPickerCtrl::GetLuminance<ept id=\"p1\">](#cmfccolorpickerctrl__getluminance)</ept>","source":"[CMFCColorPickerCtrl::GetLuminance](#cmfccolorpickerctrl__getluminance)"},{"content":"Retrieves the luminance component of the color that the user selects.","pos":[1613,1682]},{"pos":[1687,1760],"content":"<bpt id=\"p1\">[</bpt>CMFCColorPickerCtrl::GetSaturation<ept id=\"p1\">](#cmfccolorpickerctrl__getsaturation)</ept>","source":"[CMFCColorPickerCtrl::GetSaturation](#cmfccolorpickerctrl__getsaturation)"},{"content":"Retrieves the saturation component of the color that the user selects.","pos":[1761,1831]},{"pos":[1836,1917],"content":"<bpt id=\"p1\">[</bpt>CMFCColorPickerCtrl::SelectCellHexagon<ept id=\"p1\">](#cmfccolorpickerctrl__selectcellhexagon)</ept>","source":"[CMFCColorPickerCtrl::SelectCellHexagon](#cmfccolorpickerctrl__selectcellhexagon)"},{"content":"Sets the current color to the color defined by the specified RGB color components or the specified cell hexagon.","pos":[1918,2030]},{"pos":[2035,2098],"content":"<bpt id=\"p1\">[</bpt>CMFCColorPickerCtrl::SetColor<ept id=\"p1\">](#cmfccolorpickerctrl__setcolor)</ept>","source":"[CMFCColorPickerCtrl::SetColor](#cmfccolorpickerctrl__setcolor)"},{"content":"Sets the current color to the specified RGB color value.","pos":[2099,2155]},{"pos":[2160,2219],"content":"<bpt id=\"p1\">[</bpt>CMFCColorPickerCtrl::SetHLS<ept id=\"p1\">](#cmfccolorpickerctrl__sethls)</ept>","source":"[CMFCColorPickerCtrl::SetHLS](#cmfccolorpickerctrl__sethls)"},{"content":"Sets the current color to the specified HLS color value.","pos":[2220,2276]},{"pos":[2281,2340],"content":"<bpt id=\"p1\">[</bpt>CMFCColorPickerCtrl::SetHue<ept id=\"p1\">](#cmfccolorpickerctrl__sethue)</ept>","source":"[CMFCColorPickerCtrl::SetHue](#cmfccolorpickerctrl__sethue)"},{"content":"Changes the hue component of the currently selected color.","pos":[2341,2399]},{"pos":[2404,2475],"content":"<bpt id=\"p1\">[</bpt>CMFCColorPickerCtrl::SetLuminance<ept id=\"p1\">](#cmfccolorpickerctrl__setluminance)</ept>","source":"[CMFCColorPickerCtrl::SetLuminance](#cmfccolorpickerctrl__setluminance)"},{"content":"Changes the luminance component of the currently selected color.","pos":[2476,2540]},{"pos":[2545,2632],"content":"<bpt id=\"p1\">[</bpt>CMFCColorPickerCtrl::SetLuminanceBarWidth<ept id=\"p1\">](#cmfccolorpickerctrl__setluminancebarwidth)</ept>","source":"[CMFCColorPickerCtrl::SetLuminanceBarWidth](#cmfccolorpickerctrl__setluminancebarwidth)"},{"content":"Sets the width of the luminance bar in the color picker control.","pos":[2633,2697]},{"pos":[2702,2781],"content":"<bpt id=\"p1\">[</bpt>CMFCColorPickerCtrl::SetOriginalColor<ept id=\"p1\">](#cmfccolorpickerctrl__setoriginalcolor)</ept>","source":"[CMFCColorPickerCtrl::SetOriginalColor](#cmfccolorpickerctrl__setoriginalcolor)"},{"content":"Sets the initial selected color.","pos":[2782,2814]},{"pos":[2819,2886],"content":"<bpt id=\"p1\">[</bpt>CMFCColorPickerCtrl::SetPalette<ept id=\"p1\">](#cmfccolorpickerctrl__setpalette)</ept>","source":"[CMFCColorPickerCtrl::SetPalette](#cmfccolorpickerctrl__setpalette)"},{"content":"Sets the current color palette.","pos":[2887,2918]},{"pos":[2923,2996],"content":"<bpt id=\"p1\">[</bpt>CMFCColorPickerCtrl::SetSaturation<ept id=\"p1\">](#cmfccolorpickerctrl__setsaturation)</ept>","source":"[CMFCColorPickerCtrl::SetSaturation](#cmfccolorpickerctrl__setsaturation)"},{"content":"Changes the saturation component of the currently selected color.","pos":[2997,3062]},{"pos":[3067,3128],"content":"<bpt id=\"p1\">[</bpt>CMFCColorPickerCtrl::SetType<ept id=\"p1\">](#cmfccolorpickerctrl__settype)</ept>","source":"[CMFCColorPickerCtrl::SetType](#cmfccolorpickerctrl__settype)"},{"content":"Sets the type of color picker control to display.","pos":[3129,3178]},{"pos":[3189,3206],"content":"Protected Methods","linkify":"Protected Methods","nodes":[{"content":"Protected Methods","pos":[0,17]}]},{"content":"Name","pos":[3213,3217]},{"content":"Description","pos":[3218,3229]},{"pos":[3267,3334],"content":"<bpt id=\"p1\">[</bpt>CMFCColorPickerCtrl::DrawCursor<ept id=\"p1\">](#cmfccolorpickerctrl__drawcursor)</ept>","source":"[CMFCColorPickerCtrl::DrawCursor](#cmfccolorpickerctrl__drawcursor)"},{"content":"Called by the framework before a cursor that points to the selected color is displayed.","pos":[3335,3422]},{"pos":[3432,3439],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Standard colors are selected from a hexagonal color palette, and custom colors are selected from a luminance bar where colors are specified using either red/green/blue notation or hue/satuaration/luminance notation.","pos":[3443,3658]},{"pos":[3665,3738],"content":"The following illustration depicts several <ph id=\"ph1\">`CMFCColorPickerCtrl`</ph> objects.","source":"The following illustration depicts several `CMFCColorPickerCtrl` objects."},{"pos":[3745,3835],"content":"<bpt id=\"p1\">![</bpt>CMFCColorPickerCtrl dialog box<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../mfc/reference/media/colorpicker.png \"</bpt>colorpicker<ept id=\"p2\">\")</ept>","source":"![CMFCColorPickerCtrl dialog box](../../mfc/reference/media/colorpicker.png \"colorpicker\")"},{"content":"The <ph id=\"ph1\">`CMFCColorPickerCtrl`</ph> supports two pairs of styles.","pos":[3842,3897],"source":"The `CMFCColorPickerCtrl` supports two pairs of styles."},{"content":"The HEX and HEX_GREYSCALE styles are appropriate for standard color selection.","pos":[3898,3976]},{"content":"The PICKER and LUMINANCE styles are appropriate for custom color selection.","pos":[3977,4052]},{"pos":[4059,4157],"content":"Perform the following steps to incorporate the <ph id=\"ph1\">`CMFCColorPickerCtrl`</ph> control into your dialog box:","source":"Perform the following steps to incorporate the `CMFCColorPickerCtrl` control into your dialog box:"},{"pos":[4167,4337],"content":"If you use the <bpt id=\"p1\">**</bpt>ClassWizard<ept id=\"p1\">**</ept>, insert a new button control into your dialog box template (because the <ph id=\"ph1\">`CMFCColorPickerCtrl`</ph> class is inherited from the <ph id=\"ph2\">`CButton`</ph> class).","source":"If you use the **ClassWizard**, insert a new button control into your dialog box template (because the `CMFCColorPickerCtrl` class is inherited from the `CButton` class)."},{"content":"Insert a member variable that is associated with the new button control into your dialog box class.","pos":[4347,4446]},{"content":"Then change the variable type from <ph id=\"ph1\">`CButton`</ph> to <ph id=\"ph2\">`CMFCColorPickerCtrl`</ph>.","pos":[4447,4517],"source":" Then change the variable type from `CButton` to `CMFCColorPickerCtrl`."},{"content":"Insert the <ph id=\"ph1\">`WM_INITDIALOG`</ph> message handler for the dialog box class.","pos":[4527,4595],"source":"Insert the `WM_INITDIALOG` message handler for the dialog box class."},{"content":"In the handler, set the type, palette, and initial selected color of the <ph id=\"ph1\">`CMFCColorPickerCtrl`</ph> control.","pos":[4596,4699],"source":" In the handler, set the type, palette, and initial selected color of the `CMFCColorPickerCtrl` control."},{"pos":[4708,4715],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example demonstrates how to configure a <ph id=\"ph1\">`CMFCColorPickerCtrl`</ph> object by using various methods in the <ph id=\"ph2\">`CMFCColorPickerCtrl`</ph> class.","pos":[4719,4862],"source":"The following example demonstrates how to configure a `CMFCColorPickerCtrl` object by using various methods in the `CMFCColorPickerCtrl` class."},{"content":"The example demonstrates how to set the type of the picker control, and how to set its color, hue, luminance, and saturation.","pos":[4863,4988]},{"content":"The example is part of the <bpt id=\"p1\">[</bpt>New Controls sample<ept id=\"p1\">](../../visual-cpp-samples.md)</ept>.","pos":[4989,5067],"source":" The example is part of the [New Controls sample](../../visual-cpp-samples.md)."},{"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_NewControls#4<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cmfccolorpickerctrl-class_1.h)</ept><ept id=\"p1\">]</ept>","pos":[5074,5175],"source":"[!code-cpp[NVC_MFC_NewControls#4](../../mfc/reference/codesnippet/cpp/cmfccolorpickerctrl-class_1.h)]"},{"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_NewControls#5<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cmfccolorpickerctrl-class_2.cpp)</ept><ept id=\"p1\">]</ept>","pos":[5178,5281],"source":"[!code-cpp[NVC_MFC_NewControls#5](../../mfc/reference/codesnippet/cpp/cmfccolorpickerctrl-class_2.cpp)]"},{"pos":[5290,5311],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[5315,5362],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[5369,5422],"content":"<bpt id=\"p1\">[</bpt>CCmdTarget<ept id=\"p1\">](../../mfc/reference/ccmdtarget-class.md)</ept>","source":"[CCmdTarget](../../mfc/reference/ccmdtarget-class.md)"},{"pos":[5429,5470],"content":"<bpt id=\"p1\">[</bpt>CWnd<ept id=\"p1\">](../../mfc/reference/cwnd-class.md)</ept>","source":"[CWnd](../../mfc/reference/cwnd-class.md)"},{"pos":[5477,5524],"content":"<bpt id=\"p1\">[</bpt>CButton<ept id=\"p1\">](../../mfc/reference/cbutton-class.md)</ept>","source":"[CButton](../../mfc/reference/cbutton-class.md)"},{"pos":[5531,5602],"content":"<bpt id=\"p1\">[</bpt>CMFCColorPickerCtrl<ept id=\"p1\">](../../mfc/reference/cmfccolorpickerctrl-class.md)</ept>","source":"[CMFCColorPickerCtrl](../../mfc/reference/cmfccolorpickerctrl-class.md)"},{"pos":[5611,5623],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[5627,5659],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxcolorpickerctrl.h","source":"**Header:** afxcolorpickerctrl.h"},{"pos":[5669,5766],"content":"<bpt id=\"p1\">&lt;a name=\"cmfccolorpickerctrl__cmfccolorpickerctrl\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCColorPickerCtrl::CMFCColorPickerCtrl","linkify":"<a name=\"cmfccolorpickerctrl__cmfccolorpickerctrl\"></a>  CMFCColorPickerCtrl::CMFCColorPickerCtrl","source":"<a name=\"cmfccolorpickerctrl__cmfccolorpickerctrl\"></a>  CMFCColorPickerCtrl::CMFCColorPickerCtrl"},{"pos":[5770,5812],"content":"Constructs a <ph id=\"ph1\">`CMFCColorPickerCtrl`</ph> object.","source":"Constructs a `CMFCColorPickerCtrl` object."},{"pos":[5860,5872],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[5882,5889],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5899,5978],"content":"<bpt id=\"p1\">&lt;a name=\"cmfccolorpickerctrl__drawcursor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCColorPickerCtrl::DrawCursor","linkify":"<a name=\"cmfccolorpickerctrl__drawcursor\"></a>  CMFCColorPickerCtrl::DrawCursor","source":"<a name=\"cmfccolorpickerctrl__drawcursor\"></a>  CMFCColorPickerCtrl::DrawCursor"},{"content":"Called by the framework before a cursor that points to the selected color is displayed.","pos":[5982,6069]},{"pos":[6159,6169],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pDC`</ph>","pos":[6173,6183],"source":"[in] `pDC`"},{"content":"Pointer to a device context.","pos":[6187,6215]},{"content":"[in] <ph id=\"ph1\">`rect`</ph>","pos":[6222,6233],"source":"[in] `rect`"},{"content":"Specifies a rectangular area around the selected color.","pos":[6237,6292]},{"pos":[6302,6309],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this method when you need to change the shape of the cursor that points to the selected color.","pos":[6313,6416]},{"pos":[6426,6501],"content":"<bpt id=\"p1\">&lt;a name=\"cmfccolorpickerctrl__getcolor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCColorPickerCtrl::GetColor","linkify":"<a name=\"cmfccolorpickerctrl__getcolor\"></a>  CMFCColorPickerCtrl::GetColor","source":"<a name=\"cmfccolorpickerctrl__getcolor\"></a>  CMFCColorPickerCtrl::GetColor"},{"content":"Retrieves the color that the user selects.","pos":[6505,6547]},{"pos":[6602,6614],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The RGB value of the selected color.","pos":[6618,6654]},{"pos":[6664,6671],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[6681,6752],"content":"<bpt id=\"p1\">&lt;a name=\"cmfccolorpickerctrl__gethls\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCColorPickerCtrl::GetHLS","linkify":"<a name=\"cmfccolorpickerctrl__gethls\"></a>  CMFCColorPickerCtrl::GetHLS","source":"<a name=\"cmfccolorpickerctrl__gethls\"></a>  CMFCColorPickerCtrl::GetHLS"},{"content":"Retrieves the hue, luminance and saturation values of the color that the user selects.","pos":[6756,6842]},{"pos":[6949,6959],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[out] <ph id=\"ph1\">`hue`</ph>","pos":[6963,6974],"source":"[out] `hue`"},{"content":"Pointer to a variable of type double that receives hue information.","pos":[6978,7045]},{"content":"[out] <ph id=\"ph1\">`luminance`</ph>","pos":[7052,7069],"source":"[out] `luminance`"},{"content":"Pointer to a variable of type double that receives luminance information.","pos":[7073,7146]},{"content":"[out] <ph id=\"ph1\">`saturation`</ph>","pos":[7153,7171],"source":"[out] `saturation`"},{"content":"Pointer to a variable of type double that receives saturation information.","pos":[7175,7249]},{"pos":[7259,7266],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7276,7347],"content":"<bpt id=\"p1\">&lt;a name=\"cmfccolorpickerctrl__gethue\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCColorPickerCtrl::GetHue","linkify":"<a name=\"cmfccolorpickerctrl__gethue\"></a>  CMFCColorPickerCtrl::GetHue","source":"<a name=\"cmfccolorpickerctrl__gethue\"></a>  CMFCColorPickerCtrl::GetHue"},{"content":"Retrieves the hue component of the color that the user selects.","pos":[7351,7414]},{"pos":[7465,7477],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The hue component of the selected color.","pos":[7481,7521]},{"pos":[7531,7538],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7548,7631],"content":"<bpt id=\"p1\">&lt;a name=\"cmfccolorpickerctrl__getluminance\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCColorPickerCtrl::GetLuminance","linkify":"<a name=\"cmfccolorpickerctrl__getluminance\"></a>  CMFCColorPickerCtrl::GetLuminance","source":"<a name=\"cmfccolorpickerctrl__getluminance\"></a>  CMFCColorPickerCtrl::GetLuminance"},{"content":"Retrieves the luminance component of the color that the user selects.","pos":[7635,7704]},{"pos":[7761,7773],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The luminance component of the selected color.","pos":[7777,7823]},{"pos":[7833,7840],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7850,7935],"content":"<bpt id=\"p1\">&lt;a name=\"cmfccolorpickerctrl__getsaturation\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCColorPickerCtrl::GetSaturation","linkify":"<a name=\"cmfccolorpickerctrl__getsaturation\"></a>  CMFCColorPickerCtrl::GetSaturation","source":"<a name=\"cmfccolorpickerctrl__getsaturation\"></a>  CMFCColorPickerCtrl::GetSaturation"},{"content":"Retrieves the saturation value of the color that the user selects.","pos":[7939,8005]},{"pos":[8063,8075],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The saturation component of the selected color.","pos":[8079,8126]},{"pos":[8136,8143],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[8153,8246],"content":"<bpt id=\"p1\">&lt;a name=\"cmfccolorpickerctrl__selectcellhexagon\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCColorPickerCtrl::SelectCellHexagon","linkify":"<a name=\"cmfccolorpickerctrl__selectcellhexagon\"></a>  CMFCColorPickerCtrl::SelectCellHexagon","source":"<a name=\"cmfccolorpickerctrl__selectcellhexagon\"></a>  CMFCColorPickerCtrl::SelectCellHexagon"},{"content":"Sets the current color to the color defined by the specified RGB color components or the specified cell hexagon.","pos":[8250,8362]},{"pos":[8504,8514],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`R`</ph>","pos":[8518,8526],"source":"[in] `R`"},{"content":"The red color component.","pos":[8530,8554]},{"content":"[in] <ph id=\"ph1\">`G`</ph>","pos":[8561,8569],"source":"[in] `G`"},{"content":"The green color component.","pos":[8573,8599]},{"content":"[in] <ph id=\"ph1\">`B`</ph>","pos":[8606,8614],"source":"[in] `B`"},{"content":"The blue color component.","pos":[8618,8643]},{"content":"[in] <ph id=\"ph1\">`x`</ph>","pos":[8650,8658],"source":"[in] `x`"},{"content":"The x-coordinate of the cursor, which points to a cell hexagon.","pos":[8662,8725]},{"content":"[in] <ph id=\"ph1\">`y`</ph>","pos":[8732,8740],"source":"[in] `y`"},{"content":"The y-coordinate of the cursor, which points to a cell hexagon.","pos":[8744,8807]},{"pos":[8817,8829],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[8833,8891],"content":"The second overload of this method always returns <ph id=\"ph1\">`FALSE`</ph>.","source":"The second overload of this method always returns `FALSE`."},{"pos":[8901,8908],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The first overload of this method sets the current color to the color that corresponds to the color selection control's specified red, green, and blue color components.","pos":[8912,9080]},{"content":"The second overload of this method sets the current color to the color of the cell hexagon that is pointed to by the specified cursor location.","pos":[9087,9230]},{"pos":[9240,9315],"content":"<bpt id=\"p1\">&lt;a name=\"cmfccolorpickerctrl__setcolor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCColorPickerCtrl::SetColor","linkify":"<a name=\"cmfccolorpickerctrl__setcolor\"></a>  CMFCColorPickerCtrl::SetColor","source":"<a name=\"cmfccolorpickerctrl__setcolor\"></a>  CMFCColorPickerCtrl::SetColor"},{"content":"Sets the current color to the specified RGB color value.","pos":[9319,9375]},{"pos":[9431,9441],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`Color`</ph>","pos":[9445,9457],"source":"[in] `Color`"},{"content":"An RGB color value.","pos":[9461,9480]},{"pos":[9490,9497],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9507,9578],"content":"<bpt id=\"p1\">&lt;a name=\"cmfccolorpickerctrl__sethls\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCColorPickerCtrl::SetHLS","linkify":"<a name=\"cmfccolorpickerctrl__sethls\"></a>  CMFCColorPickerCtrl::SetHLS","source":"<a name=\"cmfccolorpickerctrl__sethls\"></a>  CMFCColorPickerCtrl::SetHLS"},{"content":"Sets the current color to the specified HLS color value.","pos":[9582,9638]},{"pos":[9771,9781],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`hue`</ph>","pos":[9785,9795],"source":"[in] `hue`"},{"content":"A hue value.","pos":[9799,9811]},{"content":"[in] <ph id=\"ph1\">`luminance`</ph>","pos":[9818,9834],"source":"[in] `luminance`"},{"content":"A luminance value.","pos":[9838,9856]},{"content":"[in] <ph id=\"ph1\">`saturation`</ph>","pos":[9863,9880],"source":"[in] `saturation`"},{"content":"A saturation value.","pos":[9884,9903]},{"content":"[in] <ph id=\"ph1\">`bInvalidate`</ph>","pos":[9910,9928],"source":"[in] `bInvalidate`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to force the window to immediately update to the new color; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","pos":[9931,10018],"source":" `TRUE` to force the window to immediately update to the new color; otherwise, `FALSE`."},{"content":"The default is <ph id=\"ph1\">`TRUE`</ph>.","pos":[10019,10041],"source":" The default is `TRUE`."},{"pos":[10051,10058],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10068,10139],"content":"<bpt id=\"p1\">&lt;a name=\"cmfccolorpickerctrl__sethue\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCColorPickerCtrl::SetHue","linkify":"<a name=\"cmfccolorpickerctrl__sethue\"></a>  CMFCColorPickerCtrl::SetHue","source":"<a name=\"cmfccolorpickerctrl__sethue\"></a>  CMFCColorPickerCtrl::SetHue"},{"content":"Changes the hue of the currently selected color.","pos":[10143,10191]},{"pos":[10241,10251],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`Hue`</ph>","pos":[10255,10265],"source":"[in] `Hue`"},{"content":"A hue value.","pos":[10269,10281]},{"pos":[10291,10298],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10308,10391],"content":"<bpt id=\"p1\">&lt;a name=\"cmfccolorpickerctrl__setluminance\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCColorPickerCtrl::SetLuminance","linkify":"<a name=\"cmfccolorpickerctrl__setluminance\"></a>  CMFCColorPickerCtrl::SetLuminance","source":"<a name=\"cmfccolorpickerctrl__setluminance\"></a>  CMFCColorPickerCtrl::SetLuminance"},{"content":"Changes the luminance of the currently selected color.","pos":[10395,10449]},{"pos":[10511,10521],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`Luminance`</ph>","pos":[10525,10541],"source":"[in] `Luminance`"},{"content":"A luminance value.","pos":[10545,10563]},{"pos":[10573,10580],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10590,10689],"content":"<bpt id=\"p1\">&lt;a name=\"cmfccolorpickerctrl__setluminancebarwidth\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCColorPickerCtrl::SetLuminanceBarWidth","linkify":"<a name=\"cmfccolorpickerctrl__setluminancebarwidth\"></a>  CMFCColorPickerCtrl::SetLuminanceBarWidth","source":"<a name=\"cmfccolorpickerctrl__setluminancebarwidth\"></a>  CMFCColorPickerCtrl::SetLuminanceBarWidth"},{"content":"Sets the width of the luminance bar in the color picker control.","pos":[10693,10757]},{"pos":[10816,10826],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`w`</ph>","pos":[10830,10838],"source":"[in] `w`"},{"content":"The width of the luminance bar measured in pixels.","pos":[10842,10892]},{"pos":[10902,10909],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use this method to resize the luminance bar, which is on the <bpt id=\"p1\">**</bpt>Custom<ept id=\"p1\">**</ept> tab of the color picker control.","pos":[10913,11017],"source":"Use this method to resize the luminance bar, which is on the **Custom** tab of the color picker control."},{"content":"The <ph id=\"ph1\">`w`</ph> parameter specifies the new width of the luminance bar.","pos":[11018,11081],"source":" The `w` parameter specifies the new width of the luminance bar."},{"content":"The width value is ignored if it exceeds three-fourths of the client area width.","pos":[11082,11162]},{"pos":[11172,11263],"content":"<bpt id=\"p1\">&lt;a name=\"cmfccolorpickerctrl__setoriginalcolor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCColorPickerCtrl::SetOriginalColor","linkify":"<a name=\"cmfccolorpickerctrl__setoriginalcolor\"></a>  CMFCColorPickerCtrl::SetOriginalColor","source":"<a name=\"cmfccolorpickerctrl__setoriginalcolor\"></a>  CMFCColorPickerCtrl::SetOriginalColor"},{"content":"Sets the initial selected color.","pos":[11267,11299]},{"pos":[11361,11371],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`ref`</ph>","pos":[11375,11385],"source":"[in] `ref`"},{"content":"An RGB color value.","pos":[11389,11408]},{"pos":[11418,11425],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Call this method when the color picker control is initialized.","pos":[11429,11491]},{"pos":[11501,11580],"content":"<bpt id=\"p1\">&lt;a name=\"cmfccolorpickerctrl__setpalette\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCColorPickerCtrl::SetPalette","linkify":"<a name=\"cmfccolorpickerctrl__setpalette\"></a>  CMFCColorPickerCtrl::SetPalette","source":"<a name=\"cmfccolorpickerctrl__setpalette\"></a>  CMFCColorPickerCtrl::SetPalette"},{"content":"Sets the current color palette.","pos":[11584,11615]},{"pos":[11677,11687],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pPalette`</ph>","pos":[11691,11706],"source":"[in] `pPalette`"},{"content":"Pointer to a color palette.","pos":[11710,11737]},{"pos":[11747,11754],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The color palette defines the array of colors that is presented in the color picker control.","pos":[11758,11850]},{"pos":[11860,11945],"content":"<bpt id=\"p1\">&lt;a name=\"cmfccolorpickerctrl__setsaturation\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCColorPickerCtrl::SetSaturation","linkify":"<a name=\"cmfccolorpickerctrl__setsaturation\"></a>  CMFCColorPickerCtrl::SetSaturation","source":"<a name=\"cmfccolorpickerctrl__setsaturation\"></a>  CMFCColorPickerCtrl::SetSaturation"},{"content":"Changes the saturation of the currently selected color.","pos":[11949,12004]},{"pos":[12068,12078],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`Saturation`</ph>","pos":[12082,12099],"source":"[in] `Saturation`"},{"content":"A saturation value.","pos":[12103,12122]},{"pos":[12132,12139],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12149,12222],"content":"<bpt id=\"p1\">&lt;a name=\"cmfccolorpickerctrl__settype\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCColorPickerCtrl::SetType","linkify":"<a name=\"cmfccolorpickerctrl__settype\"></a>  CMFCColorPickerCtrl::SetType","source":"<a name=\"cmfccolorpickerctrl__settype\"></a>  CMFCColorPickerCtrl::SetType"},{"content":"Sets the type of color picker control to display.","pos":[12226,12275]},{"pos":[12335,12345],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`colorType`</ph>","pos":[12349,12365],"source":"[in] `colorType`"},{"content":"A color picker control type.","pos":[12369,12397]},{"content":"The types are defined by the <ph id=\"ph1\">`CMFCColorPickerCtrl::COLORTYPE`</ph> enumeration.","pos":[12404,12478],"source":"The types are defined by the `CMFCColorPickerCtrl::COLORTYPE` enumeration."},{"content":"The possible types are <ph id=\"ph1\">`LUMINANCE`</ph>, <ph id=\"ph2\">`PICKER`</ph>, <ph id=\"ph3\">`HEX`</ph> and <ph id=\"ph4\">`HEX_GREYSCALE`</ph>.","pos":[12479,12551],"source":" The possible types are `LUMINANCE`, `PICKER`, `HEX` and `HEX_GREYSCALE`."},{"content":"The default type is <ph id=\"ph1\">`PICKER`</ph>.","pos":[12552,12581],"source":" The default type is `PICKER`."},{"pos":[12591,12598],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"To specify a color picker control type, call this method before the Windows control is created.","pos":[12602,12697]},{"pos":[12706,12714],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[12718,12766],"source":"[Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Classes<ept id=\"p1\">](../../mfc/reference/mfc-classes.md)</ept><ph id=\"ph1\"> </ph>","pos":[12769,12816],"source":" [Classes](../../mfc/reference/mfc-classes.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CMFCColorDialog Class<ept id=\"p1\">](../../mfc/reference/cmfccolordialog-class.md)</ept>","pos":[12819,12889],"source":" [CMFCColorDialog Class](../../mfc/reference/cmfccolordialog-class.md)"}],"content":"---\ntitle: \"CMFCColorPickerCtrl Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CMFCColorPickerCtrl\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CMFCColorPickerCtrl class\"\nms.assetid: b9bbd03c-beb0-4b55-9765-9985fd05e5dc\ncaps.latest.revision: 33\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CMFCColorPickerCtrl Class\nThe `CMFCColorPickerCtrl` class provides functionality for a control that is used to select colors.  \n  \n## Syntax  \n  \n```  \nclass CMFCColorPickerCtrl : public CButton  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCColorPickerCtrl::CMFCColorPickerCtrl](#cmfccolorpickerctrl__cmfccolorpickerctrl)|Constructs a `CMFCColorPickerCtrl` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCColorPickerCtrl::GetColor](#cmfccolorpickerctrl__getcolor)|Retrieves the color that the user selects.|  \n|[CMFCColorPickerCtrl::GetHLS](#cmfccolorpickerctrl__gethls)|Retrieves the hue, luminance and saturation values of the color that the user selects.|  \n|[CMFCColorPickerCtrl::GetHue](#cmfccolorpickerctrl__gethue)|Retrieves the hue component of the color that the user selects.|  \n|[CMFCColorPickerCtrl::GetLuminance](#cmfccolorpickerctrl__getluminance)|Retrieves the luminance component of the color that the user selects.|  \n|[CMFCColorPickerCtrl::GetSaturation](#cmfccolorpickerctrl__getsaturation)|Retrieves the saturation component of the color that the user selects.|  \n|[CMFCColorPickerCtrl::SelectCellHexagon](#cmfccolorpickerctrl__selectcellhexagon)|Sets the current color to the color defined by the specified RGB color components or the specified cell hexagon.|  \n|[CMFCColorPickerCtrl::SetColor](#cmfccolorpickerctrl__setcolor)|Sets the current color to the specified RGB color value.|  \n|[CMFCColorPickerCtrl::SetHLS](#cmfccolorpickerctrl__sethls)|Sets the current color to the specified HLS color value.|  \n|[CMFCColorPickerCtrl::SetHue](#cmfccolorpickerctrl__sethue)|Changes the hue component of the currently selected color.|  \n|[CMFCColorPickerCtrl::SetLuminance](#cmfccolorpickerctrl__setluminance)|Changes the luminance component of the currently selected color.|  \n|[CMFCColorPickerCtrl::SetLuminanceBarWidth](#cmfccolorpickerctrl__setluminancebarwidth)|Sets the width of the luminance bar in the color picker control.|  \n|[CMFCColorPickerCtrl::SetOriginalColor](#cmfccolorpickerctrl__setoriginalcolor)|Sets the initial selected color.|  \n|[CMFCColorPickerCtrl::SetPalette](#cmfccolorpickerctrl__setpalette)|Sets the current color palette.|  \n|[CMFCColorPickerCtrl::SetSaturation](#cmfccolorpickerctrl__setsaturation)|Changes the saturation component of the currently selected color.|  \n|[CMFCColorPickerCtrl::SetType](#cmfccolorpickerctrl__settype)|Sets the type of color picker control to display.|  \n  \n### Protected Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCColorPickerCtrl::DrawCursor](#cmfccolorpickerctrl__drawcursor)|Called by the framework before a cursor that points to the selected color is displayed.|  \n  \n## Remarks  \n Standard colors are selected from a hexagonal color palette, and custom colors are selected from a luminance bar where colors are specified using either red/green/blue notation or hue/satuaration/luminance notation.  \n  \n The following illustration depicts several `CMFCColorPickerCtrl` objects.  \n  \n ![CMFCColorPickerCtrl dialog box](../../mfc/reference/media/colorpicker.png \"colorpicker\")  \n  \n The `CMFCColorPickerCtrl` supports two pairs of styles. The HEX and HEX_GREYSCALE styles are appropriate for standard color selection. The PICKER and LUMINANCE styles are appropriate for custom color selection.  \n  \n Perform the following steps to incorporate the `CMFCColorPickerCtrl` control into your dialog box:  \n  \n1.  If you use the **ClassWizard**, insert a new button control into your dialog box template (because the `CMFCColorPickerCtrl` class is inherited from the `CButton` class).  \n  \n2.  Insert a member variable that is associated with the new button control into your dialog box class. Then change the variable type from `CButton` to `CMFCColorPickerCtrl`.  \n  \n3.  Insert the `WM_INITDIALOG` message handler for the dialog box class. In the handler, set the type, palette, and initial selected color of the `CMFCColorPickerCtrl` control.  \n  \n## Example  \n The following example demonstrates how to configure a `CMFCColorPickerCtrl` object by using various methods in the `CMFCColorPickerCtrl` class. The example demonstrates how to set the type of the picker control, and how to set its color, hue, luminance, and saturation. The example is part of the [New Controls sample](../../visual-cpp-samples.md).  \n  \n [!code-cpp[NVC_MFC_NewControls#4](../../mfc/reference/codesnippet/cpp/cmfccolorpickerctrl-class_1.h)]  \n[!code-cpp[NVC_MFC_NewControls#5](../../mfc/reference/codesnippet/cpp/cmfccolorpickerctrl-class_2.cpp)]  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n [CButton](../../mfc/reference/cbutton-class.md)  \n  \n [CMFCColorPickerCtrl](../../mfc/reference/cmfccolorpickerctrl-class.md)  \n  \n## Requirements  \n **Header:** afxcolorpickerctrl.h  \n  \n##  <a name=\"cmfccolorpickerctrl__cmfccolorpickerctrl\"></a>  CMFCColorPickerCtrl::CMFCColorPickerCtrl  \n Constructs a `CMFCColorPickerCtrl` object.  \n  \n```  \nCMFCColorPickerCtrl();\n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfccolorpickerctrl__drawcursor\"></a>  CMFCColorPickerCtrl::DrawCursor  \n Called by the framework before a cursor that points to the selected color is displayed.  \n  \n```  \nvirtual void DrawCursor(\n    CDC* pDC,  \n    const CRect& rect);\n```  \n  \n### Parameters  \n [in] `pDC`  \n Pointer to a device context.  \n  \n [in] `rect`  \n Specifies a rectangular area around the selected color.  \n  \n### Remarks  \n Override this method when you need to change the shape of the cursor that points to the selected color.  \n  \n##  <a name=\"cmfccolorpickerctrl__getcolor\"></a>  CMFCColorPickerCtrl::GetColor  \n Retrieves the color that the user selects.  \n  \n```  \nCOLORREF GetColor() const;\n\n \n```  \n  \n### Return Value  \n The RGB value of the selected color.  \n  \n### Remarks  \n  \n##  <a name=\"cmfccolorpickerctrl__gethls\"></a>  CMFCColorPickerCtrl::GetHLS  \n Retrieves the hue, luminance and saturation values of the color that the user selects.  \n  \n```  \nvoid GetHLS(\n    double* hue,  \n    double* luminance,  \n    double* saturation);\n```  \n  \n### Parameters  \n [out] `hue`  \n Pointer to a variable of type double that receives hue information.  \n  \n [out] `luminance`  \n Pointer to a variable of type double that receives luminance information.  \n  \n [out] `saturation`  \n Pointer to a variable of type double that receives saturation information.  \n  \n### Remarks  \n  \n##  <a name=\"cmfccolorpickerctrl__gethue\"></a>  CMFCColorPickerCtrl::GetHue  \n Retrieves the hue component of the color that the user selects.  \n  \n```  \ndouble GetHue() const;\n\n \n```  \n  \n### Return Value  \n The hue component of the selected color.  \n  \n### Remarks  \n  \n##  <a name=\"cmfccolorpickerctrl__getluminance\"></a>  CMFCColorPickerCtrl::GetLuminance  \n Retrieves the luminance component of the color that the user selects.  \n  \n```  \ndouble GetLuminance() const;\n\n \n```  \n  \n### Return Value  \n The luminance component of the selected color.  \n  \n### Remarks  \n  \n##  <a name=\"cmfccolorpickerctrl__getsaturation\"></a>  CMFCColorPickerCtrl::GetSaturation  \n Retrieves the saturation value of the color that the user selects.  \n  \n```  \ndouble GetSaturation() const;\n\n \n```  \n  \n### Return Value  \n The saturation component of the selected color.  \n  \n### Remarks  \n  \n##  <a name=\"cmfccolorpickerctrl__selectcellhexagon\"></a>  CMFCColorPickerCtrl::SelectCellHexagon  \n Sets the current color to the color defined by the specified RGB color components or the specified cell hexagon.  \n  \n```  \nvoid SelectCellHexagon(\n    BYTE R,  \n    BYTE G,  \n    BYTE B);\n\n \nBOOL SelectCellHexagon(\n    int x,  \n    int y);\n```  \n  \n### Parameters  \n [in] `R`  \n The red color component.  \n  \n [in] `G`  \n The green color component.  \n  \n [in] `B`  \n The blue color component.  \n  \n [in] `x`  \n The x-coordinate of the cursor, which points to a cell hexagon.  \n  \n [in] `y`  \n The y-coordinate of the cursor, which points to a cell hexagon.  \n  \n### Return Value  \n The second overload of this method always returns `FALSE`.  \n  \n### Remarks  \n The first overload of this method sets the current color to the color that corresponds to the color selection control's specified red, green, and blue color components.  \n  \n The second overload of this method sets the current color to the color of the cell hexagon that is pointed to by the specified cursor location.  \n  \n##  <a name=\"cmfccolorpickerctrl__setcolor\"></a>  CMFCColorPickerCtrl::SetColor  \n Sets the current color to the specified RGB color value.  \n  \n```  \nvoid SetColor(COLORREF Color);\n```  \n  \n### Parameters  \n [in] `Color`  \n An RGB color value.  \n  \n### Remarks  \n  \n##  <a name=\"cmfccolorpickerctrl__sethls\"></a>  CMFCColorPickerCtrl::SetHLS  \n Sets the current color to the specified HLS color value.  \n  \n```  \nvoid SetHLS(\n    double hue,  \n    double luminance,  \n    double saturation,  \n    BOOL bInvalidate=TRUE);\n```  \n  \n### Parameters  \n [in] `hue`  \n A hue value.  \n  \n [in] `luminance`  \n A luminance value.  \n  \n [in] `saturation`  \n A saturation value.  \n  \n [in] `bInvalidate`  \n `TRUE` to force the window to immediately update to the new color; otherwise, `FALSE`. The default is `TRUE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfccolorpickerctrl__sethue\"></a>  CMFCColorPickerCtrl::SetHue  \n Changes the hue of the currently selected color.  \n  \n```  \nvoid SetHue(double Hue);\n```  \n  \n### Parameters  \n [in] `Hue`  \n A hue value.  \n  \n### Remarks  \n  \n##  <a name=\"cmfccolorpickerctrl__setluminance\"></a>  CMFCColorPickerCtrl::SetLuminance  \n Changes the luminance of the currently selected color.  \n  \n```  \nvoid SetLuminance(double Luminance);\n```  \n  \n### Parameters  \n [in] `Luminance`  \n A luminance value.  \n  \n### Remarks  \n  \n##  <a name=\"cmfccolorpickerctrl__setluminancebarwidth\"></a>  CMFCColorPickerCtrl::SetLuminanceBarWidth  \n Sets the width of the luminance bar in the color picker control.  \n  \n```  \nvoid SetLuminanceBarWidth(int w);\n```  \n  \n### Parameters  \n [in] `w`  \n The width of the luminance bar measured in pixels.  \n  \n### Remarks  \n Use this method to resize the luminance bar, which is on the **Custom** tab of the color picker control. The `w` parameter specifies the new width of the luminance bar. The width value is ignored if it exceeds three-fourths of the client area width.  \n  \n##  <a name=\"cmfccolorpickerctrl__setoriginalcolor\"></a>  CMFCColorPickerCtrl::SetOriginalColor  \n Sets the initial selected color.  \n  \n```  \nvoid SetOriginalColor(COLORREF ref);\n```  \n  \n### Parameters  \n [in] `ref`  \n An RGB color value.  \n  \n### Remarks  \n Call this method when the color picker control is initialized.  \n  \n##  <a name=\"cmfccolorpickerctrl__setpalette\"></a>  CMFCColorPickerCtrl::SetPalette  \n Sets the current color palette.  \n  \n```  \nvoid SetPalette(CPalette* pPalette);\n```  \n  \n### Parameters  \n [in] `pPalette`  \n Pointer to a color palette.  \n  \n### Remarks  \n The color palette defines the array of colors that is presented in the color picker control.  \n  \n##  <a name=\"cmfccolorpickerctrl__setsaturation\"></a>  CMFCColorPickerCtrl::SetSaturation  \n Changes the saturation of the currently selected color.  \n  \n```  \nvoid SetSaturation(double Saturation);\n```  \n  \n### Parameters  \n [in] `Saturation`  \n A saturation value.  \n  \n### Remarks  \n  \n##  <a name=\"cmfccolorpickerctrl__settype\"></a>  CMFCColorPickerCtrl::SetType  \n Sets the type of color picker control to display.  \n  \n```  \nvoid SetType(COLORTYPE colorType);\n```  \n  \n### Parameters  \n [in] `colorType`  \n A color picker control type.  \n  \n The types are defined by the `CMFCColorPickerCtrl::COLORTYPE` enumeration. The possible types are `LUMINANCE`, `PICKER`, `HEX` and `HEX_GREYSCALE`. The default type is `PICKER`.  \n  \n### Remarks  \n To specify a color picker control type, call this method before the Windows control is created.  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)   \n [CMFCColorDialog Class](../../mfc/reference/cmfccolordialog-class.md)\n"}