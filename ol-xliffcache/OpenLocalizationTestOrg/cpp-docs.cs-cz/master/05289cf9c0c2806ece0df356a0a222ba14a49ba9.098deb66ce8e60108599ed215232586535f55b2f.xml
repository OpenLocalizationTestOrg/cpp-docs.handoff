{"nodes":[{"pos":[12,49],"content":"CPaneContainer Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CPaneContainer Class | Microsoft Docs","pos":[0,37]}]},{"pos":[616,636],"content":"CPaneContainer Class","linkify":"CPaneContainer Class","nodes":[{"content":"CPaneContainer Class","pos":[0,20]}]},{"content":"The <ph id=\"ph1\">`CPaneContainer`</ph> class is a basic component of the docking model implemented by MFC.","pos":[637,725],"source":"The `CPaneContainer` class is a basic component of the docking model implemented by MFC."},{"content":"An object of this class stores pointers to two docking panes or to two instances of <ph id=\"ph1\">`CPaneContainer.`</ph> It also stores a pointer to the divider that separates the panes (or the containers).","pos":[726,913],"source":" An object of this class stores pointers to two docking panes or to two instances of `CPaneContainer.` It also stores a pointer to the divider that separates the panes (or the containers)."},{"content":"By nesting containers inside containers, the framework can build a binary tree that represents complex docking layouts.","pos":[914,1033]},{"content":"The root of the binary tree is stored in a <bpt id=\"p1\">[</bpt>CPaneContainerManager<ept id=\"p1\">](../../mfc/reference/cpanecontainermanager-class.md)</ept> object.","pos":[1034,1160],"source":" The root of the binary tree is stored in a [CPaneContainerManager](../../mfc/reference/cpanecontainermanager-class.md) object."},{"pos":[1169,1175],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1241,1248],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[1258,1277],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[1284,1288]},{"content":"Description","pos":[1289,1300]},{"pos":[1338,1403],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::CPaneContainer<ept id=\"p1\">](#cpanecontainer__cpanecontainer)</ept>","source":"[CPaneContainer::CPaneContainer](#cpanecontainer__cpanecontainer)"},{"content":"Default constructor.","pos":[1404,1424]},{"pos":[1435,1449],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1456,1460]},{"content":"Description","pos":[1461,1472]},{"pos":[1510,1561],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::AddPane<ept id=\"p1\">](#cpanecontainer__addpane)</ept>","source":"[CPaneContainer::AddPane](#cpanecontainer__addpane)"},{"pos":[1567,1616],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::AddRef<ept id=\"p1\">](#cpanecontainer__addref)</ept>","source":"[CPaneContainer::AddRef](#cpanecontainer__addref)"},{"pos":[1622,1697],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::AddSubPaneContainer<ept id=\"p1\">](#cpanecontainer__addsubpanecontainer)</ept>","source":"[CPaneContainer::AddSubPaneContainer](#cpanecontainer__addsubpanecontainer)"},{"pos":[1703,1784],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::CalcAvailablePaneSpace<ept id=\"p1\">](#cpanecontainer__calcavailablepanespace)</ept>","source":"[CPaneContainer::CalcAvailablePaneSpace](#cpanecontainer__calcavailablepanespace)"},{"pos":[1790,1863],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::CalcAvailableSpace<ept id=\"p1\">](#cpanecontainer__calcavailablespace)</ept>","source":"[CPaneContainer::CalcAvailableSpace](#cpanecontainer__calcavailablespace)"},{"pos":[1869,1944],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::CalculateRecentSize<ept id=\"p1\">](#cpanecontainer__calculaterecentsize)</ept>","source":"[CPaneContainer::CalculateRecentSize](#cpanecontainer__calculaterecentsize)"},{"pos":[1950,2039],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::CheckPaneDividerVisibility<ept id=\"p1\">](#cpanecontainer__checkpanedividervisibility)</ept>","source":"[CPaneContainer::CheckPaneDividerVisibility](#cpanecontainer__checkpanedividervisibility)"},{"pos":[2045,2090],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::Copy<ept id=\"p1\">](#cpanecontainer__copy)</ept>","source":"[CPaneContainer::Copy](#cpanecontainer__copy)"},{"pos":[2096,2153],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::DeletePane<ept id=\"p1\">](#cpanecontainer__deletepane)</ept>","source":"[CPaneContainer::DeletePane](#cpanecontainer__deletepane)"},{"pos":[2159,2236],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::FindSubPaneContainer<ept id=\"p1\">](#cpanecontainer__findsubpanecontainer)</ept>","source":"[CPaneContainer::FindSubPaneContainer](#cpanecontainer__findsubpanecontainer)"},{"pos":[2242,2307],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::FindTabbedPane<ept id=\"p1\">](#cpanecontainer__findtabbedpane)</ept>","source":"[CPaneContainer::FindTabbedPane](#cpanecontainer__findtabbedpane)"},{"pos":[2313,2404],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::GetAssociatedSiblingPaneIDs<ept id=\"p1\">](#cpanecontainer__getassociatedsiblingpaneids)</ept>","source":"[CPaneContainer::GetAssociatedSiblingPaneIDs](#cpanecontainer__getassociatedsiblingpaneids)"},{"pos":[2410,2469],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::GetLeftPane<ept id=\"p1\">](#cpanecontainer__getleftpane)</ept>","source":"[CPaneContainer::GetLeftPane](#cpanecontainer__getleftpane)"},{"pos":[2475,2552],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::GetLeftPaneContainer<ept id=\"p1\">](#cpanecontainer__getleftpanecontainer)</ept>","source":"[CPaneContainer::GetLeftPaneContainer](#cpanecontainer__getleftpanecontainer)"},{"pos":[2558,2615],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::GetMinSize<ept id=\"p1\">](#cpanecontainer__getminsize)</ept>","source":"[CPaneContainer::GetMinSize](#cpanecontainer__getminsize)"},{"pos":[2621,2686],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::GetMinSizeLeft<ept id=\"p1\">](#cpanecontainer__getminsizeleft)</ept>","source":"[CPaneContainer::GetMinSizeLeft](#cpanecontainer__getminsizeleft)"},{"pos":[2692,2759],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::GetMinSizeRight<ept id=\"p1\">](#cpanecontainer__getminsizeright)</ept>","source":"[CPaneContainer::GetMinSizeRight](#cpanecontainer__getminsizeright)"},{"pos":[2765,2826],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::GetNodeCount<ept id=\"p1\">](#cpanecontainer__getnodecount)</ept>","source":"[CPaneContainer::GetNodeCount](#cpanecontainer__getnodecount)"},{"pos":[2832,2897],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::GetPaneDivider<ept id=\"p1\">](#cpanecontainer__getpanedivider)</ept>","source":"[CPaneContainer::GetPaneDivider](#cpanecontainer__getpanedivider)"},{"pos":[2903,2984],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::GetParentPaneContainer<ept id=\"p1\">](#cpanecontainer__getparentpanecontainer)</ept>","source":"[CPaneContainer::GetParentPaneContainer](#cpanecontainer__getparentpanecontainer)"},{"pos":[2990,3075],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::GetRecentPaneDividerRect<ept id=\"p1\">](#cpanecontainer__getrecentpanedividerrect)</ept>","source":"[CPaneContainer::GetRecentPaneDividerRect](#cpanecontainer__getrecentpanedividerrect)"},{"pos":[3081,3168],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::GetRecentPaneDividerStyle<ept id=\"p1\">](#cpanecontainer__getrecentpanedividerstyle)</ept>","source":"[CPaneContainer::GetRecentPaneDividerStyle](#cpanecontainer__getrecentpanedividerstyle)"},{"pos":[3174,3243],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::GetRecentPercent<ept id=\"p1\">](#cpanecontainer__getrecentpercent)</ept>","source":"[CPaneContainer::GetRecentPercent](#cpanecontainer__getrecentpercent)"},{"pos":[3249,3308],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::GetRefCount<ept id=\"p1\">](#cpanecontainer__getrefcount)</ept>","source":"[CPaneContainer::GetRefCount](#cpanecontainer__getrefcount)"},{"pos":[3314,3377],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::GetResizeStep<ept id=\"p1\">](#cpanecontainer__getresizestep)</ept>","source":"[CPaneContainer::GetResizeStep](#cpanecontainer__getresizestep)"},{"pos":[3383,3444],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::GetRightPane<ept id=\"p1\">](#cpanecontainer__getrightpane)</ept>","source":"[CPaneContainer::GetRightPane](#cpanecontainer__getrightpane)"},{"pos":[3450,3529],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::GetRightPaneContainer<ept id=\"p1\">](#cpanecontainer__getrightpanecontainer)</ept>","source":"[CPaneContainer::GetRightPaneContainer](#cpanecontainer__getrightpanecontainer)"},{"pos":[3535,3616],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::GetTotalReferenceCount<ept id=\"p1\">](#cpanecontainer__gettotalreferencecount)</ept>","source":"[CPaneContainer::GetTotalReferenceCount](#cpanecontainer__gettotalreferencecount)"},{"pos":[3622,3685],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::GetWindowRect<ept id=\"p1\">](#cpanecontainer__getwindowrect)</ept>","source":"[CPaneContainer::GetWindowRect](#cpanecontainer__getwindowrect)"},{"pos":[3691,3748],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::IsDisposed<ept id=\"p1\">](#cpanecontainer__isdisposed)</ept>","source":"[CPaneContainer::IsDisposed](#cpanecontainer__isdisposed)"},{"pos":[3754,3805],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::IsEmpty<ept id=\"p1\">](#cpanecontainer__isempty)</ept>","source":"[CPaneContainer::IsEmpty](#cpanecontainer__isempty)"},{"pos":[3811,3868],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::IsLeftPane<ept id=\"p1\">](#cpanecontainer__isleftpane)</ept>","source":"[CPaneContainer::IsLeftPane](#cpanecontainer__isleftpane)"},{"pos":[3874,3949],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::IsLeftPaneContainer<ept id=\"p1\">](#cpanecontainer__isleftpanecontainer)</ept>","source":"[CPaneContainer::IsLeftPaneContainer](#cpanecontainer__isleftpanecontainer)"},{"pos":[3955,4022],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::IsLeftPartEmpty<ept id=\"p1\">](#cpanecontainer__isleftpartempty)</ept>","source":"[CPaneContainer::IsLeftPartEmpty](#cpanecontainer__isleftpartempty)"},{"pos":[4028,4097],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::IsRightPartEmpty<ept id=\"p1\">](#cpanecontainer__isrightpartempty)</ept>","source":"[CPaneContainer::IsRightPartEmpty](#cpanecontainer__isrightpartempty)"},{"pos":[4103,4158],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::IsVisible<ept id=\"p1\">](#cpanecontainer__isvisible)</ept>","source":"[CPaneContainer::IsVisible](#cpanecontainer__isvisible)"},{"pos":[4164,4209],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::Move<ept id=\"p1\">](#cpanecontainer__move)</ept>","source":"[CPaneContainer::Move](#cpanecontainer__move)"},{"pos":[4215,4284],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::OnDeleteHidePane<ept id=\"p1\">](#cpanecontainer__ondeletehidepane)</ept>","source":"[CPaneContainer::OnDeleteHidePane](#cpanecontainer__ondeletehidepane)"},{"pos":[4290,4377],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::OnMoveInternalPaneDivider<ept id=\"p1\">](#cpanecontainer__onmoveinternalpanedivider)</ept>","source":"[CPaneContainer::OnMoveInternalPaneDivider](#cpanecontainer__onmoveinternalpanedivider)"},{"pos":[4383,4440],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::OnShowPane<ept id=\"p1\">](#cpanecontainer__onshowpane)</ept>","source":"[CPaneContainer::OnShowPane](#cpanecontainer__onshowpane)"},{"pos":[4446,4497],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::Release<ept id=\"p1\">](#cpanecontainer__release)</ept>","source":"[CPaneContainer::Release](#cpanecontainer__release)"},{"pos":[4503,4590],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::ReleaseEmptyPaneContainer<ept id=\"p1\">](#cpanecontainer__releaseemptypanecontainer)</ept>","source":"[CPaneContainer::ReleaseEmptyPaneContainer](#cpanecontainer__releaseemptypanecontainer)"},{"pos":[4596,4671],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::RemoveNonValidPanes<ept id=\"p1\">](#cpanecontainer__removenonvalidpanes)</ept>","source":"[CPaneContainer::RemoveNonValidPanes](#cpanecontainer__removenonvalidpanes)"},{"pos":[4677,4734],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::RemovePane<ept id=\"p1\">](#cpanecontainer__removepane)</ept>","source":"[CPaneContainer::RemovePane](#cpanecontainer__removepane)"},{"pos":[4740,4789],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::Resize<ept id=\"p1\">](#cpanecontainer__resize)</ept>","source":"[CPaneContainer::Resize](#cpanecontainer__resize)"},{"pos":[4795,4852],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::ResizePane<ept id=\"p1\">](#cpanecontainer__resizepane)</ept>","source":"[CPaneContainer::ResizePane](#cpanecontainer__resizepane)"},{"pos":[4858,4945],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::ResizePartOfPaneContainer<ept id=\"p1\">](#cpanecontainer__resizepartofpanecontainer)</ept>","source":"[CPaneContainer::ResizePartOfPaneContainer](#cpanecontainer__resizepartofpanecontainer)"},{"pos":[4951,5006],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::Serialize<ept id=\"p1\">](#cpanecontainer__serialize)</ept>","source":"[CPaneContainer::Serialize](#cpanecontainer__serialize)"},{"content":"Reads or writes this object from or to an archive.","pos":[5007,5057]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CObject::Serialize<ept id=\"p1\">](../../mfc/reference/cobject-class.md#cobject__serialize)</ept>.)","pos":[5058,5148],"source":" (Overrides [CObject::Serialize](../../mfc/reference/cobject-class.md#cobject__serialize).)"},{"pos":[5153,5204],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::SetPane<ept id=\"p1\">](#cpanecontainer__setpane)</ept>","source":"[CPaneContainer::SetPane](#cpanecontainer__setpane)"},{"pos":[5210,5279],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::SetPaneContainer<ept id=\"p1\">](#cpanecontainer__setpanecontainer)</ept>","source":"[CPaneContainer::SetPaneContainer](#cpanecontainer__setpanecontainer)"},{"pos":[5285,5350],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::SetPaneDivider<ept id=\"p1\">](#cpanecontainer__setpanedivider)</ept>","source":"[CPaneContainer::SetPaneDivider](#cpanecontainer__setpanedivider)"},{"pos":[5356,5437],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::SetParentPaneContainer<ept id=\"p1\">](#cpanecontainer__setparentpanecontainer)</ept>","source":"[CPaneContainer::SetParentPaneContainer](#cpanecontainer__setparentpanecontainer)"},{"pos":[5443,5512],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::SetRecentPercent<ept id=\"p1\">](#cpanecontainer__setrecentpercent)</ept>","source":"[CPaneContainer::SetRecentPercent](#cpanecontainer__setrecentpercent)"},{"pos":[5518,5573],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::SetUpByID<ept id=\"p1\">](#cpanecontainer__setupbyid)</ept>","source":"[CPaneContainer::SetUpByID](#cpanecontainer__setupbyid)"},{"pos":[5579,5662],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::StoreRecentDockSiteInfo<ept id=\"p1\">](#cpanecontainer__storerecentdocksiteinfo)</ept>","source":"[CPaneContainer::StoreRecentDockSiteInfo](#cpanecontainer__storerecentdocksiteinfo)"},{"pos":[5668,5745],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer::StretchPaneContainer<ept id=\"p1\">](#cpanecontainer__stretchpanecontainer)</ept>","source":"[CPaneContainer::StretchPaneContainer](#cpanecontainer__stretchpanecontainer)"},{"pos":[5757,5764],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5768,5836],"content":"<ph id=\"ph1\">`CPaneContainer`</ph> objects are created automatically by the framework.","source":"`CPaneContainer` objects are created automatically by the framework."},{"pos":[5845,5852],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example demonstrates how to construct an instance of the <ph id=\"ph1\">`CPaneContainer`</ph> class.","pos":[5856,5950],"source":"The following example demonstrates how to construct an instance of the `CPaneContainer` class."},{"content":"This code snippet is part of the <bpt id=\"p1\">[</bpt>Set Pane Size sample<ept id=\"p1\">](../../visual-cpp-samples.md)</ept>.","pos":[5951,6036],"source":" This code snippet is part of the [Set Pane Size sample](../../visual-cpp-samples.md)."},{"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_SetPaneSize#2<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cpanecontainer-class_1.h)</ept><ept id=\"p1\">]</ept>","pos":[6043,6139],"source":"[!code-cpp[NVC_MFC_SetPaneSize#2](../../mfc/reference/codesnippet/cpp/cpanecontainer-class_1.h)]"},{"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_SetPaneSize#1<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cpanecontainer-class_2.cpp)</ept><ept id=\"p1\">]</ept>","pos":[6142,6240],"source":"[!code-cpp[NVC_MFC_SetPaneSize#1](../../mfc/reference/codesnippet/cpp/cpanecontainer-class_2.cpp)]"},{"pos":[6249,6270],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[6274,6321],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[6328,6389],"content":"<bpt id=\"p1\">[</bpt>CPaneContainer<ept id=\"p1\">](../../mfc/reference/cpanecontainer-class.md)</ept>","source":"[CPaneContainer](../../mfc/reference/cpanecontainer-class.md)"},{"pos":[6398,6410],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[6414,6444],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxpanecontainer.h","source":"**Header:** afxpanecontainer.h"},{"pos":[6454,6517],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__addpane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::AddPane","linkify":"<a name=\"cpanecontainer__addpane\"></a>  CPaneContainer::AddPane","source":"<a name=\"cpanecontainer__addpane\"></a>  CPaneContainer::AddPane"},{"pos":[6690,6700],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[6704,6715],"content":"[in] <ph id=\"ph1\">`pBar`</ph>","source":"[in] `pBar`"},{"pos":[6725,6737],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[6747,6754],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[6764,6825],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__addref\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::AddRef","linkify":"<a name=\"cpanecontainer__addref\"></a>  CPaneContainer::AddRef","source":"<a name=\"cpanecontainer__addref\"></a>  CPaneContainer::AddRef"},{"pos":[6968,6975],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[6985,7072],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__addsubpanecontainer\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::AddSubPaneContainer","linkify":"<a name=\"cpanecontainer__addsubpanecontainer\"></a>  CPaneContainer::AddSubPaneContainer","source":"<a name=\"cpanecontainer__addsubpanecontainer\"></a>  CPaneContainer::AddSubPaneContainer"},{"pos":[7285,7295],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pContainer`</ph>","pos":[7299,7316],"source":"[in] `pContainer`"},{"content":"[in] <ph id=\"ph1\">`bRightNodeNew`</ph>","pos":[7320,7340],"source":" [in] `bRightNodeNew`"},{"pos":[7350,7362],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7372,7379],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7389,7482],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__calcavailablepanespace\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::CalcAvailablePaneSpace","linkify":"<a name=\"cpanecontainer__calcavailablepanespace\"></a>  CPaneContainer::CalcAvailablePaneSpace","source":"<a name=\"cpanecontainer__calcavailablepanespace\"></a>  CPaneContainer::CalcAvailablePaneSpace"},{"pos":[7746,7756],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nRequiredOffset`</ph>","pos":[7760,7782],"source":"[in] `nRequiredOffset`"},{"content":"[in] <ph id=\"ph1\">`pBar`</ph>","pos":[7786,7797],"source":" [in] `pBar`"},{"content":"[in] <ph id=\"ph1\">`pContainer`</ph>","pos":[7801,7818],"source":" [in] `pContainer`"},{"content":"[in] <ph id=\"ph1\">`bLeftBar`</ph>","pos":[7822,7837],"source":" [in] `bLeftBar`"},{"pos":[7847,7859],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7869,7876],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7886,7971],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__calcavailablespace\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::CalcAvailableSpace","linkify":"<a name=\"cpanecontainer__calcavailablespace\"></a>  CPaneContainer::CalcAvailableSpace","source":"<a name=\"cpanecontainer__calcavailablespace\"></a>  CPaneContainer::CalcAvailableSpace"},{"pos":[8178,8188],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`sizeStretch`</ph>","pos":[8192,8210],"source":"[in] `sizeStretch`"},{"content":"[in] <ph id=\"ph1\">`bLeftBar`</ph>","pos":[8214,8229],"source":" [in] `bLeftBar`"},{"pos":[8239,8251],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[8261,8268],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[8278,8365],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__calculaterecentsize\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::CalculateRecentSize","linkify":"<a name=\"cpanecontainer__calculaterecentsize\"></a>  CPaneContainer::CalculateRecentSize","source":"<a name=\"cpanecontainer__calculaterecentsize\"></a>  CPaneContainer::CalculateRecentSize"},{"pos":[8521,8528],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[8538,8639],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__checkpanedividervisibility\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::CheckPaneDividerVisibility","linkify":"<a name=\"cpanecontainer__checkpanedividervisibility\"></a>  CPaneContainer::CheckPaneDividerVisibility","source":"<a name=\"cpanecontainer__checkpanedividervisibility\"></a>  CPaneContainer::CheckPaneDividerVisibility"},{"pos":[8802,8809],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[8819,8876],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__copy\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::Copy","linkify":"<a name=\"cpanecontainer__copy\"></a>  CPaneContainer::Copy","source":"<a name=\"cpanecontainer__copy\"></a>  CPaneContainer::Copy"},{"pos":[9068,9078],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[9082,9105],"content":"[in] <ph id=\"ph1\">`pParentContainer`</ph>","source":"[in] `pParentContainer`"},{"pos":[9115,9127],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[9137,9144],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9154,9231],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__cpanecontainer\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::CPaneContainer","linkify":"<a name=\"cpanecontainer__cpanecontainer\"></a>  CPaneContainer::CPaneContainer","source":"<a name=\"cpanecontainer__cpanecontainer\"></a>  CPaneContainer::CPaneContainer"},{"pos":[9533,9543],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pManager`</ph>","pos":[9547,9562],"source":"[in] `pManager`"},{"content":"[in] <ph id=\"ph1\">`pLeftBar`</ph>","pos":[9566,9581],"source":" [in] `pLeftBar`"},{"content":"[in] <ph id=\"ph1\">`pRightBar`</ph>","pos":[9585,9601],"source":" [in] `pRightBar`"},{"content":"[in] <ph id=\"ph1\">`pSlider`</ph>","pos":[9605,9619],"source":" [in] `pSlider`"},{"pos":[9629,9636],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9646,9715],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__deletepane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::DeletePane","linkify":"<a name=\"cpanecontainer__deletepane\"></a>  CPaneContainer::DeletePane","source":"<a name=\"cpanecontainer__deletepane\"></a>  CPaneContainer::DeletePane"},{"pos":[9926,9936],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pBar`</ph>","pos":[9940,9951],"source":"[in] `pBar`"},{"content":"[in] <ph id=\"ph1\">`barType`</ph>","pos":[9955,9969],"source":" [in] `barType`"},{"pos":[9979,9986],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9996,10085],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__findsubpanecontainer\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::FindSubPaneContainer","linkify":"<a name=\"cpanecontainer__findsubpanecontainer\"></a>  CPaneContainer::FindSubPaneContainer","source":"<a name=\"cpanecontainer__findsubpanecontainer\"></a>  CPaneContainer::FindSubPaneContainer"},{"pos":[10317,10327],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pObject`</ph>","pos":[10331,10345],"source":"[in] `pObject`"},{"content":"[in] <ph id=\"ph1\">`findCriteria`</ph>","pos":[10349,10368],"source":" [in] `findCriteria`"},{"pos":[10378,10390],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[10400,10407],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10417,10494],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__findtabbedpane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::FindTabbedPane","linkify":"<a name=\"cpanecontainer__findtabbedpane\"></a>  CPaneContainer::FindTabbedPane","source":"<a name=\"cpanecontainer__findtabbedpane\"></a>  CPaneContainer::FindTabbedPane"},{"pos":[10663,10673],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[10677,10687],"content":"[in] <ph id=\"ph1\">`nID`</ph>","source":"[in] `nID`"},{"pos":[10697,10709],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[10719,10726],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10736,10839],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__getassociatedsiblingpaneids\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::GetAssociatedSiblingPaneIDs","linkify":"<a name=\"cpanecontainer__getassociatedsiblingpaneids\"></a>  CPaneContainer::GetAssociatedSiblingPaneIDs","source":"<a name=\"cpanecontainer__getassociatedsiblingpaneids\"></a>  CPaneContainer::GetAssociatedSiblingPaneIDs"},{"pos":[11041,11051],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[11055,11066],"content":"[in] <ph id=\"ph1\">`pBar`</ph>","source":"[in] `pBar`"},{"pos":[11076,11088],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[11098,11105],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[11115,11186],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__getleftpane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::GetLeftPane","linkify":"<a name=\"cpanecontainer__getleftpane\"></a>  CPaneContainer::GetLeftPane","source":"<a name=\"cpanecontainer__getleftpane\"></a>  CPaneContainer::GetLeftPane"},{"pos":[11359,11371],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[11381,11388],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[11398,11487],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__getleftpanecontainer\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::GetLeftPaneContainer","linkify":"<a name=\"cpanecontainer__getleftpanecontainer\"></a>  CPaneContainer::GetLeftPaneContainer","source":"<a name=\"cpanecontainer__getleftpanecontainer\"></a>  CPaneContainer::GetLeftPaneContainer"},{"pos":[11670,11682],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[11692,11699],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[11709,11778],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__getminsize\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::GetMinSize","linkify":"<a name=\"cpanecontainer__getminsize\"></a>  CPaneContainer::GetMinSize","source":"<a name=\"cpanecontainer__getminsize\"></a>  CPaneContainer::GetMinSize"},{"pos":[11953,11963],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[11967,11978],"content":"[in] <ph id=\"ph1\">`size`</ph>","source":"[in] `size`"},{"pos":[11988,11995],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12005,12082],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__getminsizeleft\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::GetMinSizeLeft","linkify":"<a name=\"cpanecontainer__getminsizeleft\"></a>  CPaneContainer::GetMinSizeLeft","source":"<a name=\"cpanecontainer__getminsizeleft\"></a>  CPaneContainer::GetMinSizeLeft"},{"pos":[12261,12271],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[12275,12286],"content":"[in] <ph id=\"ph1\">`size`</ph>","source":"[in] `size`"},{"pos":[12296,12303],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12313,12392],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__getminsizeright\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::GetMinSizeRight","linkify":"<a name=\"cpanecontainer__getminsizeright\"></a>  CPaneContainer::GetMinSizeRight","source":"<a name=\"cpanecontainer__getminsizeright\"></a>  CPaneContainer::GetMinSizeRight"},{"pos":[12572,12582],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[12586,12597],"content":"[in] <ph id=\"ph1\">`size`</ph>","source":"[in] `size`"},{"pos":[12607,12614],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12624,12697],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__getnodecount\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::GetNodeCount","linkify":"<a name=\"cpanecontainer__getnodecount\"></a>  CPaneContainer::GetNodeCount","source":"<a name=\"cpanecontainer__getnodecount\"></a>  CPaneContainer::GetNodeCount"},{"pos":[12854,12866],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[12876,12883],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12893,12970],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__getpanedivider\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::GetPaneDivider","linkify":"<a name=\"cpanecontainer__getpanedivider\"></a>  CPaneContainer::GetPaneDivider","source":"<a name=\"cpanecontainer__getpanedivider\"></a>  CPaneContainer::GetPaneDivider"},{"pos":[13145,13157],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[13167,13174],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[13184,13277],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__getparentpanecontainer\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::GetParentPaneContainer","linkify":"<a name=\"cpanecontainer__getparentpanecontainer\"></a>  CPaneContainer::GetParentPaneContainer","source":"<a name=\"cpanecontainer__getparentpanecontainer\"></a>  CPaneContainer::GetParentPaneContainer"},{"pos":[13456,13468],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[13478,13485],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[13495,13592],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__getrecentpanedividerrect\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::GetRecentPaneDividerRect","linkify":"<a name=\"cpanecontainer__getrecentpanedividerrect\"></a>  CPaneContainer::GetRecentPaneDividerRect","source":"<a name=\"cpanecontainer__getrecentpanedividerrect\"></a>  CPaneContainer::GetRecentPaneDividerRect"},{"pos":[13763,13775],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[13785,13792],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[13802,13901],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__getrecentpanedividerstyle\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::GetRecentPaneDividerStyle","linkify":"<a name=\"cpanecontainer__getrecentpanedividerstyle\"></a>  CPaneContainer::GetRecentPaneDividerStyle","source":"<a name=\"cpanecontainer__getrecentpanedividerstyle\"></a>  CPaneContainer::GetRecentPaneDividerStyle"},{"pos":[14073,14085],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[14095,14102],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[14112,14193],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__getrecentpercent\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::GetRecentPercent","linkify":"<a name=\"cpanecontainer__getrecentpercent\"></a>  CPaneContainer::GetRecentPercent","source":"<a name=\"cpanecontainer__getrecentpercent\"></a>  CPaneContainer::GetRecentPercent"},{"pos":[14345,14357],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[14367,14374],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[14384,14455],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__getrefcount\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::GetRefCount","linkify":"<a name=\"cpanecontainer__getrefcount\"></a>  CPaneContainer::GetRefCount","source":"<a name=\"cpanecontainer__getrefcount\"></a>  CPaneContainer::GetRefCount"},{"pos":[14603,14615],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[14625,14632],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[14642,14717],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__getresizestep\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::GetResizeStep","linkify":"<a name=\"cpanecontainer__getresizestep\"></a>  CPaneContainer::GetResizeStep","source":"<a name=\"cpanecontainer__getresizestep\"></a>  CPaneContainer::GetResizeStep"},{"pos":[14883,14895],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[14905,14912],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[14922,14995],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__getrightpane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::GetRightPane","linkify":"<a name=\"cpanecontainer__getrightpane\"></a>  CPaneContainer::GetRightPane","source":"<a name=\"cpanecontainer__getrightpane\"></a>  CPaneContainer::GetRightPane"},{"pos":[15169,15181],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15191,15198],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[15208,15299],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__getrightpanecontainer\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::GetRightPaneContainer","linkify":"<a name=\"cpanecontainer__getrightpanecontainer\"></a>  CPaneContainer::GetRightPaneContainer","source":"<a name=\"cpanecontainer__getrightpanecontainer\"></a>  CPaneContainer::GetRightPaneContainer"},{"pos":[15483,15495],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15505,15512],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[15522,15615],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__gettotalreferencecount\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::GetTotalReferenceCount","linkify":"<a name=\"cpanecontainer__gettotalreferencecount\"></a>  CPaneContainer::GetTotalReferenceCount","source":"<a name=\"cpanecontainer__gettotalreferencecount\"></a>  CPaneContainer::GetTotalReferenceCount"},{"pos":[15782,15794],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15804,15811],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[15821,15896],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__getwindowrect\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::GetWindowRect","linkify":"<a name=\"cpanecontainer__getwindowrect\"></a>  CPaneContainer::GetWindowRect","source":"<a name=\"cpanecontainer__getwindowrect\"></a>  CPaneContainer::GetWindowRect"},{"pos":[16117,16127],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`rect`</ph>","pos":[16131,16142],"source":"[in] `rect`"},{"content":"[in] <ph id=\"ph1\">`bIgnoreVisibility`</ph>","pos":[16146,16170],"source":" [in] `bIgnoreVisibility`"},{"pos":[16180,16187],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[16197,16266],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__isdisposed\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::IsDisposed","linkify":"<a name=\"cpanecontainer__isdisposed\"></a>  CPaneContainer::IsDisposed","source":"<a name=\"cpanecontainer__isdisposed\"></a>  CPaneContainer::IsDisposed"},{"pos":[16422,16434],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[16444,16451],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[16461,16524],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__isempty\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::IsEmpty","linkify":"<a name=\"cpanecontainer__isempty\"></a>  CPaneContainer::IsEmpty","source":"<a name=\"cpanecontainer__isempty\"></a>  CPaneContainer::IsEmpty"},{"pos":[16677,16689],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[16699,16706],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[16716,16785],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__isleftpane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::IsLeftPane","linkify":"<a name=\"cpanecontainer__isleftpane\"></a>  CPaneContainer::IsLeftPane","source":"<a name=\"cpanecontainer__isleftpane\"></a>  CPaneContainer::IsLeftPane"},{"pos":[16960,16970],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[16974,16985],"content":"[in] <ph id=\"ph1\">`pBar`</ph>","source":"[in] `pBar`"},{"pos":[16995,17007],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[17017,17024],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[17034,17121],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__isleftpanecontainer\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::IsLeftPaneContainer","linkify":"<a name=\"cpanecontainer__isleftpanecontainer\"></a>  CPaneContainer::IsLeftPaneContainer","source":"<a name=\"cpanecontainer__isleftpanecontainer\"></a>  CPaneContainer::IsLeftPaneContainer"},{"pos":[17286,17298],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[17308,17315],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[17325,17404],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__isleftpartempty\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::IsLeftPartEmpty","linkify":"<a name=\"cpanecontainer__isleftpartempty\"></a>  CPaneContainer::IsLeftPartEmpty","source":"<a name=\"cpanecontainer__isleftpartempty\"></a>  CPaneContainer::IsLeftPartEmpty"},{"pos":[17594,17604],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[17608,17631],"content":"[in] <ph id=\"ph1\">`bCheckVisibility`</ph>","source":"[in] `bCheckVisibility`"},{"pos":[17641,17653],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[17663,17670],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[17680,17761],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__isrightpartempty\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::IsRightPartEmpty","linkify":"<a name=\"cpanecontainer__isrightpartempty\"></a>  CPaneContainer::IsRightPartEmpty","source":"<a name=\"cpanecontainer__isrightpartempty\"></a>  CPaneContainer::IsRightPartEmpty"},{"pos":[17952,17962],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[17966,17989],"content":"[in] <ph id=\"ph1\">`bCheckVisibility`</ph>","source":"[in] `bCheckVisibility`"},{"pos":[17999,18011],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[18021,18028],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[18038,18105],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__isvisible\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::IsVisible","linkify":"<a name=\"cpanecontainer__isvisible\"></a>  CPaneContainer::IsVisible","source":"<a name=\"cpanecontainer__isvisible\"></a>  CPaneContainer::IsVisible"},{"pos":[18260,18272],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[18282,18289],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[18299,18356],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__move\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::Move","linkify":"<a name=\"cpanecontainer__move\"></a>  CPaneContainer::Move","source":"<a name=\"cpanecontainer__move\"></a>  CPaneContainer::Move"},{"pos":[18524,18534],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[18538,18557],"content":"[in] <ph id=\"ph1\">`ptNewLeftTop`</ph>","source":"[in] `ptNewLeftTop`"},{"pos":[18567,18574],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[18584,18665],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__ondeletehidepane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::OnDeleteHidePane","linkify":"<a name=\"cpanecontainer__ondeletehidepane\"></a>  CPaneContainer::OnDeleteHidePane","source":"<a name=\"cpanecontainer__ondeletehidepane\"></a>  CPaneContainer::OnDeleteHidePane"},{"pos":[18860,18870],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pBar`</ph>","pos":[18874,18885],"source":"[in] `pBar`"},{"content":"[in] <ph id=\"ph1\">`bHide`</ph>","pos":[18889,18901],"source":" [in] `bHide`"},{"pos":[18911,18918],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[18928,19027],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__onmoveinternalpanedivider\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::OnMoveInternalPaneDivider","linkify":"<a name=\"cpanecontainer__onmoveinternalpanedivider\"></a>  CPaneContainer::OnMoveInternalPaneDivider","source":"<a name=\"cpanecontainer__onmoveinternalpanedivider\"></a>  CPaneContainer::OnMoveInternalPaneDivider"},{"pos":[19230,19240],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nOffset`</ph>","pos":[19244,19258],"source":"[in] `nOffset`"},{"content":"[in] <ph id=\"ph1\">`hdwp`</ph>","pos":[19262,19273],"source":" [in] `hdwp`"},{"pos":[19283,19295],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[19305,19312],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[19322,19391],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__onshowpane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::OnShowPane","linkify":"<a name=\"cpanecontainer__onshowpane\"></a>  CPaneContainer::OnShowPane","source":"<a name=\"cpanecontainer__onshowpane\"></a>  CPaneContainer::OnShowPane"},{"pos":[19588,19598],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pBar`</ph>","pos":[19602,19613],"source":"[in] `pBar`"},{"content":"[in] <ph id=\"ph1\">`bShow`</ph>","pos":[19617,19629],"source":" [in] `bShow`"},{"pos":[19639,19646],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[19656,19719],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__release\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::Release","linkify":"<a name=\"cpanecontainer__release\"></a>  CPaneContainer::Release","source":"<a name=\"cpanecontainer__release\"></a>  CPaneContainer::Release"},{"pos":[19864,19876],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[19886,19893],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[19903,20002],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__releaseemptypanecontainer\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::ReleaseEmptyPaneContainer","linkify":"<a name=\"cpanecontainer__releaseemptypanecontainer\"></a>  CPaneContainer::ReleaseEmptyPaneContainer","source":"<a name=\"cpanecontainer__releaseemptypanecontainer\"></a>  CPaneContainer::ReleaseEmptyPaneContainer"},{"pos":[20164,20171],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[20181,20268],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__removenonvalidpanes\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::RemoveNonValidPanes","linkify":"<a name=\"cpanecontainer__removenonvalidpanes\"></a>  CPaneContainer::RemoveNonValidPanes","source":"<a name=\"cpanecontainer__removenonvalidpanes\"></a>  CPaneContainer::RemoveNonValidPanes"},{"pos":[20424,20431],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[20441,20510],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__removepane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::RemovePane","linkify":"<a name=\"cpanecontainer__removepane\"></a>  CPaneContainer::RemovePane","source":"<a name=\"cpanecontainer__removepane\"></a>  CPaneContainer::RemovePane"},{"pos":[20684,20694],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[20698,20709],"content":"[in] <ph id=\"ph1\">`pBar`</ph>","source":"[in] `pBar`"},{"pos":[20719,20726],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[20736,20797],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__resize\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::Resize","linkify":"<a name=\"cpanecontainer__resize\"></a>  CPaneContainer::Resize","source":"<a name=\"cpanecontainer__resize\"></a>  CPaneContainer::Resize"},{"pos":[21009,21019],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`rect`</ph>","pos":[21023,21034],"source":"[in] `rect`"},{"content":"[in] <ph id=\"ph1\">`hdwp`</ph>","pos":[21038,21049],"source":" [in] `hdwp`"},{"content":"[in] <ph id=\"ph1\">`bRedraw`</ph>","pos":[21053,21067],"source":" [in] `bRedraw`"},{"pos":[21077,21084],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[21094,21163],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__resizepane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::ResizePane","linkify":"<a name=\"cpanecontainer__resizepane\"></a>  CPaneContainer::ResizePane","source":"<a name=\"cpanecontainer__resizepane\"></a>  CPaneContainer::ResizePane"},{"pos":[21444,21454],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nOffset`</ph>","pos":[21458,21472],"source":"[in] `nOffset`"},{"content":"[in] <ph id=\"ph1\">`pBar`</ph>","pos":[21476,21487],"source":" [in] `pBar`"},{"content":"[in] <ph id=\"ph1\">`pContainer`</ph>","pos":[21491,21508],"source":" [in] `pContainer`"},{"content":"[in] <ph id=\"ph1\">`bHorz`</ph>","pos":[21512,21524],"source":" [in] `bHorz`"},{"content":"[in] <ph id=\"ph1\">`bLeftBar`</ph>","pos":[21528,21543],"source":" [in] `bLeftBar`"},{"content":"[in] <ph id=\"ph1\">`hdwp`</ph>","pos":[21547,21558],"source":" [in] `hdwp`"},{"pos":[21568,21575],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[21585,21684],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__resizepartofpanecontainer\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::ResizePartOfPaneContainer","linkify":"<a name=\"cpanecontainer__resizepartofpanecontainer\"></a>  CPaneContainer::ResizePartOfPaneContainer","source":"<a name=\"cpanecontainer__resizepartofpanecontainer\"></a>  CPaneContainer::ResizePartOfPaneContainer"},{"pos":[21910,21920],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nOffset`</ph>","pos":[21924,21938],"source":"[in] `nOffset`"},{"content":"[in] <ph id=\"ph1\">`bLeftPart`</ph>","pos":[21942,21958],"source":" [in] `bLeftPart`"},{"content":"[in] <ph id=\"ph1\">`hdwp`</ph>","pos":[21962,21973],"source":" [in] `hdwp`"},{"pos":[21983,21990],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[22000,22067],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__serialize\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::Serialize","linkify":"<a name=\"cpanecontainer__serialize\"></a>  CPaneContainer::Serialize","source":"<a name=\"cpanecontainer__serialize\"></a>  CPaneContainer::Serialize"},{"pos":[22225,22235],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[22239,22248],"content":"[in] <ph id=\"ph1\">`ar`</ph>","source":"[in] `ar`"},{"pos":[22258,22265],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[22275,22338],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__setpane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::SetPane","linkify":"<a name=\"cpanecontainer__setpane\"></a>  CPaneContainer::SetPane","source":"<a name=\"cpanecontainer__setpane\"></a>  CPaneContainer::SetPane"},{"pos":[22524,22534],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pBar`</ph>","pos":[22538,22549],"source":"[in] `pBar`"},{"content":"[in] <ph id=\"ph1\">`bLeft`</ph>","pos":[22553,22565],"source":" [in] `bLeft`"},{"pos":[22575,22582],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[22592,22673],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__setpanecontainer\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::SetPaneContainer","linkify":"<a name=\"cpanecontainer__setpanecontainer\"></a>  CPaneContainer::SetPaneContainer","source":"<a name=\"cpanecontainer__setpanecontainer\"></a>  CPaneContainer::SetPaneContainer"},{"pos":[22875,22885],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pContainer`</ph>","pos":[22889,22906],"source":"[in] `pContainer`"},{"content":"[in] <ph id=\"ph1\">`bLeft`</ph>","pos":[22910,22922],"source":" [in] `bLeft`"},{"pos":[22932,22939],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[22949,23026],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__setpanedivider\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::SetPaneDivider","linkify":"<a name=\"cpanecontainer__setpanedivider\"></a>  CPaneContainer::SetPaneDivider","source":"<a name=\"cpanecontainer__setpanedivider\"></a>  CPaneContainer::SetPaneDivider"},{"pos":[23198,23208],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[23212,23226],"content":"[in] <ph id=\"ph1\">`pSlider`</ph>","source":"[in] `pSlider`"},{"pos":[23236,23243],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[23253,23346],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__setparentpanecontainer\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::SetParentPaneContainer","linkify":"<a name=\"cpanecontainer__setparentpanecontainer\"></a>  CPaneContainer::SetParentPaneContainer","source":"<a name=\"cpanecontainer__setparentpanecontainer\"></a>  CPaneContainer::SetParentPaneContainer"},{"pos":[23522,23532],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[23536,23544],"content":"[in] <ph id=\"ph1\">`p`</ph>","source":"[in] `p`"},{"pos":[23554,23561],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[23571,23652],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__setrecentpercent\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::SetRecentPercent","linkify":"<a name=\"cpanecontainer__setrecentpercent\"></a>  CPaneContainer::SetRecentPercent","source":"<a name=\"cpanecontainer__setrecentpercent\"></a>  CPaneContainer::SetRecentPercent"},{"pos":[23823,23833],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[23837,23858],"content":"[in] <ph id=\"ph1\">`nRecentPercent`</ph>","source":"[in] `nRecentPercent`"},{"pos":[23868,23875],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[23885,23952],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__setupbyid\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::SetUpByID","linkify":"<a name=\"cpanecontainer__setupbyid\"></a>  CPaneContainer::SetUpByID","source":"<a name=\"cpanecontainer__setupbyid\"></a>  CPaneContainer::SetUpByID"},{"pos":[24138,24148],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nID`</ph>","pos":[24152,24162],"source":"[in] `nID`"},{"content":"[in] <ph id=\"ph1\">`pBar`</ph>","pos":[24166,24177],"source":" [in] `pBar`"},{"pos":[24187,24199],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[24209,24216],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[24226,24321],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__storerecentdocksiteinfo\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::StoreRecentDockSiteInfo","linkify":"<a name=\"cpanecontainer__storerecentdocksiteinfo\"></a>  CPaneContainer::StoreRecentDockSiteInfo","source":"<a name=\"cpanecontainer__storerecentdocksiteinfo\"></a>  CPaneContainer::StoreRecentDockSiteInfo"},{"pos":[24508,24518],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[24522,24533],"content":"[in] <ph id=\"ph1\">`pBar`</ph>","source":"[in] `pBar`"},{"pos":[24543,24550],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[24560,24649],"content":"<bpt id=\"p1\">&lt;a name=\"cpanecontainer__stretchpanecontainer\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPaneContainer::StretchPaneContainer","linkify":"<a name=\"cpanecontainer__stretchpanecontainer\"></a>  CPaneContainer::StretchPaneContainer","source":"<a name=\"cpanecontainer__stretchpanecontainer\"></a>  CPaneContainer::StretchPaneContainer"},{"pos":[24917,24927],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nOffset`</ph>","pos":[24931,24945],"source":"[in] `nOffset`"},{"content":"[in] <ph id=\"ph1\">`bStretchHorz`</ph>","pos":[24949,24968],"source":" [in] `bStretchHorz`"},{"content":"[in] <ph id=\"ph1\">`bLeftBar`</ph>","pos":[24972,24987],"source":" [in] `bLeftBar`"},{"content":"[in] <ph id=\"ph1\">`bMoveSlider`</ph>","pos":[24991,25009],"source":" [in] `bMoveSlider`"},{"content":"[in] <ph id=\"ph1\">`hdwp`</ph>","pos":[25013,25024],"source":" [in] `hdwp`"},{"pos":[25034,25046],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[25056,25063],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[25072,25080],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[25084,25132],"source":"[Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Classes<ept id=\"p1\">](../../mfc/reference/mfc-classes.md)</ept><ph id=\"ph1\"> </ph>","pos":[25135,25182],"source":" [Classes](../../mfc/reference/mfc-classes.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CObject Class<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[25185,25240],"source":" [CObject Class](../../mfc/reference/cobject-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CPaneContainerManager Class<ept id=\"p1\">](../../mfc/reference/cpanecontainermanager-class.md)</ept>","pos":[25243,25325],"source":" [CPaneContainerManager Class](../../mfc/reference/cpanecontainermanager-class.md)"}],"content":"---\ntitle: \"CPaneContainer Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CPaneContainer\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CPaneContainer class\"\nms.assetid: beb79e08-f611-4d66-ba04-053baa79bf86\ncaps.latest.revision: 32\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CPaneContainer Class\nThe `CPaneContainer` class is a basic component of the docking model implemented by MFC. An object of this class stores pointers to two docking panes or to two instances of `CPaneContainer.` It also stores a pointer to the divider that separates the panes (or the containers). By nesting containers inside containers, the framework can build a binary tree that represents complex docking layouts. The root of the binary tree is stored in a [CPaneContainerManager](../../mfc/reference/cpanecontainermanager-class.md) object.  \n  \n## Syntax  \n  \n```  \nclass CPaneContainer : public CObject    \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CPaneContainer::CPaneContainer](#cpanecontainer__cpanecontainer)|Default constructor.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CPaneContainer::AddPane](#cpanecontainer__addpane)||  \n|[CPaneContainer::AddRef](#cpanecontainer__addref)||  \n|[CPaneContainer::AddSubPaneContainer](#cpanecontainer__addsubpanecontainer)||  \n|[CPaneContainer::CalcAvailablePaneSpace](#cpanecontainer__calcavailablepanespace)||  \n|[CPaneContainer::CalcAvailableSpace](#cpanecontainer__calcavailablespace)||  \n|[CPaneContainer::CalculateRecentSize](#cpanecontainer__calculaterecentsize)||  \n|[CPaneContainer::CheckPaneDividerVisibility](#cpanecontainer__checkpanedividervisibility)||  \n|[CPaneContainer::Copy](#cpanecontainer__copy)||  \n|[CPaneContainer::DeletePane](#cpanecontainer__deletepane)||  \n|[CPaneContainer::FindSubPaneContainer](#cpanecontainer__findsubpanecontainer)||  \n|[CPaneContainer::FindTabbedPane](#cpanecontainer__findtabbedpane)||  \n|[CPaneContainer::GetAssociatedSiblingPaneIDs](#cpanecontainer__getassociatedsiblingpaneids)||  \n|[CPaneContainer::GetLeftPane](#cpanecontainer__getleftpane)||  \n|[CPaneContainer::GetLeftPaneContainer](#cpanecontainer__getleftpanecontainer)||  \n|[CPaneContainer::GetMinSize](#cpanecontainer__getminsize)||  \n|[CPaneContainer::GetMinSizeLeft](#cpanecontainer__getminsizeleft)||  \n|[CPaneContainer::GetMinSizeRight](#cpanecontainer__getminsizeright)||  \n|[CPaneContainer::GetNodeCount](#cpanecontainer__getnodecount)||  \n|[CPaneContainer::GetPaneDivider](#cpanecontainer__getpanedivider)||  \n|[CPaneContainer::GetParentPaneContainer](#cpanecontainer__getparentpanecontainer)||  \n|[CPaneContainer::GetRecentPaneDividerRect](#cpanecontainer__getrecentpanedividerrect)||  \n|[CPaneContainer::GetRecentPaneDividerStyle](#cpanecontainer__getrecentpanedividerstyle)||  \n|[CPaneContainer::GetRecentPercent](#cpanecontainer__getrecentpercent)||  \n|[CPaneContainer::GetRefCount](#cpanecontainer__getrefcount)||  \n|[CPaneContainer::GetResizeStep](#cpanecontainer__getresizestep)||  \n|[CPaneContainer::GetRightPane](#cpanecontainer__getrightpane)||  \n|[CPaneContainer::GetRightPaneContainer](#cpanecontainer__getrightpanecontainer)||  \n|[CPaneContainer::GetTotalReferenceCount](#cpanecontainer__gettotalreferencecount)||  \n|[CPaneContainer::GetWindowRect](#cpanecontainer__getwindowrect)||  \n|[CPaneContainer::IsDisposed](#cpanecontainer__isdisposed)||  \n|[CPaneContainer::IsEmpty](#cpanecontainer__isempty)||  \n|[CPaneContainer::IsLeftPane](#cpanecontainer__isleftpane)||  \n|[CPaneContainer::IsLeftPaneContainer](#cpanecontainer__isleftpanecontainer)||  \n|[CPaneContainer::IsLeftPartEmpty](#cpanecontainer__isleftpartempty)||  \n|[CPaneContainer::IsRightPartEmpty](#cpanecontainer__isrightpartempty)||  \n|[CPaneContainer::IsVisible](#cpanecontainer__isvisible)||  \n|[CPaneContainer::Move](#cpanecontainer__move)||  \n|[CPaneContainer::OnDeleteHidePane](#cpanecontainer__ondeletehidepane)||  \n|[CPaneContainer::OnMoveInternalPaneDivider](#cpanecontainer__onmoveinternalpanedivider)||  \n|[CPaneContainer::OnShowPane](#cpanecontainer__onshowpane)||  \n|[CPaneContainer::Release](#cpanecontainer__release)||  \n|[CPaneContainer::ReleaseEmptyPaneContainer](#cpanecontainer__releaseemptypanecontainer)||  \n|[CPaneContainer::RemoveNonValidPanes](#cpanecontainer__removenonvalidpanes)||  \n|[CPaneContainer::RemovePane](#cpanecontainer__removepane)||  \n|[CPaneContainer::Resize](#cpanecontainer__resize)||  \n|[CPaneContainer::ResizePane](#cpanecontainer__resizepane)||  \n|[CPaneContainer::ResizePartOfPaneContainer](#cpanecontainer__resizepartofpanecontainer)||  \n|[CPaneContainer::Serialize](#cpanecontainer__serialize)|Reads or writes this object from or to an archive. (Overrides [CObject::Serialize](../../mfc/reference/cobject-class.md#cobject__serialize).)|  \n|[CPaneContainer::SetPane](#cpanecontainer__setpane)||  \n|[CPaneContainer::SetPaneContainer](#cpanecontainer__setpanecontainer)||  \n|[CPaneContainer::SetPaneDivider](#cpanecontainer__setpanedivider)||  \n|[CPaneContainer::SetParentPaneContainer](#cpanecontainer__setparentpanecontainer)||  \n|[CPaneContainer::SetRecentPercent](#cpanecontainer__setrecentpercent)||  \n|[CPaneContainer::SetUpByID](#cpanecontainer__setupbyid)||  \n|[CPaneContainer::StoreRecentDockSiteInfo](#cpanecontainer__storerecentdocksiteinfo)||  \n|[CPaneContainer::StretchPaneContainer](#cpanecontainer__stretchpanecontainer)||  \n  \n### Remarks  \n `CPaneContainer` objects are created automatically by the framework.  \n  \n## Example  \n The following example demonstrates how to construct an instance of the `CPaneContainer` class. This code snippet is part of the [Set Pane Size sample](../../visual-cpp-samples.md).  \n  \n [!code-cpp[NVC_MFC_SetPaneSize#2](../../mfc/reference/codesnippet/cpp/cpanecontainer-class_1.h)]  \n[!code-cpp[NVC_MFC_SetPaneSize#1](../../mfc/reference/codesnippet/cpp/cpanecontainer-class_2.cpp)]  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CPaneContainer](../../mfc/reference/cpanecontainer-class.md)  \n  \n## Requirements  \n **Header:** afxpanecontainer.h  \n  \n##  <a name=\"cpanecontainer__addpane\"></a>  CPaneContainer::AddPane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nCDockablePane* AddPane(CDockablePane* pBar);\n```  \n  \n### Parameters  \n [in] `pBar`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__addref\"></a>  CPaneContainer::AddRef  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid AddRef();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__addsubpanecontainer\"></a>  CPaneContainer::AddSubPaneContainer  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL AddSubPaneContainer(\n    CPaneContainer* pContainer,  \n    BOOL bRightNodeNew);\n```  \n  \n### Parameters  \n [in] `pContainer`  \n [in] `bRightNodeNew`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__calcavailablepanespace\"></a>  CPaneContainer::CalcAvailablePaneSpace  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual int CalcAvailablePaneSpace(\n    int nRequiredOffset,  \n    CPane* pBar,  \n    CPaneContainer* pContainer,  \n    BOOL bLeftBar);\n```  \n  \n### Parameters  \n [in] `nRequiredOffset`  \n [in] `pBar`  \n [in] `pContainer`  \n [in] `bLeftBar`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__calcavailablespace\"></a>  CPaneContainer::CalcAvailableSpace  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual CSize CalcAvailableSpace(\n    CSize sizeStretch,  \n    BOOL bLeftBar);\n```  \n  \n### Parameters  \n [in] `sizeStretch`  \n [in] `bLeftBar`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__calculaterecentsize\"></a>  CPaneContainer::CalculateRecentSize  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid CalculateRecentSize();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__checkpanedividervisibility\"></a>  CPaneContainer::CheckPaneDividerVisibility  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid CheckPaneDividerVisibility();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__copy\"></a>  CPaneContainer::Copy  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual CPaneContainer* Copy(CPaneContainer* pParentContainer);\n```  \n  \n### Parameters  \n [in] `pParentContainer`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__cpanecontainer\"></a>  CPaneContainer::CPaneContainer  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nCPaneContainer(\n    CPaneContainerManager* pManager = NULL,  \n    CDockablePane* pLeftBar = NULL,  \n    CDockablePane* pRightBar = NULL,  \n    CPaneDivider* pSlider = NULL);\n```  \n  \n### Parameters  \n [in] `pManager`  \n [in] `pLeftBar`  \n [in] `pRightBar`  \n [in] `pSlider`  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__deletepane\"></a>  CPaneContainer::DeletePane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void DeletePane(\n    CDockablePane* pBar,  \n    BC_FIND_CRITERIA barType);\n```  \n  \n### Parameters  \n [in] `pBar`  \n [in] `barType`  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__findsubpanecontainer\"></a>  CPaneContainer::FindSubPaneContainer  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nCPaneContainer* FindSubPaneContainer(\n    const CObject* pObject,  \n    BC_FIND_CRITERIA findCriteria);\n```  \n  \n### Parameters  \n [in] `pObject`  \n [in] `findCriteria`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__findtabbedpane\"></a>  CPaneContainer::FindTabbedPane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nCDockablePane* FindTabbedPane(UINT nID);\n```  \n  \n### Parameters  \n [in] `nID`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__getassociatedsiblingpaneids\"></a>  CPaneContainer::GetAssociatedSiblingPaneIDs  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nCList<UINT, UINT>* GetAssociatedSiblingPaneIDs(\n    CDockablePane* pBar);\n```  \n  \n### Parameters  \n [in] `pBar`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__getleftpane\"></a>  CPaneContainer::GetLeftPane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nconst CDockablePane* GetLeftPane() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__getleftpanecontainer\"></a>  CPaneContainer::GetLeftPaneContainer  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nconst CPaneContainer* GetLeftPaneContainer() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__getminsize\"></a>  CPaneContainer::GetMinSize  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void GetMinSize(CSize& size) const;\n\n \n```  \n  \n### Parameters  \n [in] `size`  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__getminsizeleft\"></a>  CPaneContainer::GetMinSizeLeft  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void GetMinSizeLeft(CSize& size) const;\n\n \n```  \n  \n### Parameters  \n [in] `size`  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__getminsizeright\"></a>  CPaneContainer::GetMinSizeRight  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void GetMinSizeRight(CSize& size) const;\n\n \n```  \n  \n### Parameters  \n [in] `size`  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__getnodecount\"></a>  CPaneContainer::GetNodeCount  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nint GetNodeCount() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__getpanedivider\"></a>  CPaneContainer::GetPaneDivider  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nconst CPaneDivider* GetPaneDivider() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__getparentpanecontainer\"></a>  CPaneContainer::GetParentPaneContainer  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nCPaneContainer* GetParentPaneContainer() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__getrecentpanedividerrect\"></a>  CPaneContainer::GetRecentPaneDividerRect  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nCRect GetRecentPaneDividerRect() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__getrecentpanedividerstyle\"></a>  CPaneContainer::GetRecentPaneDividerStyle  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nDWORD GetRecentPaneDividerStyle() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__getrecentpercent\"></a>  CPaneContainer::GetRecentPercent  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nint GetRecentPercent();\n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__getrefcount\"></a>  CPaneContainer::GetRefCount  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nLONG GetRefCount();\n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__getresizestep\"></a>  CPaneContainer::GetResizeStep  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual int GetResizeStep() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__getrightpane\"></a>  CPaneContainer::GetRightPane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nconst CDockablePane* GetRightPane() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__getrightpanecontainer\"></a>  CPaneContainer::GetRightPaneContainer  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nconst CPaneContainer* GetRightPaneContainer() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__gettotalreferencecount\"></a>  CPaneContainer::GetTotalReferenceCount  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nint GetTotalReferenceCount() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__getwindowrect\"></a>  CPaneContainer::GetWindowRect  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void GetWindowRect(\n    CRect& rect,  \n    BOOL bIgnoreVisibility = FALSE) const;\n\n \n```  \n  \n### Parameters  \n [in] `rect`  \n [in] `bIgnoreVisibility`  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__isdisposed\"></a>  CPaneContainer::IsDisposed  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL IsDisposed() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__isempty\"></a>  CPaneContainer::IsEmpty  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL IsEmpty() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__isleftpane\"></a>  CPaneContainer::IsLeftPane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL IsLeftPane(CDockablePane* pBar) const;\n\n \n```  \n  \n### Parameters  \n [in] `pBar`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__isleftpanecontainer\"></a>  CPaneContainer::IsLeftPaneContainer  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL IsLeftPaneContainer() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__isleftpartempty\"></a>  CPaneContainer::IsLeftPartEmpty  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL IsLeftPartEmpty(BOOL bCheckVisibility = FALSE) const;\n\n \n```  \n  \n### Parameters  \n [in] `bCheckVisibility`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__isrightpartempty\"></a>  CPaneContainer::IsRightPartEmpty  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL IsRightPartEmpty(BOOL bCheckVisibility = FALSE) const;\n\n \n```  \n  \n### Parameters  \n [in] `bCheckVisibility`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__isvisible\"></a>  CPaneContainer::IsVisible  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL IsVisible() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__move\"></a>  CPaneContainer::Move  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void Move(CPoint ptNewLeftTop);\n```  \n  \n### Parameters  \n [in] `ptNewLeftTop`  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__ondeletehidepane\"></a>  CPaneContainer::OnDeleteHidePane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid OnDeleteHidePane(\n    CDockablePane* pBar,  \n    BOOL bHide);\n```  \n  \n### Parameters  \n [in] `pBar`  \n [in] `bHide`  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__onmoveinternalpanedivider\"></a>  CPaneContainer::OnMoveInternalPaneDivider  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual int OnMoveInternalPaneDivider(\n    int nOffset,  \n    HDWP& hdwp);\n```  \n  \n### Parameters  \n [in] `nOffset`  \n [in] `hdwp`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__onshowpane\"></a>  CPaneContainer::OnShowPane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void OnShowPane(\n    CDockablePane* pBar,  \n    BOOL bShow);\n```  \n  \n### Parameters  \n [in] `pBar`  \n [in] `bShow`  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__release\"></a>  CPaneContainer::Release  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nDWORD Release();\n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__releaseemptypanecontainer\"></a>  CPaneContainer::ReleaseEmptyPaneContainer  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid ReleaseEmptyPaneContainer();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__removenonvalidpanes\"></a>  CPaneContainer::RemoveNonValidPanes  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid RemoveNonValidPanes();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__removepane\"></a>  CPaneContainer::RemovePane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void RemovePane(CDockablePane* pBar);\n```  \n  \n### Parameters  \n [in] `pBar`  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__resize\"></a>  CPaneContainer::Resize  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void Resize(\n    CRect rect,  \n    HDWP& hdwp,  \n    BOOL bRedraw = FALSE);\n```  \n  \n### Parameters  \n [in] `rect`  \n [in] `hdwp`  \n [in] `bRedraw`  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__resizepane\"></a>  CPaneContainer::ResizePane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void ResizePane(\n    int nOffset,  \n    CPane* pBar,  \n    CPaneContainer* pContainer,  \n    BOOL bHorz,  \n    BOOL bLeftBar,  \n    HDWP& hdwp);\n```  \n  \n### Parameters  \n [in] `nOffset`  \n [in] `pBar`  \n [in] `pContainer`  \n [in] `bHorz`  \n [in] `bLeftBar`  \n [in] `hdwp`  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__resizepartofpanecontainer\"></a>  CPaneContainer::ResizePartOfPaneContainer  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void ResizePartOfPaneContainer(\n    int nOffset,  \n    BOOL bLeftPart,  \n    HDWP& hdwp);\n```  \n  \n### Parameters  \n [in] `nOffset`  \n [in] `bLeftPart`  \n [in] `hdwp`  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__serialize\"></a>  CPaneContainer::Serialize  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid Serialize(CArchive& ar);\n```  \n  \n### Parameters  \n [in] `ar`  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__setpane\"></a>  CPaneContainer::SetPane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid SetPane(\n    CDockablePane* pBar,  \n    BOOL bLeft);\n```  \n  \n### Parameters  \n [in] `pBar`  \n [in] `bLeft`  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__setpanecontainer\"></a>  CPaneContainer::SetPaneContainer  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid SetPaneContainer(\n    CPaneContainer* pContainer,  \n    BOOL bLeft);\n```  \n  \n### Parameters  \n [in] `pContainer`  \n [in] `bLeft`  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__setpanedivider\"></a>  CPaneContainer::SetPaneDivider  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid SetPaneDivider(CPaneDivider* pSlider);\n```  \n  \n### Parameters  \n [in] `pSlider`  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__setparentpanecontainer\"></a>  CPaneContainer::SetParentPaneContainer  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid SetParentPaneContainer(CPaneContainer* p);\n```  \n  \n### Parameters  \n [in] `p`  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__setrecentpercent\"></a>  CPaneContainer::SetRecentPercent  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid SetRecentPercent(int nRecentPercent);\n```  \n  \n### Parameters  \n [in] `nRecentPercent`  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__setupbyid\"></a>  CPaneContainer::SetUpByID  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL SetUpByID(\n    UINT nID,  \n    CDockablePane* pBar);\n```  \n  \n### Parameters  \n [in] `nID`  \n [in] `pBar`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__storerecentdocksiteinfo\"></a>  CPaneContainer::StoreRecentDockSiteInfo  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void StoreRecentDockSiteInfo(CDockablePane* pBar);\n```  \n  \n### Parameters  \n [in] `pBar`  \n  \n### Remarks  \n  \n##  <a name=\"cpanecontainer__stretchpanecontainer\"></a>  CPaneContainer::StretchPaneContainer  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual int StretchPaneContainer(\n    int nOffset,  \n    BOOL bStretchHorz,  \n    BOOL bLeftBar,  \n    BOOL bMoveSlider,  \n    HDWP& hdwp);\n```  \n  \n### Parameters  \n [in] `nOffset`  \n [in] `bStretchHorz`  \n [in] `bLeftBar`  \n [in] `bMoveSlider`  \n [in] `hdwp`  \n  \n### Return Value  \n  \n### Remarks  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)   \n [CObject Class](../../mfc/reference/cobject-class.md)   \n [CPaneContainerManager Class](../../mfc/reference/cpanecontainermanager-class.md)\n"}