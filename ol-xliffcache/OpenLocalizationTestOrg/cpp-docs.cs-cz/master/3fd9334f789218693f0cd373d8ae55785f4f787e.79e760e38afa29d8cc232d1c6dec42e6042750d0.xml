{"nodes":[{"pos":[12,55],"content":"CMFCPropertyGridCtrl Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CMFCPropertyGridCtrl Class | Microsoft Docs","pos":[0,43]}]},{"pos":[1130,1156],"content":"CMFCPropertyGridCtrl Class","linkify":"CMFCPropertyGridCtrl Class","nodes":[{"content":"CMFCPropertyGridCtrl Class","pos":[0,26]}]},{"content":"Supports an editable property grid control that can display properties in alphabetical or hierarchical order.","pos":[1263,1372]},{"pos":[1381,1387],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1454,1461],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[1471,1490],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[1497,1501]},{"content":"Description","pos":[1502,1513]},{"pos":[1551,1640],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::CMFCPropertyGridCtrl<ept id=\"p1\">](#cmfcpropertygridctrl__cmfcpropertygridctrl)</ept>","source":"[CMFCPropertyGridCtrl::CMFCPropertyGridCtrl](#cmfcpropertygridctrl__cmfcpropertygridctrl)"},{"pos":[1641,1684],"content":"Constructs a <ph id=\"ph1\">`CMFCPropertyGridCtrl`</ph> object.","source":"Constructs a `CMFCPropertyGridCtrl` object."},{"content":"Destructor.","pos":[1735,1746]},{"pos":[1757,1771],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1778,1782]},{"content":"Description","pos":[1783,1794]},{"content":"Called by the framework to retrieve the child element or child object at a given point on the screen.","pos":[1867,1968]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CWnd::accHitTest<ept id=\"p1\">](../../mfc/reference/cwnd-class.md#cwnd__acchittest)</ept>.)","pos":[1969,2052],"source":" (Overrides [CWnd::accHitTest](../../mfc/reference/cwnd-class.md#cwnd__acchittest).)"},{"content":"Called by the framework to retrieve the specified object's current screen location.","pos":[2093,2176]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CWnd::accLocation<ept id=\"p1\">](../../mfc/reference/cwnd-class.md#cwnd__acclocation)</ept>.)","pos":[2177,2262],"source":" (Overrides [CWnd::accLocation](../../mfc/reference/cwnd-class.md#cwnd__acclocation).)"},{"pos":[2267,2334],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::accSelect<ept id=\"p1\">](#cmfcpropertygridctrl__accselect)</ept>","source":"[CMFCPropertyGridCtrl::accSelect](#cmfcpropertygridctrl__accselect)"},{"content":"Called by the framework to modify the selection or move the keyboard focus of the specified object.","pos":[2335,2434]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CWnd::accSelect<ept id=\"p1\">](../../mfc/reference/cwnd-class.md#cwnd__accselect)</ept>.)","pos":[2435,2516],"source":" (Overrides [CWnd::accSelect](../../mfc/reference/cwnd-class.md#cwnd__accselect).)"},{"pos":[2521,2592],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::AddProperty<ept id=\"p1\">](#cmfcpropertygridctrl__addproperty)</ept>","source":"[CMFCPropertyGridCtrl::AddProperty](#cmfcpropertygridctrl__addproperty)"},{"content":"Adds a new property to a property grid control.","pos":[2593,2640]},{"pos":[2645,2736],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::AlwaysShowUserToolTip<ept id=\"p1\">](#cmfcpropertygridctrl__alwaysshowusertooltip)</ept>","source":"[CMFCPropertyGridCtrl::AlwaysShowUserToolTip](#cmfcpropertygridctrl__alwaysshowusertooltip)"},{"pos":[2742,2821],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::CloseColorPopup<ept id=\"p1\">](#cmfcpropertygridctrl__closecolorpopup)</ept>","source":"[CMFCPropertyGridCtrl::CloseColorPopup](#cmfcpropertygridctrl__closecolorpopup)"},{"content":"Closes the color selection dialog box.","pos":[2822,2860]},{"pos":[2865,2926],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::Create<ept id=\"p1\">](#cmfcpropertygridctrl__create)</ept>","source":"[CMFCPropertyGridCtrl::Create](#cmfcpropertygridctrl__create)"},{"content":"Creates a property grid control and attaches it to the property grid control object.","pos":[2927,3011]},{"pos":[3016,3093],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::DeleteProperty<ept id=\"p1\">](#cmfcpropertygridctrl__deleteproperty)</ept>","source":"[CMFCPropertyGridCtrl::DeleteProperty](#cmfcpropertygridctrl__deleteproperty)"},{"content":"Deletes the specified property from the property grid control.","pos":[3094,3156]},{"pos":[3161,3250],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::DrawControlBarColors<ept id=\"p1\">](#cmfcpropertygridctrl__drawcontrolbarcolors)</ept>","source":"[CMFCPropertyGridCtrl::DrawControlBarColors](#cmfcpropertygridctrl__drawcontrolbarcolors)"},{"pos":[3256,3347],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::EnableDescriptionArea<ept id=\"p1\">](#cmfcpropertygridctrl__enabledescriptionarea)</ept>","source":"[CMFCPropertyGridCtrl::EnableDescriptionArea](#cmfcpropertygridctrl__enabledescriptionarea)"},{"content":"Enables or disables the description area that is displayed underneath the list of properties.","pos":[3348,3441]},{"pos":[3446,3527],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::EnableHeaderCtrl<ept id=\"p1\">](#cmfcpropertygridctrl__enableheaderctrl)</ept>","source":"[CMFCPropertyGridCtrl::EnableHeaderCtrl](#cmfcpropertygridctrl__enableheaderctrl)"},{"content":"Enables or disables the header control at the top of the property grid control.","pos":[3528,3607]},{"pos":[3612,3687],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::EnsureVisible<ept id=\"p1\">](#cmfcpropertygridctrl__ensurevisible)</ept>","source":"[CMFCPropertyGridCtrl::EnsureVisible](#cmfcpropertygridctrl__ensurevisible)"},{"content":"Scrolls a property grid control and expands property items until the specified property is visible.","pos":[3688,3787]},{"pos":[3792,3859],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::ExpandAll<ept id=\"p1\">](#cmfcpropertygridctrl__expandall)</ept>","source":"[CMFCPropertyGridCtrl::ExpandAll](#cmfcpropertygridctrl__expandall)"},{"content":"Expands or collapses all property grid control nodes.","pos":[3860,3913]},{"pos":[3918,3995],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::FindItemByData<ept id=\"p1\">](#cmfcpropertygridctrl__finditembydata)</ept>","source":"[CMFCPropertyGridCtrl::FindItemByData](#cmfcpropertygridctrl__finditembydata)"},{"pos":[3996,4072],"content":"Retrieves the property that is associated with a user-defined <ph id=\"ph1\">`DWORD`</ph> value.","source":"Retrieves the property that is associated with a user-defined `DWORD` value."},{"content":"Called by the framework to retrieve the address of an <ph id=\"ph1\">`IDispatch`</ph> interface for the specified child.","pos":[4114,4214],"source":"Called by the framework to retrieve the address of an `IDispatch` interface for the specified child."},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CWnd::get_accChild<ept id=\"p1\">](../../mfc/reference/cwnd-class.md#cwnd__get_accchild)</ept>.)","pos":[4215,4302],"source":" (Overrides [CWnd::get_accChild](../../mfc/reference/cwnd-class.md#cwnd__get_accchild).)"},{"pos":[4307,4390],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::get_accChildCount<ept id=\"p1\">](#cmfcpropertygridctrl__get_accchildcount)</ept>","source":"[CMFCPropertyGridCtrl::get_accChildCount](#cmfcpropertygridctrl__get_accchildcount)"},{"content":"Called by the framework to retrieve the number of children belonging to this object.","pos":[4391,4475]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CWnd::get_accChildCount<ept id=\"p1\">](../../mfc/reference/cwnd-class.md#cwnd__get_accchildcount)</ept>.)","pos":[4476,4573],"source":" (Overrides [CWnd::get_accChildCount](../../mfc/reference/cwnd-class.md#cwnd__get_accchildcount).)"},{"content":"Called by the framework to retrieve a string that describes the object's default action.","pos":[4623,4711]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CWnd::get_accDefaultAction<ept id=\"p1\">](../../mfc/reference/cwnd-class.md#cwnd__get_accdefaultaction)</ept>.)","pos":[4712,4815],"source":" (Overrides [CWnd::get_accDefaultAction](../../mfc/reference/cwnd-class.md#cwnd__get_accdefaultaction).)"},{"content":"Called by framework to retrieve a string that describes the visual appearance of the specified object.","pos":[4863,4965]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CWnd::get_accDescription<ept id=\"p1\">](../../mfc/reference/cwnd-class.md#cwnd__get_accdescription)</ept>.)","pos":[4966,5065],"source":" (Overrides [CWnd::get_accDescription](../../mfc/reference/cwnd-class.md#cwnd__get_accdescription).)"},{"pos":[5070,5143],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::get_accFocus<ept id=\"p1\">](#cmfcpropertygridctrl__get_accfocus)</ept>","source":"[CMFCPropertyGridCtrl::get_accFocus](#cmfcpropertygridctrl__get_accfocus)"},{"content":"Called by the framework to retrieve the object that has the keyboard focus.","pos":[5144,5219]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CWnd::get_accFocus<ept id=\"p1\">](../../mfc/reference/cwnd-class.md#cwnd__get_accfocus)</ept>.)","pos":[5220,5307],"source":" (Overrides [CWnd::get_accFocus](../../mfc/reference/cwnd-class.md#cwnd__get_accfocus).)"},{"pos":[5312,5383],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::get_accHelp<ept id=\"p1\">](#cmfcpropertygridctrl__get_acchelp)</ept>","source":"[CMFCPropertyGridCtrl::get_accHelp](#cmfcpropertygridctrl__get_acchelp)"},{"content":"Called by the framework to retrieve an object's <ph id=\"ph1\">`Help`</ph> property string.","pos":[5384,5455],"source":"Called by the framework to retrieve an object's `Help` property string."},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CWnd::get_accHelp<ept id=\"p1\">](../../mfc/reference/cwnd-class.md#cwnd__get_acchelp)</ept>.)","pos":[5456,5541],"source":" (Overrides [CWnd::get_accHelp](../../mfc/reference/cwnd-class.md#cwnd__get_acchelp).)"},{"pos":[5546,5627],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::get_accHelpTopic<ept id=\"p1\">](#cmfcpropertygridctrl__get_acchelptopic)</ept>","source":"[CMFCPropertyGridCtrl::get_accHelpTopic](#cmfcpropertygridctrl__get_acchelptopic)"},{"content":"Called by the framework to retrieve the full path of the <ph id=\"ph1\">`WinHelp`</ph>file associated with the specified object and the identifier of the appropriate topic within that file.","pos":[5628,5797],"source":"Called by the framework to retrieve the full path of the `WinHelp`file associated with the specified object and the identifier of the appropriate topic within that file."},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CWnd::get_accHelpTopic<ept id=\"p1\">](../../mfc/reference/cwnd-class.md#cwnd__get_acchelptopic)</ept>.)","pos":[5798,5893],"source":" (Overrides [CWnd::get_accHelpTopic](../../mfc/reference/cwnd-class.md#cwnd__get_acchelptopic).)"},{"pos":[5898,5993],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::get_accKeyboardShortcut<ept id=\"p1\">](#cmfcpropertygridctrl__get_acckeyboardshortcut)</ept>","source":"[CMFCPropertyGridCtrl::get_accKeyboardShortcut](#cmfcpropertygridctrl__get_acckeyboardshortcut)"},{"content":"Called by the framework to retrieve the specified object's shortcut key or access key.","pos":[5994,6080]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CWnd::get_accKeyboardShortcut<ept id=\"p1\">](../../mfc/reference/cwnd-class.md#cwnd__get_acckeyboardshortcut)</ept>.)","pos":[6081,6190],"source":" (Overrides [CWnd::get_accKeyboardShortcut](../../mfc/reference/cwnd-class.md#cwnd__get_acckeyboardshortcut).)"},{"content":"Called by the framework to retrieve the name of the specified object.","pos":[6231,6300]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CWnd::get_accName<ept id=\"p1\">](../../mfc/reference/cwnd-class.md#cwnd__get_accname)</ept>.)","pos":[6301,6386],"source":" (Overrides [CWnd::get_accName](../../mfc/reference/cwnd-class.md#cwnd__get_accname).)"},{"content":"Called by the framework to retrieve information that describes the role of the specified object.","pos":[6427,6523]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CWnd::get_accRole<ept id=\"p1\">](../../mfc/reference/cwnd-class.md#cwnd__get_accrole)</ept>.)","pos":[6524,6609],"source":" (Overrides [CWnd::get_accRole](../../mfc/reference/cwnd-class.md#cwnd__get_accrole).)"},{"pos":[6614,6695],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::get_accSelection<ept id=\"p1\">](#cmfcpropertygridctrl__get_accselection)</ept>","source":"[CMFCPropertyGridCtrl::get_accSelection](#cmfcpropertygridctrl__get_accselection)"},{"content":"Called by the framework to retrieve the selected children of this object.","pos":[6696,6769]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CWnd::get_accSelection<ept id=\"p1\">](../../mfc/reference/cwnd-class.md#cwnd__get_accselection)</ept>.)","pos":[6770,6865],"source":" (Overrides [CWnd::get_accSelection](../../mfc/reference/cwnd-class.md#cwnd__get_accselection).)"},{"content":"Called by the framework to retrieve the current state of the specified object.","pos":[6907,6985]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CWnd::get_accState<ept id=\"p1\">](../../mfc/reference/cwnd-class.md#cwnd__get_accstate)</ept>.)","pos":[6986,7073],"source":" (Overrides [CWnd::get_accState](../../mfc/reference/cwnd-class.md#cwnd__get_accstate).)"},{"content":"Called by the framework to retrieve the value of the specified object.","pos":[7115,7185]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CWnd::get_accValue<ept id=\"p1\">](../../mfc/reference/cwnd-class.md#cwnd__get_accvalue)</ept>.)","pos":[7186,7273],"source":" (Overrides [CWnd::get_accValue](../../mfc/reference/cwnd-class.md#cwnd__get_accvalue).)"},{"pos":[7278,7347],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::GetBkColor<ept id=\"p1\">](#cmfcpropertygridctrl__getbkcolor)</ept>","source":"[CMFCPropertyGridCtrl::GetBkColor](#cmfcpropertygridctrl__getbkcolor)"},{"content":"Retrieves the background color of the current property grid control.","pos":[7348,7416]},{"pos":[7421,7492],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::GetBoldFont<ept id=\"p1\">](#cmfcpropertygridctrl__getboldfont)</ept>","source":"[CMFCPropertyGridCtrl::GetBoldFont](#cmfcpropertygridctrl__getboldfont)"},{"content":"Retrieves the Windows font that of text in the current property grid control in bold style.","pos":[7493,7584]},{"pos":[7589,7656],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::GetCurSel<ept id=\"p1\">](#cmfcpropertygridctrl__getcursel)</ept>","source":"[CMFCPropertyGridCtrl::GetCurSel](#cmfcpropertygridctrl__getcursel)"},{"content":"Retrieves the currently selected property.","pos":[7657,7699]},{"pos":[7704,7783],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::GetCustomColors<ept id=\"p1\">](#cmfcpropertygridctrl__getcustomcolors)</ept>","source":"[CMFCPropertyGridCtrl::GetCustomColors](#cmfcpropertygridctrl__getcustomcolors)"},{"content":"Retrieves the custom colors that are currently defined for property grid control elements.","pos":[7784,7874]},{"pos":[7879,7968],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::GetDescriptionHeight<ept id=\"p1\">](#cmfcpropertygridctrl__getdescriptionheight)</ept>","source":"[CMFCPropertyGridCtrl::GetDescriptionHeight](#cmfcpropertygridctrl__getdescriptionheight)"},{"content":"Retrieves the height of the description area located at the bottom of the property grid control.","pos":[7969,8065]},{"pos":[8070,8155],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::GetDescriptionRows<ept id=\"p1\">](#cmfcpropertygridctrl__getdescriptionrows)</ept>","source":"[CMFCPropertyGridCtrl::GetDescriptionRows](#cmfcpropertygridctrl__getdescriptionrows)"},{"content":"Retrieves the number of rows in the description area of the current property grid control.","pos":[8156,8246]},{"pos":[8251,8326],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::GetHeaderCtrl<ept id=\"p1\">](#cmfcpropertygridctrl__getheaderctrl)</ept>","source":"[CMFCPropertyGridCtrl::GetHeaderCtrl](#cmfcpropertygridctrl__getheaderctrl)"},{"pos":[8327,8488],"content":"Retrieves the internal <bpt id=\"p1\">[</bpt>CMFCHeaderCtrl<ept id=\"p1\">](../../mfc/reference/cmfcheaderctrl-class.md)</ept> object that the framework uses to display the current property grid control.","source":"Retrieves the internal [CMFCHeaderCtrl](../../mfc/reference/cmfcheaderctrl-class.md) object that the framework uses to display the current property grid control."},{"pos":[8493,8572],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::GetHeaderHeight<ept id=\"p1\">](#cmfcpropertygridctrl__getheaderheight)</ept>","source":"[CMFCPropertyGridCtrl::GetHeaderHeight](#cmfcpropertygridctrl__getheaderheight)"},{"content":"Retrieves the height of the property grid control header.","pos":[8573,8630]},{"pos":[8635,8720],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::GetLeftColumnWidth<ept id=\"p1\">](#cmfcpropertygridctrl__getleftcolumnwidth)</ept>","source":"[CMFCPropertyGridCtrl::GetLeftColumnWidth](#cmfcpropertygridctrl__getleftcolumnwidth)"},{"content":"Retrieves the width of the left column of the current property grid control, which contains the name of each property.","pos":[8721,8839]},{"pos":[8844,8915],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::GetListRect<ept id=\"p1\">](#cmfcpropertygridctrl__getlistrect)</ept>","source":"[CMFCPropertyGridCtrl::GetListRect](#cmfcpropertygridctrl__getlistrect)"},{"content":"Retrieves the bounding rectangle of the property grid control.","pos":[8916,8978]},{"pos":[8983,9054],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::GetProperty<ept id=\"p1\">](#cmfcpropertygridctrl__getproperty)</ept>","source":"[CMFCPropertyGridCtrl::GetProperty](#cmfcpropertygridctrl__getproperty)"},{"content":"Retrieves a pointer to the property object that corresponds to the specified index of a property grid control item.","pos":[9055,9170]},{"pos":[9175,9268],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::GetPropertyColumnWidth<ept id=\"p1\">](#cmfcpropertygridctrl__getpropertycolumnwidth)</ept>","source":"[CMFCPropertyGridCtrl::GetPropertyColumnWidth](#cmfcpropertygridctrl__getpropertycolumnwidth)"},{"content":"Retrieves the current width of the column that contains property values.","pos":[9269,9341]},{"pos":[9346,9427],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::GetPropertyCount<ept id=\"p1\">](#cmfcpropertygridctrl__getpropertycount)</ept>","source":"[CMFCPropertyGridCtrl::GetPropertyCount](#cmfcpropertygridctrl__getpropertycount)"},{"content":"Retrieves the number of properties in a property grid control.","pos":[9428,9490]},{"pos":[9495,9568],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::GetRowHeight<ept id=\"p1\">](#cmfcpropertygridctrl__getrowheight)</ept>","source":"[CMFCPropertyGridCtrl::GetRowHeight](#cmfcpropertygridctrl__getrowheight)"},{"content":"Retrieves the height of a row in the property grid control.","pos":[9569,9628]},{"pos":[9633,9714],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::GetScrollBarCtrl<ept id=\"p1\">](#cmfcpropertygridctrl__getscrollbarctrl)</ept>","source":"[CMFCPropertyGridCtrl::GetScrollBarCtrl](#cmfcpropertygridctrl__getscrollbarctrl)"},{"content":"Retrieves a pointer to the scroll bar control in the property grid control.","pos":[9715,9790]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CWnd::GetScrollBarCtrl<ept id=\"p1\">](../../mfc/reference/cwnd-class.md#cwnd__getscrollbarctrl)</ept>.)","pos":[9791,9886],"source":" (Overrides [CWnd::GetScrollBarCtrl](../../mfc/reference/cwnd-class.md#cwnd__getscrollbarctrl).)"},{"pos":[9891,9964],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::GetTextColor<ept id=\"p1\">](#cmfcpropertygridctrl__gettextcolor)</ept>","source":"[CMFCPropertyGridCtrl::GetTextColor](#cmfcpropertygridctrl__gettextcolor)"},{"content":"Retrieves the color of the text of property items in the current property grid control.","pos":[9965,10052]},{"pos":[10094,10254],"content":"Used by the framework to obtain a pointer to the <bpt id=\"p1\">[</bpt>CRuntimeClass<ept id=\"p1\">](../../mfc/reference/cruntimeclass-structure.md)</ept> object that is associated with this class type.","source":"Used by the framework to obtain a pointer to the [CRuntimeClass](../../mfc/reference/cruntimeclass-structure.md) object that is associated with this class type."},{"pos":[10259,10322],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::HitTest<ept id=\"p1\">](#cmfcpropertygridctrl__hittest)</ept>","source":"[CMFCPropertyGridCtrl::HitTest](#cmfcpropertygridctrl__hittest)"},{"content":"Retrieves a pointer to the property object that corresponds to a property grid control item if a specified point is in the item.","pos":[10323,10451]},{"content":"This method also indicates the area in the property grid control that contains the point.","pos":[10452,10541]},{"pos":[10546,10615],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::InitHeader<ept id=\"p1\">](#cmfcpropertygridctrl__initheader)</ept>","source":"[CMFCPropertyGridCtrl::InitHeader](#cmfcpropertygridctrl__initheader)"},{"pos":[10616,10779],"content":"Initializes the internal <bpt id=\"p1\">[</bpt>CMFCHeaderCtrl<ept id=\"p1\">](../../mfc/reference/cmfcheaderctrl-class.md)</ept> object that the framework uses to display the current property grid control.","source":"Initializes the internal [CMFCHeaderCtrl](../../mfc/reference/cmfcheaderctrl-class.md) object that the framework uses to display the current property grid control."},{"pos":[10784,10865],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::IsAlphabeticMode<ept id=\"p1\">](#cmfcpropertygridctrl__isalphabeticmode)</ept>","source":"[CMFCPropertyGridCtrl::IsAlphabeticMode](#cmfcpropertygridctrl__isalphabeticmode)"},{"content":"Indicates whether a property grid control is in alphabetic mode.","pos":[10866,10930]},{"pos":[10935,11030],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::IsAlwaysShowUserToolTip<ept id=\"p1\">](#cmfcpropertygridctrl__isalwaysshowusertooltip)</ept>","source":"[CMFCPropertyGridCtrl::IsAlwaysShowUserToolTip](#cmfcpropertygridctrl__isalwaysshowusertooltip)"},{"pos":[11036,11119],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::IsDescriptionArea<ept id=\"p1\">](#cmfcpropertygridctrl__isdescriptionarea)</ept>","source":"[CMFCPropertyGridCtrl::IsDescriptionArea](#cmfcpropertygridctrl__isdescriptionarea)"},{"content":"Indicates whether the description area of the property grid control is displayed.","pos":[11120,11201]},{"pos":[11206,11295],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::IsGroupNameFullWidth<ept id=\"p1\">](#cmfcpropertygridctrl__isgroupnamefullwidth)</ept>","source":"[CMFCPropertyGridCtrl::IsGroupNameFullWidth](#cmfcpropertygridctrl__isgroupnamefullwidth)"},{"content":"Indicates whether each property group name is displayed across the width of the current property grid control.","pos":[11296,11406]},{"pos":[11411,11484],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::IsHeaderCtrl<ept id=\"p1\">](#cmfcpropertygridctrl__isheaderctrl)</ept>","source":"[CMFCPropertyGridCtrl::IsHeaderCtrl](#cmfcpropertygridctrl__isheaderctrl)"},{"content":"Indicates whether the header control is displayed.","pos":[11485,11535]},{"pos":[11540,11637],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::IsMarkModifiedProperties<ept id=\"p1\">](#cmfcpropertygridctrl__ismarkmodifiedproperties)</ept>","source":"[CMFCPropertyGridCtrl::IsMarkModifiedProperties](#cmfcpropertygridctrl__ismarkmodifiedproperties)"},{"content":"Indicates how the property grid control displays modified properties.","pos":[11638,11707]},{"pos":[11712,11795],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::IsShowDragContext<ept id=\"p1\">](#cmfcpropertygridctrl__isshowdragcontext)</ept>","source":"[CMFCPropertyGridCtrl::IsShowDragContext](#cmfcpropertygridctrl__isshowdragcontext)"},{"content":"Indicates whether the framework redraws the name and value columns of the current property grid control when a user resizes the columns.","pos":[11796,11932]},{"pos":[11937,12014],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::IsVSDotNetLook<ept id=\"p1\">](#cmfcpropertygridctrl__isvsdotnetlook)</ept>","source":"[CMFCPropertyGridCtrl::IsVSDotNetLook](#cmfcpropertygridctrl__isvsdotnetlook)"},{"content":"Indicates whether the appearance of the property grid control is in the style that is used by VS .NET.","pos":[12015,12117]},{"pos":[12122,12215],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::MarkModifiedProperties<ept id=\"p1\">](#cmfcpropertygridctrl__markmodifiedproperties)</ept>","source":"[CMFCPropertyGridCtrl::MarkModifiedProperties](#cmfcpropertygridctrl__markmodifiedproperties)"},{"content":"Specifies how to display modified properties.","pos":[12216,12261]},{"content":"Used by class <bpt id=\"p1\">[</bpt>CWinApp<ept id=\"p1\">](../../mfc/reference/cwinapp-class.md)</ept> to translate window messages before they are dispatched to the <bpt id=\"p2\">[</bpt>TranslateMessage<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms644955)</ept> and <bpt id=\"p3\">[</bpt>DispatchMessage<ept id=\"p3\">](http://msdn.microsoft.com/library/windows/desktop/ms644934)</ept> Windows functions.","pos":[12310,12614],"source":"Used by class [CWinApp](../../mfc/reference/cwinapp-class.md) to translate window messages before they are dispatched to the [TranslateMessage](http://msdn.microsoft.com/library/windows/desktop/ms644955) and [DispatchMessage](http://msdn.microsoft.com/library/windows/desktop/ms644934) Windows functions."},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CWnd::PreTranslateMessage<ept id=\"p1\">](../../mfc/reference/cwnd-class.md#cwnd__pretranslatemessage)</ept>.)","pos":[12615,12716],"source":" (Overrides [CWnd::PreTranslateMessage](../../mfc/reference/cwnd-class.md#cwnd__pretranslatemessage).)"},{"pos":[12721,12788],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::RemoveAll<ept id=\"p1\">](#cmfcpropertygridctrl__removeall)</ept>","source":"[CMFCPropertyGridCtrl::RemoveAll](#cmfcpropertygridctrl__removeall)"},{"content":"Removes all property objects from a property grid control.","pos":[12789,12847]},{"pos":[12852,12939],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::ResetOriginalValues<ept id=\"p1\">](#cmfcpropertygridctrl__resetoriginalvalues)</ept>","source":"[CMFCPropertyGridCtrl::ResetOriginalValues](#cmfcpropertygridctrl__resetoriginalvalues)"},{"content":"Restores the original value of all properties.","pos":[12940,12986]},{"pos":[12991,13074],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::SetAlphabeticMode<ept id=\"p1\">](#cmfcpropertygridctrl__setalphabeticmode)</ept>","source":"[CMFCPropertyGridCtrl::SetAlphabeticMode](#cmfcpropertygridctrl__setalphabeticmode)"},{"content":"Sets or resets alphabetical mode.","pos":[13075,13108]},{"pos":[13113,13188],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::SetBoolLabels<ept id=\"p1\">](#cmfcpropertygridctrl__setboollabels)</ept>","source":"[CMFCPropertyGridCtrl::SetBoolLabels](#cmfcpropertygridctrl__setboollabels)"},{"content":"Specifies the text of Boolean labels.","pos":[13189,13226]},{"pos":[13231,13298],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::SetCurSel<ept id=\"p1\">](#cmfcpropertygridctrl__setcursel)</ept>","source":"[CMFCPropertyGridCtrl::SetCurSel](#cmfcpropertygridctrl__setcursel)"},{"content":"Selects a property in a property grid control.","pos":[13299,13345]},{"pos":[13350,13429],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::SetCustomColors<ept id=\"p1\">](#cmfcpropertygridctrl__setcustomcolors)</ept>","source":"[CMFCPropertyGridCtrl::SetCustomColors](#cmfcpropertygridctrl__setcustomcolors)"},{"content":"Specifies custom colors for various property grid control elements.","pos":[13430,13497]},{"pos":[13502,13587],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::SetDescriptionRows<ept id=\"p1\">](#cmfcpropertygridctrl__setdescriptionrows)</ept>","source":"[CMFCPropertyGridCtrl::SetDescriptionRows](#cmfcpropertygridctrl__setdescriptionrows)"},{"content":"Specifies the number of rows to display in the description section of the current property grid control.","pos":[13588,13692]},{"pos":[13697,13788],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::SetGroupNameFullWidth<ept id=\"p1\">](#cmfcpropertygridctrl__setgroupnamefullwidth)</ept>","source":"[CMFCPropertyGridCtrl::SetGroupNameFullWidth](#cmfcpropertygridctrl__setgroupnamefullwidth)"},{"content":"Specifies whether to display the full width of the category name for a group of properties in the current property grid control.","pos":[13789,13917]},{"pos":[13922,14003],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::SetListDelimiter<ept id=\"p1\">](#cmfcpropertygridctrl__setlistdelimiter)</ept>","source":"[CMFCPropertyGridCtrl::SetListDelimiter](#cmfcpropertygridctrl__setlistdelimiter)"},{"content":"Defines a character that will be used as a delimiter in a list of property values.","pos":[14004,14086]},{"pos":[14091,14176],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::SetShowDragContext<ept id=\"p1\">](#cmfcpropertygridctrl__setshowdragcontext)</ept>","source":"[CMFCPropertyGridCtrl::SetShowDragContext](#cmfcpropertygridctrl__setshowdragcontext)"},{"content":"Specifies whether the framework redraws the name and value columns of the current property grid control when a user resizes the columns.","pos":[14177,14313]},{"pos":[14318,14397],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::SetVSDotNetLook<ept id=\"p1\">](#cmfcpropertygridctrl__setvsdotnetlook)</ept>","source":"[CMFCPropertyGridCtrl::SetVSDotNetLook](#cmfcpropertygridctrl__setvsdotnetlook)"},{"content":"Sets the appearance of the property grid control to the style that is used in VS .NET.","pos":[14398,14484]},{"pos":[14489,14560],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::UpdateColor<ept id=\"p1\">](#cmfcpropertygridctrl__updatecolor)</ept>","source":"[CMFCPropertyGridCtrl::UpdateColor](#cmfcpropertygridctrl__updatecolor)"},{"content":"Sets the color value of the currently selected color property.","pos":[14561,14623]},{"pos":[14634,14651],"content":"Protected Methods","linkify":"Protected Methods","nodes":[{"content":"Protected Methods","pos":[0,17]}]},{"content":"Name","pos":[14658,14662]},{"content":"Description","pos":[14663,14674]},{"pos":[14712,14785],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::AdjustLayout<ept id=\"p1\">](#cmfcpropertygridctrl__adjustlayout)</ept>","source":"[CMFCPropertyGridCtrl::AdjustLayout](#cmfcpropertygridctrl__adjustlayout)"},{"content":"Redraws the property grid control and its properties.","pos":[14786,14839]},{"pos":[14844,14917],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::CompareProps<ept id=\"p1\">](#cmfcpropertygridctrl__compareprops)</ept>","source":"[CMFCPropertyGridCtrl::CompareProps](#cmfcpropertygridctrl__compareprops)"},{"content":"Called by the property grid control to sort properties.","pos":[14918,14973]},{"pos":[14978,15043],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::EditItem<ept id=\"p1\">](#cmfcpropertygridctrl__edititem)</ept>","source":"[CMFCPropertyGridCtrl::EditItem](#cmfcpropertygridctrl__edititem)"},{"content":"Called by the framework when the user starts to modify a property.","pos":[15044,15110]},{"pos":[15115,15186],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::EndEditItem<ept id=\"p1\">](#cmfcpropertygridctrl__endedititem)</ept>","source":"[CMFCPropertyGridCtrl::EndEditItem](#cmfcpropertygridctrl__endedititem)"},{"content":"Called by the framework when the user stops modifying a property.","pos":[15187,15252]},{"pos":[15257,15314],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::Init<ept id=\"p1\">](#cmfcpropertygridctrl__init)</ept>","source":"[CMFCPropertyGridCtrl::Init](#cmfcpropertygridctrl__init)"},{"content":"Called by the framework to initialize a property grid control.","pos":[15315,15377]},{"pos":[15382,15465],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::OnChangeSelection<ept id=\"p1\">](#cmfcpropertygridctrl__onchangeselection)</ept>","source":"[CMFCPropertyGridCtrl::OnChangeSelection](#cmfcpropertygridctrl__onchangeselection)"},{"content":"Called by the framework when the current selection is changed.","pos":[15466,15528]},{"pos":[15533,15608],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::OnClickButton<ept id=\"p1\">](#cmfcpropertygridctrl__onclickbutton)</ept>","source":"[CMFCPropertyGridCtrl::OnClickButton](#cmfcpropertygridctrl__onclickbutton)"},{"content":"Called by the framework when a property button is clicked.","pos":[15609,15667]},{"pos":[15672,15745],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::OnDrawBorder<ept id=\"p1\">](#cmfcpropertygridctrl__ondrawborder)</ept>","source":"[CMFCPropertyGridCtrl::OnDrawBorder](#cmfcpropertygridctrl__ondrawborder)"},{"content":"Called by the framework to draw a border around a property grid control.","pos":[15746,15818]},{"pos":[15823,15906],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::OnDrawDescription<ept id=\"p1\">](#cmfcpropertygridctrl__ondrawdescription)</ept>","source":"[CMFCPropertyGridCtrl::OnDrawDescription](#cmfcpropertygridctrl__ondrawdescription)"},{"content":"Called by the framework to draw the description area and display the description text.","pos":[15907,15993]},{"pos":[15998,16067],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::OnDrawList<ept id=\"p1\">](#cmfcpropertygridctrl__ondrawlist)</ept>","source":"[CMFCPropertyGridCtrl::OnDrawList](#cmfcpropertygridctrl__ondrawlist)"},{"content":"Called by the framework to display the list of properties in the property grid control.","pos":[16068,16155]},{"pos":[16160,16237],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::OnDrawProperty<ept id=\"p1\">](#cmfcpropertygridctrl__ondrawproperty)</ept>","source":"[CMFCPropertyGridCtrl::OnDrawProperty](#cmfcpropertygridctrl__ondrawproperty)"},{"content":"Called by the framework to display a property.","pos":[16238,16284]},{"pos":[16289,16372],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::OnPropertyChanged<ept id=\"p1\">](#cmfcpropertygridctrl__onpropertychanged)</ept>","source":"[CMFCPropertyGridCtrl::OnPropertyChanged](#cmfcpropertygridctrl__onpropertychanged)"},{"content":"Called by the framework when the value of a property is changed.","pos":[16373,16437]},{"pos":[16442,16517],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::OnSelectCombo<ept id=\"p1\">](#cmfcpropertygridctrl__onselectcombo)</ept>","source":"[CMFCPropertyGridCtrl::OnSelectCombo](#cmfcpropertygridctrl__onselectcombo)"},{"content":"Called by the framework when a property that contains a combo box control is selected.","pos":[16518,16604]},{"pos":[16609,16690],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::ValidateItemData<ept id=\"p1\">](#cmfcpropertygridctrl__validateitemdata)</ept>","source":"[CMFCPropertyGridCtrl::ValidateItemData](#cmfcpropertygridctrl__validateitemdata)"},{"content":"Called by the framework to validate property data.","pos":[16691,16741]},{"pos":[16751,16758],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`CMFCPropertyGridCtrl`</ph> class displays a property grid control that contains editable properties derived from the <bpt id=\"p1\">[</bpt>CMFCPropertyGridProperty<ept id=\"p1\">](../../mfc/reference/cmfcpropertygridproperty-class.md)</ept> class.","pos":[16762,16967],"source":"The `CMFCPropertyGridCtrl` class displays a property grid control that contains editable properties derived from the [CMFCPropertyGridProperty](../../mfc/reference/cmfcpropertygridproperty-class.md) class."},{"content":"Each property can represent a type and it can contain subitems.","pos":[16968,17031]},{"content":"The property grid control supports a resizable area at the bottom that can display the description of a selected property.","pos":[17032,17154]},{"content":"To use a property grid control, construct a <ph id=\"ph1\">`CMFCPropertyGridCtrl`</ph> object and then call the <bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::Create<ept id=\"p1\">](#cmfcpropertygridctrl__create)</ept> method.","pos":[17161,17322],"source":"To use a property grid control, construct a `CMFCPropertyGridCtrl` object and then call the [CMFCPropertyGridCtrl::Create](#cmfcpropertygridctrl__create) method."},{"content":"Use the <bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::AddProperty<ept id=\"p1\">](#cmfcpropertygridctrl__addproperty)</ept> method to add properties to the list.","pos":[17323,17440],"source":" Use the [CMFCPropertyGridCtrl::AddProperty](#cmfcpropertygridctrl__addproperty) method to add properties to the list."},{"pos":[17449,17469],"content":"Selection Properties","linkify":"Selection Properties","nodes":[{"content":"Selection Properties","pos":[0,20]}]},{"content":"Instead of representing a value, a property item can start a dialog box that enables the user to select a color, file, or font.","pos":[17473,17600]},{"content":"The following table lists four selection property types:","pos":[17607,17663]},{"content":"Class","pos":[17670,17675]},{"content":"Description","pos":[17676,17687]},{"pos":[17726,17813],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridProperty Class<ept id=\"p1\">](../../mfc/reference/cmfcpropertygridproperty-class.md)</ept>","source":"[CMFCPropertyGridProperty Class](../../mfc/reference/cmfcpropertygridproperty-class.md)"},{"content":"A general purpose property that is used to specify the value of strings, Booleans, dates and so on.","pos":[17814,17913]},{"pos":[17918,18015],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridColorProperty Class<ept id=\"p1\">](../../mfc/reference/cmfcpropertygridcolorproperty-class.md)</ept>","source":"[CMFCPropertyGridColorProperty Class](../../mfc/reference/cmfcpropertygridcolorproperty-class.md)"},{"content":"A property that is used to select a color value.","pos":[18016,18064]},{"pos":[18069,18164],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridFileProperty Class<ept id=\"p1\">](../../mfc/reference/cmfcpropertygridfileproperty-class.md)</ept>","source":"[CMFCPropertyGridFileProperty Class](../../mfc/reference/cmfcpropertygridfileproperty-class.md)"},{"content":"A property that is used to select a file.","pos":[18165,18206]},{"pos":[18211,18306],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridFontProperty Class<ept id=\"p1\">](../../mfc/reference/cmfcpropertygridfontproperty-class.md)</ept>","source":"[CMFCPropertyGridFontProperty Class](../../mfc/reference/cmfcpropertygridfontproperty-class.md)"},{"content":"A property that is used to select a font.","pos":[18307,18348]},{"pos":[18358,18371],"content":"Illustrations","linkify":"Illustrations","nodes":[{"content":"Illustrations","pos":[0,13]}]},{"content":"The following illustrations depict a property grid control that displays properties in two ways.","pos":[18375,18471]},{"content":"The first illustration displays properties hierarchically and the second displays properties alphabetically.","pos":[18472,18580]},{"pos":[18587,18668],"content":"<bpt id=\"p1\">![</bpt>Property List PropertySheet<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../mfc/reference/media/proplist.png \"</bpt>proplist<ept id=\"p2\">\")</ept>","source":"![Property List PropertySheet](../../mfc/reference/media/proplist.png \"proplist\")"},{"pos":[18677,18684],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example demonstrates how to configure a property grid control object by using various methods in the <ph id=\"ph1\">`CMFCPropertyGridCtrl`</ph> class.","pos":[18688,18832],"source":"The following example demonstrates how to configure a property grid control object by using various methods in the `CMFCPropertyGridCtrl` class."},{"content":"The example demonstrates how to enable the header control, enable the description area, and set the appearance of the property grid control.","pos":[18833,18973]},{"content":"The example also shows how to set the alphabetic mode for the control whereby the control sorts all the properties it contains by their property name, and how to set the custom colors for various elements of the property grid control.","pos":[18974,19208]},{"content":"This example is part of the <bpt id=\"p1\">[</bpt>New Controls sample<ept id=\"p1\">](../../visual-cpp-samples.md)</ept>.","pos":[19209,19288],"source":" This example is part of the [New Controls sample](../../visual-cpp-samples.md)."},{"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_NewControls#14<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cmfcpropertygridctrl-class_1.h)</ept><ept id=\"p1\">]</ept>","pos":[19295,19398],"source":"[!code-cpp[NVC_MFC_NewControls#14](../../mfc/reference/codesnippet/cpp/cmfcpropertygridctrl-class_1.h)]"},{"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_NewControls#16<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cmfcpropertygridctrl-class_2.cpp)</ept><ept id=\"p1\">]</ept>","pos":[19401,19506],"source":"[!code-cpp[NVC_MFC_NewControls#16](../../mfc/reference/codesnippet/cpp/cmfcpropertygridctrl-class_2.cpp)]"},{"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_NewControls#20<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cmfcpropertygridctrl-class_3.cpp)</ept><ept id=\"p1\">]</ept>","pos":[19509,19614],"source":"[!code-cpp[NVC_MFC_NewControls#20](../../mfc/reference/codesnippet/cpp/cmfcpropertygridctrl-class_3.cpp)]"},{"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_NewControls#21<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cmfcpropertygridctrl-class_4.cpp)</ept><ept id=\"p1\">]</ept>","pos":[19617,19722],"source":"[!code-cpp[NVC_MFC_NewControls#21](../../mfc/reference/codesnippet/cpp/cmfcpropertygridctrl-class_4.cpp)]"},{"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_NewControls#24<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cmfcpropertygridctrl-class_5.cpp)</ept><ept id=\"p1\">]</ept>","pos":[19725,19830],"source":"[!code-cpp[NVC_MFC_NewControls#24](../../mfc/reference/codesnippet/cpp/cmfcpropertygridctrl-class_5.cpp)]"},{"pos":[19839,19860],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[19864,19911],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[19918,19971],"content":"<bpt id=\"p1\">[</bpt>CCmdTarget<ept id=\"p1\">](../../mfc/reference/ccmdtarget-class.md)</ept>","source":"[CCmdTarget](../../mfc/reference/ccmdtarget-class.md)"},{"pos":[19978,20019],"content":"<bpt id=\"p1\">[</bpt>CWnd<ept id=\"p1\">](../../mfc/reference/cwnd-class.md)</ept>","source":"[CWnd](../../mfc/reference/cwnd-class.md)"},{"pos":[20026,20099],"content":"<bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl<ept id=\"p1\">](../../mfc/reference/cmfcpropertygridctrl-class.md)</ept>","source":"[CMFCPropertyGridCtrl](../../mfc/reference/cmfcpropertygridctrl-class.md)"},{"pos":[20108,20120],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[20124,20157],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxpropertygridctrl.h","source":"**Header:** afxpropertygridctrl.h"},{"pos":[20167,20246],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__accselect\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::accSelect","linkify":"<a name=\"cmfcpropertygridctrl__accselect\"></a>  CMFCPropertyGridCtrl::accSelect","source":"<a name=\"cmfcpropertygridctrl__accselect\"></a>  CMFCPropertyGridCtrl::accSelect"},{"pos":[20448,20458],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`flagsSelect`</ph>","pos":[20462,20480],"source":"[in] `flagsSelect`"},{"content":"[in] <ph id=\"ph1\">`varChild`</ph>","pos":[20484,20499],"source":" [in] `varChild`"},{"pos":[20509,20521],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[20531,20538],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[20548,20631],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__addproperty\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::AddProperty","linkify":"<a name=\"cmfcpropertygridctrl__addproperty\"></a>  CMFCPropertyGridCtrl::AddProperty","source":"<a name=\"cmfcpropertygridctrl__addproperty\"></a>  CMFCPropertyGridCtrl::AddProperty"},{"content":"Adds a new property to a property grid control.","pos":[20635,20682]},{"pos":[20818,20828],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pProp`</ph>","pos":[20832,20844],"source":"[in] `pProp`"},{"content":"Pointer to a property.","pos":[20848,20870]},{"content":"[in] <ph id=\"ph1\">`bRedraw`</ph>","pos":[20877,20891],"source":"[in] `bRedraw`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to redraw the property immediately; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","pos":[20894,20957],"source":" `TRUE` to redraw the property immediately; otherwise, `FALSE`."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[20958,20986],"source":" The default value is `TRUE`."},{"content":"[in] <ph id=\"ph1\">`bAdjustLayout`</ph>","pos":[20993,21013],"source":"[in] `bAdjustLayout`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to recalculate how to draw the text and value of the property, and then draw the property; <ph id=\"ph2\">`FALSE`</ph> to use existing calculations to draw the property.","pos":[21016,21173],"source":" `TRUE` to recalculate how to draw the text and value of the property, and then draw the property; `FALSE` to use existing calculations to draw the property."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[21174,21202],"source":" The default value is `TRUE`."},{"pos":[21212,21224],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"If this method succeeds, the zero-based index of the position in the property grid control where the property is added; otherwise, -1.","pos":[21228,21362]},{"pos":[21372,21379],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method adds a pointer to the specified property to the end of the list of properties in the property grid control.","pos":[21383,21502]},{"content":"Do not destroy the properties or allow them to go out of scope before the grid control is destroyed.","pos":[21503,21603]},{"content":"When you are done with the property grid control, call <bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::RemoveAll<ept id=\"p1\">](#cmfcpropertygridctrl__removeall)</ept> to delete all the added properties.","pos":[21604,21762],"source":" When you are done with the property grid control, call [CMFCPropertyGridCtrl::RemoveAll](#cmfcpropertygridctrl__removeall) to delete all the added properties."},{"content":"The AddProperty method fails if the specified property has already been added to the list.","pos":[21763,21853]},{"pos":[21863,21948],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__adjustlayout\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::AdjustLayout","linkify":"<a name=\"cmfcpropertygridctrl__adjustlayout\"></a>  CMFCPropertyGridCtrl::AdjustLayout","source":"<a name=\"cmfcpropertygridctrl__adjustlayout\"></a>  CMFCPropertyGridCtrl::AdjustLayout"},{"content":"Redraws the property grid control and its properties.","pos":[21952,22005]},{"pos":[22059,22066],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method recalculates how to draw the entire property grid control and its properties, including images, fonts, and controls.","pos":[22070,22198]},{"pos":[22208,22311],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__alwaysshowusertooltip\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::AlwaysShowUserToolTip","linkify":"<a name=\"cmfcpropertygridctrl__alwaysshowusertooltip\"></a>  CMFCPropertyGridCtrl::AlwaysShowUserToolTip","source":"<a name=\"cmfcpropertygridctrl__alwaysshowusertooltip\"></a>  CMFCPropertyGridCtrl::AlwaysShowUserToolTip"},{"pos":[22486,22496],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[22500,22512],"content":"[in] <ph id=\"ph1\">`bShow`</ph>","source":"[in] `bShow`"},{"pos":[22522,22529],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[22539,22630],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__closecolorpopup\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::CloseColorPopup","linkify":"<a name=\"cmfcpropertygridctrl__closecolorpopup\"></a>  CMFCPropertyGridCtrl::CloseColorPopup","source":"<a name=\"cmfcpropertygridctrl__closecolorpopup\"></a>  CMFCPropertyGridCtrl::CloseColorPopup"},{"content":"Closes the color selection dialog box.","pos":[22634,22672]},{"pos":[22729,22736],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[22740,22901],"content":"For more information about the color selection dialog box, see <bpt id=\"p1\">[</bpt>CMFCPropertyGridColorProperty Class<ept id=\"p1\">](../../mfc/reference/cmfcpropertygridcolorproperty-class.md)</ept>.","source":"For more information about the color selection dialog box, see [CMFCPropertyGridColorProperty Class](../../mfc/reference/cmfcpropertygridcolorproperty-class.md)."},{"pos":[22911,23012],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__cmfcpropertygridctrl\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::CMFCPropertyGridCtrl","linkify":"<a name=\"cmfcpropertygridctrl__cmfcpropertygridctrl\"></a>  CMFCPropertyGridCtrl::CMFCPropertyGridCtrl","source":"<a name=\"cmfcpropertygridctrl__cmfcpropertygridctrl\"></a>  CMFCPropertyGridCtrl::CMFCPropertyGridCtrl"},{"pos":[23016,23059],"content":"Constructs a <ph id=\"ph1\">`CMFCPropertyGridCtrl`</ph> object.","source":"Constructs a `CMFCPropertyGridCtrl` object."},{"pos":[23108,23120],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[23130,23137],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[23147,23232],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__compareprops\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::CompareProps","linkify":"<a name=\"cmfcpropertygridctrl__compareprops\"></a>  CMFCPropertyGridCtrl::CompareProps","source":"<a name=\"cmfcpropertygridctrl__compareprops\"></a>  CMFCPropertyGridCtrl::CompareProps"},{"content":"Called by the property grid control to sort properties.","pos":[23236,23291]},{"pos":[23442,23452],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to a property.","pos":[23468,23492]},{"content":"A pointer to a property.","pos":[23511,23535]},{"pos":[23545,23557],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Return Value","pos":[23564,23576]},{"content":"Description","pos":[23577,23588]},{"content":"&lt; 0","pos":[23634,23637],"source":"< 0"},{"pos":[23638,23721],"content":"The name of the <ph id=\"ph1\">`pProp1`</ph> parameter is less than the name of the <ph id=\"ph2\">`pProp2`</ph> parameter.","source":"The name of the `pProp1` parameter is less than the name of the `pProp2` parameter."},{"content":"0","pos":[23726,23727]},{"pos":[23728,23810],"content":"The name of the <ph id=\"ph1\">`pProp1`</ph> parameter is equal to the name of the <ph id=\"ph2\">`pProp2`</ph> parameter.","source":"The name of the `pProp1` parameter is equal to the name of the `pProp2` parameter."},{"content":"&gt; 0","pos":[23815,23818],"source":"> 0"},{"pos":[23819,23902],"content":"The name of the <ph id=\"ph1\">`pProp1`</ph> object is greater than the name of the <ph id=\"ph2\">`pProp2`</ph> parameter.","source":"The name of the `pProp1` object is greater than the name of the `pProp2` parameter."},{"pos":[23913,23920],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[23924,24140],"content":"By default, this method uses the <bpt id=\"p1\">[</bpt>CString::Compare<ept id=\"p1\">](../../atl-mfc-shared/reference/cstringt-class.md#cstringt__compare)</ept> method to compare the <ph id=\"ph1\">`CMFCPropertyGridProperty::m_strName`</ph> members of the specified parameters.","source":"By default, this method uses the [CString::Compare](../../atl-mfc-shared/reference/cstringt-class.md#cstringt__compare) method to compare the `CMFCPropertyGridProperty::m_strName` members of the specified parameters."},{"pos":[24150,24223],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__create\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::Create","linkify":"<a name=\"cmfcpropertygridctrl__create\"></a>  CMFCPropertyGridCtrl::Create","source":"<a name=\"cmfcpropertygridctrl__create\"></a>  CMFCPropertyGridCtrl::Create"},{"content":"Creates a property grid control and attaches it to the property grid control object.","pos":[24227,24311]},{"pos":[24441,24451],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`dwStyle`</ph>","pos":[24455,24469],"source":"[in] `dwStyle`"},{"content":"A bitwise combination (OR) of <bpt id=\"p1\">[</bpt>window styles<ept id=\"p1\">](../../mfc/reference/window-styles.md)</ept>.","pos":[24473,24557],"source":" A bitwise combination (OR) of [window styles](../../mfc/reference/window-styles.md)."},{"content":"[in] <ph id=\"ph1\">`rect`</ph>","pos":[24564,24575],"source":"[in] `rect`"},{"content":"A bounding rectangle that specifies the size and position of the window, in client coordinates of <ph id=\"ph1\">`pParentWnd`</ph>.","pos":[24579,24690],"source":" A bounding rectangle that specifies the size and position of the window, in client coordinates of `pParentWnd`."},{"content":"[in] <ph id=\"ph1\">`pParentWnd`</ph>","pos":[24697,24714],"source":"[in] `pParentWnd`"},{"content":"Pointer to the parent window.","pos":[24718,24747]},{"content":"Must not be <ph id=\"ph1\">`NULL`</ph>.","pos":[24748,24767],"source":" Must not be `NULL`."},{"content":"[in] <ph id=\"ph1\">`nID`</ph>","pos":[24774,24784],"source":"[in] `nID`"},{"content":"The ID of the child window.","pos":[24788,24815]},{"pos":[24825,24837],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[24841,24907],"content":"<ph id=\"ph1\">`TRUE`</ph> if the window was created successfully; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the window was created successfully; otherwise, `FALSE`."},{"pos":[24917,24924],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"To create a property grid control, first call <bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::CMFCPropertyGridCtrl<ept id=\"p1\">](#cmfcpropertygridctrl__cmfcpropertygridctrl)</ept> to construct a property grid object.","pos":[24928,25100],"source":"To create a property grid control, first call [CMFCPropertyGridCtrl::CMFCPropertyGridCtrl](#cmfcpropertygridctrl__cmfcpropertygridctrl) to construct a property grid object."},{"content":"Then call <ph id=\"ph1\">`CMFCPropertyGridCtrl::Create`</ph>.","pos":[25101,25142],"source":" Then call `CMFCPropertyGridCtrl::Create`."},{"pos":[25152,25159],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example demonstrates how to use the <ph id=\"ph1\">`Create`</ph> method in <ph id=\"ph2\">`CMFCPropertyGridCtrl`</ph> class.","pos":[25163,25261],"source":"The following example demonstrates how to use the `Create` method in `CMFCPropertyGridCtrl` class."},{"content":"This example is part of the <bpt id=\"p1\">[</bpt>New Controls sample<ept id=\"p1\">](../../visual-cpp-samples.md)</ept>.","pos":[25262,25341],"source":" This example is part of the [New Controls sample](../../visual-cpp-samples.md)."},{"pos":[25348,25453],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_NewControls#15<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cmfcpropertygridctrl-class_6.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_NewControls#15](../../mfc/reference/codesnippet/cpp/cmfcpropertygridctrl-class_6.cpp)]"},{"pos":[25463,25552],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__deleteproperty\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::DeleteProperty","linkify":"<a name=\"cmfcpropertygridctrl__deleteproperty\"></a>  CMFCPropertyGridCtrl::DeleteProperty","source":"<a name=\"cmfcpropertygridctrl__deleteproperty\"></a>  CMFCPropertyGridCtrl::DeleteProperty"},{"content":"Deletes the specified property from the property grid control.","pos":[25556,25618]},{"pos":[25759,25769],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pProp`</ph>","pos":[25773,25785],"source":"[in] `pProp`"},{"content":"Pointer to a property.","pos":[25789,25811]},{"content":"[in] <ph id=\"ph1\">`bRedraw`</ph>","pos":[25818,25832],"source":"[in] `bRedraw`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to redraw the property grid control; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","pos":[25835,25899],"source":" `TRUE` to redraw the property grid control; otherwise, `FALSE`."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[25900,25928],"source":" The default value is `TRUE`."},{"content":"[in] <ph id=\"ph1\">`bAdjustLayout`</ph>","pos":[25935,25955],"source":"[in] `bAdjustLayout`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to recalculate how to draw all the text, images, and items in the property grid control, and then draw the control; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","pos":[25958,26101],"source":" `TRUE` to recalculate how to draw all the text, images, and items in the property grid control, and then draw the control; otherwise, `FALSE`."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[26102,26130],"source":" The default value is `TRUE`."},{"pos":[26140,26152],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[26156,26212],"content":"<ph id=\"ph1\">`TRUE`</ph> if this method is successful; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if this method is successful; otherwise, `FALSE`."},{"pos":[26222,26229],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use this method to delete a property, and any sub-items, from the property grid control.","pos":[26233,26321]},{"pos":[26331,26432],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__drawcontrolbarcolors\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::DrawControlBarColors","linkify":"<a name=\"cmfcpropertygridctrl__drawcontrolbarcolors\"></a>  CMFCPropertyGridCtrl::DrawControlBarColors","source":"<a name=\"cmfcpropertygridctrl__drawcontrolbarcolors\"></a>  CMFCPropertyGridCtrl::DrawControlBarColors"},{"pos":[26598,26610],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[26620,26627],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[26637,26714],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__edititem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::EditItem","linkify":"<a name=\"cmfcpropertygridctrl__edititem\"></a>  CMFCPropertyGridCtrl::EditItem","source":"<a name=\"cmfcpropertygridctrl__edititem\"></a>  CMFCPropertyGridCtrl::EditItem"},{"content":"Called by the framework when the user starts to modify a property.","pos":[26718,26784]},{"pos":[26899,26909],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pProp`</ph>","pos":[26913,26925],"source":"[in] `pProp`"},{"content":"Pointer to a property.","pos":[26929,26951]},{"content":"[in] <ph id=\"ph1\">`lptClick`</ph>","pos":[26958,26973],"source":"[in] `lptClick`"},{"content":"The point on the property grid control that the user clicked to begin the edit operation.","pos":[26977,27066]},{"content":"The point is in the client coordinates of the control.","pos":[27067,27121]},{"content":"The default value is <ph id=\"ph1\">`NULL`</ph>.","pos":[27122,27150],"source":" The default value is `NULL`."},{"pos":[27160,27172],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[27176,27227],"content":"<ph id=\"ph1\">`TRUE`</ph> if method is successful; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if method is successful; otherwise, `FALSE`."},{"pos":[27237,27244],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[27254,27357],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__enabledescriptionarea\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::EnableDescriptionArea","linkify":"<a name=\"cmfcpropertygridctrl__enabledescriptionarea\"></a>  CMFCPropertyGridCtrl::EnableDescriptionArea","source":"<a name=\"cmfcpropertygridctrl__enabledescriptionarea\"></a>  CMFCPropertyGridCtrl::EnableDescriptionArea"},{"content":"Enables or disables the description area that is displayed underneath the list of properties in the property grid control.","pos":[27361,27483]},{"pos":[27555,27565],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bEnable`</ph>","pos":[27569,27583],"source":"[in] `bEnable`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to enable the description area; <ph id=\"ph2\">`FALSE`</ph> to disable the description area.","pos":[27586,27666],"source":" `TRUE` to enable the description area; `FALSE` to disable the description area."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[27667,27695],"source":" The default value is `TRUE`."},{"pos":[27705,27712],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The description area is displayed at the bottom of the property grid control.","pos":[27716,27793]},{"content":"By default, the description area is disabled and not visible.","pos":[27794,27855]},{"pos":[27865,27958],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__enableheaderctrl\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::EnableHeaderCtrl","linkify":"<a name=\"cmfcpropertygridctrl__enableheaderctrl\"></a>  CMFCPropertyGridCtrl::EnableHeaderCtrl","source":"<a name=\"cmfcpropertygridctrl__enableheaderctrl\"></a>  CMFCPropertyGridCtrl::EnableHeaderCtrl"},{"content":"Enables or disables the header control at the top of the property grid control.","pos":[27962,28041]},{"pos":[28201,28211],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bEnable`</ph>","pos":[28215,28229],"source":"[in] `bEnable`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to enable the header control; <ph id=\"ph2\">`FALSE`</ph> to disable the header control.","pos":[28232,28308],"source":" `TRUE` to enable the header control; `FALSE` to disable the header control."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[28309,28337],"source":" The default value is `TRUE`."},{"content":"[in] <ph id=\"ph1\">`lpszLeftColumn`</ph>","pos":[28344,28365],"source":"[in] `lpszLeftColumn`"},{"content":"The title of the left column of the header control.","pos":[28369,28420]},{"content":"The default value is <bpt id=\"p1\">**</bpt>Property<ept id=\"p1\">**</ept>.","pos":[28421,28455],"source":" The default value is **Property**."},{"content":"[in] <ph id=\"ph1\">`lpszRightColumn`</ph>","pos":[28462,28484],"source":"[in] `lpszRightColumn`"},{"content":"The title of the right column of the header control.","pos":[28488,28540]},{"content":"The default value is <bpt id=\"p1\">**</bpt>Value<ept id=\"p1\">**</ept>.","pos":[28541,28572],"source":" The default value is **Value**."},{"pos":[28582,28665],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__endedititem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::EndEditItem","linkify":"<a name=\"cmfcpropertygridctrl__endedititem\"></a>  CMFCPropertyGridCtrl::EndEditItem","source":"<a name=\"cmfcpropertygridctrl__endedititem\"></a>  CMFCPropertyGridCtrl::EndEditItem"},{"content":"Called by the framework when the user finishes modifying a property.","pos":[28669,28737]},{"pos":[28811,28821],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bUpdateData`</ph>","pos":[28825,28843],"source":"[in] `bUpdateData`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to specify that the modified property data must be validated when the edit operation is complete; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","pos":[28846,28971],"source":" `TRUE` to specify that the modified property data must be validated when the edit operation is complete; otherwise, `FALSE`."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[28972,29000],"source":" The default value is `TRUE`."},{"pos":[29010,29022],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[29026,29169],"content":"<ph id=\"ph1\">`TRUE`</ph> if the edit operation ends successfully; <ph id=\"ph2\">`FALSE`</ph> if the modified property data is not valid or if the editing operation should continue.","source":"`TRUE` if the edit operation ends successfully; `FALSE` if the modified property data is not valid or if the editing operation should continue."},{"pos":[29179,29186],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[29196,29283],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__ensurevisible\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::EnsureVisible","linkify":"<a name=\"cmfcpropertygridctrl__ensurevisible\"></a>  CMFCPropertyGridCtrl::EnsureVisible","source":"<a name=\"cmfcpropertygridctrl__ensurevisible\"></a>  CMFCPropertyGridCtrl::EnsureVisible"},{"content":"Scrolls a property grid control and expands property items until the specified property is visible.","pos":[29287,29386]},{"pos":[29502,29512],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pProp`</ph>","pos":[29516,29528],"source":"[in] `pProp`"},{"content":"Pointer to a property.","pos":[29532,29554]},{"content":"[in] <ph id=\"ph1\">`bExpandParents`</ph>","pos":[29561,29582],"source":"[in] `bExpandParents`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to expand parent items to make the specified property visible; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","pos":[29585,29675],"source":" `TRUE` to expand parent items to make the specified property visible; otherwise, `FALSE`."},{"content":"The default is <ph id=\"ph1\">`FALSE`</ph>.","pos":[29676,29699],"source":" The default is `FALSE`."},{"pos":[29709,29716],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[29726,29805],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__expandall\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::ExpandAll","linkify":"<a name=\"cmfcpropertygridctrl__expandall\"></a>  CMFCPropertyGridCtrl::ExpandAll","source":"<a name=\"cmfcpropertygridctrl__expandall\"></a>  CMFCPropertyGridCtrl::ExpandAll"},{"content":"Expands or collapses all property grid control nodes.","pos":[29809,29862]},{"pos":[29922,29932],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bExpand`</ph>","pos":[29936,29950],"source":"[in] `bExpand`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to expand all nodes; <ph id=\"ph2\">`FALSE`</ph> to collapse all nodes.","pos":[29953,30012],"source":" `TRUE` to expand all nodes; `FALSE` to collapse all nodes."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[30013,30041],"source":" The default value is `TRUE`."},{"pos":[30051,30058],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[30068,30157],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__finditembydata\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::FindItemByData","linkify":"<a name=\"cmfcpropertygridctrl__finditembydata\"></a>  CMFCPropertyGridCtrl::FindItemByData","source":"<a name=\"cmfcpropertygridctrl__finditembydata\"></a>  CMFCPropertyGridCtrl::FindItemByData"},{"pos":[30161,30237],"content":"Retrieves the property that is associated with a user-defined <ph id=\"ph1\">`DWORD`</ph> value.","source":"Retrieves the property that is associated with a user-defined `DWORD` value."},{"pos":[30369,30379],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`dwData`</ph>","pos":[30383,30396],"source":"[in] `dwData`"},{"content":"A <ph id=\"ph1\">`DWORD`</ph> value.","pos":[30400,30416],"source":" A `DWORD` value."},{"content":"[in] <ph id=\"ph1\">`bSearchSubItems`</ph>","pos":[30423,30445],"source":"[in] `bSearchSubItems`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to search property sub-items; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","pos":[30448,30505],"source":" `TRUE` to search property sub-items; otherwise, `FALSE`."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[30506,30534],"source":" The default value is `TRUE`."},{"pos":[30544,30556],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[30560,30647],"content":"A pointer to the associated property object if this method succeeds; otherwise, <ph id=\"ph1\">`NULL`</ph>.","source":"A pointer to the associated property object if this method succeeds; otherwise, `NULL`."},{"pos":[30657,30664],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[30668,30952],"content":"Use the <bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::CMFCPropertyGridCtrl<ept id=\"p1\">](#cmfcpropertygridctrl__cmfcpropertygridctrl)</ept> constructor or <bpt id=\"p2\">[</bpt>CMFCPropertyGridProperty::SetData<ept id=\"p2\">](../../mfc/reference/cmfcpropertygridproperty-class.md#cmfcpropertygridproperty__setdata)</ept> method to associate a <ph id=\"ph1\">`DWORD`</ph> with a property.","source":"Use the [CMFCPropertyGridCtrl::CMFCPropertyGridCtrl](#cmfcpropertygridctrl__cmfcpropertygridctrl) constructor or [CMFCPropertyGridProperty::SetData](../../mfc/reference/cmfcpropertygridproperty-class.md#cmfcpropertygridproperty__setdata) method to associate a `DWORD` with a property."},{"pos":[30962,31057],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__get_accchildcount\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::get_accChildCount","linkify":"<a name=\"cmfcpropertygridctrl__get_accchildcount\"></a>  CMFCPropertyGridCtrl::get_accChildCount","source":"<a name=\"cmfcpropertygridctrl__get_accchildcount\"></a>  CMFCPropertyGridCtrl::get_accChildCount"},{"pos":[31242,31252],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[31256,31277],"content":"[in] <ph id=\"ph1\">`pcountChildren`</ph>","source":"[in] `pcountChildren`"},{"pos":[31287,31299],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[31309,31316],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[31326,31411],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__get_accfocus\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::get_accFocus","linkify":"<a name=\"cmfcpropertygridctrl__get_accfocus\"></a>  CMFCPropertyGridCtrl::get_accFocus","source":"<a name=\"cmfcpropertygridctrl__get_accfocus\"></a>  CMFCPropertyGridCtrl::get_accFocus"},{"pos":[31589,31599],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[31603,31619],"content":"[in] <ph id=\"ph1\">`pvarChild`</ph>","source":"[in] `pvarChild`"},{"pos":[31629,31641],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[31651,31658],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[31668,31751],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__get_acchelp\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::get_accHelp","linkify":"<a name=\"cmfcpropertygridctrl__get_acchelp\"></a>  CMFCPropertyGridCtrl::get_accHelp","source":"<a name=\"cmfcpropertygridctrl__get_acchelp\"></a>  CMFCPropertyGridCtrl::get_accHelp"},{"pos":[31952,31962],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`varChild`</ph>","pos":[31966,31981],"source":"[in] `varChild`"},{"content":"[in] <ph id=\"ph1\">`pszHelp`</ph>","pos":[31985,31999],"source":" [in] `pszHelp`"},{"pos":[32009,32021],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32031,32038],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[32048,32141],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__get_acchelptopic\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::get_accHelpTopic","linkify":"<a name=\"cmfcpropertygridctrl__get_acchelptopic\"></a>  CMFCPropertyGridCtrl::get_accHelpTopic","source":"<a name=\"cmfcpropertygridctrl__get_acchelptopic\"></a>  CMFCPropertyGridCtrl::get_accHelpTopic"},{"pos":[32373,32383],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pszHelpFile`</ph>","pos":[32387,32405],"source":"[in] `pszHelpFile`"},{"content":"[in] <ph id=\"ph1\">`varChild`</ph>","pos":[32409,32424],"source":" [in] `varChild`"},{"content":"[in] <ph id=\"ph1\">`pidTopic`</ph>","pos":[32428,32443],"source":" [in] `pidTopic`"},{"pos":[32453,32465],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32475,32482],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[32492,32599],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__get_acckeyboardshortcut\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::get_accKeyboardShortcut","linkify":"<a name=\"cmfcpropertygridctrl__get_acckeyboardshortcut\"></a>  CMFCPropertyGridCtrl::get_accKeyboardShortcut","source":"<a name=\"cmfcpropertygridctrl__get_acckeyboardshortcut\"></a>  CMFCPropertyGridCtrl::get_accKeyboardShortcut"},{"pos":[32824,32834],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`varChild`</ph>","pos":[32838,32853],"source":"[in] `varChild`"},{"content":"[in] <ph id=\"ph1\">`pszKeyboardShortcut`</ph>","pos":[32857,32883],"source":" [in] `pszKeyboardShortcut`"},{"pos":[32893,32905],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32915,32922],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[32932,33025],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__get_accselection\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::get_accSelection","linkify":"<a name=\"cmfcpropertygridctrl__get_accselection\"></a>  CMFCPropertyGridCtrl::get_accSelection","source":"<a name=\"cmfcpropertygridctrl__get_accselection\"></a>  CMFCPropertyGridCtrl::get_accSelection"},{"pos":[33210,33220],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[33224,33243],"content":"[in] <ph id=\"ph1\">`pvarChildren`</ph>","source":"[in] `pvarChildren`"},{"pos":[33253,33265],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[33275,33282],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[33292,33373],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__getbkcolor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::GetBkColor","linkify":"<a name=\"cmfcpropertygridctrl__getbkcolor\"></a>  CMFCPropertyGridCtrl::GetBkColor","source":"<a name=\"cmfcpropertygridctrl__getbkcolor\"></a>  CMFCPropertyGridCtrl::GetBkColor"},{"content":"Retrieves the background color of the current property grid control.","pos":[33377,33445]},{"pos":[33502,33514],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An RGB color value.","pos":[33518,33537]},{"pos":[33547,33554],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method retrieves the color that the framework uses to draw the background of the current property grid control.","pos":[33558,33674]},{"content":"The <bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::GetTextColor<ept id=\"p1\">](#cmfcpropertygridctrl__gettextcolor)</ept> method retrieves the foreground color.","pos":[33675,33791],"source":" The [CMFCPropertyGridCtrl::GetTextColor](#cmfcpropertygridctrl__gettextcolor) method retrieves the foreground color."},{"pos":[33801,33884],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__getboldfont\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::GetBoldFont","linkify":"<a name=\"cmfcpropertygridctrl__getboldfont\"></a>  CMFCPropertyGridCtrl::GetBoldFont","source":"<a name=\"cmfcpropertygridctrl__getboldfont\"></a>  CMFCPropertyGridCtrl::GetBoldFont"},{"content":"Retrieves the Windows font that is used to draw text in the current property grid control in bold style.","pos":[33888,33992]},{"pos":[34039,34051],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[34055,34173],"content":"A reference to a <bpt id=\"p1\">[</bpt>CFont<ept id=\"p1\">](../../mfc/reference/cfont-class.md)</ept> object that describes the characteristics of a bold font.","source":"A reference to a [CFont](../../mfc/reference/cfont-class.md) object that describes the characteristics of a bold font."},{"pos":[34183,34262],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__getcursel\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::GetCurSel","linkify":"<a name=\"cmfcpropertygridctrl__getcursel\"></a>  CMFCPropertyGridCtrl::GetCurSel","source":"<a name=\"cmfcpropertygridctrl__getcursel\"></a>  CMFCPropertyGridCtrl::GetCurSel"},{"content":"Retrieves the currently selected property.","pos":[34266,34308]},{"pos":[34381,34393],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A pointer to the property object that corresponds to the selected item in the property grid control.","pos":[34397,34497]},{"pos":[34507,34514],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[34524,34615],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__getcustomcolors\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::GetCustomColors","linkify":"<a name=\"cmfcpropertygridctrl__getcustomcolors\"></a>  CMFCPropertyGridCtrl::GetCustomColors","source":"<a name=\"cmfcpropertygridctrl__getcustomcolors\"></a>  CMFCPropertyGridCtrl::GetCustomColors"},{"content":"Retrieves the custom colors that are currently defined for property grid control elements.","pos":[34619,34709]},{"pos":[34980,34990],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[out] <ph id=\"ph1\">`clrBackground`</ph>","pos":[34994,35015],"source":"[out] `clrBackground`"},{"content":"The background color of property values.","pos":[35019,35059]},{"content":"[out] <ph id=\"ph1\">`clrText`</ph>","pos":[35066,35081],"source":"[out] `clrText`"},{"content":"The color of property names and property value text.","pos":[35085,35137]},{"content":"[out] <ph id=\"ph1\">`clrGroupBackground`</ph>","pos":[35144,35170],"source":"[out] `clrGroupBackground`"},{"content":"The background color of a property group.","pos":[35174,35215]},{"content":"[out] <ph id=\"ph1\">`clrGroupText`</ph>","pos":[35222,35242],"source":"[out] `clrGroupText`"},{"content":"The color of text in the property group.","pos":[35246,35286]},{"content":"[out] <ph id=\"ph1\">`clrDescriptionBackground`</ph>","pos":[35293,35325],"source":"[out] `clrDescriptionBackground`"},{"content":"The background color of the description area.","pos":[35329,35374]},{"content":"[out] <ph id=\"ph1\">`clrDescriptionText`</ph>","pos":[35381,35407],"source":"[out] `clrDescriptionText`"},{"content":"The color of text in the description area.","pos":[35411,35453]},{"content":"[out] <ph id=\"ph1\">`clrLine`</ph>","pos":[35460,35475],"source":"[out] `clrLine`"},{"content":"The color of lines that are drawn between properties.","pos":[35479,35532]},{"pos":[35542,35549],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[35553,35669],"content":"Use the <bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::SetCustomColors<ept id=\"p1\">](#cmfcpropertygridctrl__setcustomcolors)</ept> method to set custom colors.","source":"Use the [CMFCPropertyGridCtrl::SetCustomColors](#cmfcpropertygridctrl__setcustomcolors) method to set custom colors."},{"pos":[35679,35780],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__getdescriptionheight\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::GetDescriptionHeight","linkify":"<a name=\"cmfcpropertygridctrl__getdescriptionheight\"></a>  CMFCPropertyGridCtrl::GetDescriptionHeight","source":"<a name=\"cmfcpropertygridctrl__getdescriptionheight\"></a>  CMFCPropertyGridCtrl::GetDescriptionHeight"},{"content":"Retrieves the height of the description area, which is located at the bottom of the property grid control.","pos":[35784,35890]},{"pos":[35952,35964],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The height of the description area, in pixels.","pos":[35968,36014]},{"pos":[36024,36031],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The height of the description area is calculated automatically and is set to 1/4 the height of the property grid control.","pos":[36035,36156]},{"content":"Use the <bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::EnableDescriptionArea<ept id=\"p1\">](#cmfcpropertygridctrl__enabledescriptionarea)</ept> method to display or hide the description area.","pos":[36163,36310],"source":"Use the [CMFCPropertyGridCtrl::EnableDescriptionArea](#cmfcpropertygridctrl__enabledescriptionarea) method to display or hide the description area."},{"content":"Use the <bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::IsDescriptionArea<ept id=\"p1\">](#cmfcpropertygridctrl__isdescriptionarea)</ept> method to determine whether the description area is displayed or hidden.","pos":[36311,36475],"source":" Use the [CMFCPropertyGridCtrl::IsDescriptionArea](#cmfcpropertygridctrl__isdescriptionarea) method to determine whether the description area is displayed or hidden."},{"pos":[36485,36582],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__getdescriptionrows\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::GetDescriptionRows","linkify":"<a name=\"cmfcpropertygridctrl__getdescriptionrows\"></a>  CMFCPropertyGridCtrl::GetDescriptionRows","source":"<a name=\"cmfcpropertygridctrl__getdescriptionrows\"></a>  CMFCPropertyGridCtrl::GetDescriptionRows"},{"content":"Retrieves the number of rows in the description area of the current property grid control.","pos":[36586,36676]},{"pos":[36736,36748],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of rows in the description area of the current property grid control.","pos":[36752,36832]},{"pos":[36842,36849],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[36853,37002],"content":"The <bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::CMFCPropertyGridCtrl<ept id=\"p1\">](#cmfcpropertygridctrl__cmfcpropertygridctrl)</ept> constructor initializes the description area to 3 rows.","source":"The [CMFCPropertyGridCtrl::CMFCPropertyGridCtrl](#cmfcpropertygridctrl__cmfcpropertygridctrl) constructor initializes the description area to 3 rows."},{"pos":[37012,37099],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__getheaderctrl\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::GetHeaderCtrl","linkify":"<a name=\"cmfcpropertygridctrl__getheaderctrl\"></a>  CMFCPropertyGridCtrl::GetHeaderCtrl","source":"<a name=\"cmfcpropertygridctrl__getheaderctrl\"></a>  CMFCPropertyGridCtrl::GetHeaderCtrl"},{"pos":[37103,37264],"content":"Retrieves the internal <bpt id=\"p1\">[</bpt>CMFCHeaderCtrl<ept id=\"p1\">](../../mfc/reference/cmfcheaderctrl-class.md)</ept> object that the framework uses to display the current property grid control.","source":"Retrieves the internal [CMFCHeaderCtrl](../../mfc/reference/cmfcheaderctrl-class.md) object that the framework uses to display the current property grid control."},{"pos":[37330,37342],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37346,37387],"content":"A reference to a <ph id=\"ph1\">`CMFCHeaderCtrl`</ph> object.","source":"A reference to a `CMFCHeaderCtrl` object."},{"pos":[37397,37488],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__getheaderheight\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::GetHeaderHeight","linkify":"<a name=\"cmfcpropertygridctrl__getheaderheight\"></a>  CMFCPropertyGridCtrl::GetHeaderHeight","source":"<a name=\"cmfcpropertygridctrl__getheaderheight\"></a>  CMFCPropertyGridCtrl::GetHeaderHeight"},{"content":"Retrieves the height of the header of a property grid control.","pos":[37492,37554]},{"pos":[37611,37623],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The height of the header, in pixels.","pos":[37627,37663]},{"pos":[37673,37680],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[37690,37787],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__getleftcolumnwidth\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::GetLeftColumnWidth","linkify":"<a name=\"cmfcpropertygridctrl__getleftcolumnwidth\"></a>  CMFCPropertyGridCtrl::GetLeftColumnWidth","source":"<a name=\"cmfcpropertygridctrl__getleftcolumnwidth\"></a>  CMFCPropertyGridCtrl::GetLeftColumnWidth"},{"content":"Retrieves of the width of the left column of the current property grid control, which contains the name of each property.","pos":[37791,37912]},{"pos":[37972,37984],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The width of the name column.","pos":[37988,38017]},{"pos":[38027,38034],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The right column of a property grid control contains the value of each property.","pos":[38038,38118]},{"pos":[38128,38211],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__getlistrect\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::GetListRect","linkify":"<a name=\"cmfcpropertygridctrl__getlistrect\"></a>  CMFCPropertyGridCtrl::GetListRect","source":"<a name=\"cmfcpropertygridctrl__getlistrect\"></a>  CMFCPropertyGridCtrl::GetListRect"},{"content":"Retrieves the bounding rectangle of the property grid control.","pos":[38215,38277]},{"pos":[38332,38344],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The bounding rectangle of the property grid control.","pos":[38348,38400]},{"content":"This rectange does not include the description area and header.","pos":[38401,38464]},{"pos":[38474,38481],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[38491,38574],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__getproperty\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::GetProperty","linkify":"<a name=\"cmfcpropertygridctrl__getproperty\"></a>  CMFCPropertyGridCtrl::GetProperty","source":"<a name=\"cmfcpropertygridctrl__getproperty\"></a>  CMFCPropertyGridCtrl::GetProperty"},{"content":"Retrieves a pointer to the property object that corresponds to the specified index of an item in a property grid control.","pos":[38578,38699]},{"pos":[38784,38794],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nIndex`</ph>","pos":[38798,38811],"source":"[in] `nIndex`"},{"content":"The zero-based index of a property grid control item.","pos":[38815,38868]},{"pos":[38875,38992],"content":"This method asserts if the <ph id=\"ph1\">`nIndex`</ph> parameter is less than zero or greater than or equal to the number of properties.","source":"This method asserts if the `nIndex` parameter is less than zero or greater than or equal to the number of properties."},{"pos":[39002,39014],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[39018,39139],"content":"A pointer to the property object that corresponds to the specified index if this method is successful; otherwise, <ph id=\"ph1\">`NULL`</ph>.","source":"A pointer to the property object that corresponds to the specified index if this method is successful; otherwise, `NULL`."},{"pos":[39149,39156],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[39166,39271],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__getpropertycolumnwidth\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::GetPropertyColumnWidth","linkify":"<a name=\"cmfcpropertygridctrl__getpropertycolumnwidth\"></a>  CMFCPropertyGridCtrl::GetPropertyColumnWidth","source":"<a name=\"cmfcpropertygridctrl__getpropertycolumnwidth\"></a>  CMFCPropertyGridCtrl::GetPropertyColumnWidth"},{"content":"Retrieves the current width of the column that contains property values.","pos":[39275,39347]},{"pos":[39411,39423],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The current width of the column that contains property values.","pos":[39427,39489]},{"pos":[39499,39506],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The column on the right in the property grid control contains the property values.","pos":[39510,39592]},{"content":"A customer can use the split box of the property grid control to change the width of the values column.","pos":[39593,39696]},{"pos":[39706,39799],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__getpropertycount\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::GetPropertyCount","linkify":"<a name=\"cmfcpropertygridctrl__getpropertycount\"></a>  CMFCPropertyGridCtrl::GetPropertyCount","source":"<a name=\"cmfcpropertygridctrl__getpropertycount\"></a>  CMFCPropertyGridCtrl::GetPropertyCount"},{"content":"Retrieves the number of properties in a property grid control.","pos":[39803,39865]},{"pos":[39923,39935],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of properties.","pos":[39939,39964]},{"pos":[39974,39981],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[39991,40076],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__getrowheight\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::GetRowHeight","linkify":"<a name=\"cmfcpropertygridctrl__getrowheight\"></a>  CMFCPropertyGridCtrl::GetRowHeight","source":"<a name=\"cmfcpropertygridctrl__getrowheight\"></a>  CMFCPropertyGridCtrl::GetRowHeight"},{"content":"Retrieves the height of a row in the property grid control.","pos":[40080,40139]},{"pos":[40193,40205],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The height of a row.","pos":[40209,40229]},{"pos":[40239,40246],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The height of a row is equal to the current font height plus 4 pixels.","pos":[40250,40320]},{"pos":[40330,40423],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__getscrollbarctrl\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::GetScrollBarCtrl","linkify":"<a name=\"cmfcpropertygridctrl__getscrollbarctrl\"></a>  CMFCPropertyGridCtrl::GetScrollBarCtrl","source":"<a name=\"cmfcpropertygridctrl__getscrollbarctrl\"></a>  CMFCPropertyGridCtrl::GetScrollBarCtrl"},{"content":"Retrieves a pointer to the scroll bar control in the property grid control.","pos":[40427,40502]},{"pos":[40584,40594],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nBar`</ph>","pos":[40598,40609],"source":"[in] `nBar`"},{"content":"The orientation of the scroll bar, which must be <ph id=\"ph1\">`SB_VERT`</ph>.","pos":[40613,40672],"source":" The orientation of the scroll bar, which must be `SB_VERT`."},{"pos":[40682,40694],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[40698,40811],"content":"A pointer to a scroll bar object, or <ph id=\"ph1\">`NULL`</ph> if there is no scroll bar or the scroll bar orientation is <ph id=\"ph2\">`SB_HORZ`</ph>.","source":"A pointer to a scroll bar object, or `NULL` if there is no scroll bar or the scroll bar orientation is `SB_HORZ`."},{"pos":[40821,40828],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use this method to gain direct access to the vertical scroll bar control.","pos":[40832,40905]},{"pos":[40915,41000],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__gettextcolor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::GetTextColor","linkify":"<a name=\"cmfcpropertygridctrl__gettextcolor\"></a>  CMFCPropertyGridCtrl::GetTextColor","source":"<a name=\"cmfcpropertygridctrl__gettextcolor\"></a>  CMFCPropertyGridCtrl::GetTextColor"},{"content":"Retrieves the color that is used to draw the text of property items in the current property grid control.","pos":[41004,41109]},{"pos":[41168,41180],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An RGB color value.","pos":[41184,41203]},{"pos":[41213,41220],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method retrieves the color that the framework uses to draw the foreground of the current property grid control.","pos":[41224,41340]},{"content":"The <bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::GetBkColor<ept id=\"p1\">](#cmfcpropertygridctrl__getbkcolor)</ept> method retrieves the background color.","pos":[41341,41453],"source":" The [CMFCPropertyGridCtrl::GetBkColor](#cmfcpropertygridctrl__getbkcolor) method retrieves the background color."},{"pos":[41463,41538],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__hittest\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::HitTest","linkify":"<a name=\"cmfcpropertygridctrl__hittest\"></a>  CMFCPropertyGridCtrl::HitTest","source":"<a name=\"cmfcpropertygridctrl__hittest\"></a>  CMFCPropertyGridCtrl::HitTest"},{"content":"Retrieves a pointer to the property object that corresponds to a property grid control item if a specified point is in the item.","pos":[41542,41670]},{"content":"This method also indicates the area in the property grid control that contains the point.","pos":[41671,41760]},{"pos":[41930,41940],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pt`</ph>","pos":[41944,41953],"source":"[in] `pt`"},{"content":"A point, in client coordinates.","pos":[41957,41988]},{"content":"[in, out] <ph id=\"ph1\">`pnArea`</ph>","pos":[41995,42013],"source":"[in, out] `pnArea`"},{"content":"A pointer to a <ph id=\"ph1\">`ClickArea`</ph> variable.","pos":[42017,42053],"source":" A pointer to a `ClickArea` variable."},{"content":"When this method returns, the variable indicates the <bpt id=\"p1\">*</bpt>property area<ept id=\"p1\">*</ept> that contains the specified point.","pos":[42054,42157],"source":" When this method returns, the variable indicates the *property area* that contains the specified point."},{"content":"For more information about a property area, see Remarks.","pos":[42158,42214]},{"content":"[in] <ph id=\"ph1\">`bPropsOnly`</ph>","pos":[42221,42238],"source":"[in] `bPropsOnly`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to test only the property area; <ph id=\"ph2\">`FALSE`</ph> to test the <bpt id=\"p1\">*</bpt>description area<ept id=\"p1\">*</ept> if the specified point is not in the property area.","pos":[42241,42371],"source":" `TRUE` to test only the property area; `FALSE` to test the *description area* if the specified point is not in the property area."},{"content":"The default value is <ph id=\"ph1\">`FALSE`</ph>.","pos":[42372,42401],"source":" The default value is `FALSE`."},{"content":"For more information about the description area, see Remarks.","pos":[42402,42463]},{"pos":[42473,42485],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"If the <ph id=\"ph1\">`bPropsOnly`</ph> parameter is <ph id=\"ph2\">`TRUE`</ph> and the specified point is in a property area, the return value is a pointer to the corresponding property object.","pos":[42489,42643],"source":"If the `bPropsOnly` parameter is `TRUE` and the specified point is in a property area, the return value is a pointer to the corresponding property object."},{"content":"In addition, the <ph id=\"ph1\">`pnArea`</ph> parameter is set to the particular area that contains the specified point.","pos":[42644,42744],"source":" In addition, the `pnArea` parameter is set to the particular area that contains the specified point."},{"content":"Otherwise, the return value is <ph id=\"ph1\">`NULL`</ph> and the <ph id=\"ph2\">`pnArea`</ph> parameter is not modified.","pos":[42745,42826],"source":" Otherwise, the return value is `NULL` and the `pnArea` parameter is not modified."},{"content":"If the <ph id=\"ph1\">`bPropsOnly`</ph> parameter is <ph id=\"ph2\">`FALSE`</ph>, the return value is always <ph id=\"ph3\">`NULL`</ph>.","pos":[42833,42909],"source":"If the `bPropsOnly` parameter is `FALSE`, the return value is always `NULL`."},{"content":"However, if the specified point is in the description area, the <ph id=\"ph1\">`pnArea`</ph> parameter is set to <ph id=\"ph2\">`CMFCPropertyGridProperty::ClickDescription`</ph>.","pos":[42910,43048],"source":" However, if the specified point is in the description area, the `pnArea` parameter is set to `CMFCPropertyGridProperty::ClickDescription`."},{"pos":[43058,43065],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The term <bpt id=\"p1\">*</bpt>property area<ept id=\"p1\">*</ept> refers to any one of the name, value, or expand box areas of a property grid control item.","pos":[43069,43184],"source":"The term *property area* refers to any one of the name, value, or expand box areas of a property grid control item."},{"content":"The <bpt id=\"p1\">*</bpt>description area<ept id=\"p1\">*</ept> is the zone at the bottom of a property grid control.","pos":[43185,43261],"source":" The *description area* is the zone at the bottom of a property grid control."},{"content":"When you click a property grid control item, the description area displays a description of the corresponding property.","pos":[43262,43381]},{"content":"This method sets the value of the variable that the <ph id=\"ph1\">`pnArea`</ph> parameter points to.","pos":[43388,43469],"source":"This method sets the value of the variable that the `pnArea` parameter points to."},{"content":"The following table lists the possible values and corresponding areas.","pos":[43470,43540]},{"content":"Value","pos":[43547,43552]},{"content":"Area","pos":[43553,43557]},{"content":"Property expand box control.","pos":[43617,43645]},{"content":"Property name.","pos":[43673,43687]},{"content":"Property value.","pos":[43716,43731]},{"content":"Property grid control description area.","pos":[43781,43820]},{"pos":[43831,43900],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__init\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::Init","linkify":"<a name=\"cmfcpropertygridctrl__init\"></a>  CMFCPropertyGridCtrl::Init","source":"<a name=\"cmfcpropertygridctrl__init\"></a>  CMFCPropertyGridCtrl::Init"},{"content":"Called by the framework to initialize a property grid control.","pos":[43904,43966]},{"pos":[44012,44019],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[44029,44110],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__initheader\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::InitHeader","linkify":"<a name=\"cmfcpropertygridctrl__initheader\"></a>  CMFCPropertyGridCtrl::InitHeader","source":"<a name=\"cmfcpropertygridctrl__initheader\"></a>  CMFCPropertyGridCtrl::InitHeader"},{"pos":[44114,44277],"content":"Initializes the internal <bpt id=\"p1\">[</bpt>CMFCHeaderCtrl<ept id=\"p1\">](../../mfc/reference/cmfcheaderctrl-class.md)</ept> object that the framework uses to display the current property grid control.","source":"Initializes the internal [CMFCHeaderCtrl](../../mfc/reference/cmfcheaderctrl-class.md) object that the framework uses to display the current property grid control."},{"pos":[44329,44422],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__isalphabeticmode\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::IsAlphabeticMode","linkify":"<a name=\"cmfcpropertygridctrl__isalphabeticmode\"></a>  CMFCPropertyGridCtrl::IsAlphabeticMode","source":"<a name=\"cmfcpropertygridctrl__isalphabeticmode\"></a>  CMFCPropertyGridCtrl::IsAlphabeticMode"},{"content":"Indicates whether a property grid control is in alphabetic mode.","pos":[44426,44490]},{"pos":[44549,44561],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[44565,44642],"content":"<ph id=\"ph1\">`TRUE`</ph> if the property grid control is in alphabetic mode; otherwise <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the property grid control is in alphabetic mode; otherwise `FALSE`."},{"pos":[44652,44659],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When the property grid control is in alphabetic mode, all properties are sorted alphabetically by their names.","pos":[44663,44773]},{"content":"Otherwise, properties are grouped under their parent nodes.","pos":[44774,44833]},{"pos":[44840,44976],"content":"Use the <bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::SetAlphabeticMode<ept id=\"p1\">](#cmfcpropertygridctrl__setalphabeticmode)</ept> method to enable or disable alphabetic mode.","source":"Use the [CMFCPropertyGridCtrl::SetAlphabeticMode](#cmfcpropertygridctrl__setalphabeticmode) method to enable or disable alphabetic mode."},{"pos":[44986,45093],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__isalwaysshowusertooltip\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::IsAlwaysShowUserToolTip","linkify":"<a name=\"cmfcpropertygridctrl__isalwaysshowusertooltip\"></a>  CMFCPropertyGridCtrl::IsAlwaysShowUserToolTip","source":"<a name=\"cmfcpropertygridctrl__isalwaysshowusertooltip\"></a>  CMFCPropertyGridCtrl::IsAlwaysShowUserToolTip"},{"pos":[45262,45274],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[45284,45291],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[45301,45396],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__isdescriptionarea\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::IsDescriptionArea","linkify":"<a name=\"cmfcpropertygridctrl__isdescriptionarea\"></a>  CMFCPropertyGridCtrl::IsDescriptionArea","source":"<a name=\"cmfcpropertygridctrl__isdescriptionarea\"></a>  CMFCPropertyGridCtrl::IsDescriptionArea"},{"content":"Indicates whether the description area of the property grid control is displayed.","pos":[45400,45481]},{"pos":[45541,45553],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[45557,45621],"content":"<ph id=\"ph1\">`TRUE`</ph> if the description area is displayed; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the description area is displayed; otherwise, `FALSE`."},{"pos":[45631,45638],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[45642,45789],"content":"Use the <bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::EnableDescriptionArea<ept id=\"p1\">](#cmfcpropertygridctrl__enabledescriptionarea)</ept> method to hide or display the description area.","source":"Use the [CMFCPropertyGridCtrl::EnableDescriptionArea](#cmfcpropertygridctrl__enabledescriptionarea) method to hide or display the description area."},{"pos":[45799,45900],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__isgroupnamefullwidth\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::IsGroupNameFullWidth","linkify":"<a name=\"cmfcpropertygridctrl__isgroupnamefullwidth\"></a>  CMFCPropertyGridCtrl::IsGroupNameFullWidth","source":"<a name=\"cmfcpropertygridctrl__isgroupnamefullwidth\"></a>  CMFCPropertyGridCtrl::IsGroupNameFullWidth"},{"content":"Indicates whether each property group name is displayed across the width of the current property grid control.","pos":[45904,46014]},{"pos":[46077,46089],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[46093,46256],"content":"<ph id=\"ph1\">`TRUE`</ph> if group names are displayed across the width of the property grid control; <ph id=\"ph2\">`FALSE`</ph> if group names are truncated by the right (value) column of the control.","source":"`TRUE` if group names are displayed across the width of the property grid control; `FALSE` if group names are truncated by the right (value) column of the control."},{"pos":[46266,46273],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A <bpt id=\"p1\">*</bpt>group<ept id=\"p1\">*</ept> is a collection of related properties in a property grid control.","pos":[46277,46352],"source":"A *group* is a collection of related properties in a property grid control."},{"content":"If the control is displayed hierarchically, the <bpt id=\"p1\">*</bpt>group name<ept id=\"p1\">*</ept> is displayed as a category title in the row above the group.","pos":[46353,46474],"source":" If the control is displayed hierarchically, the *group name* is displayed as a category title in the row above the group."},{"pos":[46484,46569],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__isheaderctrl\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::IsHeaderCtrl","linkify":"<a name=\"cmfcpropertygridctrl__isheaderctrl\"></a>  CMFCPropertyGridCtrl::IsHeaderCtrl","source":"<a name=\"cmfcpropertygridctrl__isheaderctrl\"></a>  CMFCPropertyGridCtrl::IsHeaderCtrl"},{"content":"Indicates whether the header control is displayed.","pos":[46573,46623]},{"pos":[46678,46690],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[46694,46755],"content":"<ph id=\"ph1\">`TRUE`</ph> if the header control is displayed; otherwise <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the header control is displayed; otherwise `FALSE`."},{"pos":[46765,46772],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[46776,46911],"content":"Use the <bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::EnableHeaderCtrl<ept id=\"p1\">](#cmfcpropertygridctrl__enableheaderctrl)</ept> method to hide or display the header control.","source":"Use the [CMFCPropertyGridCtrl::EnableHeaderCtrl](#cmfcpropertygridctrl__enableheaderctrl) method to hide or display the header control."},{"pos":[46921,47030],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__ismarkmodifiedproperties\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::IsMarkModifiedProperties","linkify":"<a name=\"cmfcpropertygridctrl__ismarkmodifiedproperties\"></a>  CMFCPropertyGridCtrl::IsMarkModifiedProperties","source":"<a name=\"cmfcpropertygridctrl__ismarkmodifiedproperties\"></a>  CMFCPropertyGridCtrl::IsMarkModifiedProperties"},{"content":"Indicates how the property grid control displays modified properties.","pos":[47034,47103]},{"pos":[47170,47182],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[47186,47311],"content":"<ph id=\"ph1\">`TRUE`</ph> if bold style is used to display modified properties; <ph id=\"ph2\">`FALSE`</ph> if regular style is used to display modified properties.","source":"`TRUE` if bold style is used to display modified properties; `FALSE` if regular style is used to display modified properties."},{"pos":[47321,47328],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[47338,47433],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__isshowdragcontext\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::IsShowDragContext","linkify":"<a name=\"cmfcpropertygridctrl__isshowdragcontext\"></a>  CMFCPropertyGridCtrl::IsShowDragContext","source":"<a name=\"cmfcpropertygridctrl__isshowdragcontext\"></a>  CMFCPropertyGridCtrl::IsShowDragContext"},{"content":"Indicates whether the framework redraws the name and value columns of the current property grid control when a user resizes the columns.","pos":[47437,47573]},{"pos":[47633,47645],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[47649,47818],"content":"<ph id=\"ph1\">`TRUE`</ph> if the framework redraws the name and value columns during a resize operation; <ph id=\"ph2\">`FALSE`</ph> if the framework redraws the columns after the drag operation is completed.","source":"`TRUE` if the framework redraws the name and value columns during a resize operation; `FALSE` if the framework redraws the columns after the drag operation is completed."},{"pos":[47828,47835],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The user can resize the name and value columns of a property grid control by dragging the split bar that is between the columns.","pos":[47839,47967]},{"content":"If the drag context is displayed, the name and value columns are resized as long as the user drags the split bar.","pos":[47968,48081]},{"content":"Otherwise, the split bar moves but the columns are not redrawn until the drag operation is completed.","pos":[48082,48183]},{"pos":[48193,48282],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__isvsdotnetlook\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::IsVSDotNetLook","linkify":"<a name=\"cmfcpropertygridctrl__isvsdotnetlook\"></a>  CMFCPropertyGridCtrl::IsVSDotNetLook","source":"<a name=\"cmfcpropertygridctrl__isvsdotnetlook\"></a>  CMFCPropertyGridCtrl::IsVSDotNetLook"},{"content":"Indicates whether the appearance of the property grid control is in the style of Visual Studio .NET.","pos":[48286,48386]},{"pos":[48443,48455],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[48459,48553],"content":"<ph id=\"ph1\">`TRUE`</ph> if the property grid control is in the style of Visual Studio .NET; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the property grid control is in the style of Visual Studio .NET; otherwise, `FALSE`."},{"pos":[48563,48570],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[48574,48737],"content":"Use the <bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::SetVSDotNetLook<ept id=\"p1\">](#cmfcpropertygridctrl__setvsdotnetlook)</ept> method to set the property grid control to the style of Visual Studio .NET.","source":"Use the [CMFCPropertyGridCtrl::SetVSDotNetLook](#cmfcpropertygridctrl__setvsdotnetlook) method to set the property grid control to the style of Visual Studio .NET."},{"pos":[48747,48852],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__markmodifiedproperties\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::MarkModifiedProperties","linkify":"<a name=\"cmfcpropertygridctrl__markmodifiedproperties\"></a>  CMFCPropertyGridCtrl::MarkModifiedProperties","source":"<a name=\"cmfcpropertygridctrl__markmodifiedproperties\"></a>  CMFCPropertyGridCtrl::MarkModifiedProperties"},{"content":"Specifies how to display modified properties.","pos":[48856,48901]},{"pos":[49002,49012],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bMark`</ph>","pos":[49016,49028],"source":"[in] `bMark`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to display modified properties in bold style; <ph id=\"ph2\">`FALSE`</ph> to display modified properties in regular style.","pos":[49031,49141],"source":" `TRUE` to display modified properties in bold style; `FALSE` to display modified properties in regular style."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[49142,49170],"source":" The default value is `TRUE`."},{"content":"[in] <ph id=\"ph1\">`bRedraw`</ph>","pos":[49177,49191],"source":"[in] `bRedraw`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to redraw the property grid control immediately; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","pos":[49194,49270],"source":" `TRUE` to redraw the property grid control immediately; otherwise, `FALSE`."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[49271,49299],"source":" The default value is `TRUE`."},{"pos":[49309,49316],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[49326,49421],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__onchangeselection\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::OnChangeSelection","linkify":"<a name=\"cmfcpropertygridctrl__onchangeselection\"></a>  CMFCPropertyGridCtrl::OnChangeSelection","source":"<a name=\"cmfcpropertygridctrl__onchangeselection\"></a>  CMFCPropertyGridCtrl::OnChangeSelection"},{"content":"Called by the framework when the current selection is changed.","pos":[49425,49487]},{"pos":[49626,49636],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[49643,49652]},{"content":"Description","pos":[49653,49664]},{"pos":[49707,49721],"content":"[in] <ph id=\"ph1\">`pNewSel`</ph>","source":"[in] `pNewSel`"},{"content":"Pointer to the newly selected property.","pos":[49722,49761]},{"pos":[49766,49780],"content":"[in] <ph id=\"ph1\">`pOldSel`</ph>","source":"[in] `pOldSel`"},{"content":"Pointer to the previously selected property.","pos":[49781,49825]},{"pos":[49836,49843],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The default implementation of this method does nothing.","pos":[49847,49902]},{"pos":[49912,49999],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__onclickbutton\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::OnClickButton","linkify":"<a name=\"cmfcpropertygridctrl__onclickbutton\"></a>  CMFCPropertyGridCtrl::OnClickButton","source":"<a name=\"cmfcpropertygridctrl__onclickbutton\"></a>  CMFCPropertyGridCtrl::OnClickButton"},{"content":"Called by the framework when a property button is clicked.","pos":[50003,50061]},{"pos":[50128,50138],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`point`</ph>","pos":[50142,50154],"source":"[in] `point`"},{"content":"A point, in client coordinates.","pos":[50158,50189]},{"pos":[50199,50206],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"By default, this method updates the current property value.","pos":[50210,50269]},{"pos":[50279,50364],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__ondrawborder\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::OnDrawBorder","linkify":"<a name=\"cmfcpropertygridctrl__ondrawborder\"></a>  CMFCPropertyGridCtrl::OnDrawBorder","source":"<a name=\"cmfcpropertygridctrl__ondrawborder\"></a>  CMFCPropertyGridCtrl::OnDrawBorder"},{"content":"Called by the framework to draw a border around a property grid control.","pos":[50368,50440]},{"pos":[50502,50512],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pDC`</ph>","pos":[50516,50526],"source":"[in] `pDC`"},{"content":"A pointer to a device context.","pos":[50530,50560]},{"pos":[50570,50577],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[50587,50682],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__ondrawdescription\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::OnDrawDescription","linkify":"<a name=\"cmfcpropertygridctrl__ondrawdescription\"></a>  CMFCPropertyGridCtrl::OnDrawDescription","source":"<a name=\"cmfcpropertygridctrl__ondrawdescription\"></a>  CMFCPropertyGridCtrl::OnDrawDescription"},{"content":"Called by the framework to draw the description area and display the description text.","pos":[50686,50772]},{"pos":[50862,50872],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pDC`</ph>","pos":[50876,50886],"source":"[in] `pDC`"},{"content":"A pointer to a device context.","pos":[50890,50920]},{"content":"[in] <ph id=\"ph1\">`rect`</ph>","pos":[50927,50938],"source":"[in] `rect`"},{"content":"A rectangle that specifies where to draw the description area.","pos":[50942,51004]},{"pos":[51014,51021],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[51025,51164],"content":"Use the <bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::EnableDescriptionArea<ept id=\"p1\">](#cmfcpropertygridctrl__enabledescriptionarea)</ept> method to display the description area.","source":"Use the [CMFCPropertyGridCtrl::EnableDescriptionArea](#cmfcpropertygridctrl__enabledescriptionarea) method to display the description area."},{"pos":[51174,51255],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__ondrawlist\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::OnDrawList","linkify":"<a name=\"cmfcpropertygridctrl__ondrawlist\"></a>  CMFCPropertyGridCtrl::OnDrawList","source":"<a name=\"cmfcpropertygridctrl__ondrawlist\"></a>  CMFCPropertyGridCtrl::OnDrawList"},{"content":"Called by the framework to display the list of properties in the property grid control.","pos":[51259,51346]},{"pos":[51406,51416],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pDC`</ph>","pos":[51420,51430],"source":"[in] `pDC`"},{"content":"A pointer to a device context.","pos":[51434,51464]},{"pos":[51474,51481],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[51491,51580],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__ondrawproperty\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::OnDrawProperty","linkify":"<a name=\"cmfcpropertygridctrl__ondrawproperty\"></a>  CMFCPropertyGridCtrl::OnDrawProperty","source":"<a name=\"cmfcpropertygridctrl__ondrawproperty\"></a>  CMFCPropertyGridCtrl::OnDrawProperty"},{"content":"Called by the framework to display a property.","pos":[51584,51630]},{"pos":[51746,51756],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pDC`</ph>","pos":[51760,51770],"source":"[in] `pDC`"},{"content":"A pointer to a device context.","pos":[51774,51804]},{"content":"[in] <ph id=\"ph1\">`pProp`</ph>","pos":[51811,51823],"source":"[in] `pProp`"},{"content":"A pointer to a property object.","pos":[51827,51858]},{"pos":[51868,51880],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[51884,51940],"content":"<ph id=\"ph1\">`TRUE`</ph> if this method is successful; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if this method is successful; otherwise, `FALSE`."},{"pos":[51950,51957],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[51967,52062],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__onpropertychanged\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::OnPropertyChanged","linkify":"<a name=\"cmfcpropertygridctrl__onpropertychanged\"></a>  CMFCPropertyGridCtrl::OnPropertyChanged","source":"<a name=\"cmfcpropertygridctrl__onpropertychanged\"></a>  CMFCPropertyGridCtrl::OnPropertyChanged"},{"content":"Called by the framework when the value of a property is changed.","pos":[52066,52130]},{"pos":[52229,52239],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pProp`</ph>","pos":[52243,52255],"source":"[in] `pProp`"},{"content":"A pointer to a property object whose value has changed.","pos":[52259,52314]},{"pos":[52324,52331],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[52335,52482],"content":"By default, this method sends the <bpt id=\"p1\">[</bpt>AFX_WM_PROPERTY_CHANGED<ept id=\"p1\">](../../mfc/reference/afx-messages.md)</ept> message to the owner of the property grid control.","source":"By default, this method sends the [AFX_WM_PROPERTY_CHANGED](../../mfc/reference/afx-messages.md) message to the owner of the property grid control."},{"pos":[52492,52579],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__onselectcombo\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::OnSelectCombo","linkify":"<a name=\"cmfcpropertygridctrl__onselectcombo\"></a>  CMFCPropertyGridCtrl::OnSelectCombo","source":"<a name=\"cmfcpropertygridctrl__onselectcombo\"></a>  CMFCPropertyGridCtrl::OnSelectCombo"},{"content":"Called by the framework when a property that contains a combo box control is selected.","pos":[52583,52669]},{"pos":[52716,52723],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[52733,52812],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__removeall\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::RemoveAll","linkify":"<a name=\"cmfcpropertygridctrl__removeall\"></a>  CMFCPropertyGridCtrl::RemoveAll","source":"<a name=\"cmfcpropertygridctrl__removeall\"></a>  CMFCPropertyGridCtrl::RemoveAll"},{"content":"Removes all property objects from a property grid control.","pos":[52816,52874]},{"pos":[52917,52924],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[52934,53033],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__resetoriginalvalues\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::ResetOriginalValues","linkify":"<a name=\"cmfcpropertygridctrl__resetoriginalvalues\"></a>  CMFCPropertyGridCtrl::ResetOriginalValues","source":"<a name=\"cmfcpropertygridctrl__resetoriginalvalues\"></a>  CMFCPropertyGridCtrl::ResetOriginalValues"},{"content":"Restores the original values of all properties.","pos":[53037,53084]},{"pos":[53154,53164],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bRedraw`</ph>","pos":[53168,53182],"source":"[in] `bRedraw`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to redraw the property list; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","pos":[53185,53241],"source":" `TRUE` to redraw the property list; otherwise, `FALSE`."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[53242,53270],"source":" The default value is `TRUE`."},{"pos":[53280,53287],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[53297,53392],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__setalphabeticmode\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::SetAlphabeticMode","linkify":"<a name=\"cmfcpropertygridctrl__setalphabeticmode\"></a>  CMFCPropertyGridCtrl::SetAlphabeticMode","source":"<a name=\"cmfcpropertygridctrl__setalphabeticmode\"></a>  CMFCPropertyGridCtrl::SetAlphabeticMode"},{"content":"Sets or resets alphabetic mode.","pos":[53396,53427]},{"pos":[53492,53502],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bSet`</ph>","pos":[53506,53517],"source":"[in] `bSet`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to set alphabetic mode; <ph id=\"ph2\">`FALSE`</ph> reset alphabetic mode.","pos":[53520,53582],"source":" `TRUE` to set alphabetic mode; `FALSE` reset alphabetic mode."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[53583,53611],"source":" The default value is `TRUE`."},{"pos":[53621,53628],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When the property grid control is in alphabetic mode, the control sorts all the properties it contains by their property name.","pos":[53632,53758]},{"pos":[53768,53855],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__setboollabels\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::SetBoolLabels","linkify":"<a name=\"cmfcpropertygridctrl__setboollabels\"></a>  CMFCPropertyGridCtrl::SetBoolLabels","source":"<a name=\"cmfcpropertygridctrl__setboollabels\"></a>  CMFCPropertyGridCtrl::SetBoolLabels"},{"content":"Specifies the text of Boolean labels.","pos":[53859,53896]},{"pos":[53989,53999],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`lpszTrue`</ph>","pos":[54003,54018],"source":"[in] `lpszTrue`"},{"content":"The text string to display for the Boolean value of true.","pos":[54022,54079]},{"content":"[in] <ph id=\"ph1\">`lpszFalse`</ph>","pos":[54086,54102],"source":"[in] `lpszFalse`"},{"content":"The text string to display for the Boolean value of false.","pos":[54106,54164]},{"pos":[54174,54181],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[54191,54270],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__setcursel\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::SetCurSel","linkify":"<a name=\"cmfcpropertygridctrl__setcursel\"></a>  CMFCPropertyGridCtrl::SetCurSel","source":"<a name=\"cmfcpropertygridctrl__setcursel\"></a>  CMFCPropertyGridCtrl::SetCurSel"},{"content":"Selects a property in a property grid control.","pos":[54274,54320]},{"pos":[54424,54434],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pProp`</ph>","pos":[54438,54450],"source":"[in] `pProp`"},{"content":"A pointer to a property object.","pos":[54454,54485]},{"content":"[in] <ph id=\"ph1\">`bRedraw`</ph>","pos":[54492,54506],"source":"[in] `bRedraw`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to redraw the property grid control immediately; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","pos":[54509,54585],"source":" `TRUE` to redraw the property grid control immediately; otherwise, `FALSE`."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[54586,54614],"source":" The default value is `TRUE`."},{"pos":[54624,54631],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use this method to cancel the selection of the current item in the property grid control and then select the item that corresponds to the specified property.","pos":[54635,54792]},{"pos":[54802,54893],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__setcustomcolors\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::SetCustomColors","linkify":"<a name=\"cmfcpropertygridctrl__setcustomcolors\"></a>  CMFCPropertyGridCtrl::SetCustomColors","source":"<a name=\"cmfcpropertygridctrl__setcustomcolors\"></a>  CMFCPropertyGridCtrl::SetCustomColors"},{"content":"Specifies custom colors for various elements of the property grid control.","pos":[54897,54971]},{"pos":[55235,55245],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`clrBackground`</ph>","pos":[55249,55269],"source":"[in] `clrBackground`"},{"content":"The background color of property values.","pos":[55273,55313]},{"content":"[in] <ph id=\"ph1\">`clrText`</ph>","pos":[55320,55334],"source":"[in] `clrText`"},{"content":"The color of property names and property value text.","pos":[55338,55390]},{"content":"[in] <ph id=\"ph1\">`clrGroupBackground`</ph>","pos":[55397,55422],"source":"[in] `clrGroupBackground`"},{"content":"The background color of a property group.","pos":[55426,55467]},{"content":"[in] <ph id=\"ph1\">`clrGroupText`</ph>","pos":[55474,55493],"source":"[in] `clrGroupText`"},{"content":"The new text color of property group.","pos":[55497,55534]},{"content":"[in] <ph id=\"ph1\">`clrDescriptionBackground`</ph>","pos":[55541,55572],"source":"[in] `clrDescriptionBackground`"},{"content":"The background color of the description area.","pos":[55576,55621]},{"content":"[in] <ph id=\"ph1\">`clrDescriptionText`</ph>","pos":[55628,55653],"source":"[in] `clrDescriptionText`"},{"content":"The color of text in the description area.","pos":[55657,55699]},{"content":"[in] <ph id=\"ph1\">`clrLine`</ph>","pos":[55706,55720],"source":"[in] `clrLine`"},{"content":"The color of lines that are drawn between properties.","pos":[55724,55777]},{"pos":[55787,55794],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[55798,55929],"content":"For any parameter, specify the <ph id=\"ph1\">`((COLORREF)-1)`</ph> color value to use the default color for that element of the property grid control.","source":"For any parameter, specify the `((COLORREF)-1)` color value to use the default color for that element of the property grid control."},{"pos":[55936,56677],"content":"To customize the appearance of a specific property, derive a class from the <bpt id=\"p1\">[</bpt>CMFCPropertyGridProperty<ept id=\"p1\">](../../mfc/reference/cmfcpropertygridproperty-class.md)</ept> class and then override the <bpt id=\"p2\">[</bpt>CMFCPropertyGridProperty::OnDrawName<ept id=\"p2\">](../../mfc/reference/cmfcpropertygridproperty-class.md#cmfcpropertygridproperty__ondrawname)</ept>, <bpt id=\"p3\">[</bpt>CMFCPropertyGridProperty::OnDrawValue<ept id=\"p3\">](../../mfc/reference/cmfcpropertygridproperty-class.md#cmfcpropertygridproperty__ondrawvalue)</ept>, <bpt id=\"p4\">[</bpt>CMFCPropertyGridProperty::OnDrawExpandBox<ept id=\"p4\">](../../mfc/reference/cmfcpropertygridproperty-class.md#cmfcpropertygridproperty__ondrawexpandbox)</ept>, and <bpt id=\"p5\">[</bpt>CMFCPropertyGridProperty::OnDrawButton<ept id=\"p5\">](../../mfc/reference/cmfcpropertygridproperty-class.md#cmfcpropertygridproperty__ondrawbutton)</ept> methods.","source":"To customize the appearance of a specific property, derive a class from the [CMFCPropertyGridProperty](../../mfc/reference/cmfcpropertygridproperty-class.md) class and then override the [CMFCPropertyGridProperty::OnDrawName](../../mfc/reference/cmfcpropertygridproperty-class.md#cmfcpropertygridproperty__ondrawname), [CMFCPropertyGridProperty::OnDrawValue](../../mfc/reference/cmfcpropertygridproperty-class.md#cmfcpropertygridproperty__ondrawvalue), [CMFCPropertyGridProperty::OnDrawExpandBox](../../mfc/reference/cmfcpropertygridproperty-class.md#cmfcpropertygridproperty__ondrawexpandbox), and [CMFCPropertyGridProperty::OnDrawButton](../../mfc/reference/cmfcpropertygridproperty-class.md#cmfcpropertygridproperty__ondrawbutton) methods."},{"pos":[56687,56784],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__setdescriptionrows\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::SetDescriptionRows","linkify":"<a name=\"cmfcpropertygridctrl__setdescriptionrows\"></a>  CMFCPropertyGridCtrl::SetDescriptionRows","source":"<a name=\"cmfcpropertygridctrl__setdescriptionrows\"></a>  CMFCPropertyGridCtrl::SetDescriptionRows"},{"content":"Specifies the number of rows to display in the description section of the current property grid control.","pos":[56788,56892]},{"pos":[56957,56967],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nDescRows`</ph>","pos":[56971,56987],"source":"[in] `nDescRows`"},{"content":"The number of rows to display in the property description.","pos":[56991,57049]},{"pos":[57059,57162],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__setgroupnamefullwidth\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::SetGroupNameFullWidth","linkify":"<a name=\"cmfcpropertygridctrl__setgroupnamefullwidth\"></a>  CMFCPropertyGridCtrl::SetGroupNameFullWidth","source":"<a name=\"cmfcpropertygridctrl__setgroupnamefullwidth\"></a>  CMFCPropertyGridCtrl::SetGroupNameFullWidth"},{"content":"Specifies whether to display the full width of the category name for a group of properties in the current property grid control.","pos":[57166,57294]},{"pos":[57412,57422],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bGroupNameFullWidth`</ph>","pos":[57426,57452],"source":"[in] `bGroupNameFullWidth`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to display the complete width of the category name regardless of the width of the property name column.","pos":[57455,57566],"source":" `TRUE` to display the complete width of the category name regardless of the width of the property name column."},{"content":"<ph id=\"ph1\">`FALSE`</ph> to limit the width of the category name to the width of the property name column.","pos":[57567,57656],"source":"`FALSE` to limit the width of the category name to the width of the property name column."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[57657,57685],"source":" The default value is `TRUE`."},{"content":"[in] <ph id=\"ph1\">`bRedraw`</ph>","pos":[57692,57706],"source":"[in] `bRedraw`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to update the property grid control immediately; <ph id=\"ph2\">`FALSE`</ph> to update the control when the next redraw event occurs.","pos":[57709,57830],"source":" `TRUE` to update the property grid control immediately; `FALSE` to update the control when the next redraw event occurs."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[57831,57859],"source":" The default value is `TRUE`."},{"pos":[57869,57876],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The property grid control consists of a resizable <bpt id=\"p1\">*</bpt>property name<ept id=\"p1\">*</ept> column and a <bpt id=\"p2\">*</bpt>property value<ept id=\"p2\">*</ept> column.","pos":[57880,57983],"source":"The property grid control consists of a resizable *property name* column and a *property value* column."},{"content":"The end of the name column is also the start of the value column.","pos":[57984,58049]},{"content":"To resize the columns, drag the border between the columns.","pos":[58050,58109]},{"content":"The terms <bpt id=\"p1\">*</bpt>group name<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>category name<ept id=\"p2\">*</ept> are used interchangeably in this method.","pos":[58116,58199],"source":"The terms *group name* and *category name* are used interchangeably in this method."},{"content":"The category name is displayed on a row that heads a set of related properties and values.","pos":[58200,58290]},{"content":"This method specifies whether the width of the property name column also specifies the width of the displayed category name.","pos":[58291,58415]},{"pos":[58425,58518],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__setlistdelimiter\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::SetListDelimiter","linkify":"<a name=\"cmfcpropertygridctrl__setlistdelimiter\"></a>  CMFCPropertyGridCtrl::SetListDelimiter","source":"<a name=\"cmfcpropertygridctrl__setlistdelimiter\"></a>  CMFCPropertyGridCtrl::SetListDelimiter"},{"content":"Defines a character that is used as a delimiter in a list of property values.","pos":[58522,58599]},{"pos":[58656,58666],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`c`</ph>","pos":[58670,58678],"source":"[in] `c`"},{"content":"A character to serve as a delimiter.","pos":[58682,58718]},{"pos":[58728,58735],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use this method to define a delimiter character in a list of property values that are used in the <bpt id=\"p1\">[</bpt>CMFCPropertyGridProperty::CMFCPropertyGridProperty<ept id=\"p1\">](../../mfc/reference/cmfcpropertygridproperty-class.md#cmfcpropertygridproperty__cmfcpropertygridproperty)</ept> constructor.","pos":[58739,59008],"source":"Use this method to define a delimiter character in a list of property values that are used in the [CMFCPropertyGridProperty::CMFCPropertyGridProperty](../../mfc/reference/cmfcpropertygridproperty-class.md#cmfcpropertygridproperty__cmfcpropertygridproperty) constructor."},{"content":"In that constructor, set the <ph id=\"ph1\">`bIsValueList`</ph> parameter to <ph id=\"ph2\">`TRUE`</ph>.","pos":[59009,59073],"source":" In that constructor, set the `bIsValueList` parameter to `TRUE`."},{"pos":[59080,59242],"content":"By default, the <bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::CMFCPropertyGridCtrl<ept id=\"p1\">](#cmfcpropertygridctrl__cmfcpropertygridctrl)</ept> constructor sets the delimiter character to comma (',').","source":"By default, the [CMFCPropertyGridCtrl::CMFCPropertyGridCtrl](#cmfcpropertygridctrl__cmfcpropertygridctrl) constructor sets the delimiter character to comma (',')."},{"pos":[59252,59349],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__setshowdragcontext\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::SetShowDragContext","linkify":"<a name=\"cmfcpropertygridctrl__setshowdragcontext\"></a>  CMFCPropertyGridCtrl::SetShowDragContext","source":"<a name=\"cmfcpropertygridctrl__setshowdragcontext\"></a>  CMFCPropertyGridCtrl::SetShowDragContext"},{"content":"Specifies whether the framework redraws the name and value columns of the current property grid control when a user resizes the columns.","pos":[59353,59489]},{"pos":[59569,59579],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bShowDragContext`</ph>","pos":[59583,59606],"source":"[in] `bShowDragContext`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to redraw the name and value columns during a resize operation; <ph id=\"ph2\">`FALSE`</ph> to redraw the columns after the drag operation is completed.","pos":[59609,59749],"source":" `TRUE` to redraw the name and value columns during a resize operation; `FALSE` to redraw the columns after the drag operation is completed."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[59750,59778],"source":" The default value is `TRUE`."},{"pos":[59788,59795],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The user can resize the name and value columns of a property grid control by dragging the split bar that is between the columns.","pos":[59799,59927]},{"content":"If the drag context is displayed, the name and value columns are resized as long as the user drags the split bar.","pos":[59928,60041]},{"content":"Otherwise, the split bar moves but the columns are not redrawn until the drag operation is completed.","pos":[60042,60143]},{"pos":[60153,60244],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__setvsdotnetlook\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::SetVSDotNetLook","linkify":"<a name=\"cmfcpropertygridctrl__setvsdotnetlook\"></a>  CMFCPropertyGridCtrl::SetVSDotNetLook","source":"<a name=\"cmfcpropertygridctrl__setvsdotnetlook\"></a>  CMFCPropertyGridCtrl::SetVSDotNetLook"},{"content":"Sets the appearance of the property grid control to the style that is used in Visual Studio .NET.","pos":[60248,60345]},{"pos":[60408,60418],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bSet`</ph>","pos":[60422,60433],"source":"[in] `bSet`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to set the property grid control to the style that is used in Visual Studio .NET; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","pos":[60436,60545],"source":" `TRUE` to set the property grid control to the style that is used in Visual Studio .NET; otherwise, `FALSE`."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[60546,60574],"source":" The default value is `TRUE`."},{"pos":[60584,60591],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[60601,60684],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__updatecolor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::UpdateColor","linkify":"<a name=\"cmfcpropertygridctrl__updatecolor\"></a>  CMFCPropertyGridCtrl::UpdateColor","source":"<a name=\"cmfcpropertygridctrl__updatecolor\"></a>  CMFCPropertyGridCtrl::UpdateColor"},{"content":"Sets the color value of the currently selected color property.","pos":[60688,60750]},{"pos":[60817,60827],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`color`</ph>","pos":[60831,60843],"source":"[in] `color`"},{"content":"An RGB color value.","pos":[60847,60866]},{"pos":[60876,60883],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method asserts in debug mode if the currently selected property of the property grid control is not a color property.","pos":[60887,61009]},{"pos":[61019,61112],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcpropertygridctrl__validateitemdata\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCPropertyGridCtrl::ValidateItemData","linkify":"<a name=\"cmfcpropertygridctrl__validateitemdata\"></a>  CMFCPropertyGridCtrl::ValidateItemData","source":"<a name=\"cmfcpropertygridctrl__validateitemdata\"></a>  CMFCPropertyGridCtrl::ValidateItemData"},{"content":"Called by the framework to validate property data.","pos":[61116,61166]},{"pos":[61255,61265],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[61272,61281]},{"content":"Description","pos":[61282,61293]},{"pos":[61336,61348],"content":"[in] <ph id=\"ph1\">`pProp`</ph>","source":"[in] `pProp`"},{"content":"Pointer to a property.","pos":[61349,61371]},{"content":"This parameter is not used.","pos":[61372,61399]},{"pos":[61410,61422],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[61426,61440],"content":"Always <ph id=\"ph1\">`TRUE`</ph>.","source":"Always `TRUE`."},{"pos":[61450,61457],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl::EndEditItem<ept id=\"p1\">](#cmfcpropertygridctrl__endedititem)</ept> method calls this method to validate data.","pos":[61461,61579],"source":"The [CMFCPropertyGridCtrl::EndEditItem](#cmfcpropertygridctrl__endedititem) method calls this method to validate data."},{"content":"By default, this method does not use its <ph id=\"ph1\">`pProp`</ph> parameter and its return value is always <ph id=\"ph2\">`TRUE`</ph>.","pos":[61580,61677],"source":" By default, this method does not use its `pProp` parameter and its return value is always `TRUE`."},{"content":"If you override this method, return <ph id=\"ph1\">`TRUE`</ph> if the specified property data is valid.","pos":[61684,61767],"source":"If you override this method, return `TRUE` if the specified property data is valid."},{"content":"Otherwise, return <ph id=\"ph1\">`FALSE`</ph>, in which case the framework does not update the property.","pos":[61768,61852],"source":" Otherwise, return `FALSE`, in which case the framework does not update the property."},{"pos":[61861,61869],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[61873,61921],"source":"[Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Classes<ept id=\"p1\">](../../mfc/reference/mfc-classes.md)</ept>","pos":[61924,61970],"source":" [Classes](../../mfc/reference/mfc-classes.md)"}],"content":"---\ntitle: \"CMFCPropertyGridCtrl Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CMFCPropertyGridCtrl\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CMFCPropertyGridCtrl::get_accValue method\"\n  - \"CMFCPropertyGridCtrl::accHitTest method\"\n  - \"CMFCPropertyGridCtrl::get_accState method\"\n  - \"CMFCPropertyGridCtrl::accLocation method\"\n  - \"CMFCPropertyGridCtrl::get_accChild method\"\n  - \"CMFCPropertyGridCtrl::get_accName method\"\n  - \"CMFCPropertyGridCtrl::PreTranslateMessage method\"\n  - \"CMFCPropertyGridCtrl::get_accRole method\"\n  - \"CMFCPropertyGridCtrl::get_accDefaultAction method\"\n  - \"CMFCPropertyGridCtrl class\"\n  - \"CMFCPropertyGridCtrl::get_accDescription method\"\nms.assetid: 95877cae-2311-4a2a-9031-0c8c3cf0a5f9\ncaps.latest.revision: 35\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CMFCPropertyGridCtrl Class\n[!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n Supports an editable property grid control that can display properties in alphabetical or hierarchical order.  \n  \n## Syntax  \n  \n```  \nclass CMFCPropertyGridCtrl : public CWnd  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCPropertyGridCtrl::CMFCPropertyGridCtrl](#cmfcpropertygridctrl__cmfcpropertygridctrl)|Constructs a `CMFCPropertyGridCtrl` object.|  \n|`CMFCPropertyGridCtrl::~CMFCPropertyGridCtrl`|Destructor.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|`CMFCPropertyGridCtrl::accHitTest`|Called by the framework to retrieve the child element or child object at a given point on the screen. (Overrides [CWnd::accHitTest](../../mfc/reference/cwnd-class.md#cwnd__acchittest).)|  \n|`CMFCPropertyGridCtrl::accLocation`|Called by the framework to retrieve the specified object's current screen location. (Overrides [CWnd::accLocation](../../mfc/reference/cwnd-class.md#cwnd__acclocation).)|  \n|[CMFCPropertyGridCtrl::accSelect](#cmfcpropertygridctrl__accselect)|Called by the framework to modify the selection or move the keyboard focus of the specified object. (Overrides [CWnd::accSelect](../../mfc/reference/cwnd-class.md#cwnd__accselect).)|  \n|[CMFCPropertyGridCtrl::AddProperty](#cmfcpropertygridctrl__addproperty)|Adds a new property to a property grid control.|  \n|[CMFCPropertyGridCtrl::AlwaysShowUserToolTip](#cmfcpropertygridctrl__alwaysshowusertooltip)||  \n|[CMFCPropertyGridCtrl::CloseColorPopup](#cmfcpropertygridctrl__closecolorpopup)|Closes the color selection dialog box.|  \n|[CMFCPropertyGridCtrl::Create](#cmfcpropertygridctrl__create)|Creates a property grid control and attaches it to the property grid control object.|  \n|[CMFCPropertyGridCtrl::DeleteProperty](#cmfcpropertygridctrl__deleteproperty)|Deletes the specified property from the property grid control.|  \n|[CMFCPropertyGridCtrl::DrawControlBarColors](#cmfcpropertygridctrl__drawcontrolbarcolors)||  \n|[CMFCPropertyGridCtrl::EnableDescriptionArea](#cmfcpropertygridctrl__enabledescriptionarea)|Enables or disables the description area that is displayed underneath the list of properties.|  \n|[CMFCPropertyGridCtrl::EnableHeaderCtrl](#cmfcpropertygridctrl__enableheaderctrl)|Enables or disables the header control at the top of the property grid control.|  \n|[CMFCPropertyGridCtrl::EnsureVisible](#cmfcpropertygridctrl__ensurevisible)|Scrolls a property grid control and expands property items until the specified property is visible.|  \n|[CMFCPropertyGridCtrl::ExpandAll](#cmfcpropertygridctrl__expandall)|Expands or collapses all property grid control nodes.|  \n|[CMFCPropertyGridCtrl::FindItemByData](#cmfcpropertygridctrl__finditembydata)|Retrieves the property that is associated with a user-defined `DWORD` value.|  \n|`CMFCPropertyGridCtrl::get_accChild`|Called by the framework to retrieve the address of an `IDispatch` interface for the specified child. (Overrides [CWnd::get_accChild](../../mfc/reference/cwnd-class.md#cwnd__get_accchild).)|  \n|[CMFCPropertyGridCtrl::get_accChildCount](#cmfcpropertygridctrl__get_accchildcount)|Called by the framework to retrieve the number of children belonging to this object. (Overrides [CWnd::get_accChildCount](../../mfc/reference/cwnd-class.md#cwnd__get_accchildcount).)|  \n|`CMFCPropertyGridCtrl::get_accDefaultAction`|Called by the framework to retrieve a string that describes the object's default action. (Overrides [CWnd::get_accDefaultAction](../../mfc/reference/cwnd-class.md#cwnd__get_accdefaultaction).)|  \n|`CMFCPropertyGridCtrl::get_accDescription`|Called by framework to retrieve a string that describes the visual appearance of the specified object. (Overrides [CWnd::get_accDescription](../../mfc/reference/cwnd-class.md#cwnd__get_accdescription).)|  \n|[CMFCPropertyGridCtrl::get_accFocus](#cmfcpropertygridctrl__get_accfocus)|Called by the framework to retrieve the object that has the keyboard focus. (Overrides [CWnd::get_accFocus](../../mfc/reference/cwnd-class.md#cwnd__get_accfocus).)|  \n|[CMFCPropertyGridCtrl::get_accHelp](#cmfcpropertygridctrl__get_acchelp)|Called by the framework to retrieve an object's `Help` property string. (Overrides [CWnd::get_accHelp](../../mfc/reference/cwnd-class.md#cwnd__get_acchelp).)|  \n|[CMFCPropertyGridCtrl::get_accHelpTopic](#cmfcpropertygridctrl__get_acchelptopic)|Called by the framework to retrieve the full path of the `WinHelp`file associated with the specified object and the identifier of the appropriate topic within that file. (Overrides [CWnd::get_accHelpTopic](../../mfc/reference/cwnd-class.md#cwnd__get_acchelptopic).)|  \n|[CMFCPropertyGridCtrl::get_accKeyboardShortcut](#cmfcpropertygridctrl__get_acckeyboardshortcut)|Called by the framework to retrieve the specified object's shortcut key or access key. (Overrides [CWnd::get_accKeyboardShortcut](../../mfc/reference/cwnd-class.md#cwnd__get_acckeyboardshortcut).)|  \n|`CMFCPropertyGridCtrl::get_accName`|Called by the framework to retrieve the name of the specified object. (Overrides [CWnd::get_accName](../../mfc/reference/cwnd-class.md#cwnd__get_accname).)|  \n|`CMFCPropertyGridCtrl::get_accRole`|Called by the framework to retrieve information that describes the role of the specified object. (Overrides [CWnd::get_accRole](../../mfc/reference/cwnd-class.md#cwnd__get_accrole).)|  \n|[CMFCPropertyGridCtrl::get_accSelection](#cmfcpropertygridctrl__get_accselection)|Called by the framework to retrieve the selected children of this object. (Overrides [CWnd::get_accSelection](../../mfc/reference/cwnd-class.md#cwnd__get_accselection).)|  \n|`CMFCPropertyGridCtrl::get_accState`|Called by the framework to retrieve the current state of the specified object. (Overrides [CWnd::get_accState](../../mfc/reference/cwnd-class.md#cwnd__get_accstate).)|  \n|`CMFCPropertyGridCtrl::get_accValue`|Called by the framework to retrieve the value of the specified object. (Overrides [CWnd::get_accValue](../../mfc/reference/cwnd-class.md#cwnd__get_accvalue).)|  \n|[CMFCPropertyGridCtrl::GetBkColor](#cmfcpropertygridctrl__getbkcolor)|Retrieves the background color of the current property grid control.|  \n|[CMFCPropertyGridCtrl::GetBoldFont](#cmfcpropertygridctrl__getboldfont)|Retrieves the Windows font that of text in the current property grid control in bold style.|  \n|[CMFCPropertyGridCtrl::GetCurSel](#cmfcpropertygridctrl__getcursel)|Retrieves the currently selected property.|  \n|[CMFCPropertyGridCtrl::GetCustomColors](#cmfcpropertygridctrl__getcustomcolors)|Retrieves the custom colors that are currently defined for property grid control elements.|  \n|[CMFCPropertyGridCtrl::GetDescriptionHeight](#cmfcpropertygridctrl__getdescriptionheight)|Retrieves the height of the description area located at the bottom of the property grid control.|  \n|[CMFCPropertyGridCtrl::GetDescriptionRows](#cmfcpropertygridctrl__getdescriptionrows)|Retrieves the number of rows in the description area of the current property grid control.|  \n|[CMFCPropertyGridCtrl::GetHeaderCtrl](#cmfcpropertygridctrl__getheaderctrl)|Retrieves the internal [CMFCHeaderCtrl](../../mfc/reference/cmfcheaderctrl-class.md) object that the framework uses to display the current property grid control.|  \n|[CMFCPropertyGridCtrl::GetHeaderHeight](#cmfcpropertygridctrl__getheaderheight)|Retrieves the height of the property grid control header.|  \n|[CMFCPropertyGridCtrl::GetLeftColumnWidth](#cmfcpropertygridctrl__getleftcolumnwidth)|Retrieves the width of the left column of the current property grid control, which contains the name of each property.|  \n|[CMFCPropertyGridCtrl::GetListRect](#cmfcpropertygridctrl__getlistrect)|Retrieves the bounding rectangle of the property grid control.|  \n|[CMFCPropertyGridCtrl::GetProperty](#cmfcpropertygridctrl__getproperty)|Retrieves a pointer to the property object that corresponds to the specified index of a property grid control item.|  \n|[CMFCPropertyGridCtrl::GetPropertyColumnWidth](#cmfcpropertygridctrl__getpropertycolumnwidth)|Retrieves the current width of the column that contains property values.|  \n|[CMFCPropertyGridCtrl::GetPropertyCount](#cmfcpropertygridctrl__getpropertycount)|Retrieves the number of properties in a property grid control.|  \n|[CMFCPropertyGridCtrl::GetRowHeight](#cmfcpropertygridctrl__getrowheight)|Retrieves the height of a row in the property grid control.|  \n|[CMFCPropertyGridCtrl::GetScrollBarCtrl](#cmfcpropertygridctrl__getscrollbarctrl)|Retrieves a pointer to the scroll bar control in the property grid control. (Overrides [CWnd::GetScrollBarCtrl](../../mfc/reference/cwnd-class.md#cwnd__getscrollbarctrl).)|  \n|[CMFCPropertyGridCtrl::GetTextColor](#cmfcpropertygridctrl__gettextcolor)|Retrieves the color of the text of property items in the current property grid control.|  \n|`CMFCPropertyGridCtrl::GetThisClass`|Used by the framework to obtain a pointer to the [CRuntimeClass](../../mfc/reference/cruntimeclass-structure.md) object that is associated with this class type.|  \n|[CMFCPropertyGridCtrl::HitTest](#cmfcpropertygridctrl__hittest)|Retrieves a pointer to the property object that corresponds to a property grid control item if a specified point is in the item. This method also indicates the area in the property grid control that contains the point.|  \n|[CMFCPropertyGridCtrl::InitHeader](#cmfcpropertygridctrl__initheader)|Initializes the internal [CMFCHeaderCtrl](../../mfc/reference/cmfcheaderctrl-class.md) object that the framework uses to display the current property grid control.|  \n|[CMFCPropertyGridCtrl::IsAlphabeticMode](#cmfcpropertygridctrl__isalphabeticmode)|Indicates whether a property grid control is in alphabetic mode.|  \n|[CMFCPropertyGridCtrl::IsAlwaysShowUserToolTip](#cmfcpropertygridctrl__isalwaysshowusertooltip)||  \n|[CMFCPropertyGridCtrl::IsDescriptionArea](#cmfcpropertygridctrl__isdescriptionarea)|Indicates whether the description area of the property grid control is displayed.|  \n|[CMFCPropertyGridCtrl::IsGroupNameFullWidth](#cmfcpropertygridctrl__isgroupnamefullwidth)|Indicates whether each property group name is displayed across the width of the current property grid control.|  \n|[CMFCPropertyGridCtrl::IsHeaderCtrl](#cmfcpropertygridctrl__isheaderctrl)|Indicates whether the header control is displayed.|  \n|[CMFCPropertyGridCtrl::IsMarkModifiedProperties](#cmfcpropertygridctrl__ismarkmodifiedproperties)|Indicates how the property grid control displays modified properties.|  \n|[CMFCPropertyGridCtrl::IsShowDragContext](#cmfcpropertygridctrl__isshowdragcontext)|Indicates whether the framework redraws the name and value columns of the current property grid control when a user resizes the columns.|  \n|[CMFCPropertyGridCtrl::IsVSDotNetLook](#cmfcpropertygridctrl__isvsdotnetlook)|Indicates whether the appearance of the property grid control is in the style that is used by VS .NET.|  \n|[CMFCPropertyGridCtrl::MarkModifiedProperties](#cmfcpropertygridctrl__markmodifiedproperties)|Specifies how to display modified properties.|  \n|`CMFCPropertyGridCtrl::PreTranslateMessage`|Used by class [CWinApp](../../mfc/reference/cwinapp-class.md) to translate window messages before they are dispatched to the [TranslateMessage](http://msdn.microsoft.com/library/windows/desktop/ms644955) and [DispatchMessage](http://msdn.microsoft.com/library/windows/desktop/ms644934) Windows functions. (Overrides [CWnd::PreTranslateMessage](../../mfc/reference/cwnd-class.md#cwnd__pretranslatemessage).)|  \n|[CMFCPropertyGridCtrl::RemoveAll](#cmfcpropertygridctrl__removeall)|Removes all property objects from a property grid control.|  \n|[CMFCPropertyGridCtrl::ResetOriginalValues](#cmfcpropertygridctrl__resetoriginalvalues)|Restores the original value of all properties.|  \n|[CMFCPropertyGridCtrl::SetAlphabeticMode](#cmfcpropertygridctrl__setalphabeticmode)|Sets or resets alphabetical mode.|  \n|[CMFCPropertyGridCtrl::SetBoolLabels](#cmfcpropertygridctrl__setboollabels)|Specifies the text of Boolean labels.|  \n|[CMFCPropertyGridCtrl::SetCurSel](#cmfcpropertygridctrl__setcursel)|Selects a property in a property grid control.|  \n|[CMFCPropertyGridCtrl::SetCustomColors](#cmfcpropertygridctrl__setcustomcolors)|Specifies custom colors for various property grid control elements.|  \n|[CMFCPropertyGridCtrl::SetDescriptionRows](#cmfcpropertygridctrl__setdescriptionrows)|Specifies the number of rows to display in the description section of the current property grid control.|  \n|[CMFCPropertyGridCtrl::SetGroupNameFullWidth](#cmfcpropertygridctrl__setgroupnamefullwidth)|Specifies whether to display the full width of the category name for a group of properties in the current property grid control.|  \n|[CMFCPropertyGridCtrl::SetListDelimiter](#cmfcpropertygridctrl__setlistdelimiter)|Defines a character that will be used as a delimiter in a list of property values.|  \n|[CMFCPropertyGridCtrl::SetShowDragContext](#cmfcpropertygridctrl__setshowdragcontext)|Specifies whether the framework redraws the name and value columns of the current property grid control when a user resizes the columns.|  \n|[CMFCPropertyGridCtrl::SetVSDotNetLook](#cmfcpropertygridctrl__setvsdotnetlook)|Sets the appearance of the property grid control to the style that is used in VS .NET.|  \n|[CMFCPropertyGridCtrl::UpdateColor](#cmfcpropertygridctrl__updatecolor)|Sets the color value of the currently selected color property.|  \n  \n### Protected Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCPropertyGridCtrl::AdjustLayout](#cmfcpropertygridctrl__adjustlayout)|Redraws the property grid control and its properties.|  \n|[CMFCPropertyGridCtrl::CompareProps](#cmfcpropertygridctrl__compareprops)|Called by the property grid control to sort properties.|  \n|[CMFCPropertyGridCtrl::EditItem](#cmfcpropertygridctrl__edititem)|Called by the framework when the user starts to modify a property.|  \n|[CMFCPropertyGridCtrl::EndEditItem](#cmfcpropertygridctrl__endedititem)|Called by the framework when the user stops modifying a property.|  \n|[CMFCPropertyGridCtrl::Init](#cmfcpropertygridctrl__init)|Called by the framework to initialize a property grid control.|  \n|[CMFCPropertyGridCtrl::OnChangeSelection](#cmfcpropertygridctrl__onchangeselection)|Called by the framework when the current selection is changed.|  \n|[CMFCPropertyGridCtrl::OnClickButton](#cmfcpropertygridctrl__onclickbutton)|Called by the framework when a property button is clicked.|  \n|[CMFCPropertyGridCtrl::OnDrawBorder](#cmfcpropertygridctrl__ondrawborder)|Called by the framework to draw a border around a property grid control.|  \n|[CMFCPropertyGridCtrl::OnDrawDescription](#cmfcpropertygridctrl__ondrawdescription)|Called by the framework to draw the description area and display the description text.|  \n|[CMFCPropertyGridCtrl::OnDrawList](#cmfcpropertygridctrl__ondrawlist)|Called by the framework to display the list of properties in the property grid control.|  \n|[CMFCPropertyGridCtrl::OnDrawProperty](#cmfcpropertygridctrl__ondrawproperty)|Called by the framework to display a property.|  \n|[CMFCPropertyGridCtrl::OnPropertyChanged](#cmfcpropertygridctrl__onpropertychanged)|Called by the framework when the value of a property is changed.|  \n|[CMFCPropertyGridCtrl::OnSelectCombo](#cmfcpropertygridctrl__onselectcombo)|Called by the framework when a property that contains a combo box control is selected.|  \n|[CMFCPropertyGridCtrl::ValidateItemData](#cmfcpropertygridctrl__validateitemdata)|Called by the framework to validate property data.|  \n  \n## Remarks  \n The `CMFCPropertyGridCtrl` class displays a property grid control that contains editable properties derived from the [CMFCPropertyGridProperty](../../mfc/reference/cmfcpropertygridproperty-class.md) class. Each property can represent a type and it can contain subitems. The property grid control supports a resizable area at the bottom that can display the description of a selected property.  \n  \n To use a property grid control, construct a `CMFCPropertyGridCtrl` object and then call the [CMFCPropertyGridCtrl::Create](#cmfcpropertygridctrl__create) method. Use the [CMFCPropertyGridCtrl::AddProperty](#cmfcpropertygridctrl__addproperty) method to add properties to the list.  \n  \n## Selection Properties  \n Instead of representing a value, a property item can start a dialog box that enables the user to select a color, file, or font.  \n  \n The following table lists four selection property types:  \n  \n|Class|Description|  \n|-----------|-----------------|  \n|[CMFCPropertyGridProperty Class](../../mfc/reference/cmfcpropertygridproperty-class.md)|A general purpose property that is used to specify the value of strings, Booleans, dates and so on.|  \n|[CMFCPropertyGridColorProperty Class](../../mfc/reference/cmfcpropertygridcolorproperty-class.md)|A property that is used to select a color value.|  \n|[CMFCPropertyGridFileProperty Class](../../mfc/reference/cmfcpropertygridfileproperty-class.md)|A property that is used to select a file.|  \n|[CMFCPropertyGridFontProperty Class](../../mfc/reference/cmfcpropertygridfontproperty-class.md)|A property that is used to select a font.|  \n  \n## Illustrations  \n The following illustrations depict a property grid control that displays properties in two ways. The first illustration displays properties hierarchically and the second displays properties alphabetically.  \n  \n ![Property List PropertySheet](../../mfc/reference/media/proplist.png \"proplist\")  \n  \n## Example  \n The following example demonstrates how to configure a property grid control object by using various methods in the `CMFCPropertyGridCtrl` class. The example demonstrates how to enable the header control, enable the description area, and set the appearance of the property grid control. The example also shows how to set the alphabetic mode for the control whereby the control sorts all the properties it contains by their property name, and how to set the custom colors for various elements of the property grid control. This example is part of the [New Controls sample](../../visual-cpp-samples.md).  \n  \n [!code-cpp[NVC_MFC_NewControls#14](../../mfc/reference/codesnippet/cpp/cmfcpropertygridctrl-class_1.h)]  \n[!code-cpp[NVC_MFC_NewControls#16](../../mfc/reference/codesnippet/cpp/cmfcpropertygridctrl-class_2.cpp)]  \n[!code-cpp[NVC_MFC_NewControls#20](../../mfc/reference/codesnippet/cpp/cmfcpropertygridctrl-class_3.cpp)]  \n[!code-cpp[NVC_MFC_NewControls#21](../../mfc/reference/codesnippet/cpp/cmfcpropertygridctrl-class_4.cpp)]  \n[!code-cpp[NVC_MFC_NewControls#24](../../mfc/reference/codesnippet/cpp/cmfcpropertygridctrl-class_5.cpp)]  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n [CMFCPropertyGridCtrl](../../mfc/reference/cmfcpropertygridctrl-class.md)  \n  \n## Requirements  \n **Header:** afxpropertygridctrl.h  \n  \n##  <a name=\"cmfcpropertygridctrl__accselect\"></a>  CMFCPropertyGridCtrl::accSelect  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual HRESULT accSelect(\n    long flagsSelect,  \n    VARIANT varChild);\n```  \n  \n### Parameters  \n [in] `flagsSelect`  \n [in] `varChild`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__addproperty\"></a>  CMFCPropertyGridCtrl::AddProperty  \n Adds a new property to a property grid control.  \n  \n```  \nint AddProperty(\n    CMFCPropertyGridProperty* pProp,  \n    BOOL bRedraw=TRUE,  \n    BOOL bAdjustLayout=TRUE);\n```  \n  \n### Parameters  \n [in] `pProp`  \n Pointer to a property.  \n  \n [in] `bRedraw`  \n `TRUE` to redraw the property immediately; otherwise, `FALSE`. The default value is `TRUE`.  \n  \n [in] `bAdjustLayout`  \n `TRUE` to recalculate how to draw the text and value of the property, and then draw the property; `FALSE` to use existing calculations to draw the property. The default value is `TRUE`.  \n  \n### Return Value  \n If this method succeeds, the zero-based index of the position in the property grid control where the property is added; otherwise, -1.  \n  \n### Remarks  \n This method adds a pointer to the specified property to the end of the list of properties in the property grid control. Do not destroy the properties or allow them to go out of scope before the grid control is destroyed. When you are done with the property grid control, call [CMFCPropertyGridCtrl::RemoveAll](#cmfcpropertygridctrl__removeall) to delete all the added properties. The AddProperty method fails if the specified property has already been added to the list.  \n  \n##  <a name=\"cmfcpropertygridctrl__adjustlayout\"></a>  CMFCPropertyGridCtrl::AdjustLayout  \n Redraws the property grid control and its properties.  \n  \n```  \nvirtual void AdjustLayout();\n```  \n  \n### Remarks  \n This method recalculates how to draw the entire property grid control and its properties, including images, fonts, and controls.  \n  \n##  <a name=\"cmfcpropertygridctrl__alwaysshowusertooltip\"></a>  CMFCPropertyGridCtrl::AlwaysShowUserToolTip  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid AlwaysShowUserToolTip(BOOL bShow = TRUE);\n```  \n  \n### Parameters  \n [in] `bShow`  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__closecolorpopup\"></a>  CMFCPropertyGridCtrl::CloseColorPopup  \n Closes the color selection dialog box.  \n  \n```  \nvirtual void CloseColorPopup();\n```  \n  \n### Remarks  \n For more information about the color selection dialog box, see [CMFCPropertyGridColorProperty Class](../../mfc/reference/cmfcpropertygridcolorproperty-class.md).  \n  \n##  <a name=\"cmfcpropertygridctrl__cmfcpropertygridctrl\"></a>  CMFCPropertyGridCtrl::CMFCPropertyGridCtrl  \n Constructs a `CMFCPropertyGridCtrl` object.  \n  \n```  \nCMFCPropertyGridCtrl();\n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__compareprops\"></a>  CMFCPropertyGridCtrl::CompareProps  \n Called by the property grid control to sort properties.  \n  \n```  \nvirtual int CompareProps(\n    const CMFCPropertyGridProperty* pProp1,  \n    const CMFCPropertyGridProperty* pProp2) const;\n\n \n```  \n  \n### Parameters  \n `pProp1`  \n A pointer to a property.  \n  \n `pProp2`  \n A pointer to a property.  \n  \n### Return Value  \n  \n|Return Value|Description|  \n|------------------|-----------------|  \n|< 0|The name of the `pProp1` parameter is less than the name of the `pProp2` parameter.|  \n|0|The name of the `pProp1` parameter is equal to the name of the `pProp2` parameter.|  \n|> 0|The name of the `pProp1` object is greater than the name of the `pProp2` parameter.|  \n  \n### Remarks  \n By default, this method uses the [CString::Compare](../../atl-mfc-shared/reference/cstringt-class.md#cstringt__compare) method to compare the `CMFCPropertyGridProperty::m_strName` members of the specified parameters.  \n  \n##  <a name=\"cmfcpropertygridctrl__create\"></a>  CMFCPropertyGridCtrl::Create  \n Creates a property grid control and attaches it to the property grid control object.  \n  \n```  \nvirtual BOOL Create(\n    DWORD dwStyle,  \n    const RECT& rect,  \n    CWnd* pParentWnd,  \n    UINT nID);\n```  \n  \n### Parameters  \n [in] `dwStyle`  \n A bitwise combination (OR) of [window styles](../../mfc/reference/window-styles.md).  \n  \n [in] `rect`  \n A bounding rectangle that specifies the size and position of the window, in client coordinates of `pParentWnd`.  \n  \n [in] `pParentWnd`  \n Pointer to the parent window. Must not be `NULL`.  \n  \n [in] `nID`  \n The ID of the child window.  \n  \n### Return Value  \n `TRUE` if the window was created successfully; otherwise, `FALSE`.  \n  \n### Remarks  \n To create a property grid control, first call [CMFCPropertyGridCtrl::CMFCPropertyGridCtrl](#cmfcpropertygridctrl__cmfcpropertygridctrl) to construct a property grid object. Then call `CMFCPropertyGridCtrl::Create`.  \n  \n### Example  \n The following example demonstrates how to use the `Create` method in `CMFCPropertyGridCtrl` class. This example is part of the [New Controls sample](../../visual-cpp-samples.md).  \n  \n [!code-cpp[NVC_MFC_NewControls#15](../../mfc/reference/codesnippet/cpp/cmfcpropertygridctrl-class_6.cpp)]  \n  \n##  <a name=\"cmfcpropertygridctrl__deleteproperty\"></a>  CMFCPropertyGridCtrl::DeleteProperty  \n Deletes the specified property from the property grid control.  \n  \n```  \nBOOL DeleteProperty(\n    CMFCPropertyGridProperty*& pProp,  \n    BOOL bRedraw=TRUE,  \n    BOOL bAdjustLayout=TRUE);\n```  \n  \n### Parameters  \n [in] `pProp`  \n Pointer to a property.  \n  \n [in] `bRedraw`  \n `TRUE` to redraw the property grid control; otherwise, `FALSE`. The default value is `TRUE`.  \n  \n [in] `bAdjustLayout`  \n `TRUE` to recalculate how to draw all the text, images, and items in the property grid control, and then draw the control; otherwise, `FALSE`. The default value is `TRUE`.  \n  \n### Return Value  \n `TRUE` if this method is successful; otherwise, `FALSE`.  \n  \n### Remarks  \n Use this method to delete a property, and any sub-items, from the property grid control.  \n  \n##  <a name=\"cmfcpropertygridctrl__drawcontrolbarcolors\"></a>  CMFCPropertyGridCtrl::DrawControlBarColors  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL DrawControlBarColors() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__edititem\"></a>  CMFCPropertyGridCtrl::EditItem  \n Called by the framework when the user starts to modify a property.  \n  \n```  \nvirtual BOOL EditItem(\n    CMFCPropertyGridProperty* pProp,  \n    LPPOINT lptClick=NULL);\n```  \n  \n### Parameters  \n [in] `pProp`  \n Pointer to a property.  \n  \n [in] `lptClick`  \n The point on the property grid control that the user clicked to begin the edit operation. The point is in the client coordinates of the control. The default value is `NULL`.  \n  \n### Return Value  \n `TRUE` if method is successful; otherwise, `FALSE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__enabledescriptionarea\"></a>  CMFCPropertyGridCtrl::EnableDescriptionArea  \n Enables or disables the description area that is displayed underneath the list of properties in the property grid control.  \n  \n```  \nvoid EnableDescriptionArea(BOOL bEnable=TRUE);\n```  \n  \n### Parameters  \n [in] `bEnable`  \n `TRUE` to enable the description area; `FALSE` to disable the description area. The default value is `TRUE`.  \n  \n### Remarks  \n The description area is displayed at the bottom of the property grid control. By default, the description area is disabled and not visible.  \n  \n##  <a name=\"cmfcpropertygridctrl__enableheaderctrl\"></a>  CMFCPropertyGridCtrl::EnableHeaderCtrl  \n Enables or disables the header control at the top of the property grid control.  \n  \n```  \nvoid EnableHeaderCtrl(\n    BOOL bEnable=TRUE,  \n    LPCTSTR lpszLeftColumn=_T(\"Property\"),  \n    LPCTSTR lpszRightColumn=_T(\"Value\"));\n```  \n  \n### Parameters  \n [in] `bEnable`  \n `TRUE` to enable the header control; `FALSE` to disable the header control. The default value is `TRUE`.  \n  \n [in] `lpszLeftColumn`  \n The title of the left column of the header control. The default value is **Property**.  \n  \n [in] `lpszRightColumn`  \n The title of the right column of the header control. The default value is **Value**.  \n  \n##  <a name=\"cmfcpropertygridctrl__endedititem\"></a>  CMFCPropertyGridCtrl::EndEditItem  \n Called by the framework when the user finishes modifying a property.  \n  \n```  \nvirtual BOOL EndEditItem(BOOL bUpdateData=TRUE);\n```  \n  \n### Parameters  \n [in] `bUpdateData`  \n `TRUE` to specify that the modified property data must be validated when the edit operation is complete; otherwise, `FALSE`. The default value is `TRUE`.  \n  \n### Return Value  \n `TRUE` if the edit operation ends successfully; `FALSE` if the modified property data is not valid or if the editing operation should continue.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__ensurevisible\"></a>  CMFCPropertyGridCtrl::EnsureVisible  \n Scrolls a property grid control and expands property items until the specified property is visible.  \n  \n```  \nvoid EnsureVisible(\n    CMFCPropertyGridProperty* pProp,  \n    BOOL bExpandParents=FALSE);\n```  \n  \n### Parameters  \n [in] `pProp`  \n Pointer to a property.  \n  \n [in] `bExpandParents`  \n `TRUE` to expand parent items to make the specified property visible; otherwise, `FALSE`. The default is `FALSE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__expandall\"></a>  CMFCPropertyGridCtrl::ExpandAll  \n Expands or collapses all property grid control nodes.  \n  \n```  \nvoid ExpandAll(BOOL bExpand=TRUE);\n```  \n  \n### Parameters  \n [in] `bExpand`  \n `TRUE` to expand all nodes; `FALSE` to collapse all nodes. The default value is `TRUE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__finditembydata\"></a>  CMFCPropertyGridCtrl::FindItemByData  \n Retrieves the property that is associated with a user-defined `DWORD` value.  \n  \n```  \nCMFCPropertyGridProperty* FindItemByData(\n    DWORD_PTR dwData,  \n    BOOL bSearchSubItems=TRUE) const;\n\n \n```  \n  \n### Parameters  \n [in] `dwData`  \n A `DWORD` value.  \n  \n [in] `bSearchSubItems`  \n `TRUE` to search property sub-items; otherwise, `FALSE`. The default value is `TRUE`.  \n  \n### Return Value  \n A pointer to the associated property object if this method succeeds; otherwise, `NULL`.  \n  \n### Remarks  \n Use the [CMFCPropertyGridCtrl::CMFCPropertyGridCtrl](#cmfcpropertygridctrl__cmfcpropertygridctrl) constructor or [CMFCPropertyGridProperty::SetData](../../mfc/reference/cmfcpropertygridproperty-class.md#cmfcpropertygridproperty__setdata) method to associate a `DWORD` with a property.  \n  \n##  <a name=\"cmfcpropertygridctrl__get_accchildcount\"></a>  CMFCPropertyGridCtrl::get_accChildCount  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual HRESULT get_accChildCount(long* pcountChildren);\n```  \n  \n### Parameters  \n [in] `pcountChildren`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__get_accfocus\"></a>  CMFCPropertyGridCtrl::get_accFocus  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual HRESULT get_accFocus(VARIANT* pvarChild);\n```  \n  \n### Parameters  \n [in] `pvarChild`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__get_acchelp\"></a>  CMFCPropertyGridCtrl::get_accHelp  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual HRESULT get_accHelp(\n    VARIANT varChild,  \n    BSTR* pszHelp);\n```  \n  \n### Parameters  \n [in] `varChild`  \n [in] `pszHelp`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__get_acchelptopic\"></a>  CMFCPropertyGridCtrl::get_accHelpTopic  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual HRESULT get_accHelpTopic(\n    BSTR* pszHelpFile,  \n    VARIANT varChild,  \n    long* pidTopic);\n```  \n  \n### Parameters  \n [in] `pszHelpFile`  \n [in] `varChild`  \n [in] `pidTopic`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__get_acckeyboardshortcut\"></a>  CMFCPropertyGridCtrl::get_accKeyboardShortcut  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual HRESULT get_accKeyboardShortcut(\n    VARIANT varChild,  \n    BSTR* pszKeyboardShortcut);\n```  \n  \n### Parameters  \n [in] `varChild`  \n [in] `pszKeyboardShortcut`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__get_accselection\"></a>  CMFCPropertyGridCtrl::get_accSelection  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual HRESULT get_accSelection(VARIANT* pvarChildren);\n```  \n  \n### Parameters  \n [in] `pvarChildren`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__getbkcolor\"></a>  CMFCPropertyGridCtrl::GetBkColor  \n Retrieves the background color of the current property grid control.  \n  \n```  \nCOLORREF GetBkColor() const;\n\n \n```  \n  \n### Return Value  \n An RGB color value.  \n  \n### Remarks  \n This method retrieves the color that the framework uses to draw the background of the current property grid control. The [CMFCPropertyGridCtrl::GetTextColor](#cmfcpropertygridctrl__gettextcolor) method retrieves the foreground color.  \n  \n##  <a name=\"cmfcpropertygridctrl__getboldfont\"></a>  CMFCPropertyGridCtrl::GetBoldFont  \n Retrieves the Windows font that is used to draw text in the current property grid control in bold style.  \n  \n```  \nCFont& GetBoldFont();\n```  \n  \n### Return Value  \n A reference to a [CFont](../../mfc/reference/cfont-class.md) object that describes the characteristics of a bold font.  \n  \n##  <a name=\"cmfcpropertygridctrl__getcursel\"></a>  CMFCPropertyGridCtrl::GetCurSel  \n Retrieves the currently selected property.  \n  \n```  \nCMFCPropertyGridProperty* GetCurSel() const;\n\n \n```  \n  \n### Return Value  \n A pointer to the property object that corresponds to the selected item in the property grid control.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__getcustomcolors\"></a>  CMFCPropertyGridCtrl::GetCustomColors  \n Retrieves the custom colors that are currently defined for property grid control elements.  \n  \n```  \nvoid GetCustomColors(\n    COLORREF& clrBackground,  \n    COLORREF& clrText,  \n    COLORREF& clrGroupBackground,  \n    COLORREF& clrGroupText,  \n    COLORREF& clrDescriptionBackground,  \n    COLORREF& clrDescriptionText,  \n    COLORREF& clrLine);\n```  \n  \n### Parameters  \n [out] `clrBackground`  \n The background color of property values.  \n  \n [out] `clrText`  \n The color of property names and property value text.  \n  \n [out] `clrGroupBackground`  \n The background color of a property group.  \n  \n [out] `clrGroupText`  \n The color of text in the property group.  \n  \n [out] `clrDescriptionBackground`  \n The background color of the description area.  \n  \n [out] `clrDescriptionText`  \n The color of text in the description area.  \n  \n [out] `clrLine`  \n The color of lines that are drawn between properties.  \n  \n### Remarks  \n Use the [CMFCPropertyGridCtrl::SetCustomColors](#cmfcpropertygridctrl__setcustomcolors) method to set custom colors.  \n  \n##  <a name=\"cmfcpropertygridctrl__getdescriptionheight\"></a>  CMFCPropertyGridCtrl::GetDescriptionHeight  \n Retrieves the height of the description area, which is located at the bottom of the property grid control.  \n  \n```  \nint GetDescriptionHeight() const;\n\n \n```  \n  \n### Return Value  \n The height of the description area, in pixels.  \n  \n### Remarks  \n The height of the description area is calculated automatically and is set to 1/4 the height of the property grid control.  \n  \n Use the [CMFCPropertyGridCtrl::EnableDescriptionArea](#cmfcpropertygridctrl__enabledescriptionarea) method to display or hide the description area. Use the [CMFCPropertyGridCtrl::IsDescriptionArea](#cmfcpropertygridctrl__isdescriptionarea) method to determine whether the description area is displayed or hidden.  \n  \n##  <a name=\"cmfcpropertygridctrl__getdescriptionrows\"></a>  CMFCPropertyGridCtrl::GetDescriptionRows  \n Retrieves the number of rows in the description area of the current property grid control.  \n  \n```  \nint GetDescriptionRows() const;\n\n \n```  \n  \n### Return Value  \n The number of rows in the description area of the current property grid control.  \n  \n### Remarks  \n The [CMFCPropertyGridCtrl::CMFCPropertyGridCtrl](#cmfcpropertygridctrl__cmfcpropertygridctrl) constructor initializes the description area to 3 rows.  \n  \n##  <a name=\"cmfcpropertygridctrl__getheaderctrl\"></a>  CMFCPropertyGridCtrl::GetHeaderCtrl  \n Retrieves the internal [CMFCHeaderCtrl](../../mfc/reference/cmfcheaderctrl-class.md) object that the framework uses to display the current property grid control.  \n  \n```  \nvirtual CMFCHeaderCtrl& GetHeaderCtrl();\n```  \n  \n### Return Value  \n A reference to a `CMFCHeaderCtrl` object.  \n  \n##  <a name=\"cmfcpropertygridctrl__getheaderheight\"></a>  CMFCPropertyGridCtrl::GetHeaderHeight  \n Retrieves the height of the header of a property grid control.  \n  \n```  \nint GetHeaderHeight() const;\n\n \n```  \n  \n### Return Value  \n The height of the header, in pixels.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__getleftcolumnwidth\"></a>  CMFCPropertyGridCtrl::GetLeftColumnWidth  \n Retrieves of the width of the left column of the current property grid control, which contains the name of each property.  \n  \n```  \nint GetLeftColumnWidth() const;\n\n \n```  \n  \n### Return Value  \n The width of the name column.  \n  \n### Remarks  \n The right column of a property grid control contains the value of each property.  \n  \n##  <a name=\"cmfcpropertygridctrl__getlistrect\"></a>  CMFCPropertyGridCtrl::GetListRect  \n Retrieves the bounding rectangle of the property grid control.  \n  \n```  \nCRect GetListRect() const;\n\n \n```  \n  \n### Return Value  \n The bounding rectangle of the property grid control. This rectange does not include the description area and header.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__getproperty\"></a>  CMFCPropertyGridCtrl::GetProperty  \n Retrieves a pointer to the property object that corresponds to the specified index of an item in a property grid control.  \n  \n```  \nCMFCPropertyGridProperty* GetProperty(int nIndex) const;\n\n \n```  \n  \n### Parameters  \n [in] `nIndex`  \n The zero-based index of a property grid control item.  \n  \n This method asserts if the `nIndex` parameter is less than zero or greater than or equal to the number of properties.  \n  \n### Return Value  \n A pointer to the property object that corresponds to the specified index if this method is successful; otherwise, `NULL`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__getpropertycolumnwidth\"></a>  CMFCPropertyGridCtrl::GetPropertyColumnWidth  \n Retrieves the current width of the column that contains property values.  \n  \n```  \nint GetPropertyColumnWidth() const;\n\n \n```  \n  \n### Return Value  \n The current width of the column that contains property values.  \n  \n### Remarks  \n The column on the right in the property grid control contains the property values. A customer can use the split box of the property grid control to change the width of the values column.  \n  \n##  <a name=\"cmfcpropertygridctrl__getpropertycount\"></a>  CMFCPropertyGridCtrl::GetPropertyCount  \n Retrieves the number of properties in a property grid control.  \n  \n```  \nint GetPropertyCount() const;\n\n \n```  \n  \n### Return Value  \n The number of properties.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__getrowheight\"></a>  CMFCPropertyGridCtrl::GetRowHeight  \n Retrieves the height of a row in the property grid control.  \n  \n```  \nint GetRowHeight() const;\n\n \n```  \n  \n### Return Value  \n The height of a row.  \n  \n### Remarks  \n The height of a row is equal to the current font height plus 4 pixels.  \n  \n##  <a name=\"cmfcpropertygridctrl__getscrollbarctrl\"></a>  CMFCPropertyGridCtrl::GetScrollBarCtrl  \n Retrieves a pointer to the scroll bar control in the property grid control.  \n  \n```  \nvirtual CScrollBar* GetScrollBarCtrl(int nBar) const;\n\n \n```  \n  \n### Parameters  \n [in] `nBar`  \n The orientation of the scroll bar, which must be `SB_VERT`.  \n  \n### Return Value  \n A pointer to a scroll bar object, or `NULL` if there is no scroll bar or the scroll bar orientation is `SB_HORZ`.  \n  \n### Remarks  \n Use this method to gain direct access to the vertical scroll bar control.  \n  \n##  <a name=\"cmfcpropertygridctrl__gettextcolor\"></a>  CMFCPropertyGridCtrl::GetTextColor  \n Retrieves the color that is used to draw the text of property items in the current property grid control.  \n  \n```  \nCOLORREF GetTextColor() const;\n\n \n```  \n  \n### Return Value  \n An RGB color value.  \n  \n### Remarks  \n This method retrieves the color that the framework uses to draw the foreground of the current property grid control. The [CMFCPropertyGridCtrl::GetBkColor](#cmfcpropertygridctrl__getbkcolor) method retrieves the background color.  \n  \n##  <a name=\"cmfcpropertygridctrl__hittest\"></a>  CMFCPropertyGridCtrl::HitTest  \n Retrieves a pointer to the property object that corresponds to a property grid control item if a specified point is in the item. This method also indicates the area in the property grid control that contains the point.  \n  \n```  \nCMFCPropertyGridProperty* HitTest(\n    CPoint pt,  \n    CMFCPropertyGridProperty::ClickArea* pnArea=NULL,  \n    BOOL bPropsOnly=FALSE) const;\n\n \n```  \n  \n### Parameters  \n [in] `pt`  \n A point, in client coordinates.  \n  \n [in, out] `pnArea`  \n A pointer to a `ClickArea` variable. When this method returns, the variable indicates the *property area* that contains the specified point. For more information about a property area, see Remarks.  \n  \n [in] `bPropsOnly`  \n `TRUE` to test only the property area; `FALSE` to test the *description area* if the specified point is not in the property area. The default value is `FALSE`. For more information about the description area, see Remarks.  \n  \n### Return Value  \n If the `bPropsOnly` parameter is `TRUE` and the specified point is in a property area, the return value is a pointer to the corresponding property object. In addition, the `pnArea` parameter is set to the particular area that contains the specified point. Otherwise, the return value is `NULL` and the `pnArea` parameter is not modified.  \n  \n If the `bPropsOnly` parameter is `FALSE`, the return value is always `NULL`. However, if the specified point is in the description area, the `pnArea` parameter is set to `CMFCPropertyGridProperty::ClickDescription`.  \n  \n### Remarks  \n The term *property area* refers to any one of the name, value, or expand box areas of a property grid control item. The *description area* is the zone at the bottom of a property grid control. When you click a property grid control item, the description area displays a description of the corresponding property.  \n  \n This method sets the value of the variable that the `pnArea` parameter points to. The following table lists the possible values and corresponding areas.  \n  \n|Value|Area|  \n|-----------|----------|  \n|`ClickArea::ClickExpandBox`|Property expand box control.|  \n|`ClickArea::ClickName`|Property name.|  \n|`ClickArea::ClickValue`|Property value.|  \n|`CMFCPropertyGridProperty::ClickDescription`|Property grid control description area.|  \n  \n##  <a name=\"cmfcpropertygridctrl__init\"></a>  CMFCPropertyGridCtrl::Init  \n Called by the framework to initialize a property grid control.  \n  \n```  \nvirtual void Init();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__initheader\"></a>  CMFCPropertyGridCtrl::InitHeader  \n Initializes the internal [CMFCHeaderCtrl](../../mfc/reference/cmfcheaderctrl-class.md) object that the framework uses to display the current property grid control.  \n  \n```  \nvirtual void InitHeader();\n```  \n  \n##  <a name=\"cmfcpropertygridctrl__isalphabeticmode\"></a>  CMFCPropertyGridCtrl::IsAlphabeticMode  \n Indicates whether a property grid control is in alphabetic mode.  \n  \n```  \nBOOL IsAlphabeticMode() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the property grid control is in alphabetic mode; otherwise `FALSE`.  \n  \n### Remarks  \n When the property grid control is in alphabetic mode, all properties are sorted alphabetically by their names. Otherwise, properties are grouped under their parent nodes.  \n  \n Use the [CMFCPropertyGridCtrl::SetAlphabeticMode](#cmfcpropertygridctrl__setalphabeticmode) method to enable or disable alphabetic mode.  \n  \n##  <a name=\"cmfcpropertygridctrl__isalwaysshowusertooltip\"></a>  CMFCPropertyGridCtrl::IsAlwaysShowUserToolTip  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL IsAlwaysShowUserToolTip() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__isdescriptionarea\"></a>  CMFCPropertyGridCtrl::IsDescriptionArea  \n Indicates whether the description area of the property grid control is displayed.  \n  \n```  \nBOOL IsDescriptionArea() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the description area is displayed; otherwise, `FALSE`.  \n  \n### Remarks  \n Use the [CMFCPropertyGridCtrl::EnableDescriptionArea](#cmfcpropertygridctrl__enabledescriptionarea) method to hide or display the description area.  \n  \n##  <a name=\"cmfcpropertygridctrl__isgroupnamefullwidth\"></a>  CMFCPropertyGridCtrl::IsGroupNameFullWidth  \n Indicates whether each property group name is displayed across the width of the current property grid control.  \n  \n```  \nBOOL IsGroupNameFullWidth() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if group names are displayed across the width of the property grid control; `FALSE` if group names are truncated by the right (value) column of the control.  \n  \n### Remarks  \n A *group* is a collection of related properties in a property grid control. If the control is displayed hierarchically, the *group name* is displayed as a category title in the row above the group.  \n  \n##  <a name=\"cmfcpropertygridctrl__isheaderctrl\"></a>  CMFCPropertyGridCtrl::IsHeaderCtrl  \n Indicates whether the header control is displayed.  \n  \n```  \nBOOL IsHeaderCtrl() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the header control is displayed; otherwise `FALSE`.  \n  \n### Remarks  \n Use the [CMFCPropertyGridCtrl::EnableHeaderCtrl](#cmfcpropertygridctrl__enableheaderctrl) method to hide or display the header control.  \n  \n##  <a name=\"cmfcpropertygridctrl__ismarkmodifiedproperties\"></a>  CMFCPropertyGridCtrl::IsMarkModifiedProperties  \n Indicates how the property grid control displays modified properties.  \n  \n```  \nBOOL IsMarkModifiedProperties() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if bold style is used to display modified properties; `FALSE` if regular style is used to display modified properties.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__isshowdragcontext\"></a>  CMFCPropertyGridCtrl::IsShowDragContext  \n Indicates whether the framework redraws the name and value columns of the current property grid control when a user resizes the columns.  \n  \n```  \nBOOL IsShowDragContext() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the framework redraws the name and value columns during a resize operation; `FALSE` if the framework redraws the columns after the drag operation is completed.  \n  \n### Remarks  \n The user can resize the name and value columns of a property grid control by dragging the split bar that is between the columns. If the drag context is displayed, the name and value columns are resized as long as the user drags the split bar. Otherwise, the split bar moves but the columns are not redrawn until the drag operation is completed.  \n  \n##  <a name=\"cmfcpropertygridctrl__isvsdotnetlook\"></a>  CMFCPropertyGridCtrl::IsVSDotNetLook  \n Indicates whether the appearance of the property grid control is in the style of Visual Studio .NET.  \n  \n```  \nBOOL IsVSDotNetLook() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the property grid control is in the style of Visual Studio .NET; otherwise, `FALSE`.  \n  \n### Remarks  \n Use the [CMFCPropertyGridCtrl::SetVSDotNetLook](#cmfcpropertygridctrl__setvsdotnetlook) method to set the property grid control to the style of Visual Studio .NET.  \n  \n##  <a name=\"cmfcpropertygridctrl__markmodifiedproperties\"></a>  CMFCPropertyGridCtrl::MarkModifiedProperties  \n Specifies how to display modified properties.  \n  \n```  \nvoid MarkModifiedProperties(\n    BOOL bMark=TRUE,  \n    BOOL bRedraw=TRUE);\n```  \n  \n### Parameters  \n [in] `bMark`  \n `TRUE` to display modified properties in bold style; `FALSE` to display modified properties in regular style. The default value is `TRUE`.  \n  \n [in] `bRedraw`  \n `TRUE` to redraw the property grid control immediately; otherwise, `FALSE`. The default value is `TRUE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__onchangeselection\"></a>  CMFCPropertyGridCtrl::OnChangeSelection  \n Called by the framework when the current selection is changed.  \n  \n```  \nvirtual void OnChangeSelection(\n    CMFCPropertyGridProperty* pNewSel,   \n    CMFCPropertyGridProperty* pOldSel);\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|[in] `pNewSel`|Pointer to the newly selected property.|  \n|[in] `pOldSel`|Pointer to the previously selected property.|  \n  \n### Remarks  \n The default implementation of this method does nothing.  \n  \n##  <a name=\"cmfcpropertygridctrl__onclickbutton\"></a>  CMFCPropertyGridCtrl::OnClickButton  \n Called by the framework when a property button is clicked.  \n  \n```  \nvirtual void OnClickButton(CPoint point);\n```  \n  \n### Parameters  \n [in] `point`  \n A point, in client coordinates.  \n  \n### Remarks  \n By default, this method updates the current property value.  \n  \n##  <a name=\"cmfcpropertygridctrl__ondrawborder\"></a>  CMFCPropertyGridCtrl::OnDrawBorder  \n Called by the framework to draw a border around a property grid control.  \n  \n```  \nvirtual void OnDrawBorder(CDC* pDC);\n```  \n  \n### Parameters  \n [in] `pDC`  \n A pointer to a device context.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__ondrawdescription\"></a>  CMFCPropertyGridCtrl::OnDrawDescription  \n Called by the framework to draw the description area and display the description text.  \n  \n```  \nvirtual void OnDrawDescription(\n    CDC* pDC,  \n    CRect rect);\n```  \n  \n### Parameters  \n [in] `pDC`  \n A pointer to a device context.  \n  \n [in] `rect`  \n A rectangle that specifies where to draw the description area.  \n  \n### Remarks  \n Use the [CMFCPropertyGridCtrl::EnableDescriptionArea](#cmfcpropertygridctrl__enabledescriptionarea) method to display the description area.  \n  \n##  <a name=\"cmfcpropertygridctrl__ondrawlist\"></a>  CMFCPropertyGridCtrl::OnDrawList  \n Called by the framework to display the list of properties in the property grid control.  \n  \n```  \nvirtual void OnDrawList(CDC* pDC);\n```  \n  \n### Parameters  \n [in] `pDC`  \n A pointer to a device context.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__ondrawproperty\"></a>  CMFCPropertyGridCtrl::OnDrawProperty  \n Called by the framework to display a property.  \n  \n```  \nvirtual int OnDrawProperty(\n    CDC* pDC,  \n    CMFCPropertyGridProperty* pProp) const;\n\n \n```  \n  \n### Parameters  \n [in] `pDC`  \n A pointer to a device context.  \n  \n [in] `pProp`  \n A pointer to a property object.  \n  \n### Return Value  \n `TRUE` if this method is successful; otherwise, `FALSE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__onpropertychanged\"></a>  CMFCPropertyGridCtrl::OnPropertyChanged  \n Called by the framework when the value of a property is changed.  \n  \n```  \nvirtual void OnPropertyChanged(CMFCPropertyGridProperty* pProp) const;\n\n \n```  \n  \n### Parameters  \n [in] `pProp`  \n A pointer to a property object whose value has changed.  \n  \n### Remarks  \n By default, this method sends the [AFX_WM_PROPERTY_CHANGED](../../mfc/reference/afx-messages.md) message to the owner of the property grid control.  \n  \n##  <a name=\"cmfcpropertygridctrl__onselectcombo\"></a>  CMFCPropertyGridCtrl::OnSelectCombo  \n Called by the framework when a property that contains a combo box control is selected.  \n  \n```  \nvoid OnSelectCombo();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__removeall\"></a>  CMFCPropertyGridCtrl::RemoveAll  \n Removes all property objects from a property grid control.  \n  \n```  \nvoid RemoveAll();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__resetoriginalvalues\"></a>  CMFCPropertyGridCtrl::ResetOriginalValues  \n Restores the original values of all properties.  \n  \n```  \nvoid ResetOriginalValues(BOOL bRedraw=TRUE);\n```  \n  \n### Parameters  \n [in] `bRedraw`  \n `TRUE` to redraw the property list; otherwise, `FALSE`. The default value is `TRUE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__setalphabeticmode\"></a>  CMFCPropertyGridCtrl::SetAlphabeticMode  \n Sets or resets alphabetic mode.  \n  \n```  \nvoid SetAlphabeticMode(BOOL bSet=TRUE);\n```  \n  \n### Parameters  \n [in] `bSet`  \n `TRUE` to set alphabetic mode; `FALSE` reset alphabetic mode. The default value is `TRUE`.  \n  \n### Remarks  \n When the property grid control is in alphabetic mode, the control sorts all the properties it contains by their property name.  \n  \n##  <a name=\"cmfcpropertygridctrl__setboollabels\"></a>  CMFCPropertyGridCtrl::SetBoolLabels  \n Specifies the text of Boolean labels.  \n  \n```  \nvoid SetBoolLabels(\n    LPCTSTR lpszTrue,  \n    LPCTSTR lpszFalse);\n```  \n  \n### Parameters  \n [in] `lpszTrue`  \n The text string to display for the Boolean value of true.  \n  \n [in] `lpszFalse`  \n The text string to display for the Boolean value of false.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__setcursel\"></a>  CMFCPropertyGridCtrl::SetCurSel  \n Selects a property in a property grid control.  \n  \n```  \nvoid SetCurSel(\n    CMFCPropertyGridProperty* pProp,  \n    BOOL bRedraw=TRUE);\n```  \n  \n### Parameters  \n [in] `pProp`  \n A pointer to a property object.  \n  \n [in] `bRedraw`  \n `TRUE` to redraw the property grid control immediately; otherwise, `FALSE`. The default value is `TRUE`.  \n  \n### Remarks  \n Use this method to cancel the selection of the current item in the property grid control and then select the item that corresponds to the specified property.  \n  \n##  <a name=\"cmfcpropertygridctrl__setcustomcolors\"></a>  CMFCPropertyGridCtrl::SetCustomColors  \n Specifies custom colors for various elements of the property grid control.  \n  \n```  \nvoid SetCustomColors(\n    COLORREF clrBackground,  \n    COLORREF clrText,  \n    COLORREF clrGroupBackground,  \n    COLORREF clrGroupText,  \n    COLORREF clrDescriptionBackground,  \n    COLORREF clrDescriptionText,  \n    COLORREF clrLine);\n```  \n  \n### Parameters  \n [in] `clrBackground`  \n The background color of property values.  \n  \n [in] `clrText`  \n The color of property names and property value text.  \n  \n [in] `clrGroupBackground`  \n The background color of a property group.  \n  \n [in] `clrGroupText`  \n The new text color of property group.  \n  \n [in] `clrDescriptionBackground`  \n The background color of the description area.  \n  \n [in] `clrDescriptionText`  \n The color of text in the description area.  \n  \n [in] `clrLine`  \n The color of lines that are drawn between properties.  \n  \n### Remarks  \n For any parameter, specify the `((COLORREF)-1)` color value to use the default color for that element of the property grid control.  \n  \n To customize the appearance of a specific property, derive a class from the [CMFCPropertyGridProperty](../../mfc/reference/cmfcpropertygridproperty-class.md) class and then override the [CMFCPropertyGridProperty::OnDrawName](../../mfc/reference/cmfcpropertygridproperty-class.md#cmfcpropertygridproperty__ondrawname), [CMFCPropertyGridProperty::OnDrawValue](../../mfc/reference/cmfcpropertygridproperty-class.md#cmfcpropertygridproperty__ondrawvalue), [CMFCPropertyGridProperty::OnDrawExpandBox](../../mfc/reference/cmfcpropertygridproperty-class.md#cmfcpropertygridproperty__ondrawexpandbox), and [CMFCPropertyGridProperty::OnDrawButton](../../mfc/reference/cmfcpropertygridproperty-class.md#cmfcpropertygridproperty__ondrawbutton) methods.  \n  \n##  <a name=\"cmfcpropertygridctrl__setdescriptionrows\"></a>  CMFCPropertyGridCtrl::SetDescriptionRows  \n Specifies the number of rows to display in the description section of the current property grid control.  \n  \n```  \nvoid SetDescriptionRows(int nDescRows);\n```  \n  \n### Parameters  \n [in] `nDescRows`  \n The number of rows to display in the property description.  \n  \n##  <a name=\"cmfcpropertygridctrl__setgroupnamefullwidth\"></a>  CMFCPropertyGridCtrl::SetGroupNameFullWidth  \n Specifies whether to display the full width of the category name for a group of properties in the current property grid control.  \n  \n```  \nvoid SetGroupNameFullWidth(\n    BOOL bGroupNameFullWidth = TRUE,  \n    BOOL bRedraw = TRUE);\n```  \n  \n### Parameters  \n [in] `bGroupNameFullWidth`  \n `TRUE` to display the complete width of the category name regardless of the width of the property name column. `FALSE` to limit the width of the category name to the width of the property name column. The default value is `TRUE`.  \n  \n [in] `bRedraw`  \n `TRUE` to update the property grid control immediately; `FALSE` to update the control when the next redraw event occurs. The default value is `TRUE`.  \n  \n### Remarks  \n The property grid control consists of a resizable *property name* column and a *property value* column. The end of the name column is also the start of the value column. To resize the columns, drag the border between the columns.  \n  \n The terms *group name* and *category name* are used interchangeably in this method. The category name is displayed on a row that heads a set of related properties and values. This method specifies whether the width of the property name column also specifies the width of the displayed category name.  \n  \n##  <a name=\"cmfcpropertygridctrl__setlistdelimiter\"></a>  CMFCPropertyGridCtrl::SetListDelimiter  \n Defines a character that is used as a delimiter in a list of property values.  \n  \n```  \nvoid SetListDelimiter(TCHAR c);\n```  \n  \n### Parameters  \n [in] `c`  \n A character to serve as a delimiter.  \n  \n### Remarks  \n Use this method to define a delimiter character in a list of property values that are used in the [CMFCPropertyGridProperty::CMFCPropertyGridProperty](../../mfc/reference/cmfcpropertygridproperty-class.md#cmfcpropertygridproperty__cmfcpropertygridproperty) constructor. In that constructor, set the `bIsValueList` parameter to `TRUE`.  \n  \n By default, the [CMFCPropertyGridCtrl::CMFCPropertyGridCtrl](#cmfcpropertygridctrl__cmfcpropertygridctrl) constructor sets the delimiter character to comma (',').  \n  \n##  <a name=\"cmfcpropertygridctrl__setshowdragcontext\"></a>  CMFCPropertyGridCtrl::SetShowDragContext  \n Specifies whether the framework redraws the name and value columns of the current property grid control when a user resizes the columns.  \n  \n```  \nvoid SetShowDragContext(BOOL bShowDragContext = TRUE);\n```  \n  \n### Parameters  \n [in] `bShowDragContext`  \n `TRUE` to redraw the name and value columns during a resize operation; `FALSE` to redraw the columns after the drag operation is completed. The default value is `TRUE`.  \n  \n### Remarks  \n The user can resize the name and value columns of a property grid control by dragging the split bar that is between the columns. If the drag context is displayed, the name and value columns are resized as long as the user drags the split bar. Otherwise, the split bar moves but the columns are not redrawn until the drag operation is completed.  \n  \n##  <a name=\"cmfcpropertygridctrl__setvsdotnetlook\"></a>  CMFCPropertyGridCtrl::SetVSDotNetLook  \n Sets the appearance of the property grid control to the style that is used in Visual Studio .NET.  \n  \n```  \nvoid SetVSDotNetLook(BOOL bSet=TRUE);\n```  \n  \n### Parameters  \n [in] `bSet`  \n `TRUE` to set the property grid control to the style that is used in Visual Studio .NET; otherwise, `FALSE`. The default value is `TRUE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcpropertygridctrl__updatecolor\"></a>  CMFCPropertyGridCtrl::UpdateColor  \n Sets the color value of the currently selected color property.  \n  \n```  \nvirtual void UpdateColor(COLORREF color);\n```  \n  \n### Parameters  \n [in] `color`  \n An RGB color value.  \n  \n### Remarks  \n This method asserts in debug mode if the currently selected property of the property grid control is not a color property.  \n  \n##  <a name=\"cmfcpropertygridctrl__validateitemdata\"></a>  CMFCPropertyGridCtrl::ValidateItemData  \n Called by the framework to validate property data.  \n  \n```  \nvirtual BOOL ValidateItemData(CMFCPropertyGridProperty* pProp);\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|[in] `pProp`|Pointer to a property. This parameter is not used.|  \n  \n### Return Value  \n Always `TRUE`.  \n  \n### Remarks  \n The [CMFCPropertyGridCtrl::EndEditItem](#cmfcpropertygridctrl__endedititem) method calls this method to validate data. By default, this method does not use its `pProp` parameter and its return value is always `TRUE`.  \n  \n If you override this method, return `TRUE` if the specified property data is valid. Otherwise, return `FALSE`, in which case the framework does not update the property.  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)\n"}