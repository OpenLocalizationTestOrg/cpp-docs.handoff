{"nodes":[{"pos":[12,54],"content":"DeferrableEventArgs Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"DeferrableEventArgs Class | Microsoft Docs","pos":[0,42]}]},{"content":"DeferrableEventArgs Class","pos":[536,561]},{"content":"A template class used for the event argument types for deferrals.","pos":[562,627]},{"content":"Syntax","pos":[636,642]},{"content":"Parameters","pos":[807,817]},{"content":"The interface type that declares the arguments for a deferred event.","pos":[846,914]},{"content":"The class that implements <ph id=\"ph1\">`TEventArgsInterface`</ph>.","pos":[942,990],"source":" The class that implements `TEventArgsInterface`."},{"content":"Members","pos":[999,1006]},{"content":"Public Methods","pos":[1016,1030]},{"content":"Name","pos":[1037,1041]},{"content":"Description","pos":[1042,1053]},{"content":"DeferrableEventArgs::GetDeferral Method","pos":[1092,1131]},{"pos":[1187,1310],"content":"Gets a reference to the <bpt id=\"p1\">[</bpt>Deferral<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=526520)</ept> object which represents a deferred event.","source":"Gets a reference to the [Deferral](http://go.microsoft.com/fwlink/?LinkId=526520) object which represents a deferred event."},{"content":"DeferrableEventArgs::InvokeAllFinished Method","pos":[1316,1361]},{"content":"Called to indicate that all processing to handle a deferred event is complete.","pos":[1423,1501]},{"content":"Remarks","pos":[1511,1518]},{"content":"Instances of this class are passed to event handlers for deferred events.","pos":[1522,1595]},{"content":"The template parameters represent an interface that defines the details of the event arguments for a specific type of deferred event, and a class that implements that interface.","pos":[1596,1773]},{"content":"The class appears as the first argument to an event handler for a deferred event.","pos":[1780,1861]},{"content":"You can call the <bpt id=\"p1\">[</bpt>GetDeferral<ept id=\"p1\">](../windows/deferrableeventargs-getdeferral-method.md)</ept> method to get the <bpt id=\"p2\">[</bpt>Deferral<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkId=526520)</ept> object from which you can get all the information about the deferred event.","pos":[1862,2098],"source":" You can call the [GetDeferral](../windows/deferrableeventargs-getdeferral-method.md) method to get the [Deferral](http://go.microsoft.com/fwlink/?LinkId=526520) object from which you can get all the information about the deferred event."},{"content":"After completing the event handling, you should call Complete on the Deferral object.","pos":[2099,2184]},{"content":"You should then call <bpt id=\"p1\">[</bpt>InvokeAllFinished<ept id=\"p1\">](../windows/deferrableeventargs-invokeallfinished-method.md)</ept> at the end of the event handler method, which ensures that the completion of all deferred events is communicated properly.","pos":[2185,2408],"source":" You should then call [InvokeAllFinished](../windows/deferrableeventargs-invokeallfinished-method.md) at the end of the event handler method, which ensures that the completion of all deferred events is communicated properly."},{"content":"Requirements","pos":[2417,2429]},{"pos":[2433,2452],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> event.h","source":"**Header:** event.h"},{"pos":[2459,2488],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> Microsoft::WRL","source":"**Namespace:** Microsoft::WRL"},{"content":"See Also","pos":[2497,2505]},{"content":"Microsoft::WRL Namespace","pos":[2510,2534]}],"content":"---\ntitle: \"DeferrableEventArgs Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\ndev_langs: \n  - \"C++\"\nms.assetid: ece89267-7b72-40e1-8185-550c865b070a\ncaps.latest.revision: 3\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# DeferrableEventArgs Class\nA template class used for the event argument types for deferrals.  \n  \n## Syntax  \n  \n```cpp  \ntemplate <  \ntypename TEventArgsInterface,  \ntypename TEventArgsClass  \n>  \nclass DeferrableEventArgs : public TEventArgsInterface  \n  \n```  \n  \n#### Parameters  \n `TEventArgsInterface`  \n The interface type that declares the arguments for a deferred event.  \n  \n `TEventArgsClass`  \n The class that implements `TEventArgsInterface`.  \n  \n## Members  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[DeferrableEventArgs::GetDeferral Method](../windows/deferrableeventargs-getdeferral-method.md)|Gets a reference to the [Deferral](http://go.microsoft.com/fwlink/?LinkId=526520) object which represents a deferred event.|  \n|[DeferrableEventArgs::InvokeAllFinished Method](../windows/deferrableeventargs-invokeallfinished-method.md)|Called to indicate that all processing to handle a deferred event is complete.|  \n  \n## Remarks  \n Instances of this class are passed to event handlers for deferred events. The template parameters represent an interface that defines the details of the event arguments for a specific type of deferred event, and a class that implements that interface.  \n  \n The class appears as the first argument to an event handler for a deferred event. You can call the [GetDeferral](../windows/deferrableeventargs-getdeferral-method.md) method to get the [Deferral](http://go.microsoft.com/fwlink/?LinkId=526520) object from which you can get all the information about the deferred event. After completing the event handling, you should call Complete on the Deferral object. You should then call [InvokeAllFinished](../windows/deferrableeventargs-invokeallfinished-method.md) at the end of the event handler method, which ensures that the completion of all deferred events is communicated properly.  \n  \n## Requirements  \n **Header:** event.h  \n  \n **Namespace:** Microsoft::WRL  \n  \n## See Also  \n [Microsoft::WRL Namespace](../windows/microsoft-wrl-namespace.md)"}