{"nodes":[{"pos":[12,51],"content":"2.3 parallel Construct | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"2.3 parallel Construct | Microsoft Docs","pos":[0,39]}]},{"content":"2.3 parallel Construct","pos":[531,553]},{"content":"The following directive defines a parallel region, which is a region of the program that is to be executed by multiple threads in parallel.","pos":[554,693]},{"content":"This is the fundamental construct that starts parallel execution.","pos":[694,759]},{"pos":[858,895],"content":"The <bpt id=\"p1\">*</bpt>clause<ept id=\"p1\">*</ept> is one of the following:","source":"The *clause* is one of the following:"},{"pos":[902,935],"content":"<bpt id=\"p1\">**</bpt>if(<ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt>scalar-expression<ept id=\"p2\">*</ept> <bpt id=\"p3\">**</bpt>)<ept id=\"p3\">**</ept>","source":"**if(** *scalar-expression* **)**"},{"pos":[942,976],"content":"<bpt id=\"p1\">**</bpt>private(<ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt>variable-list<ept id=\"p2\">*</ept> <bpt id=\"p3\">**</bpt>)<ept id=\"p3\">**</ept>","source":"**private(** *variable-list* **)**"},{"pos":[983,1022],"content":"<bpt id=\"p1\">**</bpt>firstprivate(<ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt>variable-list<ept id=\"p2\">*</ept> <bpt id=\"p3\">**</bpt>)<ept id=\"p3\">**</ept>","source":"**firstprivate(** *variable-list* **)**"},{"content":"default(shared &amp;#124; none)","pos":[1031,1058],"source":"default(shared &#124; none)"},{"pos":[1067,1100],"content":"<bpt id=\"p1\">**</bpt>shared(<ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt>variable-list<ept id=\"p2\">*</ept> <bpt id=\"p3\">**</bpt>)<ept id=\"p3\">**</ept>","source":"**shared(** *variable-list* **)**"},{"pos":[1107,1140],"content":"<bpt id=\"p1\">**</bpt>copyin(<ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt>variable-list<ept id=\"p2\">*</ept> <bpt id=\"p3\">**</bpt>)<ept id=\"p3\">**</ept>","source":"**copyin(** *variable-list* **)**"},{"pos":[1147,1201],"content":"<bpt id=\"p1\">**</bpt>reduction(<ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt>operator<ept id=\"p2\">*</ept> <bpt id=\"p3\">**</bpt>:<ept id=\"p3\">**</ept>  <bpt id=\"p4\">*</bpt>variable-list<ept id=\"p4\">*</ept> <bpt id=\"p5\">**</bpt>)<ept id=\"p5\">**</ept>","source":"**reduction(** *operator* **:**  *variable-list* **)**"},{"pos":[1208,1251],"content":"<bpt id=\"p1\">**</bpt>num_threads(<ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt>integer-expression<ept id=\"p2\">*</ept> <bpt id=\"p3\">**</bpt>)<ept id=\"p3\">**</ept>","source":"**num_threads(** *integer-expression* **)**"},{"content":"When a thread encounters a parallel construct, a team of threads is created if one of the following cases is true:","pos":[1258,1372]},{"pos":[1382,1410],"content":"No <bpt id=\"p1\">**</bpt>if<ept id=\"p1\">**</ept> clause is present.","source":"No **if** clause is present."},{"pos":[1420,1471],"content":"The <bpt id=\"p1\">**</bpt>if<ept id=\"p1\">**</ept> expression evaluates to a nonzero value.","source":"The **if** expression evaluates to a nonzero value."},{"content":"This thread becomes the master thread of the team, with a thread number of 0, and all threads in the team, including the master thread, execute the region in parallel.","pos":[1478,1645]},{"content":"If the value of the <bpt id=\"p1\">**</bpt>if<ept id=\"p1\">**</ept> expression is zero, the region is serialized.","pos":[1646,1718],"source":" If the value of the **if** expression is zero, the region is serialized."},{"content":"To determine the number of threads that are requested, the following rules will be considered in order.","pos":[1725,1828]},{"content":"The first rule whose condition is met will be applied:","pos":[1829,1883]},{"pos":[1893,2011],"content":"If the <bpt id=\"p1\">**</bpt>num_threads<ept id=\"p1\">**</ept> clause is present, then the value of the integer expression is the number of threads requested.","source":"If the **num_threads** clause is present, then the value of the integer expression is the number of threads requested."},{"pos":[2021,2187],"content":"If the <bpt id=\"p1\">**</bpt>omp_set_num_threads<ept id=\"p1\">**</ept> library function has been called, then the value of the argument in the most recently executed call is the number of threads requested.","source":"If the **omp_set_num_threads** library function has been called, then the value of the argument in the most recently executed call is the number of threads requested."},{"pos":[2197,2336],"content":"If the environment variable <bpt id=\"p1\">**</bpt>OMP_NUM_THREADS<ept id=\"p1\">**</ept> is defined, then the value of this environment variable is the number of threads requested.","source":"If the environment variable **OMP_NUM_THREADS** is defined, then the value of this environment variable is the number of threads requested."},{"content":"If none of the methods above were used, then the number of threads requested is implementation-defined.","pos":[2346,2449]},{"content":"If the <bpt id=\"p1\">**</bpt>num_threads<ept id=\"p1\">**</ept> clause is present then it supersedes the number of threads requested by the <bpt id=\"p2\">**</bpt>omp_set_num_threads<ept id=\"p2\">**</ept> library function or the <bpt id=\"p3\">**</bpt>OMP_NUM_THREADS<ept id=\"p3\">**</ept> environment variable only for the parallel region it is applied to.","pos":[2456,2690],"source":"If the **num_threads** clause is present then it supersedes the number of threads requested by the **omp_set_num_threads** library function or the **OMP_NUM_THREADS** environment variable only for the parallel region it is applied to."},{"content":"Subsequent parallel regions are not affected by it.","pos":[2691,2742]},{"content":"The number of threads that execute the parallel region also depends upon whether or not dynamic adjustment of the number of threads is enabled.","pos":[2749,2892]},{"content":"If dynamic adjustment is disabled, then the requested number of threads will execute the parallel region.","pos":[2893,2998]},{"content":"If dynamic adjustment is enabled then the requested number of threads is the maximum number of threads that may execute the parallel region.","pos":[2999,3139]},{"content":"If a parallel region is encountered while dynamic adjustment of the number of threads is disabled, and the number of threads requested for the parallel region exceeds the number that the run-time system can supply, the behavior of the program is implementation-defined.","pos":[3146,3415]},{"content":"An implementation may, for example, interrupt the execution of the program, or it may serialize the parallel region.","pos":[3416,3532]},{"pos":[3539,3703],"content":"The <bpt id=\"p1\">**</bpt>omp_set_dynamic<ept id=\"p1\">**</ept> library function and the <bpt id=\"p2\">**</bpt>OMP_DYNAMIC<ept id=\"p2\">**</ept> environment variable can be used to enable and disable dynamic adjustment of the number of threads.","source":"The **omp_set_dynamic** library function and the **OMP_DYNAMIC** environment variable can be used to enable and disable dynamic adjustment of the number of threads."},{"content":"The number of physical processors actually hosting the threads at any given time is implementation-defined.","pos":[3710,3817]},{"content":"Once created, the number of threads in the team remains constant for the duration of that parallel region.","pos":[3818,3924]},{"content":"It can be changed either explicitly by the user or automatically by the run-time system from one parallel region to another.","pos":[3925,4049]},{"content":"The statements contained within the dynamic extent of the parallel region are executed by each thread, and each thread can execute a path of statements that is different from the other threads.","pos":[4056,4249]},{"content":"Directives encountered outside the lexical extent of a parallel region are referred to as orphaned directives.","pos":[4250,4360]},{"content":"There is an implied barrier at the end of a parallel region.","pos":[4367,4427]},{"content":"Only the master thread of the team continues execution at the end of a parallel region.","pos":[4428,4515]},{"content":"If a thread in a team executing a parallel region encounters another parallel construct, it creates a new team, and it becomes the master of that new team.","pos":[4522,4677]},{"content":"Nested parallel regions are serialized by default.","pos":[4678,4728]},{"content":"As a result, by default, a nested parallel region is executed by a team composed of one thread.","pos":[4729,4824]},{"content":"The default behavior may be changed by using either the runtime library function <bpt id=\"p1\">**</bpt>omp_set_nested<ept id=\"p1\">**</ept> or the environment variable <bpt id=\"p2\">**</bpt>OMP_NESTED<ept id=\"p2\">**</ept>.","pos":[4825,4968],"source":" The default behavior may be changed by using either the runtime library function **omp_set_nested** or the environment variable **OMP_NESTED**."},{"content":"However, the number of threads in a team that execute a nested parallel region is implementation-defined.","pos":[4969,5074]},{"pos":[5081,5139],"content":"Restrictions to the <bpt id=\"p1\">**</bpt>parallel<ept id=\"p1\">**</ept> directive are as follows:","source":"Restrictions to the **parallel** directive are as follows:"},{"pos":[5149,5203],"content":"At most one <bpt id=\"p1\">**</bpt>if<ept id=\"p1\">**</ept> clause can appear on the directive.","source":"At most one **if** clause can appear on the directive."},{"pos":[5213,5317],"content":"It is unspecified whether any side effects inside the if expression or <bpt id=\"p1\">**</bpt>num_threads<ept id=\"p1\">**</ept> expression occur.","source":"It is unspecified whether any side effects inside the if expression or **num_threads** expression occur."},{"pos":[5327,5526],"content":"A <bpt id=\"p1\">**</bpt>throw<ept id=\"p1\">**</ept> executed inside a parallel region must cause execution to resume within the dynamic extent of the same structured block, and it must be caught by the same thread that threw the exception.","source":"A **throw** executed inside a parallel region must cause execution to resume within the dynamic extent of the same structured block, and it must be caught by the same thread that threw the exception."},{"content":"Only a single <bpt id=\"p1\">**</bpt>num_threads<ept id=\"p1\">**</ept> clause can appear on the directive.","pos":[5536,5601],"source":"Only a single **num_threads** clause can appear on the directive."},{"content":"The <bpt id=\"p1\">**</bpt>num_threads<ept id=\"p1\">**</ept> expression is evaluated outside the context of the parallel region, and must evaluate to a positive integer value.","pos":[5602,5736],"source":" The **num_threads** expression is evaluated outside the context of the parallel region, and must evaluate to a positive integer value."},{"pos":[5746,5827],"content":"The order of evaluation of the <bpt id=\"p1\">**</bpt>if<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>num_threads<ept id=\"p2\">**</ept> clauses is unspecified.","source":"The order of evaluation of the **if** and **num_threads** clauses is unspecified."},{"content":"Cross References:","pos":[5836,5853]},{"pos":[5863,6052],"content":"<bpt id=\"p1\">**</bpt>private<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>firstprivate<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>default<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>shared<ept id=\"p4\">**</ept>, <bpt id=\"p5\">**</bpt>copyin<ept id=\"p5\">**</ept>, and <bpt id=\"p6\">**</bpt>reduction<ept id=\"p6\">**</ept> clauses, see <bpt id=\"p7\">[</bpt>Section 2.7.2<ept id=\"p7\">](../../parallel/openmp/2-7-2-data-sharing-attribute-clauses.md)</ept> on page 25.","source":"**private**, **firstprivate**, **default**, **shared**, **copyin**, and **reduction** clauses, see [Section 2.7.2](../../parallel/openmp/2-7-2-data-sharing-attribute-clauses.md) on page 25."},{"pos":[6062,6175],"content":"<bpt id=\"p1\">**</bpt>OMP_NUM_THREADS<ept id=\"p1\">**</ept> environment variable, <bpt id=\"p2\">[</bpt>Section 4.2<ept id=\"p2\">](../../parallel/openmp/4-2-omp-num-threads.md)</ept> on page 48.","source":"**OMP_NUM_THREADS** environment variable, [Section 4.2](../../parallel/openmp/4-2-omp-num-threads.md) on page 48."},{"pos":[6185,6311],"content":"<bpt id=\"p1\">**</bpt>omp_set_dynamic<ept id=\"p1\">**</ept> library function, see <bpt id=\"p2\">[</bpt>Section 3.1.7<ept id=\"p2\">](../../parallel/openmp/3-1-7-omp-set-dynamic-function.md)</ept> on page 39.","source":"**omp_set_dynamic** library function, see [Section 3.1.7](../../parallel/openmp/3-1-7-omp-set-dynamic-function.md) on page 39."},{"pos":[6321,6430],"content":"<bpt id=\"p1\">**</bpt>OMP_DYNAMIC<ept id=\"p1\">**</ept> environment variable, see <bpt id=\"p2\">[</bpt>Section 4.3<ept id=\"p2\">](../../parallel/openmp/4-3-omp-dynamic.md)</ept> on page 49.","source":"**OMP_DYNAMIC** environment variable, see [Section 4.3](../../parallel/openmp/4-3-omp-dynamic.md) on page 49."},{"pos":[6440,6556],"content":"<bpt id=\"p1\">**</bpt>omp_set_nested<ept id=\"p1\">**</ept> function, see <bpt id=\"p2\">[</bpt>Section 3.1.9<ept id=\"p2\">](../../parallel/openmp/3-1-9-omp-set-nested-function.md)</ept> on page 40.","source":"**omp_set_nested** function, see [Section 3.1.9](../../parallel/openmp/3-1-9-omp-set-nested-function.md) on page 40."},{"pos":[6566,6673],"content":"<bpt id=\"p1\">**</bpt>OMP_NESTED<ept id=\"p1\">**</ept> environment variable, see <bpt id=\"p2\">[</bpt>Section 4.4<ept id=\"p2\">](../../parallel/openmp/4-4-omp-nested.md)</ept> on page 49.","source":"**OMP_NESTED** environment variable, see [Section 4.4](../../parallel/openmp/4-4-omp-nested.md) on page 49."},{"pos":[6683,6817],"content":"<bpt id=\"p1\">**</bpt>omp_set_num_threads<ept id=\"p1\">**</ept> library function, see <bpt id=\"p2\">[</bpt>Section 3.1.1<ept id=\"p2\">](../../parallel/openmp/3-1-1-omp-set-num-threads-function.md)</ept> on page 36.","source":"**omp_set_num_threads** library function, see [Section 3.1.1](../../parallel/openmp/3-1-1-omp-set-num-threads-function.md) on page 36."}],"content":"---\ntitle: \"2.3 parallel Construct | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nms.assetid: 190eacdf-2c16-4c06-8cb7-ac60eb211425\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# 2.3 parallel Construct\nThe following directive defines a parallel region, which is a region of the program that is to be executed by multiple threads in parallel. This is the fundamental construct that starts parallel execution.  \n  \n```  \n#pragma omp parallel [clause[ [, ]clause] ...] new-line   structured-block  \n```  \n  \n The *clause* is one of the following:  \n  \n **if(** *scalar-expression* **)**  \n  \n **private(** *variable-list* **)**  \n  \n **firstprivate(** *variable-list* **)**  \n  \n **default(shared &#124; none)**  \n  \n **shared(** *variable-list* **)**  \n  \n **copyin(** *variable-list* **)**  \n  \n **reduction(** *operator* **:**  *variable-list* **)**  \n  \n **num_threads(** *integer-expression* **)**  \n  \n When a thread encounters a parallel construct, a team of threads is created if one of the following cases is true:  \n  \n-   No **if** clause is present.  \n  \n-   The **if** expression evaluates to a nonzero value.  \n  \n This thread becomes the master thread of the team, with a thread number of 0, and all threads in the team, including the master thread, execute the region in parallel. If the value of the **if** expression is zero, the region is serialized.  \n  \n To determine the number of threads that are requested, the following rules will be considered in order. The first rule whose condition is met will be applied:  \n  \n1.  If the **num_threads** clause is present, then the value of the integer expression is the number of threads requested.  \n  \n2.  If the **omp_set_num_threads** library function has been called, then the value of the argument in the most recently executed call is the number of threads requested.  \n  \n3.  If the environment variable **OMP_NUM_THREADS** is defined, then the value of this environment variable is the number of threads requested.  \n  \n4.  If none of the methods above were used, then the number of threads requested is implementation-defined.  \n  \n If the **num_threads** clause is present then it supersedes the number of threads requested by the **omp_set_num_threads** library function or the **OMP_NUM_THREADS** environment variable only for the parallel region it is applied to. Subsequent parallel regions are not affected by it.  \n  \n The number of threads that execute the parallel region also depends upon whether or not dynamic adjustment of the number of threads is enabled. If dynamic adjustment is disabled, then the requested number of threads will execute the parallel region. If dynamic adjustment is enabled then the requested number of threads is the maximum number of threads that may execute the parallel region.  \n  \n If a parallel region is encountered while dynamic adjustment of the number of threads is disabled, and the number of threads requested for the parallel region exceeds the number that the run-time system can supply, the behavior of the program is implementation-defined. An implementation may, for example, interrupt the execution of the program, or it may serialize the parallel region.  \n  \n The **omp_set_dynamic** library function and the **OMP_DYNAMIC** environment variable can be used to enable and disable dynamic adjustment of the number of threads.  \n  \n The number of physical processors actually hosting the threads at any given time is implementation-defined. Once created, the number of threads in the team remains constant for the duration of that parallel region. It can be changed either explicitly by the user or automatically by the run-time system from one parallel region to another.  \n  \n The statements contained within the dynamic extent of the parallel region are executed by each thread, and each thread can execute a path of statements that is different from the other threads. Directives encountered outside the lexical extent of a parallel region are referred to as orphaned directives.  \n  \n There is an implied barrier at the end of a parallel region. Only the master thread of the team continues execution at the end of a parallel region.  \n  \n If a thread in a team executing a parallel region encounters another parallel construct, it creates a new team, and it becomes the master of that new team. Nested parallel regions are serialized by default. As a result, by default, a nested parallel region is executed by a team composed of one thread. The default behavior may be changed by using either the runtime library function **omp_set_nested** or the environment variable **OMP_NESTED**. However, the number of threads in a team that execute a nested parallel region is implementation-defined.  \n  \n Restrictions to the **parallel** directive are as follows:  \n  \n-   At most one **if** clause can appear on the directive.  \n  \n-   It is unspecified whether any side effects inside the if expression or **num_threads** expression occur.  \n  \n-   A **throw** executed inside a parallel region must cause execution to resume within the dynamic extent of the same structured block, and it must be caught by the same thread that threw the exception.  \n  \n-   Only a single **num_threads** clause can appear on the directive. The **num_threads** expression is evaluated outside the context of the parallel region, and must evaluate to a positive integer value.  \n  \n-   The order of evaluation of the **if** and **num_threads** clauses is unspecified.  \n  \n## Cross References:  \n  \n-   **private**, **firstprivate**, **default**, **shared**, **copyin**, and **reduction** clauses, see [Section 2.7.2](../../parallel/openmp/2-7-2-data-sharing-attribute-clauses.md) on page 25.  \n  \n-   **OMP_NUM_THREADS** environment variable, [Section 4.2](../../parallel/openmp/4-2-omp-num-threads.md) on page 48.  \n  \n-   **omp_set_dynamic** library function, see [Section 3.1.7](../../parallel/openmp/3-1-7-omp-set-dynamic-function.md) on page 39.  \n  \n-   **OMP_DYNAMIC** environment variable, see [Section 4.3](../../parallel/openmp/4-3-omp-dynamic.md) on page 49.  \n  \n-   **omp_set_nested** function, see [Section 3.1.9](../../parallel/openmp/3-1-9-omp-set-nested-function.md) on page 40.  \n  \n-   **OMP_NESTED** environment variable, see [Section 4.4](../../parallel/openmp/4-4-omp-nested.md) on page 49.  \n  \n-   **omp_set_num_threads** library function, see [Section 3.1.1](../../parallel/openmp/3-1-1-omp-set-num-threads-function.md) on page 36."}