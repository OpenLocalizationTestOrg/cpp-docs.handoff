{"nodes":[{"pos":[12,43],"content":"Output Streams | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Output Streams | Microsoft Docs","pos":[0,31]}]},{"pos":[567,581],"content":"Output Streams","linkify":"Output Streams","nodes":[{"content":"Output Streams","pos":[0,14]}]},{"content":"An output stream object is a destination for bytes.","pos":[582,633]},{"content":"The three most important output stream classes are <ph id=\"ph1\">`ostream`</ph>, <ph id=\"ph2\">`ofstream`</ph>, and <ph id=\"ph3\">`ostringstream`</ph>.","pos":[634,728],"source":" The three most important output stream classes are `ostream`, `ofstream`, and `ostringstream`."},{"pos":[735,838],"content":"The <ph id=\"ph1\">`ostream`</ph> class, through the derived class <ph id=\"ph2\">`basic_ostream`</ph>, supports the predefined stream objects:","source":"The `ostream` class, through the derived class `basic_ostream`, supports the predefined stream objects:"},{"pos":[848,870],"content":"<ph id=\"ph1\">`cout`</ph> standard output","source":"`cout` standard output"},{"pos":[880,924],"content":"<ph id=\"ph1\">`cerr`</ph> standard error with limited buffering","source":"`cerr` standard error with limited buffering"},{"pos":[934,982],"content":"<ph id=\"ph1\">`clog`</ph> similar to <ph id=\"ph2\">`cerr`</ph> but with full buffering","source":"`clog` similar to `cerr` but with full buffering"},{"content":"Objects are rarely constructed from <ph id=\"ph1\">`ostream`</ph>; predefined objects are generally used.","pos":[989,1074],"source":"Objects are rarely constructed from `ostream`; predefined objects are generally used."},{"content":"In some cases, you can reassign predefined objects after program startup.","pos":[1075,1148]},{"content":"The <ph id=\"ph1\">`ostream`</ph> class, which can be configured for buffered or unbuffered operation, is best suited to sequential text-mode output.","pos":[1149,1278],"source":" The `ostream` class, which can be configured for buffered or unbuffered operation, is best suited to sequential text-mode output."},{"content":"All functionality of the base class, <ph id=\"ph1\">`ios`</ph>, is included in <ph id=\"ph2\">`ostream`</ph>.","pos":[1279,1348],"source":" All functionality of the base class, `ios`, is included in `ostream`."},{"content":"If you construct an object of class <ph id=\"ph1\">`ostream`</ph>, you must specify a <ph id=\"ph2\">`streambuf`</ph> object to the constructor.","pos":[1349,1453],"source":" If you construct an object of class `ostream`, you must specify a `streambuf` object to the constructor."},{"content":"The <ph id=\"ph1\">`ofstream`</ph> class supports disk file output.","pos":[1460,1507],"source":"The `ofstream` class supports disk file output."},{"content":"If you need an output-only disk, construct an object of class <ph id=\"ph1\">`ofstream`</ph>.","pos":[1508,1581],"source":" If you need an output-only disk, construct an object of class `ofstream`."},{"content":"You can specify whether <ph id=\"ph1\">`ofstream`</ph> objects accept binary or text-mode data when constructing the <ph id=\"ph2\">`ofstream`</ph> object or when calling the <ph id=\"ph3\">`open`</ph> member function of the object.","pos":[1582,1754],"source":" You can specify whether `ofstream` objects accept binary or text-mode data when constructing the `ofstream` object or when calling the `open` member function of the object."},{"content":"Many formatting options and member functions apply to <ph id=\"ph1\">`ofstream`</ph> objects, and all functionality of the base classes <ph id=\"ph2\">`ios`</ph> and <ph id=\"ph3\">`ostream`</ph> is included.","pos":[1755,1903],"source":" Many formatting options and member functions apply to `ofstream` objects, and all functionality of the base classes `ios` and `ostream` is included."},{"content":"If you specify a filename in the constructor, that file is automatically opened when the object is constructed.","pos":[1910,2021]},{"content":"Otherwise, you can use the <ph id=\"ph1\">`open`</ph> member function after invoking the default constructor.","pos":[2022,2111],"source":" Otherwise, you can use the `open` member function after invoking the default constructor."},{"content":"Like the run-time function <ph id=\"ph1\">`sprintf_s`</ph>, the <ph id=\"ph2\">`ostringstream`</ph> class supports output to in-memory strings.","pos":[2118,2221],"source":"Like the run-time function `sprintf_s`, the `ostringstream` class supports output to in-memory strings."},{"content":"To create a string in memory by using I/O stream formatting, construct an object of class <ph id=\"ph1\">`ostringstream`</ph>.","pos":[2222,2328],"source":" To create a string in memory by using I/O stream formatting, construct an object of class `ostringstream`."},{"pos":[2337,2352],"content":"In This Section","linkify":"In This Section","nodes":[{"content":"In This Section","pos":[0,15]}]},{"pos":[2356,2451],"content":"<bpt id=\"p1\">[</bpt>Constructing Output Stream Objects<ept id=\"p1\">](../standard-library/constructing-output-stream-objects.md)</ept>","source":"[Constructing Output Stream Objects](../standard-library/constructing-output-stream-objects.md)"},{"pos":[2458,2581],"content":"<bpt id=\"p1\">[</bpt>Using Insertion Operators and Controlling Format<ept id=\"p1\">](../standard-library/using-insertion-operators-and-controlling-format.md)</ept>","source":"[Using Insertion Operators and Controlling Format](../standard-library/using-insertion-operators-and-controlling-format.md)"},{"pos":[2588,2685],"content":"<bpt id=\"p1\">[</bpt>Output File Stream Member Functions<ept id=\"p1\">](../standard-library/output-file-stream-member-functions.md)</ept>","source":"[Output File Stream Member Functions](../standard-library/output-file-stream-member-functions.md)"},{"pos":[2692,2759],"content":"<bpt id=\"p1\">[</bpt>Effects of Buffering<ept id=\"p1\">](../standard-library/effects-of-buffering.md)</ept>","source":"[Effects of Buffering](../standard-library/effects-of-buffering.md)"},{"pos":[2766,2831],"content":"<bpt id=\"p1\">[</bpt>Binary Output Files<ept id=\"p1\">](../standard-library/binary-output-files.md)</ept>","source":"[Binary Output Files](../standard-library/binary-output-files.md)"},{"pos":[2838,2965],"content":"<bpt id=\"p1\">[</bpt>Overloading the &lt;&lt; Operator for Your Own Classes<ept id=\"p1\">](../standard-library/overloading-the-output-operator-for-your-own-classes.md)</ept>","source":"[Overloading the << Operator for Your Own Classes](../standard-library/overloading-the-output-operator-for-your-own-classes.md)"},{"pos":[2972,3093],"content":"<bpt id=\"p1\">[</bpt>Writing Your Own Manipulators Without Arguments<ept id=\"p1\">](../standard-library/writing-your-own-manipulators-without-arguments.md)</ept>","source":"[Writing Your Own Manipulators Without Arguments](../standard-library/writing-your-own-manipulators-without-arguments.md)"},{"pos":[3102,3110],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>ofstream<ept id=\"p1\">](../standard-library/basic-ofstream-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[3113,3169],"source":"[ofstream](../standard-library/basic-ofstream-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>ostringstream<ept id=\"p1\">](../standard-library/basic-ostringstream-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[3172,3239],"source":" [ostringstream](../standard-library/basic-ostringstream-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>iostream Programming<ept id=\"p1\">](../standard-library/iostream-programming.md)</ept>","pos":[3242,3310],"source":" [iostream Programming](../standard-library/iostream-programming.md)"}],"content":"---\ntitle: \"Output Streams | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"output streams\"\nms.assetid: b49410e3-5caa-4153-9d0d-c4266408dc83\ncaps.latest.revision: 12\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Output Streams\nAn output stream object is a destination for bytes. The three most important output stream classes are `ostream`, `ofstream`, and `ostringstream`.  \n  \n The `ostream` class, through the derived class `basic_ostream`, supports the predefined stream objects:  \n  \n-   `cout` standard output  \n  \n-   `cerr` standard error with limited buffering  \n  \n-   `clog` similar to `cerr` but with full buffering  \n  \n Objects are rarely constructed from `ostream`; predefined objects are generally used. In some cases, you can reassign predefined objects after program startup. The `ostream` class, which can be configured for buffered or unbuffered operation, is best suited to sequential text-mode output. All functionality of the base class, `ios`, is included in `ostream`. If you construct an object of class `ostream`, you must specify a `streambuf` object to the constructor.  \n  \n The `ofstream` class supports disk file output. If you need an output-only disk, construct an object of class `ofstream`. You can specify whether `ofstream` objects accept binary or text-mode data when constructing the `ofstream` object or when calling the `open` member function of the object. Many formatting options and member functions apply to `ofstream` objects, and all functionality of the base classes `ios` and `ostream` is included.  \n  \n If you specify a filename in the constructor, that file is automatically opened when the object is constructed. Otherwise, you can use the `open` member function after invoking the default constructor.  \n  \n Like the run-time function `sprintf_s`, the `ostringstream` class supports output to in-memory strings. To create a string in memory by using I/O stream formatting, construct an object of class `ostringstream`.  \n  \n## In This Section  \n [Constructing Output Stream Objects](../standard-library/constructing-output-stream-objects.md)  \n  \n [Using Insertion Operators and Controlling Format](../standard-library/using-insertion-operators-and-controlling-format.md)  \n  \n [Output File Stream Member Functions](../standard-library/output-file-stream-member-functions.md)  \n  \n [Effects of Buffering](../standard-library/effects-of-buffering.md)  \n  \n [Binary Output Files](../standard-library/binary-output-files.md)  \n  \n [Overloading the << Operator for Your Own Classes](../standard-library/overloading-the-output-operator-for-your-own-classes.md)  \n  \n [Writing Your Own Manipulators Without Arguments](../standard-library/writing-your-own-manipulators-without-arguments.md)  \n  \n## See Also \n [ofstream](../standard-library/basic-ofstream-class.md)   \n [ostringstream](../standard-library/basic-ostringstream-class.md)   \n [iostream Programming](../standard-library/iostream-programming.md)\n\n"}