{"nodes":[{"pos":[12,44],"content":"memcmp, wmemcmp | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"memcmp, wmemcmp | Microsoft Docs","pos":[0,32]}]},{"pos":[923,938],"content":"memcmp, wmemcmp","linkify":"memcmp, wmemcmp","nodes":[{"content":"memcmp, wmemcmp","pos":[0,15]}]},{"content":"Compares characters in two buffers.","pos":[939,974]},{"pos":[983,989],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1199,1209],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"First buffer.","pos":[1223,1236]},{"content":"Second buffer.","pos":[1253,1267]},{"content":"Number of characters to compare.","pos":[1285,1317]},{"content":"(Compares bytes for <ph id=\"ph1\">`memcmp`</ph>, wide characters for <ph id=\"ph2\">`wmemcmp`</ph>).","pos":[1318,1379],"source":" (Compares bytes for `memcmp`, wide characters for `wmemcmp`)."},{"pos":[1388,1400],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The return value indicates the relationship between the buffers.","pos":[1404,1468]},{"content":"Return value","pos":[1475,1487]},{"pos":[1488,1545],"content":"Relationship of first <ph id=\"ph1\">`count`</ph> characters of buf1 and buf2","source":"Relationship of first `count` characters of buf1 and buf2"},{"content":"&lt; 0","pos":[1637,1640],"source":"< 0"},{"pos":[1641,1664],"content":"<ph id=\"ph1\">`buf1`</ph> less than <ph id=\"ph2\">`buf2`</ph>","source":"`buf1` less than `buf2`"},{"content":"0","pos":[1669,1670]},{"pos":[1671,1697],"content":"<ph id=\"ph1\">`buf1`</ph> identical to <ph id=\"ph2\">`buf2`</ph>","source":"`buf1` identical to `buf2`"},{"content":"&gt; 0","pos":[1702,1705],"source":"> 0"},{"pos":[1706,1732],"content":"<ph id=\"ph1\">`buf1`</ph> greater than <ph id=\"ph2\">`buf2`</ph>","source":"`buf1` greater than `buf2`"},{"pos":[1742,1749],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Compares the first <ph id=\"ph1\">`count`</ph> characters of <ph id=\"ph2\">`buf1`</ph> and <ph id=\"ph3\">`buf2`</ph> and returns a value that indicates their relationship.","pos":[1753,1866],"source":"Compares the first `count` characters of `buf1` and `buf2` and returns a value that indicates their relationship."},{"content":"The sign of a non-zero return value is the sign of the difference between the first differing pair of values in the buffers.","pos":[1867,1991]},{"content":"The values are interpreted as <ph id=\"ph1\">`unsigned char`</ph> for <ph id=\"ph2\">`memcmp`</ph>, and as <ph id=\"ph3\">`wchar_t`</ph> for <ph id=\"ph4\">`wmemcmp`</ph>.","pos":[1992,2083],"source":" The values are interpreted as `unsigned char` for `memcmp`, and as `wchar_t` for `wmemcmp`."},{"pos":[2092,2104],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[2111,2118]},{"content":"Required header","pos":[2119,2134]},{"content":"<ph id=\"ph1\">\\&lt;</ph>memory.h&gt; or <ph id=\"ph2\">\\&lt;</ph>string.h&gt;","pos":[2188,2214],"source":"\\<memory.h> or \\<string.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>wchar.h&gt;","pos":[2229,2239],"source":"\\<wchar.h>"},{"pos":[2247,2351],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[2360,2369],"content":"Libraries","linkify":"Libraries","nodes":[{"content":"Libraries","pos":[0,9]}]},{"pos":[2373,2463],"content":"All versions of the <bpt id=\"p1\">[</bpt>C run-time library<ept id=\"p1\">](../../c-runtime-library/crt-library-features.md)</ept>.","source":"All versions of the [C run-time library](../../c-runtime-library/crt-library-features.md)."},{"pos":[2472,2479],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3684,3690],"content":"Output","linkify":"Output","nodes":[{"content":"Output","pos":[0,6]}]},{"pos":[3859,3884],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"content":"Not applicable.","pos":[3888,3903]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[3904,3951],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[3952,4077],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"pos":[4086,4094],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Buffer Manipulation<ept id=\"p1\">](../../c-runtime-library/buffer-manipulation.md)</ept><ph id=\"ph1\"> </ph>","pos":[4098,4168],"source":"[Buffer Manipulation](../../c-runtime-library/buffer-manipulation.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_memccpy<ept id=\"p1\">](../../c-runtime-library/reference/memccpy.md)</ept><ph id=\"ph1\"> </ph>","pos":[4171,4229],"source":" [_memccpy](../../c-runtime-library/reference/memccpy.md) "},{"content":"<bpt id=\"p1\"> [</bpt>memchr, wmemchr<ept id=\"p1\">](../../c-runtime-library/reference/memchr-wmemchr.md)</ept><ph id=\"ph1\"> </ph>","pos":[4232,4304],"source":" [memchr, wmemchr](../../c-runtime-library/reference/memchr-wmemchr.md) "},{"content":"<bpt id=\"p1\"> [</bpt>memcpy, wmemcpy<ept id=\"p1\">](../../c-runtime-library/reference/memcpy-wmemcpy.md)</ept><ph id=\"ph1\"> </ph>","pos":[4307,4379],"source":" [memcpy, wmemcpy](../../c-runtime-library/reference/memcpy-wmemcpy.md) "},{"content":"<bpt id=\"p1\"> [</bpt>memset, wmemset<ept id=\"p1\">](../../c-runtime-library/reference/memset-wmemset.md)</ept><ph id=\"ph1\"> </ph>","pos":[4382,4454],"source":" [memset, wmemset](../../c-runtime-library/reference/memset-wmemset.md) "},{"content":"<bpt id=\"p1\"> [</bpt>strcmp, wcscmp, _mbscmp<ept id=\"p1\">](../../c-runtime-library/reference/strcmp-wcscmp-mbscmp.md)</ept><ph id=\"ph1\"> </ph>","pos":[4457,4543],"source":" [strcmp, wcscmp, _mbscmp](../../c-runtime-library/reference/strcmp-wcscmp-mbscmp.md) "},{"content":"<bpt id=\"p1\"> [</bpt>strncmp, wcsncmp, _mbsncmp, _mbsncmp_l<ept id=\"p1\">](../../c-runtime-library/reference/strncmp-wcsncmp-mbsncmp-mbsncmp-l.md)</ept>","pos":[4546,4659],"source":" [strncmp, wcsncmp, _mbsncmp, _mbsncmp_l](../../c-runtime-library/reference/strncmp-wcsncmp-mbsncmp-mbsncmp-l.md)"}],"content":"---\ntitle: \"memcmp, wmemcmp | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"memcmp\"\n  - \"wmemcmp\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"memcmp\"\n  - \"wmemcmp\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"wmemcmp function\"\n  - \"memcmp function\"\nms.assetid: 0c21c3e3-8ee4-40e5-add1-eb26d225fd8d\ncaps.latest.revision: 14\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# memcmp, wmemcmp\nCompares characters in two buffers.  \n  \n## Syntax  \n  \n```  \n  \n      int memcmp(  \n   const void *buf1,  \n   const void *buf2,  \n   size_t count  \n);  \nint wmemcmp(  \n   const wchar_t * buf1,  \n   const wchar_t * buf2,  \n   size_t count  \n);  \n```  \n  \n#### Parameters  \n `buf1`  \n First buffer.  \n  \n `buf2`  \n Second buffer.  \n  \n `count`  \n Number of characters to compare. (Compares bytes for `memcmp`, wide characters for `wmemcmp`).  \n  \n## Return Value  \n The return value indicates the relationship between the buffers.  \n  \n|Return value|Relationship of first `count` characters of buf1 and buf2|  \n|------------------|---------------------------------------------------------------|  \n|< 0|`buf1` less than `buf2`|  \n|0|`buf1` identical to `buf2`|  \n|> 0|`buf1` greater than `buf2`|  \n  \n## Remarks  \n Compares the first `count` characters of `buf1` and `buf2` and returns a value that indicates their relationship. The sign of a non-zero return value is the sign of the difference between the first differing pair of values in the buffers. The values are interpreted as `unsigned char` for `memcmp`, and as `wchar_t` for `wmemcmp`.  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`memcmp`|\\<memory.h> or \\<string.h>|  \n|`wmemcmp`|\\<wchar.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Libraries  \n All versions of the [C run-time library](../../c-runtime-library/crt-library-features.md).  \n  \n## Example  \n  \n```  \n  \n      // crt_memcmp.c  \n/* This program uses memcmp to compare  \n * the strings named first and second. If the first  \n * 19 bytes of the strings are equal, the program  \n * considers the strings to be equal.  \n */  \n  \n#include <string.h>  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n   char first[]  = \"12345678901234567890\";  \n   char second[] = \"12345678901234567891\";  \n   int int_arr1[] = {1,2,3,4};  \n   int int_arr2[] = {1,2,3,4};  \n   int result;  \n  \n   printf( \"Compare '%.19s' to '%.19s':\\n\", first, second );  \n   result = memcmp( first, second, 19 );  \n   if( result < 0 )  \n      printf( \"First is less than second.\\n\" );  \n   else if( result == 0 )  \n      printf( \"First is equal to second.\\n\" );  \n   else  \n      printf( \"First is greater than second.\\n\" );  \n  \n   printf( \"Compare '%d,%d' to '%d,%d':\\n\", int_arr1[0], int_arr1[1], int_arr2[0], int_arr2[1]);  \n   result = memcmp( int_arr1, int_arr2, sizeof(int) * 2 );  \n   if( result < 0 )  \n      printf( \"int_arr1 is less than int_arr2.\\n\" );  \n   else if( result == 0 )  \n      printf( \"int_arr1 is equal to int_arr2.\\n\" );  \n   else   \n      printf( \"int_arr1 is greater than int_arr2.\\n\" );  \n}  \n```  \n  \n## Output  \n  \n```  \nCompare '1234567890123456789' to '1234567890123456789':  \nFirst is equal to second.  \nCompare '1,2' to '1,2':  \nint_arr1 is equal to int_arr2.  \n```  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [Buffer Manipulation](../../c-runtime-library/buffer-manipulation.md)   \n [_memccpy](../../c-runtime-library/reference/memccpy.md)   \n [memchr, wmemchr](../../c-runtime-library/reference/memchr-wmemchr.md)   \n [memcpy, wmemcpy](../../c-runtime-library/reference/memcpy-wmemcpy.md)   \n [memset, wmemset](../../c-runtime-library/reference/memset-wmemset.md)   \n [strcmp, wcscmp, _mbscmp](../../c-runtime-library/reference/strcmp-wcscmp-mbscmp.md)   \n [strncmp, wcsncmp, _mbsncmp, _mbsncmp_l](../../c-runtime-library/reference/strncmp-wcsncmp-mbsncmp-mbsncmp-l.md)"}