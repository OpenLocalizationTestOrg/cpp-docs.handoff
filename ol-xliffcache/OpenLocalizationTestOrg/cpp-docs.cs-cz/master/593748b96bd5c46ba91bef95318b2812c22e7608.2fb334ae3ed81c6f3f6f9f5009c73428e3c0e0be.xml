{"nodes":[{"pos":[12,39],"content":"hash Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"hash Class | Microsoft Docs","pos":[0,27]}]},{"pos":[732,742],"content":"hash Class","linkify":"hash Class","nodes":[{"content":"hash Class","pos":[0,10]}]},{"content":"Computes hash code for a value.","pos":[743,774]},{"pos":[783,789],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[934,941],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The member function defines a hash function, suitable for mapping values of type <ph id=\"ph1\">`Ty`</ph> to a distribution of index values.","pos":[945,1065],"source":"The member function defines a hash function, suitable for mapping values of type `Ty` to a distribution of index values."},{"content":"The member operator returns a hash code for <ph id=\"ph1\">` val`</ph>, suitable for use with template classes <ph id=\"ph2\">`unordered_map`</ph>, <ph id=\"ph3\">`unordered_multimap`</ph>, <ph id=\"ph4\">`unordered_set`</ph>, and <ph id=\"ph5\">`unordered_multiset`</ph>.","pos":[1066,1238],"source":" The member operator returns a hash code for ` val`, suitable for use with template classes `unordered_map`, `unordered_multimap`, `unordered_set`, and `unordered_multiset`."},{"content":"<ph id=\"ph1\">`Ty`</ph> may be any scalar type, <ph id=\"ph2\">`string`</ph>, <ph id=\"ph3\">`wstring`</ph>, <ph id=\"ph4\">`error_code`</ph>, <ph id=\"ph5\">`error_condition`</ph>, <ph id=\"ph6\">`u16string`</ph>, or <ph id=\"ph7\">`u32string`</ph>.","pos":[1239,1350],"source":"`Ty` may be any scalar type, `string`, `wstring`, `error_code`, `error_condition`, `u16string`, or `u32string`."},{"pos":[1359,1366],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1734,1746],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1750,1775],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>functional&gt;","source":"**Header:** \\<functional>"},{"pos":[1782,1800],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"pos":[1809,1817],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>&lt;unordered_map&gt;<ept id=\"p1\">](../standard-library/unordered-map.md)</ept><ph id=\"ph1\"> </ph>","pos":[1821,1877],"source":"[<unordered_map>](../standard-library/unordered-map.md) "},{"content":"<bpt id=\"p1\"> [</bpt>unordered_multimap Class<ept id=\"p1\">](../standard-library/unordered-multimap-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[1880,1957],"source":" [unordered_multimap Class](../standard-library/unordered-multimap-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>unordered_multiset Class<ept id=\"p1\">](../standard-library/unordered-multiset-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[1960,2037],"source":" [unordered_multiset Class](../standard-library/unordered-multiset-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>&lt;unordered_set&gt;<ept id=\"p1\">](../standard-library/unordered-set.md)</ept>","pos":[2040,2096],"source":" [<unordered_set>](../standard-library/unordered-set.md)"}],"content":"---\ntitle: \"hash Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std.hash\"\n  - \"xfunctional/std::hash\"\n  - \"hash\"\n  - \"typeindex/std::hash\"\n  - \"std::hash\"\n  - \"std.tr1.hash\"\n  - \"std::tr1::hash\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"hash class\"\n  - \"hash class [TR1]\"\nms.assetid: e1b500c6-a5c8-4f6f-ad33-7ec52eb8e2e4\ncaps.latest.revision: 21\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# hash Class\nComputes hash code for a value.  \n  \n## Syntax  \n  \n```  \ntemplate <class Ty>  \nstruct hash  \n : public unary_function<Ty, size_t> {  \n    size_t operator()(Ty val) const; \n };  \n```  \n  \n## Remarks  \n The member function defines a hash function, suitable for mapping values of type `Ty` to a distribution of index values. The member operator returns a hash code for ` val`, suitable for use with template classes `unordered_map`, `unordered_multimap`, `unordered_set`, and `unordered_multiset`. `Ty` may be any scalar type, `string`, `wstring`, `error_code`, `error_condition`, `u16string`, or `u32string`.  \n  \n## Example  \n  \n```cpp  \n// std_tr1__functional__hash.cpp   \n// compile with: /EHsc   \n#include <functional>   \n#include <iostream>   \n#include <unordered_set>   \n  \nint main()   \n    {   \n    std::unordered_set<int, std::hash<int> > c0;   \n    c0.insert(3);   \n    std::cout << *c0.find(3) << std::endl;   \n  \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n3  \n```  \n  \n## Requirements  \n **Header:** \\<functional>  \n  \n **Namespace:** std  \n  \n## See Also  \n [<unordered_map>](../standard-library/unordered-map.md)   \n [unordered_multimap Class](../standard-library/unordered-multimap-class.md)   \n [unordered_multiset Class](../standard-library/unordered-multiset-class.md)   \n [<unordered_set>](../standard-library/unordered-set.md)\n\n"}