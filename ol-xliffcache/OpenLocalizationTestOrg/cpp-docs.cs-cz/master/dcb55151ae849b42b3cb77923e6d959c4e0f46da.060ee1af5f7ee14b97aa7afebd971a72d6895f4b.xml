{"nodes":[{"pos":[12,49],"content":"basic_ofstream Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"basic_ofstream Class | Microsoft Docs","pos":[0,37]}]},{"content":"basic_ofstream Class","pos":[699,719]},{"pos":[720,988],"content":"Describes an object that controls insertion of elements and encoded objects into a stream buffer of class <bpt id=\"p1\">[</bpt>basic_filebuf<ept id=\"p1\">](../standard-library/basic-filebuf-class.md)</ept><ph id=\"ph1\">&lt; `Elem`</ph>, <ph id=\"ph2\">`Tr`</ph>&gt;, with elements of type <ph id=\"ph3\">`Elem`</ph>, whose character traits are determined by the class <ph id=\"ph4\">`Tr`</ph>.","source":"Describes an object that controls insertion of elements and encoded objects into a stream buffer of class [basic_filebuf](../standard-library/basic-filebuf-class.md)< `Elem`, `Tr`>, with elements of type `Elem`, whose character traits are determined by the class `Tr`."},{"content":"Syntax","pos":[997,1003]},{"content":"Parameters","pos":[1135,1145]},{"content":"The basic element of the file buffer.","pos":[1159,1196]},{"content":"The traits of the basic element of the file buffer (usually <ph id=\"ph1\">`char_traits`&lt; `Elem`</ph>&gt;).","pos":[1211,1295],"source":" The traits of the basic element of the file buffer (usually `char_traits`< `Elem`>)."},{"content":"Remarks","pos":[1304,1311]},{"content":"When the <ph id=\"ph1\">`wchar_t`</ph> specialization of <ph id=\"ph2\">`basic_ofstream`</ph> writes to the file, if the file is opened in text mode it will write a MBCS sequence.","pos":[1315,1454],"source":"When the `wchar_t` specialization of `basic_ofstream` writes to the file, if the file is opened in text mode it will write a MBCS sequence."},{"content":"The internal representation will use a buffer of <ph id=\"ph1\">`wchar_t`</ph> characters.","pos":[1455,1525],"source":" The internal representation will use a buffer of `wchar_t` characters."},{"pos":[1532,1600],"content":"The object stores an object of class <ph id=\"ph1\">`basic_filebuf`&lt; `Elem`</ph>, <ph id=\"ph2\">`Tr`</ph>&gt;.","source":"The object stores an object of class `basic_filebuf`< `Elem`, `Tr`>."},{"content":"Example","pos":[1609,1616]},{"pos":[1620,1709],"content":"The following example shows how to create a <ph id=\"ph1\">`basic_ofstream`</ph> object and write text to it.","source":"The following example shows how to create a `basic_ofstream` object and write text to it."},{"content":"Constructors","pos":[2044,2056]},{"content":"basic_ofstream","pos":[2078,2092]},{"pos":[2127,2170],"content":"Creates an object of type <ph id=\"ph1\">`basic_ofstream`</ph>.","source":"Creates an object of type `basic_ofstream`."},{"content":"Member Functions","pos":[2181,2197]},{"content":"close","pos":[2219,2224]},{"content":"Closes a file.","pos":[2250,2264]},{"content":"is_open","pos":[2270,2277]},{"content":"Determines if a file is open.","pos":[2305,2334]},{"content":"open","pos":[2340,2344]},{"content":"Opens a file.","pos":[2369,2382]},{"content":"rdbuf","pos":[2388,2393]},{"content":"Returns the address of the stored stream buffer.","pos":[2419,2467]},{"content":"swap","pos":[2473,2477]},{"pos":[2502,2599],"content":"Exchange the contents of this <ph id=\"ph1\">`basic_ofstream`</ph> for the contents of the provided <ph id=\"ph2\">`basic_ofstream`</ph>.","source":"Exchange the contents of this `basic_ofstream` for the contents of the provided `basic_ofstream`."},{"content":"Operators","pos":[2610,2619]},{"content":"operator=","pos":[2641,2650]},{"content":"Assigns the content of this stream object.","pos":[2682,2724]},{"content":"This is a move assignment involving an <ph id=\"ph1\">`rvalue reference`</ph> that does not leave a copy behind.","pos":[2725,2817],"source":" This is a move assignment involving an `rvalue reference` that does not leave a copy behind."},{"content":"Requirements","pos":[2827,2839]},{"pos":[2843,2865],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>fstream&gt;","source":"**Header:** \\<fstream>"},{"pos":[2872,2890],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"pos":[2947,2977],"content":"basic_ofstream::basic_ofstream"},{"pos":[2981,3024],"content":"Creates an object of type <ph id=\"ph1\">`basic_ofstream`</ph>.","source":"Creates an object of type `basic_ofstream`."},{"content":"Parameters","pos":[3398,3408]},{"content":"The name of the file to open.","pos":[3427,3456]},{"content":"One of the enumerations in <bpt id=\"p1\">[</bpt>ios_base::openmode<ept id=\"p1\">](../standard-library/ios-base-class.md#ios_base__openmode)</ept>.","pos":[3474,3580],"source":" One of the enumerations in [ios_base::openmode](../standard-library/ios-base-class.md#ios_base__openmode)."},{"content":"The default file opening protection, equivalent to the <ph id=\"ph1\">`shflag`</ph> parameter in <bpt id=\"p1\">[</bpt>_fsopen, _wfsopen<ept id=\"p1\">](../c-runtime-library/reference/fsopen-wfsopen.md)</ept>.","pos":[3598,3745],"source":" The default file opening protection, equivalent to the `shflag` parameter in [_fsopen, _wfsopen](../c-runtime-library/reference/fsopen-wfsopen.md)."},{"content":"The rvalue reference to the <ph id=\"ph1\">`basic_ofstream`</ph> object being used to initialize this <ph id=\"ph2\">`basic_ofstream`</ph> object.","pos":[3763,3869],"source":" The rvalue reference to the `basic_ofstream` object being used to initialize this `basic_ofstream` object."},{"content":"Remarks","pos":[3879,3886]},{"content":"The first constructor initializes the base class by calling <bpt id=\"p1\">[</bpt>basic_ostream<ept id=\"p1\">](../standard-library/basic-ostream-class.md)</ept>( <bpt id=\"p2\">**</bpt>sb<ept id=\"p2\">**</ept>), where <bpt id=\"p3\">**</bpt>sb<ept id=\"p3\">**</ept> is the stored object of class <bpt id=\"p4\">[</bpt>basic_filebuf<ept id=\"p4\">](../standard-library/basic-filebuf-class.md)</ept><ph id=\"ph1\">&lt; `Elem`</ph>, <ph id=\"ph2\">`Tr`</ph>&gt;.","pos":[3890,4138],"source":"The first constructor initializes the base class by calling [basic_ostream](../standard-library/basic-ostream-class.md)( **sb**), where **sb** is the stored object of class [basic_filebuf](../standard-library/basic-filebuf-class.md)< `Elem`, `Tr`>."},{"content":"It also initializes <bpt id=\"p1\">**</bpt>sb<ept id=\"p1\">**</ept> by calling <ph id=\"ph1\">`basic_filebuf`&lt; `Elem`</ph>, <ph id=\"ph2\">`Tr`</ph>&gt;.","pos":[4139,4208],"source":" It also initializes **sb** by calling `basic_filebuf`< `Elem`, `Tr`>."},{"content":"The second and third constructors initializes the base class by calling <ph id=\"ph1\">`basic_ostream`</ph>( <bpt id=\"p1\">**</bpt>sb<ept id=\"p1\">**</ept>).","pos":[4215,4312],"source":"The second and third constructors initializes the base class by calling `basic_ostream`( **sb**)."},{"content":"It also initializes <bpt id=\"p1\">**</bpt>sb<ept id=\"p1\">**</ept> by calling <ph id=\"ph1\">`basic_filebuf`&lt; `Elem`</ph>, <ph id=\"ph2\">`Tr`</ph>&gt; and then <bpt id=\"p2\">**</bpt>sb<ept id=\"p2\">**</ept>.","pos":[4313,4398],"source":" It also initializes **sb** by calling `basic_filebuf`< `Elem`, `Tr`> and then **sb**."},{"content":"<bpt id=\"p1\">[</bpt>open<ept id=\"p1\">](../standard-library/basic-filebuf-class.md#basic_filebuf__open)</ept>( <ph id=\"ph1\">`_Filename`</ph>, <ph id=\"ph2\">`_Mode`</ph> &amp;#124; <ph id=\"ph3\">`ios_base::out`</ph>).","pos":[4399,4516],"source":"[open](../standard-library/basic-filebuf-class.md#basic_filebuf__open)( `_Filename`, `_Mode` &#124; `ios_base::out`)."},{"content":"If the latter function returns a null pointer, the constructor calls <bpt id=\"p1\">[</bpt>setstate<ept id=\"p1\">](../standard-library/basic-ios-class.md#basic_ios__setstate)</ept>( <bpt id=\"p2\">**</bpt>failbit<ept id=\"p2\">**</ept>).","pos":[4517,4671],"source":" If the latter function returns a null pointer, the constructor calls [setstate](../standard-library/basic-ios-class.md#basic_ios__setstate)( **failbit**)."},{"content":"The fourth constructor is a copy function.","pos":[4678,4720]},{"content":"It initializes the object with the contents of <ph id=\"ph1\">`right`</ph>, treated as an rvalue reference.","pos":[4721,4808],"source":" It initializes the object with the contents of `right`, treated as an rvalue reference."},{"content":"Example","pos":[4818,4825]},{"pos":[4830,4919],"content":"The following example shows how to create a <ph id=\"ph1\">`basic_ofstream`</ph> object and write text to it.","source":"The following example shows how to create a `basic_ofstream` object and write text to it."},{"pos":[5295,5316],"content":"basic_ofstream::close"},{"content":"Closes a file.","pos":[5320,5334]},{"content":"Remarks","pos":[5371,5378]},{"pos":[5382,5561],"content":"The member function calls <bpt id=\"p1\">[</bpt>rdbuf<ept id=\"p1\">](../standard-library/basic-ifstream-class.md#basic_ifstream__rdbuf)</ept><bpt id=\"p2\">**</bpt><ph id=\"ph1\">-&gt;</ph><ept id=\"p2\">**</ept><bpt id=\"p3\">[</bpt>close<ept id=\"p3\">](../standard-library/basic-filebuf-class.md#basic_filebuf__close)</ept>.","source":"The member function calls [rdbuf](../standard-library/basic-ifstream-class.md#basic_ifstream__rdbuf)**->**[close](../standard-library/basic-filebuf-class.md#basic_filebuf__close)."},{"content":"Example","pos":[5571,5578]},{"pos":[5583,5710],"content":"See <bpt id=\"p1\">[</bpt>basic_filebuf::close<ept id=\"p1\">](../standard-library/basic-filebuf-class.md#basic_filebuf__close)</ept> for an example that uses <bpt id=\"p2\">**</bpt>close<ept id=\"p2\">**</ept>.","source":"See [basic_filebuf::close](../standard-library/basic-filebuf-class.md#basic_filebuf__close) for an example that uses **close**."},{"pos":[5760,5783],"content":"basic_ofstream::is_open"},{"content":"Indicates whether a file is open.","pos":[5787,5820]},{"content":"Return Value","pos":[5865,5877]},{"pos":[5888,5927],"content":"if the file is open, <ph id=\"ph1\">`false`</ph> otherwise.","source":" if the file is open, `false` otherwise."},{"content":"Remarks","pos":[5937,5944]},{"pos":[5948,6092],"content":"The member function returns <bpt id=\"p1\">[</bpt>rdbuf<ept id=\"p1\">](#basic_ofstream__rdbuf)</ept> <bpt id=\"p2\">**</bpt><ph id=\"ph1\">-&gt;</ph><ept id=\"p2\">**</ept> <bpt id=\"p3\">[</bpt>is_open<ept id=\"p3\">](../standard-library/basic-filebuf-class.md#basic_filebuf__is_open)</ept>.","source":"The member function returns [rdbuf](#basic_ofstream__rdbuf) **->** [is_open](../standard-library/basic-filebuf-class.md#basic_filebuf__is_open)."},{"content":"Example","pos":[6102,6109]},{"pos":[6588,6608],"content":"basic_ofstream::open"},{"content":"Opens a file.","pos":[6612,6625]},{"content":"Parameters","pos":[7049,7059]},{"content":"The name of the file to open.","pos":[7078,7107]},{"content":"One of the enumerations in <bpt id=\"p1\">[</bpt>ios_base::openmode<ept id=\"p1\">](../standard-library/ios-base-class.md#ios_base__openmode)</ept>.","pos":[7125,7231],"source":" One of the enumerations in [ios_base::openmode](../standard-library/ios-base-class.md#ios_base__openmode)."},{"content":"The default file opening protection, equivalent to the <ph id=\"ph1\">`shflag`</ph> parameter in <bpt id=\"p1\">[</bpt>_fsopen, _wfsopen<ept id=\"p1\">](../c-runtime-library/reference/fsopen-wfsopen.md)</ept>.","pos":[7249,7396],"source":" The default file opening protection, equivalent to the `shflag` parameter in [_fsopen, _wfsopen](../c-runtime-library/reference/fsopen-wfsopen.md)."},{"content":"Remarks","pos":[7406,7413]},{"content":"The member function calls <bpt id=\"p1\">[</bpt>rdbuf<ept id=\"p1\">](#basic_ofstream__rdbuf)</ept> <bpt id=\"p2\">**</bpt><ph id=\"ph1\">-&gt;</ph><ept id=\"p2\">**</ept> <bpt id=\"p3\">[</bpt>open<ept id=\"p3\">](../standard-library/basic-filebuf-class.md#basic_filebuf__open)</ept>(_ <bpt id=\"p4\">*</bpt>Filename<ept id=\"p4\">*</ept>, <ph id=\"ph2\">`_Mode`</ph> &amp;#124; <ph id=\"ph3\">`ios_base::out`</ph>).","pos":[7417,7599],"source":"The member function calls [rdbuf](#basic_ofstream__rdbuf) **->** [open](../standard-library/basic-filebuf-class.md#basic_filebuf__open)(_ *Filename*, `_Mode` &#124; `ios_base::out`)."},{"content":"If that function returns a null pointer, the function calls <bpt id=\"p1\">[</bpt>setstate<ept id=\"p1\">](../standard-library/basic-ios-class.md#basic_ios__setstate)</ept>( <bpt id=\"p2\">**</bpt>failbit<ept id=\"p2\">**</ept>).","pos":[7600,7745],"source":" If that function returns a null pointer, the function calls [setstate](../standard-library/basic-ios-class.md#basic_ios__setstate)( **failbit**)."},{"content":"Example","pos":[7755,7762]},{"pos":[7767,7891],"content":"See <bpt id=\"p1\">[</bpt>basic_filebuf::open<ept id=\"p1\">](../standard-library/basic-filebuf-class.md#basic_filebuf__open)</ept> for an example that uses <bpt id=\"p2\">**</bpt>open<ept id=\"p2\">**</ept>.","source":"See [basic_filebuf::open](../standard-library/basic-filebuf-class.md#basic_filebuf__open) for an example that uses **open**."},{"pos":[7945,7970],"content":"basic_ofstream::operator="},{"content":"Assigns the content of this stream object.","pos":[7974,8016]},{"content":"This is a move assignment involving an <ph id=\"ph1\">`rvalue reference`</ph> that does not leave a copy behind.","pos":[8017,8109],"source":" This is a move assignment involving an `rvalue reference` that does not leave a copy behind."},{"content":"Parameters","pos":[8183,8193]},{"content":"An rvalue reference to a <ph id=\"ph1\">`basic_ofstream`</ph> object.","pos":[8208,8257],"source":" An rvalue reference to a `basic_ofstream` object."},{"content":"Return Value","pos":[8267,8279]},{"pos":[8283,8299],"content":"Returns <ph id=\"ph1\">`*this`</ph>.","source":"Returns `*this`."},{"content":"Remarks","pos":[8309,8316]},{"pos":[8320,8441],"content":"The member operator replaces the contents of the object by using the contents of <ph id=\"ph1\">`right`</ph>, treated as an rvalue reference.","source":"The member operator replaces the contents of the object by using the contents of `right`, treated as an rvalue reference."},{"pos":[8489,8510],"content":"basic_ofstream::rdbuf"},{"content":"Returns the address of the stored stream buffer.","pos":[8514,8562]},{"content":"Return Value","pos":[8624,8636]},{"content":"Returns the address of the stored stream buffer.","pos":[8640,8688]},{"content":"Example","pos":[8698,8705]},{"pos":[8710,8835],"content":"See <bpt id=\"p1\">[</bpt>basic_filebuf::close<ept id=\"p1\">](../standard-library/basic-filebuf-class.md#basic_filebuf__close)</ept> for an example that uses <ph id=\"ph1\">`rdbuf`</ph>.","source":"See [basic_filebuf::close](../standard-library/basic-filebuf-class.md#basic_filebuf__close) for an example that uses `rdbuf`."},{"pos":[8882,8902],"content":"basic_ofstream::swap"},{"pos":[8906,8961],"content":"Exchanges the contents of two <ph id=\"ph1\">`basic_ofstream`</ph> objects.","source":"Exchanges the contents of two `basic_ofstream` objects."},{"content":"Parameters","pos":[9018,9028]},{"content":"An <ph id=\"ph1\">`lvalue`</ph> reference to another <ph id=\"ph2\">`basic_ofstream`</ph> object.","pos":[9043,9100],"source":" An `lvalue` reference to another `basic_ofstream` object."},{"content":"Remarks","pos":[9110,9117]},{"pos":[9121,9207],"content":"The member function exchanges the contents of this object for the contents of <ph id=\"ph1\">`right`</ph>.","source":"The member function exchanges the contents of this object for the contents of `right`."},{"content":"See Also","pos":[9216,9224]},{"content":"basic_ostream Class","pos":[9229,9248]},{"content":"Thread Safety in the C++ Standard Library","pos":[9299,9340]},{"content":"iostream Programming","pos":[9413,9433]},{"content":"iostreams Conventions","pos":[9485,9506]}],"content":"---\ntitle: \"basic_ofstream Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std::basic_ofstream\"\n  - \"basic_ofstream\"\n  - \"std.basic_ofstream\"\n  - \"fstream/std::basic_ofstream\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"basic_ofstream class\"\nms.assetid: 3bcc9c51-6dfc-4844-8fcc-22ef57c9dff1\ncaps.latest.revision: 24\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# basic_ofstream Class\nDescribes an object that controls insertion of elements and encoded objects into a stream buffer of class [basic_filebuf](../standard-library/basic-filebuf-class.md)< `Elem`, `Tr`>, with elements of type `Elem`, whose character traits are determined by the class `Tr`.  \n  \n## Syntax  \n  \n```\ntemplate <class Elem, class Tr = char_traits<Elem>>  \nclass basic_ofstream : public basic_ostream<Elem, Tr>\n```  \n  \n#### Parameters  \n `Elem`  \n The basic element of the file buffer.  \n  \n `Tr`  \n The traits of the basic element of the file buffer (usually `char_traits`< `Elem`>).  \n  \n## Remarks  \n When the `wchar_t` specialization of `basic_ofstream` writes to the file, if the file is opened in text mode it will write a MBCS sequence. The internal representation will use a buffer of `wchar_t` characters.  \n  \n The object stores an object of class `basic_filebuf`< `Elem`, `Tr`>.  \n  \n## Example  \n The following example shows how to create a `basic_ofstream` object and write text to it.  \n  \n```  \n// basic_ofstream_class.cpp  \n// compile with: /EHsc  \n#include <fstream>  \n  \nusing namespace std;  \n  \nint main(int argc, char **argv)  \n{  \n    ofstream ofs(\"ofstream.txt\");  \n    if (!ofs.bad())  \n    {  \n        ofs << \"Writing to a basic_ofstream object...\" << endl;  \n        ofs.close();  \n    }  \n}  \n```  \n  \n### Constructors  \n  \n|||  \n|-|-|  \n|[basic_ofstream](#basic_ofstream__basic_ofstream)|Creates an object of type `basic_ofstream`.|  \n  \n### Member Functions  \n  \n|||  \n|-|-|  \n|[close](#basic_ofstream__close)|Closes a file.|  \n|[is_open](#basic_ofstream__is_open)|Determines if a file is open.|  \n|[open](#basic_ofstream__open)|Opens a file.|  \n|[rdbuf](#basic_ofstream__rdbuf)|Returns the address of the stored stream buffer.|  \n|[swap](#basic_ofstream__swap)|Exchange the contents of this `basic_ofstream` for the contents of the provided `basic_ofstream`.|  \n  \n### Operators  \n  \n|||  \n|-|-|  \n|[operator=](#basic_ofstream__operator_eq)|Assigns the content of this stream object. This is a move assignment involving an `rvalue reference` that does not leave a copy behind.|  \n  \n## Requirements  \n **Header:** \\<fstream>  \n  \n **Namespace:** std  \n  \n##  <a name=\"basic_ofstream__basic_ofstream\"></a>  basic_ofstream::basic_ofstream  \n Creates an object of type `basic_ofstream`.  \n  \n```\nbasic_ofstream();\n\nexplicit basic_ofstream(\n    const char* _Filename,\n    ios_base::openmode _Mode = ios_base::out,\n    int _Prot = (int)ios_base::_Openprot);\n\nexplicit basic_ofstream(\n    const wchar_t* _Filename,\n    ios_base::openmode _Mode = ios_base::out,\n    int _Prot = (int)ios_base::_Openprot);\n\nbasic_ofstream(\n    basic_ofstream&& right);\n```  \n  \n### Parameters  \n `_Filename`  \n The name of the file to open.  \n  \n `_Mode`  \n One of the enumerations in [ios_base::openmode](../standard-library/ios-base-class.md#ios_base__openmode).  \n  \n `_Prot`  \n The default file opening protection, equivalent to the `shflag` parameter in [_fsopen, _wfsopen](../c-runtime-library/reference/fsopen-wfsopen.md).  \n  \n `right`  \n The rvalue reference to the `basic_ofstream` object being used to initialize this `basic_ofstream` object.  \n  \n### Remarks  \n The first constructor initializes the base class by calling [basic_ostream](../standard-library/basic-ostream-class.md)( **sb**), where **sb** is the stored object of class [basic_filebuf](../standard-library/basic-filebuf-class.md)< `Elem`, `Tr`>. It also initializes **sb** by calling `basic_filebuf`< `Elem`, `Tr`>.  \n  \n The second and third constructors initializes the base class by calling `basic_ostream`( **sb**). It also initializes **sb** by calling `basic_filebuf`< `Elem`, `Tr`> and then **sb**. [open](../standard-library/basic-filebuf-class.md#basic_filebuf__open)( `_Filename`, `_Mode` &#124; `ios_base::out`). If the latter function returns a null pointer, the constructor calls [setstate](../standard-library/basic-ios-class.md#basic_ios__setstate)( **failbit**).  \n  \n The fourth constructor is a copy function. It initializes the object with the contents of `right`, treated as an rvalue reference.  \n  \n### Example  \n  The following example shows how to create a `basic_ofstream` object and write text to it.  \n  \n```  \n// basic_ofstream_ctor.cpp  \n// compile with: /EHsc  \n#include <fstream>  \n  \nusing namespace std;  \n  \nint main(int argc, char **argv)  \n{  \n    ofstream ofs(\"C:\\\\ofstream.txt\");  \n    if (!ofs.bad())  \n    {  \n        ofs << \"Writing to a basic_ofstream object...\" << endl;  \n        ofs.close();  \n    }  \n}  \n```  \n  \n##  <a name=\"basic_ofstream__close\"></a>  basic_ofstream::close  \n Closes a file.  \n  \n```\nvoid close();\n```  \n  \n### Remarks  \n The member function calls [rdbuf](../standard-library/basic-ifstream-class.md#basic_ifstream__rdbuf)**->**[close](../standard-library/basic-filebuf-class.md#basic_filebuf__close).  \n  \n### Example  \n  See [basic_filebuf::close](../standard-library/basic-filebuf-class.md#basic_filebuf__close) for an example that uses **close**.  \n  \n##  <a name=\"basic_ofstream__is_open\"></a>  basic_ofstream::is_open  \n Indicates whether a file is open.  \n  \n```\nbool is_open() const;\n```  \n  \n### Return Value  \n `true` if the file is open, `false` otherwise.  \n  \n### Remarks  \n The member function returns [rdbuf](#basic_ofstream__rdbuf) **->** [is_open](../standard-library/basic-filebuf-class.md#basic_filebuf__is_open).  \n  \n### Example  \n  \n```cpp  \n// basic_ofstream_is_open.cpp  \n// compile with: /EHsc  \n#include <fstream>  \n#include <iostream>  \n  \nint main( )   \n{  \n   using namespace std;  \n   ifstream file;  \n   // Open and close with a basic_filebuf  \n   file.rdbuf( )->open( \"basic_ofstream_is_open.txt\", ios::in );  \n   file.close( );  \n   if (file.is_open())  \n      cout << \"it's open\" << endl;  \n   else  \n      cout << \"it's closed\" << endl;  \n}  \n```  \n  \n##  <a name=\"basic_ofstream__open\"></a>  basic_ofstream::open  \n Opens a file.  \n  \n```\nvoid open(\n    const char* _Filename,\n    ios_base::openmode _Mode = ios_base::out,\n    int _Prot = (int)ios_base::_Openprot);\n\nvoid open(\n    const char* _Filename,\n    ios_base::openmode _Mode);\n\nvoid open(\n    const wchar_t* _Filename,\n    ios_base::openmode _Mode = ios_base::out,\n    int _Prot = (int)ios_base::_Openprot);\n\nvoid open(\n    const wchar_t* _Filename,\n    ios_base::openmode _Mode);\n```  \n  \n### Parameters  \n `_Filename`  \n The name of the file to open.  \n  \n `_Mode`  \n One of the enumerations in [ios_base::openmode](../standard-library/ios-base-class.md#ios_base__openmode).  \n  \n `_Prot`  \n The default file opening protection, equivalent to the `shflag` parameter in [_fsopen, _wfsopen](../c-runtime-library/reference/fsopen-wfsopen.md).  \n  \n### Remarks  \n The member function calls [rdbuf](#basic_ofstream__rdbuf) **->** [open](../standard-library/basic-filebuf-class.md#basic_filebuf__open)(_ *Filename*, `_Mode` &#124; `ios_base::out`). If that function returns a null pointer, the function calls [setstate](../standard-library/basic-ios-class.md#basic_ios__setstate)( **failbit**).  \n  \n### Example  \n  See [basic_filebuf::open](../standard-library/basic-filebuf-class.md#basic_filebuf__open) for an example that uses **open**.  \n  \n##  <a name=\"basic_ofstream__operator_eq\"></a>  basic_ofstream::operator=  \n Assigns the content of this stream object. This is a move assignment involving an `rvalue reference` that does not leave a copy behind.  \n  \n```\nbasic_ofstream& operator=(basic_ofstream&& right);\n```  \n  \n### Parameters  \n `right`  \n An rvalue reference to a `basic_ofstream` object.  \n  \n### Return Value  \n Returns `*this`.  \n  \n### Remarks  \n The member operator replaces the contents of the object by using the contents of `right`, treated as an rvalue reference.  \n  \n##  <a name=\"basic_ofstream__rdbuf\"></a>  basic_ofstream::rdbuf  \n Returns the address of the stored stream buffer.  \n  \n```\nbasic_filebuf<Elem, Tr> *rdbuf() const\n```  \n  \n### Return Value  \n Returns the address of the stored stream buffer.  \n  \n### Example  \n  See [basic_filebuf::close](../standard-library/basic-filebuf-class.md#basic_filebuf__close) for an example that uses `rdbuf`.  \n  \n##  <a name=\"basic_ofstream__swap\"></a>  basic_ofstream::swap  \n Exchanges the contents of two `basic_ofstream` objects.  \n  \n```\nvoid swap(basic_ofstream& right);\n```  \n  \n### Parameters  \n `right`  \n An `lvalue` reference to another `basic_ofstream` object.  \n  \n### Remarks  \n The member function exchanges the contents of this object for the contents of `right`.  \n  \n## See Also  \n [basic_ostream Class](../standard-library/basic-ostream-class.md)   \n [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)   \n [iostream Programming](../standard-library/iostream-programming.md)   \n [iostreams Conventions](../standard-library/iostreams-conventions.md)\n\n\n\n"}