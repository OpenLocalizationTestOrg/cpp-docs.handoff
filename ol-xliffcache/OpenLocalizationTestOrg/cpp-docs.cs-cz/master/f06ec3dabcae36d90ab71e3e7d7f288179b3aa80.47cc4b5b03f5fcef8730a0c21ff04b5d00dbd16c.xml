{"nodes":[{"pos":[12,78],"content":"How to: Create a Message Map for a Template Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Create a Message Map for a Template Class | Microsoft Docs","pos":[0,66]}]},{"content":"How to: Create a Message Map for a Template Class","pos":[664,713]},{"content":"Message mapping in MFC provides an efficient way to direct Windows messages to an appropriate C++ object instance.","pos":[714,828]},{"content":"Examples of MFC message map targets include application classes, document and view classes, control classes, and so on.","pos":[829,948]},{"pos":[955,1349],"content":"Traditional MFC message maps are declared using the <bpt id=\"p1\">[</bpt>BEGIN_MESSAGE_MAP<ept id=\"p1\">](http://msdn.microsoft.com/library/d9201e18-04e0-4639-9810-f15768627fc2)</ept> macro to declare the start of the message map, a macro entry for each message-handler class method, and finally the <bpt id=\"p2\">[</bpt>END_MESSAGE_MAP<ept id=\"p2\">](http://msdn.microsoft.com/library/40f611f1-a3b4-4097-b683-091bf7cfab8b)</ept> macro to declare the end of the message map.","source":"Traditional MFC message maps are declared using the [BEGIN_MESSAGE_MAP](http://msdn.microsoft.com/library/d9201e18-04e0-4639-9810-f15768627fc2) macro to declare the start of the message map, a macro entry for each message-handler class method, and finally the [END_MESSAGE_MAP](http://msdn.microsoft.com/library/40f611f1-a3b4-4097-b683-091bf7cfab8b) macro to declare the end of the message map."},{"content":"One limitation with the <bpt id=\"p1\">[</bpt>BEGIN_MESSAGE_MAP<ept id=\"p1\">](http://msdn.microsoft.com/library/d9201e18-04e0-4639-9810-f15768627fc2)</ept> macro occurs when it is used in conjunction with a class containing template arguments.","pos":[1356,1559],"source":"One limitation with the [BEGIN_MESSAGE_MAP](http://msdn.microsoft.com/library/d9201e18-04e0-4639-9810-f15768627fc2) macro occurs when it is used in conjunction with a class containing template arguments."},{"content":"When used with a template class, this macro will cause a compile-time error due to the missing template parameters during macro expansion.","pos":[1560,1698]},{"content":"The <bpt id=\"p1\">[</bpt>BEGIN_TEMPLATE_MESSAGE_MAP<ept id=\"p1\">](http://msdn.microsoft.com/library/972e730b-5f7b-413b-938d-13a367db6a36)</ept> macro was designed to allow classes containing a single template argument to declare their own message maps.","pos":[1699,1912],"source":" The [BEGIN_TEMPLATE_MESSAGE_MAP](http://msdn.microsoft.com/library/972e730b-5f7b-413b-938d-13a367db6a36) macro was designed to allow classes containing a single template argument to declare their own message maps."},{"content":"Example","pos":[1921,1928]},{"content":"Consider an example where the MFC <bpt id=\"p1\">[</bpt>CListBox<ept id=\"p1\">](../mfc/reference/clistbox-class.md)</ept> class is extended to provide synchronization with an external data source.","pos":[1932,2087],"source":"Consider an example where the MFC [CListBox](../mfc/reference/clistbox-class.md) class is extended to provide synchronization with an external data source."},{"content":"The fictitious <bpt id=\"p1\">**</bpt>CSyncListBox<ept id=\"p1\">**</ept> class is declared as follows:","pos":[2088,2149],"source":" The fictitious **CSyncListBox** class is declared as follows:"},{"pos":[2167,2186],"content":"NVC_MFC_CListBox#42"},{"content":"The <bpt id=\"p1\">**</bpt>CSyncListBox<ept id=\"p1\">**</ept> class is templated on a single type that describes the data source it will synchronize with.","pos":[2272,2385],"source":"The **CSyncListBox** class is templated on a single type that describes the data source it will synchronize with."},{"content":"It also declares three methods that will participate in the message map of the class: <bpt id=\"p1\">**</bpt>OnPaint<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>OnDestroy<ept id=\"p2\">**</ept>, and <bpt id=\"p3\">**</bpt>OnSynchronize<ept id=\"p3\">**</ept>.","pos":[2386,2522],"source":" It also declares three methods that will participate in the message map of the class: **OnPaint**, **OnDestroy**, and **OnSynchronize**."},{"content":"The <bpt id=\"p1\">**</bpt>OnSynchronize<ept id=\"p1\">**</ept> method is implemented as follows:","pos":[2523,2578],"source":" The **OnSynchronize** method is implemented as follows:"},{"pos":[2596,2615],"content":"NVC_MFC_CListBox#43"},{"content":"The above implementation allows the <bpt id=\"p1\">**</bpt>CSyncListBox<ept id=\"p1\">**</ept> class to be specialized on any class type that implements the <bpt id=\"p2\">**</bpt>GetCount<ept id=\"p2\">**</ept> method, such as <bpt id=\"p3\">**</bpt>CArray<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>CList<ept id=\"p4\">**</ept>, and <bpt id=\"p5\">**</bpt>CMap<ept id=\"p5\">**</ept>.","pos":[2703,2883],"source":"The above implementation allows the **CSyncListBox** class to be specialized on any class type that implements the **GetCount** method, such as **CArray**, **CList**, and **CMap**."},{"content":"The <bpt id=\"p1\">**</bpt>StringizeElement<ept id=\"p1\">**</ept> function is a template function prototyped by the following:","pos":[2884,2969],"source":" The **StringizeElement** function is a template function prototyped by the following:"},{"pos":[2987,3006],"content":"NVC_MFC_CListBox#44"},{"content":"Normally, the message map for this class would be defined as:","pos":[3094,3155]},{"pos":[3335,3422],"content":"where <bpt id=\"p1\">**</bpt>LBN_SYNCHRONIZE<ept id=\"p1\">**</ept> is a custom user message defined by the application, such as:","source":"where **LBN_SYNCHRONIZE** is a custom user message defined by the application, such as:"},{"pos":[3440,3459],"content":"NVC_MFC_CListBox#45"},{"content":"The above macro map will not compile, due to the fact that the template specification for the <bpt id=\"p1\">**</bpt>CSyncListBox<ept id=\"p1\">**</ept> class will be missing during macro expansion.","pos":[3547,3703],"source":"The above macro map will not compile, due to the fact that the template specification for the **CSyncListBox** class will be missing during macro expansion."},{"content":"The <bpt id=\"p1\">**</bpt>BEGIN_TEMPLATE_MESSAGE_MAP<ept id=\"p1\">**</ept> macro solves this by incorporating the specified template parameter into the expanded macro map.","pos":[3704,3835],"source":" The **BEGIN_TEMPLATE_MESSAGE_MAP** macro solves this by incorporating the specified template parameter into the expanded macro map."},{"content":"The message map for this class becomes:","pos":[3836,3875]},{"pos":[3893,3912],"content":"NVC_MFC_CListBox#46"},{"pos":[4000,4101],"content":"The following demonstrates sample usage of the <bpt id=\"p1\">**</bpt>CSyncListBox<ept id=\"p1\">**</ept> class using a <bpt id=\"p2\">**</bpt>CStringList<ept id=\"p2\">**</ept> object:","source":"The following demonstrates sample usage of the **CSyncListBox** class using a **CStringList** object:"},{"pos":[4119,4138],"content":"NVC_MFC_CListBox#47"},{"pos":[4226,4341],"content":"To complete the test, the <bpt id=\"p1\">**</bpt>StringizeElement<ept id=\"p1\">**</ept> function must be specialized to work with the <bpt id=\"p2\">**</bpt>CStringList<ept id=\"p2\">**</ept> class:","source":"To complete the test, the **StringizeElement** function must be specialized to work with the **CStringList** class:"},{"pos":[4359,4378],"content":"NVC_MFC_CListBox#48"},{"content":"See Also","pos":[4468,4476]},{"content":"BEGIN_TEMPLATE_MESSAGE_MAP","pos":[4481,4507]},{"content":"Message Handling and Mapping","pos":[4586,4614]}],"content":"---\ntitle: \"How to: Create a Message Map for a Template Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"template classes, creating message maps\"\n  - \"message maps, template classes\"\nms.assetid: 4e7e24f8-06df-4b46-82aa-7435c8650de3\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Create a Message Map for a Template Class\nMessage mapping in MFC provides an efficient way to direct Windows messages to an appropriate C++ object instance. Examples of MFC message map targets include application classes, document and view classes, control classes, and so on.  \n  \n Traditional MFC message maps are declared using the [BEGIN_MESSAGE_MAP](http://msdn.microsoft.com/library/d9201e18-04e0-4639-9810-f15768627fc2) macro to declare the start of the message map, a macro entry for each message-handler class method, and finally the [END_MESSAGE_MAP](http://msdn.microsoft.com/library/40f611f1-a3b4-4097-b683-091bf7cfab8b) macro to declare the end of the message map.  \n  \n One limitation with the [BEGIN_MESSAGE_MAP](http://msdn.microsoft.com/library/d9201e18-04e0-4639-9810-f15768627fc2) macro occurs when it is used in conjunction with a class containing template arguments. When used with a template class, this macro will cause a compile-time error due to the missing template parameters during macro expansion. The [BEGIN_TEMPLATE_MESSAGE_MAP](http://msdn.microsoft.com/library/972e730b-5f7b-413b-938d-13a367db6a36) macro was designed to allow classes containing a single template argument to declare their own message maps.  \n  \n## Example  \n Consider an example where the MFC [CListBox](../mfc/reference/clistbox-class.md) class is extended to provide synchronization with an external data source. The fictitious **CSyncListBox** class is declared as follows:  \n  \n [!code-cpp[NVC_MFC_CListBox#42](../mfc/codesnippet/cpp/how-to-create-a-message-map-for-a-template-class_1.h)]  \n  \n The **CSyncListBox** class is templated on a single type that describes the data source it will synchronize with. It also declares three methods that will participate in the message map of the class: **OnPaint**, **OnDestroy**, and **OnSynchronize**. The **OnSynchronize** method is implemented as follows:  \n  \n [!code-cpp[NVC_MFC_CListBox#43](../mfc/codesnippet/cpp/how-to-create-a-message-map-for-a-template-class_2.cpp)]  \n  \n The above implementation allows the **CSyncListBox** class to be specialized on any class type that implements the **GetCount** method, such as **CArray**, **CList**, and **CMap**. The **StringizeElement** function is a template function prototyped by the following:  \n  \n [!code-cpp[NVC_MFC_CListBox#44](../mfc/codesnippet/cpp/how-to-create-a-message-map-for-a-template-class_3.cpp)]  \n  \n Normally, the message map for this class would be defined as:  \n  \n `BEGIN_MESSAGE_MAP(CSyncListBox, CListBox)`  \n  \n `ON_WM_PAINT()`  \n  \n `ON_WM_DESTROY()`  \n  \n `ON_MESSAGE(LBN_SYNCHRONIZE, OnSynchronize)`  \n  \n `END_MESSAGE_MAP()`  \n  \n where **LBN_SYNCHRONIZE** is a custom user message defined by the application, such as:  \n  \n [!code-cpp[NVC_MFC_CListBox#45](../mfc/codesnippet/cpp/how-to-create-a-message-map-for-a-template-class_4.cpp)]  \n  \n The above macro map will not compile, due to the fact that the template specification for the **CSyncListBox** class will be missing during macro expansion. The **BEGIN_TEMPLATE_MESSAGE_MAP** macro solves this by incorporating the specified template parameter into the expanded macro map. The message map for this class becomes:  \n  \n [!code-cpp[NVC_MFC_CListBox#46](../mfc/codesnippet/cpp/how-to-create-a-message-map-for-a-template-class_5.cpp)]  \n  \n The following demonstrates sample usage of the **CSyncListBox** class using a **CStringList** object:  \n  \n [!code-cpp[NVC_MFC_CListBox#47](../mfc/codesnippet/cpp/how-to-create-a-message-map-for-a-template-class_6.cpp)]  \n  \n To complete the test, the **StringizeElement** function must be specialized to work with the **CStringList** class:  \n  \n [!code-cpp[NVC_MFC_CListBox#48](../mfc/codesnippet/cpp/how-to-create-a-message-map-for-a-template-class_7.cpp)]  \n  \n## See Also  \n [BEGIN_TEMPLATE_MESSAGE_MAP](http://msdn.microsoft.com/library/972e730b-5f7b-413b-938d-13a367db6a36)   \n [Message Handling and Mapping](../mfc/message-handling-and-mapping.md)\n\n"}