{"nodes":[{"pos":[12,47],"content":"cbrt, cbrtf, cbrtl | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"cbrt, cbrtf, cbrtl | Microsoft Docs","pos":[0,35]}]},{"pos":[987,1005],"content":"cbrt, cbrtf, cbrtl","linkify":"cbrt, cbrtf, cbrtl","nodes":[{"content":"cbrt, cbrtf, cbrtl","pos":[0,18]}]},{"content":"Calculates the cube root.","pos":[1006,1031]},{"pos":[1040,1046],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1289,1299],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Floating-point value","pos":[1310,1330]},{"pos":[1339,1351],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[1355,1404],"content":"The <ph id=\"ph1\">`cbrt`</ph> functions return the cube-root of <ph id=\"ph2\">`x`</ph>.","source":"The `cbrt` functions return the cube-root of `x`."},{"content":"Input","pos":[1411,1416]},{"content":"SEH Exception","pos":[1417,1430]},{"pos":[1431,1451],"content":"<ph id=\"ph1\">`_matherr`</ph> Exception","source":"`_matherr` Exception"},{"content":"± ∞, QNAN, IND","pos":[1519,1533]},{"content":"none","pos":[1534,1538]},{"content":"none","pos":[1539,1543]},{"pos":[1553,1560],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Because C++ allows overloading, you can call overloads of <ph id=\"ph1\">`cbrt`</ph> that take <ph id=\"ph2\">`float`</ph> or <ph id=\"ph3\">`long double`</ph> types.","pos":[1564,1670],"source":"Because C++ allows overloading, you can call overloads of `cbrt` that take `float` or `long double` types."},{"content":"In a C program, <ph id=\"ph1\">`cbrt`</ph> always takes and returns <ph id=\"ph2\">`double`</ph>.","pos":[1671,1728],"source":" In a C program, `cbrt` always takes and returns `double`."},{"pos":[1737,1749],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Function","pos":[1756,1764]},{"content":"C header","pos":[1765,1773]},{"content":"C++ header","pos":[1774,1784]},{"pos":[1842,1866],"content":"<ph id=\"ph1\">`cbrt`</ph>, <ph id=\"ph2\">`cbrtf`</ph>, <ph id=\"ph3\">`cbrtl`</ph>","source":"`cbrt`, `cbrtf`, `cbrtl`"},{"content":"<ph id=\"ph1\">\\&lt;</ph>math.h&gt;","pos":[1867,1876],"source":"\\<math.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>cmath&gt;","pos":[1877,1885],"source":"\\<cmath>"},{"pos":[1893,1997],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[2006,2013],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2418,2443],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"content":"Not applicable.","pos":[2447,2462]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[2463,2510],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[2511,2636],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"pos":[2645,2653],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Floating-Point Support<ept id=\"p1\">](../../c-runtime-library/floating-point-support.md)</ept><ph id=\"ph1\"> </ph>","pos":[2657,2733],"source":"[Floating-Point Support](../../c-runtime-library/floating-point-support.md) "},{"content":"<bpt id=\"p1\"> [</bpt>exp, expf<ept id=\"p1\">](../../c-runtime-library/reference/exp-expf.md)</ept><ph id=\"ph1\"> </ph>","pos":[2736,2796],"source":" [exp, expf](../../c-runtime-library/reference/exp-expf.md) "},{"content":"<bpt id=\"p1\"> [</bpt>log, logf, log10, log10f<ept id=\"p1\">](../../c-runtime-library/reference/log-logf-log10-log10f.md)</ept><ph id=\"ph1\"> </ph>","pos":[2799,2887],"source":" [log, logf, log10, log10f](../../c-runtime-library/reference/log-logf-log10-log10f.md) "},{"content":"<bpt id=\"p1\"> [</bpt>pow, powf, powl<ept id=\"p1\">](../../c-runtime-library/reference/pow-powf-powl.md)</ept>","pos":[2890,2960],"source":" [pow, powf, powl](../../c-runtime-library/reference/pow-powf-powl.md)"}],"content":"---\ntitle: \"cbrt, cbrtf, cbrtl | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"cbrt\"\n  - \"cbrtf\"\n  - \"cbrtl\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-math-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"cbrtl\"\n  - \"cbrt\"\n  - \"cbrtf\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"cbrtl function\"\n  - \"cbrtf function\"\n  - \"cbrt function\"\nms.assetid: ab51d916-3db2-4beb-b46a-28b4062cd33f\ncaps.latest.revision: 8\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# cbrt, cbrtf, cbrtl\nCalculates the cube root.  \n  \n## Syntax  \n  \n```  \ndouble cbrt(  \n   double x   \n);  \nfloat cbrt(  \n   float x   \n);  // C++ only  \nlong double cbrt(  \n   long double x  \n);  // C++ only  \nfloat cbrtf(  \n   float x   \n);  \nlong double cbrtl(  \n   long double x  \n);  \n```  \n  \n#### Parameters  \n `x`  \n Floating-point value  \n  \n## Return Value  \n The `cbrt` functions return the cube-root of `x`.  \n  \n|Input|SEH Exception|`_matherr` Exception|  \n|-----------|-------------------|--------------------------|  \n|± ∞, QNAN, IND|none|none|  \n  \n## Remarks  \n Because C++ allows overloading, you can call overloads of `cbrt` that take `float` or `long double` types. In a C program, `cbrt` always takes and returns `double`.  \n  \n## Requirements  \n  \n|Function|C header|C++ header|  \n|--------------|--------------|------------------|  \n|`cbrt`, `cbrtf`, `cbrtl`|\\<math.h>|\\<cmath>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```c  \n// crt_cbrt.c  \n// Compile using: cl /W4 crt_cbrt.c  \n// This program calculates a cube root.  \n  \n#include <math.h>  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n   double question = -64.64;  \n   double answer;  \n  \n   answer = cbrt(question);  \n   printf(\"The cube root of %.2f is %.6f\\n\", question, answer);  \n}  \n```  \n  \n```Output  \nThe cube root of -64.64 is -4.013289  \n```  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [Floating-Point Support](../../c-runtime-library/floating-point-support.md)   \n [exp, expf](../../c-runtime-library/reference/exp-expf.md)   \n [log, logf, log10, log10f](../../c-runtime-library/reference/log-logf-log10-log10f.md)   \n [pow, powf, powl](../../c-runtime-library/reference/pow-powf-powl.md)"}