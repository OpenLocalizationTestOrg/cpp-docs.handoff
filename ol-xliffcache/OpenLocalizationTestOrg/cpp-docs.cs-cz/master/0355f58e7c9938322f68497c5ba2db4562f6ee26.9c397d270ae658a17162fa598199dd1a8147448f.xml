{"nodes":[{"pos":[12,50],"content":"_fgetchar, _fgetwchar | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_fgetchar, _fgetwchar | Microsoft Docs","pos":[0,38]}]},{"content":"_fgetchar, _fgetwchar","pos":[1169,1190]},{"pos":[1191,1222],"content":"Reads a character from <ph id=\"ph1\">`stdin`</ph>.","source":"Reads a character from `stdin`."},{"content":"Syntax","pos":[1231,1237]},{"content":"Return Value","pos":[1315,1327]},{"content":"returns the character read as an <ph id=\"ph1\">`int`</ph> or return <ph id=\"ph2\">`EOF`</ph> to indicate an error or end of file.","pos":[1343,1434],"source":" returns the character read as an `int` or return `EOF` to indicate an error or end of file."},{"content":"<bpt id=\"p1\">**</bpt>_<ept id=\"p1\">**</ept><ph id=\"ph1\">`fgetwchar`</ph> returns, as a <bpt id=\"p2\">[</bpt>wint_t<ept id=\"p2\">](../../c-runtime-library/standard-types.md)</ept>, the wide character that corresponds to the character read or returns <ph id=\"ph2\">`WEOF`</ph> to indicate an error or end of file.","pos":[1435,1631],"source":"**_**`fgetwchar` returns, as a [wint_t](../../c-runtime-library/standard-types.md), the wide character that corresponds to the character read or returns `WEOF` to indicate an error or end of file."},{"content":"For both functions, use <ph id=\"ph1\">`feof`</ph> or <ph id=\"ph2\">`ferror`</ph> to distinguish between an error and an end-of-file condition.","pos":[1632,1736],"source":" For both functions, use `feof` or `ferror` to distinguish between an error and an end-of-file condition."},{"content":"Remarks","pos":[1745,1752]},{"content":"These functions read a single character from <ph id=\"ph1\">`stdin`</ph>.","pos":[1756,1809],"source":"These functions read a single character from `stdin`."},{"content":"The function then increments the associated file pointer (if defined) to point to the next character.","pos":[1810,1911]},{"content":"If the stream is at end of file, the end-of-file indicator for the stream is set.","pos":[1912,1993]},{"content":"is equivalent to <ph id=\"ph1\">`fgetc( stdin )`</ph>.","pos":[2012,2046],"source":" is equivalent to `fgetc( stdin )`."},{"content":"It is also equivalent to <ph id=\"ph1\">`getchar`</ph>, but implemented only as a function, rather than as a function and a macro.","pos":[2047,2157],"source":" It is also equivalent to `getchar`, but implemented only as a function, rather than as a function and a macro."},{"content":"is the wide-character version of <ph id=\"ph1\">`_fgetchar`</ph>.","pos":[2171,2216],"source":" is the wide-character version of `_fgetchar`."},{"content":"These functions are not compatible with the ANSI standard.","pos":[2223,2281]},{"content":"Generic-Text Routine Mappings","pos":[2291,2320]},{"content":"Tchar.h routine","pos":[2327,2342]},{"content":"_UNICODE and _MBCS not defined","pos":[2343,2373]},{"content":"_MBCS defined","pos":[2374,2387]},{"content":"_UNICODE defined","pos":[2388,2404]},{"content":"Requirements","pos":[2578,2590]},{"content":"Function","pos":[2597,2605]},{"content":"Required header","pos":[2606,2621]},{"content":"stdio.h&gt;","pos":[2681,2689],"source":"stdio.h>"},{"content":"stdio.h&gt; or <ph id=\"ph1\">\\&lt;</ph>wchar.h&gt;","pos":[2709,2731],"source":"stdio.h> or \\<wchar.h>"},{"content":"The console is not supported in <ph id=\"ph1\">[!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)]</ph> apps.","pos":[2739,2852],"source":"The console is not supported in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps."},{"content":"The standard stream handles that are associated with the console—<ph id=\"ph1\">`stdin`</ph>, <ph id=\"ph2\">`stdout`</ph>, and <ph id=\"ph3\">`stderr`</ph>—must be redirected before C run-time functions can use them in <ph id=\"ph4\">[!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)]</ph> apps.","pos":[2853,3094],"source":" The standard stream handles that are associated with the console—`stdin`, `stdout`, and `stderr`—must be redirected before C run-time functions can use them in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps."},{"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","pos":[3095,3193],"source":" For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":"Example","pos":[3202,3209]},{"content":".NET Framework Equivalent","pos":[3907,3932]},{"content":"System::IO::StreamReader::Read","pos":[3943,3973]},{"content":"System::Console::Read","pos":[4060,4081]},{"content":"See Also","pos":[4158,4166]},{"content":"Stream I/O","pos":[4171,4181]},{"content":"fputc, fputwc","pos":[4227,4240]},{"content":"getc, getwc","pos":[4298,4309]}],"content":"---\ntitle: \"_fgetchar, _fgetwchar | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_fgetchar\"\n  - \"_fgetwchar\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-stdio-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"fgetwchar\"\n  - \"_fgettchar\"\n  - \"_fgetchar\"\n  - \"_fgetwchar\"\n  - \"fgettchar\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"fgetwchar function\"\n  - \"_fgetchar function\"\n  - \"fgettchar function\"\n  - \"_fgetwchar function\"\n  - \"_fgettchar function\"\n  - \"standard input, reading from\"\n  - \"fgetchar function\"\nms.assetid: 8bce874c-701a-41a3-b1b2-feff266fb5b9\ncaps.latest.revision: 16\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _fgetchar, _fgetwchar\nReads a character from `stdin`.  \n  \n## Syntax  \n  \n```  \nint _fgetchar( void );  \nwint_t _fgetwchar( void );  \n```  \n  \n## Return Value  \n `_fgetchar` returns the character read as an `int` or return `EOF` to indicate an error or end of file. **_**`fgetwchar` returns, as a [wint_t](../../c-runtime-library/standard-types.md), the wide character that corresponds to the character read or returns `WEOF` to indicate an error or end of file. For both functions, use `feof` or `ferror` to distinguish between an error and an end-of-file condition.  \n  \n## Remarks  \n These functions read a single character from `stdin`. The function then increments the associated file pointer (if defined) to point to the next character. If the stream is at end of file, the end-of-file indicator for the stream is set.  \n  \n `_fgetchar` is equivalent to `fgetc( stdin )`. It is also equivalent to `getchar`, but implemented only as a function, rather than as a function and a macro. `_fgetwchar` is the wide-character version of `_fgetchar`.  \n  \n These functions are not compatible with the ANSI standard.  \n  \n### Generic-Text Routine Mappings  \n  \n|Tchar.h routine|_UNICODE and _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|--------------------------------------|--------------------|-----------------------|  \n|`_fgettchar`|`_fgetchar`|`_fgetchar`|`_fgetwchar`|  \n  \n## Requirements  \n  \n|Function|Required header|  \n|--------------|---------------------|  \n|`_fgetchar`|\\<stdio.h>|  \n|`_fgetwchar`|\\<stdio.h> or \\<wchar.h>|  \n  \n The console is not supported in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps. The standard stream handles that are associated with the console—`stdin`, `stdout`, and `stderr`—must be redirected before C run-time functions can use them in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps. For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```  \n// crt_fgetchar.c  \n// This program uses _fgetchar to read the first  \n// 80 input characters (or until the end of input)  \n// and place them into a string named buffer.  \n//  \n  \n#include <stdio.h>  \n#include <stdlib.h>  \n  \nint main( void )  \n{  \n   char buffer[81];  \n   int  i, ch;  \n  \n   // Read in first 80 characters and place them in \"buffer\":  \n   ch = _fgetchar();  \n   for( i=0; (i < 80 ) && ( feof( stdin ) == 0 ); i++ )  \n   {  \n      buffer[i] = (char)ch;  \n      ch = _fgetchar();  \n   }  \n  \n   // Add null to end string   \n   buffer[i] = '\\0';  \n   printf( \"%s\\n\", buffer );  \n}  \n```  \n  \n```Output  \n  \n      Line one.  \nLine two.Line one.  \nLine two.  \n```  \n  \n## .NET Framework Equivalent  \n  \n-   [System::IO::StreamReader::Read](https://msdn.microsoft.com/en-us/library/system.io.streamreader.read.aspx)  \n  \n-   [System::Console::Read](https://msdn.microsoft.com/en-us/library/system.console.read.aspx)  \n  \n## See Also  \n [Stream I/O](../../c-runtime-library/stream-i-o.md)   \n [fputc, fputwc](../../c-runtime-library/reference/fputc-fputwc.md)   \n [getc, getwc](../../c-runtime-library/reference/getc-getwc.md)"}