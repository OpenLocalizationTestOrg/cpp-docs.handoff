{"nodes":[{"pos":[12,50],"content":"acosh, acoshf, acoshl | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"acosh, acoshf, acoshl | Microsoft Docs","pos":[0,38]}]},{"pos":[1052,1073],"content":"acosh, acoshf, acoshl","linkify":"acosh, acoshf, acoshl","nodes":[{"content":"acosh, acoshf, acoshl","pos":[0,21]}]},{"content":"Calculates the inverse hyperbolic cosine.","pos":[1074,1115]},{"pos":[1124,1130],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1378,1388],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Floating-point value.","pos":[1399,1420]},{"pos":[1429,1441],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The <ph id=\"ph1\">`acosh`</ph> functions return the inverse hyberbolic cosine (arc hyperbolic cosine) of <ph id=\"ph2\">`x`</ph>.","pos":[1445,1535],"source":"The `acosh` functions return the inverse hyberbolic cosine (arc hyperbolic cosine) of `x`."},{"content":"These functions are valid over the domain <ph id=\"ph1\">`x`</ph> ≥ 1.","pos":[1536,1586],"source":" These functions are valid over the domain `x` ≥ 1."},{"content":"If <ph id=\"ph1\">`x`</ph> is less than 1, <ph id=\"ph2\">`errno`</ph> is set to <ph id=\"ph3\">`EDOM`</ph> and the result is a quiet NaN.","pos":[1587,1665],"source":" If `x` is less than 1, `errno` is set to `EDOM` and the result is a quiet NaN."},{"content":"If <ph id=\"ph1\">`x`</ph> is a quiet NaN, indefinite, or infinity, the same value is returned.","pos":[1666,1741],"source":" If `x` is a quiet NaN, indefinite, or infinity, the same value is returned."},{"content":"Input","pos":[1748,1753]},{"content":"SEH Exception","pos":[1754,1767]},{"pos":[1768,1788],"content":"<ph id=\"ph1\">`_matherr`</ph> Exception","source":"`_matherr` Exception"},{"content":"± QNAN, IND, INF","pos":[1856,1872]},{"content":"none","pos":[1873,1877]},{"content":"none","pos":[1878,1882]},{"content":"x &lt; 1","pos":[1887,1892],"source":"x < 1"},{"content":"none","pos":[1893,1897]},{"content":"none","pos":[1898,1902]},{"pos":[1912,1919],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When you use C++, you can call overloads of <ph id=\"ph1\">`acosh`</ph> that take and return <ph id=\"ph2\">`float`</ph> or <ph id=\"ph3\">`long double`</ph> values.","pos":[1923,2028],"source":"When you use C++, you can call overloads of `acosh` that take and return `float` or `long double` values."},{"content":"In a C program, <ph id=\"ph1\">`acosh`</ph> always takes and returns <ph id=\"ph2\">`double`</ph>.","pos":[2029,2087],"source":" In a C program, `acosh` always takes and returns `double`."},{"pos":[2096,2108],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Function","pos":[2115,2123]},{"content":"C header","pos":[2124,2132]},{"content":"C++ header","pos":[2133,2143]},{"pos":[2201,2228],"content":"<ph id=\"ph1\">`acosh`</ph>, <ph id=\"ph2\">`acoshf`</ph>, <ph id=\"ph3\">`acoshl`</ph>","source":"`acosh`, `acoshf`, `acoshl`"},{"content":"<ph id=\"ph1\">\\&lt;</ph>math.h&gt;","pos":[2229,2238],"source":"\\<math.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>cmath&gt;","pos":[2239,2247],"source":"\\<cmath>"},{"pos":[2255,2359],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[2368,2375],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2910,2935],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"content":"Not applicable.","pos":[2939,2954]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[2955,3002],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[3003,3128],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"pos":[3137,3145],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Floating-Point Support<ept id=\"p1\">](../../c-runtime-library/floating-point-support.md)</ept><ph id=\"ph1\"> </ph>","pos":[3149,3225],"source":"[Floating-Point Support](../../c-runtime-library/floating-point-support.md) "},{"content":"<bpt id=\"p1\"> [</bpt>cos, cosf, cosl, cosh, coshf, coshl<ept id=\"p1\">](../../c-runtime-library/reference/cos-cosf-cosl-cosh-coshf-coshl.md)</ept><ph id=\"ph1\"> </ph>","pos":[3228,3336],"source":" [cos, cosf, cosl, cosh, coshf, coshl](../../c-runtime-library/reference/cos-cosf-cosl-cosh-coshf-coshl.md) "},{"content":"<bpt id=\"p1\"> [</bpt>sin, sinf, sinl, sinh, sinhf, sinhl<ept id=\"p1\">](../../c-runtime-library/reference/sin-sinf-sinl-sinh-sinhf-sinhl.md)</ept><ph id=\"ph1\"> </ph>","pos":[3339,3447],"source":" [sin, sinf, sinl, sinh, sinhf, sinhl](../../c-runtime-library/reference/sin-sinf-sinl-sinh-sinhf-sinhl.md) "},{"content":"<bpt id=\"p1\"> [</bpt>asinh, asinhf, asinhl<ept id=\"p1\">](../../c-runtime-library/reference/asinh-asinhf-asinhl.md)</ept><ph id=\"ph1\"> </ph>","pos":[3450,3533],"source":" [asinh, asinhf, asinhl](../../c-runtime-library/reference/asinh-asinhf-asinhl.md) "},{"content":"<bpt id=\"p1\"> [</bpt>tan, tanf, tanl, tanh, tanhf, tanhl<ept id=\"p1\">](../../c-runtime-library/reference/tan-tanf-tanl-tanh-tanhf-tanhl.md)</ept><ph id=\"ph1\"> </ph>","pos":[3536,3644],"source":" [tan, tanf, tanl, tanh, tanhf, tanhl](../../c-runtime-library/reference/tan-tanf-tanl-tanh-tanhf-tanhl.md) "},{"content":"<bpt id=\"p1\"> [</bpt>atanh, atanhf, atanhl<ept id=\"p1\">](../../c-runtime-library/reference/atanh-atanhf-atanhl.md)</ept><ph id=\"ph1\"> </ph>","pos":[3647,3730],"source":" [atanh, atanhf, atanhl](../../c-runtime-library/reference/atanh-atanhf-atanhl.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_CItan<ept id=\"p1\">](../../c-runtime-library/citan.md)</ept>","pos":[3733,3776],"source":" [_CItan](../../c-runtime-library/citan.md)"}],"content":"---\ntitle: \"acosh, acoshf, acoshl | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"acoshf\"\n  - \"acosh\"\n  - \"acoshl\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-math-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"acosh\"\n  - \"acoshf\"\n  - \"acoshl\"\n  - \"math/acosh\"\n  - \"math/acoshf\"\n  - \"math/acoshl\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"acoshf function\"\n  - \"acosh function\"\n  - \"acoshl function\"\nms.assetid: 6985c4d7-9e2a-44ce-9a9b-5a43015f15f7\ncaps.latest.revision: 8\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# acosh, acoshf, acoshl\nCalculates the inverse hyperbolic cosine.  \n  \n## Syntax  \n  \n```  \ndouble acosh(  \n   double x   \n);  \nfloat acosh(  \n   float x   \n);  // C++ only  \nlong double acosh(  \n   long double x  \n);  // C++ only  \nfloat acoshf(  \n   float x   \n);  \nlong double acoshl(  \n   long double x  \n);  \n```  \n  \n#### Parameters  \n `x`  \n Floating-point value.  \n  \n## Return Value  \n The `acosh` functions return the inverse hyberbolic cosine (arc hyperbolic cosine) of `x`. These functions are valid over the domain `x` ≥ 1. If `x` is less than 1, `errno` is set to `EDOM` and the result is a quiet NaN. If `x` is a quiet NaN, indefinite, or infinity, the same value is returned.  \n  \n|Input|SEH Exception|`_matherr` Exception|  \n|-----------|-------------------|--------------------------|  \n|± QNAN, IND, INF|none|none|  \n|x < 1|none|none|  \n  \n## Remarks  \n When you use C++, you can call overloads of `acosh` that take and return `float` or `long double` values. In a C program, `acosh` always takes and returns `double`.  \n  \n## Requirements  \n  \n|Function|C header|C++ header|  \n|--------------|--------------|------------------|  \n|`acosh`, `acoshf`, `acoshl`|\\<math.h>|\\<cmath>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```c  \n// crt_acosh.c  \n// Compile by using: cl /W4 crt_acosh.c  \n// This program displays the hyperbolic cosine of pi / 4  \n// and the arc hyperbolic cosine of the result.  \n  \n#include <math.h>  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n   double pi = 3.1415926535;  \n   double x, y;  \n  \n   x = cosh( pi / 4 );  \n   y = acosh( x );  \n   printf( \"cosh( %f ) = %f\\n\", pi/4, x );  \n   printf( \"acosh( %f ) = %f\\n\", x, y );  \n}  \n```  \n  \n```Output  \ncosh( 0.785398 ) = 1.324609  \nacosh( 1.324609 ) = 0.785398  \n```  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [Floating-Point Support](../../c-runtime-library/floating-point-support.md)   \n [cos, cosf, cosl, cosh, coshf, coshl](../../c-runtime-library/reference/cos-cosf-cosl-cosh-coshf-coshl.md)   \n [sin, sinf, sinl, sinh, sinhf, sinhl](../../c-runtime-library/reference/sin-sinf-sinl-sinh-sinhf-sinhl.md)   \n [asinh, asinhf, asinhl](../../c-runtime-library/reference/asinh-asinhf-asinhl.md)   \n [tan, tanf, tanl, tanh, tanhf, tanhl](../../c-runtime-library/reference/tan-tanf-tanl-tanh-tanhf-tanhl.md)   \n [atanh, atanhf, atanhl](../../c-runtime-library/reference/atanh-atanhf-atanhl.md)   \n [_CItan](../../c-runtime-library/citan.md)"}