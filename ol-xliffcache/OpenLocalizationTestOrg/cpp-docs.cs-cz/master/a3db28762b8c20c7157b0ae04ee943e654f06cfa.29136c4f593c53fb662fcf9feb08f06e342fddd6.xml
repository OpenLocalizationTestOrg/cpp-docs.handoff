{"nodes":[{"pos":[12,49],"content":"Compiler Error C3041 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C3041 | Microsoft Docs","pos":[0,37]}]},{"pos":[618,638],"content":"Compiler Error C3041","linkify":"Compiler Error C3041","nodes":[{"content":"Compiler Error C3041","pos":[0,20]}]},{"content":"'var' : variable in 'copyprivate' clause must be private in enclosing context","pos":[639,716]},{"pos":[723,848],"content":"A variable passed to <bpt id=\"p1\">[</bpt>copyprivate<ept id=\"p1\">](../../parallel/openmp/reference/copyprivate.md)</ept> cannot be shared in the enclosing context.","source":"A variable passed to [copyprivate](../../parallel/openmp/reference/copyprivate.md) cannot be shared in the enclosing context."},{"content":"The following sample generates C3041:","pos":[855,892]}],"content":"---\ntitle: \"Compiler Error C3041 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"C3041\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C3041\"\nms.assetid: 9df1ae44-3ac7-4c6c-899f-f35ffe7ccf0d\ncaps.latest.revision: 8\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Compiler Error C3041\n'var' : variable in 'copyprivate' clause must be private in enclosing context  \n  \n A variable passed to [copyprivate](../../parallel/openmp/reference/copyprivate.md) cannot be shared in the enclosing context.  \n  \n The following sample generates C3041:  \n  \n```  \n// C3041.cpp  \n// compile with: /openmp /c  \n#include \"omp.h\"  \ndouble d;  \nint main() {  \n   #pragma omp parallel shared(d)  \n   // try the following line instead  \n   // #pragma omp parallel private(d)  \n   {  \n      // or don't make d copyprivate  \n      #pragma omp single copyprivate(d)   // C3041  \n      {  \n      }  \n   }  \n}  \n```"}