{"nodes":[{"pos":[12,53],"content":"CMultiPaneFrameWnd Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CMultiPaneFrameWnd Class | Microsoft Docs","pos":[0,41]}]},{"pos":[628,652],"content":"CMultiPaneFrameWnd Class","linkify":"CMultiPaneFrameWnd Class","nodes":[{"content":"CMultiPaneFrameWnd Class","pos":[0,24]}]},{"content":"The <ph id=\"ph1\">`CMultiPaneFrameWnd`</ph> class extends <bpt id=\"p1\">[</bpt>CPaneFrameWnd Class<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md)</ept>.","pos":[653,758],"source":"The `CMultiPaneFrameWnd` class extends [CPaneFrameWnd Class](../../mfc/reference/cpaneframewnd-class.md)."},{"content":"It can support multiple panes.","pos":[759,789]},{"content":"Instead of a single embedded handle to a control bar, <ph id=\"ph1\">`CMultiPaneFrameWnd`</ph> contains a <bpt id=\"p1\">[</bpt>CPaneContainerManager Class<ept id=\"p1\">](../../mfc/reference/cpanecontainermanager-class.md)</ept> object that enables the user to dock one <ph id=\"ph2\">`CMultiPaneFrameWnd`</ph> to another and dynamically create multiple floating, tabbed windows.","pos":[790,1088],"source":" Instead of a single embedded handle to a control bar, `CMultiPaneFrameWnd` contains a [CPaneContainerManager Class](../../mfc/reference/cpanecontainermanager-class.md) object that enables the user to dock one `CMultiPaneFrameWnd` to another and dynamically create multiple floating, tabbed windows."},{"pos":[1097,1103],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1177,1184],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[1194,1208],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1215,1219]},{"content":"Description","pos":[1220,1231]},{"pos":[1269,1328],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::AddPane<ept id=\"p1\">](#cmultipaneframewnd__addpane)</ept>","source":"[CMultiPaneFrameWnd::AddPane](#cmultipaneframewnd__addpane)"},{"content":"Adds a pane.","pos":[1329,1341]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CPaneFrameWnd::AddPane<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__addpane)</ept>.)","pos":[1342,1446],"source":" (Overrides [CPaneFrameWnd::AddPane](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__addpane).)"},{"pos":[1451,1522],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::AddRecentPane<ept id=\"p1\">](#cmultipaneframewnd__addrecentpane)</ept>","source":"[CMultiPaneFrameWnd::AddRecentPane](#cmultipaneframewnd__addrecentpane)"},{"pos":[1528,1597],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::AdjustLayout<ept id=\"p1\">](#cmultipaneframewnd__adjustlayout)</ept>","source":"[CMultiPaneFrameWnd::AdjustLayout](#cmultipaneframewnd__adjustlayout)"},{"content":"Adjusts the layout of the mini-frame window.","pos":[1598,1642]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CPaneFrameWnd::AdjustLayout<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__adjustlayout)</ept>.)","pos":[1643,1757],"source":" (Overrides [CPaneFrameWnd::AdjustLayout](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__adjustlayout).)"},{"pos":[1762,1839],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::AdjustPaneFrames<ept id=\"p1\">](#cmultipaneframewnd__adjustpaneframes)</ept>","source":"[CMultiPaneFrameWnd::AdjustPaneFrames](#cmultipaneframewnd__adjustpaneframes)"},{"pos":[1840,1962],"content":"(Overrides <bpt id=\"p1\">[</bpt>CPaneFrameWnd::AdjustPaneFrames<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__adjustpaneframes)</ept>.)","source":"(Overrides [CPaneFrameWnd::AdjustPaneFrames](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__adjustpaneframes).)"},{"pos":[1967,2056],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::CalcExpectedDockedRect<ept id=\"p1\">](#cmultipaneframewnd__calcexpecteddockedrect)</ept>","source":"[CMultiPaneFrameWnd::CalcExpectedDockedRect](#cmultipaneframewnd__calcexpecteddockedrect)"},{"content":"Calculates the expected rectangle of a docked window.","pos":[2057,2110]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CPaneFrameWnd::CalcExpectedDockedRect<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__calcexpecteddockedrect)</ept>.)","pos":[2111,2245],"source":" (Overrides [CPaneFrameWnd::CalcExpectedDockedRect](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__calcexpecteddockedrect).)"},{"pos":[2250,2321],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::CanBeAttached<ept id=\"p1\">](#cmultipaneframewnd__canbeattached)</ept>","source":"[CMultiPaneFrameWnd::CanBeAttached](#cmultipaneframewnd__canbeattached)"},{"content":"Determines whether the current pane can dock to another pane or frame window.","pos":[2322,2399]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CPaneFrameWnd::CanBeAttached<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__canbeattached)</ept>.)","pos":[2400,2516],"source":" (Overrides [CPaneFrameWnd::CanBeAttached](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__canbeattached).)"},{"pos":[2521,2600],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::CanBeDockedToPane<ept id=\"p1\">](#cmultipaneframewnd__canbedockedtopane)</ept>","source":"[CMultiPaneFrameWnd::CanBeDockedToPane](#cmultipaneframewnd__canbedockedtopane)"},{"content":"Determines whether the mini-frame window can dock to a pane.","pos":[2601,2661]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CPaneFrameWnd::CanBeDockedToPane<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__canbedockedtopane)</ept>.)","pos":[2662,2786],"source":" (Overrides [CPaneFrameWnd::CanBeDockedToPane](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__canbedockedtopane).)"},{"pos":[2791,2880],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::CheckGripperVisibility<ept id=\"p1\">](#cmultipaneframewnd__checkgrippervisibility)</ept>","source":"[CMultiPaneFrameWnd::CheckGripperVisibility](#cmultipaneframewnd__checkgrippervisibility)"},{"pos":[2881,3015],"content":"(Overrides <bpt id=\"p1\">[</bpt>CPaneFrameWnd::CheckGripperVisibility<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__checkgrippervisibility)</ept>.)","source":"(Overrides [CPaneFrameWnd::CheckGripperVisibility](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__checkgrippervisibility).)"},{"pos":[3020,3093],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::CloseMiniFrame<ept id=\"p1\">](#cmultipaneframewnd__closeminiframe)</ept>","source":"[CMultiPaneFrameWnd::CloseMiniFrame](#cmultipaneframewnd__closeminiframe)"},{"pos":[3094,3138],"content":"(Overrides <ph id=\"ph1\">`CPaneFrameWnd::CloseMiniFrame`</ph>.)","source":"(Overrides `CPaneFrameWnd::CloseMiniFrame`.)"},{"pos":[3143,3234],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::ConvertToTabbedDocument<ept id=\"p1\">](#cmultipaneframewnd__converttotabbeddocument)</ept>","source":"[CMultiPaneFrameWnd::ConvertToTabbedDocument](#cmultipaneframewnd__converttotabbeddocument)"},{"content":"Converts the pane to a tabbed document.","pos":[3235,3274]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CPaneFrameWnd::ConvertToTabbedDocument<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__converttotabbeddocument)</ept>.)","pos":[3275,3411],"source":" (Overrides [CPaneFrameWnd::ConvertToTabbedDocument](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__converttotabbeddocument).)"},{"pos":[3416,3479],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::DockFrame<ept id=\"p1\">](#cmultipaneframewnd__dockframe)</ept>","source":"[CMultiPaneFrameWnd::DockFrame](#cmultipaneframewnd__dockframe)"},{"pos":[3485,3546],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::DockPane<ept id=\"p1\">](#cmultipaneframewnd__dockpane)</ept>","source":"[CMultiPaneFrameWnd::DockPane](#cmultipaneframewnd__dockpane)"},{"content":"Docks the pane.","pos":[3547,3562]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CPaneFrameWnd::DockPane<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__dockpane)</ept>.)","pos":[3563,3669],"source":" (Overrides [CPaneFrameWnd::DockPane](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__dockpane).)"},{"pos":[3674,3769],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::DockRecentPaneToMainFrame<ept id=\"p1\">](#cmultipaneframewnd__dockrecentpanetomainframe)</ept>","source":"[CMultiPaneFrameWnd::DockRecentPaneToMainFrame](#cmultipaneframewnd__dockrecentpanetomainframe)"},{"pos":[3775,3848],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::GetCaptionText<ept id=\"p1\">](#cmultipaneframewnd__getcaptiontext)</ept>","source":"[CMultiPaneFrameWnd::GetCaptionText](#cmultipaneframewnd__getcaptiontext)"},{"content":"Returns the caption text.","pos":[3849,3874]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CPaneFrameWnd::GetCaptionText<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__getcaptiontext)</ept>.)","pos":[3875,3993],"source":" (Overrides [CPaneFrameWnd::GetCaptionText](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__getcaptiontext).)"},{"pos":[3998,4089],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::GetPaneContainerManager<ept id=\"p1\">](#cmultipaneframewnd__getpanecontainermanager)</ept>","source":"[CMultiPaneFrameWnd::GetPaneContainerManager](#cmultipaneframewnd__getpanecontainermanager)"},{"content":"Returns a reference to the internal container manager object.","pos":[4090,4151]},{"pos":[4156,4239],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::GetFirstVisiblePane<ept id=\"p1\">](#cmultipaneframewnd__getfirstvisiblepane)</ept>","source":"[CMultiPaneFrameWnd::GetFirstVisiblePane](#cmultipaneframewnd__getfirstvisiblepane)"},{"content":"Returns the first visible pane that is contained in a mini-frame window.","pos":[4240,4312]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CPaneFrameWnd::GetFirstVisiblePane<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__getfirstvisiblepane)</ept>.)","pos":[4313,4441],"source":" (Overrides [CPaneFrameWnd::GetFirstVisiblePane](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__getfirstvisiblepane).)"},{"pos":[4446,4505],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::GetPane<ept id=\"p1\">](#cmultipaneframewnd__getpane)</ept>","source":"[CMultiPaneFrameWnd::GetPane](#cmultipaneframewnd__getpane)"},{"content":"Returns a pane that is contained in the mini-frame window.","pos":[4506,4564]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CPaneFrameWnd::GetPane<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__getpane)</ept>.)","pos":[4565,4669],"source":" (Overrides [CPaneFrameWnd::GetPane](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__getpane).)"},{"pos":[4674,4743],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::GetPaneCount<ept id=\"p1\">](#cmultipaneframewnd__getpanecount)</ept>","source":"[CMultiPaneFrameWnd::GetPaneCount](#cmultipaneframewnd__getpanecount)"},{"content":"Returns the number of panes that are contained in a mini-frame window.","pos":[4744,4814]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CPaneFrameWnd::GetPaneCount<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__getpanecount)</ept>.)","pos":[4815,4929],"source":" (Overrides [CPaneFrameWnd::GetPaneCount](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__getpanecount).)"},{"pos":[4934,5017],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::GetVisiblePaneCount<ept id=\"p1\">](#cmultipaneframewnd__getvisiblepanecount)</ept>","source":"[CMultiPaneFrameWnd::GetVisiblePaneCount](#cmultipaneframewnd__getvisiblepanecount)"},{"content":"Returns the number of visible panes that are contained in a mini-frame window.","pos":[5018,5096]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CPaneFrameWnd::GetVisiblePaneCount<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__getvisiblepanecount)</ept>.)","pos":[5097,5225],"source":" (Overrides [CPaneFrameWnd::GetVisiblePaneCount](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__getvisiblepanecount).)"},{"pos":[5230,5295],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::InsertPane<ept id=\"p1\">](#cmultipaneframewnd__insertpane)</ept>","source":"[CMultiPaneFrameWnd::InsertPane](#cmultipaneframewnd__insertpane)"},{"pos":[5301,5364],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::LoadState<ept id=\"p1\">](#cmultipaneframewnd__loadstate)</ept>","source":"[CMultiPaneFrameWnd::LoadState](#cmultipaneframewnd__loadstate)"},{"content":"Loads the pane's state from the registry.","pos":[5365,5406]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CPaneFrameWnd::LoadState<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__loadstate)</ept>.)","pos":[5407,5515],"source":" (Overrides [CPaneFrameWnd::LoadState](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__loadstate).)"},{"pos":[5520,5599],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::OnDockToRecentPos<ept id=\"p1\">](#cmultipaneframewnd__ondocktorecentpos)</ept>","source":"[CMultiPaneFrameWnd::OnDockToRecentPos](#cmultipaneframewnd__ondocktorecentpos)"},{"content":"Docks the mini-frame window at its most recent position.","pos":[5600,5656]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CPaneFrameWnd::OnDockToRecentPos<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__ondocktorecentpos)</ept>.)","pos":[5657,5781],"source":" (Overrides [CPaneFrameWnd::OnDockToRecentPos](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__ondocktorecentpos).)"},{"pos":[5786,5865],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::OnKillRollUpTimer<ept id=\"p1\">](#cmultipaneframewnd__onkillrolluptimer)</ept>","source":"[CMultiPaneFrameWnd::OnKillRollUpTimer](#cmultipaneframewnd__onkillrolluptimer)"},{"content":"Stops the rollup timer.","pos":[5866,5889]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CPaneFrameWnd::OnKillRollUpTimer<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__onkillrolluptimer)</ept>.)","pos":[5890,6014],"source":" (Overrides [CPaneFrameWnd::OnKillRollUpTimer](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__onkillrolluptimer).)"},{"pos":[6019,6100],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::OnPaneRecalcLayout<ept id=\"p1\">](#cmultipaneframewnd__onpanerecalclayout)</ept>","source":"[CMultiPaneFrameWnd::OnPaneRecalcLayout](#cmultipaneframewnd__onpanerecalclayout)"},{"content":"Adjusts the layout of a pane inside a mini-frame window.","pos":[6101,6157]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CPaneFrameWnd::OnPaneRecalcLayout<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__onpanerecalclayout)</ept>.)","pos":[6158,6284],"source":" (Overrides [CPaneFrameWnd::OnPaneRecalcLayout](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__onpanerecalclayout).)"},{"pos":[6289,6366],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::OnSetRollUpTimer<ept id=\"p1\">](#cmultipaneframewnd__onsetrolluptimer)</ept>","source":"[CMultiPaneFrameWnd::OnSetRollUpTimer](#cmultipaneframewnd__onsetrolluptimer)"},{"content":"Sets the rollup timer.","pos":[6367,6389]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CPaneFrameWnd::OnSetRollUpTimer<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__onsetrolluptimer)</ept>.)","pos":[6390,6512],"source":" (Overrides [CPaneFrameWnd::OnSetRollUpTimer](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__onsetrolluptimer).)"},{"pos":[6517,6582],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::OnShowPane<ept id=\"p1\">](#cmultipaneframewnd__onshowpane)</ept>","source":"[CMultiPaneFrameWnd::OnShowPane](#cmultipaneframewnd__onshowpane)"},{"content":"Called by the framework when a pane in the mini-frame window is hidden or displayed.","pos":[6583,6667]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CPaneFrameWnd::OnShowPane<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__onshowpane)</ept>.)","pos":[6668,6778],"source":" (Overrides [CPaneFrameWnd::OnShowPane](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__onshowpane).)"},{"pos":[6783,6854],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::PaneFromPoint<ept id=\"p1\">](#cmultipaneframewnd__panefrompoint)</ept>","source":"[CMultiPaneFrameWnd::PaneFromPoint](#cmultipaneframewnd__panefrompoint)"},{"content":"Returns a pane if it contains a user-supplied point inside a mini-frame window.","pos":[6855,6934]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CPaneFrameWnd::PaneFromPoint<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__panefrompoint)</ept>.)","pos":[6935,7051],"source":" (Overrides [CPaneFrameWnd::PaneFromPoint](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__panefrompoint).)"},{"pos":[7056,7139],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::RemoveNonValidPanes<ept id=\"p1\">](#cmultipaneframewnd__removenonvalidpanes)</ept>","source":"[CMultiPaneFrameWnd::RemoveNonValidPanes](#cmultipaneframewnd__removenonvalidpanes)"},{"content":"Called by the framework to remove non-valid panes.","pos":[7140,7190]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CPaneFrameWnd::RemoveNonValidPanes<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__removenonvalidpanes)</ept>.)","pos":[7191,7319],"source":" (Overrides [CPaneFrameWnd::RemoveNonValidPanes](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__removenonvalidpanes).)"},{"pos":[7324,7389],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::RemovePane<ept id=\"p1\">](#cmultipaneframewnd__removepane)</ept>","source":"[CMultiPaneFrameWnd::RemovePane](#cmultipaneframewnd__removepane)"},{"content":"Removes a pane from the mini-frame window.","pos":[7390,7432]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CPaneFrameWnd::RemovePane<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__removepane)</ept>.)","pos":[7433,7543],"source":" (Overrides [CPaneFrameWnd::RemovePane](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__removepane).)"},{"pos":[7548,7615],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::ReplacePane<ept id=\"p1\">](#cmultipaneframewnd__replacepane)</ept>","source":"[CMultiPaneFrameWnd::ReplacePane](#cmultipaneframewnd__replacepane)"},{"content":"Replaces one pane with another.","pos":[7616,7647]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CPaneFrameWnd::ReplacePane<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__replacepane)</ept>.)","pos":[7648,7760],"source":" (Overrides [CPaneFrameWnd::ReplacePane](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__replacepane).)"},{"pos":[7765,7828],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::SaveState<ept id=\"p1\">](#cmultipaneframewnd__savestate)</ept>","source":"[CMultiPaneFrameWnd::SaveState](#cmultipaneframewnd__savestate)"},{"content":"Saves the pane's state to the registry.","pos":[7829,7868]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CPaneFrameWnd::SaveState<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__savestate)</ept>.)","pos":[7869,7977],"source":" (Overrides [CPaneFrameWnd::SaveState](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__savestate).)"},{"pos":[7982,8045],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::Serialize<ept id=\"p1\">](#cmultipaneframewnd__serialize)</ept>","source":"[CMultiPaneFrameWnd::Serialize](#cmultipaneframewnd__serialize)"},{"pos":[8046,8085],"content":"(Overrides <ph id=\"ph1\">`CPaneFrameWnd::Serialize`</ph>.)","source":"(Overrides `CPaneFrameWnd::Serialize`.)"},{"pos":[8090,8159],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::SetDockState<ept id=\"p1\">](#cmultipaneframewnd__setdockstate)</ept>","source":"[CMultiPaneFrameWnd::SetDockState](#cmultipaneframewnd__setdockstate)"},{"content":"Sets the docking state.","pos":[8160,8183]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CPaneFrameWnd::SetDockState<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__setdockstate)</ept>.)","pos":[8184,8298],"source":" (Overrides [CPaneFrameWnd::SetDockState](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__setdockstate).)"},{"pos":[8303,8384],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::SetLastFocusedPane<ept id=\"p1\">](#cmultipaneframewnd__setlastfocusedpane)</ept>","source":"[CMultiPaneFrameWnd::SetLastFocusedPane](#cmultipaneframewnd__setlastfocusedpane)"},{"pos":[8390,8465],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::SetPreDockState<ept id=\"p1\">](#cmultipaneframewnd__setpredockstate)</ept>","source":"[CMultiPaneFrameWnd::SetPreDockState](#cmultipaneframewnd__setpredockstate)"},{"content":"Sets the predocking state.","pos":[8466,8492]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CPaneFrameWnd::SetPreDockState<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__setpredockstate)</ept>.)","pos":[8493,8613],"source":" (Overrides [CPaneFrameWnd::SetPreDockState](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__setpredockstate).)"},{"pos":[8618,8709],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::StoreRecentDockSiteInfo<ept id=\"p1\">](#cmultipaneframewnd__storerecentdocksiteinfo)</ept>","source":"[CMultiPaneFrameWnd::StoreRecentDockSiteInfo](#cmultipaneframewnd__storerecentdocksiteinfo)"},{"pos":[8710,8846],"content":"(Overrides <bpt id=\"p1\">[</bpt>CPaneFrameWnd::StoreRecentDockSiteInfo<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__storerecentdocksiteinfo)</ept>.)","source":"(Overrides [CPaneFrameWnd::StoreRecentDockSiteInfo](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__storerecentdocksiteinfo).)"},{"pos":[8851,8946],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd::StoreRecentTabRelatedInfo<ept id=\"p1\">](#cmultipaneframewnd__storerecenttabrelatedinfo)</ept>","source":"[CMultiPaneFrameWnd::StoreRecentTabRelatedInfo](#cmultipaneframewnd__storerecenttabrelatedinfo)"},{"pos":[8947,9087],"content":"(Overrides <bpt id=\"p1\">[</bpt>CPaneFrameWnd::StoreRecentTabRelatedInfo<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__storerecenttabrelatedinfo)</ept>.)","source":"(Overrides [CPaneFrameWnd::StoreRecentTabRelatedInfo](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__storerecenttabrelatedinfo).)"},{"pos":[9097,9104],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9108,9238],"content":"Most of the methods in this class override methods in the <bpt id=\"p1\">[</bpt>CPaneFrameWnd Class<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md)</ept> class.","source":"Most of the methods in this class override methods in the [CPaneFrameWnd Class](../../mfc/reference/cpaneframewnd-class.md) class."},{"pos":[9245,9443],"content":"If a pane uses the <ph id=\"ph1\">`AFX_CBRS_AUTO_ROLLUP`</ph> style and the user docks that pane to a multi-pane frame window, the user can roll up the window regardless of the style settings of the other docked panes.","source":"If a pane uses the `AFX_CBRS_AUTO_ROLLUP` style and the user docks that pane to a multi-pane frame window, the user can roll up the window regardless of the style settings of the other docked panes."},{"pos":[9450,9583],"content":"The framework automatically creates a <ph id=\"ph1\">`CMultiPaneFrameWnd`</ph> object when the user floats a pane that uses the <ph id=\"ph2\">`CBRS_FLOAT_MULTI`</ph> style.","source":"The framework automatically creates a `CMultiPaneFrameWnd` object when the user floats a pane that uses the `CBRS_FLOAT_MULTI` style."},{"pos":[9590,9753],"content":"For information about deriving a class from the <ph id=\"ph1\">`CPaneFrameWnd`</ph> class and creating it dynamically, see <bpt id=\"p1\">[</bpt>CPaneFrameWnd<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md)</ept>.","source":"For information about deriving a class from the `CPaneFrameWnd` class and creating it dynamically, see [CPaneFrameWnd](../../mfc/reference/cpaneframewnd-class.md)."},{"pos":[9762,9769],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example demonstrates how to retrieve a pointer to a <ph id=\"ph1\">`CMultiPaneFrameWnd`</ph> object.","pos":[9773,9867],"source":"The following example demonstrates how to retrieve a pointer to a `CMultiPaneFrameWnd` object."},{"content":"This code snippet is part of the <bpt id=\"p1\">[</bpt>Set Pane Size sample<ept id=\"p1\">](../../visual-cpp-samples.md)</ept>.","pos":[9868,9953],"source":" This code snippet is part of the [Set Pane Size sample](../../visual-cpp-samples.md)."},{"pos":[9960,10062],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_SetPaneSize#4<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cmultipaneframewnd-class_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_SetPaneSize#4](../../mfc/reference/codesnippet/cpp/cmultipaneframewnd-class_1.cpp)]"},{"pos":[10071,10092],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[10096,10143],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[10150,10203],"content":"<bpt id=\"p1\">[</bpt>CCmdTarget<ept id=\"p1\">](../../mfc/reference/ccmdtarget-class.md)</ept>","source":"[CCmdTarget](../../mfc/reference/ccmdtarget-class.md)"},{"pos":[10210,10251],"content":"<bpt id=\"p1\">[</bpt>CWnd<ept id=\"p1\">](../../mfc/reference/cwnd-class.md)</ept>","source":"[CWnd](../../mfc/reference/cwnd-class.md)"},{"pos":[10258,10317],"content":"<bpt id=\"p1\">[</bpt>CPaneFrameWnd<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md)</ept>","source":"[CPaneFrameWnd](../../mfc/reference/cpaneframewnd-class.md)"},{"pos":[10324,10393],"content":"<bpt id=\"p1\">[</bpt>CMultiPaneFrameWnd<ept id=\"p1\">](../../mfc/reference/cmultipaneframewnd-class.md)</ept>","source":"[CMultiPaneFrameWnd](../../mfc/reference/cmultipaneframewnd-class.md)"},{"pos":[10402,10414],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[10418,10452],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxMultiPaneFrameWnd.h","source":"**Header:** afxMultiPaneFrameWnd.h"},{"pos":[10462,10533],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__addpane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::AddPane","linkify":"<a name=\"cmultipaneframewnd__addpane\"></a>  CMultiPaneFrameWnd::AddPane","source":"<a name=\"cmultipaneframewnd__addpane\"></a>  CMultiPaneFrameWnd::AddPane"},{"pos":[10700,10710],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[10714,10725],"content":"[in] <ph id=\"ph1\">`pWnd`</ph>","source":"[in] `pWnd`"},{"pos":[10735,10742],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10752,10835],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__addrecentpane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::AddRecentPane","linkify":"<a name=\"cmultipaneframewnd__addrecentpane\"></a>  CMultiPaneFrameWnd::AddRecentPane","source":"<a name=\"cmultipaneframewnd__addrecentpane\"></a>  CMultiPaneFrameWnd::AddRecentPane"},{"pos":[11012,11022],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[11026,11037],"content":"[in] <ph id=\"ph1\">`pBar`</ph>","source":"[in] `pBar`"},{"pos":[11047,11059],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[11069,11076],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[11086,11167],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__adjustlayout\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::AdjustLayout","linkify":"<a name=\"cmultipaneframewnd__adjustlayout\"></a>  CMultiPaneFrameWnd::AdjustLayout","source":"<a name=\"cmultipaneframewnd__adjustlayout\"></a>  CMultiPaneFrameWnd::AdjustLayout"},{"pos":[11324,11331],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[11341,11430],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__adjustpaneframes\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::AdjustPaneFrames","linkify":"<a name=\"cmultipaneframewnd__adjustpaneframes\"></a>  CMultiPaneFrameWnd::AdjustPaneFrames","source":"<a name=\"cmultipaneframewnd__adjustpaneframes\"></a>  CMultiPaneFrameWnd::AdjustPaneFrames"},{"pos":[11591,11598],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[11608,11709],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__calcexpecteddockedrect\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::CalcExpectedDockedRect","linkify":"<a name=\"cmultipaneframewnd__calcexpecteddockedrect\"></a>  CMultiPaneFrameWnd::CalcExpectedDockedRect","source":"<a name=\"cmultipaneframewnd__calcexpecteddockedrect\"></a>  CMultiPaneFrameWnd::CalcExpectedDockedRect"},{"pos":[12001,12011],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pWndToDock`</ph>","pos":[12015,12032],"source":"[in] `pWndToDock`"},{"content":"[in] <ph id=\"ph1\">`ptMouse`</ph>","pos":[12036,12050],"source":" [in] `ptMouse`"},{"content":"[in] <ph id=\"ph1\">`rectResult`</ph>","pos":[12054,12071],"source":" [in] `rectResult`"},{"content":"[in] <ph id=\"ph1\">`bDrawTab`</ph>","pos":[12075,12090],"source":" [in] `bDrawTab`"},{"content":"[in] <ph id=\"ph1\">`ppTargetBar`</ph>","pos":[12094,12112],"source":" [in] `ppTargetBar`"},{"pos":[12122,12129],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12139,12222],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__canbeattached\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::CanBeAttached","linkify":"<a name=\"cmultipaneframewnd__canbeattached\"></a>  CMultiPaneFrameWnd::CanBeAttached","source":"<a name=\"cmultipaneframewnd__canbeattached\"></a>  CMultiPaneFrameWnd::CanBeAttached"},{"pos":[12389,12401],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[12411,12418],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12428,12519],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__canbedockedtopane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::CanBeDockedToPane","linkify":"<a name=\"cmultipaneframewnd__canbedockedtopane\"></a>  CMultiPaneFrameWnd::CanBeDockedToPane","source":"<a name=\"cmultipaneframewnd__canbedockedtopane\"></a>  CMultiPaneFrameWnd::CanBeDockedToPane"},{"pos":[12722,12732],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[12736,12754],"content":"[in] <ph id=\"ph1\">`pDockingBar`</ph>","source":"[in] `pDockingBar`"},{"pos":[12764,12776],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[12786,12793],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12803,12904],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__checkgrippervisibility\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::CheckGripperVisibility","linkify":"<a name=\"cmultipaneframewnd__checkgrippervisibility\"></a>  CMultiPaneFrameWnd::CheckGripperVisibility","source":"<a name=\"cmultipaneframewnd__checkgrippervisibility\"></a>  CMultiPaneFrameWnd::CheckGripperVisibility"},{"pos":[13071,13078],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[13088,13173],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__closeminiframe\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::CloseMiniFrame","linkify":"<a name=\"cmultipaneframewnd__closeminiframe\"></a>  CMultiPaneFrameWnd::CloseMiniFrame","source":"<a name=\"cmultipaneframewnd__closeminiframe\"></a>  CMultiPaneFrameWnd::CloseMiniFrame"},{"pos":[13332,13339],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[13349,13452],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__converttotabbeddocument\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::ConvertToTabbedDocument","linkify":"<a name=\"cmultipaneframewnd__converttotabbeddocument\"></a>  CMultiPaneFrameWnd::ConvertToTabbedDocument","source":"<a name=\"cmultipaneframewnd__converttotabbeddocument\"></a>  CMultiPaneFrameWnd::ConvertToTabbedDocument"},{"pos":[13620,13627],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[13637,13712],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__dockframe\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::DockFrame","linkify":"<a name=\"cmultipaneframewnd__dockframe\"></a>  CMultiPaneFrameWnd::DockFrame","source":"<a name=\"cmultipaneframewnd__dockframe\"></a>  CMultiPaneFrameWnd::DockFrame"},{"pos":[13932,13942],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pDockedFrame`</ph>","pos":[13946,13965],"source":"[in] `pDockedFrame`"},{"content":"[in] <ph id=\"ph1\">`dockMethod`</ph>","pos":[13969,13986],"source":" [in] `dockMethod`"},{"pos":[13996,14008],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[14018,14025],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[14035,14108],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__dockpane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::DockPane","linkify":"<a name=\"cmultipaneframewnd__dockpane\"></a>  CMultiPaneFrameWnd::DockPane","source":"<a name=\"cmultipaneframewnd__dockpane\"></a>  CMultiPaneFrameWnd::DockPane"},{"pos":[14286,14296],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[14300,14317],"content":"[in] <ph id=\"ph1\">`pDockedBar`</ph>","source":"[in] `pDockedBar`"},{"pos":[14327,14339],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[14349,14356],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[14366,14473],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__dockrecentpanetomainframe\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::DockRecentPaneToMainFrame","linkify":"<a name=\"cmultipaneframewnd__dockrecentpanetomainframe\"></a>  CMultiPaneFrameWnd::DockRecentPaneToMainFrame","source":"<a name=\"cmultipaneframewnd__dockrecentpanetomainframe\"></a>  CMultiPaneFrameWnd::DockRecentPaneToMainFrame"},{"pos":[14662,14672],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[14676,14687],"content":"[in] <ph id=\"ph1\">`pBar`</ph>","source":"[in] `pBar`"},{"pos":[14697,14704],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[14714,14799],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__getcaptiontext\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::GetCaptionText","linkify":"<a name=\"cmultipaneframewnd__getcaptiontext\"></a>  CMultiPaneFrameWnd::GetCaptionText","source":"<a name=\"cmultipaneframewnd__getcaptiontext\"></a>  CMultiPaneFrameWnd::GetCaptionText"},{"pos":[14961,14973],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[14983,14990],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[15000,15095],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__getfirstvisiblepane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::GetFirstVisiblePane","linkify":"<a name=\"cmultipaneframewnd__getfirstvisiblepane\"></a>  CMultiPaneFrameWnd::GetFirstVisiblePane","source":"<a name=\"cmultipaneframewnd__getfirstvisiblepane\"></a>  CMultiPaneFrameWnd::GetFirstVisiblePane"},{"pos":[15269,15281],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15291,15298],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[15308,15379],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__getpane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::GetPane","linkify":"<a name=\"cmultipaneframewnd__getpane\"></a>  CMultiPaneFrameWnd::GetPane","source":"<a name=\"cmultipaneframewnd__getpane\"></a>  CMultiPaneFrameWnd::GetPane"},{"pos":[15541,15553],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15563,15570],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[15580,15683],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__getpanecontainermanager\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::GetPaneContainerManager","linkify":"<a name=\"cmultipaneframewnd__getpanecontainermanager\"></a>  CMultiPaneFrameWnd::GetPaneContainerManager","source":"<a name=\"cmultipaneframewnd__getpanecontainermanager\"></a>  CMultiPaneFrameWnd::GetPaneContainerManager"},{"content":"Returns a reference to the internal container manager object.","pos":[15687,15748]},{"pos":[15823,15835],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A reference to the internal container manager object.","pos":[15839,15892]},{"pos":[15902,15909],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[15913,16049],"content":"This method can be used to access the internal <bpt id=\"p1\">[</bpt>CPaneContainerManager Class<ept id=\"p1\">](../../mfc/reference/cpanecontainermanager-class.md)</ept> object.","source":"This method can be used to access the internal [CPaneContainerManager Class](../../mfc/reference/cpanecontainermanager-class.md) object."},{"pos":[16059,16140],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__getpanecount\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::GetPaneCount","linkify":"<a name=\"cmultipaneframewnd__getpanecount\"></a>  CMultiPaneFrameWnd::GetPaneCount","source":"<a name=\"cmultipaneframewnd__getpanecount\"></a>  CMultiPaneFrameWnd::GetPaneCount"},{"pos":[16305,16317],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[16327,16334],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[16344,16439],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__getvisiblepanecount\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::GetVisiblePaneCount","linkify":"<a name=\"cmultipaneframewnd__getvisiblepanecount\"></a>  CMultiPaneFrameWnd::GetVisiblePaneCount","source":"<a name=\"cmultipaneframewnd__getvisiblepanecount\"></a>  CMultiPaneFrameWnd::GetVisiblePaneCount"},{"pos":[16611,16623],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[16633,16640],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[16650,16727],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__insertpane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::InsertPane","linkify":"<a name=\"cmultipaneframewnd__insertpane\"></a>  CMultiPaneFrameWnd::InsertPane","source":"<a name=\"cmultipaneframewnd__insertpane\"></a>  CMultiPaneFrameWnd::InsertPane"},{"pos":[16954,16964],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pControlBar`</ph>","pos":[16968,16986],"source":"[in] `pControlBar`"},{"content":"[in] <ph id=\"ph1\">`pTarget`</ph>","pos":[16990,17004],"source":" [in] `pTarget`"},{"content":"[in] <ph id=\"ph1\">`bAfter`</ph>","pos":[17008,17021],"source":" [in] `bAfter`"},{"pos":[17031,17043],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[17053,17060],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[17070,17145],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__loadstate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::LoadState","linkify":"<a name=\"cmultipaneframewnd__loadstate\"></a>  CMultiPaneFrameWnd::LoadState","source":"<a name=\"cmultipaneframewnd__loadstate\"></a>  CMultiPaneFrameWnd::LoadState"},{"pos":[17363,17373],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`lpszProfileName`</ph>","pos":[17377,17399],"source":"[in] `lpszProfileName`"},{"content":"[in] <ph id=\"ph1\">`uiID`</ph>","pos":[17403,17414],"source":" [in] `uiID`"},{"pos":[17424,17436],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[17446,17453],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[17463,17554],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__ondocktorecentpos\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::OnDockToRecentPos","linkify":"<a name=\"cmultipaneframewnd__ondocktorecentpos\"></a>  CMultiPaneFrameWnd::OnDockToRecentPos","source":"<a name=\"cmultipaneframewnd__ondocktorecentpos\"></a>  CMultiPaneFrameWnd::OnDockToRecentPos"},{"pos":[17716,17723],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[17733,17824],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__onkillrolluptimer\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::OnKillRollUpTimer","linkify":"<a name=\"cmultipaneframewnd__onkillrolluptimer\"></a>  CMultiPaneFrameWnd::OnKillRollUpTimer","source":"<a name=\"cmultipaneframewnd__onkillrolluptimer\"></a>  CMultiPaneFrameWnd::OnKillRollUpTimer"},{"pos":[17986,17993],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[18003,18096],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__onpanerecalclayout\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::OnPaneRecalcLayout","linkify":"<a name=\"cmultipaneframewnd__onpanerecalclayout\"></a>  CMultiPaneFrameWnd::OnPaneRecalcLayout","source":"<a name=\"cmultipaneframewnd__onpanerecalclayout\"></a>  CMultiPaneFrameWnd::OnPaneRecalcLayout"},{"pos":[18259,18266],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[18276,18365],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__onsetrolluptimer\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::OnSetRollUpTimer","linkify":"<a name=\"cmultipaneframewnd__onsetrolluptimer\"></a>  CMultiPaneFrameWnd::OnSetRollUpTimer","source":"<a name=\"cmultipaneframewnd__onsetrolluptimer\"></a>  CMultiPaneFrameWnd::OnSetRollUpTimer"},{"pos":[18526,18533],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[18543,18620],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__onshowpane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::OnShowPane","linkify":"<a name=\"cmultipaneframewnd__onshowpane\"></a>  CMultiPaneFrameWnd::OnShowPane","source":"<a name=\"cmultipaneframewnd__onshowpane\"></a>  CMultiPaneFrameWnd::OnShowPane"},{"pos":[18817,18827],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pBar`</ph>","pos":[18831,18842],"source":"[in] `pBar`"},{"content":"[in] <ph id=\"ph1\">`bShow`</ph>","pos":[18846,18858],"source":" [in] `bShow`"},{"pos":[18868,18875],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[18885,18968],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__panefrompoint\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::PaneFromPoint","linkify":"<a name=\"cmultipaneframewnd__panefrompoint\"></a>  CMultiPaneFrameWnd::PaneFromPoint","source":"<a name=\"cmultipaneframewnd__panefrompoint\"></a>  CMultiPaneFrameWnd::PaneFromPoint"},{"pos":[19202,19212],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`point`</ph>","pos":[19216,19228],"source":"[in] `point`"},{"content":"[in] <ph id=\"ph1\">`nSensitivity`</ph>","pos":[19232,19251],"source":" [in] `nSensitivity`"},{"content":"[in] <ph id=\"ph1\">`bCheckVisibility`</ph>","pos":[19255,19278],"source":" [in] `bCheckVisibility`"},{"pos":[19288,19300],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[19310,19317],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[19327,19422],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__removenonvalidpanes\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::RemoveNonValidPanes","linkify":"<a name=\"cmultipaneframewnd__removenonvalidpanes\"></a>  CMultiPaneFrameWnd::RemoveNonValidPanes","source":"<a name=\"cmultipaneframewnd__removenonvalidpanes\"></a>  CMultiPaneFrameWnd::RemoveNonValidPanes"},{"pos":[19586,19593],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[19603,19680],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__removepane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::RemovePane","linkify":"<a name=\"cmultipaneframewnd__removepane\"></a>  CMultiPaneFrameWnd::RemovePane","source":"<a name=\"cmultipaneframewnd__removepane\"></a>  CMultiPaneFrameWnd::RemovePane"},{"pos":[19921,19931],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pBar`</ph>","pos":[19935,19946],"source":"[in] `pBar`"},{"content":"[in] <ph id=\"ph1\">`bDestroy`</ph>","pos":[19950,19965],"source":" [in] `bDestroy`"},{"content":"[in] <ph id=\"ph1\">`bNoDelayedDestroy`</ph>","pos":[19969,19993],"source":" [in] `bNoDelayedDestroy`"},{"pos":[20003,20010],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[20020,20099],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__replacepane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::ReplacePane","linkify":"<a name=\"cmultipaneframewnd__replacepane\"></a>  CMultiPaneFrameWnd::ReplacePane","source":"<a name=\"cmultipaneframewnd__replacepane\"></a>  CMultiPaneFrameWnd::ReplacePane"},{"pos":[20312,20322],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pBarOrg`</ph>","pos":[20326,20340],"source":"[in] `pBarOrg`"},{"content":"[in] <ph id=\"ph1\">`pBarReplaceWith`</ph>","pos":[20344,20366],"source":" [in] `pBarReplaceWith`"},{"pos":[20376,20383],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[20393,20468],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__savestate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::SaveState","linkify":"<a name=\"cmultipaneframewnd__savestate\"></a>  CMultiPaneFrameWnd::SaveState","source":"<a name=\"cmultipaneframewnd__savestate\"></a>  CMultiPaneFrameWnd::SaveState"},{"pos":[20686,20696],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`lpszProfileName`</ph>","pos":[20700,20722],"source":"[in] `lpszProfileName`"},{"content":"[in] <ph id=\"ph1\">`uiID`</ph>","pos":[20726,20737],"source":" [in] `uiID`"},{"pos":[20747,20759],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[20769,20776],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[20786,20861],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__serialize\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::Serialize","linkify":"<a name=\"cmultipaneframewnd__serialize\"></a>  CMultiPaneFrameWnd::Serialize","source":"<a name=\"cmultipaneframewnd__serialize\"></a>  CMultiPaneFrameWnd::Serialize"},{"pos":[21027,21037],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[21041,21050],"content":"[in] <ph id=\"ph1\">`ar`</ph>","source":"[in] `ar`"},{"pos":[21060,21067],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[21077,21158],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__setdockstate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::SetDockState","linkify":"<a name=\"cmultipaneframewnd__setdockstate\"></a>  CMultiPaneFrameWnd::SetDockState","source":"<a name=\"cmultipaneframewnd__setdockstate\"></a>  CMultiPaneFrameWnd::SetDockState"},{"pos":[21344,21354],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[21358,21377],"content":"[in] <ph id=\"ph1\">`pDockManager`</ph>","source":"[in] `pDockManager`"},{"pos":[21387,21394],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[21404,21497],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__setlastfocusedpane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::SetLastFocusedPane","linkify":"<a name=\"cmultipaneframewnd__setlastfocusedpane\"></a>  CMultiPaneFrameWnd::SetLastFocusedPane","source":"<a name=\"cmultipaneframewnd__setlastfocusedpane\"></a>  CMultiPaneFrameWnd::SetLastFocusedPane"},{"pos":[21661,21671],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[21675,21686],"content":"[in] <ph id=\"ph1\">`hwnd`</ph>","source":"[in] `hwnd`"},{"pos":[21696,21703],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[21713,21800],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__setpredockstate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::SetPreDockState","linkify":"<a name=\"cmultipaneframewnd__setpredockstate\"></a>  CMultiPaneFrameWnd::SetPreDockState","source":"<a name=\"cmultipaneframewnd__setpredockstate\"></a>  CMultiPaneFrameWnd::SetPreDockState"},{"pos":[22076,22086],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`preDockState`</ph>","pos":[22090,22109],"source":"[in] `preDockState`"},{"content":"[in] <ph id=\"ph1\">`pBarToDock`</ph>","pos":[22113,22130],"source":" [in] `pBarToDock`"},{"content":"[in] <ph id=\"ph1\">`dockMethod`</ph>","pos":[22134,22151],"source":" [in] `dockMethod`"},{"pos":[22161,22173],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[22183,22190],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[22200,22303],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__storerecentdocksiteinfo\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::StoreRecentDockSiteInfo","linkify":"<a name=\"cmultipaneframewnd__storerecentdocksiteinfo\"></a>  CMultiPaneFrameWnd::StoreRecentDockSiteInfo","source":"<a name=\"cmultipaneframewnd__storerecentdocksiteinfo\"></a>  CMultiPaneFrameWnd::StoreRecentDockSiteInfo"},{"pos":[22482,22492],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[22496,22507],"content":"[in] <ph id=\"ph1\">`pBar`</ph>","source":"[in] `pBar`"},{"pos":[22517,22524],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[22534,22641],"content":"<bpt id=\"p1\">&lt;a name=\"cmultipaneframewnd__storerecenttabrelatedinfo\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMultiPaneFrameWnd::StoreRecentTabRelatedInfo","linkify":"<a name=\"cmultipaneframewnd__storerecenttabrelatedinfo\"></a>  CMultiPaneFrameWnd::StoreRecentTabRelatedInfo","source":"<a name=\"cmultipaneframewnd__storerecenttabrelatedinfo\"></a>  CMultiPaneFrameWnd::StoreRecentTabRelatedInfo"},{"pos":[22875,22885],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pDockingBar`</ph>","pos":[22889,22907],"source":"[in] `pDockingBar`"},{"content":"[in] <ph id=\"ph1\">`pTabbedBar`</ph>","pos":[22911,22928],"source":" [in] `pTabbedBar`"},{"pos":[22938,22945],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[22954,22962],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[22966,23014],"source":"[Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Classes<ept id=\"p1\">](../../mfc/reference/mfc-classes.md)</ept><ph id=\"ph1\"> </ph>","pos":[23017,23064],"source":" [Classes](../../mfc/reference/mfc-classes.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CPaneFrameWnd Class<ept id=\"p1\">](../../mfc/reference/cpaneframewnd-class.md)</ept>","pos":[23067,23133],"source":" [CPaneFrameWnd Class](../../mfc/reference/cpaneframewnd-class.md)"}],"content":"---\ntitle: \"CMultiPaneFrameWnd Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CMultiPaneFrameWnd\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CMultiPaneFrameWnd class\"\nms.assetid: 989a548e-0d70-46b7-a513-8cf740e1be3e\ncaps.latest.revision: 36\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CMultiPaneFrameWnd Class\nThe `CMultiPaneFrameWnd` class extends [CPaneFrameWnd Class](../../mfc/reference/cpaneframewnd-class.md). It can support multiple panes. Instead of a single embedded handle to a control bar, `CMultiPaneFrameWnd` contains a [CPaneContainerManager Class](../../mfc/reference/cpanecontainermanager-class.md) object that enables the user to dock one `CMultiPaneFrameWnd` to another and dynamically create multiple floating, tabbed windows.  \n  \n## Syntax  \n  \n```  \nclass CMultiPaneFrameWnd : public CPaneFrameWnd  \n```  \n  \n## Members  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMultiPaneFrameWnd::AddPane](#cmultipaneframewnd__addpane)|Adds a pane. (Overrides [CPaneFrameWnd::AddPane](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__addpane).)|  \n|[CMultiPaneFrameWnd::AddRecentPane](#cmultipaneframewnd__addrecentpane)||  \n|[CMultiPaneFrameWnd::AdjustLayout](#cmultipaneframewnd__adjustlayout)|Adjusts the layout of the mini-frame window. (Overrides [CPaneFrameWnd::AdjustLayout](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__adjustlayout).)|  \n|[CMultiPaneFrameWnd::AdjustPaneFrames](#cmultipaneframewnd__adjustpaneframes)|(Overrides [CPaneFrameWnd::AdjustPaneFrames](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__adjustpaneframes).)|  \n|[CMultiPaneFrameWnd::CalcExpectedDockedRect](#cmultipaneframewnd__calcexpecteddockedrect)|Calculates the expected rectangle of a docked window. (Overrides [CPaneFrameWnd::CalcExpectedDockedRect](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__calcexpecteddockedrect).)|  \n|[CMultiPaneFrameWnd::CanBeAttached](#cmultipaneframewnd__canbeattached)|Determines whether the current pane can dock to another pane or frame window. (Overrides [CPaneFrameWnd::CanBeAttached](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__canbeattached).)|  \n|[CMultiPaneFrameWnd::CanBeDockedToPane](#cmultipaneframewnd__canbedockedtopane)|Determines whether the mini-frame window can dock to a pane. (Overrides [CPaneFrameWnd::CanBeDockedToPane](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__canbedockedtopane).)|  \n|[CMultiPaneFrameWnd::CheckGripperVisibility](#cmultipaneframewnd__checkgrippervisibility)|(Overrides [CPaneFrameWnd::CheckGripperVisibility](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__checkgrippervisibility).)|  \n|[CMultiPaneFrameWnd::CloseMiniFrame](#cmultipaneframewnd__closeminiframe)|(Overrides `CPaneFrameWnd::CloseMiniFrame`.)|  \n|[CMultiPaneFrameWnd::ConvertToTabbedDocument](#cmultipaneframewnd__converttotabbeddocument)|Converts the pane to a tabbed document. (Overrides [CPaneFrameWnd::ConvertToTabbedDocument](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__converttotabbeddocument).)|  \n|[CMultiPaneFrameWnd::DockFrame](#cmultipaneframewnd__dockframe)||  \n|[CMultiPaneFrameWnd::DockPane](#cmultipaneframewnd__dockpane)|Docks the pane. (Overrides [CPaneFrameWnd::DockPane](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__dockpane).)|  \n|[CMultiPaneFrameWnd::DockRecentPaneToMainFrame](#cmultipaneframewnd__dockrecentpanetomainframe)||  \n|[CMultiPaneFrameWnd::GetCaptionText](#cmultipaneframewnd__getcaptiontext)|Returns the caption text. (Overrides [CPaneFrameWnd::GetCaptionText](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__getcaptiontext).)|  \n|[CMultiPaneFrameWnd::GetPaneContainerManager](#cmultipaneframewnd__getpanecontainermanager)|Returns a reference to the internal container manager object.|  \n|[CMultiPaneFrameWnd::GetFirstVisiblePane](#cmultipaneframewnd__getfirstvisiblepane)|Returns the first visible pane that is contained in a mini-frame window. (Overrides [CPaneFrameWnd::GetFirstVisiblePane](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__getfirstvisiblepane).)|  \n|[CMultiPaneFrameWnd::GetPane](#cmultipaneframewnd__getpane)|Returns a pane that is contained in the mini-frame window. (Overrides [CPaneFrameWnd::GetPane](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__getpane).)|  \n|[CMultiPaneFrameWnd::GetPaneCount](#cmultipaneframewnd__getpanecount)|Returns the number of panes that are contained in a mini-frame window. (Overrides [CPaneFrameWnd::GetPaneCount](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__getpanecount).)|  \n|[CMultiPaneFrameWnd::GetVisiblePaneCount](#cmultipaneframewnd__getvisiblepanecount)|Returns the number of visible panes that are contained in a mini-frame window. (Overrides [CPaneFrameWnd::GetVisiblePaneCount](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__getvisiblepanecount).)|  \n|[CMultiPaneFrameWnd::InsertPane](#cmultipaneframewnd__insertpane)||  \n|[CMultiPaneFrameWnd::LoadState](#cmultipaneframewnd__loadstate)|Loads the pane's state from the registry. (Overrides [CPaneFrameWnd::LoadState](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__loadstate).)|  \n|[CMultiPaneFrameWnd::OnDockToRecentPos](#cmultipaneframewnd__ondocktorecentpos)|Docks the mini-frame window at its most recent position. (Overrides [CPaneFrameWnd::OnDockToRecentPos](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__ondocktorecentpos).)|  \n|[CMultiPaneFrameWnd::OnKillRollUpTimer](#cmultipaneframewnd__onkillrolluptimer)|Stops the rollup timer. (Overrides [CPaneFrameWnd::OnKillRollUpTimer](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__onkillrolluptimer).)|  \n|[CMultiPaneFrameWnd::OnPaneRecalcLayout](#cmultipaneframewnd__onpanerecalclayout)|Adjusts the layout of a pane inside a mini-frame window. (Overrides [CPaneFrameWnd::OnPaneRecalcLayout](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__onpanerecalclayout).)|  \n|[CMultiPaneFrameWnd::OnSetRollUpTimer](#cmultipaneframewnd__onsetrolluptimer)|Sets the rollup timer. (Overrides [CPaneFrameWnd::OnSetRollUpTimer](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__onsetrolluptimer).)|  \n|[CMultiPaneFrameWnd::OnShowPane](#cmultipaneframewnd__onshowpane)|Called by the framework when a pane in the mini-frame window is hidden or displayed. (Overrides [CPaneFrameWnd::OnShowPane](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__onshowpane).)|  \n|[CMultiPaneFrameWnd::PaneFromPoint](#cmultipaneframewnd__panefrompoint)|Returns a pane if it contains a user-supplied point inside a mini-frame window. (Overrides [CPaneFrameWnd::PaneFromPoint](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__panefrompoint).)|  \n|[CMultiPaneFrameWnd::RemoveNonValidPanes](#cmultipaneframewnd__removenonvalidpanes)|Called by the framework to remove non-valid panes. (Overrides [CPaneFrameWnd::RemoveNonValidPanes](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__removenonvalidpanes).)|  \n|[CMultiPaneFrameWnd::RemovePane](#cmultipaneframewnd__removepane)|Removes a pane from the mini-frame window. (Overrides [CPaneFrameWnd::RemovePane](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__removepane).)|  \n|[CMultiPaneFrameWnd::ReplacePane](#cmultipaneframewnd__replacepane)|Replaces one pane with another. (Overrides [CPaneFrameWnd::ReplacePane](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__replacepane).)|  \n|[CMultiPaneFrameWnd::SaveState](#cmultipaneframewnd__savestate)|Saves the pane's state to the registry. (Overrides [CPaneFrameWnd::SaveState](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__savestate).)|  \n|[CMultiPaneFrameWnd::Serialize](#cmultipaneframewnd__serialize)|(Overrides `CPaneFrameWnd::Serialize`.)|  \n|[CMultiPaneFrameWnd::SetDockState](#cmultipaneframewnd__setdockstate)|Sets the docking state. (Overrides [CPaneFrameWnd::SetDockState](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__setdockstate).)|  \n|[CMultiPaneFrameWnd::SetLastFocusedPane](#cmultipaneframewnd__setlastfocusedpane)||  \n|[CMultiPaneFrameWnd::SetPreDockState](#cmultipaneframewnd__setpredockstate)|Sets the predocking state. (Overrides [CPaneFrameWnd::SetPreDockState](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__setpredockstate).)|  \n|[CMultiPaneFrameWnd::StoreRecentDockSiteInfo](#cmultipaneframewnd__storerecentdocksiteinfo)|(Overrides [CPaneFrameWnd::StoreRecentDockSiteInfo](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__storerecentdocksiteinfo).)|  \n|[CMultiPaneFrameWnd::StoreRecentTabRelatedInfo](#cmultipaneframewnd__storerecenttabrelatedinfo)|(Overrides [CPaneFrameWnd::StoreRecentTabRelatedInfo](../../mfc/reference/cpaneframewnd-class.md#cpaneframewnd__storerecenttabrelatedinfo).)|  \n  \n## Remarks  \n Most of the methods in this class override methods in the [CPaneFrameWnd Class](../../mfc/reference/cpaneframewnd-class.md) class.  \n  \n If a pane uses the `AFX_CBRS_AUTO_ROLLUP` style and the user docks that pane to a multi-pane frame window, the user can roll up the window regardless of the style settings of the other docked panes.  \n  \n The framework automatically creates a `CMultiPaneFrameWnd` object when the user floats a pane that uses the `CBRS_FLOAT_MULTI` style.  \n  \n For information about deriving a class from the `CPaneFrameWnd` class and creating it dynamically, see [CPaneFrameWnd](../../mfc/reference/cpaneframewnd-class.md).  \n  \n## Example  \n The following example demonstrates how to retrieve a pointer to a `CMultiPaneFrameWnd` object. This code snippet is part of the [Set Pane Size sample](../../visual-cpp-samples.md).  \n  \n [!code-cpp[NVC_MFC_SetPaneSize#4](../../mfc/reference/codesnippet/cpp/cmultipaneframewnd-class_1.cpp)]  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n [CPaneFrameWnd](../../mfc/reference/cpaneframewnd-class.md)  \n  \n [CMultiPaneFrameWnd](../../mfc/reference/cmultipaneframewnd-class.md)  \n  \n## Requirements  \n **Header:** afxMultiPaneFrameWnd.h  \n  \n##  <a name=\"cmultipaneframewnd__addpane\"></a>  CMultiPaneFrameWnd::AddPane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void AddPane(CBasePane* pWnd);\n```  \n  \n### Parameters  \n [in] `pWnd`  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__addrecentpane\"></a>  CMultiPaneFrameWnd::AddRecentPane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL AddRecentPane(CDockablePane* pBar);\n```  \n  \n### Parameters  \n [in] `pBar`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__adjustlayout\"></a>  CMultiPaneFrameWnd::AdjustLayout  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void AdjustLayout();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__adjustpaneframes\"></a>  CMultiPaneFrameWnd::AdjustPaneFrames  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void AdjustPaneFrames();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__calcexpecteddockedrect\"></a>  CMultiPaneFrameWnd::CalcExpectedDockedRect  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void CalcExpectedDockedRect(\n    CWnd* pWndToDock,  \n    CPoint ptMouse,  \n    CRect& rectResult,  \n    BOOL& bDrawTab,  \n    CDockablePane** ppTargetBar);\n```  \n  \n### Parameters  \n [in] `pWndToDock`  \n [in] `ptMouse`  \n [in] `rectResult`  \n [in] `bDrawTab`  \n [in] `ppTargetBar`  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__canbeattached\"></a>  CMultiPaneFrameWnd::CanBeAttached  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL CanBeAttached() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__canbedockedtopane\"></a>  CMultiPaneFrameWnd::CanBeDockedToPane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL CanBeDockedToPane(const CDockablePane* pDockingBar) const;\n\n \n```  \n  \n### Parameters  \n [in] `pDockingBar`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__checkgrippervisibility\"></a>  CMultiPaneFrameWnd::CheckGripperVisibility  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void CheckGripperVisibility();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__closeminiframe\"></a>  CMultiPaneFrameWnd::CloseMiniFrame  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void CloseMiniFrame();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__converttotabbeddocument\"></a>  CMultiPaneFrameWnd::ConvertToTabbedDocument  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void ConvertToTabbedDocument();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__dockframe\"></a>  CMultiPaneFrameWnd::DockFrame  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL DockFrame(\n    CPaneFrameWnd* pDockedFrame,  \n    AFX_DOCK_METHOD dockMethod);\n```  \n  \n### Parameters  \n [in] `pDockedFrame`  \n [in] `dockMethod`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__dockpane\"></a>  CMultiPaneFrameWnd::DockPane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL DockPane(CDockablePane* pDockedBar);\n```  \n  \n### Parameters  \n [in] `pDockedBar`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__dockrecentpanetomainframe\"></a>  CMultiPaneFrameWnd::DockRecentPaneToMainFrame  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void DockRecentPaneToMainFrame(CDockablePane* pBar);\n```  \n  \n### Parameters  \n [in] `pBar`  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__getcaptiontext\"></a>  CMultiPaneFrameWnd::GetCaptionText  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual CString GetCaptionText();\n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__getfirstvisiblepane\"></a>  CMultiPaneFrameWnd::GetFirstVisiblePane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual CWnd* GetFirstVisiblePane() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__getpane\"></a>  CMultiPaneFrameWnd::GetPane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual CWnd* GetPane() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__getpanecontainermanager\"></a>  CMultiPaneFrameWnd::GetPaneContainerManager  \n Returns a reference to the internal container manager object.  \n  \n```  \nCPaneContainerManager& GetPaneContainerManager();\n```  \n  \n### Return Value  \n A reference to the internal container manager object.  \n  \n### Remarks  \n This method can be used to access the internal [CPaneContainerManager Class](../../mfc/reference/cpanecontainermanager-class.md) object.  \n  \n##  <a name=\"cmultipaneframewnd__getpanecount\"></a>  CMultiPaneFrameWnd::GetPaneCount  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual int GetPaneCount() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__getvisiblepanecount\"></a>  CMultiPaneFrameWnd::GetVisiblePaneCount  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual int GetVisiblePaneCount() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__insertpane\"></a>  CMultiPaneFrameWnd::InsertPane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL InsertPane(\n    CBasePane* pControlBar,  \n    CBasePane* pTarget,  \n    BOOL bAfter);\n```  \n  \n### Parameters  \n [in] `pControlBar`  \n [in] `pTarget`  \n [in] `bAfter`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__loadstate\"></a>  CMultiPaneFrameWnd::LoadState  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL LoadState(\n    LPCTSTR lpszProfileName = NULL,  \n    UINT uiID = (UINT) -1);\n```  \n  \n### Parameters  \n [in] `lpszProfileName`  \n [in] `uiID`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__ondocktorecentpos\"></a>  CMultiPaneFrameWnd::OnDockToRecentPos  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void OnDockToRecentPos();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__onkillrolluptimer\"></a>  CMultiPaneFrameWnd::OnKillRollUpTimer  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void OnKillRollUpTimer();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__onpanerecalclayout\"></a>  CMultiPaneFrameWnd::OnPaneRecalcLayout  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void OnPaneRecalcLayout();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__onsetrolluptimer\"></a>  CMultiPaneFrameWnd::OnSetRollUpTimer  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void OnSetRollUpTimer();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__onshowpane\"></a>  CMultiPaneFrameWnd::OnShowPane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void OnShowPane(\n    CDockablePane* pBar,  \n    BOOL bShow);\n```  \n  \n### Parameters  \n [in] `pBar`  \n [in] `bShow`  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__panefrompoint\"></a>  CMultiPaneFrameWnd::PaneFromPoint  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual CBasePane* PaneFromPoint(\n    CPoint point,  \n    int nSensitivity,  \n    BOOL bCheckVisibility);\n```  \n  \n### Parameters  \n [in] `point`  \n [in] `nSensitivity`  \n [in] `bCheckVisibility`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__removenonvalidpanes\"></a>  CMultiPaneFrameWnd::RemoveNonValidPanes  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void RemoveNonValidPanes();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__removepane\"></a>  CMultiPaneFrameWnd::RemovePane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void RemovePane(\n    CBasePane* pBar,  \n    BOOL bDestroy = FALSE,  \n    BOOL bNoDelayedDestroy = TRUE);\n```  \n  \n### Parameters  \n [in] `pBar`  \n [in] `bDestroy`  \n [in] `bNoDelayedDestroy`  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__replacepane\"></a>  CMultiPaneFrameWnd::ReplacePane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void ReplacePane(\n    CBasePane* pBarOrg,  \n    CBasePane* pBarReplaceWith);\n```  \n  \n### Parameters  \n [in] `pBarOrg`  \n [in] `pBarReplaceWith`  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__savestate\"></a>  CMultiPaneFrameWnd::SaveState  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL SaveState(\n    LPCTSTR lpszProfileName = NULL,  \n    UINT uiID = (UINT) -1);\n```  \n  \n### Parameters  \n [in] `lpszProfileName`  \n [in] `uiID`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__serialize\"></a>  CMultiPaneFrameWnd::Serialize  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void Serialize(CArchive& ar);\n```  \n  \n### Parameters  \n [in] `ar`  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__setdockstate\"></a>  CMultiPaneFrameWnd::SetDockState  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void SetDockState(CDockingManager* pDockManager);\n```  \n  \n### Parameters  \n [in] `pDockManager`  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__setlastfocusedpane\"></a>  CMultiPaneFrameWnd::SetLastFocusedPane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid SetLastFocusedPane(HWND hwnd);\n```  \n  \n### Parameters  \n [in] `hwnd`  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__setpredockstate\"></a>  CMultiPaneFrameWnd::SetPreDockState  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL SetPreDockState(\n    AFX_PREDOCK_STATE preDockState,  \n    CBasePane* pBarToDock = NULL,  \n    AFX_DOCK_METHOD dockMethod = DM_MOUSE);\n```  \n  \n### Parameters  \n [in] `preDockState`  \n [in] `pBarToDock`  \n [in] `dockMethod`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__storerecentdocksiteinfo\"></a>  CMultiPaneFrameWnd::StoreRecentDockSiteInfo  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void StoreRecentDockSiteInfo(CPane* pBar);\n```  \n  \n### Parameters  \n [in] `pBar`  \n  \n### Remarks  \n  \n##  <a name=\"cmultipaneframewnd__storerecenttabrelatedinfo\"></a>  CMultiPaneFrameWnd::StoreRecentTabRelatedInfo  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void StoreRecentTabRelatedInfo(\n    CDockablePane* pDockingBar,  \n    CDockablePane* pTabbedBar);\n```  \n  \n### Parameters  \n [in] `pDockingBar`  \n [in] `pTabbedBar`  \n  \n### Remarks  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)   \n [CPaneFrameWnd Class](../../mfc/reference/cpaneframewnd-class.md)\n"}