{"nodes":[{"pos":[12,58],"content":"mersenne_twister_engine Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"mersenne_twister_engine Class | Microsoft Docs","pos":[0,46]}]},{"pos":[835,864],"content":"mersenne_twister_engine Class","linkify":"mersenne_twister_engine Class","nodes":[{"content":"mersenne_twister_engine Class","pos":[0,29]}]},{"content":"Generates a high quality random sequence of integers based on the Mersenne twister algorithm.","pos":[865,958]},{"pos":[967,973],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1219,1229],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The unsigned integer result type.","pos":[1247,1280]},{"content":"For possible types, see <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>random&gt;<ept id=\"p1\">](../standard-library/random.md)</ept>.","pos":[1281,1348],"source":" For possible types, see [\\<random>](../standard-library/random.md)."},{"content":"<bpt id=\"p1\"> **</bpt>Word size<ept id=\"p1\">**</ept>.","pos":[1361,1376],"source":" **Word size**."},{"content":"Size of each word, in bits, of the state sequence.","pos":[1377,1427]},{"content":"<bpt id=\"p1\">**</bpt>Precondition<ept id=\"p1\">**</ept>: <ph id=\"ph1\">`2u &lt; W ≤ numeric_limits&lt;UIntType&gt;::digits`</ph>","pos":[1428,1489],"source":"**Precondition**: `2u < W ≤ numeric_limits<UIntType>::digits`"},{"content":"<bpt id=\"p1\"> **</bpt>State size<ept id=\"p1\">**</ept>.","pos":[1502,1518],"source":" **State size**."},{"content":"The number of elements (values) in the state sequence.","pos":[1519,1573]},{"content":"<bpt id=\"p1\"> **</bpt>Shift size<ept id=\"p1\">**</ept>.","pos":[1586,1602],"source":" **Shift size**."},{"content":"The number of elements to skip during each twist.","pos":[1603,1652]},{"content":"<bpt id=\"p1\">**</bpt>Precondition<ept id=\"p1\">**</ept>: <ph id=\"ph1\">`0 &lt; M ≤ N`</ph>","pos":[1653,1682],"source":"**Precondition**: `0 < M ≤ N`"},{"content":"<bpt id=\"p1\"> **</bpt>Mask bits<ept id=\"p1\">**</ept>.","pos":[1695,1710],"source":" **Mask bits**."},{"content":"<bpt id=\"p1\">**</bpt>Precondition<ept id=\"p1\">**</ept>: <ph id=\"ph1\">`R ≤ W`</ph>","pos":[1711,1736],"source":"**Precondition**: `R ≤ W`"},{"content":"<bpt id=\"p1\"> **</bpt>XOR mask<ept id=\"p1\">**</ept>.","pos":[1749,1763],"source":" **XOR mask**."},{"content":"<bpt id=\"p1\">**</bpt>Precondition<ept id=\"p1\">**</ept>: <ph id=\"ph1\">`A ≤ (1u&lt;&lt;W) - 1u`</ph>","pos":[1764,1800],"source":"**Precondition**: `A ≤ (1u<<W) - 1u`"},{"content":"<ph id=\"ph1\">`U`</ph>, <ph id=\"ph2\">`S`</ph>, <ph id=\"ph3\">`T`</ph>, <ph id=\"ph4\">`L`</ph>","pos":[1807,1825],"source":"`U`, `S`, `T`, `L`"},{"content":"<bpt id=\"p1\"> **</bpt>Tempering shift parameters<ept id=\"p1\">**</ept>.","pos":[1828,1860],"source":" **Tempering shift parameters**."},{"content":"Used as shift values during scrambling (tempering).","pos":[1861,1912]},{"content":"Precondition: <ph id=\"ph1\">`U,S,T,L ≤ W`</ph>","pos":[1913,1940],"source":" Precondition: `U,S,T,L ≤ W`"},{"content":"<ph id=\"ph1\">`D`</ph>, <ph id=\"ph2\">`B`</ph>, <ph id=\"ph3\">`C`</ph>","pos":[1947,1960],"source":"`D`, `B`, `C`"},{"content":"<bpt id=\"p1\"> **</bpt>Tempering bit mask parameters<ept id=\"p1\">**</ept>.","pos":[1963,1998],"source":" **Tempering bit mask parameters**."},{"content":"Used as bit mask values during scrambling (tempering).","pos":[1999,2053]},{"content":"Precondition: <ph id=\"ph1\">`D,B,C ≤ (1u&lt;&lt;W) - 1u`</ph>","pos":[2054,2090],"source":" Precondition: `D,B,C ≤ (1u<<W) - 1u`"},{"content":"<bpt id=\"p1\"> **</bpt>Initialization multiplier<ept id=\"p1\">**</ept>.","pos":[2103,2134],"source":" **Initialization multiplier**."},{"content":"Used to help with initialization of the sequence.","pos":[2135,2184]},{"content":"Precondition: <ph id=\"ph1\">`F ≤ (1u&lt;&lt;W) - 1u`</ph>","pos":[2185,2217],"source":" Precondition: `F ≤ (1u<<W) - 1u`"},{"pos":[2226,2233],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[2486,2648],"content":"<ph id=\"ph1\">`default_seed`</ph> is a member constant, defined as <ph id=\"ph2\">`5489u`</ph>, used as the default parameter value for <ph id=\"ph3\">`mersenne_twister_engine::seed`</ph> and the single value constructor.","source":"`default_seed` is a member constant, defined as `5489u`, used as the default parameter value for `mersenne_twister_engine::seed` and the single value constructor."},{"pos":[2655,2745],"content":"For more information about engine members, see <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>random&gt;<ept id=\"p1\">](../standard-library/random.md)</ept>.","source":"For more information about engine members, see [\\<random>](../standard-library/random.md)."},{"pos":[2754,2761],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This template class describes a random number engine, returning values on the closed interval [ <ph id=\"ph1\">`0`</ph>, <ph id=\"ph2\">`2`</ph><bpt id=\"p1\">&lt;sup&gt;</bpt>W<ept id=\"p1\">&lt;/sup&gt;</ept><ph id=\"ph3\"> - </ph><ph id=\"ph4\">`1`</ph>].","pos":[2765,2889],"source":"This template class describes a random number engine, returning values on the closed interval [ `0`, `2`<sup>W</sup> - `1`]."},{"content":"It holds a large integral value with <ph id=\"ph1\">`W * (N - 1) + R`</ph> bits.","pos":[2890,2950],"source":" It holds a large integral value with `W * (N - 1) + R` bits."},{"content":"It extracts <ph id=\"ph1\">`W`</ph> bits at a time from this large value, and when it has used all the bits it twists the large value by shifting and mixing the bits so that it has a new set of bits to extract from.","pos":[2951,3146],"source":" It extracts `W` bits at a time from this large value, and when it has used all the bits it twists the large value by shifting and mixing the bits so that it has a new set of bits to extract from."},{"content":"The engine's state is the last <ph id=\"ph1\">`N``W`</ph>-bit values used if <ph id=\"ph2\">`operator()`</ph> has been called at least <ph id=\"ph3\">`N`</ph> times, otherwise the <ph id=\"ph4\">`M``W`</ph>-bit values that have been used and the last <ph id=\"ph5\">`N - M`</ph> values of the seed.","pos":[3147,3345],"source":" The engine's state is the last `N``W`-bit values used if `operator()` has been called at least `N` times, otherwise the `M``W`-bit values that have been used and the last `N - M` values of the seed."},{"content":"The generator twists the large value that it holds by using a twisted generalized feedback shift register defined by shift values <ph id=\"ph1\">`N`</ph> and <ph id=\"ph2\">`M`</ph>, a twist value <ph id=\"ph3\">`R`</ph>, and a conditional XOR-mask <ph id=\"ph4\">`A`</ph>.","pos":[3352,3545],"source":"The generator twists the large value that it holds by using a twisted generalized feedback shift register defined by shift values `N` and `M`, a twist value `R`, and a conditional XOR-mask `A`."},{"content":"Additionally, the bits of the raw shift register are scrambled (tempered) according to a bit-scrambling matrix defined by values <ph id=\"ph1\">`U`</ph>, <ph id=\"ph2\">`D`</ph>, <ph id=\"ph3\">`S`</ph>, <ph id=\"ph4\">`B`</ph>, <ph id=\"ph5\">`T`</ph>, <ph id=\"ph6\">`C`</ph>, and <ph id=\"ph7\">`L`</ph>.","pos":[3546,3713],"source":" Additionally, the bits of the raw shift register are scrambled (tempered) according to a bit-scrambling matrix defined by values `U`, `D`, `S`, `B`, `T`, `C`, and `L`."},{"pos":[3720,4092],"content":"The template argument <ph id=\"ph1\">`UIntType`</ph> must be large enough to hold values up to <ph id=\"ph2\">`2`</ph><bpt id=\"p1\">&lt;sup&gt;</bpt>W<ept id=\"p1\">&lt;/sup&gt;</ept><ph id=\"ph3\"> - </ph><ph id=\"ph4\">`1`</ph>. The values of the other template arguments must satisfy the following requirements: <ph id=\"ph5\">`2u &lt; W, 0 &lt; M, M ≤ N, R ≤ W, U ≤ W, S ≤ W, T ≤ W, L ≤ W, W ≤ numeric_limits&lt;UIntType&gt;::digits, A ≤ (1u&lt;&lt;W) - 1u, B ≤ (1u&lt;&lt;W) - 1u, C ≤ (1u&lt;&lt;W) - 1u, D ≤ (1u&lt;&lt;W) - 1u, and F ≤ (1u&lt;&lt;W) - 1u`</ph>.","source":"The template argument `UIntType` must be large enough to hold values up to `2`<sup>W</sup> - `1`. The values of the other template arguments must satisfy the following requirements: `2u < W, 0 < M, M ≤ N, R ≤ W, U ≤ W, S ≤ W, T ≤ W, L ≤ W, W ≤ numeric_limits<UIntType>::digits, A ≤ (1u<<W) - 1u, B ≤ (1u<<W) - 1u, C ≤ (1u<<W) - 1u, D ≤ (1u<<W) - 1u, and F ≤ (1u<<W) - 1u`."},{"content":"Although you can construct a generator from this engine directly, it is recommended you use one of these predefined typedefs:","pos":[4099,4224]},{"pos":[4231,4305],"content":"<ph id=\"ph1\">`mt19937`</ph>: 32-bit Mersenne twister engine (Matsumoto and Nishimura, 1998).","source":"`mt19937`: 32-bit Mersenne twister engine (Matsumoto and Nishimura, 1998)."},{"pos":[4512,4589],"content":"<ph id=\"ph1\">`mt19937_64`</ph>: 64-bit Mersenne twister engine (Matsumoto and Nishimura, 2000).","source":"`mt19937_64`: 64-bit Mersenne twister engine (Matsumoto and Nishimura, 2000)."},{"pos":[4862,5016],"content":"For detailed information about the Mersenne twister algorithm, see the Wikipedia article <bpt id=\"p1\">[</bpt>Mersenne twister<ept id=\"p1\">](http://go.microsoft.com/fwlink/LinkId=402356)</ept>.","source":"For detailed information about the Mersenne twister algorithm, see the Wikipedia article [Mersenne twister](http://go.microsoft.com/fwlink/LinkId=402356)."},{"pos":[5025,5032],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[5036,5103],"content":"For a code example, see <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>random&gt;<ept id=\"p1\">](../standard-library/random.md)</ept>.","source":"For a code example, see [\\<random>](../standard-library/random.md)."},{"pos":[5112,5124],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[5128,5149],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>random&gt;","source":"**Header:** \\<random>"},{"pos":[5156,5174],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"pos":[5183,5191],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[5195,5237],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>random&gt;<ept id=\"p1\">](../standard-library/random.md)</ept>","source":"[\\<random>](../standard-library/random.md)"}],"content":"---\ntitle: \"mersenne_twister_engine Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"random/std::tr1::mersenne_twister_engine\"\n  - \"tr1.mersenne_twister_engine\"\n  - \"std.tr1.mersenne_twister_engine\"\n  - \"std::tr1::mersenne_twister_engine\"\n  - \"tr1::mersenne_twister_engine\"\n  - \"mersenne_twister_engine\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"mersenne_twister_engine class\"\nms.assetid: 7ee968fa-a1cc-450f-890f-7305de062685\ncaps.latest.revision: 23\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# mersenne_twister_engine Class\nGenerates a high quality random sequence of integers based on the Mersenne twister algorithm.  \n  \n## Syntax  \n  \n```  \ntemplate <class UIntType,   \n    size_t W, size_t N, size_t M, size_t R,  \n    UIntType A, size_t U, UIntType D, size_t S,  \n    UIntType B, size_t T, UIntType C, size_t L, UIntType F>  \nclass mersenne_twister_engine;  \n```  \n  \n#### Parameters  \n `UIntType`  \n The unsigned integer result type. For possible types, see [\\<random>](../standard-library/random.md).  \n  \n `W`  \n **Word size**. Size of each word, in bits, of the state sequence. **Precondition**: `2u < W ≤ numeric_limits<UIntType>::digits`  \n  \n `N`  \n **State size**. The number of elements (values) in the state sequence.  \n  \n `M`  \n **Shift size**. The number of elements to skip during each twist. **Precondition**: `0 < M ≤ N`  \n  \n `R`  \n **Mask bits**. **Precondition**: `R ≤ W`  \n  \n `A`  \n **XOR mask**. **Precondition**: `A ≤ (1u<<W) - 1u`  \n  \n `U`, `S`, `T`, `L`  \n **Tempering shift parameters**. Used as shift values during scrambling (tempering). Precondition: `U,S,T,L ≤ W`  \n  \n `D`, `B`, `C`  \n **Tempering bit mask parameters**. Used as bit mask values during scrambling (tempering). Precondition: `D,B,C ≤ (1u<<W) - 1u`  \n  \n `F`  \n **Initialization multiplier**. Used to help with initialization of the sequence. Precondition: `F ≤ (1u<<W) - 1u`  \n  \n## Members  \n  \n||||  \n|-|-|-|  \n|`mersenne_twister_engine::mersenne_twister_engine`|`mersenne_twister_engine::min`|`mersenne_twister_engine::discard`|  \n|`mersenne_twister_engine::operator()`|`mersenne_twister_engine::max`|`mersenne_twister_engine::seed`|  \n  \n `default_seed` is a member constant, defined as `5489u`, used as the default parameter value for `mersenne_twister_engine::seed` and the single value constructor.  \n  \n For more information about engine members, see [\\<random>](../standard-library/random.md).  \n  \n## Remarks  \n This template class describes a random number engine, returning values on the closed interval [ `0`, `2`<sup>W</sup> - `1`]. It holds a large integral value with `W * (N - 1) + R` bits. It extracts `W` bits at a time from this large value, and when it has used all the bits it twists the large value by shifting and mixing the bits so that it has a new set of bits to extract from. The engine's state is the last `N``W`-bit values used if `operator()` has been called at least `N` times, otherwise the `M``W`-bit values that have been used and the last `N - M` values of the seed.  \n  \n The generator twists the large value that it holds by using a twisted generalized feedback shift register defined by shift values `N` and `M`, a twist value `R`, and a conditional XOR-mask `A`. Additionally, the bits of the raw shift register are scrambled (tempered) according to a bit-scrambling matrix defined by values `U`, `D`, `S`, `B`, `T`, `C`, and `L`.  \n  \n The template argument `UIntType` must be large enough to hold values up to `2`<sup>W</sup> - `1`. The values of the other template arguments must satisfy the following requirements: `2u < W, 0 < M, M ≤ N, R ≤ W, U ≤ W, S ≤ W, T ≤ W, L ≤ W, W ≤ numeric_limits<UIntType>::digits, A ≤ (1u<<W) - 1u, B ≤ (1u<<W) - 1u, C ≤ (1u<<W) - 1u, D ≤ (1u<<W) - 1u, and F ≤ (1u<<W) - 1u`.  \n  \n Although you can construct a generator from this engine directly, it is recommended you use one of these predefined typedefs:  \n  \n `mt19937`: 32-bit Mersenne twister engine (Matsumoto and Nishimura, 1998).  \n  \n```  \ntypedef mersenne_twister_engine<unsigned int, 32, 624, 397,   \n    31, 0x9908b0df,   \n    11, 0xffffffff,   \n    7, 0x9d2c5680,   \n    15, 0xefc60000,   \n    18, 1812433253> mt19937;  \n```  \n  \n `mt19937_64`: 64-bit Mersenne twister engine (Matsumoto and Nishimura, 2000).  \n  \n```  \ntypedef mersenne_twister_engine<unsigned long long, 64, 312, 156,   \n    31, 0xb5026f5aa96619e9ULL,   \n    29, 0x5555555555555555ULL,   \n    17, 0x71d67fffeda60000ULL,   \n    37, 0xfff7eee000000000ULL,   \n    43, 6364136223846793005ULL> mt19937_64;  \n```  \n  \n For detailed information about the Mersenne twister algorithm, see the Wikipedia article [Mersenne twister](http://go.microsoft.com/fwlink/LinkId=402356).  \n  \n## Example  \n For a code example, see [\\<random>](../standard-library/random.md).  \n  \n## Requirements  \n **Header:** \\<random>  \n  \n **Namespace:** std  \n  \n## See Also  \n [\\<random>](../standard-library/random.md)\n\n"}