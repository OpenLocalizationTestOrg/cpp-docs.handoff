{"nodes":[{"pos":[12,55],"content":"&lt;hash_set&gt; operators | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&amp;lt;</ph>hash_set<ph id=\"ph2\">&amp;gt;</ph> operators | Microsoft Docs","pos":[0,43],"source":"&lt;hash_set&gt; operators | Microsoft Docs"}]},{"pos":[258,284],"content":"&lt;hash_set&gt; operators","linkify":"&lt;hash_set&gt; operators","nodes":[{"content":"<ph id=\"ph1\">&amp;lt;</ph>hash_set<ph id=\"ph2\">&amp;gt;</ph> operators","pos":[0,26],"source":"&lt;hash_set&gt; operators"}]},{"pos":[303,330],"content":"<bpt id=\"p1\">[</bpt>operator!=<ept id=\"p1\">](#operator_neq)</ept>","source":"[operator!=](#operator_neq)"},{"pos":[331,390],"content":"<bpt id=\"p1\">[</bpt>operator!= (hash_multiset)<ept id=\"p1\">](#operator_neq__hash_multiset_)</ept>","source":"[operator!= (hash_multiset)](#operator_neq__hash_multiset_)"},{"pos":[391,420],"content":"<bpt id=\"p1\">[</bpt>operator==<ept id=\"p1\">](#operator_eq_eq)</ept>","source":"[operator==](#operator_eq_eq)"},{"pos":[425,486],"content":"<bpt id=\"p1\">[</bpt>operator== (hash_multiset)<ept id=\"p1\">](#operator_eq_eq__hash_multiset_)</ept>","source":"[operator== (hash_multiset)](#operator_eq_eq__hash_multiset_)"},{"pos":[497,536],"content":"<bpt id=\"p1\">&lt;a name=\"operator_neq\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  operator!=","linkify":"<a name=\"operator_neq\"></a>  operator!=","source":"<a name=\"operator_neq\"></a>  operator!="},{"pos":[544,662],"content":"[!NOTE]\n This API is obsolete. The alternative is [unordered_set Class](../standard-library/unordered-set-class.md).","leadings":["","> "],"nodes":[{"content":" This API is obsolete. The alternative is [unordered_set Class](../standard-library/unordered-set-class.md).","pos":[8,116],"nodes":[{"content":"This API is obsolete.","pos":[1,22]},{"content":"The alternative is <bpt id=\"p1\">[</bpt>unordered_set Class<ept id=\"p1\">](../standard-library/unordered-set-class.md)</ept>.","pos":[23,108],"source":" The alternative is [unordered_set Class](../standard-library/unordered-set-class.md)."}]}]},{"content":"Tests if the hash_set object on the left side of the operator is not equal to the hash_set object on the right side.","pos":[669,785]},{"pos":[922,932],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"An object of type <ph id=\"ph1\">`hash_set`</ph>.","pos":[947,976],"source":" An object of type `hash_set`."},{"content":"An object of type <ph id=\"ph1\">`hash_set`</ph>.","pos":[995,1024],"source":" An object of type `hash_set`."},{"pos":[1034,1046],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[1050,1124],"content":"<bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if the hash_sets are not equal; <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept> if hash_sets are equal.","source":"**true** if the hash_sets are not equal; **false** if hash_sets are equal."},{"pos":[1134,1141],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The comparison between hash_set objects is based on a pairwise comparison between their elements.","pos":[1145,1242]},{"content":"Two hash_sets are equal if they have the same number of elements and their respective elements have the same values.","pos":[1243,1359]},{"content":"Otherwise, they are unequal.","pos":[1360,1388]},{"content":"In Visual C++ .NET 2003, members of the <bpt id=\"p1\">[</bpt>&lt;hash_map&gt;<ept id=\"p1\">](../standard-library/hash-map.md)</ept> and <bpt id=\"p2\">[</bpt>&lt;hash_set&gt;<ept id=\"p2\">](../standard-library/hash-set.md)</ept> header files are no longer in the std namespace, but rather have been moved into the stdext namespace.","pos":[1395,1633],"source":"In Visual C++ .NET 2003, members of the [<hash_map>](../standard-library/hash-map.md) and [<hash_set>](../standard-library/hash-set.md) header files are no longer in the std namespace, but rather have been moved into the stdext namespace."},{"content":"See <bpt id=\"p1\">[</bpt>The stdext Namespace<ept id=\"p1\">](../standard-library/stdext-namespace.md)</ept> for more information.","pos":[1634,1723],"source":" See [The stdext Namespace](../standard-library/stdext-namespace.md) for more information."},{"pos":[1733,1740],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2560,2601],"content":"<bpt id=\"p1\">&lt;a name=\"operator_eq_eq\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  operator==","linkify":"<a name=\"operator_eq_eq\"></a>  operator==","source":"<a name=\"operator_eq_eq\"></a>  operator=="},{"pos":[2609,2727],"content":"[!NOTE]\n This API is obsolete. The alternative is [unordered_set Class](../standard-library/unordered-set-class.md).","leadings":["","> "],"nodes":[{"content":" This API is obsolete. The alternative is [unordered_set Class](../standard-library/unordered-set-class.md).","pos":[8,116],"nodes":[{"content":"This API is obsolete.","pos":[1,22]},{"content":"The alternative is <bpt id=\"p1\">[</bpt>unordered_set Class<ept id=\"p1\">](../standard-library/unordered-set-class.md)</ept>.","pos":[23,108],"source":" The alternative is [unordered_set Class](../standard-library/unordered-set-class.md)."}]}]},{"content":"Tests if the hash_set object on the left side of the operator is equal to the hash_set object on the right side.","pos":[2734,2846]},{"pos":[2984,2994],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"An object of type <ph id=\"ph1\">`hash_set`</ph>.","pos":[3009,3038],"source":" An object of type `hash_set`."},{"content":"An object of type <ph id=\"ph1\">`hash_set`</ph>.","pos":[3057,3086],"source":" An object of type `hash_set`."},{"pos":[3096,3108],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[3112,3250],"content":"<bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if the hash_set on the left side of the operator is equal to the hash_set on the right side of the operator; otherwise <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept>.","source":"**true** if the hash_set on the left side of the operator is equal to the hash_set on the right side of the operator; otherwise **false**."},{"pos":[3260,3267],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The comparison between hash_set objects is based on a pairwise comparison of their elements.","pos":[3271,3363]},{"content":"Two hash_sets are equal if they have the same number of elements and their respective elements have the same values.","pos":[3364,3480]},{"content":"Otherwise, they are unequal.","pos":[3481,3509]},{"content":"In Visual C++ .NET 2003, members of the <bpt id=\"p1\">[</bpt>&lt;hash_map&gt;<ept id=\"p1\">](../standard-library/hash-map.md)</ept> and <bpt id=\"p2\">[</bpt>&lt;hash_set&gt;<ept id=\"p2\">](../standard-library/hash-set.md)</ept> header files are no longer in the std namespace, but rather have been moved into the stdext namespace.","pos":[3516,3754],"source":"In Visual C++ .NET 2003, members of the [<hash_map>](../standard-library/hash-map.md) and [<hash_set>](../standard-library/hash-set.md) header files are no longer in the std namespace, but rather have been moved into the stdext namespace."},{"content":"See <bpt id=\"p1\">[</bpt>The stdext Namespace<ept id=\"p1\">](../standard-library/stdext-namespace.md)</ept> for more information.","pos":[3755,3844],"source":" See [The stdext Namespace](../standard-library/stdext-namespace.md) for more information."},{"pos":[3854,3861],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4658,4729],"content":"<bpt id=\"p1\">&lt;a name=\"operator_neq__hash_multiset_\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  operator!= (hash_multiset)","linkify":"<a name=\"operator_neq__hash_multiset_\"></a>  operator!= (hash_multiset)","source":"<a name=\"operator_neq__hash_multiset_\"></a>  operator!= (hash_multiset)"},{"pos":[4737,4855],"content":"[!NOTE]\n This API is obsolete. The alternative is [unordered_set Class](../standard-library/unordered-set-class.md).","leadings":["","> "],"nodes":[{"content":" This API is obsolete. The alternative is [unordered_set Class](../standard-library/unordered-set-class.md).","pos":[8,116],"nodes":[{"content":"This API is obsolete.","pos":[1,22]},{"content":"The alternative is <bpt id=\"p1\">[</bpt>unordered_set Class<ept id=\"p1\">](../standard-library/unordered-set-class.md)</ept>.","pos":[23,108],"source":" The alternative is [unordered_set Class](../standard-library/unordered-set-class.md)."}]}]},{"content":"Tests if the hash_multiset object on the left side of the operator is not equal to the hash_multiset object on the right side.","pos":[4862,4988]},{"pos":[5135,5145],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"An object of type <ph id=\"ph1\">`hash_multiset`</ph>.","pos":[5160,5194],"source":" An object of type `hash_multiset`."},{"content":"An object of type <ph id=\"ph1\">`hash_multiset`</ph>.","pos":[5213,5247],"source":" An object of type `hash_multiset`."},{"pos":[5257,5269],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[5273,5357],"content":"<bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if the hash_multisets are not equal; <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept> if hash_multisets are equal.","source":"**true** if the hash_multisets are not equal; **false** if hash_multisets are equal."},{"pos":[5367,5374],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The comparison between hash_multiset objects is based on a pairwise comparison between their elements.","pos":[5378,5480]},{"content":"Two hash_multisets are equal if they have the same number of elements and their respective elements have the same values.","pos":[5481,5602]},{"content":"Otherwise, they are unequal.","pos":[5603,5631]},{"content":"In Visual C++ .NET 2003, members of the <bpt id=\"p1\">[</bpt>&lt;hash_map&gt;<ept id=\"p1\">](../standard-library/hash-map.md)</ept> and <bpt id=\"p2\">[</bpt>&lt;hash_set&gt;<ept id=\"p2\">](../standard-library/hash-set.md)</ept> header files are no longer in the std namespace, but rather have been moved into the stdext namespace.","pos":[5638,5876],"source":"In Visual C++ .NET 2003, members of the [<hash_map>](../standard-library/hash-map.md) and [<hash_set>](../standard-library/hash-set.md) header files are no longer in the std namespace, but rather have been moved into the stdext namespace."},{"content":"See <bpt id=\"p1\">[</bpt>The stdext Namespace<ept id=\"p1\">](../standard-library/stdext-namespace.md)</ept> for more information.","pos":[5877,5966],"source":" See [The stdext Namespace](../standard-library/stdext-namespace.md) for more information."},{"pos":[5976,5983],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[6837,6910],"content":"<bpt id=\"p1\">&lt;a name=\"operator_eq_eq__hash_multiset_\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  operator== (hash_multiset)","linkify":"<a name=\"operator_eq_eq__hash_multiset_\"></a>  operator== (hash_multiset)","source":"<a name=\"operator_eq_eq__hash_multiset_\"></a>  operator== (hash_multiset)"},{"pos":[6918,7036],"content":"[!NOTE]\n This API is obsolete. The alternative is [unordered_set Class](../standard-library/unordered-set-class.md).","leadings":["","> "],"nodes":[{"content":" This API is obsolete. The alternative is [unordered_set Class](../standard-library/unordered-set-class.md).","pos":[8,116],"nodes":[{"content":"This API is obsolete.","pos":[1,22]},{"content":"The alternative is <bpt id=\"p1\">[</bpt>unordered_set Class<ept id=\"p1\">](../standard-library/unordered-set-class.md)</ept>.","pos":[23,108],"source":" The alternative is [unordered_set Class](../standard-library/unordered-set-class.md)."}]}]},{"content":"Tests if the hash_multiset object on the left side of the operator is equal to the hash_multiset object on the right side.","pos":[7043,7165]},{"pos":[7313,7323],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"An object of type <ph id=\"ph1\">`hash_multiset`</ph>.","pos":[7338,7372],"source":" An object of type `hash_multiset`."},{"content":"An object of type <ph id=\"ph1\">`hash_multiset`</ph>.","pos":[7391,7425],"source":" An object of type `hash_multiset`."},{"pos":[7435,7447],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7451,7599],"content":"<bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if the hash_multiset on the left side of the operator is equal to the hash_multiset on the right side of the operator; otherwise <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept>.","source":"**true** if the hash_multiset on the left side of the operator is equal to the hash_multiset on the right side of the operator; otherwise **false**."},{"pos":[7609,7616],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The comparison between hash_multiset objects is based on a pairwise comparison of their elements.","pos":[7620,7717]},{"content":"Two hash_multisets are equal if they have the same number of elements and their respective elements have the same values.","pos":[7718,7839]},{"content":"Otherwise, they are unequal.","pos":[7840,7868]},{"content":"In Visual C++ .NET 2003, members of the <bpt id=\"p1\">[</bpt>&lt;hash_map&gt;<ept id=\"p1\">](../standard-library/hash-map.md)</ept> and <bpt id=\"p2\">[</bpt>&lt;hash_set&gt;<ept id=\"p2\">](../standard-library/hash-set.md)</ept> header files are no longer in the std namespace, but rather have been moved into the stdext namespace.","pos":[7875,8113],"source":"In Visual C++ .NET 2003, members of the [<hash_map>](../standard-library/hash-map.md) and [<hash_set>](../standard-library/hash-set.md) header files are no longer in the std namespace, but rather have been moved into the stdext namespace."},{"content":"See <bpt id=\"p1\">[</bpt>The stdext Namespace<ept id=\"p1\">](../standard-library/stdext-namespace.md)</ept> for more information.","pos":[8114,8203],"source":" See [The stdext Namespace](../standard-library/stdext-namespace.md) for more information."},{"pos":[8213,8220],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[9056,9064],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[9068,9113],"content":"<bpt id=\"p1\">[</bpt>&lt;hash_set&gt;<ept id=\"p1\">](../standard-library/hash-set.md)</ept>","source":"[<hash_set>](../standard-library/hash-set.md)"}],"content":"---\ntitle: \"&lt;hash_set&gt; operators | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 403d8e4e-0b3f-43fb-bc5a-8100c4f331c5\ncaps.latest.revision: 13\nmanager: \"ghogen\"\n---\n# &lt;hash_set&gt; operators\n||||  \n|-|-|-|  \n|[operator!=](#operator_neq)|[operator!= (hash_multiset)](#operator_neq__hash_multiset_)|[operator==](#operator_eq_eq)|  \n|[operator== (hash_multiset)](#operator_eq_eq__hash_multiset_)|  \n  \n##  <a name=\"operator_neq\"></a>  operator!=  \n  \n> [!NOTE]\n>  This API is obsolete. The alternative is [unordered_set Class](../standard-library/unordered-set-class.md).  \n  \n Tests if the hash_set object on the left side of the operator is not equal to the hash_set object on the right side.  \n  \n```  \nbool operator!=(const hash_set <Key, Traits, Allocator>& left, const hash_set <Key, Traits, Allocator>& right);\n```  \n  \n### Parameters  \n ` left`  \n An object of type `hash_set`.  \n  \n ` right`  \n An object of type `hash_set`.  \n  \n### Return Value  \n **true** if the hash_sets are not equal; **false** if hash_sets are equal.  \n  \n### Remarks  \n The comparison between hash_set objects is based on a pairwise comparison between their elements. Two hash_sets are equal if they have the same number of elements and their respective elements have the same values. Otherwise, they are unequal.  \n  \n In Visual C++ .NET 2003, members of the [<hash_map>](../standard-library/hash-map.md) and [<hash_set>](../standard-library/hash-set.md) header files are no longer in the std namespace, but rather have been moved into the stdext namespace. See [The stdext Namespace](../standard-library/stdext-namespace.md) for more information.  \n  \n### Example  \n  \n```cpp  \n// hash_set_op_ne.cpp  \n// compile with: /EHsc  \n#include <hash_set>  \n#include <iostream>  \n  \nint main( )   \n{  \n   using namespace std;  \n   using namespace stdext;  \n   hash_set <int> hs1, hs2, hs3;  \n   int i;  \n  \n   for ( i = 0 ; i < 3 ; i++ )  \n   {  \n      hs1.insert ( i );  \n      hs2.insert ( i * i );  \n      hs3.insert ( i );  \n   }  \n  \n   if ( hs1 != hs2 )  \n      cout << \"The hash_sets hs1 and hs2 are not equal.\" << endl;  \n   else  \n      cout << \"The hash_sets hs1 and hs2 are equal.\" << endl;  \n  \n   if ( hs1 != hs3 )  \n      cout << \"The hash_sets hs1 and hs3 are not equal.\" << endl;  \n   else  \n      cout << \"The hash_sets hs1 and hs3 are equal.\" << endl;  \n}  \n```  \n  \n```Output  \nThe hash_sets hs1 and hs2 are not equal.  \nThe hash_sets hs1 and hs3 are equal.  \n```  \n  \n##  <a name=\"operator_eq_eq\"></a>  operator==  \n  \n> [!NOTE]\n>  This API is obsolete. The alternative is [unordered_set Class](../standard-library/unordered-set-class.md).  \n  \n Tests if the hash_set object on the left side of the operator is equal to the hash_set object on the right side.  \n  \n```  \nbool operator!==(const hash_set <Key, Traits, Allocator>& left, const hash_set <Key, Traits, Allocator>& right);\n```  \n  \n### Parameters  \n ` left`  \n An object of type `hash_set`.  \n  \n ` right`  \n An object of type `hash_set`.  \n  \n### Return Value  \n **true** if the hash_set on the left side of the operator is equal to the hash_set on the right side of the operator; otherwise **false**.  \n  \n### Remarks  \n The comparison between hash_set objects is based on a pairwise comparison of their elements. Two hash_sets are equal if they have the same number of elements and their respective elements have the same values. Otherwise, they are unequal.  \n  \n In Visual C++ .NET 2003, members of the [<hash_map>](../standard-library/hash-map.md) and [<hash_set>](../standard-library/hash-set.md) header files are no longer in the std namespace, but rather have been moved into the stdext namespace. See [The stdext Namespace](../standard-library/stdext-namespace.md) for more information.  \n  \n### Example  \n  \n```cpp  \n// hash_set_op_eq.cpp  \n// compile with: /EHsc  \n#include <hash_set>  \n#include <iostream>  \n  \nint main( )  \n{  \n   using namespace std;  \n   using namespace stdext;  \n   hash_set <int> s1, s2, s3;  \n   int i;  \n  \n   for ( i = 0 ; i < 3 ; i++ )  \n   {  \n      s1.insert ( i );  \n      s2.insert ( i * i );  \n      s3.insert ( i );  \n   }  \n  \n   if ( s1 == s2 )  \n      cout << \"The hash_sets s1 and s2 are equal.\" << endl;  \n   else  \n      cout << \"The hash_sets s1 and s2 are not equal.\" << endl;  \n  \n   if ( s1 == s3 )  \n      cout << \"The hash_sets s1 and s3 are equal.\" << endl;  \n   else  \n      cout << \"The hash_sets s1 and s3 are not equal.\" << endl;  \n}  \n```  \n  \n```Output  \nThe hash_sets s1 and s2 are not equal.  \nThe hash_sets s1 and s3 are equal.  \n```  \n  \n##  <a name=\"operator_neq__hash_multiset_\"></a>  operator!= (hash_multiset)  \n  \n> [!NOTE]\n>  This API is obsolete. The alternative is [unordered_set Class](../standard-library/unordered-set-class.md).  \n  \n Tests if the hash_multiset object on the left side of the operator is not equal to the hash_multiset object on the right side.  \n  \n```  \nbool operator!=(const hash_multiset <Key, Traits, Allocator>& left, const hash_multiset <Key, Traits, Allocator>& right);\n```  \n  \n### Parameters  \n ` left`  \n An object of type `hash_multiset`.  \n  \n ` right`  \n An object of type `hash_multiset`.  \n  \n### Return Value  \n **true** if the hash_multisets are not equal; **false** if hash_multisets are equal.  \n  \n### Remarks  \n The comparison between hash_multiset objects is based on a pairwise comparison between their elements. Two hash_multisets are equal if they have the same number of elements and their respective elements have the same values. Otherwise, they are unequal.  \n  \n In Visual C++ .NET 2003, members of the [<hash_map>](../standard-library/hash-map.md) and [<hash_set>](../standard-library/hash-set.md) header files are no longer in the std namespace, but rather have been moved into the stdext namespace. See [The stdext Namespace](../standard-library/stdext-namespace.md) for more information.  \n  \n### Example  \n  \n```cpp  \n// hashset_op_ne.cpp  \n// compile with: /EHsc  \n#include <hash_set>  \n#include <iostream>  \n  \nint main( )   \n{  \n   using namespace std;  \n   using namespace stdext;  \n   hash_multiset <int> hs1, hs2, hs3;  \n   int i;  \n  \n   for ( i = 0 ; i < 3 ; i++ )  \n   {  \n      hs1.insert ( i );  \n      hs2.insert ( i * i );  \n      hs3.insert ( i );  \n   }  \n  \n   if ( hs1 != hs2 )  \n      cout << \"The hash_multisets hs1 and hs2 are not equal.\" << endl;  \n   else  \n      cout << \"The hash_multisets hs1 and hs2 are equal.\" << endl;  \n  \n   if ( hs1 != hs3 )  \n      cout << \"The hash_multisets hs1 and hs3 are not equal.\" << endl;  \n   else  \n      cout << \"The hash_multisets hs1 and hs3 are equal.\" << endl;  \n}  \n```  \n  \n```Output  \nThe hash_multisets hs1 and hs2 are not equal.  \nThe hash_multisets hs1 and hs3 are equal.  \n```  \n  \n##  <a name=\"operator_eq_eq__hash_multiset_\"></a>  operator== (hash_multiset)  \n  \n> [!NOTE]\n>  This API is obsolete. The alternative is [unordered_set Class](../standard-library/unordered-set-class.md).  \n  \n Tests if the hash_multiset object on the left side of the operator is equal to the hash_multiset object on the right side.  \n  \n```  \nbool operator!==(const hash_multiset <Key, Traits, Allocator>& left, const hash_multiset <Key, Traits, Allocator>& right);\n```  \n  \n### Parameters  \n ` left`  \n An object of type `hash_multiset`.  \n  \n ` right`  \n An object of type `hash_multiset`.  \n  \n### Return Value  \n **true** if the hash_multiset on the left side of the operator is equal to the hash_multiset on the right side of the operator; otherwise **false**.  \n  \n### Remarks  \n The comparison between hash_multiset objects is based on a pairwise comparison of their elements. Two hash_multisets are equal if they have the same number of elements and their respective elements have the same values. Otherwise, they are unequal.  \n  \n In Visual C++ .NET 2003, members of the [<hash_map>](../standard-library/hash-map.md) and [<hash_set>](../standard-library/hash-set.md) header files are no longer in the std namespace, but rather have been moved into the stdext namespace. See [The stdext Namespace](../standard-library/stdext-namespace.md) for more information.  \n  \n### Example  \n  \n```cpp  \n// hash_multiset_op_eq.cpp  \n// compile with: /EHsc  \n#include <hash_set>  \n#include <iostream>  \n  \nint main( )  \n{  \n   using namespace std;  \n   using namespace stdext;  \n   hash_multiset <int> s1, s2, s3;  \n   int i;  \n  \n   for ( i = 0 ; i < 3 ; i++ )  \n   {  \n      s1.insert ( i );  \n      s2.insert ( i * i );  \n      s3.insert ( i );  \n   }  \n  \n   if ( s1 == s2 )  \n      cout << \"The hash_multisets s1 and s2 are equal.\" << endl;  \n   else  \n      cout << \"The hash_multisets s1 and s2 are not equal.\" << endl;  \n  \n   if ( s1 == s3 )  \n      cout << \"The hash_multisets s1 and s2 are equal.\" << endl;  \n   else  \n      cout << \"The hash_multisets s1 and s2 are not equal.\" << endl;  \n}  \n```  \n  \n```Output  \nThe hash_multisets s1 and s2 are not equal.  \nThe hash_multisets s1 and s2 are equal.  \n```  \n  \n## See Also  \n [<hash_set>](../standard-library/hash-set.md)\n\n"}