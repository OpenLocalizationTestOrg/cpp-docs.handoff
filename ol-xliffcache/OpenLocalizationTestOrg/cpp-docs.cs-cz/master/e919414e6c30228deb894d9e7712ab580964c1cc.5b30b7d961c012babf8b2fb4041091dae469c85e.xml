{"nodes":[{"pos":[12,51],"content":"CSimpleException Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CSimpleException Class | Microsoft Docs","pos":[0,39]}]},{"pos":[622,644],"content":"CSimpleException Class","linkify":"CSimpleException Class","nodes":[{"content":"CSimpleException Class","pos":[0,22]}]},{"content":"This class is a base class for resource-critical MFC exceptions.","pos":[645,709]},{"pos":[718,724],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[806,813],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[823,842],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[849,853]},{"content":"Description","pos":[854,865]},{"pos":[903,976],"content":"<bpt id=\"p1\">[</bpt>CSimpleException::CSimpleException<ept id=\"p1\">](#csimpleexception__csimpleexception)</ept>","source":"[CSimpleException::CSimpleException](#csimpleexception__csimpleexception)"},{"content":"The constructor.","pos":[977,993]},{"pos":[1004,1018],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1025,1029]},{"content":"Description","pos":[1030,1041]},{"pos":[1079,1150],"content":"<bpt id=\"p1\">[</bpt>CSimpleException::GetErrorMessage<ept id=\"p1\">](#csimpleexception__geterrormessage)</ept>","source":"[CSimpleException::GetErrorMessage](#csimpleexception__geterrormessage)"},{"content":"Provides text about an error that has occurred.","pos":[1151,1198]},{"pos":[1208,1215],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"<ph id=\"ph1\">`CSimpleException`</ph> is the base class for resource-critical MFC exceptions and handles the ownership and initialization of an error message.","pos":[1219,1358],"source":"`CSimpleException` is the base class for resource-critical MFC exceptions and handles the ownership and initialization of an error message."},{"content":"The following classes use <ph id=\"ph1\">`CSimpleException`</ph> as their base class:","pos":[1359,1424],"source":" The following classes use `CSimpleException` as their base class:"},{"pos":[1445,1516],"content":"<bpt id=\"p1\">[</bpt>CMemoryException Class<ept id=\"p1\">](../../mfc/reference/cmemoryexception-class.md)</ept>","source":"[CMemoryException Class](../../mfc/reference/cmemoryexception-class.md)"},{"content":"Out-of-memory exception","pos":[1517,1540]},{"pos":[1545,1628],"content":"<bpt id=\"p1\">[</bpt>CNotSupportedException Class<ept id=\"p1\">](../../mfc/reference/cnotsupportedexception-class.md)</ept>","source":"[CNotSupportedException Class](../../mfc/reference/cnotsupportedexception-class.md)"},{"content":"Requests for an unsupported operation","pos":[1629,1666]},{"pos":[1671,1746],"content":"<bpt id=\"p1\">[</bpt>CResourceException Class<ept id=\"p1\">](../../mfc/reference/cresourceexception-class.md)</ept>","source":"[CResourceException Class](../../mfc/reference/cresourceexception-class.md)"},{"content":"Windows resource not found or not creatable","pos":[1747,1790]},{"pos":[1795,1862],"content":"<bpt id=\"p1\">[</bpt>CUserException Class<ept id=\"p1\">](../../mfc/reference/cuserexception-class.md)</ept>","source":"[CUserException Class](../../mfc/reference/cuserexception-class.md)"},{"content":"Exception that indicates a resource could not be found","pos":[1863,1917]},{"pos":[1922,2001],"content":"<bpt id=\"p1\">[</bpt>CInvalidArgException Class<ept id=\"p1\">](../../mfc/reference/cinvalidargexception-class.md)</ept>","source":"[CInvalidArgException Class](../../mfc/reference/cinvalidargexception-class.md)"},{"content":"Exception that indicates an invalid argument","pos":[2002,2046]},{"content":"Because <ph id=\"ph1\">`CSimpleException`</ph> is an abstract base class, you cannot declare a <ph id=\"ph2\">`CSimpleException`</ph> object directly.","pos":[2054,2164],"source":"Because `CSimpleException` is an abstract base class, you cannot declare a `CSimpleException` object directly."},{"content":"Instead, you must declare derived objects such as those in the previous table.","pos":[2165,2243]},{"content":"If you are declaring your own derived class, use the previous classes as a model.","pos":[2244,2325]},{"pos":[2332,2499],"content":"For more information, see the <bpt id=\"p1\">[</bpt>CException Class<ept id=\"p1\">](../../mfc/reference/cexception-class.md)</ept> topic and <bpt id=\"p2\">[</bpt>Exception Handling (MFC)<ept id=\"p2\">](../../mfc/exception-handling-in-mfc.md)</ept>.","source":"For more information, see the [CException Class](../../mfc/reference/cexception-class.md) topic and [Exception Handling (MFC)](../../mfc/exception-handling-in-mfc.md)."},{"pos":[2508,2529],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[2533,2580],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[2587,2640],"content":"<bpt id=\"p1\">[</bpt>CException<ept id=\"p1\">](../../mfc/reference/cexception-class.md)</ept>","source":"[CException](../../mfc/reference/cexception-class.md)"},{"pos":[2674,2686],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2690,2707],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afx.h","source":"**Header:** afx.h"},{"pos":[2717,2802],"content":"<bpt id=\"p1\">&lt;a name=\"csimpleexception__csimpleexception\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CSimpleException::CSimpleException","linkify":"<a name=\"csimpleexception__csimpleexception\"></a>  CSimpleException::CSimpleException","source":"<a name=\"csimpleexception__csimpleexception\"></a>  CSimpleException::CSimpleException"},{"content":"The constructor.","pos":[2806,2822]},{"pos":[2915,2925],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specify <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> if the memory for the <ph id=\"ph1\">`CSimpleException`</ph> object has been allocated on the heap.","pos":[2946,3042],"source":" Specify **TRUE** if the memory for the `CSimpleException` object has been allocated on the heap."},{"content":"This will cause the <ph id=\"ph1\">`CSimpleException`</ph> object to be deleted when the <bpt id=\"p1\">**</bpt>Delete<ept id=\"p1\">**</ept> member function is called to delete the exception.","pos":[3043,3173],"source":" This will cause the `CSimpleException` object to be deleted when the **Delete** member function is called to delete the exception."},{"content":"Specify <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept> if the <ph id=\"ph1\">`CSimpleException`</ph> object is on the stack or is a global object.","pos":[3174,3263],"source":" Specify **FALSE** if the `CSimpleException` object is on the stack or is a global object."},{"content":"In this case, the <ph id=\"ph1\">`CSimpleException`</ph> object will not be deleted when the <bpt id=\"p1\">**</bpt>Delete<ept id=\"p1\">**</ept> member function is called.","pos":[3264,3374],"source":" In this case, the `CSimpleException` object will not be deleted when the **Delete** member function is called."},{"pos":[3384,3391],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You would normally never need to call this constructor directly.","pos":[3395,3459]},{"content":"A function that throws an exception should create an instance of a <ph id=\"ph1\">`CException`</ph>-derived class and call its constructor, or it should use one of the MFC throw functions, such as [AfxThrowFileException]--brokenlink--(exception-processing.md#afxthrowfileexception), to throw a predefined type.","pos":[3460,3750],"source":" A function that throws an exception should create an instance of a `CException`-derived class and call its constructor, or it should use one of the MFC throw functions, such as [AfxThrowFileException]--brokenlink--(exception-processing.md#afxthrowfileexception), to throw a predefined type."},{"pos":[3760,3843],"content":"<bpt id=\"p1\">&lt;a name=\"csimpleexception__geterrormessage\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CSimpleException::GetErrorMessage","linkify":"<a name=\"csimpleexception__geterrormessage\"></a>  CSimpleException::GetErrorMessage","source":"<a name=\"csimpleexception__geterrormessage\"></a>  CSimpleException::GetErrorMessage"},{"content":"Call this member function to provide text about an error that has occurred.","pos":[3847,3922]},{"pos":[4054,4064],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to a buffer that will receive an error message.","pos":[4083,4140]},{"content":"The maximum number of characters the buffer can hold, including the <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> terminator.","pos":[4162,4250],"source":" The maximum number of characters the buffer can hold, including the **NULL** terminator."},{"content":"The address of a <bpt id=\"p1\">**</bpt>UINT<ept id=\"p1\">**</ept> that will receive the help context ID.","pos":[4276,4340],"source":" The address of a **UINT** that will receive the help context ID."},{"content":"If <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>, no ID will be returned.","pos":[4341,4377],"source":" If **NULL**, no ID will be returned."},{"pos":[4387,4399],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if the function is successful; otherwise 0 if no error message text is available.","pos":[4403,4492]},{"pos":[4502,4509],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4513,4646],"content":"For more information, see <bpt id=\"p1\">[</bpt>CException::GetErrorMessage<ept id=\"p1\">](../../mfc/reference/cfileexception-class.md#cfileexception__geterrormessage)</ept>.","source":"For more information, see [CException::GetErrorMessage](../../mfc/reference/cfileexception-class.md#cfileexception__geterrormessage)."},{"pos":[4655,4663],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[4667,4715],"source":"[Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CException Class<ept id=\"p1\">](../../mfc/reference/cexception-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[4718,4779],"source":" [CException Class](../../mfc/reference/cexception-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Exception Handling<ept id=\"p1\">](../../mfc/exception-handling-in-mfc.md)</ept>","pos":[4782,4843],"source":" [Exception Handling](../../mfc/exception-handling-in-mfc.md)"}],"content":"---\ntitle: \"CSimpleException Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CSimpleException\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CSimpleException class\"\nms.assetid: be0eb8ef-e5b9-47d6-b0fb-efaff2d1e666\ncaps.latest.revision: 19\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CSimpleException Class\nThis class is a base class for resource-critical MFC exceptions.  \n  \n## Syntax  \n  \n```  \nclass AFX_NOVTABLE CSimpleException : public CException  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CSimpleException::CSimpleException](#csimpleexception__csimpleexception)|The constructor.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CSimpleException::GetErrorMessage](#csimpleexception__geterrormessage)|Provides text about an error that has occurred.|  \n  \n## Remarks  \n `CSimpleException` is the base class for resource-critical MFC exceptions and handles the ownership and initialization of an error message. The following classes use `CSimpleException` as their base class:  \n  \n|||  \n|-|-|  \n|[CMemoryException Class](../../mfc/reference/cmemoryexception-class.md)|Out-of-memory exception|  \n|[CNotSupportedException Class](../../mfc/reference/cnotsupportedexception-class.md)|Requests for an unsupported operation|  \n|[CResourceException Class](../../mfc/reference/cresourceexception-class.md)|Windows resource not found or not creatable|  \n|[CUserException Class](../../mfc/reference/cuserexception-class.md)|Exception that indicates a resource could not be found|  \n|[CInvalidArgException Class](../../mfc/reference/cinvalidargexception-class.md)|Exception that indicates an invalid argument|  \n  \n Because `CSimpleException` is an abstract base class, you cannot declare a `CSimpleException` object directly. Instead, you must declare derived objects such as those in the previous table. If you are declaring your own derived class, use the previous classes as a model.  \n  \n For more information, see the [CException Class](../../mfc/reference/cexception-class.md) topic and [Exception Handling (MFC)](../../mfc/exception-handling-in-mfc.md).  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CException](../../mfc/reference/cexception-class.md)  \n  \n `CSimpleException`  \n  \n## Requirements  \n **Header:** afx.h  \n  \n##  <a name=\"csimpleexception__csimpleexception\"></a>  CSimpleException::CSimpleException  \n The constructor.  \n  \n```  \nCSimpleException();\n\n \nexplicit CSimpleException(BOOL bAutoDelete);\n```  \n  \n### Parameters  \n `bAutoDelete`  \n Specify **TRUE** if the memory for the `CSimpleException` object has been allocated on the heap. This will cause the `CSimpleException` object to be deleted when the **Delete** member function is called to delete the exception. Specify **FALSE** if the `CSimpleException` object is on the stack or is a global object. In this case, the `CSimpleException` object will not be deleted when the **Delete** member function is called.  \n  \n### Remarks  \n You would normally never need to call this constructor directly. A function that throws an exception should create an instance of a `CException`-derived class and call its constructor, or it should use one of the MFC throw functions, such as [AfxThrowFileException]--brokenlink--(exception-processing.md#afxthrowfileexception), to throw a predefined type.  \n  \n##  <a name=\"csimpleexception__geterrormessage\"></a>  CSimpleException::GetErrorMessage  \n Call this member function to provide text about an error that has occurred.  \n  \n```  \nvirtual BOOL GetErrorMessage(\n    LPTSTR lpszError,\n    UINT  nMaxError,\n    PUNIT  pnHelpContext = NULL);\n```  \n  \n### Parameters  \n `lpszError`  \n A pointer to a buffer that will receive an error message.  \n  \n `nMaxError`  \n The maximum number of characters the buffer can hold, including the **NULL** terminator.  \n  \n `pnHelpContext`  \n The address of a **UINT** that will receive the help context ID. If **NULL**, no ID will be returned.  \n  \n### Return Value  \n Nonzero if the function is successful; otherwise 0 if no error message text is available.  \n  \n### Remarks  \n For more information, see [CException::GetErrorMessage](../../mfc/reference/cfileexception-class.md#cfileexception__geterrormessage).  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [CException Class](../../mfc/reference/cexception-class.md)   \n [Exception Handling](../../mfc/exception-handling-in-mfc.md)\n\n\n\n"}