{"nodes":[{"pos":[12,49],"content":"Compiler Error C3710 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C3710 | Microsoft Docs","pos":[0,37]}]},{"content":"Compiler Error C3710","pos":[597,617]},{"content":"'function': improper syntax for specifying event handler in __hook/<ph id=\"ph1\">\\_</ph>_unhook","pos":[618,694],"source":"'function': improper syntax for specifying event handler in __hook/\\__unhook"},{"pos":[701,839],"content":"When you specify an event handler with <bpt id=\"p1\">[</bpt>__hook<ept id=\"p1\">](../../cpp/hook.md)</ept> or <bpt id=\"p2\">[</bpt>__unhook<ept id=\"p2\">](../../cpp/unhook.md)</ept>, the handler must be a valid method.","source":"When you specify an event handler with [__hook](../../cpp/hook.md) or [__unhook](../../cpp/unhook.md), the handler must be a valid method."},{"content":"Example","pos":[848,855]},{"content":"The following sample generates C3710","pos":[859,895]}],"content":"---\ntitle: \"Compiler Error C3710 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C3710\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C3710\"\nms.assetid: 18bec009-5b6f-464a-a21e-5d58a6936504\ncaps.latest.revision: 9\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Error C3710\n'function': improper syntax for specifying event handler in __hook/\\__unhook  \n  \n When you specify an event handler with [__hook](../../cpp/hook.md) or [__unhook](../../cpp/unhook.md), the handler must be a valid method.  \n  \n## Example  \n The following sample generates C3710  \n  \n```  \n// C3710.cpp  \n// compile with: /link /opt:noref  \n#include <atlbase.h>  \n#include <atlcom.h>  \n#include <atlctl.h>  \n#include <stdio.h>  \n  \n[event_source(native)]  \nclass CEventSrc  \n{  \npublic:  \n    __event void event1();  \n};  \n  \n[event_receiver(native)]  \nclass CEventRec  \n{  \npublic:  \n    void handler1()  \n    {  \n        printf_s(\"Executing handler1().\\n\");  \n    }  \n  \n    void HookEvents(CEventSrc* pSrc)   \n    {  \n        __hook(&CEventSrc::event1, pSrc, 0);   // C3710  \n        // try the following line instead  \n        // __hook(&CEventSrc::event1, pSrc, &CEventRec::handler1);  \n    }  \n  \n    void UnhookEvents(CEventSrc* pSrc)  \n    {  \n        __unhook(&CEventSrc::event1, pSrc, &CEventRec::handler1);  \n    }  \n};  \n  \nint main()  \n{  \n    CEventSrc eventSrc;  \n    CEventRec eventRec;  \n    eventRec.HookEvents(&eventSrc);  \n    eventSrc.event1();  \n    eventRec.UnhookEvents(&eventSrc);  \n}  \n```"}