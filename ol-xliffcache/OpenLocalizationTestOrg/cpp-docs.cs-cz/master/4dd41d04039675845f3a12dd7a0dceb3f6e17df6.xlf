<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4dd41d04039675845f3a12dd7a0dceb3f6e17df6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\automation-clients-using-type-libraries.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9c3c6276b1b783d6ff3cd3e7d56aed5155a27cdf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">96a6997d18238ee9ffc2dd92149e8189128acd6c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Automation Clients: Using Type Libraries | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Automation Clients: Using Type Libraries</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Automation clients must have information about server objects' properties and methods if the clients are to manipulate the servers' objects.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Properties have data types; methods often return values and accept parameters.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The client requires information about the data types of all of these in order to statically bind to the server object type.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This type information can be made known in several ways.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The recommended way is to create a type library.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For information on <bpt id="p1">[</bpt>MkTypLib<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa366797)</ept>, see the <ph id="ph1">[!INCLUDE[winSDK](../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Visual C++ can read a type-library file and create a dispatch class derived from <bpt id="p1">[</bpt>COleDispatchDriver<ept id="p1">](../mfc/reference/coledispatchdriver-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>An object of that class has properties and operations duplicating those of the server object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Your application calls this object's properties and operations, and functionality inherited from <ph id="ph1">`COleDispatchDriver`</ph> routes these calls to the OLE system, which in turn routes them to the server object.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Visual C++ automatically maintains this type-library file for you if you chose to include Automation when the project was created.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>As part of each build, the .tlb file will be built with MkTypLib.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To create a dispatch class from a type-library (.tlb) file</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In either Class View or Solution Explorer, right-click the project and click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> and then click <bpt id="p2">**</bpt>Add Class<ept id="p2">**</ept> on the shortcut menu.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Add Class<ept id="p1">**</ept> dialog box, select the <bpt id="p2">**</bpt>Visual C++/MFC<ept id="p2">**</ept> folder in the left pane.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>MFC Class From TypeLib<ept id="p1">**</ept> icon from the right pane and click <bpt id="p2">**</bpt>Open<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Add Class From Typelib Wizard<ept id="p1">**</ept> dialog box, select a type library from the <bpt id="p2">**</bpt>Available type libraries<ept id="p2">**</ept> drop-down list.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Interfaces<ept id="p1">**</ept> box displays the interfaces available for the selected type library.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can select interfaces from more than one type library.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To select interfaces, double-click them or click the <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> button.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When you do so, names for the dispatch classes will appear in the <bpt id="p1">**</bpt>Generated classes<ept id="p1">**</ept> box.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can edit the class names in the <ph id="ph1">`Class`</ph> box.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>File<ept id="p1">**</ept> box displays the file in which the class will be declared.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>(you can edit this file name as well).</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can also use the browse button to select other files, if you prefer to have the header and implementation information written in existing files or in a directory other than the project directory.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>All the dispatch classes for the selected interfaces will be put into the file specified here.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If you want the interfaces to be declared in separate headers, you must run this wizard for each header file you want to create.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Some type library information may be stored in files with .DLL, .OCX, or .OLB file extensions.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Finish<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The wizard will then write the code for your dispatch classes using the specified class and file names.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Automation Clients</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>