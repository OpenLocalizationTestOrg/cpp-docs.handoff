{"nodes":[{"pos":[12,50],"content":"asinh, asinhf, asinhl | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"asinh, asinhf, asinhl | Microsoft Docs","pos":[0,38]}]},{"pos":[999,1020],"content":"asinh, asinhf, asinhl","linkify":"asinh, asinhf, asinhl","nodes":[{"content":"asinh, asinhf, asinhl","pos":[0,21]}]},{"content":"Calculates the inverse hyperbolic sine.","pos":[1021,1060]},{"pos":[1069,1075],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1323,1333],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Floating-point value.","pos":[1344,1365]},{"pos":[1374,1386],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The <ph id=\"ph1\">`asinh`</ph> functions return the inverse hyberbolic sine (arc hyperbolic sine) of <ph id=\"ph2\">`x`</ph>.","pos":[1390,1476],"source":"The `asinh` functions return the inverse hyberbolic sine (arc hyperbolic sine) of `x`."},{"content":"This function is valid over the floating-point domain.","pos":[1477,1531]},{"content":"If <ph id=\"ph1\">`x`</ph> is a quiet NaN, indefinite, or infinity, the same value is returned.","pos":[1532,1607],"source":" If `x` is a quiet NaN, indefinite, or infinity, the same value is returned."},{"content":"Input","pos":[1614,1619]},{"content":"SEH Exception","pos":[1620,1633]},{"pos":[1634,1654],"content":"<ph id=\"ph1\">`_matherr`</ph> Exception","source":"`_matherr` Exception"},{"content":"± QNAN, IND, INF","pos":[1722,1738]},{"content":"none","pos":[1739,1743]},{"content":"none","pos":[1744,1748]},{"pos":[1758,1765],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When you use C++, you can call overloads of <ph id=\"ph1\">`asinh`</ph> that take and return <ph id=\"ph2\">`float`</ph> or <ph id=\"ph3\">`long double`</ph> values.","pos":[1769,1874],"source":"When you use C++, you can call overloads of `asinh` that take and return `float` or `long double` values."},{"content":"In a C program, <ph id=\"ph1\">`asinh`</ph> always takes and returns <ph id=\"ph2\">`double`</ph>.","pos":[1875,1933],"source":" In a C program, `asinh` always takes and returns `double`."},{"pos":[1942,1954],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Function","pos":[1961,1969]},{"content":"C header","pos":[1970,1978]},{"content":"C++ header","pos":[1979,1989]},{"pos":[2047,2074],"content":"<ph id=\"ph1\">`asinh`</ph>, <ph id=\"ph2\">`asinhf`</ph>, <ph id=\"ph3\">`asinhl`</ph>","source":"`asinh`, `asinhf`, `asinhl`"},{"content":"<ph id=\"ph1\">\\&lt;</ph>math.h&gt;","pos":[2075,2084],"source":"\\<math.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>cmath&gt;","pos":[2085,2093],"source":"\\<cmath>"},{"pos":[2101,2205],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[2214,2221],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2752,2777],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"content":"Not applicable.","pos":[2781,2796]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[2797,2844],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[2845,2970],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"pos":[2979,2987],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Floating-Point Support<ept id=\"p1\">](../../c-runtime-library/floating-point-support.md)</ept><ph id=\"ph1\"> </ph>","pos":[2991,3067],"source":"[Floating-Point Support](../../c-runtime-library/floating-point-support.md) "},{"content":"<bpt id=\"p1\"> [</bpt>cos, cosf, cosl, cosh, coshf, coshl<ept id=\"p1\">](../../c-runtime-library/reference/cos-cosf-cosl-cosh-coshf-coshl.md)</ept><ph id=\"ph1\"> </ph>","pos":[3070,3178],"source":" [cos, cosf, cosl, cosh, coshf, coshl](../../c-runtime-library/reference/cos-cosf-cosl-cosh-coshf-coshl.md) "},{"content":"<bpt id=\"p1\"> [</bpt>acosh, acoshf, acoshl<ept id=\"p1\">](../../c-runtime-library/reference/acosh-acoshf-acoshl.md)</ept><ph id=\"ph1\"> </ph>","pos":[3181,3264],"source":" [acosh, acoshf, acoshl](../../c-runtime-library/reference/acosh-acoshf-acoshl.md) "},{"content":"<bpt id=\"p1\"> [</bpt>sin, sinf, sinl, sinh, sinhf, sinhl<ept id=\"p1\">](../../c-runtime-library/reference/sin-sinf-sinl-sinh-sinhf-sinhl.md)</ept><ph id=\"ph1\"> </ph>","pos":[3267,3375],"source":" [sin, sinf, sinl, sinh, sinhf, sinhl](../../c-runtime-library/reference/sin-sinf-sinl-sinh-sinhf-sinhl.md) "},{"content":"<bpt id=\"p1\"> [</bpt>tan, tanf, tanl, tanh, tanhf, tanhl<ept id=\"p1\">](../../c-runtime-library/reference/tan-tanf-tanl-tanh-tanhf-tanhl.md)</ept><ph id=\"ph1\"> </ph>","pos":[3378,3486],"source":" [tan, tanf, tanl, tanh, tanhf, tanhl](../../c-runtime-library/reference/tan-tanf-tanl-tanh-tanhf-tanhl.md) "},{"content":"<bpt id=\"p1\"> [</bpt>atanh, atanhf, atanhl<ept id=\"p1\">](../../c-runtime-library/reference/atanh-atanhf-atanhl.md)</ept><ph id=\"ph1\"> </ph>","pos":[3489,3572],"source":" [atanh, atanhf, atanhl](../../c-runtime-library/reference/atanh-atanhf-atanhl.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_CItan<ept id=\"p1\">](../../c-runtime-library/citan.md)</ept>","pos":[3575,3618],"source":" [_CItan](../../c-runtime-library/citan.md)"}],"content":"---\ntitle: \"asinh, asinhf, asinhl | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"asinh\"\n  - \"asinhf\"\n  - \"asinhl\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-math-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"asinhf\"\n  - \"asinhl\"\n  - \"asinh\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"asinh function\"\n  - \"asinhl function\"\n  - \"asinhf function\"\nms.assetid: 4488babe-1a7e-44ca-8b7b-c2db0a70084f\ncaps.latest.revision: 7\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# asinh, asinhf, asinhl\nCalculates the inverse hyperbolic sine.  \n  \n## Syntax  \n  \n```  \ndouble asinh(  \n   double x   \n);  \nfloat asinh(  \n   float x   \n);  // C++ only  \nlong double asinh(  \n   long double x  \n);  // C++ only  \nfloat asinhf(  \n   float x   \n);  \nlong double asinhl(  \n   long double x  \n);  \n```  \n  \n#### Parameters  \n `x`  \n Floating-point value.  \n  \n## Return Value  \n The `asinh` functions return the inverse hyberbolic sine (arc hyperbolic sine) of `x`. This function is valid over the floating-point domain. If `x` is a quiet NaN, indefinite, or infinity, the same value is returned.  \n  \n|Input|SEH Exception|`_matherr` Exception|  \n|-----------|-------------------|--------------------------|  \n|± QNAN, IND, INF|none|none|  \n  \n## Remarks  \n When you use C++, you can call overloads of `asinh` that take and return `float` or `long double` values. In a C program, `asinh` always takes and returns `double`.  \n  \n## Requirements  \n  \n|Function|C header|C++ header|  \n|--------------|--------------|------------------|  \n|`asinh`, `asinhf`, `asinhl`|\\<math.h>|\\<cmath>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```c  \n// crt_asinh.c  \n// Compile by using: cl /W4 crt_asinh.c  \n// This program displays the hyperbolic sine of pi / 4  \n// and the arc hyperbolic sine of the result.  \n  \n#include <math.h>  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n   double pi = 3.1415926535;  \n   double x, y;  \n  \n   x = sinh( pi / 4 );  \n   y = asinh( x );  \n   printf( \"sinh( %f ) = %f\\n\", pi/4, x );  \n   printf( \"asinh( %f ) = %f\\n\", x, y );  \n}  \n```  \n  \n```Output  \nsinh( 0.785398 ) = 0.868671  \nasinh( 0.868671 ) = 0.785398  \n```  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [Floating-Point Support](../../c-runtime-library/floating-point-support.md)   \n [cos, cosf, cosl, cosh, coshf, coshl](../../c-runtime-library/reference/cos-cosf-cosl-cosh-coshf-coshl.md)   \n [acosh, acoshf, acoshl](../../c-runtime-library/reference/acosh-acoshf-acoshl.md)   \n [sin, sinf, sinl, sinh, sinhf, sinhl](../../c-runtime-library/reference/sin-sinf-sinl-sinh-sinhf-sinhl.md)   \n [tan, tanf, tanl, tanh, tanhf, tanhl](../../c-runtime-library/reference/tan-tanf-tanl-tanh-tanhf-tanhl.md)   \n [atanh, atanhf, atanhl](../../c-runtime-library/reference/atanh-atanhf-atanhl.md)   \n [_CItan](../../c-runtime-library/citan.md)"}