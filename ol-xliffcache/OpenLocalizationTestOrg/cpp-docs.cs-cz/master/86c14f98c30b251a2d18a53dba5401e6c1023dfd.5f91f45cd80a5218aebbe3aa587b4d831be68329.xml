{"nodes":[{"pos":[12,64],"content":"Setting Properties in Your Provider | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Setting Properties in Your Provider | Microsoft Docs","pos":[0,52]}]},{"content":"Setting Properties in Your Provider","pos":[641,676]},{"content":"Find the property group and property ID for the property you want.","pos":[677,743]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>OLE DB Properties<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/ms722734.aspx)</ept> in the <bpt id=\"p2\">*</bpt>OLE DB Programmer's Reference<ept id=\"p2\">*</ept>.","pos":[744,885],"source":" For more information, see [OLE DB Properties](https://msdn.microsoft.com/en-us/library/ms722734.aspx) in the *OLE DB Programmer's Reference*."},{"content":"In the provider code generated by the wizard, find the property map corresponding to the property group.","pos":[892,996]},{"content":"The name of the property group usually corresponds to the name of the object.","pos":[997,1074]},{"content":"Command and rowset properties can be found in the command or rowset; data source and initialization properties can be found in the data source object.","pos":[1075,1225]},{"content":"In the property map, add a <bpt id=\"p1\">[</bpt>PROPERTY_INFO_ENTRY_EX<ept id=\"p1\">](../../data/oledb/property-info-entry-ex.md)</ept> macro.","pos":[1232,1334],"source":"In the property map, add a [PROPERTY_INFO_ENTRY_EX](../../data/oledb/property-info-entry-ex.md) macro."},{"content":"PROPERTY_INFO_ENTRY_EX takes four parameters:","pos":[1335,1380]},{"content":"The property ID corresponding to your property.","pos":[1390,1437]},{"content":"You must remove the first seven characters (\"DBPROP_\") from the front of the property name.","pos":[1438,1529]},{"content":"For example, if you want to add <bpt id=\"p1\">**</bpt>DBPROP_MAXROWS<ept id=\"p1\">**</ept>, pass <ph id=\"ph1\">`MAXROWS`</ph> as the first element.","pos":[1530,1618],"source":" For example, if you want to add **DBPROP_MAXROWS**, pass `MAXROWS` as the first element."},{"content":"If this is a custom property, pass the full GUID name (for example, <ph id=\"ph1\">`DBMYPROP_MYPROPERTY`</ph>).","pos":[1619,1710],"source":" If this is a custom property, pass the full GUID name (for example, `DBMYPROP_MYPROPERTY`)."},{"content":"The variant type of the property (in <bpt id=\"p1\">[</bpt>OLE DB Properties<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/ms722734.aspx)</ept> in the <bpt id=\"p2\">*</bpt>OLE DB Programmer's Reference<ept id=\"p2\">*</ept>).","pos":[1720,1873],"source":"The variant type of the property (in [OLE DB Properties](https://msdn.microsoft.com/en-us/library/ms722734.aspx) in the *OLE DB Programmer's Reference*)."},{"content":"Enter the <bpt id=\"p1\">**</bpt>VT_<ept id=\"p1\">**</ept> type (such as <ph id=\"ph1\">`VT_BOOL`</ph> or <ph id=\"ph2\">`VT_I2`</ph>) corresponding to the data type.","pos":[1874,1959],"source":" Enter the **VT_** type (such as `VT_BOOL` or `VT_I2`) corresponding to the data type."},{"content":"Flags to indicate whether the property is readable and writable and the group to which it belongs.","pos":[1969,2067]},{"content":"For example, the following code indicates a read/write property belonging to the rowset group:","pos":[2068,2162]},{"content":"The base value of the property.","pos":[2259,2290]},{"content":"This might be <bpt id=\"p1\">**</bpt>VARIANT_FALSE<ept id=\"p1\">**</ept> for a Boolean type or zero for an integer type, for example.","pos":[2291,2383],"source":" This might be **VARIANT_FALSE** for a Boolean type or zero for an integer type, for example."},{"content":"The property has this value unless it is changed.","pos":[2384,2433]},{"pos":[2445,2774],"content":"[!NOTE]\n Some properties are connected or chained to other properties, such as bookmarks or updating. When a consumer sets one property to true, another property might also be set. The OLE DB provider templates support this through the method [CUtlProps::OnPropertyChanged](../../data/oledb/cutlprops-onpropertychanged.md).","leadings":["","    > "],"nodes":[{"content":" Some properties are connected or chained to other properties, such as bookmarks or updating. When a consumer sets one property to true, another property might also be set. The OLE DB provider templates support this through the method [CUtlProps::OnPropertyChanged](../../data/oledb/cutlprops-onpropertychanged.md).","pos":[8,323],"nodes":[{"content":"Some properties are connected or chained to other properties, such as bookmarks or updating.","pos":[1,93]},{"content":"When a consumer sets one property to true, another property might also be set.","pos":[94,172]},{"content":"The OLE DB provider templates support this through the method <bpt id=\"p1\">[</bpt>CUtlProps::OnPropertyChanged<ept id=\"p1\">](../../data/oledb/cutlprops-onpropertychanged.md)</ept>.","pos":[173,315],"source":" The OLE DB provider templates support this through the method [CUtlProps::OnPropertyChanged](../../data/oledb/cutlprops-onpropertychanged.md)."}]}]},{"content":"Properties Ignored by Microsoft OLE DB Providers","pos":[2783,2831]},{"content":"The Microsoft OLE DB Providers ignore the following OLE DB properties:","pos":[2835,2905]},{"pos":[2915,3084],"content":"<bpt id=\"p1\">**</bpt>DBPROP_MAXROWS<ept id=\"p1\">**</ept> only works for read-only providers (that is, where DBPROP_IRowsetChange and DBPROP_IRowsetUpdate are false); otherwise this property is not supported.","source":"**DBPROP_MAXROWS** only works for read-only providers (that is, where DBPROP_IRowsetChange and DBPROP_IRowsetUpdate are false); otherwise this property is not supported."},{"pos":[3094,3169],"content":"<bpt id=\"p1\">**</bpt>DBPROP_MAXPENDINGROWS<ept id=\"p1\">**</ept> is ignored; the provider specifies its own limit.","source":"**DBPROP_MAXPENDINGROWS** is ignored; the provider specifies its own limit."},{"pos":[3179,3251],"content":"<bpt id=\"p1\">**</bpt>DBPROP_MAXOPENROWS<ept id=\"p1\">**</ept> is ignored; the provider specifies its own limit.","source":"**DBPROP_MAXOPENROWS** is ignored; the provider specifies its own limit."},{"pos":[3261,3333],"content":"<bpt id=\"p1\">**</bpt>DBPROP_CANHOLDROWS<ept id=\"p1\">**</ept> is ignored; the provider specifies its own limit.","source":"**DBPROP_CANHOLDROWS** is ignored; the provider specifies its own limit."},{"content":"See Also","pos":[3342,3350]},{"content":"Working with OLE DB Provider Templates","pos":[3355,3393]}],"content":"---\ntitle: \"Setting Properties in Your Provider | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"OLE DB providers, properties\"\n  - \"properties [C++], OLE DB provider\"\nms.assetid: 26a8b493-7ec4-4686-96d0-9ad5d2bca5ac\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Setting Properties in Your Provider\nFind the property group and property ID for the property you want. For more information, see [OLE DB Properties](https://msdn.microsoft.com/en-us/library/ms722734.aspx) in the *OLE DB Programmer's Reference*.  \n  \n In the provider code generated by the wizard, find the property map corresponding to the property group. The name of the property group usually corresponds to the name of the object. Command and rowset properties can be found in the command or rowset; data source and initialization properties can be found in the data source object.  \n  \n In the property map, add a [PROPERTY_INFO_ENTRY_EX](../../data/oledb/property-info-entry-ex.md) macro. PROPERTY_INFO_ENTRY_EX takes four parameters:  \n  \n-   The property ID corresponding to your property. You must remove the first seven characters (\"DBPROP_\") from the front of the property name. For example, if you want to add **DBPROP_MAXROWS**, pass `MAXROWS` as the first element. If this is a custom property, pass the full GUID name (for example, `DBMYPROP_MYPROPERTY`).  \n  \n-   The variant type of the property (in [OLE DB Properties](https://msdn.microsoft.com/en-us/library/ms722734.aspx) in the *OLE DB Programmer's Reference*). Enter the **VT_** type (such as `VT_BOOL` or `VT_I2`) corresponding to the data type.  \n  \n-   Flags to indicate whether the property is readable and writable and the group to which it belongs. For example, the following code indicates a read/write property belonging to the rowset group:  \n  \n    ```  \n    DBPROPFLAGS_ROWSET | DBPROPFLAGS_READ | DBPROPFLAGS_WRITE  \n    ```  \n  \n-   The base value of the property. This might be **VARIANT_FALSE** for a Boolean type or zero for an integer type, for example. The property has this value unless it is changed.  \n  \n    > [!NOTE]\n    >  Some properties are connected or chained to other properties, such as bookmarks or updating. When a consumer sets one property to true, another property might also be set. The OLE DB provider templates support this through the method [CUtlProps::OnPropertyChanged](../../data/oledb/cutlprops-onpropertychanged.md).  \n  \n## Properties Ignored by Microsoft OLE DB Providers  \n The Microsoft OLE DB Providers ignore the following OLE DB properties:  \n  \n-   **DBPROP_MAXROWS** only works for read-only providers (that is, where DBPROP_IRowsetChange and DBPROP_IRowsetUpdate are false); otherwise this property is not supported.  \n  \n-   **DBPROP_MAXPENDINGROWS** is ignored; the provider specifies its own limit.  \n  \n-   **DBPROP_MAXOPENROWS** is ignored; the provider specifies its own limit.  \n  \n-   **DBPROP_CANHOLDROWS** is ignored; the provider specifies its own limit.  \n  \n## See Also  \n [Working with OLE DB Provider Templates](../../data/oledb/working-with-ole-db-provider-templates.md)"}