{"nodes":[{"pos":[12,49],"content":"CMFCRibbonEdit Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CMFCRibbonEdit Class | Microsoft Docs","pos":[0,37]}]},{"content":"CMFCRibbonEdit Class","pos":[616,636]},{"content":"Implements an edit control that is located on a ribbon bar.","pos":[637,696]},{"content":"Syntax","pos":[705,711]},{"content":"Members","pos":[784,791]},{"content":"Public Constructors","pos":[801,820]},{"content":"Name","pos":[827,831]},{"content":"Description","pos":[832,843]},{"content":"CMFCRibbonEdit::CMFCRibbonEdit","pos":[882,912]},{"pos":[947,984],"content":"Constructs a <ph id=\"ph1\">`CMFCRibbonEdit`</ph> object.","source":"Constructs a `CMFCRibbonEdit` object."},{"content":"Public Methods","pos":[995,1009]},{"content":"Name","pos":[1016,1020]},{"content":"Description","pos":[1021,1032]},{"content":"CMFCRibbonEdit::CanBeStretched","pos":[1071,1101]},{"pos":[1136,1251],"content":"Indicates whether the height of the <ph id=\"ph1\">`CMFCRibbonEdit`</ph> control can increase vertically to the height of a ribbon row.","source":"Indicates whether the height of the `CMFCRibbonEdit` control can increase vertically to the height of a ribbon row."},{"content":"CMFCRibbonEdit::CMFCRibbonEdit","pos":[1257,1287]},{"pos":[1322,1359],"content":"Constructs a <ph id=\"ph1\">`CMFCRibbonEdit`</ph> object.","source":"Constructs a `CMFCRibbonEdit` object."},{"content":"CMFCRibbonEdit::CopyFrom","pos":[1365,1389]},{"pos":[1418,1515],"content":"Copies the state of the specified <ph id=\"ph1\">`CMFCRibbonEdit`</ph> object to the current <ph id=\"ph2\">`CMFCRibbonEdit`</ph> object.","source":"Copies the state of the specified `CMFCRibbonEdit` object to the current `CMFCRibbonEdit` object."},{"content":"CMFCRibbonEdit::CreateEdit","pos":[1521,1547]},{"pos":[1578,1633],"content":"Creates a new text box for the <ph id=\"ph1\">`CMFCRibbonEdit`</ph> object.","source":"Creates a new text box for the `CMFCRibbonEdit` object."},{"content":"CMFCRibbonEdit::DestroyCtrl","pos":[1639,1666]},{"pos":[1698,1735],"content":"Destroys the <ph id=\"ph1\">`CMFCRibbonEdit`</ph> object.","source":"Destroys the `CMFCRibbonEdit` object."},{"content":"CMFCRibbonEdit::DropDownList","pos":[1741,1769]},{"content":"Drops down a list box.","pos":[1802,1824]},{"content":"CMFCRibbonEdit::EnableSpinButtons","pos":[1830,1863]},{"content":"Enables and sets the range of the spin button for the text box.","pos":[1901,1964]},{"content":"CMFCRibbonEdit::GetCompactSize","pos":[1970,2000]},{"pos":[2035,2093],"content":"Retrieves the compact size of the <ph id=\"ph1\">`CFMCRibbonEdit`</ph> object.","source":"Retrieves the compact size of the `CFMCRibbonEdit` object."},{"content":"CMFCRibbonEdit::GetEditText","pos":[2099,2126]},{"content":"Retrieves the text in the text box.","pos":[2158,2193]},{"content":"CMFCRibbonEdit::GetIntermediateSize","pos":[2199,2234]},{"pos":[2274,2337],"content":"Retrieves the intermediate size of the <ph id=\"ph1\">`CMFCRibbonEdit`</ph> object.","source":"Retrieves the intermediate size of the `CMFCRibbonEdit` object."},{"content":"CMFCRibbonEdit::GetTextAlign","pos":[2343,2371]},{"content":"Retrieves the alignment of the text in the text box.","pos":[2404,2456]},{"content":"CMFCRibbonEdit::GetWidth","pos":[2462,2486]},{"pos":[2515,2579],"content":"Retrieves the width, in pixels, of the <ph id=\"ph1\">`CMFCRibbonEdit`</ph> control.","source":"Retrieves the width, in pixels, of the `CMFCRibbonEdit` control."},{"content":"CMFCRibbonEdit::HasCompactMode","pos":[2585,2615]},{"pos":[2650,2733],"content":"Indicates whether the display size for the <ph id=\"ph1\">`CMFCRibbonEdit`</ph> control can be compact.","source":"Indicates whether the display size for the `CMFCRibbonEdit` control can be compact."},{"content":"CMFCRibbonEdit::HasFocus","pos":[2739,2763]},{"pos":[2792,2853],"content":"Indicates whether the <ph id=\"ph1\">`CMFCRIbbonEdit`</ph> control has the focus.","source":"Indicates whether the `CMFCRIbbonEdit` control has the focus."},{"content":"CMFCRibbonEdit::HasLargeMode","pos":[2859,2887]},{"pos":[2920,3001],"content":"Indicates whether the display size for the <ph id=\"ph1\">`CMFCRibbonEdit`</ph> control can be large.","source":"Indicates whether the display size for the `CMFCRibbonEdit` control can be large."},{"content":"CMFCRibbonEdit::HasSpinButtons","pos":[3007,3037]},{"content":"Indicates whether the text box has a spin button.","pos":[3072,3121]},{"content":"CMFCRibbonEdit::IsHighlighted","pos":[3127,3156]},{"pos":[3190,3252],"content":"Indicates whether the <ph id=\"ph1\">`CMFCRibbonEdit`</ph> control is highlighted.","source":"Indicates whether the `CMFCRibbonEdit` control is highlighted."},{"content":"CMFCRibbonEdit::OnAfterChangeRect","pos":[3258,3291]},{"pos":[3329,3439],"content":"Called by the framework when the dimensions of the display rectangle for the <ph id=\"ph1\">`CMFCRibbonEdit`</ph> control changes.","source":"Called by the framework when the dimensions of the display rectangle for the `CMFCRibbonEdit` control changes."},{"content":"CMFCRibbonEdit::OnDraw","pos":[3445,3467]},{"pos":[3494,3555],"content":"Called by the framework to draw the <ph id=\"ph1\">`CMFCRibbonEdit`</ph> control.","source":"Called by the framework to draw the `CMFCRibbonEdit` control."},{"content":"CMFCRibbonEdit::OnDrawLabelAndImage","pos":[3561,3596]},{"pos":[3636,3721],"content":"Called by the framework to draw the label and image for the <ph id=\"ph1\">`CMFCRibbonEdit`</ph> control.","source":"Called by the framework to draw the label and image for the `CMFCRibbonEdit` control."},{"content":"CMFCRibbonEdit::OnDrawOnList","pos":[3727,3755]},{"pos":[3788,3872],"content":"Called by the framework to draw the <ph id=\"ph1\">`CMFCRibbonEdit`</ph> control in a commands list box.","source":"Called by the framework to draw the `CMFCRibbonEdit` control in a commands list box."},{"content":"CMFCRibbonEdit::OnEnable","pos":[3878,3902]},{"pos":[3931,4005],"content":"Called by the framework to enable or disable the <ph id=\"ph1\">`CMFCRibbonEdit`</ph> control.","source":"Called by the framework to enable or disable the `CMFCRibbonEdit` control."},{"content":"CMFCRibbonEdit::OnHighlight","pos":[4011,4038]},{"pos":[4070,4171],"content":"Called by the framework when the pointer enters or leaves the bounds of the <ph id=\"ph1\">`CMFCRibbonEdit`</ph> control.","source":"Called by the framework when the pointer enters or leaves the bounds of the `CMFCRibbonEdit` control."},{"content":"CMFCRibbonEdit::OnKey","pos":[4177,4198]},{"pos":[4224,4326],"content":"Called by the framework when the user presses a keytip and the <ph id=\"ph1\">`CMFCRibbonEdit`</ph> control has the focus.","source":"Called by the framework when the user presses a keytip and the `CMFCRibbonEdit` control has the focus."},{"content":"CMFCRibbonEdit::OnLButtonDown","pos":[4332,4361]},{"pos":[4395,4517],"content":"Called by the framework to update the <ph id=\"ph1\">`CMFCRibbonEdit`</ph> control when the user presses the left mouse button on the control.","source":"Called by the framework to update the `CMFCRibbonEdit` control when the user presses the left mouse button on the control."},{"content":"CMFCRibbonEdit::OnLButtonUp","pos":[4523,4550]},{"content":"Called by the framework when the user releases the left mouse button.","pos":[4582,4651]},{"content":"CMFCRibbonEdit::OnRTLChanged","pos":[4657,4685]},{"pos":[4718,4815],"content":"Called by the framework to update the <ph id=\"ph1\">`CMFCRibbonEdit`</ph> control when the layout changes direction.","source":"Called by the framework to update the `CMFCRibbonEdit` control when the layout changes direction."},{"content":"CMFCRibbonEdit::OnShow","pos":[4821,4843]},{"pos":[4870,4939],"content":"Called by the framework to show or hide the <ph id=\"ph1\">`CMFCRibbonEdit`</ph> control.","source":"Called by the framework to show or hide the `CMFCRibbonEdit` control."},{"content":"CMFCRibbonEdit::Redraw","pos":[4945,4967]},{"pos":[4994,5046],"content":"Updates the display of the <ph id=\"ph1\">`CMFCRibbonEdit`</ph> control.","source":"Updates the display of the `CMFCRibbonEdit` control."},{"content":"CMFCRibbonEdit::SetACCData","pos":[5052,5078]},{"pos":[5109,5169],"content":"Sets the accessibility data for the <ph id=\"ph1\">`CMFCRibbonEdit`</ph> object.","source":"Sets the accessibility data for the `CMFCRibbonEdit` object."},{"content":"CMFCRibbonEdit::SetEditText","pos":[5175,5202]},{"content":"Sets the text in the text box.","pos":[5234,5264]},{"content":"CMFCRibbonEdit::SetTextAlign","pos":[5270,5298]},{"content":"Sets the text alignment of the text box.","pos":[5331,5371]},{"content":"CMFCRibbonEdit::SetWidth","pos":[5377,5401]},{"pos":[5430,5494],"content":"Sets the width of the text box for the <ph id=\"ph1\">`CMFCRibbonEdit`</ph> control.","source":"Sets the width of the text box for the `CMFCRibbonEdit` control."},{"content":"Remarks","pos":[5504,5511]},{"content":"Example","pos":[5520,5527]},{"content":"The following example demonstrates how to construct a <ph id=\"ph1\">`CMFCRibbonEdit`</ph> object, show spin buttons next to the edit control, and set the text of the edit control.","pos":[5531,5691],"source":"The following example demonstrates how to construct a `CMFCRibbonEdit` object, show spin buttons next to the edit control, and set the text of the edit control."},{"content":"This code snippet is part of the <bpt id=\"p1\">[</bpt>MS Office 2007 Demo sample<ept id=\"p1\">](../../visual-cpp-samples.md)</ept>.","pos":[5692,5783],"source":" This code snippet is part of the [MS Office 2007 Demo sample](../../visual-cpp-samples.md)."},{"pos":[5801,5827],"content":"NVC_MFC_MSOffice2007Demo#7"},{"content":"Requirements","pos":[5902,5914]},{"pos":[5918,5945],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxRibbonEdit.h","source":"**Header:** afxRibbonEdit.h"},{"pos":[6002,6032],"content":"CMFCRibbonEdit::CanBeStretched"},{"pos":[6036,6196],"content":"Indicates whether the height of the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control can increase vertically to the height of a ribbon row.","source":"Indicates whether the height of the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control can increase vertically to the height of a ribbon row."},{"content":"Return Value","pos":[6252,6264]},{"pos":[6268,6291],"content":"Always returns <ph id=\"ph1\">`FALSE`</ph>.","source":"Always returns `FALSE`."},{"content":"Remarks","pos":[6301,6308]},{"pos":[6365,6395],"content":"CMFCRibbonEdit::CMFCRibbonEdit"},{"pos":[6399,6481],"content":"Constructs a <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> object.","source":"Constructs a [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object."},{"content":"Parameters","pos":[6629,6639]},{"content":"[in]","pos":[6643,6647]},{"content":"Command ID for the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control.","pos":[6657,6746],"source":" Command ID for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control."},{"content":"[in]","pos":[6753,6757]},{"content":"The width, in pixels, of the text box for the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control.","pos":[6770,6886],"source":" The width, in pixels, of the text box for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control."},{"content":"[in]","pos":[6893,6897]},{"content":"The label for the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control.","pos":[6913,7001],"source":" The label for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control."},{"content":"[in]","pos":[7008,7012]},{"content":"Index of the small image to use for the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control.","pos":[7025,7135],"source":" Index of the small image to use for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control."},{"content":"The collection of small images is maintained by the parent ribbon category.","pos":[7136,7211]},{"content":"Remarks","pos":[7221,7228]},{"pos":[7232,7333],"content":"The <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control does not use a large image.","source":"The [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control does not use a large image."},{"pos":[7384,7408],"content":"CMFCRibbonEdit::CopyFrom"},{"pos":[7412,7599],"content":"Copies the state of the specified <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> object to the current <bpt id=\"p2\">[</bpt>CMFCRibbonEdit<ept id=\"p2\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> object.","source":"Copies the state of the specified [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object to the current [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object."},{"content":"Parameters","pos":[7681,7691]},{"content":"[in]","pos":[7695,7699]},{"content":"The source <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> object.","pos":[7709,7789],"source":" The source [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object."},{"content":"Remarks","pos":[7799,7806]},{"pos":[7810,7908],"content":"The <ph id=\"ph1\">`src`</ph> parameter must be of type <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept>.","source":"The `src` parameter must be of type [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md)."},{"pos":[7961,7987],"content":"CMFCRibbonEdit::CreateEdit"},{"pos":[7991,8091],"content":"Creates a new text box for the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> object.","source":"Creates a new text box for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object."},{"content":"Parameters","pos":[8208,8218]},{"content":"[in]","pos":[8222,8226]},{"content":"A pointer to the parent window of the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> object.","pos":[8243,8350],"source":" A pointer to the parent window of the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object."},{"content":"[in]","pos":[8357,8361]},{"content":"Specifies the style of the text box.","pos":[8379,8415]},{"content":"You can combine the window styles listed in the Remarks section with the <bpt id=\"p1\">[</bpt>edit control styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775464)</ept> that are described in the Windows SDK.","pos":[8416,8609],"source":" You can combine the window styles listed in the Remarks section with the [edit control styles](http://msdn.microsoft.com/library/windows/desktop/bb775464) that are described in the Windows SDK."},{"content":"Return Value","pos":[8619,8631]},{"pos":[8635,8713],"content":"A pointer to the new text box if the method was successful; otherwise, <ph id=\"ph1\">`NULL`</ph>.","source":"A pointer to the new text box if the method was successful; otherwise, `NULL`."},{"content":"Remarks","pos":[8723,8730]},{"content":"Override this method in a derived class to create a custom text box.","pos":[8734,8802]},{"pos":[8809,8905],"content":"You can apply the following <bpt id=\"p1\">[</bpt>Window Styles<ept id=\"p1\">](../../mfc/reference/window-styles.md)</ept> to a text box:","source":"You can apply the following [Window Styles](../../mfc/reference/window-styles.md) to a text box:"},{"content":"WS_CHILD","pos":[8915,8923]},{"content":"WS_VISIBLE","pos":[8935,8945]},{"content":"WS_DISABLED","pos":[8957,8968]},{"content":"WS_GROUP","pos":[8980,8988]},{"content":"WS_TABSTOP","pos":[9000,9010]},{"pos":[9066,9093],"content":"CMFCRibbonEdit::DestroyCtrl"},{"pos":[9097,9179],"content":"Destroys the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> object.","source":"Destroys the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object."},{"content":"Remarks","pos":[9232,9239]},{"pos":[9294,9322],"content":"CMFCRibbonEdit::DropDownList"},{"content":"Drops down a list box.","pos":[9326,9348]},{"content":"Remarks","pos":[9402,9409]},{"content":"By default this method does nothing.","pos":[9413,9449]},{"content":"Override this method to drop down a list box.","pos":[9450,9495]},{"pos":[9555,9588],"content":"CMFCRibbonEdit::EnableSpinButtons"},{"content":"Enables and sets the range of the spin button for the text box.","pos":[9592,9655]},{"content":"Parameters","pos":[9735,9745]},{"content":"[in]","pos":[9749,9753]},{"content":"The minimum value of the spin button.","pos":[9764,9801]},{"content":"[in]","pos":[9808,9812]},{"content":"The maximum value of the spin button.","pos":[9823,9860]},{"content":"Remarks","pos":[9870,9877]},{"content":"Spin buttons display an up and down arrow and enable users to move through a fixed set of values.","pos":[9881,9978]},{"pos":[10035,10065],"content":"CMFCRibbonEdit::GetCompactSize"},{"pos":[10069,10172],"content":"Retrieves the compact size of the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> object.","source":"Retrieves the compact size of the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object."},{"content":"Parameters","pos":[10237,10247]},{"content":"[in]","pos":[10251,10255]},{"content":"Pointer to a device context for the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> object.","pos":[10265,10370],"source":" Pointer to a device context for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object."},{"content":"Return Value","pos":[10380,10392]},{"pos":[10396,10489],"content":"The compact size of the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> object.","source":"The compact size of the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object."},{"content":"Remarks","pos":[10499,10506]},{"pos":[10560,10587],"content":"CMFCRibbonEdit::GetEditText"},{"content":"Retrieves the text in the text box.","pos":[10591,10626]},{"content":"Return Value","pos":[10683,10695]},{"content":"The text in the text box.","pos":[10699,10724]},{"content":"Remarks","pos":[10734,10741]},{"pos":[10803,10838],"content":"CMFCRibbonEdit::GetIntermediateSize"},{"pos":[10842,10950],"content":"Retrieves the intermediate size of the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> object.","source":"Retrieves the intermediate size of the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object."},{"content":"Parameters","pos":[11020,11030]},{"content":"[in]","pos":[11034,11038]},{"content":"Pointer to a device context for the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> object.","pos":[11048,11153],"source":" Pointer to a device context for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object."},{"content":"Return Value","pos":[11163,11175]},{"pos":[11179,11277],"content":"The intermediate size of the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> object.","source":"The intermediate size of the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object."},{"content":"Remarks","pos":[11287,11294]},{"pos":[11349,11377],"content":"CMFCRibbonEdit::GetTextAlign"},{"content":"Retrieves the alignment of the text in the text box.","pos":[11381,11433]},{"content":"Return Value","pos":[11487,11499]},{"content":"A text alignment enumerated value.","pos":[11503,11537]},{"content":"See the Remarks section for possible values.","pos":[11538,11582]},{"content":"Remarks","pos":[11592,11599]},{"content":"The returned value is one of the following edit control styles:","pos":[11603,11666]},{"pos":[11674,11704],"content":"<bpt id=\"p1\">**</bpt>ES_LEFT<ept id=\"p1\">**</ept> for left alignment","source":"**ES_LEFT** for left alignment"},{"pos":[11712,11746],"content":"<bpt id=\"p1\">**</bpt>ES_CENTER<ept id=\"p1\">**</ept> for center alignment","source":"**ES_CENTER** for center alignment"},{"pos":[11754,11786],"content":"<bpt id=\"p1\">**</bpt>ES_RIGHT<ept id=\"p1\">**</ept> for right alignment","source":"**ES_RIGHT** for right alignment"},{"pos":[11793,11920],"content":"For more information about these styles, see <bpt id=\"p1\">[</bpt>Edit Control Styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775464)</ept>.","source":"For more information about these styles, see [Edit Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb775464)."},{"pos":[11971,11995],"content":"CMFCRibbonEdit::GetWidth"},{"pos":[11999,12108],"content":"Retrieves the width, in pixels, of the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control.","source":"Retrieves the width, in pixels, of the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control."},{"content":"Parameters","pos":[12184,12194]},{"content":"[in]","pos":[12198,12202]},{"content":"if the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control is in floating mode; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","pos":[12229,12346],"source":" if the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control is in floating mode; otherwise, `FALSE`."},{"content":"Return Value","pos":[12356,12368]},{"pos":[12372,12471],"content":"The width, in pixels, of the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control.","source":"The width, in pixels, of the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control."},{"content":"Remarks","pos":[12481,12488]},{"pos":[12545,12575],"content":"CMFCRibbonEdit::HasCompactMode"},{"pos":[12579,12707],"content":"Indicates whether the display size for the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control can be compact.","source":"Indicates whether the display size for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control can be compact."},{"content":"Return Value","pos":[12772,12784]},{"pos":[12788,12810],"content":"Always returns <ph id=\"ph1\">`TRUE`</ph>.","source":"Always returns `TRUE`."},{"content":"Remarks","pos":[12820,12827]},{"content":"By default this method always returns <ph id=\"ph1\">`TRUE`</ph>.","pos":[12831,12876],"source":"By default this method always returns `TRUE`."},{"content":"Override this method to indicate whether the display size can be compact.","pos":[12877,12950]},{"pos":[13001,13025],"content":"CMFCRibbonEdit::HasFocus"},{"pos":[13029,13135],"content":"Indicates whether the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control has the focus.","source":"Indicates whether the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control has the focus."},{"content":"Return Value","pos":[13194,13206]},{"pos":[13217,13327],"content":"if the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control has the focus; otherwise <ph id=\"ph1\">`FALSE`</ph>.","source":" if the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control has the focus; otherwise `FALSE`."},{"content":"Remarks","pos":[13337,13344]},{"pos":[13399,13427],"content":"CMFCRibbonEdit::HasLargeMode"},{"pos":[13431,13557],"content":"Indicates whether the display size for the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control can be large.","source":"Indicates whether the display size for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control can be large."},{"content":"Return Value","pos":[13620,13632]},{"pos":[13636,13659],"content":"Always returns <ph id=\"ph1\">`FALSE`</ph>.","source":"Always returns `FALSE`."},{"content":"Remarks","pos":[13669,13676]},{"content":"By default this method always returns <ph id=\"ph1\">`FALSE`</ph>.","pos":[13680,13726],"source":"By default this method always returns `FALSE`."},{"content":"Override this method to indicate whether the display size can be large.","pos":[13727,13798]},{"pos":[13855,13885],"content":"CMFCRibbonEdit::HasSpinButtons"},{"content":"Indicates whether the text box has a spin button.","pos":[13889,13938]},{"content":"Return Value","pos":[14003,14015]},{"pos":[14026,14079],"content":"if the text box has a spin button; otherwise <ph id=\"ph1\">`FALSE`</ph>.","source":" if the text box has a spin button; otherwise `FALSE`."},{"content":"Remarks","pos":[14089,14096]},{"pos":[14152,14181],"content":"CMFCRibbonEdit::IsHighlighted"},{"pos":[14185,14292],"content":"Indicates whether the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control is highlighted.","source":"Indicates whether the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control is highlighted."},{"content":"Return Value","pos":[14356,14368]},{"pos":[14379,14490],"content":"if the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control is highlighted; otherwise <ph id=\"ph1\">`FALSE`</ph>.","source":" if the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control is highlighted; otherwise `FALSE`."},{"content":"Remarks","pos":[14500,14507]},{"pos":[14567,14600],"content":"CMFCRibbonEdit::OnAfterChangeRect"},{"pos":[14604,14758],"content":"Called by the framework when the dimensions of the display rectangle for the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control change.","source":"Called by the framework when the dimensions of the display rectangle for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control change."},{"content":"Parameters","pos":[14825,14835]},{"content":"[in]","pos":[14839,14843]},{"content":"Pointer to a device context for the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control.","pos":[14853,14959],"source":" Pointer to a device context for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control."},{"content":"Remarks","pos":[14969,14976]},{"pos":[15025,15047],"content":"CMFCRibbonEdit::OnDraw"},{"pos":[15051,15157],"content":"Called by the framework to draw the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control.","source":"Called by the framework to draw the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control."},{"content":"Parameters","pos":[15213,15223]},{"content":"[in]","pos":[15227,15231]},{"content":"Pointer to a device context for the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control.","pos":[15241,15347],"source":" Pointer to a device context for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control."},{"content":"Remarks","pos":[15357,15364]},{"pos":[15426,15461],"content":"CMFCRibbonEdit::OnDrawLabelAndImage"},{"pos":[15465,15595],"content":"Called by the framework to draw the label and image for the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control.","source":"Called by the framework to draw the label and image for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control."},{"content":"Parameters","pos":[15664,15674]},{"content":"[in]","pos":[15678,15682]},{"content":"Pointer to a device context for the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control.","pos":[15692,15798],"source":" Pointer to a device context for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control."},{"content":"Remarks","pos":[15808,15815]},{"pos":[15870,15898],"content":"CMFCRibbonEdit::OnDrawOnList"},{"pos":[15902,16031],"content":"Called by the framework to draw the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control in a commands list box.","source":"Called by the framework to draw the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control in a commands list box."},{"content":"Parameters","pos":[16211,16221]},{"content":"[in]","pos":[16225,16229]},{"content":"Pointer to a device context for the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control.","pos":[16239,16345],"source":" Pointer to a device context for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control."},{"content":"[in]","pos":[16352,16356]},{"content":"The display text <bpt id=\"p1\">[</bpt><ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md \"cmfcribbonedit class\")</ept>.","pos":[16370,16458],"source":" The display text [](../../mfc/reference/cmfcribbonedit-class.md \"cmfcribbonedit class\")."},{"content":"[in]","pos":[16465,16469]},{"content":"Distance, in pixels, from the left side of the list box to the display text.","pos":[16487,16563]},{"content":"[in]","pos":[16570,16574]},{"content":"The display rectangle for the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control.","pos":[16585,16685],"source":" The display rectangle for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control."},{"content":"[in]","pos":[16692,16696]},{"content":"This parameter is not used.","pos":[16714,16741]},{"content":"[in]","pos":[16748,16752]},{"content":"This parameter is not used.","pos":[16771,16798]},{"content":"Remarks","pos":[16808,16815]},{"content":"The commands list box displays ribbon controls to enable users to customize the quick access toolbar.","pos":[16819,16920]},{"pos":[16971,16995],"content":"CMFCRibbonEdit::OnEnable"},{"pos":[16999,17118],"content":"Called by the framework to enable or disable the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control.","source":"Called by the framework to enable or disable the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control."},{"content":"Parameters","pos":[17180,17190]},{"content":"[in]","pos":[17194,17198]},{"content":"to enable the control; <ph id=\"ph1\">`FALSE`</ph> to disable the control.","pos":[17219,17273],"source":" to enable the control; `FALSE` to disable the control."},{"content":"Remarks","pos":[17283,17290]},{"pos":[17344,17371],"content":"CMFCRibbonEdit::OnHighlight"},{"pos":[17375,17521],"content":"Called by the framework when the pointer enters or leaves the bounds of the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control.","source":"Called by the framework when the pointer enters or leaves the bounds of the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control."},{"content":"Parameters","pos":[17589,17599]},{"content":"[in]","pos":[17603,17607]},{"content":"if the pointer is in the bounds of the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","pos":[17631,17760],"source":" if the pointer is in the bounds of the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control; otherwise, `FALSE`."},{"content":"Remarks","pos":[17770,17777]},{"pos":[17825,17846],"content":"CMFCRibbonEdit::OnKey"},{"pos":[17850,17997],"content":"Called by the framework when the user presses a keytip and the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control has the focus.","source":"Called by the framework when the user presses a keytip and the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control has the focus."},{"content":"Parameters","pos":[18059,18069]},{"content":"[in]","pos":[18073,18077]},{"content":"if the keytip displays a pop-up menu; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","pos":[18101,18158],"source":" if the keytip displays a pop-up menu; otherwise, `FALSE`."},{"content":"Return Value","pos":[18168,18180]},{"pos":[18191,18236],"content":"if the event was handled; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","source":" if the event was handled; otherwise, `FALSE`."},{"content":"Remarks","pos":[18246,18253]},{"pos":[18309,18338],"content":"CMFCRibbonEdit::OnLButtonDown"},{"pos":[18342,18509],"content":"Called by the framework to update the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control when the user presses the left mouse button on the control.","source":"Called by the framework to update the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control when the user presses the left mouse button on the control."},{"content":"Parameters","pos":[18576,18586]},{"content":"[in]","pos":[18590,18594]},{"content":"This parameter is not used.","pos":[18606,18633]},{"content":"Remarks","pos":[18643,18650]},{"pos":[18704,18731],"content":"CMFCRibbonEdit::OnLButtonUp"},{"content":"Called by the framework when the user releases the left mouse button.","pos":[18735,18804]},{"content":"Parameters","pos":[18869,18879]},{"content":"[in]","pos":[18883,18887]},{"content":"This parameter is not used.","pos":[18899,18926]},{"content":"Remarks","pos":[18936,18943]},{"pos":[18998,19026],"content":"CMFCRibbonEdit::OnRTLChanged"},{"pos":[19030,19172],"content":"Called by the framework to update the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control when the layout changes direction.","source":"Called by the framework to update the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control when the layout changes direction."},{"content":"Parameters","pos":[19237,19247]},{"content":"[in]","pos":[19251,19255]},{"content":"if the layout is right-to-left; <ph id=\"ph1\">`FALSE`</ph> if the layout is left-to-right.","pos":[19275,19346],"source":" if the layout is right-to-left; `FALSE` if the layout is left-to-right."},{"content":"Remarks","pos":[19356,19363]},{"pos":[19412,19434],"content":"CMFCRibbonEdit::OnShow"},{"pos":[19438,19552],"content":"Called by the framework to show or hide the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control.","source":"Called by the framework to show or hide the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control."},{"content":"Parameters","pos":[19610,19620]},{"content":"[in]","pos":[19624,19628]},{"content":"to show the control; <ph id=\"ph1\">`FALSE`</ph> to hide the control.","pos":[19647,19696],"source":" to show the control; `FALSE` to hide the control."},{"content":"Remarks","pos":[19706,19713]},{"pos":[19762,19784],"content":"CMFCRibbonEdit::Redraw"},{"pos":[19788,19885],"content":"Updates the display of the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control.","source":"Updates the display of the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control."},{"content":"Remarks","pos":[19933,19940]},{"pos":[19944,20236],"content":"This method redraws the display rectangle for the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> object by indirectly calling <bpt id=\"p2\">[</bpt>CWnd::RedrawWindow<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/dd162911)</ept> with the <ph id=\"ph1\">`RDW_INVALIDATE`</ph>, <ph id=\"ph2\">`RDW_ERASE`</ph>, and <ph id=\"ph3\">`RDW_UPDATENOW`</ph> flags set.","source":"This method redraws the display rectangle for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object by indirectly calling [CWnd::RedrawWindow](http://msdn.microsoft.com/library/windows/desktop/dd162911) with the `RDW_INVALIDATE`, `RDW_ERASE`, and `RDW_UPDATENOW` flags set."},{"pos":[20289,20315],"content":"CMFCRibbonEdit::SetACCData"},{"pos":[20319,20424],"content":"Sets the accessibility data for the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> object.","source":"Sets the accessibility data for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object."},{"content":"Parameters","pos":[20526,20536]},{"content":"Pointer to the parent window for the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> object.","pos":[20553,20659],"source":" Pointer to the parent window for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object."},{"content":"The accessibility data for the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> object.","pos":[20676,20776],"source":" The accessibility data for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object."},{"content":"Return Value","pos":[20786,20798]},{"pos":[20802,20824],"content":"Always returns <ph id=\"ph1\">`TRUE`</ph>.","source":"Always returns `TRUE`."},{"content":"Remarks","pos":[20834,20841]},{"pos":[20895,20922],"content":"CMFCRibbonEdit::SetEditText"},{"content":"Sets the text in the text box.","pos":[20926,20956]},{"content":"Parameters","pos":[21016,21026]},{"content":"[in]","pos":[21030,21034]},{"content":"The text for the text box.","pos":[21048,21074]},{"pos":[21129,21157],"content":"CMFCRibbonEdit::SetTextAlign"},{"content":"Sets the text alignment of the text box.","pos":[21161,21201]},{"content":"Parameters","pos":[21257,21267]},{"content":"[in]","pos":[21271,21275]},{"content":"A text alignment enumerated value.","pos":[21288,21322]},{"content":"See the Remarks section for possible values.","pos":[21323,21367]},{"content":"Remarks","pos":[21377,21384]},{"pos":[21388,21455],"content":"The parameter <ph id=\"ph1\">`nAlign`</ph> is one of the following edit control styles:","source":"The parameter `nAlign` is one of the following edit control styles:"},{"pos":[21463,21493],"content":"<bpt id=\"p1\">**</bpt>ES_LEFT<ept id=\"p1\">**</ept> for left alignment","source":"**ES_LEFT** for left alignment"},{"pos":[21501,21535],"content":"<bpt id=\"p1\">**</bpt>ES_CENTER<ept id=\"p1\">**</ept> for center alignment","source":"**ES_CENTER** for center alignment"},{"pos":[21543,21575],"content":"<bpt id=\"p1\">**</bpt>ES_RIGHT<ept id=\"p1\">**</ept> for right alignment","source":"**ES_RIGHT** for right alignment"},{"pos":[21582,21709],"content":"For more information about these styles, see <bpt id=\"p1\">[</bpt>Edit Control Styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775464)</ept>.","source":"For more information about these styles, see [Edit Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb775464)."},{"pos":[21760,21784],"content":"CMFCRibbonEdit::SetWidth"},{"pos":[21788,21897],"content":"Sets the width of the text box for the <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control.","source":"Sets the width of the text box for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control."},{"content":"Parameters","pos":[21988,21998]},{"content":"[in]","pos":[22002,22006]},{"content":"The width, in pixels, of the text box.","pos":[22019,22057]},{"content":"to set the width for floating mode; <ph id=\"ph1\">`FALSE`</ph> to set the width for regular mode.","pos":[22090,22168],"source":" to set the width for floating mode; `FALSE` to set the width for regular mode."},{"content":"Remarks","pos":[22178,22185]},{"pos":[22189,22340],"content":"The <bpt id=\"p1\">[</bpt>CMFCRibbonEdit<ept id=\"p1\">](../../mfc/reference/cmfcribbonedit-class.md)</ept> control has two widths depending on its display mode: floating mode and regular mode.","source":"The [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control has two widths depending on its display mode: floating mode and regular mode."},{"content":"See Also","pos":[22349,22357]},{"content":"Hierarchy Chart","pos":[22362,22377]},{"content":"Classes","pos":[22414,22421]},{"content":"CMFCRibbonButton Class","pos":[22464,22486]},{"content":"CMFCRibbonBar Class","pos":[22540,22559]}],"content":"---\ntitle: \"CMFCRibbonEdit Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CMFCRibbonEdit\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CMFCRibbonEdit class\"\nms.assetid: 9b85f1f2-446b-454e-9af9-104fdad8a897\ncaps.latest.revision: 25\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CMFCRibbonEdit Class\nImplements an edit control that is located on a ribbon bar.  \n  \n## Syntax  \n  \n```  \nclass CMFCRibbonEdit : public CMFCRibbonButton  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCRibbonEdit::CMFCRibbonEdit](#cmfcribbonedit__cmfcribbonedit)|Constructs a `CMFCRibbonEdit` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCRibbonEdit::CanBeStretched](#cmfcribbonedit__canbestretched)|Indicates whether the height of the `CMFCRibbonEdit` control can increase vertically to the height of a ribbon row.|  \n|[CMFCRibbonEdit::CMFCRibbonEdit](#cmfcribbonedit__cmfcribbonedit)|Constructs a `CMFCRibbonEdit` object.|  \n|[CMFCRibbonEdit::CopyFrom](#cmfcribbonedit__copyfrom)|Copies the state of the specified `CMFCRibbonEdit` object to the current `CMFCRibbonEdit` object.|  \n|[CMFCRibbonEdit::CreateEdit](#cmfcribbonedit__createedit)|Creates a new text box for the `CMFCRibbonEdit` object.|  \n|[CMFCRibbonEdit::DestroyCtrl](#cmfcribbonedit__destroyctrl)|Destroys the `CMFCRibbonEdit` object.|  \n|[CMFCRibbonEdit::DropDownList](#cmfcribbonedit__dropdownlist)|Drops down a list box.|  \n|[CMFCRibbonEdit::EnableSpinButtons](#cmfcribbonedit__enablespinbuttons)|Enables and sets the range of the spin button for the text box.|  \n|[CMFCRibbonEdit::GetCompactSize](#cmfcribbonedit__getcompactsize)|Retrieves the compact size of the `CFMCRibbonEdit` object.|  \n|[CMFCRibbonEdit::GetEditText](#cmfcribbonedit__getedittext)|Retrieves the text in the text box.|  \n|[CMFCRibbonEdit::GetIntermediateSize](#cmfcribbonedit__getintermediatesize)|Retrieves the intermediate size of the `CMFCRibbonEdit` object.|  \n|[CMFCRibbonEdit::GetTextAlign](#cmfcribbonedit__gettextalign)|Retrieves the alignment of the text in the text box.|  \n|[CMFCRibbonEdit::GetWidth](#cmfcribbonedit__getwidth)|Retrieves the width, in pixels, of the `CMFCRibbonEdit` control.|  \n|[CMFCRibbonEdit::HasCompactMode](#cmfcribbonedit__hascompactmode)|Indicates whether the display size for the `CMFCRibbonEdit` control can be compact.|  \n|[CMFCRibbonEdit::HasFocus](#cmfcribbonedit__hasfocus)|Indicates whether the `CMFCRIbbonEdit` control has the focus.|  \n|[CMFCRibbonEdit::HasLargeMode](#cmfcribbonedit__haslargemode)|Indicates whether the display size for the `CMFCRibbonEdit` control can be large.|  \n|[CMFCRibbonEdit::HasSpinButtons](#cmfcribbonedit__hasspinbuttons)|Indicates whether the text box has a spin button.|  \n|[CMFCRibbonEdit::IsHighlighted](#cmfcribbonedit__ishighlighted)|Indicates whether the `CMFCRibbonEdit` control is highlighted.|  \n|[CMFCRibbonEdit::OnAfterChangeRect](#cmfcribbonedit__onafterchangerect)|Called by the framework when the dimensions of the display rectangle for the `CMFCRibbonEdit` control changes.|  \n|[CMFCRibbonEdit::OnDraw](#cmfcribbonedit__ondraw)|Called by the framework to draw the `CMFCRibbonEdit` control.|  \n|[CMFCRibbonEdit::OnDrawLabelAndImage](#cmfcribbonedit__ondrawlabelandimage)|Called by the framework to draw the label and image for the `CMFCRibbonEdit` control.|  \n|[CMFCRibbonEdit::OnDrawOnList](#cmfcribbonedit__ondrawonlist)|Called by the framework to draw the `CMFCRibbonEdit` control in a commands list box.|  \n|[CMFCRibbonEdit::OnEnable](#cmfcribbonedit__onenable)|Called by the framework to enable or disable the `CMFCRibbonEdit` control.|  \n|[CMFCRibbonEdit::OnHighlight](#cmfcribbonedit__onhighlight)|Called by the framework when the pointer enters or leaves the bounds of the `CMFCRibbonEdit` control.|  \n|[CMFCRibbonEdit::OnKey](#cmfcribbonedit__onkey)|Called by the framework when the user presses a keytip and the `CMFCRibbonEdit` control has the focus.|  \n|[CMFCRibbonEdit::OnLButtonDown](#cmfcribbonedit__onlbuttondown)|Called by the framework to update the `CMFCRibbonEdit` control when the user presses the left mouse button on the control.|  \n|[CMFCRibbonEdit::OnLButtonUp](#cmfcribbonedit__onlbuttonup)|Called by the framework when the user releases the left mouse button.|  \n|[CMFCRibbonEdit::OnRTLChanged](#cmfcribbonedit__onrtlchanged)|Called by the framework to update the `CMFCRibbonEdit` control when the layout changes direction.|  \n|[CMFCRibbonEdit::OnShow](#cmfcribbonedit__onshow)|Called by the framework to show or hide the `CMFCRibbonEdit` control.|  \n|[CMFCRibbonEdit::Redraw](#cmfcribbonedit__redraw)|Updates the display of the `CMFCRibbonEdit` control.|  \n|[CMFCRibbonEdit::SetACCData](#cmfcribbonedit__setaccdata)|Sets the accessibility data for the `CMFCRibbonEdit` object.|  \n|[CMFCRibbonEdit::SetEditText](#cmfcribbonedit__setedittext)|Sets the text in the text box.|  \n|[CMFCRibbonEdit::SetTextAlign](#cmfcribbonedit__settextalign)|Sets the text alignment of the text box.|  \n|[CMFCRibbonEdit::SetWidth](#cmfcribbonedit__setwidth)|Sets the width of the text box for the `CMFCRibbonEdit` control.|  \n  \n## Remarks  \n  \n## Example  \n The following example demonstrates how to construct a `CMFCRibbonEdit` object, show spin buttons next to the edit control, and set the text of the edit control. This code snippet is part of the [MS Office 2007 Demo sample](../../visual-cpp-samples.md).  \n  \n [!code-cpp[NVC_MFC_MSOffice2007Demo#7](../../mfc/reference/codesnippet/cpp/cmfcribbonedit-class_1.cpp)]  \n  \n## Requirements  \n **Header:** afxRibbonEdit.h  \n  \n##  <a name=\"cmfcribbonedit__canbestretched\"></a>  CMFCRibbonEdit::CanBeStretched  \n Indicates whether the height of the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control can increase vertically to the height of a ribbon row.  \n  \n```  \nvirtual BOOL CanBeStretched();\n```  \n  \n### Return Value  \n Always returns `FALSE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonedit__cmfcribbonedit\"></a>  CMFCRibbonEdit::CMFCRibbonEdit  \n Constructs a [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object.  \n  \n```  \nCMFCRibbonEdit(\n    UINT nID,  \n    int nWidth,  \n    LPCTSTR lpszLabel = NULL,  \n    int nImage = -1);\n\nCMFCRibbonEdit();\n```  \n  \n### Parameters  \n [in] `nID`  \n Command ID for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control.  \n  \n [in] `nWidth`  \n The width, in pixels, of the text box for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control.  \n  \n [in] `lpszLabel`  \n The label for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control.  \n  \n [in] `nImage`  \n Index of the small image to use for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control. The collection of small images is maintained by the parent ribbon category.  \n  \n### Remarks  \n The [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control does not use a large image.  \n  \n##  <a name=\"cmfcribbonedit__copyfrom\"></a>  CMFCRibbonEdit::CopyFrom  \n Copies the state of the specified [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object to the current [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object.  \n  \n```  \nvirtual void CopyFrom(const CMFCRibbonBaseElement& src);\n```  \n  \n### Parameters  \n [in] `src`  \n The source [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object.  \n  \n### Remarks  \n The `src` parameter must be of type [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md).  \n  \n##  <a name=\"cmfcribbonedit__createedit\"></a>  CMFCRibbonEdit::CreateEdit  \n Creates a new text box for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object.  \n  \n```  \nvirtual CMFCRibbonRichEditCtrl* CreateEdit(\n    CWnd* pWndParent,  \n    DWORD dwEditStyle);\n```  \n  \n### Parameters  \n [in] `pWndParent`  \n A pointer to the parent window of the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object.  \n  \n [in] `dwEditStyle`  \n Specifies the style of the text box. You can combine the window styles listed in the Remarks section with the [edit control styles](http://msdn.microsoft.com/library/windows/desktop/bb775464) that are described in the Windows SDK.  \n  \n### Return Value  \n A pointer to the new text box if the method was successful; otherwise, `NULL`.  \n  \n### Remarks  \n Override this method in a derived class to create a custom text box.  \n  \n You can apply the following [Window Styles](../../mfc/reference/window-styles.md) to a text box:  \n  \n- **WS_CHILD**  \n  \n- **WS_VISIBLE**  \n  \n- **WS_DISABLED**  \n  \n- **WS_GROUP**  \n  \n- **WS_TABSTOP**  \n  \n##  <a name=\"cmfcribbonedit__destroyctrl\"></a>  CMFCRibbonEdit::DestroyCtrl  \n Destroys the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object.  \n  \n```  \nvirtual void DestroyCtrl();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonedit__dropdownlist\"></a>  CMFCRibbonEdit::DropDownList  \n Drops down a list box.  \n  \n```  \nvirtual void DropDownList();\n```  \n  \n### Remarks  \n By default this method does nothing. Override this method to drop down a list box.  \n  \n##  <a name=\"cmfcribbonedit__enablespinbuttons\"></a>  CMFCRibbonEdit::EnableSpinButtons  \n Enables and sets the range of the spin button for the text box.  \n  \n```  \nvoid EnableSpinButtons(\n    int nMin,  \n    int nMax);\n```  \n  \n### Parameters  \n [in] `nMin`  \n The minimum value of the spin button.  \n  \n [in] `nMax`  \n The maximum value of the spin button.  \n  \n### Remarks  \n Spin buttons display an up and down arrow and enable users to move through a fixed set of values.  \n  \n##  <a name=\"cmfcribbonedit__getcompactsize\"></a>  CMFCRibbonEdit::GetCompactSize  \n Retrieves the compact size of the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object.  \n  \n```  \nvirtual CSize GetCompactSize(CDC* pDC);\n```  \n  \n### Parameters  \n [in] `pDC`  \n Pointer to a device context for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object.  \n  \n### Return Value  \n The compact size of the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonedit__getedittext\"></a>  CMFCRibbonEdit::GetEditText  \n Retrieves the text in the text box.  \n  \n```  \nCString GetEditText() const;\n\n \n```  \n  \n### Return Value  \n The text in the text box.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonedit__getintermediatesize\"></a>  CMFCRibbonEdit::GetIntermediateSize  \n Retrieves the intermediate size of the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object.  \n  \n```  \nvirtual CSize GetIntermediateSize(CDC* pDC);\n```  \n  \n### Parameters  \n [in] `pDC`  \n Pointer to a device context for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object.  \n  \n### Return Value  \n The intermediate size of the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonedit__gettextalign\"></a>  CMFCRibbonEdit::GetTextAlign  \n Retrieves the alignment of the text in the text box.  \n  \n```  \nint GetTextAlign() const;\n\n \n```  \n  \n### Return Value  \n A text alignment enumerated value. See the Remarks section for possible values.  \n  \n### Remarks  \n The returned value is one of the following edit control styles:  \n  \n- **ES_LEFT** for left alignment  \n  \n- **ES_CENTER** for center alignment  \n  \n- **ES_RIGHT** for right alignment  \n  \n For more information about these styles, see [Edit Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb775464).  \n  \n##  <a name=\"cmfcribbonedit__getwidth\"></a>  CMFCRibbonEdit::GetWidth  \n Retrieves the width, in pixels, of the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control.  \n  \n```  \nint GetWidth(BOOL bInFloatyMode = FALSE) const;\n\n \n```  \n  \n### Parameters  \n [in] `bInFloatyMode`  \n `TRUE` if the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control is in floating mode; otherwise, `FALSE`.  \n  \n### Return Value  \n The width, in pixels, of the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonedit__hascompactmode\"></a>  CMFCRibbonEdit::HasCompactMode  \n Indicates whether the display size for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control can be compact.  \n  \n```  \nvirtual BOOL HasCompactMode() const;\n\n \n```  \n  \n### Return Value  \n Always returns `TRUE`.  \n  \n### Remarks  \n By default this method always returns `TRUE`. Override this method to indicate whether the display size can be compact.  \n  \n##  <a name=\"cmfcribbonedit__hasfocus\"></a>  CMFCRibbonEdit::HasFocus  \n Indicates whether the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control has the focus.  \n  \n```  \nvirtual BOOL HasFocus() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control has the focus; otherwise `FALSE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonedit__haslargemode\"></a>  CMFCRibbonEdit::HasLargeMode  \n Indicates whether the display size for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control can be large.  \n  \n```  \nvirtual BOOL HasLargeMode() const;\n\n \n```  \n  \n### Return Value  \n Always returns `FALSE`.  \n  \n### Remarks  \n By default this method always returns `FALSE`. Override this method to indicate whether the display size can be large.  \n  \n##  <a name=\"cmfcribbonedit__hasspinbuttons\"></a>  CMFCRibbonEdit::HasSpinButtons  \n Indicates whether the text box has a spin button.  \n  \n```  \nvirtual BOOL HasSpinButtons() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the text box has a spin button; otherwise `FALSE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonedit__ishighlighted\"></a>  CMFCRibbonEdit::IsHighlighted  \n Indicates whether the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control is highlighted.  \n  \n```  \nvirtual BOOL IsHighlighted() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control is highlighted; otherwise `FALSE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonedit__onafterchangerect\"></a>  CMFCRibbonEdit::OnAfterChangeRect  \n Called by the framework when the dimensions of the display rectangle for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control change.  \n  \n```  \nvirtual void OnAfterChangeRect(CDC* pDC);\n```  \n  \n### Parameters  \n [in] `pDC`  \n Pointer to a device context for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonedit__ondraw\"></a>  CMFCRibbonEdit::OnDraw  \n Called by the framework to draw the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control.  \n  \n```  \nvirtual void OnDraw(CDC* pDC);\n```  \n  \n### Parameters  \n [in] `pDC`  \n Pointer to a device context for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonedit__ondrawlabelandimage\"></a>  CMFCRibbonEdit::OnDrawLabelAndImage  \n Called by the framework to draw the label and image for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control.  \n  \n```  \nvirtual void OnDrawLabelAndImage(CDC* pDC);\n```  \n  \n### Parameters  \n [in] `pDC`  \n Pointer to a device context for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonedit__ondrawonlist\"></a>  CMFCRibbonEdit::OnDrawOnList  \n Called by the framework to draw the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control in a commands list box.  \n  \n```  \nvirtual void OnDrawOnList(\n    CDC* pDC,  \n    CString strText,  \n    int nTextOffset,  \n    CRect rect,  \n    BOOL bIsSelected,  \n    BOOL bHighlighted);\n```  \n  \n### Parameters  \n [in] `pDC`  \n Pointer to a device context for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control.  \n  \n [in] `strText`  \n The display text [](../../mfc/reference/cmfcribbonedit-class.md \"cmfcribbonedit class\").  \n  \n [in] `nTextOffset`  \n Distance, in pixels, from the left side of the list box to the display text.  \n  \n [in] `rect`  \n The display rectangle for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control.  \n  \n [in] `bIsSelected`  \n This parameter is not used.  \n  \n [in] `bHighlighted`  \n This parameter is not used.  \n  \n### Remarks  \n The commands list box displays ribbon controls to enable users to customize the quick access toolbar.  \n  \n##  <a name=\"cmfcribbonedit__onenable\"></a>  CMFCRibbonEdit::OnEnable  \n Called by the framework to enable or disable the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control.  \n  \n```  \nvirtual void OnEnable(BOOL bEnable);\n```  \n  \n### Parameters  \n [in] `bEnable`  \n `TRUE` to enable the control; `FALSE` to disable the control.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonedit__onhighlight\"></a>  CMFCRibbonEdit::OnHighlight  \n Called by the framework when the pointer enters or leaves the bounds of the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control.  \n  \n```  \nvirtual void OnHighlight(BOOL bHighlight);\n```  \n  \n### Parameters  \n [in] `bHighlight`  \n `TRUE` if the pointer is in the bounds of the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control; otherwise, `FALSE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonedit__onkey\"></a>  CMFCRibbonEdit::OnKey  \n Called by the framework when the user presses a keytip and the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control has the focus.  \n  \n```  \nvirtual BOOL OnKey(BOOL bIsMenuKey);\n```  \n  \n### Parameters  \n [in] `bIsMenuKey`  \n `TRUE` if the keytip displays a pop-up menu; otherwise, `FALSE`.  \n  \n### Return Value  \n `TRUE` if the event was handled; otherwise, `FALSE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonedit__onlbuttondown\"></a>  CMFCRibbonEdit::OnLButtonDown  \n Called by the framework to update the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control when the user presses the left mouse button on the control.  \n  \n```  \nvirtual void OnLButtonDown(CPoint point);\n```  \n  \n### Parameters  \n [in] `point`  \n This parameter is not used.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonedit__onlbuttonup\"></a>  CMFCRibbonEdit::OnLButtonUp  \n Called by the framework when the user releases the left mouse button.  \n  \n```  \nvirtual void OnLButtonUp(CPoint point);\n```  \n  \n### Parameters  \n [in] `point`  \n This parameter is not used.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonedit__onrtlchanged\"></a>  CMFCRibbonEdit::OnRTLChanged  \n Called by the framework to update the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control when the layout changes direction.  \n  \n```  \nvirtual void OnRTLChanged(BOOL bIsRTL);\n```  \n  \n### Parameters  \n [in] `bIsRTL`  \n `TRUE` if the layout is right-to-left; `FALSE` if the layout is left-to-right.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonedit__onshow\"></a>  CMFCRibbonEdit::OnShow  \n Called by the framework to show or hide the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control.  \n  \n```  \nvirtual void OnShow(BOOL bShow);\n```  \n  \n### Parameters  \n [in] `bShow`  \n `TRUE` to show the control; `FALSE` to hide the control.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonedit__redraw\"></a>  CMFCRibbonEdit::Redraw  \n Updates the display of the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control.  \n  \n```  \nvirtual void Redraw();\n```  \n  \n### Remarks  \n This method redraws the display rectangle for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object by indirectly calling [CWnd::RedrawWindow](http://msdn.microsoft.com/library/windows/desktop/dd162911) with the `RDW_INVALIDATE`, `RDW_ERASE`, and `RDW_UPDATENOW` flags set.  \n  \n##  <a name=\"cmfcribbonedit__setaccdata\"></a>  CMFCRibbonEdit::SetACCData  \n Sets the accessibility data for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object.  \n  \n```  \nvirtual BOOL SetACCData(\n    CWnd* pParent,  \n    CAccessibilityData& data);\n```  \n  \n### Parameters  \n `pParent`  \n Pointer to the parent window for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object.  \n  \n `data`  \n The accessibility data for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) object.  \n  \n### Return Value  \n Always returns `TRUE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonedit__setedittext\"></a>  CMFCRibbonEdit::SetEditText  \n Sets the text in the text box.  \n  \n```  \nvoid SetEditText(CString strText);\n```  \n  \n### Parameters  \n [in] `strText`  \n The text for the text box.  \n  \n##  <a name=\"cmfcribbonedit__settextalign\"></a>  CMFCRibbonEdit::SetTextAlign  \n Sets the text alignment of the text box.  \n  \n```  \nvoid SetTextAlign(int nAlign);\n```  \n  \n### Parameters  \n [in] `nAlign`  \n A text alignment enumerated value. See the Remarks section for possible values.  \n  \n### Remarks  \n The parameter `nAlign` is one of the following edit control styles:  \n  \n- **ES_LEFT** for left alignment  \n  \n- **ES_CENTER** for center alignment  \n  \n- **ES_RIGHT** for right alignment  \n  \n For more information about these styles, see [Edit Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb775464).  \n  \n##  <a name=\"cmfcribbonedit__setwidth\"></a>  CMFCRibbonEdit::SetWidth  \n Sets the width of the text box for the [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control.  \n  \n```  \nvoid SetWidth(\n    int nWidth,  \n    BOOL bInFloatyMode = FALSE);\n```  \n  \n### Parameters  \n [in] `nWidth`  \n The width, in pixels, of the text box.  \n  \n `bInFloatyMode`  \n `TRUE` to set the width for floating mode; `FALSE` to set the width for regular mode.  \n  \n### Remarks  \n The [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md) control has two widths depending on its display mode: floating mode and regular mode.  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)   \n [CMFCRibbonButton Class](../../mfc/reference/cmfcribbonbutton-class.md)   \n [CMFCRibbonBar Class](../../mfc/reference/cmfcribbonbar-class.md)"}