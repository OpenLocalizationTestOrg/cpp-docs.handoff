{"nodes":[{"pos":[12,41],"content":"CA2WEX Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CA2WEX Class | Microsoft Docs","pos":[0,29]}]},{"content":"CA2WEX Class","pos":[743,755]},{"pos":[756,878],"content":"This class is used by the string conversion macros <ph id=\"ph1\">`CA2TEX`</ph>, <ph id=\"ph2\">`CA2CTEX`</ph>, <ph id=\"ph3\">`CT2WEX`</ph>, and <ph id=\"ph4\">`CT2CWEX`</ph>, and the typedef <bpt id=\"p1\">**</bpt>CA2W<ept id=\"p1\">**</ept>.","source":"This class is used by the string conversion macros `CA2TEX`, `CA2CTEX`, `CT2WEX`, and `CT2CWEX`, and the typedef **CA2W**."},{"pos":[886,996],"content":"[!IMPORTANT]\n This class and its members cannot be used in applications that execute in the Windows Runtime.","leadings":["","> "],"nodes":[{"content":"This class and its members cannot be used in applications that execute in the Windows Runtime.","pos":[14,108]}]},{"content":"Syntax","pos":[1005,1011]},{"content":"Parameters","pos":[1091,1101]},{"content":"The size of the buffer used in the translation process.","pos":[1126,1181]},{"content":"The default length is 128 bytes.","pos":[1182,1214]},{"content":"Members","pos":[1223,1230]},{"content":"Public Constructors","pos":[1240,1259]},{"content":"Name","pos":[1266,1270]},{"content":"Description","pos":[1271,1282]},{"content":"CA2WEX::CA2WEX","pos":[1321,1335]},{"content":"The constructor.","pos":[1354,1370]},{"content":"CA2WEX::~CA2WEX","pos":[1376,1391]},{"content":"The destructor.","pos":[1415,1430]},{"content":"Public Operators","pos":[1441,1457]},{"content":"Name","pos":[1464,1468]},{"content":"Description","pos":[1469,1480]},{"content":"CA2WEX::operator LPWSTR","pos":[1519,1542]},{"content":"Conversion operator.","pos":[1570,1590]},{"content":"Public Data Members","pos":[1601,1620]},{"content":"Name","pos":[1627,1631]},{"content":"Description","pos":[1632,1643]},{"content":"CA2WEX::m_psz","pos":[1682,1695]},{"content":"The data member that stores the source string.","pos":[1713,1759]},{"content":"CA2WEX::m_szBuffer","pos":[1765,1783]},{"content":"The static buffer, used to store the converted string.","pos":[1806,1860]},{"content":"Remarks","pos":[1870,1877]},{"pos":[1881,1992],"content":"Unless extra functionality is required, use <ph id=\"ph1\">`CA2TEX`</ph>, <ph id=\"ph2\">`CA2CTEX`</ph>, <ph id=\"ph3\">`CT2WEX`</ph>, <ph id=\"ph4\">`CT2CWEX`</ph>, or <bpt id=\"p1\">**</bpt>CA2W<ept id=\"p1\">**</ept> in your code.","source":"Unless extra functionality is required, use `CA2TEX`, `CA2CTEX`, `CT2WEX`, `CT2CWEX`, or **CA2W** in your code."},{"content":"This class contains a fixed-size static buffer which is used to store the result of the conversion.","pos":[1999,2098]},{"content":"If the result is too large to fit into the static buffer, the class allocates memory using <ph id=\"ph1\">`malloc`</ph>, freeing the memory when the object goes out of scope.","pos":[2099,2253],"source":" If the result is too large to fit into the static buffer, the class allocates memory using `malloc`, freeing the memory when the object goes out of scope."},{"content":"This ensures that, unlike text conversion macros available in previous versions of ATL, this class is safe to use in loops and that it won't overflow the stack.","pos":[2254,2414]},{"pos":[2421,2544],"content":"If the class tries to allocate memory on the heap and fails, it will call <ph id=\"ph1\">`AtlThrow`</ph> with an argument of <bpt id=\"p1\">**</bpt>E_OUTOFMEMORY<ept id=\"p1\">**</ept>.","source":"If the class tries to allocate memory on the heap and fails, it will call `AtlThrow` with an argument of **E_OUTOFMEMORY**."},{"content":"By default, the ATL conversion classes and macros use the current thread's ANSI code page for the conversion.","pos":[2551,2660]},{"content":"If you want to override that behavior for a specific conversion, specify the code page as the second parameter to the constructor for the class.","pos":[2661,2805]},{"content":"The following macros are based on this class:","pos":[2812,2857]},{"content":"The following typedef is based on this class:","pos":[2930,2975]},{"content":"CA2W","pos":[2985,2989]},{"pos":[2998,3163],"content":"For a discussion of these text conversion macros, see <bpt id=\"p1\">[</bpt>ATL and MFC String Conversion Macros<ept id=\"p1\">](http://msdn.microsoft.com/library/8f53659e-0464-4424-97db-6b8453c49863)</ept>.","source":"For a discussion of these text conversion macros, see [ATL and MFC String Conversion Macros](http://msdn.microsoft.com/library/8f53659e-0464-4424-97db-6b8453c49863)."},{"content":"Example","pos":[3172,3179]},{"pos":[3183,3353],"content":"See <bpt id=\"p1\">[</bpt>ATL and MFC String Conversion Macros<ept id=\"p1\">](http://msdn.microsoft.com/library/8f53659e-0464-4424-97db-6b8453c49863)</ept> for an example of using these string conversion macros.","source":"See [ATL and MFC String Conversion Macros](http://msdn.microsoft.com/library/8f53659e-0464-4424-97db-6b8453c49863) for an example of using these string conversion macros."},{"content":"Requirements","pos":[3362,3374]},{"pos":[3378,3399],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlconv.h","source":"**Header:** atlconv.h"},{"pos":[3440,3454],"content":"CA2WEX::CA2WEX"},{"content":"The constructor.","pos":[3458,3474]},{"content":"Parameters","pos":[3592,3602]},{"content":"The text string to be converted.","pos":[3615,3647]},{"content":"The code page used to perform the conversion.","pos":[3669,3714]},{"content":"See the code page parameter discussion for the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> function <bpt id=\"p1\">[</bpt>MultiByteToWideChar<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd319072)</ept> for more details.","pos":[3715,3922],"source":" See the code page parameter discussion for the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)] function [MultiByteToWideChar](http://msdn.microsoft.com/library/windows/desktop/dd319072) for more details."},{"content":"Remarks","pos":[3932,3939]},{"content":"Allocates the buffer used in the translation process.","pos":[3943,3996]},{"pos":[4042,4057],"content":"CA2WEX::~CA2WEX"},{"content":"The destructor.","pos":[4061,4076]},{"content":"Remarks","pos":[4118,4125]},{"content":"Frees the allocated buffer.","pos":[4129,4156]},{"pos":[4196,4209],"content":"CA2WEX::m_psz"},{"content":"The data member that stores the source string.","pos":[4213,4259]},{"pos":[4331,4349],"content":"CA2WEX::m_szBuffer"},{"content":"The static buffer, used to store the converted string.","pos":[4353,4407]},{"pos":[4510,4533],"content":"CA2WEX::operator LPWSTR"},{"content":"Conversion operator.","pos":[4537,4557]},{"content":"```operator LPWSTR() const throw();","pos":[4563,4598]}],"content":"---\ntitle: \"CA2WEX Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ATLCONV/CA2WEX\"\n  - \"ATL.CA2WEX\"\n  - \"ATL.CA2WEX<t_nBufferLength>\"\n  - \"ATL::CA2WEX\"\n  - \"ATL::CA2WEX<t_nBufferLength>\"\n  - \"CA2WEX\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CA2WEX class\"\nms.assetid: 317d9ffb-e84f-47e8-beda-57e28fb19124\ncaps.latest.revision: 20\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# CA2WEX Class\nThis class is used by the string conversion macros `CA2TEX`, `CA2CTEX`, `CT2WEX`, and `CT2CWEX`, and the typedef **CA2W**.  \n  \n> [!IMPORTANT]\n>  This class and its members cannot be used in applications that execute in the Windows Runtime.  \n  \n## Syntax  \n  \n```\ntemplate <int   t_nBufferLength = 128>\n    class CA2WEX\n```  \n  \n#### Parameters  \n `t_nBufferLength`  \n The size of the buffer used in the translation process. The default length is 128 bytes.  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CA2WEX::CA2WEX](#ca2wex__ca2wex)|The constructor.|  \n|[CA2WEX::~CA2WEX](#ca2wex___dtorca2wex)|The destructor.|  \n  \n### Public Operators  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CA2WEX::operator LPWSTR](#ca2wex__operator_lpwstr)|Conversion operator.|  \n  \n### Public Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CA2WEX::m_psz](#ca2wex__m_psz)|The data member that stores the source string.|  \n|[CA2WEX::m_szBuffer](#ca2wex__m_szbuffer)|The static buffer, used to store the converted string.|  \n  \n## Remarks  \n Unless extra functionality is required, use `CA2TEX`, `CA2CTEX`, `CT2WEX`, `CT2CWEX`, or **CA2W** in your code.  \n  \n This class contains a fixed-size static buffer which is used to store the result of the conversion. If the result is too large to fit into the static buffer, the class allocates memory using `malloc`, freeing the memory when the object goes out of scope. This ensures that, unlike text conversion macros available in previous versions of ATL, this class is safe to use in loops and that it won't overflow the stack.  \n  \n If the class tries to allocate memory on the heap and fails, it will call `AtlThrow` with an argument of **E_OUTOFMEMORY**.  \n  \n By default, the ATL conversion classes and macros use the current thread's ANSI code page for the conversion. If you want to override that behavior for a specific conversion, specify the code page as the second parameter to the constructor for the class.  \n  \n The following macros are based on this class:  \n  \n- `CA2TEX`  \n  \n- `CA2CTEX`  \n  \n- `CT2WEX`  \n  \n- `CT2CWEX`  \n  \n The following typedef is based on this class:  \n  \n- **CA2W**  \n  \n For a discussion of these text conversion macros, see [ATL and MFC String Conversion Macros](http://msdn.microsoft.com/library/8f53659e-0464-4424-97db-6b8453c49863).  \n  \n## Example  \n See [ATL and MFC String Conversion Macros](http://msdn.microsoft.com/library/8f53659e-0464-4424-97db-6b8453c49863) for an example of using these string conversion macros.  \n  \n## Requirements  \n **Header:** atlconv.h  \n  \n##  <a name=\"ca2wex__ca2wex\"></a>  CA2WEX::CA2WEX  \n The constructor.  \n  \n```\nCA2WEX(\n    LPCSTR psz,\n    UINT nCodePage) throw(...);\n\n    CA2WEX(\n LPCSTR  psz) throw(...);\n```  \n  \n### Parameters  \n `psz`  \n The text string to be converted.  \n  \n `nCodePage`  \n The code page used to perform the conversion. See the code page parameter discussion for the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)] function [MultiByteToWideChar](http://msdn.microsoft.com/library/windows/desktop/dd319072) for more details.  \n  \n### Remarks  \n Allocates the buffer used in the translation process.  \n  \n##  <a name=\"ca2wex___dtorca2wex\"></a>  CA2WEX::~CA2WEX  \n The destructor.  \n  \n```\n~CA2WEX() throw();\n```  \n  \n### Remarks  \n Frees the allocated buffer.  \n  \n##  <a name=\"ca2wex__m_psz\"></a>  CA2WEX::m_psz  \n The data member that stores the source string.  \n  \n```\nLPWSTR m_psz;\n```  \n  \n##  <a name=\"ca2wex__m_szbuffer\"></a>  CA2WEX::m_szBuffer  \n The static buffer, used to store the converted string.  \n  \n```\nwchar_t m_szBuffer[ t_nBufferLength\n ];\n```  \n  \n##  <a name=\"ca2wex__operator_lpwstr\"></a>  CA2WEX::operator LPWSTR  \n Conversion operator.  \n  \n```operator LPWSTR() const throw();\n```  \n  \n### Return Value  \n Returns the text string as type **LPWSTR.**  \n  \n## See Also  \n [CA2AEX Class](../../atl/reference/ca2aex-class.md)   \n [CA2CAEX Class](../../atl/reference/ca2caex-class.md)   \n [CW2AEX Class](../../atl/reference/cw2aex-class.md)   \n [CW2CWEX Class](../../atl/reference/cw2cwex-class.md)   \n [CW2WEX Class](../../atl/reference/cw2wex-class.md)   \n [Class Overview](../../atl/atl-class-overview.md)\n"}