{"nodes":[{"pos":[12,35],"content":"Blocks | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Blocks | Microsoft Docs","pos":[0,23]}]},{"content":"Blocks","pos":[654,660]},{"content":"A sequence of declarations, definitions, and statements enclosed within curly braces (<bpt id=\"p1\">**</bpt>{ }<ept id=\"p1\">**</ept>) is called a \"block.\"","pos":[661,776],"source":"A sequence of declarations, definitions, and statements enclosed within curly braces (**{ }**) is called a \"block.\""},{"content":"There are two types of blocks in C. The \"compound statement,\" a statement composed of one or more statements (see <bpt id=\"p1\">[</bpt>The Compound Statement<ept id=\"p1\">](../c-language/compound-statement-c.md)</ept>), is one type of block.","pos":[777,978],"source":" There are two types of blocks in C. The \"compound statement,\" a statement composed of one or more statements (see [The Compound Statement](../c-language/compound-statement-c.md)), is one type of block."},{"content":"The other, the \"function definition,\" consists of a compound statement (the body of the function) plus the function's associated \"header\" (the function name, return type, and formal parameters).","pos":[979,1173]},{"content":"A block within other blocks is said to be \"nested.\"","pos":[1174,1225]},{"content":"Note that while all compound statements are enclosed within curly braces, not everything enclosed within curly braces constitutes a compound statement.","pos":[1232,1383]},{"content":"For example, although the specifications of array, structure, or enumeration elements can appear within curly braces, they are not compound statements.","pos":[1384,1535]},{"content":"See Also","pos":[1544,1552]},{"content":"Source Files and Source Programs","pos":[1557,1589]}],"content":"---\ntitle: \"Blocks | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"function definitions, blocks in code\"\n  - \"blocks\"\n  - \"compound statements\"\n  - \"statements, compound\"\nms.assetid: be231a92-c712-464e-ae25-a4becb20f7f5\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Blocks\nA sequence of declarations, definitions, and statements enclosed within curly braces (**{ }**) is called a \"block.\" There are two types of blocks in C. The \"compound statement,\" a statement composed of one or more statements (see [The Compound Statement](../c-language/compound-statement-c.md)), is one type of block. The other, the \"function definition,\" consists of a compound statement (the body of the function) plus the function's associated \"header\" (the function name, return type, and formal parameters). A block within other blocks is said to be \"nested.\"  \n  \n Note that while all compound statements are enclosed within curly braces, not everything enclosed within curly braces constitutes a compound statement. For example, although the specifications of array, structure, or enumeration elements can appear within curly braces, they are not compound statements.  \n  \n## See Also  \n [Source Files and Source Programs](../c-language/source-files-and-source-programs.md)"}