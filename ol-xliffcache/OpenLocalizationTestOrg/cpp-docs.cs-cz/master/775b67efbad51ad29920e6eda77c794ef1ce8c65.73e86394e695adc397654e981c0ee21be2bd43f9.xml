{"nodes":[{"pos":[12,34],"content":"_putw | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_putw | Microsoft Docs","pos":[0,22]}]},{"pos":[998,1003],"content":"_putw","linkify":"_putw","nodes":[{"content":"_putw","pos":[0,5]}]},{"content":"Writes an integer to a stream.","pos":[1004,1034]},{"pos":[1043,1049],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1138,1148],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>binint<ept id=\"p1\">*</ept>","pos":[1152,1160],"source":"*binint*"},{"content":"Binary integer to be output.","pos":[1164,1192]},{"content":"Pointer to the <bpt id=\"p1\">**</bpt>FILE<ept id=\"p1\">**</ept> structure.","pos":[1211,1245],"source":" Pointer to the **FILE** structure."},{"pos":[1254,1266],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns the value written.","pos":[1270,1296]},{"content":"A return value of <ph id=\"ph1\">`EOF`</ph> might indicate an error.","pos":[1297,1345],"source":" A return value of `EOF` might indicate an error."},{"content":"Because <ph id=\"ph1\">`EOF`</ph> is also a legitimate integer value, use <ph id=\"ph2\">`ferror`</ph> to verify an error.","pos":[1346,1428],"source":" Because `EOF` is also a legitimate integer value, use `ferror` to verify an error."},{"content":"If <ph id=\"ph1\">`stream`</ph> is a null pointer, the invalid parameter handler is invoked, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[1429,1590],"source":" If `stream` is a null pointer, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, this function sets <ph id=\"ph1\">`errno`</ph> to <ph id=\"ph2\">`EINVAL`</ph> and returns <ph id=\"ph3\">`EOF`</ph>.","pos":[1591,1685],"source":" If execution is allowed to continue, this function sets `errno` to `EINVAL` and returns `EOF`."},{"pos":[1692,1863],"content":"For information about these and other error codes, see <bpt id=\"p1\">[</bpt>_doserrno, errno, _sys_errlist, and _sys_nerr<ept id=\"p1\">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept>.","source":"For information about these and other error codes, see [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)."},{"pos":[1872,1879],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`_putw`</ph> function writes a binary value of type <ph id=\"ph2\">`int`</ph> to the current position of <bpt id=\"p1\">*</bpt>stream.<ept id=\"p1\">*</ept>","pos":[1883,1976],"source":"The `_putw` function writes a binary value of type `int` to the current position of *stream.*"},{"content":"<ph id=\"ph1\">`_putw`</ph> does not affect the alignment of items in the stream nor does it assume any special alignment.","pos":[1977,2079],"source":"`_putw` does not affect the alignment of items in the stream nor does it assume any special alignment."},{"content":"<ph id=\"ph1\">`_putw`</ph> is primarily for compatibility with previous libraries.","pos":[2080,2143],"source":"`_putw` is primarily for compatibility with previous libraries."},{"content":"Portability problems might occur with <ph id=\"ph1\">`_putw`</ph> because the size of an <ph id=\"ph2\">`int`</ph> and the ordering of bytes within an <ph id=\"ph3\">`int`</ph> differ across systems.","pos":[2144,2283],"source":" Portability problems might occur with `_putw` because the size of an `int` and the ordering of bytes within an `int` differ across systems."},{"pos":[2292,2304],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[2311,2318]},{"content":"Required header","pos":[2319,2334]},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdio.h&gt;","pos":[2387,2397],"source":"\\<stdio.h>"},{"pos":[2405,2523],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"pos":[2532,2541],"content":"Libraries","linkify":"Libraries","nodes":[{"content":"Libraries","pos":[0,9]}]},{"pos":[2545,2637],"content":"All versions of the <bpt id=\"p1\">[</bpt>C run-time libraries<ept id=\"p1\">](../../c-runtime-library/crt-library-features.md)</ept>.","source":"All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md)."},{"pos":[2646,2653],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3317,3323],"content":"Output","linkify":"Output","nodes":[{"content":"Output","pos":[0,6]}]},{"pos":[3365,3390],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"content":"Not applicable.","pos":[3394,3409]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[3410,3457],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[3458,3583],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"pos":[3592,3600],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Stream I/O<ept id=\"p1\">](../../c-runtime-library/stream-i-o.md)</ept><ph id=\"ph1\"> </ph>","pos":[3604,3656],"source":"[Stream I/O](../../c-runtime-library/stream-i-o.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_getw<ept id=\"p1\">](../../c-runtime-library/reference/getw.md)</ept>","pos":[3659,3710],"source":" [_getw](../../c-runtime-library/reference/getw.md)"}],"content":"---\ntitle: \"_putw | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_putw\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-stdio-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_putw\"\n  - \"putw\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"integers, writing to streams\"\n  - \"putw function\"\n  - \"streams, writing integers to\"\n  - \"_putw function\"\nms.assetid: 83d63644-249d-4a39-87e5-3b7aa313968d\ncaps.latest.revision: 14\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _putw\nWrites an integer to a stream.  \n  \n## Syntax  \n  \n```  \n  \n      int _putw(  \n   int binint,  \n   FILE *stream   \n);  \n```  \n  \n#### Parameters  \n *binint*  \n Binary integer to be output.  \n  \n `stream`  \n Pointer to the **FILE** structure.  \n  \n## Return Value  \n Returns the value written. A return value of `EOF` might indicate an error. Because `EOF` is also a legitimate integer value, use `ferror` to verify an error. If `stream` is a null pointer, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, this function sets `errno` to `EINVAL` and returns `EOF`.  \n  \n For information about these and other error codes, see [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md).  \n  \n## Remarks  \n The `_putw` function writes a binary value of type `int` to the current position of *stream.* `_putw` does not affect the alignment of items in the stream nor does it assume any special alignment. `_putw` is primarily for compatibility with previous libraries. Portability problems might occur with `_putw` because the size of an `int` and the ordering of bytes within an `int` differ across systems.  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_putw`|\\<stdio.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Libraries  \n All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md).  \n  \n## Example  \n  \n```  \n// crt_putw.c  \n/* This program uses _putw to write a  \n * word to a stream, then performs an error check.  \n */  \n  \n#include <stdio.h>  \n#include <stdlib.h>  \n  \nint main( void )  \n{  \n   FILE *stream;  \n   unsigned u;  \n   if( fopen_s( &stream, \"data.out\", \"wb\" ) )  \n      exit( 1 );  \n   for( u = 0; u < 10; u++ )  \n   {  \n      _putw( u + 0x2132, stream );   /* Write word to stream. */  \n      if( ferror( stream ) )         /* Make error check. */  \n      {  \n         printf( \"_putw failed\" );  \n         clearerr_s( stream );  \n         exit( 1 );  \n      }  \n   }  \n   printf( \"Wrote ten words\\n\" );  \n   fclose( stream );  \n}  \n```  \n  \n## Output  \n  \n```  \nWrote ten words  \n```  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [Stream I/O](../../c-runtime-library/stream-i-o.md)   \n [_getw](../../c-runtime-library/reference/getw.md)"}