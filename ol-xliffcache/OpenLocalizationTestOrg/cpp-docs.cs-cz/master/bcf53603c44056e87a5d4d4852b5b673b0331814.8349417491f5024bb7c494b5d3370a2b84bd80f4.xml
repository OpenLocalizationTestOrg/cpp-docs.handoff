{"nodes":[{"pos":[12,40],"content":"getc, getwc | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"getc, getwc | Microsoft Docs","pos":[0,28]}]},{"content":"getc, getwc","pos":[1144,1155]},{"content":"Read a character from a stream.","pos":[1156,1187]},{"content":"Syntax","pos":[1196,1202]},{"content":"Parameters","pos":[1306,1316]},{"content":"Input stream.","pos":[1332,1345]},{"content":"Return Value","pos":[1354,1366]},{"content":"Returns the character read.","pos":[1370,1397]},{"content":"To indicate a read error or end-of-file condition, <ph id=\"ph1\">`getc`</ph> returns <ph id=\"ph2\">`EOF`</ph>, and <ph id=\"ph3\">`getwc`</ph> returns <ph id=\"ph4\">`WEOF`</ph>.","pos":[1398,1498],"source":" To indicate a read error or end-of-file condition, `getc` returns `EOF`, and `getwc` returns `WEOF`."},{"content":"For <ph id=\"ph1\">`getc`</ph>, use <ph id=\"ph2\">`ferror`</ph> or <ph id=\"ph3\">`feof`</ph> to check for an error or for end of file.","pos":[1499,1575],"source":" For `getc`, use `ferror` or `feof` to check for an error or for end of file."},{"content":"If <ph id=\"ph1\">`stream`</ph> is <ph id=\"ph2\">`NULL`</ph>, <ph id=\"ph3\">`getc`</ph> and <ph id=\"ph4\">`getwc`</ph> invoke the invalid parameter handler, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[1576,1744],"source":" If `stream` is `NULL`, `getc` and `getwc` invoke the invalid parameter handler, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, these functions return <ph id=\"ph1\">`EOF`</ph> (or <ph id=\"ph2\">`WEOF`</ph> for<ph id=\"ph3\">`getwc`</ph>) and set <ph id=\"ph4\">`errno`</ph> to <ph id=\"ph5\">`EINVAL`</ph>.","pos":[1745,1862],"source":" If execution is allowed to continue, these functions return `EOF` (or `WEOF` for`getwc`) and set `errno` to `EINVAL`."},{"pos":[1869,2043],"content":"See <bpt id=\"p1\">[</bpt>_doserrno, errno, _sys_errlist, and _sys_nerr<ept id=\"p1\">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept> for more information on these, and other, error codes.","source":"See [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md) for more information on these, and other, error codes."},{"content":"Remarks","pos":[2052,2059]},{"content":"Each routine reads a single character from a file at the current position and increments the associated file pointer (if defined) to point to the next character.","pos":[2063,2224]},{"content":"The file is associated with <ph id=\"ph1\">`stream`</ph>.","pos":[2225,2262],"source":" The file is associated with `stream`."},{"content":"These functions lock the calling thread and are therefore thread-safe.","pos":[2269,2339]},{"content":"For a non-locking version, see <bpt id=\"p1\">[</bpt>_getc_nolock, _getwc_nolock<ept id=\"p1\">](../../c-runtime-library/reference/getc-nolock-getwc-nolock.md)</ept>.","pos":[2340,2464],"source":" For a non-locking version, see [_getc_nolock, _getwc_nolock](../../c-runtime-library/reference/getc-nolock-getwc-nolock.md)."},{"content":"Routine-specific remarks follow.","pos":[2471,2503]},{"content":"Routine","pos":[2510,2517]},{"content":"Remarks","pos":[2518,2525]},{"pos":[2569,2631],"content":"Same as <ph id=\"ph1\">`fgetc`</ph>, but implemented as a function and as a macro.","source":"Same as `fgetc`, but implemented as a function and as a macro."},{"content":"Wide-character version of <ph id=\"ph1\">`getc`</ph>.","pos":[2644,2677],"source":"Wide-character version of `getc`."},{"content":"Reads a multibyte character or a wide character according to whether <ph id=\"ph1\">`stream`</ph> is opened in text mode or binary mode.","pos":[2678,2794],"source":" Reads a multibyte character or a wide character according to whether `stream` is opened in text mode or binary mode."},{"content":"Generic-Text Routine Mappings","pos":[2805,2834]},{"content":"TCHAR.H routine","pos":[2841,2856]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[2857,2885],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[2886,2899]},{"content":"_UNICODE defined","pos":[2900,2916]},{"content":"Requirements","pos":[3069,3081]},{"content":"Routine","pos":[3088,3095]},{"content":"Required header","pos":[3096,3111]},{"content":"stdio.h&gt;","pos":[3165,3173],"source":"stdio.h>"},{"content":"stdio.h&gt; or <ph id=\"ph1\">\\&lt;</ph>wchar.h&gt;","pos":[3188,3210],"source":"stdio.h> or \\<wchar.h>"},{"pos":[3218,3342],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"content":"Example","pos":[3351,3358]},{"content":"Input: crt_getc.txt","pos":[4050,4069]},{"content":"Output","pos":[4118,4124]},{"content":".NET Framework Equivalent","pos":[4171,4196]},{"content":"System::IO::StreamReader::Read","pos":[4207,4237]},{"content":"System::Console::Read","pos":[4324,4345]},{"content":"See Also","pos":[4422,4430]},{"content":"Stream I/O","pos":[4435,4445]},{"content":"fgetc, fgetwc","pos":[4491,4504]},{"content":"_getch, _getwch","pos":[4562,4577]},{"content":"putc, putwc","pos":[4635,4646]},{"content":"ungetc, ungetwc","pos":[4702,4717]}],"content":"---\ntitle: \"getc, getwc | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"getwc\"\n  - \"getc\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-stdio-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_gettc\"\n  - \"getwc\"\n  - \"_gettchar\"\n  - \"getc\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"characters, reading\"\n  - \"_gettc function\"\n  - \"getwchar function\"\n  - \"streams, reading characters from\"\n  - \"reading characters from streams\"\n  - \"getc function\"\n  - \"getwc function\"\n  - \"gettc function\"\nms.assetid: 354ef514-d0c7-404b-92f5-995f6a834bb3\ncaps.latest.revision: 18\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# getc, getwc\nRead a character from a stream.  \n  \n## Syntax  \n  \n```  \nint getc(   \n   FILE *stream   \n);  \nwint_t getwc(   \n   FILE *stream   \n);  \n```  \n  \n#### Parameters  \n `stream`  \n Input stream.  \n  \n## Return Value  \n Returns the character read. To indicate a read error or end-of-file condition, `getc` returns `EOF`, and `getwc` returns `WEOF`. For `getc`, use `ferror` or `feof` to check for an error or for end of file. If `stream` is `NULL`, `getc` and `getwc` invoke the invalid parameter handler, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, these functions return `EOF` (or `WEOF` for`getwc`) and set `errno` to `EINVAL`.  \n  \n See [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md) for more information on these, and other, error codes.  \n  \n## Remarks  \n Each routine reads a single character from a file at the current position and increments the associated file pointer (if defined) to point to the next character. The file is associated with `stream`.  \n  \n These functions lock the calling thread and are therefore thread-safe. For a non-locking version, see [_getc_nolock, _getwc_nolock](../../c-runtime-library/reference/getc-nolock-getwc-nolock.md).  \n  \n Routine-specific remarks follow.  \n  \n|Routine|Remarks|  \n|-------------|-------------|  \n|`getc`|Same as `fgetc`, but implemented as a function and as a macro.|  \n|`getwc`|Wide-character version of `getc`. Reads a multibyte character or a wide character according to whether `stream` is opened in text mode or binary mode.|  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_gettc`|`getc`|`getc`|`getwc`|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`getc`|\\<stdio.h>|  \n|`getwc`|\\<stdio.h> or \\<wchar.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Example  \n  \n```  \n// crt_getc.c  \n// Use getc to read a line from a file.  \n  \n#include <stdio.h>  \n  \nint main()  \n{  \n    char buffer[81];  \n    int i, ch;  \n    FILE* fp;  \n  \n    // Read a single line from the file \"crt_getc.txt\".   \n  \n    fopen_s(&fp, \"crt_getc.txt\", \"r\");  \n    if (!fp)  \n    {  \n       printf(\"Failed to open file crt_getc.txt.\\n\");  \n       exit(1);  \n    }  \n  \n    for (i = 0; (i < 80) && ((ch = getc(fp)) != EOF)  \n                         && (ch != '\\n'); i++)  \n    {  \n        buffer[i] = (char) ch;  \n    }  \n  \n    // Terminate string with a null character   \n    buffer[i] = '\\0';  \n    printf( \"Input was: %s\\n\", buffer);  \n  \n    fclose(fp);  \n}  \n```  \n  \n## Input: crt_getc.txt  \n  \n```  \nLine one.  \nLine two.  \n```  \n  \n### Output  \n  \n```  \nInput was: Line one.  \n```  \n  \n## .NET Framework Equivalent  \n  \n-   [System::IO::StreamReader::Read](https://msdn.microsoft.com/en-us/library/system.io.streamreader.read.aspx)  \n  \n-   [System::Console::Read](https://msdn.microsoft.com/en-us/library/system.console.read.aspx)  \n  \n## See Also  \n [Stream I/O](../../c-runtime-library/stream-i-o.md)   \n [fgetc, fgetwc](../../c-runtime-library/reference/fgetc-fgetwc.md)   \n [_getch, _getwch](../../c-runtime-library/reference/getch-getwch.md)   \n [putc, putwc](../../c-runtime-library/reference/putc-putwc.md)   \n [ungetc, ungetwc](../../c-runtime-library/reference/ungetc-ungetwc.md)"}