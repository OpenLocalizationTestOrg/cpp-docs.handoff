{"nodes":[{"pos":[12,48],"content":"c16rtomb, c32rtomb1 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"c16rtomb, c32rtomb1 | Microsoft Docs","pos":[0,36]}]},{"pos":[1053,1071],"content":"c16rtomb, c32rtomb","linkify":"c16rtomb, c32rtomb","nodes":[{"content":"c16rtomb, c32rtomb","pos":[0,18]}]},{"content":"Convert a UTF-16 or UTF-32 wide character into a multibyte character in the current locale.","pos":[1072,1163]},{"pos":[1172,1178],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1384,1394],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[out] <ph id=\"ph1\">`mbchar`</ph>","pos":[1398,1412],"source":"[out] `mbchar`"},{"content":"Pointer to an array to store the multibyte converted character.","pos":[1416,1479]},{"content":"[in] <ph id=\"ph1\">`wchar`</ph>","pos":[1486,1498],"source":"[in] `wchar`"},{"content":"A wide character to convert.","pos":[1502,1530]},{"content":"[in, out] <ph id=\"ph1\">`state`</ph>","pos":[1537,1554],"source":"[in, out] `state`"},{"content":"A pointer to an <ph id=\"ph1\">`mbstate_t`</ph> object.","pos":[1558,1593],"source":" A pointer to an `mbstate_t` object."},{"pos":[1602,1614],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of bytes stored in array object <ph id=\"ph1\">`mbchar`</ph>, including any shift sequences.","pos":[1618,1701],"source":"The number of bytes stored in array object `mbchar`, including any shift sequences."},{"content":"If <ph id=\"ph1\">`wchar`</ph> is not a valid wide character, the value (<ph id=\"ph2\">`size_t`</ph>)(-1) is returned, <ph id=\"ph3\">`errno`</ph> is set to <ph id=\"ph4\">`EILSEQ`</ph>, and the value of <ph id=\"ph5\">`state`</ph> is unspecified.","pos":[1702,1850],"source":" If `wchar` is not a valid wide character, the value (`size_t`)(-1) is returned, `errno` is set to `EILSEQ`, and the value of `state` is unspecified."},{"pos":[1859,1866],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`c16rtomb`</ph> function converts the UTF-16 character <ph id=\"ph2\">`wchar`</ph> to the equivalent multibyte narrow character sequence in the current locale.","pos":[1870,2008],"source":"The `c16rtomb` function converts the UTF-16 character `wchar` to the equivalent multibyte narrow character sequence in the current locale."},{"content":"If <ph id=\"ph1\">`mbchar`</ph> is not a null pointer, the function stores the converted sequence in the array object pointed to by <ph id=\"ph2\">`mbchar`</ph>.","pos":[2009,2130],"source":" If `mbchar` is not a null pointer, the function stores the converted sequence in the array object pointed to by `mbchar`."},{"content":"Up to <ph id=\"ph1\">`MB_CUR_MAX`</ph> bytes are stored in <ph id=\"ph2\">`mbchar`</ph>, and <ph id=\"ph3\">`state`</ph> is set to the resulting multibyte shift state.","pos":[2131,2238],"source":" Up to `MB_CUR_MAX` bytes are stored in `mbchar`, and `state` is set to the resulting multibyte shift state."},{"content":"If <ph id=\"ph1\">`wchar`</ph> is a null wide character, a sequence required to restore the initial shift state is stored, if needed, followed by the null character, and <ph id=\"ph2\">`state`</ph> is set to the initial conversion state.","pos":[2242,2439],"source":"    If `wchar` is a null wide character, a sequence required to restore the initial shift state is stored, if needed, followed by the null character, and `state` is set to the initial conversion state."},{"content":"The <ph id=\"ph1\">`c32rtomb`</ph> function is identical, but converts a UTF-32 character.","pos":[2440,2510],"source":" The `c32rtomb` function is identical, but converts a UTF-32 character."},{"pos":[2517,2688],"content":"If <ph id=\"ph1\">`mbchar`</ph> is a null pointer, the behavior is equivalent to a call to the function that substitutes an internal buffer for <ph id=\"ph2\">`mbchar`</ph> and a wide null character for <ph id=\"ph3\">`wchar`</ph>.","source":"If `mbchar` is a null pointer, the behavior is equivalent to a call to the function that substitutes an internal buffer for `mbchar` and a wide null character for `wchar`."},{"content":"The <ph id=\"ph1\">`state`</ph> conversion state object allows you to make subsequent calls to this function and other restartable functions that maintain the shift state of the multibyte output characters.","pos":[2695,2881],"source":"The `state` conversion state object allows you to make subsequent calls to this function and other restartable functions that maintain the shift state of the multibyte output characters."},{"content":"Results are undefined when you mix the use of restartable and non-restartable functions, or if a call to <ph id=\"ph1\">`setlocale`</ph> is made between restartable function calls.","pos":[2882,3042],"source":" Results are undefined when you mix the use of restartable and non-restartable functions, or if a call to `setlocale` is made between restartable function calls."},{"pos":[3051,3063],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[3070,3077]},{"content":"Required header","pos":[3078,3093]},{"pos":[3138,3160],"content":"<ph id=\"ph1\">`c16rtomb`</ph>, <ph id=\"ph2\">`c32rtomb`</ph>","source":"`c16rtomb`, `c32rtomb`"},{"content":"C, C++: <ph id=\"ph1\">\\&lt;</ph>uchar.h&gt;","pos":[3161,3179],"source":"C, C++: \\<uchar.h>"},{"pos":[3187,3280],"content":"For compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[3289,3297],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Data Conversion<ept id=\"p1\">](../../c-runtime-library/data-conversion.md)</ept><ph id=\"ph1\"> </ph>","pos":[3301,3363],"source":"[Data Conversion](../../c-runtime-library/data-conversion.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Locale<ept id=\"p1\">](../../c-runtime-library/locale.md)</ept><ph id=\"ph1\"> </ph>","pos":[3366,3411],"source":" [Locale](../../c-runtime-library/locale.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Interpretation of Multibyte-Character Sequences<ept id=\"p1\">](../../c-runtime-library/interpretation-of-multibyte-character-sequences.md)</ept><ph id=\"ph1\"> </ph>","pos":[3414,3541],"source":" [Interpretation of Multibyte-Character Sequences](../../c-runtime-library/interpretation-of-multibyte-character-sequences.md) "},{"content":"<bpt id=\"p1\"> [</bpt>mbrtoc16, mbrtoc32<ept id=\"p1\">](../../c-runtime-library/reference/mbrtoc16-mbrtoc323.md)</ept><ph id=\"ph1\"> </ph>","pos":[3544,3623],"source":" [mbrtoc16, mbrtoc32](../../c-runtime-library/reference/mbrtoc16-mbrtoc323.md) "},{"content":"<bpt id=\"p1\"> [</bpt>wcrtomb<ept id=\"p1\">](../../c-runtime-library/reference/wcrtomb.md)</ept><ph id=\"ph1\"> </ph>","pos":[3626,3683],"source":" [wcrtomb](../../c-runtime-library/reference/wcrtomb.md) "},{"content":"<bpt id=\"p1\"> [</bpt>wcrtomb_s<ept id=\"p1\">](../../c-runtime-library/reference/wcrtomb-s.md)</ept>","pos":[3686,3746],"source":" [wcrtomb_s](../../c-runtime-library/reference/wcrtomb-s.md)"}],"content":"---\ntitle: \"c16rtomb, c32rtomb1 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"cpp\"\n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"c16rtomb\"\n  - \"c32rtomb\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-convert-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"c16rtomb\"\n  - \"c32rtomb\"\n  - \"uchar/c16rtomb\"\n  - \"uchar/c32rtomb\"\ndev_langs: \n  - \"C\"\n  - \"C++\"\nhelpviewer_keywords: \n  - \"c16rtomb function\"\n  - \"c32rtomb function\"\nms.assetid: 7f5743ca-a90e-4e3f-a310-c73e16f4e14d\ncaps.latest.revision: 3\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# c16rtomb, c32rtomb\nConvert a UTF-16 or UTF-32 wide character into a multibyte character in the current locale.  \n  \n## Syntax  \n  \n```  \nsize_t c16rtomb(  \n    char *mbchar,   \n    char16_t wchar,  \n    mbstate_t *state  \n);  \nsize_t c32rtomb(  \n    char *mbchar,   \n    char32_t wchar,  \n    mbstate_t *state  \n);  \n```  \n  \n#### Parameters  \n [out] `mbchar`  \n Pointer to an array to store the multibyte converted character.  \n  \n [in] `wchar`  \n A wide character to convert.  \n  \n [in, out] `state`  \n A pointer to an `mbstate_t` object.  \n  \n## Return Value  \n The number of bytes stored in array object `mbchar`, including any shift sequences. If `wchar` is not a valid wide character, the value (`size_t`)(-1) is returned, `errno` is set to `EILSEQ`, and the value of `state` is unspecified.  \n  \n## Remarks  \n The `c16rtomb` function converts the UTF-16 character `wchar` to the equivalent multibyte narrow character sequence in the current locale. If `mbchar` is not a null pointer, the function stores the converted sequence in the array object pointed to by `mbchar`. Up to `MB_CUR_MAX` bytes are stored in `mbchar`, and `state` is set to the resulting multibyte shift state.    If `wchar` is a null wide character, a sequence required to restore the initial shift state is stored, if needed, followed by the null character, and `state` is set to the initial conversion state. The `c32rtomb` function is identical, but converts a UTF-32 character.  \n  \n If `mbchar` is a null pointer, the behavior is equivalent to a call to the function that substitutes an internal buffer for `mbchar` and a wide null character for `wchar`.  \n  \n The `state` conversion state object allows you to make subsequent calls to this function and other restartable functions that maintain the shift state of the multibyte output characters. Results are undefined when you mix the use of restartable and non-restartable functions, or if a call to `setlocale` is made between restartable function calls.  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`c16rtomb`, `c32rtomb`|C, C++: \\<uchar.h>|  \n  \n For compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## See Also  \n [Data Conversion](../../c-runtime-library/data-conversion.md)   \n [Locale](../../c-runtime-library/locale.md)   \n [Interpretation of Multibyte-Character Sequences](../../c-runtime-library/interpretation-of-multibyte-character-sequences.md)   \n [mbrtoc16, mbrtoc32](../../c-runtime-library/reference/mbrtoc16-mbrtoc323.md)   \n [wcrtomb](../../c-runtime-library/reference/wcrtomb.md)   \n [wcrtomb_s](../../c-runtime-library/reference/wcrtomb-s.md)"}