{"nodes":[{"pos":[12,85],"content":"How to: Define an Interface Static Constructor (C++-CLI) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Define an Interface Static Constructor (C++-CLI) | Microsoft Docs","pos":[0,73]}]},{"content":"How to: Define an Interface Static Constructor (C++/CLI)","pos":[685,741]},{"content":"An interface can have a static constructor, which can be used to initialize static data members.","pos":[742,838]},{"content":"A static constructor will be called at most once, and will be called before the first time a static interface member is accessed.","pos":[840,969]},{"content":"Example","pos":[978,985]},{"content":"See Also","pos":[1598,1606]},{"content":"interface class","pos":[1611,1626]}],"content":"---\ntitle: \"How to: Define an Interface Static Constructor (C++-CLI) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"constructors [C++]\"\n  - \"static constructors, interface\"\n  - \"interface static constructor\"\nms.assetid: 1f031cb2-e94f-43dc-819b-44cf2faaaa49\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Define an Interface Static Constructor (C++/CLI)\nAn interface can have a static constructor, which can be used to initialize static data members.  A static constructor will be called at most once, and will be called before the first time a static interface member is accessed.  \n  \n## Example  \n  \n```  \n// mcppv2_interface_class2.cpp  \n// compile with: /clr  \nusing namespace System;  \n  \ninterface struct MyInterface {  \n   static int i;  \n   static void Test() {  \n      Console::WriteLine(i);  \n   }  \n  \n   static MyInterface() {   \n      Console::WriteLine(\"in MyInterface static constructor\");  \n      i = 99;  \n   }  \n};  \n  \nref class MyClass : public MyInterface {};  \n  \nint main() {  \n   MyInterface::Test();  \n   MyClass::MyInterface::Test();  \n  \n   MyInterface ^ mi = gcnew MyClass;  \n   mi->Test();  \n}  \n```  \n  \n```Output  \nin MyInterface static constructor  \n99  \n99  \n99  \n```  \n  \n## See Also  \n [interface class](../windows/interface-class-cpp-component-extensions.md)"}