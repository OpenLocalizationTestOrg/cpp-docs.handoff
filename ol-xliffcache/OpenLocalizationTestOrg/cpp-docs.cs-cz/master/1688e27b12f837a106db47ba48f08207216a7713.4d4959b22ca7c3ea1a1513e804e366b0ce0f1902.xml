{"nodes":[{"pos":[12,41],"content":"event_source | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"event_source | Microsoft Docs","pos":[0,29]}]},{"content":"event_source","pos":[809,821]},{"content":"Creates an event source.","pos":[822,846]},{"content":"Syntax","pos":[855,861]},{"content":"Parameters","pos":[990,1000]},{"content":"An enumeration of one of the following values:","pos":[1014,1060]},{"pos":[1079,1136],"content":"for unmanaged C/C++ code (default for unmanaged classes)."},{"content":"for COM code.","pos":[1152,1165]},{"content":"You must use <ph id=\"ph1\">`coclass`</ph> when <ph id=\"ph2\">`type`=`com`</ph>.","pos":[1166,1207],"source":" You must use `coclass` when `type`=`com`."},{"content":"This value requires that you include the following header files:","pos":[1208,1272]},{"pos":[1385,1641],"content":"**optimize**  \nWhen `type` is **native**, you can specify **optimize=size**, to indicate that there is 4 bytes of storage (minimum) for all events in a class or **optimize=speed** (the default) to indicate that there is 4 * (# of events) bytes of storage.","leadings":[""," "],"nodes":[{"content":"optimize","pos":[2,10]},{"content":"When <ph id=\"ph1\">`type`</ph> is <bpt id=\"p1\">**</bpt>native<ept id=\"p1\">**</ept>, you can specify <bpt id=\"p2\">**</bpt>optimize=size<ept id=\"p2\">**</ept>, to indicate that there is 4 bytes of storage (minimum) for all events in a class or <bpt id=\"p3\">**</bpt>optimize=speed<ept id=\"p3\">**</ept> (the default) to indicate that there is 4 * (# of events) bytes of storage.","pos":[15,255],"source":"When `type` is **native**, you can specify **optimize=size**, to indicate that there is 4 bytes of storage (minimum) for all events in a class or **optimize=speed** (the default) to indicate that there is 4 * (# of events) bytes of storage."}]},{"pos":[1648,2014],"content":"**decorate**  \nWhen `type` is **native**, you can specify **decorate=false**, to indicate that the expanded name in the merged (.mrg) file should not include the enclosing class name. [/Fx](../build/reference/fx-merge-injected-code.md) lets you generate .mrg files. **decorate=false**, which is the default, results in fully-qualified type names in the merged file.","leadings":[""," "],"nodes":[{"content":"decorate","pos":[2,10]},{"content":"When `type` is **native**, you can specify **decorate=false**, to indicate that the expanded name in the merged (.mrg) file should not include the enclosing class name. [/Fx](../build/reference/fx-merge-injected-code.md) lets you generate .mrg files. **decorate=false**, which is the default, results in fully-qualified type names in the merged file.","pos":[15,365],"nodes":[{"content":"When <ph id=\"ph1\">`type`</ph> is <bpt id=\"p1\">**</bpt>native<ept id=\"p1\">**</ept>, you can specify <bpt id=\"p2\">**</bpt>decorate=false<ept id=\"p2\">**</ept>, to indicate that the expanded name in the merged (.mrg) file should not include the enclosing class name.","pos":[0,168],"source":"When `type` is **native**, you can specify **decorate=false**, to indicate that the expanded name in the merged (.mrg) file should not include the enclosing class name."},{"content":"<bpt id=\"p1\">[</bpt>/Fx<ept id=\"p1\">](../build/reference/fx-merge-injected-code.md)</ept> lets you generate .mrg files.","pos":[169,250],"source":"[/Fx](../build/reference/fx-merge-injected-code.md) lets you generate .mrg files."},{"content":"<bpt id=\"p1\">**</bpt>decorate=false<ept id=\"p1\">**</ept>, which is the default, results in fully-qualified type names in the merged file.","pos":[251,350],"source":"**decorate=false**, which is the default, results in fully-qualified type names in the merged file."}]}]},{"content":"Remarks","pos":[2023,2030]},{"pos":[2034,2154],"content":"The <bpt id=\"p1\">**</bpt>event_source<ept id=\"p1\">**</ept> C++ attribute specifies that the class or structure to which it is applied will be an event source.","source":"The **event_source** C++ attribute specifies that the class or structure to which it is applied will be an event source."},{"content":"<bpt id=\"p1\">**</bpt>event_source<ept id=\"p1\">**</ept> is used in conjunction with the <bpt id=\"p2\">[</bpt>event_receiver<ept id=\"p2\">](../windows/event-receiver.md)</ept> attribute and the <bpt id=\"p3\">[</bpt>__event<ept id=\"p3\">](../cpp/event.md)</ept> keyword.","pos":[2161,2310],"source":"**event_source** is used in conjunction with the [event_receiver](../windows/event-receiver.md) attribute and the [__event](../cpp/event.md) keyword."},{"content":"Use <bpt id=\"p1\">**</bpt>event_receiver<ept id=\"p1\">**</ept> to create event receivers.","pos":[2311,2360],"source":" Use **event_receiver** to create event receivers."},{"content":"Use <ph id=\"ph1\">`__event`</ph> on methods within the event source to specify those methods as events.","pos":[2361,2445],"source":" Use `__event` on methods within the event source to specify those methods as events."},{"pos":[2453,2514],"content":"[!NOTE]\n A templated class or struct cannot contain events.","leadings":["","> "],"nodes":[{"content":"A templated class or struct cannot contain events.","pos":[9,59]}]},{"content":"Requirements","pos":[2523,2535]},{"content":"Attribute Context","pos":[2545,2562]},{"content":"Applies to","pos":[2585,2595]},{"pos":[2598,2608],"content":"<bpt id=\"p1\">**</bpt>class<ept id=\"p1\">**</ept>,","source":"**class**, "},{"content":"Repeatable","pos":[2624,2634]},{"content":"No","pos":[2637,2639]},{"content":"Required attributes","pos":[2646,2665]},{"pos":[2668,2699],"content":"<bpt id=\"p1\">**</bpt>coclass<ept id=\"p1\">**</ept> when <ph id=\"ph1\">`type`=</ph><bpt id=\"p2\">**</bpt>com<ept id=\"p2\">**</ept>","source":"**coclass** when `type`=**com**"},{"content":"Invalid attributes","pos":[2706,2724]},{"content":"None","pos":[2727,2731]},{"pos":[2739,2820],"content":"For more information, see <bpt id=\"p1\">[</bpt>Attribute Contexts<ept id=\"p1\">](../windows/attribute-contexts.md)</ept>.","source":"For more information, see [Attribute Contexts](../windows/attribute-contexts.md)."},{"content":"See Also","pos":[2829,2837]},{"content":"Compiler Attributes","pos":[2842,2861]},{"content":"event_receiver","pos":[2903,2917]},{"content":"__event","pos":[2954,2961]},{"content":"__hook","pos":[2985,2991]},{"content":"__unhook","pos":[3014,3022]},{"content":"Class Attributes","pos":[3047,3063]},{"content":"Attributes Samples","pos":[3102,3120]}],"content":"---\ntitle: \"event_source | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"vc-attr.event_source\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"event handling, attributes\"\n  - \"event logs, event source\"\n  - \"event sources, creating\"\n  - \"event_source attribute\"\n  - \"event sources\"\n  - \"event handling, creating event source\"\nms.assetid: 0983e36a-6127-4fbb-8a22-8dfec6564c16\ncaps.latest.revision: 13\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# event_source\nCreates an event source.  \n  \n## Syntax  \n  \n```  \n  \n      [ event_source(  \n   type,  \n   optimize=[speed | size],  \n   decorate=[true | false]  \n) ]  \n```  \n  \n#### Parameters  \n `type`  \n An enumeration of one of the following values:  \n  \n-   `native` for unmanaged C/C++ code (default for unmanaged classes).  \n  \n-   `com` for COM code. You must use `coclass` when `type`=`com`. This value requires that you include the following header files:  \n  \n    ```  \n    #define _ATL_ATTRIBUTES  \n    #include <atlbase.h>  \n    #include <atlcom.h>  \n    ```  \n  \n **optimize**  \n When `type` is **native**, you can specify **optimize=size**, to indicate that there is 4 bytes of storage (minimum) for all events in a class or **optimize=speed** (the default) to indicate that there is 4 * (# of events) bytes of storage.  \n  \n **decorate**  \n When `type` is **native**, you can specify **decorate=false**, to indicate that the expanded name in the merged (.mrg) file should not include the enclosing class name. [/Fx](../build/reference/fx-merge-injected-code.md) lets you generate .mrg files. **decorate=false**, which is the default, results in fully-qualified type names in the merged file.  \n  \n## Remarks  \n The **event_source** C++ attribute specifies that the class or structure to which it is applied will be an event source.  \n  \n **event_source** is used in conjunction with the [event_receiver](../windows/event-receiver.md) attribute and the [__event](../cpp/event.md) keyword. Use **event_receiver** to create event receivers. Use `__event` on methods within the event source to specify those methods as events.  \n  \n> [!NOTE]\n>  A templated class or struct cannot contain events.  \n  \n## Requirements  \n  \n### Attribute Context  \n  \n|||  \n|-|-|  \n|**Applies to**|**class**, `struct`|  \n|**Repeatable**|No|  \n|**Required attributes**|**coclass** when `type`=**com**|  \n|**Invalid attributes**|None|  \n  \n For more information, see [Attribute Contexts](../windows/attribute-contexts.md).  \n  \n## See Also  \n [Compiler Attributes](../windows/compiler-attributes.md)   \n [event_receiver](../windows/event-receiver.md)   \n [__event](../cpp/event.md)   \n [__hook](../cpp/hook.md)   \n [__unhook](../cpp/unhook.md)   \n [Class Attributes](../windows/class-attributes.md)   \n [Attributes Samples](http://msdn.microsoft.com/en-us/558ebdb2-082f-44dc-b442-d8d33bf7bdb8)"}