{"nodes":[{"pos":[12,48],"content":"COleServerDoc Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"COleServerDoc Class | Microsoft Docs","pos":[0,36]}]},{"pos":[819,838],"content":"COleServerDoc Class","linkify":"COleServerDoc Class","nodes":[{"content":"COleServerDoc Class","pos":[0,19]}]},{"content":"The base class for OLE server documents.","pos":[839,879]},{"pos":[888,894],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[977,984],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[994,1013],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[1020,1024]},{"content":"Description","pos":[1025,1036]},{"pos":[1074,1135],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::COleServerDoc<ept id=\"p1\">](#coleserverdoc__coleserverdoc)</ept>","source":"[COleServerDoc::COleServerDoc](#coleserverdoc__coleserverdoc)"},{"pos":[1136,1172],"content":"Constructs a <ph id=\"ph1\">`COleServerDoc`</ph> object.","source":"Constructs a `COleServerDoc` object."},{"pos":[1183,1197],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1204,1208]},{"content":"Description","pos":[1209,1220]},{"pos":[1258,1327],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::ActivateDocObject<ept id=\"p1\">](#coleserverdoc__activatedocobject)</ept>","source":"[COleServerDoc::ActivateDocObject](#coleserverdoc__activatedocobject)"},{"content":"Activates the associated DocObject document.","pos":[1328,1372]},{"pos":[1377,1442],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::ActivateInPlace<ept id=\"p1\">](#coleserverdoc__activateinplace)</ept>","source":"[COleServerDoc::ActivateInPlace](#coleserverdoc__activateinplace)"},{"content":"Activates the document for in-place editing.","pos":[1443,1487]},{"pos":[1492,1561],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::DeactivateAndUndo<ept id=\"p1\">](#coleserverdoc__deactivateandundo)</ept>","source":"[COleServerDoc::DeactivateAndUndo](#coleserverdoc__deactivateandundo)"},{"content":"Deactivates the server's user interface.","pos":[1562,1602]},{"pos":[1607,1674],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::DiscardUndoState<ept id=\"p1\">](#coleserverdoc__discardundostate)</ept>","source":"[COleServerDoc::DiscardUndoState](#coleserverdoc__discardundostate)"},{"content":"Discards undo-state information.","pos":[1675,1707]},{"pos":[1712,1773],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::GetClientSite<ept id=\"p1\">](#coleserverdoc__getclientsite)</ept>","source":"[COleServerDoc::GetClientSite](#coleserverdoc__getclientsite)"},{"pos":[1774,1839],"content":"Retrieves a pointer to the underlying <ph id=\"ph1\">`IOleClientSite`</ph> interface.","source":"Retrieves a pointer to the underlying `IOleClientSite` interface."},{"pos":[1844,1909],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::GetEmbeddedItem<ept id=\"p1\">](#coleserverdoc__getembeddeditem)</ept>","source":"[COleServerDoc::GetEmbeddedItem](#coleserverdoc__getembeddeditem)"},{"content":"Returns a pointer to an item representing the entire document.","pos":[1910,1972]},{"pos":[1977,2042],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::GetItemClipRect<ept id=\"p1\">](#coleserverdoc__getitemcliprect)</ept>","source":"[COleServerDoc::GetItemClipRect](#coleserverdoc__getitemcliprect)"},{"content":"Returns the current clipping rectangle for in-place editing.","pos":[2043,2103]},{"pos":[2108,2173],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::GetItemPosition<ept id=\"p1\">](#coleserverdoc__getitemposition)</ept>","source":"[COleServerDoc::GetItemPosition](#coleserverdoc__getitemposition)"},{"content":"Returns the current position rectangle, relative to the container application's client area, for in-place editing.","pos":[2174,2288]},{"pos":[2293,2354],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::GetZoomFactor<ept id=\"p1\">](#coleserverdoc__getzoomfactor)</ept>","source":"[COleServerDoc::GetZoomFactor](#coleserverdoc__getzoomfactor)"},{"content":"Returns the zoom factor in pixels.","pos":[2355,2389]},{"pos":[2394,2451],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::IsDocObject<ept id=\"p1\">](#coleserverdoc__isdocobject)</ept>","source":"[COleServerDoc::IsDocObject](#coleserverdoc__isdocobject)"},{"content":"Determines if the document is a DocObject.","pos":[2452,2494]},{"pos":[2499,2554],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::IsEmbedded<ept id=\"p1\">](#coleserverdoc__isembedded)</ept>","source":"[COleServerDoc::IsEmbedded](#coleserverdoc__isembedded)"},{"content":"Indicates whether the document is embedded in a container document or running stand-alone.","pos":[2555,2645]},{"pos":[2650,2715],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::IsInPlaceActive<ept id=\"p1\">](#coleserverdoc__isinplaceactive)</ept>","source":"[COleServerDoc::IsInPlaceActive](#coleserverdoc__isinplaceactive)"},{"pos":[2716,2775],"content":"Returns <ph id=\"ph1\">`TRUE`</ph> if the item is currently activated in place.","source":"Returns `TRUE` if the item is currently activated in place."},{"pos":[2780,2841],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::NotifyChanged<ept id=\"p1\">](#coleserverdoc__notifychanged)</ept>","source":"[COleServerDoc::NotifyChanged](#coleserverdoc__notifychanged)"},{"content":"Notifies containers that the user has changed the document.","pos":[2842,2901]},{"pos":[2906,2965],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::NotifyClosed<ept id=\"p1\">](#coleserverdoc__notifyclosed)</ept>","source":"[COleServerDoc::NotifyClosed](#coleserverdoc__notifyclosed)"},{"content":"Notifies containers that the user has closed the document.","pos":[2966,3024]},{"pos":[3029,3088],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::NotifyRename<ept id=\"p1\">](#coleserverdoc__notifyrename)</ept>","source":"[COleServerDoc::NotifyRename](#coleserverdoc__notifyrename)"},{"content":"Notifies containers that the user has renamed the document.","pos":[3089,3148]},{"pos":[3153,3210],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::NotifySaved<ept id=\"p1\">](#coleserverdoc__notifysaved)</ept>","source":"[COleServerDoc::NotifySaved](#coleserverdoc__notifysaved)"},{"content":"Notifies containers that the user has saved the document.","pos":[3211,3268]},{"pos":[3273,3332],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::OnDeactivate<ept id=\"p1\">](#coleserverdoc__ondeactivate)</ept>","source":"[COleServerDoc::OnDeactivate](#coleserverdoc__ondeactivate)"},{"content":"Called by the framework when the user deactivates an item that was activated in place.","pos":[3333,3419]},{"pos":[3424,3487],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::OnDeactivateUI<ept id=\"p1\">](#coleserverdoc__ondeactivateui)</ept>","source":"[COleServerDoc::OnDeactivateUI](#coleserverdoc__ondeactivateui)"},{"content":"Called by the framework to destroy controls and other user-interface elements created for in-place activation.","pos":[3488,3598]},{"pos":[3603,3676],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::OnDocWindowActivate<ept id=\"p1\">](#coleserverdoc__ondocwindowactivate)</ept>","source":"[COleServerDoc::OnDocWindowActivate](#coleserverdoc__ondocwindowactivate)"},{"content":"Called by the framework when the container's document frame window is activated or deactivated.","pos":[3677,3772]},{"pos":[3777,3840],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::OnResizeBorder<ept id=\"p1\">](#coleserverdoc__onresizeborder)</ept>","source":"[COleServerDoc::OnResizeBorder](#coleserverdoc__onresizeborder)"},{"content":"Called by the framework when the container application's frame window or document window is resized.","pos":[3841,3941]},{"pos":[3946,4015],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::OnShowControlBars<ept id=\"p1\">](#coleserverdoc__onshowcontrolbars)</ept>","source":"[COleServerDoc::OnShowControlBars](#coleserverdoc__onshowcontrolbars)"},{"content":"Called by the framework to show or hide control bars for in-place editing.","pos":[4016,4090]},{"pos":[4095,4162],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::OnUpdateDocument<ept id=\"p1\">](#coleserverdoc__onupdatedocument)</ept>","source":"[COleServerDoc::OnUpdateDocument](#coleserverdoc__onupdatedocument)"},{"content":"Called by the framework when a server document that is an embedded item is saved, updating the container's copy of the item.","pos":[4163,4287]},{"pos":[4292,4369],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::RequestPositionChange<ept id=\"p1\">](#coleserverdoc__requestpositionchange)</ept>","source":"[COleServerDoc::RequestPositionChange](#coleserverdoc__requestpositionchange)"},{"content":"Changes the position of the in-place editing frame.","pos":[4370,4421]},{"pos":[4426,4487],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::SaveEmbedding<ept id=\"p1\">](#coleserverdoc__saveembedding)</ept>","source":"[COleServerDoc::SaveEmbedding](#coleserverdoc__saveembedding)"},{"content":"Tells the container application to save the document.","pos":[4488,4541]},{"pos":[4546,4615],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::ScrollContainerBy<ept id=\"p1\">](#coleserverdoc__scrollcontainerby)</ept>","source":"[COleServerDoc::ScrollContainerBy](#coleserverdoc__scrollcontainerby)"},{"content":"Scrolls the container document.","pos":[4616,4647]},{"pos":[4652,4715],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::UpdateAllItems<ept id=\"p1\">](#coleserverdoc__updateallitems)</ept>","source":"[COleServerDoc::UpdateAllItems](#coleserverdoc__updateallitems)"},{"content":"Notifies containers that the user has changed the document.","pos":[4716,4775]},{"pos":[4786,4803],"content":"Protected Methods","linkify":"Protected Methods","nodes":[{"content":"Protected Methods","pos":[0,17]}]},{"content":"Name","pos":[4810,4814]},{"content":"Description","pos":[4815,4826]},{"pos":[4864,4935],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::CreateInPlaceFrame<ept id=\"p1\">](#coleserverdoc__createinplaceframe)</ept>","source":"[COleServerDoc::CreateInPlaceFrame](#coleserverdoc__createinplaceframe)"},{"content":"Called by the framework to create a frame window for in-place editing.","pos":[4936,5006]},{"pos":[5011,5084],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::DestroyInPlaceFrame<ept id=\"p1\">](#coleserverdoc__destroyinplaceframe)</ept>","source":"[COleServerDoc::DestroyInPlaceFrame](#coleserverdoc__destroyinplaceframe)"},{"content":"Called by the framework to destroy a frame window for in-place editing.","pos":[5085,5156]},{"pos":[5161,5232],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::GetDocObjectServer<ept id=\"p1\">](#coleserverdoc__getdocobjectserver)</ept>","source":"[COleServerDoc::GetDocObjectServer](#coleserverdoc__getdocobjectserver)"},{"pos":[5233,5355],"content":"Override this function to create a new <ph id=\"ph1\">`CDocObjectServer`</ph> object and indicate that this document is a DocObject container.","source":"Override this function to create a new `CDocObjectServer` object and indicate that this document is a DocObject container."},{"pos":[5360,5409],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::OnClose<ept id=\"p1\">](#coleserverdoc__onclose)</ept>","source":"[COleServerDoc::OnClose](#coleserverdoc__onclose)"},{"content":"Called by the framework when a container requests to close the document.","pos":[5410,5482]},{"pos":[5487,5546],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::OnExecOleCmd<ept id=\"p1\">](#coleserverdoc__onexecolecmd)</ept>","source":"[COleServerDoc::OnExecOleCmd](#coleserverdoc__onexecolecmd)"},{"content":"Executes a specified command or displays help for the command.","pos":[5547,5609]},{"pos":[5614,5691],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::OnFrameWindowActivate<ept id=\"p1\">](#coleserverdoc__onframewindowactivate)</ept>","source":"[COleServerDoc::OnFrameWindowActivate](#coleserverdoc__onframewindowactivate)"},{"content":"Called by the framework when the container's frame window is activated or deactivated.","pos":[5692,5778]},{"pos":[5783,5852],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::OnGetEmbeddedItem<ept id=\"p1\">](#coleserverdoc__ongetembeddeditem)</ept>","source":"[COleServerDoc::OnGetEmbeddedItem](#coleserverdoc__ongetembeddeditem)"},{"content":"Called to get a <ph id=\"ph1\">`COleServerItem`</ph> that represents the entire document; used to get an embedded item.","pos":[5853,5952],"source":"Called to get a `COleServerItem` that represents the entire document; used to get an embedded item."},{"content":"Implementation required.","pos":[5953,5977]},{"pos":[5982,6055],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::OnReactivateAndUndo<ept id=\"p1\">](#coleserverdoc__onreactivateandundo)</ept>","source":"[COleServerDoc::OnReactivateAndUndo](#coleserverdoc__onreactivateandundo)"},{"content":"Called by the framework to undo changes made during in-place editing.","pos":[6056,6125]},{"pos":[6130,6193],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::OnSetHostNames<ept id=\"p1\">](#coleserverdoc__onsethostnames)</ept>","source":"[COleServerDoc::OnSetHostNames](#coleserverdoc__onsethostnames)"},{"content":"Called by the framework when a container sets the window title for an embedded object.","pos":[6194,6280]},{"pos":[6285,6348],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::OnSetItemRects<ept id=\"p1\">](#coleserverdoc__onsetitemrects)</ept>","source":"[COleServerDoc::OnSetItemRects](#coleserverdoc__onsetitemrects)"},{"content":"Called by the framework to position the in-place editing frame window within the container application's window.","pos":[6349,6461]},{"pos":[6466,6529],"content":"<bpt id=\"p1\">[</bpt>COleServerDoc::OnShowDocument<ept id=\"p1\">](#coleserverdoc__onshowdocument)</ept>","source":"[COleServerDoc::OnShowDocument](#coleserverdoc__onshowdocument)"},{"content":"Called by the framework to show or hide the document.","pos":[6530,6583]},{"pos":[6593,6600],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A server document can contain <bpt id=\"p1\">[</bpt>COleServerItem<ept id=\"p1\">](../../mfc/reference/coleserveritem-class.md)</ept> objects, which represent the server interface to embedded or linked items.","pos":[6604,6770],"source":"A server document can contain [COleServerItem](../../mfc/reference/coleserveritem-class.md) objects, which represent the server interface to embedded or linked items."},{"content":"When a server application is launched by a container to edit an embedded item, the item is loaded as its own server document; the <ph id=\"ph1\">`COleServerDoc`</ph> object contains just one <ph id=\"ph2\">`COleServerItem`</ph> object, consisting of the entire document.","pos":[6771,7001],"source":" When a server application is launched by a container to edit an embedded item, the item is loaded as its own server document; the `COleServerDoc` object contains just one `COleServerItem` object, consisting of the entire document."},{"content":"When a server application is launched by a container to edit a linked item, an existing document is loaded from disk; a portion of the document's contents is highlighted to indicate the linked item.","pos":[7002,7200]},{"content":"<ph id=\"ph1\">`COleServerDoc`</ph> objects can also contain items of the <bpt id=\"p1\">[</bpt>COleClientItem<ept id=\"p1\">](../../mfc/reference/coleclientitem-class.md)</ept> class.","pos":[7207,7329],"source":"`COleServerDoc` objects can also contain items of the [COleClientItem](../../mfc/reference/coleclientitem-class.md) class."},{"content":"This allows you to create container-server applications.","pos":[7330,7386]},{"content":"The framework provides functions to properly store the <ph id=\"ph1\">`COleClientItem`</ph> items while servicing the <ph id=\"ph2\">`COleServerItem`</ph> objects.","pos":[7387,7510],"source":" The framework provides functions to properly store the `COleClientItem` items while servicing the `COleServerItem` objects."},{"content":"If your server application does not support links, a server document will always contain only one server item, which represents the entire embedded object as a document.","pos":[7517,7686]},{"content":"If your server application does support links, it must create a server item each time a selection is copied to the Clipboard.","pos":[7687,7812]},{"content":"To use <ph id=\"ph1\">`COleServerDoc`</ph>, derive a class from it and implement the <bpt id=\"p1\">[</bpt>OnGetEmbeddedItem<ept id=\"p1\">](#coleserverdoc__ongetembeddeditem)</ept> member function, which allows your server to support embedded items.","pos":[7819,8007],"source":"To use `COleServerDoc`, derive a class from it and implement the [OnGetEmbeddedItem](#coleserverdoc__ongetembeddeditem) member function, which allows your server to support embedded items."},{"content":"Derive a class from <ph id=\"ph1\">`COleServerItem`</ph> to implement the items in your documents, and return objects of that class from <ph id=\"ph2\">`OnGetEmbeddedItem`</ph>.","pos":[8008,8145],"source":" Derive a class from `COleServerItem` to implement the items in your documents, and return objects of that class from `OnGetEmbeddedItem`."},{"content":"To support linked items, <ph id=\"ph1\">`COleServerDoc`</ph> provides the <bpt id=\"p1\">[</bpt>OnGetLinkedItem<ept id=\"p1\">](../../mfc/reference/colelinkingdoc-class.md#colelinkingdoc__ongetlinkeditem)</ept> member function.","pos":[8152,8317],"source":"To support linked items, `COleServerDoc` provides the [OnGetLinkedItem](../../mfc/reference/colelinkingdoc-class.md#colelinkingdoc__ongetlinkeditem) member function."},{"content":"You can use the default implementation or override it if you have your own way of managing document items.","pos":[8318,8424]},{"content":"You need one <ph id=\"ph1\">`COleServerDoc`</ph>-derived class for each type of server document your application supports.","pos":[8431,8533],"source":"You need one `COleServerDoc`-derived class for each type of server document your application supports."},{"content":"For example, if your server application supports worksheets and charts, you need two <ph id=\"ph1\">`COleServerDoc`</ph>-derived classes.","pos":[8534,8651],"source":" For example, if your server application supports worksheets and charts, you need two `COleServerDoc`-derived classes."},{"pos":[8658,8784],"content":"For more information on servers, see the article <bpt id=\"p1\">[</bpt>Servers: Implementing a Server<ept id=\"p1\">](../../mfc/servers-implementing-a-server.md)</ept>.","source":"For more information on servers, see the article [Servers: Implementing a Server](../../mfc/servers-implementing-a-server.md)."},{"pos":[8793,8814],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[8818,8865],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[8872,8925],"content":"<bpt id=\"p1\">[</bpt>CCmdTarget<ept id=\"p1\">](../../mfc/reference/ccmdtarget-class.md)</ept>","source":"[CCmdTarget](../../mfc/reference/ccmdtarget-class.md)"},{"pos":[8932,8983],"content":"<bpt id=\"p1\">[</bpt>CDocument<ept id=\"p1\">](../../mfc/reference/cdocument-class.md)</ept>","source":"[CDocument](../../mfc/reference/cdocument-class.md)"},{"pos":[8990,9047],"content":"<bpt id=\"p1\">[</bpt>COleDocument<ept id=\"p1\">](../../mfc/reference/coledocument-class.md)</ept>","source":"[COleDocument](../../mfc/reference/coledocument-class.md)"},{"pos":[9054,9115],"content":"<bpt id=\"p1\">[</bpt>COleLinkingDoc<ept id=\"p1\">](../../mfc/reference/colelinkingdoc-class.md)</ept>","source":"[COleLinkingDoc](../../mfc/reference/colelinkingdoc-class.md)"},{"pos":[9146,9158],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[9162,9182],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxole.h","source":"**Header:** afxole.h"},{"pos":[9192,9273],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__activatedocobject\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::ActivateDocObject","linkify":"<a name=\"coleserverdoc__activatedocobject\"></a>  COleServerDoc::ActivateDocObject","source":"<a name=\"coleserverdoc__activatedocobject\"></a>  COleServerDoc::ActivateDocObject"},{"content":"Activates the associated DocObject document.","pos":[9277,9321]},{"pos":[9372,9379],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"By default, <ph id=\"ph1\">`COleServerDoc`</ph> does not support Active documents (also referred to as DocObjects).","pos":[9383,9478],"source":"By default, `COleServerDoc` does not support Active documents (also referred to as DocObjects)."},{"content":"To enable this support, see <bpt id=\"p1\">[</bpt>GetDocObjectServer<ept id=\"p1\">](#coleserverdoc__getdocobjectserver)</ept> and class <bpt id=\"p2\">[</bpt>CDocObjectServer<ept id=\"p2\">](../../mfc/reference/cdocobjectserver-class.md)</ept>.","pos":[9479,9640],"source":" To enable this support, see [GetDocObjectServer](#coleserverdoc__getdocobjectserver) and class [CDocObjectServer](../../mfc/reference/cdocobjectserver-class.md)."},{"pos":[9650,9727],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__activateinplace\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::ActivateInPlace","linkify":"<a name=\"coleserverdoc__activateinplace\"></a>  COleServerDoc::ActivateInPlace","source":"<a name=\"coleserverdoc__activateinplace\"></a>  COleServerDoc::ActivateInPlace"},{"content":"Activates the item for in-place editing.","pos":[9731,9771]},{"pos":[9820,9832],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful; otherwise 0, which indicates that the item is fully open.","pos":[9836,9916]},{"pos":[9926,9933],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function performs all operations necessary for in-place activation.","pos":[9937,10009]},{"content":"It creates an in-place frame window, activates it and sizes it to the item, sets up shared menus and other controls, scrolls the item into view, and sets the focus to the in-place frame window.","pos":[10010,10203]},{"content":"This function is called by the default implementation of <bpt id=\"p1\">[</bpt>COleServerItem::OnShow<ept id=\"p1\">](../../mfc/reference/coleserveritem-class.md#coleserveritem__onshow)</ept>.","pos":[10210,10360],"source":"This function is called by the default implementation of [COleServerItem::OnShow](../../mfc/reference/coleserveritem-class.md#coleserveritem__onshow)."},{"content":"Call this function if your application supports another verb for in-place activation (such as Play).","pos":[10361,10461]},{"pos":[10471,10544],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__coleserverdoc\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::COleServerDoc","linkify":"<a name=\"coleserverdoc__coleserverdoc\"></a>  COleServerDoc::COleServerDoc","source":"<a name=\"coleserverdoc__coleserverdoc\"></a>  COleServerDoc::COleServerDoc"},{"pos":[10548,10628],"content":"Constructs a <ph id=\"ph1\">`COleServerDoc`</ph> object without connecting with the OLE system DLLs.","source":"Constructs a `COleServerDoc` object without connecting with the OLE system DLLs."},{"pos":[10670,10677],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You must call <bpt id=\"p1\">[</bpt>COleLinkingDoc::Register<ept id=\"p1\">](../../mfc/reference/colelinkingdoc-class.md#colelinkingdoc__register)</ept> to open communications with OLE.","pos":[10681,10824],"source":"You must call [COleLinkingDoc::Register](../../mfc/reference/colelinkingdoc-class.md#colelinkingdoc__register) to open communications with OLE."},{"content":"If you are using <bpt id=\"p1\">[</bpt>COleTemplateServer<ept id=\"p1\">](../../mfc/reference/coletemplateserver-class.md)</ept> in your application, <ph id=\"ph1\">`COleLinkingDoc::Register`</ph> is called for you by <ph id=\"ph2\">`COleLinkingDoc`</ph>'s implementation of <ph id=\"ph3\">`OnNewDocument`</ph>, <ph id=\"ph4\">`OnOpenDocument`</ph>, and <ph id=\"ph5\">`OnSaveDocument`</ph>.","pos":[10825,11074],"source":" If you are using [COleTemplateServer](../../mfc/reference/coletemplateserver-class.md) in your application, `COleLinkingDoc::Register` is called for you by `COleLinkingDoc`'s implementation of `OnNewDocument`, `OnOpenDocument`, and `OnSaveDocument`."},{"pos":[11084,11167],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__createinplaceframe\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::CreateInPlaceFrame","linkify":"<a name=\"coleserverdoc__createinplaceframe\"></a>  COleServerDoc::CreateInPlaceFrame","source":"<a name=\"coleserverdoc__createinplaceframe\"></a>  COleServerDoc::CreateInPlaceFrame"},{"content":"The framework calls this function to create a frame window for in-place editing.","pos":[11171,11251]},{"pos":[11338,11348],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to the container application's parent window.","pos":[11368,11421]},{"pos":[11431,11443],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[11447,11515],"content":"A pointer to the in-place frame window, or <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> if unsuccessful.","source":"A pointer to the in-place frame window, or **NULL** if unsuccessful."},{"pos":[11525,11532],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The default implementation uses information specified in the document template to create the frame.","pos":[11536,11635]},{"content":"The view used is the first view created for the document.","pos":[11636,11693]},{"content":"This view is temporarily detached from the original frame and attached to the newly created frame.","pos":[11694,11792]},{"content":"This is an advanced overridable.","pos":[11799,11831]},{"pos":[11841,11922],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__deactivateandundo\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::DeactivateAndUndo","linkify":"<a name=\"coleserverdoc__deactivateandundo\"></a>  COleServerDoc::DeactivateAndUndo","source":"<a name=\"coleserverdoc__deactivateandundo\"></a>  COleServerDoc::DeactivateAndUndo"},{"content":"Call this function if your application supports Undo and the user chooses Undo after activating an item but before editing it.","pos":[11926,12052]},{"pos":[12103,12115],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero on success; otherwise 0.","pos":[12119,12151]},{"pos":[12161,12168],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12172,12466],"content":"If the container application is written using the Microsoft Foundation Class Library, calling this function causes <bpt id=\"p1\">[</bpt>COleClientItem::OnDeactivateAndUndo<ept id=\"p1\">](../../mfc/reference/coleclientitem-class.md#coleclientitem__ondeactivateandundo)</ept> to be called, which deactivates the server's user interface.","source":"If the container application is written using the Microsoft Foundation Class Library, calling this function causes [COleClientItem::OnDeactivateAndUndo](../../mfc/reference/coleclientitem-class.md#coleclientitem__ondeactivateandundo) to be called, which deactivates the server's user interface."},{"pos":[12476,12561],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__destroyinplaceframe\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::DestroyInPlaceFrame","linkify":"<a name=\"coleserverdoc__destroyinplaceframe\"></a>  COleServerDoc::DestroyInPlaceFrame","source":"<a name=\"coleserverdoc__destroyinplaceframe\"></a>  COleServerDoc::DestroyInPlaceFrame"},{"content":"The framework calls this function to destroy an in-place frame window and return the server application's document window to its state before in-place activation.","pos":[12565,12727]},{"pos":[12813,12823],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to the in-place frame window to be destroyed.","pos":[12842,12895]},{"pos":[12905,12912],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is an advanced overridable.","pos":[12916,12948]},{"pos":[12958,13037],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__discardundostate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::DiscardUndoState","linkify":"<a name=\"coleserverdoc__discardundostate\"></a>  COleServerDoc::DiscardUndoState","source":"<a name=\"coleserverdoc__discardundostate\"></a>  COleServerDoc::DiscardUndoState"},{"content":"If the user performs an editing operation that cannot be undone, call this function to force the container application to discard its undo-state information.","pos":[13041,13198]},{"pos":[13248,13260],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero on success; otherwise 0.","pos":[13264,13296]},{"pos":[13306,13313],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function is provided so that servers that support Undo can free resources that would otherwise be consumed by undo-state information that cannot be used.","pos":[13317,13475]},{"pos":[13485,13558],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__getclientsite\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::GetClientSite","linkify":"<a name=\"coleserverdoc__getclientsite\"></a>  COleServerDoc::GetClientSite","source":"<a name=\"coleserverdoc__getclientsite\"></a>  COleServerDoc::GetClientSite"},{"pos":[13562,13627],"content":"Retrieves a pointer to the underlying <ph id=\"ph1\">`IOleClientSite`</ph> interface.","source":"Retrieves a pointer to the underlying `IOleClientSite` interface."},{"pos":[13694,13706],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[13710,13835],"content":"Retrieves a pointer to the underlying <bpt id=\"p1\">[</bpt>IOleClientSite<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms693706)</ept> interface.","source":"Retrieves a pointer to the underlying [IOleClientSite](http://msdn.microsoft.com/library/windows/desktop/ms693706) interface."},{"pos":[13845,13928],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__getdocobjectserver\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::GetDocObjectServer","linkify":"<a name=\"coleserverdoc__getdocobjectserver\"></a>  COleServerDoc::GetDocObjectServer","source":"<a name=\"coleserverdoc__getdocobjectserver\"></a>  COleServerDoc::GetDocObjectServer"},{"pos":[13932,14022],"content":"Override this function to create a new <ph id=\"ph1\">`CDocObjectServer`</ph> item and return a pointer to it.","source":"Override this function to create a new `CDocObjectServer` item and return a pointer to it."},{"pos":[14121,14131],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to the <ph id=\"ph1\">`IOleDocumentSite`</ph> interface that will connect this document to the server.","pos":[14149,14239],"source":" Pointer to the `IOleDocumentSite` interface that will connect this document to the server."},{"pos":[14249,14261],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[14265,14333],"content":"A pointer to a <ph id=\"ph1\">`CDocObjectServer`</ph>; <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> if the operation failed.","source":"A pointer to a `CDocObjectServer`; **NULL** if the operation failed."},{"pos":[14343,14350],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When a DocObject server is activated, the return of a non- <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> pointer shows that the client can support DocObjects.","pos":[14354,14475],"source":"When a DocObject server is activated, the return of a non- **NULL** pointer shows that the client can support DocObjects."},{"content":"The default implementation returns <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[14476,14520],"source":" The default implementation returns **NULL**."},{"content":"A typical implementation for a document that supports DocObjects will simply allocate a new <ph id=\"ph1\">`CDocObjectServer`</ph> object and return it to the caller.","pos":[14527,14673],"source":"A typical implementation for a document that supports DocObjects will simply allocate a new `CDocObjectServer` object and return it to the caller."},{"content":"For example:","pos":[14674,14686]},{"pos":[14693,14777],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCOleServer#3<ept id=\"p2\">](../../mfc/codesnippet/cpp/coleserverdoc-class_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCOleServer#3](../../mfc/codesnippet/cpp/coleserverdoc-class_1.cpp)]"},{"pos":[14787,14864],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__getembeddeditem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::GetEmbeddedItem","linkify":"<a name=\"coleserverdoc__getembeddeditem\"></a>  COleServerDoc::GetEmbeddedItem","source":"<a name=\"coleserverdoc__getembeddeditem\"></a>  COleServerDoc::GetEmbeddedItem"},{"content":"Call this function to get a pointer to an item representing the entire document.","pos":[14868,14948]},{"pos":[15008,15020],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15024,15112],"content":"A pointer to an item representing the entire document; <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> if the operation failed.","source":"A pointer to an item representing the entire document; **NULL** if the operation failed."},{"pos":[15122,15129],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[15133,15263],"content":"It calls <bpt id=\"p1\">[</bpt>COleServerDoc::OnGetEmbeddedItem<ept id=\"p1\">](#coleserverdoc__ongetembeddeditem)</ept>, a virtual function with no default implementation.","source":"It calls [COleServerDoc::OnGetEmbeddedItem](#coleserverdoc__ongetembeddeditem), a virtual function with no default implementation."},{"pos":[15273,15350],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__getitemcliprect\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::GetItemClipRect","linkify":"<a name=\"coleserverdoc__getitemcliprect\"></a>  COleServerDoc::GetItemClipRect","source":"<a name=\"coleserverdoc__getitemcliprect\"></a>  COleServerDoc::GetItemClipRect"},{"pos":[15354,15481],"content":"Call the <ph id=\"ph1\">`GetItemClipRect`</ph> member function to get the clipping-rectangle coordinates of the item that is being edited in place.","source":"Call the `GetItemClipRect` member function to get the clipping-rectangle coordinates of the item that is being edited in place."},{"pos":[15556,15566],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to a <ph id=\"ph1\">`RECT`</ph> structure or a <ph id=\"ph2\">`CRect`</ph> object to receive the clipping-rectangle coordinates of the item.","pos":[15586,15694],"source":" Pointer to a `RECT` structure or a `CRect` object to receive the clipping-rectangle coordinates of the item."},{"pos":[15704,15711],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Coordinates are in pixels relative to the container application window's client area.","pos":[15715,15800]},{"content":"Drawing should not occur outside the clipping rectangle.","pos":[15807,15863]},{"content":"Usually, drawing is automatically restricted.","pos":[15864,15909]},{"content":"Use this function to determine whether the user has scrolled outside the visible portion of the document; if so, scroll the container document as needed by means of a call to <bpt id=\"p1\">[</bpt>ScrollContainerBy<ept id=\"p1\">](#coleserverdoc__scrollcontainerby)</ept>.","pos":[15910,16140],"source":" Use this function to determine whether the user has scrolled outside the visible portion of the document; if so, scroll the container document as needed by means of a call to [ScrollContainerBy](#coleserverdoc__scrollcontainerby)."},{"pos":[16150,16227],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__getitemposition\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::GetItemPosition","linkify":"<a name=\"coleserverdoc__getitemposition\"></a>  COleServerDoc::GetItemPosition","source":"<a name=\"coleserverdoc__getitemposition\"></a>  COleServerDoc::GetItemPosition"},{"pos":[16231,16331],"content":"Call the <ph id=\"ph1\">`GetItemPosition`</ph> member function to get the coordinates of the item being edited in place.","source":"Call the `GetItemPosition` member function to get the coordinates of the item being edited in place."},{"pos":[16405,16415],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to a <ph id=\"ph1\">`RECT`</ph> structure or a <ph id=\"ph2\">`CRect`</ph> object to receive the coordinates of the item.","pos":[16434,16523],"source":" Pointer to a `RECT` structure or a `CRect` object to receive the coordinates of the item."},{"pos":[16533,16540],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Coordinates are in pixels relative to the container application window's client area.","pos":[16544,16629]},{"content":"The item's position can be compared with the current clipping rectangle to determine the extent to which the item is visible (or not visible) on the screen.","pos":[16636,16792]},{"pos":[16802,16875],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__getzoomfactor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::GetZoomFactor","linkify":"<a name=\"coleserverdoc__getzoomfactor\"></a>  COleServerDoc::GetZoomFactor","source":"<a name=\"coleserverdoc__getzoomfactor\"></a>  COleServerDoc::GetZoomFactor"},{"pos":[16879,17000],"content":"The <ph id=\"ph1\">`GetZoomFactor`</ph> member function determines the \"zoom factor\" of an item that has been activated for in-place editing.","source":"The `GetZoomFactor` member function determines the \"zoom factor\" of an item that has been activated for in-place editing."},{"pos":[17149,17159],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>lpSizeNum<ept id=\"p1\">*</ept>","pos":[17163,17174],"source":"*lpSizeNum*"},{"content":"Pointer to an object of class <ph id=\"ph1\">`CSize`</ph> that will hold the zoom factor's numerator.","pos":[17178,17259],"source":" Pointer to an object of class `CSize` that will hold the zoom factor's numerator."},{"content":"Can be <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[17260,17276],"source":" Can be **NULL**."},{"content":"<bpt id=\"p1\">*</bpt>lpSizeDenom<ept id=\"p1\">*</ept>","pos":[17283,17296],"source":"*lpSizeDenom*"},{"content":"Pointer to an object of class <ph id=\"ph1\">`CSize`</ph> that will hold the zoom factor's denominator.","pos":[17300,17383],"source":" Pointer to an object of class `CSize` that will hold the zoom factor's denominator."},{"content":"Can be <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[17384,17400],"source":" Can be **NULL**."},{"content":"Pointer to an object of class <ph id=\"ph1\">`CRect`</ph> that describes the item's new position.","pos":[17422,17499],"source":" Pointer to an object of class `CRect` that describes the item's new position."},{"content":"If this argument is <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>, the function uses the item's current position.","pos":[17500,17576],"source":" If this argument is **NULL**, the function uses the item's current position."},{"pos":[17586,17598],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if the item is activated for in-place editing and its zoom factor is other than 100% (1:1); otherwise 0.","pos":[17602,17714]},{"pos":[17724,17731],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The zoom factor, in pixels, is the proportion of the item's size to its current extent.","pos":[17735,17822]},{"content":"If the container application has not set the item's extent, its natural extent (as determined by <bpt id=\"p1\">[</bpt>COleServerItem::OnGetExtent<ept id=\"p1\">](../../mfc/reference/coleserveritem-class.md#coleserveritem__ongetextent)</ept>) is used.","pos":[17823,18032],"source":" If the container application has not set the item's extent, its natural extent (as determined by [COleServerItem::OnGetExtent](../../mfc/reference/coleserveritem-class.md#coleserveritem__ongetextent)) is used."},{"content":"The function sets its first two arguments to the numerator and denominator of the item's \"zoom factor.\"","pos":[18039,18142]},{"content":"If the item is not being edited in place, the function sets these arguments to a default value of 100% (or 1:1) and returns zero.","pos":[18143,18272]},{"content":"For further information, see Technical Note 40, <bpt id=\"p1\">[</bpt>MFC/OLE In-Place Resizing and Zooming<ept id=\"p1\">](../../mfc/tn040-mfc-ole-in-place-resizing-and-zooming.md)</ept>.","pos":[18273,18419],"source":" For further information, see Technical Note 40, [MFC/OLE In-Place Resizing and Zooming](../../mfc/tn040-mfc-ole-in-place-resizing-and-zooming.md)."},{"pos":[18429,18498],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__isdocobject\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::IsDocObject","linkify":"<a name=\"coleserverdoc__isdocobject\"></a>  COleServerDoc::IsDocObject","source":"<a name=\"coleserverdoc__isdocobject\"></a>  COleServerDoc::IsDocObject"},{"content":"Determines if the document is a DocObject.","pos":[18502,18544]},{"pos":[18598,18610],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[18614,18675],"content":"<bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> if the document is a DocObject; otherwise <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept>.","source":"**TRUE** if the document is a DocObject; otherwise **FALSE**."},{"pos":[18685,18752],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__isembedded\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::IsEmbedded","linkify":"<a name=\"coleserverdoc__isembedded\"></a>  COleServerDoc::IsEmbedded","source":"<a name=\"coleserverdoc__isembedded\"></a>  COleServerDoc::IsEmbedded"},{"pos":[18756,18873],"content":"Call the <ph id=\"ph1\">`IsEmbedded`</ph> member function to determine whether the document represents an object embedded in a container.","source":"Call the `IsEmbedded` member function to determine whether the document represents an object embedded in a container."},{"pos":[18926,18938],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[18942,19057],"content":"Nonzero if the <ph id=\"ph1\">`COleServerDoc`</ph> object is a document that represents an object embedded in a container; otherwise 0.","source":"Nonzero if the `COleServerDoc` object is a document that represents an object embedded in a container; otherwise 0."},{"pos":[19067,19074],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A document loaded from a file is not embedded although it may be manipulated by a container application as a link.","pos":[19078,19192]},{"content":"A document that is embedded in a container document is considered to be embedded.","pos":[19193,19274]},{"pos":[19284,19361],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__isinplaceactive\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::IsInPlaceActive","linkify":"<a name=\"coleserverdoc__isinplaceactive\"></a>  COleServerDoc::IsInPlaceActive","source":"<a name=\"coleserverdoc__isinplaceactive\"></a>  COleServerDoc::IsInPlaceActive"},{"pos":[19365,19480],"content":"Call the <ph id=\"ph1\">`IsInPlaceActive`</ph> member function to determine whether the item is currently in the in-place active state.","source":"Call the `IsInPlaceActive` member function to determine whether the item is currently in the in-place active state."},{"pos":[19538,19550],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[19554,19624],"content":"Nonzero if the <ph id=\"ph1\">`COleServerDoc`</ph> object is active in place; otherwise 0.","source":"Nonzero if the `COleServerDoc` object is active in place; otherwise 0."},{"pos":[19634,19707],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__notifychanged\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::NotifyChanged","linkify":"<a name=\"coleserverdoc__notifychanged\"></a>  COleServerDoc::NotifyChanged","source":"<a name=\"coleserverdoc__notifychanged\"></a>  COleServerDoc::NotifyChanged"},{"content":"Call this function to notify all linked items connected to the document that the document has changed.","pos":[19711,19813]},{"pos":[19860,19867],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Typically, you call this function after the user changes some global attribute such as the dimensions of the server document.","pos":[19871,19996]},{"content":"If an OLE item is linked to the document with an automatic link, the item is updated to reflect the changes.","pos":[19997,20105]},{"content":"In container applications written with the Microsoft Foundation Class Library, the <bpt id=\"p1\">[</bpt>OnChange<ept id=\"p1\">](../../mfc/reference/coleclientitem-class.md#coleclientitem__onchange)</ept> member function of <ph id=\"ph1\">`COleClientItem`</ph> is called.","pos":[20106,20316],"source":" In container applications written with the Microsoft Foundation Class Library, the [OnChange](../../mfc/reference/coleclientitem-class.md#coleclientitem__onchange) member function of `COleClientItem` is called."},{"pos":[20324,20468],"content":"[!NOTE]\n This function is included for compatibility with OLE 1. New applications should use [UpdateAllItems](#coleserverdoc__updateallitems).","leadings":["","> "],"nodes":[{"content":" This function is included for compatibility with OLE 1. New applications should use [UpdateAllItems](#coleserverdoc__updateallitems).","pos":[8,142],"nodes":[{"content":"This function is included for compatibility with OLE 1.","pos":[1,56]},{"content":"New applications should use <bpt id=\"p1\">[</bpt>UpdateAllItems<ept id=\"p1\">](#coleserverdoc__updateallitems)</ept>.","pos":[57,134],"source":" New applications should use [UpdateAllItems](#coleserverdoc__updateallitems)."}]}]},{"pos":[20478,20549],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__notifyclosed\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::NotifyClosed","linkify":"<a name=\"coleserverdoc__notifyclosed\"></a>  COleServerDoc::NotifyClosed","source":"<a name=\"coleserverdoc__notifyclosed\"></a>  COleServerDoc::NotifyClosed"},{"content":"Call this function to notify the container(s) that the document has been closed.","pos":[20553,20633]},{"pos":[20679,20686],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When the user chooses the Close command from the File menu, <ph id=\"ph1\">`NotifyClosed`</ph> is called by <ph id=\"ph2\">`COleServerDoc`</ph>'s implementation of the <bpt id=\"p1\">[</bpt>OnCloseDocument<ept id=\"p1\">](../../mfc/reference/cdocument-class.md#cdocument__onclosedocument)</ept> member function.","pos":[20690,20919],"source":"When the user chooses the Close command from the File menu, `NotifyClosed` is called by `COleServerDoc`'s implementation of the [OnCloseDocument](../../mfc/reference/cdocument-class.md#cdocument__onclosedocument) member function."},{"content":"In container applications written with the Microsoft Foundation Class Library, the <bpt id=\"p1\">[</bpt>OnChange<ept id=\"p1\">](../../mfc/reference/coleclientitem-class.md#coleclientitem__onchange)</ept> member function of <ph id=\"ph1\">`COleClientItem`</ph> is called.","pos":[20920,21130],"source":" In container applications written with the Microsoft Foundation Class Library, the [OnChange](../../mfc/reference/coleclientitem-class.md#coleclientitem__onchange) member function of `COleClientItem` is called."},{"pos":[21140,21211],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__notifyrename\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::NotifyRename","linkify":"<a name=\"coleserverdoc__notifyrename\"></a>  COleServerDoc::NotifyRename","source":"<a name=\"coleserverdoc__notifyrename\"></a>  COleServerDoc::NotifyRename"},{"content":"Call this function after the user renames the server document.","pos":[21215,21277]},{"pos":[21342,21352],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to a string specifying the new name of the server document; this is typically a fully qualified path.","pos":[21373,21482]},{"pos":[21492,21499],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When the user chooses the Save As command from the File menu, <ph id=\"ph1\">`NotifyRename`</ph> is called by <ph id=\"ph2\">`COleServerDoc`</ph>'s implementation of the <bpt id=\"p1\">[</bpt>OnSaveDocument<ept id=\"p1\">](../../mfc/reference/cdocument-class.md#cdocument__onsavedocument)</ept> member function.","pos":[21503,21732],"source":"When the user chooses the Save As command from the File menu, `NotifyRename` is called by `COleServerDoc`'s implementation of the [OnSaveDocument](../../mfc/reference/cdocument-class.md#cdocument__onsavedocument) member function."},{"content":"This function notifies the OLE system DLLs, which in turn notify the containers.","pos":[21733,21813]},{"content":"In container applications written with the Microsoft Foundation Class Library, the <bpt id=\"p1\">[</bpt>OnChange<ept id=\"p1\">](../../mfc/reference/coleclientitem-class.md#coleclientitem__onchange)</ept> member function of <ph id=\"ph1\">`COleClientItem`</ph> is called.","pos":[21814,22024],"source":" In container applications written with the Microsoft Foundation Class Library, the [OnChange](../../mfc/reference/coleclientitem-class.md#coleclientitem__onchange) member function of `COleClientItem` is called."},{"pos":[22034,22103],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__notifysaved\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::NotifySaved","linkify":"<a name=\"coleserverdoc__notifysaved\"></a>  COleServerDoc::NotifySaved","source":"<a name=\"coleserverdoc__notifysaved\"></a>  COleServerDoc::NotifySaved"},{"content":"Call this function after the user saves the server document.","pos":[22107,22167]},{"pos":[22212,22219],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When the user chooses the Save command from the File menu, <ph id=\"ph1\">`NotifySaved`</ph> is called for you by <ph id=\"ph2\">`COleServerDoc`</ph>'s implementation of <bpt id=\"p1\">[</bpt>OnSaveDocument<ept id=\"p1\">](../../mfc/reference/cdocument-class.md#cdocument__onsavedocument)</ept>.","pos":[22223,22436],"source":"When the user chooses the Save command from the File menu, `NotifySaved` is called for you by `COleServerDoc`'s implementation of [OnSaveDocument](../../mfc/reference/cdocument-class.md#cdocument__onsavedocument)."},{"content":"This function notifies the OLE system DLLs, which in turn notify the containers.","pos":[22437,22517]},{"content":"In container applications written with the Microsoft Foundation Class Library, the <bpt id=\"p1\">[</bpt>OnChange<ept id=\"p1\">](../../mfc/reference/coleclientitem-class.md#coleclientitem__onchange)</ept> member function of <ph id=\"ph1\">`COleClientItem`</ph> is called.","pos":[22518,22728],"source":" In container applications written with the Microsoft Foundation Class Library, the [OnChange](../../mfc/reference/coleclientitem-class.md#coleclientitem__onchange) member function of `COleClientItem` is called."},{"pos":[22738,22799],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__onclose\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::OnClose","linkify":"<a name=\"coleserverdoc__onclose\"></a>  COleServerDoc::OnClose","source":"<a name=\"coleserverdoc__onclose\"></a>  COleServerDoc::OnClose"},{"content":"Called by the framework when a container requests that the server document be closed.","pos":[22803,22888]},{"pos":[22959,22969],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A value from the enumeration <ph id=\"ph1\">`OLECLOSE`</ph>.","pos":[22992,23032],"source":" A value from the enumeration `OLECLOSE`."},{"content":"This parameter can have one of the following values:","pos":[23033,23085]},{"pos":[23093,23158],"content":"<ph id=\"ph1\">`OLECLOSE_SAVEIFDIRTY`</ph> The file is saved if it has been modified.","source":"`OLECLOSE_SAVEIFDIRTY` The file is saved if it has been modified."},{"pos":[23166,23223],"content":"<ph id=\"ph1\">`OLECLOSE_NOSAVE`</ph> The file is closed without being saved.","source":"`OLECLOSE_NOSAVE` The file is closed without being saved."},{"pos":[23231,23321],"content":"<ph id=\"ph1\">`OLECLOSE_PROMPTSAVE`</ph> If the file has been modified, the user is prompted about saving it.","source":"`OLECLOSE_PROMPTSAVE` If the file has been modified, the user is prompted about saving it."},{"pos":[23331,23338],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[23342,23404],"content":"The default implementation calls <ph id=\"ph1\">`CDocument::OnCloseDocument`</ph>.","source":"The default implementation calls `CDocument::OnCloseDocument`."},{"pos":[23411,23589],"content":"For more information and additional values, see <bpt id=\"p1\">[</bpt>OLECLOSE<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms680623)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information and additional values, see [OLECLOSE](http://msdn.microsoft.com/library/windows/desktop/ms680623) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[23599,23670],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__ondeactivate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::OnDeactivate","linkify":"<a name=\"coleserverdoc__ondeactivate\"></a>  COleServerDoc::OnDeactivate","source":"<a name=\"coleserverdoc__ondeactivate\"></a>  COleServerDoc::OnDeactivate"},{"content":"Called by the framework when the user deactivates an embedded or linked item that is currently in-place active.","pos":[23674,23785]},{"pos":[23839,23846],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function restores the container application's user interface to its original state and destroys any menus and other controls that were created for in-place activation.","pos":[23850,24022]},{"content":"The undo state information should be unconditionally released at this point.","pos":[24029,24105]},{"pos":[24112,24193],"content":"For more information, see the article <bpt id=\"p1\">[</bpt>Activation<ept id=\"p1\">](../../mfc/activation-cpp.md)</ept>..","source":"For more information, see the article [Activation](../../mfc/activation-cpp.md).."},{"pos":[24203,24278],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__ondeactivateui\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::OnDeactivateUI","linkify":"<a name=\"coleserverdoc__ondeactivateui\"></a>  COleServerDoc::OnDeactivateUI","source":"<a name=\"coleserverdoc__ondeactivateui\"></a>  COleServerDoc::OnDeactivateUI"},{"content":"Called when the user deactivates an item that was activated in place.","pos":[24282,24351]},{"pos":[24421,24431],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies whether the editing changes can be undone.","pos":[24450,24502]},{"pos":[24512,24519],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function restores the container application's user interface to its original state, hiding any menus and other controls that were created for in-place activation.","pos":[24523,24690]},{"content":"The framework always sets <ph id=\"ph1\">`bUndoable`</ph> to <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept>.","pos":[24697,24748],"source":"The framework always sets `bUndoable` to **FALSE**."},{"content":"If the server supports undo and there is an operation that can be undone, call the base-class implementation with <ph id=\"ph1\">`bUndoable`</ph> set to <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>.","pos":[24749,24891],"source":" If the server supports undo and there is an operation that can be undone, call the base-class implementation with `bUndoable` set to **TRUE**."},{"pos":[24901,24986],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__ondocwindowactivate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::OnDocWindowActivate","linkify":"<a name=\"coleserverdoc__ondocwindowactivate\"></a>  COleServerDoc::OnDocWindowActivate","source":"<a name=\"coleserverdoc__ondocwindowactivate\"></a>  COleServerDoc::OnDocWindowActivate"},{"content":"The framework calls this function to activate or deactivate a document window for in-place editing.","pos":[24990,25089]},{"pos":[25164,25174],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies whether the document window is to be activated or deactivated.","pos":[25193,25265]},{"pos":[25275,25282],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The default implementation removes or adds the frame-level user interface elements as appropriate.","pos":[25286,25384]},{"content":"Override this function if you want to perform additional actions when the document containing your item is activated or deactivated.","pos":[25385,25517]},{"pos":[25524,25605],"content":"For more information, see the article <bpt id=\"p1\">[</bpt>Activation<ept id=\"p1\">](../../mfc/activation-cpp.md)</ept>..","source":"For more information, see the article [Activation](../../mfc/activation-cpp.md).."},{"pos":[25615,25686],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__onexecolecmd\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::OnExecOleCmd","linkify":"<a name=\"coleserverdoc__onexecolecmd\"></a>  COleServerDoc::OnExecOleCmd","source":"<a name=\"coleserverdoc__onexecolecmd\"></a>  COleServerDoc::OnExecOleCmd"},{"content":"The framework calls this function to execute a specified command or display help for the command.","pos":[25690,25787]},{"pos":[25978,25988],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to a GUID that identifies a set of commands.","pos":[26011,26065]},{"content":"Can be <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> to indicate the default command group.","pos":[26066,26120],"source":" Can be **NULL** to indicate the default command group."},{"content":"The command to execute.","pos":[26139,26162]},{"content":"Must be in the group identified by <ph id=\"ph1\">`pguidCmdGroup`</ph>.","pos":[26163,26214],"source":" Must be in the group identified by `pguidCmdGroup`."},{"content":"<bpt id=\"p1\">*</bpt>nCmdExecOut<ept id=\"p1\">*</ept>","pos":[26221,26234],"source":"*nCmdExecOut*"},{"content":"The way the object should execute the command, one or more of the following values from the <bpt id=\"p1\">**</bpt>OLECMDEXECOPT<ept id=\"p1\">**</ept> enumeration:","pos":[26238,26360],"source":" The way the object should execute the command, one or more of the following values from the **OLECMDEXECOPT** enumeration:"},{"pos":[26367,26394],"content":"<bpt id=\"p1\">**</bpt>OLECMDEXECOPT_DODEFAULT<ept id=\"p1\">**</ept>","source":"**OLECMDEXECOPT_DODEFAULT**"},{"pos":[26401,26429],"content":"<bpt id=\"p1\">**</bpt>OLECMDEXECOPT_PROMPTUSER<ept id=\"p1\">**</ept>","source":"**OLECMDEXECOPT_PROMPTUSER**"},{"pos":[26436,26468],"content":"<bpt id=\"p1\">**</bpt>OLECMDEXECOPT_DONTPROMPTUSER<ept id=\"p1\">**</ept>","source":"**OLECMDEXECOPT_DONTPROMPTUSER**"},{"pos":[26475,26501],"content":"<bpt id=\"p1\">**</bpt>OLECMDEXECOPT_SHOWHELP<ept id=\"p1\">**</ept>","source":"**OLECMDEXECOPT_SHOWHELP**"},{"content":"Pointer to a <bpt id=\"p1\">**</bpt>VARIANTARG<ept id=\"p1\">**</ept> containing input arguments for the command.","pos":[26523,26594],"source":" Pointer to a **VARIANTARG** containing input arguments for the command."},{"content":"Can be <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[26595,26611],"source":" Can be **NULL**."},{"content":"Pointer to a <bpt id=\"p1\">**</bpt>VARIANTARG<ept id=\"p1\">**</ept> to receive the output return values from the command.","pos":[26634,26715],"source":" Pointer to a **VARIANTARG** to receive the output return values from the command."},{"content":"Can be <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[26716,26732],"source":" Can be **NULL**."},{"pos":[26742,26754],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[26758,26832],"content":"Returns <ph id=\"ph1\">`S_OK`</ph> if successful; otherwise, one of the following error codes:","source":"Returns `S_OK` if successful; otherwise, one of the following error codes:"},{"content":"Value","pos":[26839,26844]},{"content":"Description","pos":[26845,26856]},{"pos":[26895,26911],"content":"<bpt id=\"p1\">**</bpt>E_UNEXPECTED<ept id=\"p1\">**</ept>","source":"**E_UNEXPECTED**"},{"content":"Unexpected error occurred","pos":[26912,26937]},{"pos":[26942,26952],"content":"<bpt id=\"p1\">**</bpt>E_FAIL<ept id=\"p1\">**</ept>","source":"**E_FAIL**"},{"content":"Error occurred","pos":[26953,26967]},{"pos":[26972,26985],"content":"<bpt id=\"p1\">**</bpt>E_NOTIMPL<ept id=\"p1\">**</ept>","source":"**E_NOTIMPL**"},{"content":"Indicates MFC itself should attempt to translate and dispatch the command","pos":[26986,27059]},{"pos":[27064,27092],"content":"<bpt id=\"p1\">**</bpt>OLECMDERR_E_UNKNOWNGROUP<ept id=\"p1\">**</ept>","source":"**OLECMDERR_E_UNKNOWNGROUP**"},{"pos":[27093,27173],"content":"<ph id=\"ph1\">`pguidCmdGroup`</ph> is non- <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> but does not specify a recognized command group","source":"`pguidCmdGroup` is non- **NULL** but does not specify a recognized command group"},{"pos":[27178,27206],"content":"<bpt id=\"p1\">**</bpt>OLECMDERR_E_NOTSUPPORTED<ept id=\"p1\">**</ept>","source":"**OLECMDERR_E_NOTSUPPORTED**"},{"pos":[27207,27281],"content":"<ph id=\"ph1\">`nCmdID`</ph> is not recognized as a valid command in the group <ph id=\"ph2\">`pguidCmdGroup`</ph>","source":"`nCmdID` is not recognized as a valid command in the group `pguidCmdGroup`"},{"pos":[27286,27308],"content":"<bpt id=\"p1\">**</bpt>OLECMDERR_DISABLED<ept id=\"p1\">**</ept>","source":"**OLECMDERR_DISABLED**"},{"pos":[27309,27378],"content":"The command identified by <ph id=\"ph1\">`nCmdID`</ph> is disabled and cannot be executed","source":"The command identified by `nCmdID` is disabled and cannot be executed"},{"pos":[27383,27403],"content":"<bpt id=\"p1\">**</bpt>OLECMDERR_NOHELP<ept id=\"p1\">**</ept>","source":"**OLECMDERR_NOHELP**"},{"pos":[27404,27488],"content":"Caller asked for help on the command identified by <ph id=\"ph1\">`nCmdID`</ph> but no help is available","source":"Caller asked for help on the command identified by `nCmdID` but no help is available"},{"pos":[27493,27515],"content":"<bpt id=\"p1\">**</bpt>OLECMDERR_CANCELED<ept id=\"p1\">**</ept>","source":"**OLECMDERR_CANCELED**"},{"content":"User canceled the execution","pos":[27516,27543]},{"pos":[27554,27561],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"<ph id=\"ph1\">`COleCmdUI`</ph> can be used to enable, update, and set other properties of DocObject user interface commands.","pos":[27565,27670],"source":"`COleCmdUI` can be used to enable, update, and set other properties of DocObject user interface commands."},{"content":"After the commands are initialized, you can execute them with <ph id=\"ph1\">`OnExecOleCmd`</ph>.","pos":[27671,27748],"source":" After the commands are initialized, you can execute them with `OnExecOleCmd`."},{"content":"The framework calls the function before attempting to translate and dispatch an OLE document command.","pos":[27755,27856]},{"content":"You don't need to override this function to handle standard OLE document commands, but you must supply an override to this function if you want to handle your own custom commands or handle commands that accept parameters or return results.","pos":[27857,28096]},{"content":"Most of the commands do not take arguments or return values.","pos":[28103,28163]},{"content":"For a majority of commands the caller can pass <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>s for <ph id=\"ph1\">`pvarargIn`</ph> and <ph id=\"ph2\">`pvarargOut`</ph>.","pos":[28164,28254],"source":" For a majority of commands the caller can pass **NULL**s for `pvarargIn` and `pvarargOut`."},{"content":"For commands that expect input values, the caller can declare and initialize a <bpt id=\"p1\">**</bpt>VARIANTARG<ept id=\"p1\">**</ept> variable and pass a pointer to the variable in <ph id=\"ph1\">`pvarargIn`</ph>.","pos":[28255,28408],"source":" For commands that expect input values, the caller can declare and initialize a **VARIANTARG** variable and pass a pointer to the variable in `pvarargIn`."},{"content":"For commands that require a single value, the argument can be stored directly in the <bpt id=\"p1\">**</bpt>VARIANTARG<ept id=\"p1\">**</ept> and passed to the function.","pos":[28409,28536],"source":" For commands that require a single value, the argument can be stored directly in the **VARIANTARG** and passed to the function."},{"content":"Multiple arguments must be packaged within the <bpt id=\"p1\">**</bpt>VARIANTARG<ept id=\"p1\">**</ept> using one of the supported types (such as <ph id=\"ph1\">`IDispatch`</ph> and <bpt id=\"p2\">**</bpt>SAFEARRAY<ept id=\"p2\">**</ept> ).","pos":[28537,28673],"source":" Multiple arguments must be packaged within the **VARIANTARG** using one of the supported types (such as `IDispatch` and **SAFEARRAY** )."},{"content":"Similarly, if a command returns arguments the caller is expected to declare a <bpt id=\"p1\">**</bpt>VARIANTARG<ept id=\"p1\">**</ept>, initialize it to <ph id=\"ph1\">`VT_EMPTY`</ph>, and pass its address in <ph id=\"ph2\">`pvarargOut`</ph>.","pos":[28680,28840],"source":"Similarly, if a command returns arguments the caller is expected to declare a **VARIANTARG**, initialize it to `VT_EMPTY`, and pass its address in `pvarargOut`."},{"content":"If a command returns a single value, the object can store that value directly in <ph id=\"ph1\">`pvarargOut`</ph>.","pos":[28841,28935],"source":" If a command returns a single value, the object can store that value directly in `pvarargOut`."},{"content":"Multiple output values must be packaged in some way appropriate for the <bpt id=\"p1\">**</bpt>VARIANTARG<ept id=\"p1\">**</ept>.","pos":[28936,29023],"source":" Multiple output values must be packaged in some way appropriate for the **VARIANTARG**."},{"content":"The base-class implementation of this function will walk the <bpt id=\"p1\">**</bpt>OLE_COMMAND_MAP<ept id=\"p1\">**</ept> structures associated with the command target and try to dispatch the command to an appropriate handler.","pos":[29030,29215],"source":"The base-class implementation of this function will walk the **OLE_COMMAND_MAP** structures associated with the command target and try to dispatch the command to an appropriate handler."},{"content":"The base-class implementation works only with commands that do not accept arguments or return values.","pos":[29216,29317]},{"content":"If you need to handle commands that do accept arguments or return values, you must override this function and work with the <ph id=\"ph1\">`pvarargIn`</ph> and <ph id=\"ph2\">`pvarargOut`</ph> parameters yourself.","pos":[29318,29491],"source":" If you need to handle commands that do accept arguments or return values, you must override this function and work with the `pvarargIn` and `pvarargOut` parameters yourself."},{"pos":[29501,29590],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__onframewindowactivate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::OnFrameWindowActivate","linkify":"<a name=\"coleserverdoc__onframewindowactivate\"></a>  COleServerDoc::OnFrameWindowActivate","source":"<a name=\"coleserverdoc__onframewindowactivate\"></a>  COleServerDoc::OnFrameWindowActivate"},{"content":"The framework calls this function when the container application's frame window is activated or deactivated.","pos":[29594,29702]},{"pos":[29779,29789],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies whether the frame window is to be activated or deactivated.","pos":[29808,29877]},{"pos":[29887,29894],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The default implementation cancels any help modes the frame window might be in.","pos":[29898,29977]},{"content":"Override this function if you want to perform special processing when the frame window is activated or deactivated.","pos":[29978,30093]},{"pos":[30100,30181],"content":"For more information, see the article <bpt id=\"p1\">[</bpt>Activation<ept id=\"p1\">](../../mfc/activation-cpp.md)</ept>..","source":"For more information, see the article [Activation](../../mfc/activation-cpp.md).."},{"pos":[30191,30272],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__ongetembeddeditem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::OnGetEmbeddedItem","linkify":"<a name=\"coleserverdoc__ongetembeddeditem\"></a>  COleServerDoc::OnGetEmbeddedItem","source":"<a name=\"coleserverdoc__ongetembeddeditem\"></a>  COleServerDoc::OnGetEmbeddedItem"},{"content":"Called by the framework when a container application calls the server application to create or edit an embedded item.","pos":[30276,30393]},{"pos":[30469,30481],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[30485,30573],"content":"A pointer to an item representing the entire document; <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> if the operation failed.","source":"A pointer to an item representing the entire document; **NULL** if the operation failed."},{"pos":[30583,30590],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"There is no default implementation.","pos":[30594,30629]},{"content":"You must override this function to return an item that represents the entire document.","pos":[30630,30716]},{"content":"This return value should be an object of a <ph id=\"ph1\">`COleServerItem`</ph>-derived class.","pos":[30717,30791],"source":" This return value should be an object of a `COleServerItem`-derived class."},{"pos":[30801,30886],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__onreactivateandundo\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::OnReactivateAndUndo","linkify":"<a name=\"coleserverdoc__onreactivateandundo\"></a>  COleServerDoc::OnReactivateAndUndo","source":"<a name=\"coleserverdoc__onreactivateandundo\"></a>  COleServerDoc::OnReactivateAndUndo"},{"content":"The framework calls this function when the user chooses to undo changes made to an item that has been activated in place, changed, and subsequently deactivated.","pos":[30890,31050]},{"pos":[31111,31123],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful; otherwise 0.","pos":[31127,31162]},{"pos":[31172,31179],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[31183,31267],"content":"The default implementation does nothing except return <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept> to indicate failure.","source":"The default implementation does nothing except return **FALSE** to indicate failure."},{"content":"Override this function if your application supports undo.","pos":[31274,31331]},{"content":"Usually you would perform the undo operation, then activate the item by calling <ph id=\"ph1\">`ActivateInPlace`</ph>.","pos":[31332,31430],"source":" Usually you would perform the undo operation, then activate the item by calling `ActivateInPlace`."},{"content":"If the container application is written with the Microsoft Foundation Class Library, calling <ph id=\"ph1\">`COleClientItem::ReactivateAndUndo`</ph> causes this function to be called.","pos":[31431,31594],"source":" If the container application is written with the Microsoft Foundation Class Library, calling `COleClientItem::ReactivateAndUndo` causes this function to be called."},{"pos":[31604,31679],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__onresizeborder\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::OnResizeBorder","linkify":"<a name=\"coleserverdoc__onresizeborder\"></a>  COleServerDoc::OnResizeBorder","source":"<a name=\"coleserverdoc__onresizeborder\"></a>  COleServerDoc::OnResizeBorder"},{"content":"The framework calls this function when the container application's frame windows change size.","pos":[31683,31776]},{"pos":[31915,31925],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to a <ph id=\"ph1\">`RECT`</ph> structure or a <ph id=\"ph2\">`CRect`</ph> object that specifies the coordinates of the border.","pos":[31947,32042],"source":" Pointer to a `RECT` structure or a `CRect` object that specifies the coordinates of the border."},{"content":"Pointer to an object of class <bpt id=\"p1\">**</bpt>IOleInPlaceUIWindow<ept id=\"p1\">**</ept> that owns the current in-place editing session.","pos":[32065,32166],"source":" Pointer to an object of class **IOleInPlaceUIWindow** that owns the current in-place editing session."},{"content":"<bpt id=\"p1\">*</bpt>bFrame<ept id=\"p1\">*</ept>","pos":[32173,32181],"source":"*bFrame*"},{"content":"<bpt id=\"p1\"> **</bpt>TRUE<ept id=\"p1\">**</ept> if <ph id=\"ph1\">`lpUIWindow`</ph> points to the container application's top-level frame window, or <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept> if <ph id=\"ph2\">`lpUIWindow`</ph> points to the container application's document-level frame window.","pos":[32184,32367],"source":" **TRUE** if `lpUIWindow` points to the container application's top-level frame window, or **FALSE** if `lpUIWindow` points to the container application's document-level frame window."},{"pos":[32377,32384],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function resizes and adjusts toolbars and other user-interface elements in accordance with the new window size.","pos":[32388,32504]},{"pos":[32511,32678],"content":"For more information, see <bpt id=\"p1\">[</bpt>IOleInPlaceUIWindow<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms680716)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IOleInPlaceUIWindow](http://msdn.microsoft.com/library/windows/desktop/ms680716) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"This is an advanced overridable.","pos":[32685,32717]},{"pos":[32727,32802],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__onsethostnames\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::OnSetHostNames","linkify":"<a name=\"coleserverdoc__onsethostnames\"></a>  COleServerDoc::OnSetHostNames","source":"<a name=\"coleserverdoc__onsethostnames\"></a>  COleServerDoc::OnSetHostNames"},{"content":"Called by the framework when the container sets or changes the host names for this document.","pos":[32806,32898]},{"pos":[33002,33012],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to a string that specifies the name of the container application.","pos":[33030,33103]},{"content":"Pointer to a string that specifies the container's name for the document.","pos":[33127,33200]},{"pos":[33210,33217],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The default implementation changes the document title for all views referring to this document.","pos":[33221,33316]},{"content":"Override this function if your application sets the titles through a different mechanism.","pos":[33323,33412]},{"pos":[33422,33497],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__onsetitemrects\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::OnSetItemRects","linkify":"<a name=\"coleserverdoc__onsetitemrects\"></a>  COleServerDoc::OnSetItemRects","source":"<a name=\"coleserverdoc__onsetitemrects\"></a>  COleServerDoc::OnSetItemRects"},{"content":"The framework calls this function to position the in-place editing frame window within the container application's frame window.","pos":[33501,33629]},{"pos":[33733,33743],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to a <ph id=\"ph1\">`RECT`</ph> structure or a <ph id=\"ph2\">`CRect`</ph> object that specifies the in-place frame window's position relative to the container application's client area.","pos":[33762,33916],"source":" Pointer to a `RECT` structure or a `CRect` object that specifies the in-place frame window's position relative to the container application's client area."},{"content":"Pointer to a <ph id=\"ph1\">`RECT`</ph> structure or a <ph id=\"ph2\">`CRect`</ph> object that specifies the in-place frame window's clipping rectangle relative to the container application's client area.","pos":[33939,34103],"source":" Pointer to a `RECT` structure or a `CRect` object that specifies the in-place frame window's clipping rectangle relative to the container application's client area."},{"pos":[34113,34120],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this function to update the view's zoom factor, if necessary.","pos":[34124,34194]},{"pos":[34201,34386],"content":"This function is usually called in response to a <ph id=\"ph1\">`RequestPositionChange`</ph> call, although it can be called at any time by the container to request a position change for the in-place item.","source":"This function is usually called in response to a `RequestPositionChange` call, although it can be called at any time by the container to request a position change for the in-place item."},{"pos":[34396,34477],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__onshowcontrolbars\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::OnShowControlBars","linkify":"<a name=\"coleserverdoc__onshowcontrolbars\"></a>  COleServerDoc::OnShowControlBars","source":"<a name=\"coleserverdoc__onshowcontrolbars\"></a>  COleServerDoc::OnShowControlBars"},{"pos":[34481,34628],"content":"The framework calls this function to show or hide the server application's control bars associated with the frame window identified by <ph id=\"ph1\">`pFrameWnd`</ph>.","source":"The framework calls this function to show or hide the server application's control bars associated with the frame window identified by `pFrameWnd`."},{"pos":[34730,34740],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to the frame window whose control bars should be hidden or shown.","pos":[34759,34832]},{"content":"Determines whether control bars are shown or hidden.","pos":[34850,34902]},{"pos":[34912,34919],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The default implementation enumerates all control bars owned by that frame window and hides or shows them.","pos":[34923,35029]},{"pos":[35039,35114],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__onshowdocument\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::OnShowDocument","linkify":"<a name=\"coleserverdoc__onshowdocument\"></a>  COleServerDoc::OnShowDocument","source":"<a name=\"coleserverdoc__onshowdocument\"></a>  COleServerDoc::OnShowDocument"},{"pos":[35118,35217],"content":"The framework calls the <ph id=\"ph1\">`OnShowDocument`</ph> function when the server document must be hidden or shown.","source":"The framework calls the `OnShowDocument` function when the server document must be hidden or shown."},{"pos":[35283,35293],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies whether the user interface to the document is to be shown or hidden.","pos":[35308,35386]},{"pos":[35396,35403],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If <ph id=\"ph1\">`bShow`</ph> is <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, the default implementation activates the server application, if necessary, and causes the container application to scroll its window so that the item is visible.","pos":[35407,35592],"source":"If `bShow` is **TRUE**, the default implementation activates the server application, if necessary, and causes the container application to scroll its window so that the item is visible."},{"content":"If <ph id=\"ph1\">`bShow`</ph> is <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept>, the default implementation deactivates the item through a call to <ph id=\"ph2\">`OnDeactivate`</ph>, then destroys or hides all frame windows that have been created for the document, except the first one.","pos":[35593,35803],"source":" If `bShow` is **FALSE**, the default implementation deactivates the item through a call to `OnDeactivate`, then destroys or hides all frame windows that have been created for the document, except the first one."},{"content":"If no visible documents remain, the default implementation hides the server application.","pos":[35804,35892]},{"pos":[35902,35981],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__onupdatedocument\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::OnUpdateDocument","linkify":"<a name=\"coleserverdoc__onupdatedocument\"></a>  COleServerDoc::OnUpdateDocument","source":"<a name=\"coleserverdoc__onupdatedocument\"></a>  COleServerDoc::OnUpdateDocument"},{"content":"Called by the framework when saving a document that is an embedded item in a compound document.","pos":[35985,36080]},{"pos":[36138,36150],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if the document was successfully updated; otherwise 0.","pos":[36154,36216]},{"pos":[36226,36233],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The default implementation calls the <bpt id=\"p1\">[</bpt>COleServerDoc::NotifySaved<ept id=\"p1\">](#coleserverdoc__notifysaved)</ept> and <bpt id=\"p2\">[</bpt>COleServerDoc::SaveEmbedding<ept id=\"p2\">](#coleserverdoc__saveembedding)</ept> member functions and then marks the document as clean.","pos":[36237,36452],"source":"The default implementation calls the [COleServerDoc::NotifySaved](#coleserverdoc__notifysaved) and [COleServerDoc::SaveEmbedding](#coleserverdoc__saveembedding) member functions and then marks the document as clean."},{"content":"Override this function if you want to perform special processing when updating an embedded item.","pos":[36453,36549]},{"pos":[36559,36648],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__requestpositionchange\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::RequestPositionChange","linkify":"<a name=\"coleserverdoc__requestpositionchange\"></a>  COleServerDoc::RequestPositionChange","source":"<a name=\"coleserverdoc__requestpositionchange\"></a>  COleServerDoc::RequestPositionChange"},{"content":"Call this member function to have the container application change the item's position.","pos":[36652,36739]},{"pos":[36811,36821],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to a <ph id=\"ph1\">`RECT`</ph> structure or a <ph id=\"ph2\">`CRect`</ph> object containing the item's new position.","pos":[36840,36925],"source":" Pointer to a `RECT` structure or a `CRect` object containing the item's new position."},{"pos":[36935,36942],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function is usually called (in conjunction with <ph id=\"ph1\">`UpdateAllItems`</ph>) when the data in an in-place active item has changed.","pos":[36946,37070],"source":"This function is usually called (in conjunction with `UpdateAllItems`) when the data in an in-place active item has changed."},{"content":"Following this call, the container might or might not perform the change by calling <ph id=\"ph1\">`OnSetItemRects`</ph>.","pos":[37071,37172],"source":" Following this call, the container might or might not perform the change by calling `OnSetItemRects`."},{"content":"The resulting position might be different from the one requested.","pos":[37173,37238]},{"pos":[37248,37321],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__saveembedding\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::SaveEmbedding","linkify":"<a name=\"coleserverdoc__saveembedding\"></a>  COleServerDoc::SaveEmbedding","source":"<a name=\"coleserverdoc__saveembedding\"></a>  COleServerDoc::SaveEmbedding"},{"content":"Call this function to tell the container application to save the embedded object.","pos":[37325,37406]},{"pos":[37453,37460],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function is called automatically from <ph id=\"ph1\">`OnUpdateDocument`</ph>.","pos":[37464,37526],"source":"This function is called automatically from `OnUpdateDocument`."},{"content":"Note that this function causes the item to be updated on disk, so it is usually called only as a result of a specific user action.","pos":[37527,37657]},{"pos":[37667,37748],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__scrollcontainerby\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::ScrollContainerBy","linkify":"<a name=\"coleserverdoc__scrollcontainerby\"></a>  COleServerDoc::ScrollContainerBy","source":"<a name=\"coleserverdoc__scrollcontainerby\"></a>  COleServerDoc::ScrollContainerBy"},{"pos":[37752,37882],"content":"Call the <ph id=\"ph1\">`ScrollContainerBy`</ph> member function to scroll the container document by the amount, in pixels, indicated by <ph id=\"ph2\">`sizeScroll`</ph>.","source":"Call the `ScrollContainerBy` member function to scroll the container document by the amount, in pixels, indicated by `sizeScroll`."},{"pos":[37949,37959],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Indicates how far the container document is to scroll.","pos":[37979,38033]},{"pos":[38043,38055],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful; otherwise 0.","pos":[38059,38094]},{"pos":[38104,38111],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Positive values indicate scrolling down and to the right; negative values indicate scrolling up and to the left.","pos":[38115,38227]},{"pos":[38237,38312],"content":"<bpt id=\"p1\">&lt;a name=\"coleserverdoc__updateallitems\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleServerDoc::UpdateAllItems","linkify":"<a name=\"coleserverdoc__updateallitems\"></a>  COleServerDoc::UpdateAllItems","source":"<a name=\"coleserverdoc__updateallitems\"></a>  COleServerDoc::UpdateAllItems"},{"content":"Call this function to notify all linked items connected to the document that the document has changed.","pos":[38316,38418]},{"pos":[38595,38605],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to the item that modified the document, or <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> if all items are to be updated.","pos":[38622,38713],"source":" Pointer to the item that modified the document, or **NULL** if all items are to be updated."},{"content":"Contains information about the modification.","pos":[38731,38775]},{"content":"Pointer to an object storing information about the modification.","pos":[38793,38857]},{"content":"Determines how the item is to be drawn.","pos":[38881,38920]},{"content":"This is a value from the <ph id=\"ph1\">`DVASPECT`</ph> enumeration.","pos":[38921,38969],"source":" This is a value from the `DVASPECT` enumeration."},{"content":"This parameter can have one of the following values:","pos":[38970,39022]},{"pos":[39030,39151],"content":"<ph id=\"ph1\">`DVASPECT_CONTENT`</ph> Item is represented in such a way that it can be displayed as an embedded object inside its container.","source":"`DVASPECT_CONTENT` Item is represented in such a way that it can be displayed as an embedded object inside its container."},{"pos":[39159,39276],"content":"<ph id=\"ph1\">`DVASPECT_THUMBNAIL`</ph> Item is rendered in a \"thumbnail\" representation so that it can be displayed in a browsing tool.","source":"`DVASPECT_THUMBNAIL` Item is rendered in a \"thumbnail\" representation so that it can be displayed in a browsing tool."},{"pos":[39284,39331],"content":"<ph id=\"ph1\">`DVASPECT_ICON`</ph> Item is represented by an icon.","source":"`DVASPECT_ICON` Item is represented by an icon."},{"pos":[39339,39444],"content":"<ph id=\"ph1\">`DVASPECT_DOCPRINT`</ph> Item is represented as if it were printed using the Print command from the File menu.","source":"`DVASPECT_DOCPRINT` Item is represented as if it were printed using the Print command from the File menu."},{"pos":[39454,39461],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You typically call this function after the user changes the server document.","pos":[39465,39541]},{"content":"If an OLE item is linked to the document with an automatic link, the item is updated to reflect the changes.","pos":[39542,39650]},{"content":"In container applications written with the Microsoft Foundation Class Library, the <bpt id=\"p1\">[</bpt>OnChange<ept id=\"p1\">](../../mfc/reference/coleclientitem-class.md#coleclientitem__onchange)</ept> member function of <ph id=\"ph1\">`COleClientItem`</ph> is called.","pos":[39651,39861],"source":" In container applications written with the Microsoft Foundation Class Library, the [OnChange](../../mfc/reference/coleclientitem-class.md#coleclientitem__onchange) member function of `COleClientItem` is called."},{"content":"This function calls the <ph id=\"ph1\">`OnUpdate`</ph> member function for each of the document's items except the sending item, passing <ph id=\"ph2\">`pHint`</ph>, <ph id=\"ph3\">`lHint`</ph>, and <ph id=\"ph4\">`nDrawAspect`</ph>.","pos":[39868,40021],"source":"This function calls the `OnUpdate` member function for each of the document's items except the sending item, passing `pHint`, `lHint`, and `nDrawAspect`."},{"content":"Use these parameters to pass information to the items about the modifications made to the document.","pos":[40022,40121]},{"content":"You can encode information using <ph id=\"ph1\">`lHint`</ph> or you can define a <ph id=\"ph2\">`CObject`</ph>-derived class to store information about the modifications and pass an object of that class using <ph id=\"ph3\">`pHint`</ph>.","pos":[40122,40299],"source":" You can encode information using `lHint` or you can define a `CObject`-derived class to store information about the modifications and pass an object of that class using `pHint`."},{"content":"Override the <ph id=\"ph1\">`OnUpdate`</ph> member function in your <ph id=\"ph2\">`COleServerItem`</ph>-derived class to optimize the updating of each item depending on whether its presentation has changed.","pos":[40300,40467],"source":" Override the `OnUpdate` member function in your `COleServerItem`-derived class to optimize the updating of each item depending on whether its presentation has changed."},{"pos":[40476,40484],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>MFC Sample HIERSVR<ept id=\"p1\">](../../visual-cpp-samples.md)</ept><ph id=\"ph1\"> </ph>","pos":[40488,40538],"source":"[MFC Sample HIERSVR](../../visual-cpp-samples.md) "},{"content":"<bpt id=\"p1\"> [</bpt>COleLinkingDoc Class<ept id=\"p1\">](../../mfc/reference/colelinkingdoc-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[40541,40610],"source":" [COleLinkingDoc Class](../../mfc/reference/colelinkingdoc-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[40613,40662],"source":" [Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>COleDocument Class<ept id=\"p1\">](../../mfc/reference/coledocument-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[40665,40730],"source":" [COleDocument Class](../../mfc/reference/coledocument-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>COleLinkingDoc Class<ept id=\"p1\">](../../mfc/reference/colelinkingdoc-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[40733,40802],"source":" [COleLinkingDoc Class](../../mfc/reference/colelinkingdoc-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>COleTemplateServer Class<ept id=\"p1\">](../../mfc/reference/coletemplateserver-class.md)</ept>","pos":[40805,40881],"source":" [COleTemplateServer Class](../../mfc/reference/coletemplateserver-class.md)"}],"content":"---\ntitle: \"COleServerDoc Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"COleServerDoc\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"servers, OLE\"\n  - \"OLE server applications, managing server documents\"\n  - \"container/server applications\"\n  - \"OLE server documents\"\n  - \"COleServerDoc class\"\n  - \"server documents, OLE\"\n  - \"OLE containers, server documents\"\nms.assetid: a9cdd96a-e0ac-43bb-9203-2c29237e965c\ncaps.latest.revision: 24\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# COleServerDoc Class\nThe base class for OLE server documents.  \n  \n## Syntax  \n  \n```  \nclass AFX_NOVTABLE COleServerDoc : public COleLinkingDoc  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[COleServerDoc::COleServerDoc](#coleserverdoc__coleserverdoc)|Constructs a `COleServerDoc` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[COleServerDoc::ActivateDocObject](#coleserverdoc__activatedocobject)|Activates the associated DocObject document.|  \n|[COleServerDoc::ActivateInPlace](#coleserverdoc__activateinplace)|Activates the document for in-place editing.|  \n|[COleServerDoc::DeactivateAndUndo](#coleserverdoc__deactivateandundo)|Deactivates the server's user interface.|  \n|[COleServerDoc::DiscardUndoState](#coleserverdoc__discardundostate)|Discards undo-state information.|  \n|[COleServerDoc::GetClientSite](#coleserverdoc__getclientsite)|Retrieves a pointer to the underlying `IOleClientSite` interface.|  \n|[COleServerDoc::GetEmbeddedItem](#coleserverdoc__getembeddeditem)|Returns a pointer to an item representing the entire document.|  \n|[COleServerDoc::GetItemClipRect](#coleserverdoc__getitemcliprect)|Returns the current clipping rectangle for in-place editing.|  \n|[COleServerDoc::GetItemPosition](#coleserverdoc__getitemposition)|Returns the current position rectangle, relative to the container application's client area, for in-place editing.|  \n|[COleServerDoc::GetZoomFactor](#coleserverdoc__getzoomfactor)|Returns the zoom factor in pixels.|  \n|[COleServerDoc::IsDocObject](#coleserverdoc__isdocobject)|Determines if the document is a DocObject.|  \n|[COleServerDoc::IsEmbedded](#coleserverdoc__isembedded)|Indicates whether the document is embedded in a container document or running stand-alone.|  \n|[COleServerDoc::IsInPlaceActive](#coleserverdoc__isinplaceactive)|Returns `TRUE` if the item is currently activated in place.|  \n|[COleServerDoc::NotifyChanged](#coleserverdoc__notifychanged)|Notifies containers that the user has changed the document.|  \n|[COleServerDoc::NotifyClosed](#coleserverdoc__notifyclosed)|Notifies containers that the user has closed the document.|  \n|[COleServerDoc::NotifyRename](#coleserverdoc__notifyrename)|Notifies containers that the user has renamed the document.|  \n|[COleServerDoc::NotifySaved](#coleserverdoc__notifysaved)|Notifies containers that the user has saved the document.|  \n|[COleServerDoc::OnDeactivate](#coleserverdoc__ondeactivate)|Called by the framework when the user deactivates an item that was activated in place.|  \n|[COleServerDoc::OnDeactivateUI](#coleserverdoc__ondeactivateui)|Called by the framework to destroy controls and other user-interface elements created for in-place activation.|  \n|[COleServerDoc::OnDocWindowActivate](#coleserverdoc__ondocwindowactivate)|Called by the framework when the container's document frame window is activated or deactivated.|  \n|[COleServerDoc::OnResizeBorder](#coleserverdoc__onresizeborder)|Called by the framework when the container application's frame window or document window is resized.|  \n|[COleServerDoc::OnShowControlBars](#coleserverdoc__onshowcontrolbars)|Called by the framework to show or hide control bars for in-place editing.|  \n|[COleServerDoc::OnUpdateDocument](#coleserverdoc__onupdatedocument)|Called by the framework when a server document that is an embedded item is saved, updating the container's copy of the item.|  \n|[COleServerDoc::RequestPositionChange](#coleserverdoc__requestpositionchange)|Changes the position of the in-place editing frame.|  \n|[COleServerDoc::SaveEmbedding](#coleserverdoc__saveembedding)|Tells the container application to save the document.|  \n|[COleServerDoc::ScrollContainerBy](#coleserverdoc__scrollcontainerby)|Scrolls the container document.|  \n|[COleServerDoc::UpdateAllItems](#coleserverdoc__updateallitems)|Notifies containers that the user has changed the document.|  \n  \n### Protected Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[COleServerDoc::CreateInPlaceFrame](#coleserverdoc__createinplaceframe)|Called by the framework to create a frame window for in-place editing.|  \n|[COleServerDoc::DestroyInPlaceFrame](#coleserverdoc__destroyinplaceframe)|Called by the framework to destroy a frame window for in-place editing.|  \n|[COleServerDoc::GetDocObjectServer](#coleserverdoc__getdocobjectserver)|Override this function to create a new `CDocObjectServer` object and indicate that this document is a DocObject container.|  \n|[COleServerDoc::OnClose](#coleserverdoc__onclose)|Called by the framework when a container requests to close the document.|  \n|[COleServerDoc::OnExecOleCmd](#coleserverdoc__onexecolecmd)|Executes a specified command or displays help for the command.|  \n|[COleServerDoc::OnFrameWindowActivate](#coleserverdoc__onframewindowactivate)|Called by the framework when the container's frame window is activated or deactivated.|  \n|[COleServerDoc::OnGetEmbeddedItem](#coleserverdoc__ongetembeddeditem)|Called to get a `COleServerItem` that represents the entire document; used to get an embedded item. Implementation required.|  \n|[COleServerDoc::OnReactivateAndUndo](#coleserverdoc__onreactivateandundo)|Called by the framework to undo changes made during in-place editing.|  \n|[COleServerDoc::OnSetHostNames](#coleserverdoc__onsethostnames)|Called by the framework when a container sets the window title for an embedded object.|  \n|[COleServerDoc::OnSetItemRects](#coleserverdoc__onsetitemrects)|Called by the framework to position the in-place editing frame window within the container application's window.|  \n|[COleServerDoc::OnShowDocument](#coleserverdoc__onshowdocument)|Called by the framework to show or hide the document.|  \n  \n## Remarks  \n A server document can contain [COleServerItem](../../mfc/reference/coleserveritem-class.md) objects, which represent the server interface to embedded or linked items. When a server application is launched by a container to edit an embedded item, the item is loaded as its own server document; the `COleServerDoc` object contains just one `COleServerItem` object, consisting of the entire document. When a server application is launched by a container to edit a linked item, an existing document is loaded from disk; a portion of the document's contents is highlighted to indicate the linked item.  \n  \n `COleServerDoc` objects can also contain items of the [COleClientItem](../../mfc/reference/coleclientitem-class.md) class. This allows you to create container-server applications. The framework provides functions to properly store the `COleClientItem` items while servicing the `COleServerItem` objects.  \n  \n If your server application does not support links, a server document will always contain only one server item, which represents the entire embedded object as a document. If your server application does support links, it must create a server item each time a selection is copied to the Clipboard.  \n  \n To use `COleServerDoc`, derive a class from it and implement the [OnGetEmbeddedItem](#coleserverdoc__ongetembeddeditem) member function, which allows your server to support embedded items. Derive a class from `COleServerItem` to implement the items in your documents, and return objects of that class from `OnGetEmbeddedItem`.  \n  \n To support linked items, `COleServerDoc` provides the [OnGetLinkedItem](../../mfc/reference/colelinkingdoc-class.md#colelinkingdoc__ongetlinkeditem) member function. You can use the default implementation or override it if you have your own way of managing document items.  \n  \n You need one `COleServerDoc`-derived class for each type of server document your application supports. For example, if your server application supports worksheets and charts, you need two `COleServerDoc`-derived classes.  \n  \n For more information on servers, see the article [Servers: Implementing a Server](../../mfc/servers-implementing-a-server.md).  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CDocument](../../mfc/reference/cdocument-class.md)  \n  \n [COleDocument](../../mfc/reference/coledocument-class.md)  \n  \n [COleLinkingDoc](../../mfc/reference/colelinkingdoc-class.md)  \n  \n `COleServerDoc`  \n  \n## Requirements  \n **Header:** afxole.h  \n  \n##  <a name=\"coleserverdoc__activatedocobject\"></a>  COleServerDoc::ActivateDocObject  \n Activates the associated DocObject document.  \n  \n```  \nvoid ActivateDocObject();\n```  \n  \n### Remarks  \n By default, `COleServerDoc` does not support Active documents (also referred to as DocObjects). To enable this support, see [GetDocObjectServer](#coleserverdoc__getdocobjectserver) and class [CDocObjectServer](../../mfc/reference/cdocobjectserver-class.md).  \n  \n##  <a name=\"coleserverdoc__activateinplace\"></a>  COleServerDoc::ActivateInPlace  \n Activates the item for in-place editing.  \n  \n```  \nBOOL ActivateInPlace();\n```  \n  \n### Return Value  \n Nonzero if successful; otherwise 0, which indicates that the item is fully open.  \n  \n### Remarks  \n This function performs all operations necessary for in-place activation. It creates an in-place frame window, activates it and sizes it to the item, sets up shared menus and other controls, scrolls the item into view, and sets the focus to the in-place frame window.  \n  \n This function is called by the default implementation of [COleServerItem::OnShow](../../mfc/reference/coleserveritem-class.md#coleserveritem__onshow). Call this function if your application supports another verb for in-place activation (such as Play).  \n  \n##  <a name=\"coleserverdoc__coleserverdoc\"></a>  COleServerDoc::COleServerDoc  \n Constructs a `COleServerDoc` object without connecting with the OLE system DLLs.  \n  \n```  \nCOleServerDoc();\n```  \n  \n### Remarks  \n You must call [COleLinkingDoc::Register](../../mfc/reference/colelinkingdoc-class.md#colelinkingdoc__register) to open communications with OLE. If you are using [COleTemplateServer](../../mfc/reference/coletemplateserver-class.md) in your application, `COleLinkingDoc::Register` is called for you by `COleLinkingDoc`'s implementation of `OnNewDocument`, `OnOpenDocument`, and `OnSaveDocument`.  \n  \n##  <a name=\"coleserverdoc__createinplaceframe\"></a>  COleServerDoc::CreateInPlaceFrame  \n The framework calls this function to create a frame window for in-place editing.  \n  \n```  \nvirtual COleIPFrameWnd* CreateInPlaceFrame(CWnd* pParentWnd);\n```  \n  \n### Parameters  \n `pParentWnd`  \n Pointer to the container application's parent window.  \n  \n### Return Value  \n A pointer to the in-place frame window, or **NULL** if unsuccessful.  \n  \n### Remarks  \n The default implementation uses information specified in the document template to create the frame. The view used is the first view created for the document. This view is temporarily detached from the original frame and attached to the newly created frame.  \n  \n This is an advanced overridable.  \n  \n##  <a name=\"coleserverdoc__deactivateandundo\"></a>  COleServerDoc::DeactivateAndUndo  \n Call this function if your application supports Undo and the user chooses Undo after activating an item but before editing it.  \n  \n```  \nBOOL DeactivateAndUndo();\n```  \n  \n### Return Value  \n Nonzero on success; otherwise 0.  \n  \n### Remarks  \n If the container application is written using the Microsoft Foundation Class Library, calling this function causes [COleClientItem::OnDeactivateAndUndo](../../mfc/reference/coleclientitem-class.md#coleclientitem__ondeactivateandundo) to be called, which deactivates the server's user interface.  \n  \n##  <a name=\"coleserverdoc__destroyinplaceframe\"></a>  COleServerDoc::DestroyInPlaceFrame  \n The framework calls this function to destroy an in-place frame window and return the server application's document window to its state before in-place activation.  \n  \n```  \nvirtual void DestroyInPlaceFrame(COleIPFrameWnd* pFrameWnd);\n```  \n  \n### Parameters  \n `pFrameWnd`  \n Pointer to the in-place frame window to be destroyed.  \n  \n### Remarks  \n This is an advanced overridable.  \n  \n##  <a name=\"coleserverdoc__discardundostate\"></a>  COleServerDoc::DiscardUndoState  \n If the user performs an editing operation that cannot be undone, call this function to force the container application to discard its undo-state information.  \n  \n```  \nBOOL DiscardUndoState();\n```  \n  \n### Return Value  \n Nonzero on success; otherwise 0.  \n  \n### Remarks  \n This function is provided so that servers that support Undo can free resources that would otherwise be consumed by undo-state information that cannot be used.  \n  \n##  <a name=\"coleserverdoc__getclientsite\"></a>  COleServerDoc::GetClientSite  \n Retrieves a pointer to the underlying `IOleClientSite` interface.  \n  \n```  \nLPOLECLIENTSITE GetClientSite() const;\n\n \n```  \n  \n### Return Value  \n Retrieves a pointer to the underlying [IOleClientSite](http://msdn.microsoft.com/library/windows/desktop/ms693706) interface.  \n  \n##  <a name=\"coleserverdoc__getdocobjectserver\"></a>  COleServerDoc::GetDocObjectServer  \n Override this function to create a new `CDocObjectServer` item and return a pointer to it.  \n  \n```  \nvirtual CDocObjectServer* GetDocObjectServer(LPOLEDOCUMENTSITE pDocSite);\n```  \n  \n### Parameters  \n `pDocSite`  \n Pointer to the `IOleDocumentSite` interface that will connect this document to the server.  \n  \n### Return Value  \n A pointer to a `CDocObjectServer`; **NULL** if the operation failed.  \n  \n### Remarks  \n When a DocObject server is activated, the return of a non- **NULL** pointer shows that the client can support DocObjects. The default implementation returns **NULL**.  \n  \n A typical implementation for a document that supports DocObjects will simply allocate a new `CDocObjectServer` object and return it to the caller. For example:  \n  \n [!code-cpp[NVC_MFCOleServer#3](../../mfc/codesnippet/cpp/coleserverdoc-class_1.cpp)]  \n  \n##  <a name=\"coleserverdoc__getembeddeditem\"></a>  COleServerDoc::GetEmbeddedItem  \n Call this function to get a pointer to an item representing the entire document.  \n  \n```  \nCOleServerItem* GetEmbeddedItem();\n```  \n  \n### Return Value  \n A pointer to an item representing the entire document; **NULL** if the operation failed.  \n  \n### Remarks  \n It calls [COleServerDoc::OnGetEmbeddedItem](#coleserverdoc__ongetembeddeditem), a virtual function with no default implementation.  \n  \n##  <a name=\"coleserverdoc__getitemcliprect\"></a>  COleServerDoc::GetItemClipRect  \n Call the `GetItemClipRect` member function to get the clipping-rectangle coordinates of the item that is being edited in place.  \n  \n```  \nvoid GetItemClipRect(LPRECT lpClipRect) const;\n\n \n```  \n  \n### Parameters  \n `lpClipRect`  \n Pointer to a `RECT` structure or a `CRect` object to receive the clipping-rectangle coordinates of the item.  \n  \n### Remarks  \n Coordinates are in pixels relative to the container application window's client area.  \n  \n Drawing should not occur outside the clipping rectangle. Usually, drawing is automatically restricted. Use this function to determine whether the user has scrolled outside the visible portion of the document; if so, scroll the container document as needed by means of a call to [ScrollContainerBy](#coleserverdoc__scrollcontainerby).  \n  \n##  <a name=\"coleserverdoc__getitemposition\"></a>  COleServerDoc::GetItemPosition  \n Call the `GetItemPosition` member function to get the coordinates of the item being edited in place.  \n  \n```  \nvoid GetItemPosition(LPRECT lpPosRect) const;\n\n \n```  \n  \n### Parameters  \n `lpPosRect`  \n Pointer to a `RECT` structure or a `CRect` object to receive the coordinates of the item.  \n  \n### Remarks  \n Coordinates are in pixels relative to the container application window's client area.  \n  \n The item's position can be compared with the current clipping rectangle to determine the extent to which the item is visible (or not visible) on the screen.  \n  \n##  <a name=\"coleserverdoc__getzoomfactor\"></a>  COleServerDoc::GetZoomFactor  \n The `GetZoomFactor` member function determines the \"zoom factor\" of an item that has been activated for in-place editing.  \n  \n```  \nBOOL GetZoomFactor(\n    LPSIZE lpSizeNum = NULL,  \n    LPSIZE lpSizeDenom = NULL,  \n    LPCRECT lpPosRect = NULL) const;\n\n \n```  \n  \n### Parameters  \n *lpSizeNum*  \n Pointer to an object of class `CSize` that will hold the zoom factor's numerator. Can be **NULL**.  \n  \n *lpSizeDenom*  \n Pointer to an object of class `CSize` that will hold the zoom factor's denominator. Can be **NULL**.  \n  \n `lpPosRect`  \n Pointer to an object of class `CRect` that describes the item's new position. If this argument is **NULL**, the function uses the item's current position.  \n  \n### Return Value  \n Nonzero if the item is activated for in-place editing and its zoom factor is other than 100% (1:1); otherwise 0.  \n  \n### Remarks  \n The zoom factor, in pixels, is the proportion of the item's size to its current extent. If the container application has not set the item's extent, its natural extent (as determined by [COleServerItem::OnGetExtent](../../mfc/reference/coleserveritem-class.md#coleserveritem__ongetextent)) is used.  \n  \n The function sets its first two arguments to the numerator and denominator of the item's \"zoom factor.\" If the item is not being edited in place, the function sets these arguments to a default value of 100% (or 1:1) and returns zero. For further information, see Technical Note 40, [MFC/OLE In-Place Resizing and Zooming](../../mfc/tn040-mfc-ole-in-place-resizing-and-zooming.md).  \n  \n##  <a name=\"coleserverdoc__isdocobject\"></a>  COleServerDoc::IsDocObject  \n Determines if the document is a DocObject.  \n  \n```  \nBOOL IsDocObject() const;\n\n \n```  \n  \n### Return Value  \n **TRUE** if the document is a DocObject; otherwise **FALSE**.  \n  \n##  <a name=\"coleserverdoc__isembedded\"></a>  COleServerDoc::IsEmbedded  \n Call the `IsEmbedded` member function to determine whether the document represents an object embedded in a container.  \n  \n```  \nBOOL IsEmbedded() const;\n\n \n```  \n  \n### Return Value  \n Nonzero if the `COleServerDoc` object is a document that represents an object embedded in a container; otherwise 0.  \n  \n### Remarks  \n A document loaded from a file is not embedded although it may be manipulated by a container application as a link. A document that is embedded in a container document is considered to be embedded.  \n  \n##  <a name=\"coleserverdoc__isinplaceactive\"></a>  COleServerDoc::IsInPlaceActive  \n Call the `IsInPlaceActive` member function to determine whether the item is currently in the in-place active state.  \n  \n```  \nBOOL IsInPlaceActive() const;\n\n \n```  \n  \n### Return Value  \n Nonzero if the `COleServerDoc` object is active in place; otherwise 0.  \n  \n##  <a name=\"coleserverdoc__notifychanged\"></a>  COleServerDoc::NotifyChanged  \n Call this function to notify all linked items connected to the document that the document has changed.  \n  \n```  \nvoid NotifyChanged();\n```  \n  \n### Remarks  \n Typically, you call this function after the user changes some global attribute such as the dimensions of the server document. If an OLE item is linked to the document with an automatic link, the item is updated to reflect the changes. In container applications written with the Microsoft Foundation Class Library, the [OnChange](../../mfc/reference/coleclientitem-class.md#coleclientitem__onchange) member function of `COleClientItem` is called.  \n  \n> [!NOTE]\n>  This function is included for compatibility with OLE 1. New applications should use [UpdateAllItems](#coleserverdoc__updateallitems).  \n  \n##  <a name=\"coleserverdoc__notifyclosed\"></a>  COleServerDoc::NotifyClosed  \n Call this function to notify the container(s) that the document has been closed.  \n  \n```  \nvoid NotifyClosed();\n```  \n  \n### Remarks  \n When the user chooses the Close command from the File menu, `NotifyClosed` is called by `COleServerDoc`'s implementation of the [OnCloseDocument](../../mfc/reference/cdocument-class.md#cdocument__onclosedocument) member function. In container applications written with the Microsoft Foundation Class Library, the [OnChange](../../mfc/reference/coleclientitem-class.md#coleclientitem__onchange) member function of `COleClientItem` is called.  \n  \n##  <a name=\"coleserverdoc__notifyrename\"></a>  COleServerDoc::NotifyRename  \n Call this function after the user renames the server document.  \n  \n```  \nvoid NotifyRename(LPCTSTR lpszNewName);\n```  \n  \n### Parameters  \n `lpszNewName`  \n Pointer to a string specifying the new name of the server document; this is typically a fully qualified path.  \n  \n### Remarks  \n When the user chooses the Save As command from the File menu, `NotifyRename` is called by `COleServerDoc`'s implementation of the [OnSaveDocument](../../mfc/reference/cdocument-class.md#cdocument__onsavedocument) member function. This function notifies the OLE system DLLs, which in turn notify the containers. In container applications written with the Microsoft Foundation Class Library, the [OnChange](../../mfc/reference/coleclientitem-class.md#coleclientitem__onchange) member function of `COleClientItem` is called.  \n  \n##  <a name=\"coleserverdoc__notifysaved\"></a>  COleServerDoc::NotifySaved  \n Call this function after the user saves the server document.  \n  \n```  \nvoid NotifySaved();\n```  \n  \n### Remarks  \n When the user chooses the Save command from the File menu, `NotifySaved` is called for you by `COleServerDoc`'s implementation of [OnSaveDocument](../../mfc/reference/cdocument-class.md#cdocument__onsavedocument). This function notifies the OLE system DLLs, which in turn notify the containers. In container applications written with the Microsoft Foundation Class Library, the [OnChange](../../mfc/reference/coleclientitem-class.md#coleclientitem__onchange) member function of `COleClientItem` is called.  \n  \n##  <a name=\"coleserverdoc__onclose\"></a>  COleServerDoc::OnClose  \n Called by the framework when a container requests that the server document be closed.  \n  \n```  \nvirtual void OnClose(OLECLOSE dwCloseOption);\n```  \n  \n### Parameters  \n `dwCloseOption`  \n A value from the enumeration `OLECLOSE`. This parameter can have one of the following values:  \n  \n- `OLECLOSE_SAVEIFDIRTY` The file is saved if it has been modified.  \n  \n- `OLECLOSE_NOSAVE` The file is closed without being saved.  \n  \n- `OLECLOSE_PROMPTSAVE` If the file has been modified, the user is prompted about saving it.  \n  \n### Remarks  \n The default implementation calls `CDocument::OnCloseDocument`.  \n  \n For more information and additional values, see [OLECLOSE](http://msdn.microsoft.com/library/windows/desktop/ms680623) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleserverdoc__ondeactivate\"></a>  COleServerDoc::OnDeactivate  \n Called by the framework when the user deactivates an embedded or linked item that is currently in-place active.  \n  \n```  \nvirtual void OnDeactivate();\n```  \n  \n### Remarks  \n This function restores the container application's user interface to its original state and destroys any menus and other controls that were created for in-place activation.  \n  \n The undo state information should be unconditionally released at this point.  \n  \n For more information, see the article [Activation](../../mfc/activation-cpp.md)..  \n  \n##  <a name=\"coleserverdoc__ondeactivateui\"></a>  COleServerDoc::OnDeactivateUI  \n Called when the user deactivates an item that was activated in place.  \n  \n```  \nvirtual void OnDeactivateUI(BOOL bUndoable);\n```  \n  \n### Parameters  \n `bUndoable`  \n Specifies whether the editing changes can be undone.  \n  \n### Remarks  \n This function restores the container application's user interface to its original state, hiding any menus and other controls that were created for in-place activation.  \n  \n The framework always sets `bUndoable` to **FALSE**. If the server supports undo and there is an operation that can be undone, call the base-class implementation with `bUndoable` set to **TRUE**.  \n  \n##  <a name=\"coleserverdoc__ondocwindowactivate\"></a>  COleServerDoc::OnDocWindowActivate  \n The framework calls this function to activate or deactivate a document window for in-place editing.  \n  \n```  \nvirtual void OnDocWindowActivate(BOOL bActivate);\n```  \n  \n### Parameters  \n `bActivate`  \n Specifies whether the document window is to be activated or deactivated.  \n  \n### Remarks  \n The default implementation removes or adds the frame-level user interface elements as appropriate. Override this function if you want to perform additional actions when the document containing your item is activated or deactivated.  \n  \n For more information, see the article [Activation](../../mfc/activation-cpp.md)..  \n  \n##  <a name=\"coleserverdoc__onexecolecmd\"></a>  COleServerDoc::OnExecOleCmd  \n The framework calls this function to execute a specified command or display help for the command.  \n  \n```  \nvirtual HRESULT OnExecOleCmd(\n    const GUID* pguidCmdGroup,  \n    DWORD nCmdID,  \n    DWORD nCmdExecOpt,  \n    VARIANTARG* pvarargIn,  \n    VARIANTARG* pvarargOut);\n```  \n  \n### Parameters  \n `pguidCmdGroup`  \n A pointer to a GUID that identifies a set of commands. Can be **NULL** to indicate the default command group.  \n  \n `nCmdID`  \n The command to execute. Must be in the group identified by `pguidCmdGroup`.  \n  \n *nCmdExecOut*  \n The way the object should execute the command, one or more of the following values from the **OLECMDEXECOPT** enumeration:  \n  \n **OLECMDEXECOPT_DODEFAULT**  \n  \n **OLECMDEXECOPT_PROMPTUSER**  \n  \n **OLECMDEXECOPT_DONTPROMPTUSER**  \n  \n **OLECMDEXECOPT_SHOWHELP**  \n  \n `pvarargIn`  \n Pointer to a **VARIANTARG** containing input arguments for the command. Can be **NULL**.  \n  \n `pvarargOut`  \n Pointer to a **VARIANTARG** to receive the output return values from the command. Can be **NULL**.  \n  \n### Return Value  \n Returns `S_OK` if successful; otherwise, one of the following error codes:  \n  \n|Value|Description|  \n|-----------|-----------------|  \n|**E_UNEXPECTED**|Unexpected error occurred|  \n|**E_FAIL**|Error occurred|  \n|**E_NOTIMPL**|Indicates MFC itself should attempt to translate and dispatch the command|  \n|**OLECMDERR_E_UNKNOWNGROUP**|`pguidCmdGroup` is non- **NULL** but does not specify a recognized command group|  \n|**OLECMDERR_E_NOTSUPPORTED**|`nCmdID` is not recognized as a valid command in the group `pguidCmdGroup`|  \n|**OLECMDERR_DISABLED**|The command identified by `nCmdID` is disabled and cannot be executed|  \n|**OLECMDERR_NOHELP**|Caller asked for help on the command identified by `nCmdID` but no help is available|  \n|**OLECMDERR_CANCELED**|User canceled the execution|  \n  \n### Remarks  \n `COleCmdUI` can be used to enable, update, and set other properties of DocObject user interface commands. After the commands are initialized, you can execute them with `OnExecOleCmd`.  \n  \n The framework calls the function before attempting to translate and dispatch an OLE document command. You don't need to override this function to handle standard OLE document commands, but you must supply an override to this function if you want to handle your own custom commands or handle commands that accept parameters or return results.  \n  \n Most of the commands do not take arguments or return values. For a majority of commands the caller can pass **NULL**s for `pvarargIn` and `pvarargOut`. For commands that expect input values, the caller can declare and initialize a **VARIANTARG** variable and pass a pointer to the variable in `pvarargIn`. For commands that require a single value, the argument can be stored directly in the **VARIANTARG** and passed to the function. Multiple arguments must be packaged within the **VARIANTARG** using one of the supported types (such as `IDispatch` and **SAFEARRAY** ).  \n  \n Similarly, if a command returns arguments the caller is expected to declare a **VARIANTARG**, initialize it to `VT_EMPTY`, and pass its address in `pvarargOut`. If a command returns a single value, the object can store that value directly in `pvarargOut`. Multiple output values must be packaged in some way appropriate for the **VARIANTARG**.  \n  \n The base-class implementation of this function will walk the **OLE_COMMAND_MAP** structures associated with the command target and try to dispatch the command to an appropriate handler. The base-class implementation works only with commands that do not accept arguments or return values. If you need to handle commands that do accept arguments or return values, you must override this function and work with the `pvarargIn` and `pvarargOut` parameters yourself.  \n  \n##  <a name=\"coleserverdoc__onframewindowactivate\"></a>  COleServerDoc::OnFrameWindowActivate  \n The framework calls this function when the container application's frame window is activated or deactivated.  \n  \n```  \nvirtual void OnFrameWindowActivate(BOOL bActivate);\n```  \n  \n### Parameters  \n `bActivate`  \n Specifies whether the frame window is to be activated or deactivated.  \n  \n### Remarks  \n The default implementation cancels any help modes the frame window might be in. Override this function if you want to perform special processing when the frame window is activated or deactivated.  \n  \n For more information, see the article [Activation](../../mfc/activation-cpp.md)..  \n  \n##  <a name=\"coleserverdoc__ongetembeddeditem\"></a>  COleServerDoc::OnGetEmbeddedItem  \n Called by the framework when a container application calls the server application to create or edit an embedded item.  \n  \n```  \nvirtual COleServerItem* OnGetEmbeddedItem() = 0;  \n```  \n  \n### Return Value  \n A pointer to an item representing the entire document; **NULL** if the operation failed.  \n  \n### Remarks  \n There is no default implementation. You must override this function to return an item that represents the entire document. This return value should be an object of a `COleServerItem`-derived class.  \n  \n##  <a name=\"coleserverdoc__onreactivateandundo\"></a>  COleServerDoc::OnReactivateAndUndo  \n The framework calls this function when the user chooses to undo changes made to an item that has been activated in place, changed, and subsequently deactivated.  \n  \n```  \nvirtual BOOL OnReactivateAndUndo();\n```  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n The default implementation does nothing except return **FALSE** to indicate failure.  \n  \n Override this function if your application supports undo. Usually you would perform the undo operation, then activate the item by calling `ActivateInPlace`. If the container application is written with the Microsoft Foundation Class Library, calling `COleClientItem::ReactivateAndUndo` causes this function to be called.  \n  \n##  <a name=\"coleserverdoc__onresizeborder\"></a>  COleServerDoc::OnResizeBorder  \n The framework calls this function when the container application's frame windows change size.  \n  \n```  \nvirtual void OnResizeBorder(\n    LPCRECT lpRectBorder,  \n    LPOLEINPLACEUIWINDOW lpUIWindow,  \n    BOOL bFrame);\n```  \n  \n### Parameters  \n `lpRectBorder`  \n Pointer to a `RECT` structure or a `CRect` object that specifies the coordinates of the border.  \n  \n `lpUIWindow`  \n Pointer to an object of class **IOleInPlaceUIWindow** that owns the current in-place editing session.  \n  \n *bFrame*  \n **TRUE** if `lpUIWindow` points to the container application's top-level frame window, or **FALSE** if `lpUIWindow` points to the container application's document-level frame window.  \n  \n### Remarks  \n This function resizes and adjusts toolbars and other user-interface elements in accordance with the new window size.  \n  \n For more information, see [IOleInPlaceUIWindow](http://msdn.microsoft.com/library/windows/desktop/ms680716) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n This is an advanced overridable.  \n  \n##  <a name=\"coleserverdoc__onsethostnames\"></a>  COleServerDoc::OnSetHostNames  \n Called by the framework when the container sets or changes the host names for this document.  \n  \n```  \nvirtual void OnSetHostNames(\n    LPCTSTR lpszHost,  \n    LPCTSTR lpszHostObj);\n```  \n  \n### Parameters  \n `lpszHost`  \n Pointer to a string that specifies the name of the container application.  \n  \n `lpszHostObj`  \n Pointer to a string that specifies the container's name for the document.  \n  \n### Remarks  \n The default implementation changes the document title for all views referring to this document.  \n  \n Override this function if your application sets the titles through a different mechanism.  \n  \n##  <a name=\"coleserverdoc__onsetitemrects\"></a>  COleServerDoc::OnSetItemRects  \n The framework calls this function to position the in-place editing frame window within the container application's frame window.  \n  \n```  \nvirtual void OnSetItemRects(\n    LPCRECT lpPosRect,  \n    LPCRECT lpClipRect);\n```  \n  \n### Parameters  \n `lpPosRect`  \n Pointer to a `RECT` structure or a `CRect` object that specifies the in-place frame window's position relative to the container application's client area.  \n  \n `lpClipRect`  \n Pointer to a `RECT` structure or a `CRect` object that specifies the in-place frame window's clipping rectangle relative to the container application's client area.  \n  \n### Remarks  \n Override this function to update the view's zoom factor, if necessary.  \n  \n This function is usually called in response to a `RequestPositionChange` call, although it can be called at any time by the container to request a position change for the in-place item.  \n  \n##  <a name=\"coleserverdoc__onshowcontrolbars\"></a>  COleServerDoc::OnShowControlBars  \n The framework calls this function to show or hide the server application's control bars associated with the frame window identified by `pFrameWnd`.  \n  \n```  \nvirtual void OnShowControlBars(\n    CFrameWnd* pFrameWnd,  \n    BOOL bShow);\n```  \n  \n### Parameters  \n `pFrameWnd`  \n Pointer to the frame window whose control bars should be hidden or shown.  \n  \n `bShow`  \n Determines whether control bars are shown or hidden.  \n  \n### Remarks  \n The default implementation enumerates all control bars owned by that frame window and hides or shows them.  \n  \n##  <a name=\"coleserverdoc__onshowdocument\"></a>  COleServerDoc::OnShowDocument  \n The framework calls the `OnShowDocument` function when the server document must be hidden or shown.  \n  \n```  \nvirtual void OnShowDocument(BOOL bShow);\n```  \n  \n### Parameters  \n `bShow`  \n Specifies whether the user interface to the document is to be shown or hidden.  \n  \n### Remarks  \n If `bShow` is **TRUE**, the default implementation activates the server application, if necessary, and causes the container application to scroll its window so that the item is visible. If `bShow` is **FALSE**, the default implementation deactivates the item through a call to `OnDeactivate`, then destroys or hides all frame windows that have been created for the document, except the first one. If no visible documents remain, the default implementation hides the server application.  \n  \n##  <a name=\"coleserverdoc__onupdatedocument\"></a>  COleServerDoc::OnUpdateDocument  \n Called by the framework when saving a document that is an embedded item in a compound document.  \n  \n```  \nvirtual BOOL OnUpdateDocument();\n```  \n  \n### Return Value  \n Nonzero if the document was successfully updated; otherwise 0.  \n  \n### Remarks  \n The default implementation calls the [COleServerDoc::NotifySaved](#coleserverdoc__notifysaved) and [COleServerDoc::SaveEmbedding](#coleserverdoc__saveembedding) member functions and then marks the document as clean. Override this function if you want to perform special processing when updating an embedded item.  \n  \n##  <a name=\"coleserverdoc__requestpositionchange\"></a>  COleServerDoc::RequestPositionChange  \n Call this member function to have the container application change the item's position.  \n  \n```  \nvoid RequestPositionChange(LPCRECT lpPosRect);\n```  \n  \n### Parameters  \n `lpPosRect`  \n Pointer to a `RECT` structure or a `CRect` object containing the item's new position.  \n  \n### Remarks  \n This function is usually called (in conjunction with `UpdateAllItems`) when the data in an in-place active item has changed. Following this call, the container might or might not perform the change by calling `OnSetItemRects`. The resulting position might be different from the one requested.  \n  \n##  <a name=\"coleserverdoc__saveembedding\"></a>  COleServerDoc::SaveEmbedding  \n Call this function to tell the container application to save the embedded object.  \n  \n```  \nvoid SaveEmbedding();\n```  \n  \n### Remarks  \n This function is called automatically from `OnUpdateDocument`. Note that this function causes the item to be updated on disk, so it is usually called only as a result of a specific user action.  \n  \n##  <a name=\"coleserverdoc__scrollcontainerby\"></a>  COleServerDoc::ScrollContainerBy  \n Call the `ScrollContainerBy` member function to scroll the container document by the amount, in pixels, indicated by `sizeScroll`.  \n  \n```  \nBOOL ScrollContainerBy(CSize sizeScroll);\n```  \n  \n### Parameters  \n `sizeScroll`  \n Indicates how far the container document is to scroll.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n Positive values indicate scrolling down and to the right; negative values indicate scrolling up and to the left.  \n  \n##  <a name=\"coleserverdoc__updateallitems\"></a>  COleServerDoc::UpdateAllItems  \n Call this function to notify all linked items connected to the document that the document has changed.  \n  \n```  \nvoid UpdateAllItems(\n    COleServerItem* pSender,  \n    LPARAM lHint = 0L,  \n    CObject* pHint = NULL,  \n    DVASPECT nDrawAspect = DVASPECT_CONTENT);\n```  \n  \n### Parameters  \n `pSender`  \n Pointer to the item that modified the document, or **NULL** if all items are to be updated.  \n  \n `lHint`  \n Contains information about the modification.  \n  \n `pHint`  \n Pointer to an object storing information about the modification.  \n  \n `nDrawAspect`  \n Determines how the item is to be drawn. This is a value from the `DVASPECT` enumeration. This parameter can have one of the following values:  \n  \n- `DVASPECT_CONTENT` Item is represented in such a way that it can be displayed as an embedded object inside its container.  \n  \n- `DVASPECT_THUMBNAIL` Item is rendered in a \"thumbnail\" representation so that it can be displayed in a browsing tool.  \n  \n- `DVASPECT_ICON` Item is represented by an icon.  \n  \n- `DVASPECT_DOCPRINT` Item is represented as if it were printed using the Print command from the File menu.  \n  \n### Remarks  \n You typically call this function after the user changes the server document. If an OLE item is linked to the document with an automatic link, the item is updated to reflect the changes. In container applications written with the Microsoft Foundation Class Library, the [OnChange](../../mfc/reference/coleclientitem-class.md#coleclientitem__onchange) member function of `COleClientItem` is called.  \n  \n This function calls the `OnUpdate` member function for each of the document's items except the sending item, passing `pHint`, `lHint`, and `nDrawAspect`. Use these parameters to pass information to the items about the modifications made to the document. You can encode information using `lHint` or you can define a `CObject`-derived class to store information about the modifications and pass an object of that class using `pHint`. Override the `OnUpdate` member function in your `COleServerItem`-derived class to optimize the updating of each item depending on whether its presentation has changed.  \n  \n## See Also  \n [MFC Sample HIERSVR](../../visual-cpp-samples.md)   \n [COleLinkingDoc Class](../../mfc/reference/colelinkingdoc-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [COleDocument Class](../../mfc/reference/coledocument-class.md)   \n [COleLinkingDoc Class](../../mfc/reference/colelinkingdoc-class.md)   \n [COleTemplateServer Class](../../mfc/reference/coletemplateserver-class.md)\n"}