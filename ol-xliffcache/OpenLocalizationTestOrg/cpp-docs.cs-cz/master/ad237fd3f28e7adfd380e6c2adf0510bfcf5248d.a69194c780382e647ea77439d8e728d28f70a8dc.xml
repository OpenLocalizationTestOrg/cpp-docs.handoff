{"nodes":[{"pos":[12,40],"content":"&lt;new&gt; | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"new<ph id=\"ph1\">&amp;gt;</ph> | Microsoft Docs","pos":[4,28],"source":"new&gt; | Microsoft Docs"}]},{"content":"new","pos":[623,626]},{"content":"Defines several types and functions that control the allocation and freeing of storage under program control.","pos":[631,740]},{"content":"It also defines components for reporting on storage management errors.","pos":[741,811]},{"content":"Syntax","pos":[820,826]},{"content":"Remarks","pos":[870,877]},{"content":"Some of the functions declared in this header are replaceable.","pos":[881,943]},{"content":"The implementation supplies a default version, whose behavior is described in this document.","pos":[944,1036]},{"content":"A program can, however, define a function with the same signature to replace the default version at link time.","pos":[1037,1147]},{"content":"The replacement version must satisfy the requirements described in this document.","pos":[1148,1229]},{"content":"Objects","pos":[1239,1246]},{"content":"nothrow","pos":[1268,1275]},{"pos":[1323,1421],"content":"Provides an object to be used as an argument for the <ph id=\"ph1\">`nothrow`</ph> versions of <bpt id=\"p1\">**</bpt>new<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>delete<ept id=\"p2\">**</ept>.","source":"Provides an object to be used as an argument for the `nothrow` versions of **new** and **delete**."},{"content":"Typedefs","pos":[1432,1440]},{"content":"new_handler","pos":[1462,1473]},{"content":"A type that points to a function suitable for use as a new handler.","pos":[1524,1591]},{"content":"Functions","pos":[1602,1611]},{"content":"set_new_handler","pos":[1633,1648]},{"content":"Installs a user function that is called when new fails in its attempt to allocate memory.","pos":[1704,1793]},{"content":"Operators","pos":[1804,1813]},{"content":"operator delete","pos":[1835,1850]},{"content":"The function called by a delete expression to deallocate storage for individual of objects.","pos":[1906,1997]},{"content":"operator delete&amp;#91;&amp;#93;","pos":[2003,2028],"source":"operator delete&#91;&#93;"},{"content":"The function called by a delete expression to deallocate storage for an array of objects.","pos":[2088,2177]},{"content":"operator new","pos":[2183,2195]},{"content":"The function called by a new expression to allocate storage for individual objects.","pos":[2248,2331]},{"content":"operator new&amp;#91;&amp;#93;","pos":[2337,2359],"source":"operator new&#91;&#93;"},{"content":"The function called by a new expression to allocate storage for an array of objects.","pos":[2416,2500]},{"content":"Classes","pos":[2511,2518]},{"content":"bad_alloc Class","pos":[2540,2555]},{"content":"The class describes an exception thrown to indicate that an allocation request did not succeed.","pos":[2597,2692]},{"content":"nothrow_t Class","pos":[2698,2713]},{"content":"The class is used as a function parameter to operator new to indicate that the function should return a null pointer to report an allocation failure, rather than throw an exception.","pos":[2759,2940]},{"content":"See Also","pos":[2950,2958]},{"content":"Header Files Reference","pos":[2963,2985]},{"content":"Thread Safety in the C++ Standard Library","pos":[3050,3091]}],"content":"---\ntitle: \"&lt;new&gt; | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std::<new>\"\n  - \"<new>\"\n  - \"std.<new>\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"new header\"\nms.assetid: 218e2a15-34e8-4ef3-9122-1e90eccf8559\ncaps.latest.revision: 18\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# &lt;new&gt;\nDefines several types and functions that control the allocation and freeing of storage under program control. It also defines components for reporting on storage management errors.  \n  \n## Syntax  \n  \n```  \n#include <new>  \n  \n```  \n  \n## Remarks  \n Some of the functions declared in this header are replaceable. The implementation supplies a default version, whose behavior is described in this document. A program can, however, define a function with the same signature to replace the default version at link time. The replacement version must satisfy the requirements described in this document.  \n  \n### Objects  \n  \n|||  \n|-|-|  \n|[nothrow](../standard-library/new-functions.md#nothrow)|Provides an object to be used as an argument for the `nothrow` versions of **new** and **delete**.|  \n  \n### Typedefs  \n  \n|||  \n|-|-|  \n|[new_handler](../standard-library/new-typedefs.md#new_handler)|A type that points to a function suitable for use as a new handler.|  \n  \n### Functions  \n  \n|||  \n|-|-|  \n|[set_new_handler](../standard-library/new-functions.md#set_new_handler)|Installs a user function that is called when new fails in its attempt to allocate memory.|  \n  \n### Operators  \n  \n|||  \n|-|-|  \n|[operator delete](../standard-library/new-operators.md#operator_delete)|The function called by a delete expression to deallocate storage for individual of objects.|  \n|[operator delete&#91;&#93;](../standard-library/new-operators.md#operator_delete_arr)|The function called by a delete expression to deallocate storage for an array of objects.|  \n|[operator new](../standard-library/new-operators.md#operator_new)|The function called by a new expression to allocate storage for individual objects.|  \n|[operator new&#91;&#93;](../standard-library/new-operators.md#operator_new_arr)|The function called by a new expression to allocate storage for an array of objects.|  \n  \n### Classes  \n  \n|||  \n|-|-|  \n|[bad_alloc Class](../standard-library/bad-alloc-class.md)|The class describes an exception thrown to indicate that an allocation request did not succeed.|  \n|[nothrow_t Class](../standard-library/nothrow-t-structure.md)|The class is used as a function parameter to operator new to indicate that the function should return a null pointer to report an allocation failure, rather than throw an exception.|  \n  \n## See Also  \n [Header Files Reference](../standard-library/cpp-standard-library-header-files.md)   \n [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)\n\n\n\n"}