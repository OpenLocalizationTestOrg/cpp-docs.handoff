{"nodes":[{"pos":[12,67],"content":"strncmp, wcsncmp, _mbsncmp, _mbsncmp_l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"strncmp, wcsncmp, _mbsncmp, _mbsncmp_l | Microsoft Docs","pos":[0,55]}]},{"content":"strncmp, wcsncmp, _mbsncmp, _mbsncmp_l","pos":[1562,1600]},{"content":"Compares up to the specified count of characters of two strings.","pos":[1601,1665]},{"pos":[1673,1912],"content":"[!IMPORTANT]\n `_mbsncmp` and `_mbsncmp_l` cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":" and `_mbsncmp_l` cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","pos":[24,237],"nodes":[{"content":"and <ph id=\"ph1\">`_mbsncmp_l`</ph> cannot be used in applications that execute in the Windows Runtime.","pos":[1,85],"source":" and `_mbsncmp_l` cannot be used in applications that execute in the Windows Runtime."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.","pos":[86,213],"source":" For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)."}]}]},{"content":"Syntax","pos":[1921,1927]},{"content":"Parameters","pos":[2494,2504]},{"content":"Strings to compare.","pos":[2530,2549]},{"content":"Number of characters to compare.","pos":[2567,2599]},{"content":"Locale to use.","pos":[2618,2632]},{"content":"Return Value","pos":[2641,2653]},{"pos":[2657,2753],"content":"The return value indicates the relation of the substrings of <ph id=\"ph1\">`string1`</ph> and <ph id=\"ph2\">`string2`</ph> as follows.","source":"The return value indicates the relation of the substrings of `string1` and `string2` as follows."},{"content":"Return value","pos":[2760,2772]},{"content":"Description","pos":[2773,2784]},{"content":"&lt; 0","pos":[2830,2833],"source":"< 0"},{"pos":[2844,2883],"content":"substring less than <ph id=\"ph1\">`string2`</ph> substring","source":" substring less than `string2` substring"},{"content":"0","pos":[2888,2889]},{"pos":[2900,2942],"content":"substring identical to <ph id=\"ph1\">`string2`</ph> substring","source":" substring identical to `string2` substring"},{"content":"&gt; 0","pos":[2947,2950],"source":"> 0"},{"pos":[2961,3003],"content":"substring greater than <ph id=\"ph1\">`string2`</ph> substring","source":" substring greater than `string2` substring"},{"pos":[3011,3145],"content":"On a parameter validation error, <ph id=\"ph1\">`_mbsncmp`</ph> and <ph id=\"ph2\">`_mbsncmp_l`</ph> return <ph id=\"ph3\">`_NLSCMPERROR`</ph>, which is defined in <ph id=\"ph4\">\\&lt;</ph>string.h&gt; and <ph id=\"ph5\">\\&lt;</ph>mbstring.h&gt;.","source":"On a parameter validation error, `_mbsncmp` and `_mbsncmp_l` return `_NLSCMPERROR`, which is defined in \\<string.h> and \\<mbstring.h>."},{"content":"Remarks","pos":[3154,3161]},{"content":"The <ph id=\"ph1\">`strncmp`</ph> function performs an ordinal comparison of at most the first <ph id=\"ph2\">`count`</ph> characters in <ph id=\"ph3\">`string1`</ph> and <ph id=\"ph4\">`string2`</ph> and returns a value indicating the relationship between the substrings.","pos":[3165,3357],"source":"The `strncmp` function performs an ordinal comparison of at most the first `count` characters in `string1` and `string2` and returns a value indicating the relationship between the substrings."},{"content":"is a case-sensitive version of <ph id=\"ph1\">`_strnicmp`</ph>.","pos":[3368,3411],"source":" is a case-sensitive version of `_strnicmp`."},{"content":"and <ph id=\"ph1\">`_mbsncmp`</ph> are case-sensitive versions of <ph id=\"ph2\">`_wcsnicmp`</ph> and <ph id=\"ph3\">`_mbsnicmp`</ph>.","pos":[3422,3496],"source":" and `_mbsncmp` are case-sensitive versions of `_wcsnicmp` and `_mbsnicmp`."},{"content":"and <ph id=\"ph1\">`_mbsncmp`</ph> are wide-character and multibyte-character versions of <ph id=\"ph2\">`strncmp`</ph>.","pos":[3513,3593],"source":" and `_mbsncmp` are wide-character and multibyte-character versions of `strncmp`."},{"content":"The arguments of <ph id=\"ph1\">`wcsncmp`</ph> are wide-character strings; those of <ph id=\"ph2\">`_mbsncmp`</ph> are multibyte-character strings.","pos":[3594,3701],"source":" The arguments of `wcsncmp` are wide-character strings; those of `_mbsncmp` are multibyte-character strings."},{"content":"recognizes multibyte-character sequences according to a multibyte code page and returns <ph id=\"ph1\">`_NLSCMPERROR`</ph> on an error.","pos":[3713,3828],"source":" recognizes multibyte-character sequences according to a multibyte code page and returns `_NLSCMPERROR` on an error."},{"content":"Also, <ph id=\"ph1\">`_mbsncmp`</ph> and <ph id=\"ph2\">`_mbsncmp_l`</ph> validate parameters.","pos":[3835,3889],"source":"Also, `_mbsncmp` and `_mbsncmp_l` validate parameters."},{"content":"If <ph id=\"ph1\">`string1`</ph> or <ph id=\"ph2\">`string2`</ph> is a null pointer, the invalid parameter handler is invoked, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[3890,4065],"source":" If `string1` or `string2` is a null pointer, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, <ph id=\"ph1\">`_mbsncmp`</ph> and <ph id=\"ph2\">`_mbsncmp_l`</ph> return <ph id=\"ph3\">`_NLSCMPERROR`</ph> and set <ph id=\"ph4\">`errno`</ph> to <ph id=\"ph5\">`EINVAL`</ph>.","pos":[4066,4181],"source":" If execution is allowed to continue, `_mbsncmp` and `_mbsncmp_l` return `_NLSCMPERROR` and set `errno` to `EINVAL`."},{"content":"and <ph id=\"ph1\">`wcsncmp`</ph> do not validate their parameters.","pos":[4192,4239],"source":" and `wcsncmp` do not validate their parameters."},{"content":"These functions behave identically otherwise.","pos":[4240,4285]},{"content":"The comparison behavior of <ph id=\"ph1\">`_mbsncmp`</ph> and <ph id=\"ph2\">`_mbsncmp_l`</ph> is affected by the setting of the <ph id=\"ph3\">`LC_CTYPE`</ph> category setting of the locale.","pos":[4292,4423],"source":"The comparison behavior of `_mbsncmp` and `_mbsncmp_l` is affected by the setting of the `LC_CTYPE` category setting of the locale."},{"content":"This controls detection of leading and trailing bytes of multibyte characters.","pos":[4424,4502]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>setlocale<ept id=\"p1\">](../../c-runtime-library/reference/setlocale-wsetlocale.md)</ept>.","pos":[4503,4600],"source":" For more information, see [setlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md)."},{"content":"The <ph id=\"ph1\">`_mbsncmp`</ph> function uses the current locale for this locale-dependent behavior.","pos":[4601,4684],"source":" The `_mbsncmp` function uses the current locale for this locale-dependent behavior."},{"content":"The <ph id=\"ph1\">`_mbsncmp_l`</ph> function is identical except that it uses the <ph id=\"ph2\">`locale`</ph> parameter instead.","pos":[4685,4775],"source":" The `_mbsncmp_l` function is identical except that it uses the `locale` parameter instead."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Locale<ept id=\"p1\">](../../c-runtime-library/locale.md)</ept>.","pos":[4776,4846],"source":" For more information, see [Locale](../../c-runtime-library/locale.md)."},{"content":"If the locale is a single-byte locale, the behavior of these functions is identical to <ph id=\"ph1\">`strncmp`</ph>.","pos":[4847,4944],"source":" If the locale is a single-byte locale, the behavior of these functions is identical to `strncmp`."},{"content":"Generic-Text Routine Mappings","pos":[4954,4983]},{"content":"TCHAR.H routine","pos":[4990,5005]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[5006,5034],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[5035,5048]},{"content":"_UNICODE defined","pos":[5049,5065]},{"content":"Maps to macro or inline function","pos":[5281,5313]},{"content":"Maps to macro or inline function","pos":[5325,5357]},{"content":"not applicable","pos":[5364,5378]},{"content":"not applicable","pos":[5383,5397]},{"content":"not applicable","pos":[5415,5429]},{"content":"Requirements","pos":[5441,5453]},{"content":"Routine","pos":[5460,5467]},{"content":"Required header","pos":[5468,5483]},{"content":"string.h&gt;","pos":[5540,5549],"source":"string.h>"},{"content":"string.h&gt; or <ph id=\"ph1\">\\&lt;</ph>wchar.h&gt;","pos":[5566,5589],"source":"string.h> or \\<wchar.h>"},{"pos":[5604,5605],"content":","},{"content":"mbstring.h&gt;","pos":[5621,5632],"source":"mbstring.h>"},{"pos":[5640,5744],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":"Example","pos":[5753,5760]},{"content":".NET Framework Equivalent","pos":[7286,7311]},{"content":"System::String::Compare","pos":[7316,7339]},{"content":"See Also","pos":[7418,7426]},{"content":"String Manipulation","pos":[7431,7450]},{"content":"Locale","pos":[7509,7515]},{"content":"Interpretation of Multibyte-Character Sequences","pos":[7557,7604]},{"content":"_mbsnbcmp, _mbsnbcmp_l","pos":[7687,7709]},{"content":"_mbsnbicmp, _mbsnbicmp_l","pos":[7774,7798]},{"content":"strcmp, wcscmp, _mbscmp","pos":[7865,7888]},{"content":"strcoll Functions","pos":[7954,7971]},{"content":"_strnicmp, _wcsnicmp, _mbsnicmp, _strnicmp_l, _wcsnicmp_l, _mbsnicmp_l","pos":[8024,8094]},{"content":"strrchr, wcsrchr, _mbsrchr, _mbsrchr_l","pos":[8199,8237]},{"content":"_strset, _strset_l, _wcsset, _wcsset_l, _mbsset, _mbsset_l","pos":[8316,8374]},{"content":"strspn, wcsspn, _mbsspn, _mbsspn_l","pos":[8467,8501]}],"content":"---\ntitle: \"strncmp, wcsncmp, _mbsncmp, _mbsncmp_l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"strncmp\"\n  - \"_mbsncmp\"\n  - \"wcsncmp\"\n  - \"_mbsncmp_l\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-multibyte-l1-1-0.dll\"\n  - \"api-ms-win-crt-string-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_ftcsnccmp\"\n  - \"_ftcsncmp\"\n  - \"_tcsncmp\"\n  - \"_tcsnccmp\"\n  - \"strncmp\"\n  - \"_mbsncmp\"\n  - \"wcsncmp\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"_tcsnccmp function\"\n  - \"ftcsncmp function\"\n  - \"wcsncmp function\"\n  - \"_ftcsncmp function\"\n  - \"_mbsncmp function\"\n  - \"tcsncmp function\"\n  - \"mbsncmp function\"\n  - \"_mbsncmp_l function\"\n  - \"mbsncmp_l function\"\n  - \"strncmp function\"\n  - \"strings [C++], comparing characters of\"\n  - \"string comparison [C++], strncmp function\"\n  - \"_tcsncmp function\"\n  - \"tcsnccmp function\"\n  - \"ftcsnccmp function\"\n  - \"characters [C++], comparing\"\n  - \"_ftcsnccmp function\"\nms.assetid: 2fdbf4e6-77da-4b59-9086-488f6066b8af\ncaps.latest.revision: 28\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# strncmp, wcsncmp, _mbsncmp, _mbsncmp_l\nCompares up to the specified count of characters of two strings.  \n  \n> [!IMPORTANT]\n>  `_mbsncmp` and `_mbsncmp_l` cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \nint strncmp(  \n   const char *string1,  \n   const char *string2,  \n   size_t count   \n);  \nint wcsncmp(  \n   const wchar_t *string1,  \n   const wchar_t *string2,  \n   size_t count   \n);  \nint _mbsncmp(  \n   const unsigned char *string1,  \n   const unsigned char *string2,  \n   size_t count   \n);  \nint _mbsncmp_l(  \n   const unsigned char *string1,  \n   const unsigned char *string2,  \n   size_t count,   \n   _locale_t locale  \n);int _mbsnbcmp(  \n   const unsigned char *string1,  \n   const unsigned char *string2,  \n   size_t count   \n);  \n```  \n  \n#### Parameters  \n `string1, string2`  \n Strings to compare.  \n  \n `count`  \n Number of characters to compare.  \n  \n `locale`  \n Locale to use.  \n  \n## Return Value  \n The return value indicates the relation of the substrings of `string1` and `string2` as follows.  \n  \n|Return value|Description|  \n|------------------|-----------------|  \n|< 0|`string1` substring less than `string2` substring|  \n|0|`string1` substring identical to `string2` substring|  \n|> 0|`string1` substring greater than `string2` substring|  \n  \n On a parameter validation error, `_mbsncmp` and `_mbsncmp_l` return `_NLSCMPERROR`, which is defined in \\<string.h> and \\<mbstring.h>.  \n  \n## Remarks  \n The `strncmp` function performs an ordinal comparison of at most the first `count` characters in `string1` and `string2` and returns a value indicating the relationship between the substrings. `strncmp` is a case-sensitive version of `_strnicmp`. `wcsncmp` and `_mbsncmp` are case-sensitive versions of `_wcsnicmp` and `_mbsnicmp`.  \n  \n `wcsncmp` and `_mbsncmp` are wide-character and multibyte-character versions of `strncmp`. The arguments of `wcsncmp` are wide-character strings; those of `_mbsncmp` are multibyte-character strings. `_mbsncmp` recognizes multibyte-character sequences according to a multibyte code page and returns `_NLSCMPERROR` on an error.  \n  \n Also, `_mbsncmp` and `_mbsncmp_l` validate parameters. If `string1` or `string2` is a null pointer, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, `_mbsncmp` and `_mbsncmp_l` return `_NLSCMPERROR` and set `errno` to `EINVAL`. `strncmp` and `wcsncmp` do not validate their parameters. These functions behave identically otherwise.  \n  \n The comparison behavior of `_mbsncmp` and `_mbsncmp_l` is affected by the setting of the `LC_CTYPE` category setting of the locale. This controls detection of leading and trailing bytes of multibyte characters. For more information, see [setlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md). The `_mbsncmp` function uses the current locale for this locale-dependent behavior. The `_mbsncmp_l` function is identical except that it uses the `locale` parameter instead. For more information, see [Locale](../../c-runtime-library/locale.md). If the locale is a single-byte locale, the behavior of these functions is identical to `strncmp`.  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_tcsnccmp`|`strncmp`|`_mbsncmp`|`wcsncmp`|  \n|`_tcsncmp`|`strncmp`|`_mbsnbcmp`|`wcsncmp`|  \n|`_tccmp`|Maps to macro or inline function|`_mbsncmp`|Maps to macro or inline function|  \n|**not applicable**|**not applicable**|`_mbsncmp_l`|**not applicable**|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`strncmp`|\\<string.h>|  \n|`wcsncmp`|\\<string.h> or \\<wchar.h>|  \n|`_mbsncmp`, `_mbsncmp_l`|\\<mbstring.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```  \n// crt_strncmp.c  \n#include <string.h>  \n#include <stdio.h>  \n  \nchar string1[] = \"The quick brown dog jumps over the lazy fox\";  \nchar string2[] = \"The QUICK brown fox jumps over the lazy dog\";  \n  \nint main( void )  \n{  \n   char tmp[20];  \n   int result;  \n   printf( \"Compare strings:\\n      %s\\n      %s\\n\\n\",  \n           string1, string2 );  \n   printf( \"Function:   strncmp (first 10 characters only)\\n\" );  \n   result = strncmp( string1, string2 , 10 );  \n   if( result > 0 )  \n      strcpy_s( tmp, sizeof(tmp), \"greater than\" );  \n   else if( result < 0 )  \n      strcpy_s( tmp, sizeof(tmp), \"less than\" );  \n   else  \n      strcpy_s( tmp, sizeof(tmp), \"equal to\" );  \n   printf( \"Result:      String 1 is %s string 2\\n\\n\", tmp );  \n   printf( \"Function:   strnicmp _strnicmp (first 10 characters only)\\n\" );  \n   result = _strnicmp( string1, string2, 10 );  \n   if( result > 0 )  \n      strcpy_s( tmp, sizeof(tmp), \"greater than\" );  \n   else if( result < 0 )  \n      strcpy_s( tmp, sizeof(tmp), \"less than\" );  \n   else  \n      strcpy_s( tmp, sizeof(tmp), \"equal to\" );  \n   printf( \"Result:      String 1 is %s string 2\\n\", tmp );  \n}  \n```  \n  \n```Output  \nCompare strings:  \n      The quick brown dog jumps over the lazy fox  \n      The QUICK brown fox jumps over the lazy dog  \n  \nFunction:   strncmp (first 10 characters only)  \nResult:      String 1 is greater than string 2  \n  \nFunction:   strnicmp _strnicmp (first 10 characters only)  \nResult:      String 1 is equal to string 2  \n```  \n  \n## .NET Framework Equivalent  \n [System::String::Compare](https://msdn.microsoft.com/en-us/library/system.string.compare.aspx)  \n  \n## See Also  \n [String Manipulation](../../c-runtime-library/string-manipulation-crt.md)   \n [Locale](../../c-runtime-library/locale.md)   \n [Interpretation of Multibyte-Character Sequences](../../c-runtime-library/interpretation-of-multibyte-character-sequences.md)   \n [_mbsnbcmp, _mbsnbcmp_l](../../c-runtime-library/reference/mbsnbcmp-mbsnbcmp-l.md)   \n [_mbsnbicmp, _mbsnbicmp_l](../../c-runtime-library/reference/mbsnbicmp-mbsnbicmp-l.md)   \n [strcmp, wcscmp, _mbscmp](../../c-runtime-library/reference/strcmp-wcscmp-mbscmp.md)   \n [strcoll Functions](../../c-runtime-library/strcoll-functions.md)   \n [_strnicmp, _wcsnicmp, _mbsnicmp, _strnicmp_l, _wcsnicmp_l, _mbsnicmp_l](../../c-runtime-library/reference/strnicmp-wcsnicmp-mbsnicmp-strnicmp-l-wcsnicmp-l-mbsnicmp-l.md)   \n [strrchr, wcsrchr, _mbsrchr, _mbsrchr_l](../../c-runtime-library/reference/strrchr-wcsrchr-mbsrchr-mbsrchr-l.md)   \n [_strset, _strset_l, _wcsset, _wcsset_l, _mbsset, _mbsset_l](../../c-runtime-library/reference/strset-strset-l-wcsset-wcsset-l-mbsset-mbsset-l.md)   \n [strspn, wcsspn, _mbsspn, _mbsspn_l](../../c-runtime-library/reference/strspn-wcsspn-mbsspn-mbsspn-l.md)"}