{"nodes":[{"pos":[12,44],"content":"_getch, _getwch | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_getch, _getwch | Microsoft Docs","pos":[0,32]}]},{"content":"_getch, _getwch","pos":[1084,1099]},{"content":"Gets a character from the console without echo.","pos":[1100,1147]},{"pos":[1155,1375],"content":"[!IMPORTANT]\n This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":" This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","pos":[13,218],"nodes":[{"content":"This API cannot be used in applications that execute in the Windows Runtime.","pos":[1,77]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.","pos":[78,205],"source":" For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)."}]}]},{"content":"Syntax","pos":[1384,1390]},{"content":"Return Value","pos":[1462,1474]},{"content":"Returns the character read.","pos":[1478,1505]},{"content":"There is no error return.","pos":[1506,1531]},{"content":"Remarks","pos":[1540,1547]},{"content":"The <ph id=\"ph1\">`_getch`</ph> and<ph id=\"ph2\">`_getwch`</ph> functions read a single character from the console without echoing the character.","pos":[1551,1658],"source":"The `_getch` and`_getwch` functions read a single character from the console without echoing the character."},{"content":"None of these functions can be used to read CTRL+C.","pos":[1659,1710]},{"content":"When reading a function key or an arrow key, each function must be called twice; the first call returns 0 or 0xE0, and the second call returns the actual key code.","pos":[1711,1874]},{"content":"These functions lock the calling thread and are therefore thread-safe.","pos":[1881,1951]},{"content":"For non-locking versions, see <bpt id=\"p1\">[</bpt>_getch_nolock, _getwch_nolock<ept id=\"p1\">](../../c-runtime-library/reference/getch-nolock-getwch-nolock.md)</ept>.","pos":[1952,2079],"source":" For non-locking versions, see [_getch_nolock, _getwch_nolock](../../c-runtime-library/reference/getch-nolock-getwch-nolock.md)."},{"content":"Generic-Text Routine Mappings","pos":[2089,2118]},{"content":"Tchar.h routine","pos":[2125,2140]},{"content":"_UNICODE and _MBCS not defined","pos":[2141,2171]},{"content":"_MBCS defined","pos":[2172,2185]},{"content":"_UNICODE defined","pos":[2186,2202]},{"content":"Requirements","pos":[2364,2376]},{"content":"Routine","pos":[2383,2390]},{"content":"Required header","pos":[2391,2406]},{"content":"conio.h&gt;","pos":[2462,2470],"source":"conio.h>"},{"content":"conio.h&gt; or <ph id=\"ph1\">\\&lt;</ph>wchar.h&gt;","pos":[2487,2509],"source":"conio.h> or \\<wchar.h>"},{"pos":[2517,2615],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":"Example","pos":[2624,2631]},{"content":"NET Framework Equivalent","pos":[3197,3221]},{"content":"Not applicable.","pos":[3225,3240]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[3241,3288],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[3289,3414],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"content":"See Also","pos":[3423,3431]},{"content":"Console and Port I/O","pos":[3436,3456]},{"content":"_getche, _getwche","pos":[3512,3529]},{"content":"_cgets, _cgetws","pos":[3589,3604]},{"content":"getc, getwc","pos":[3652,3663]},{"content":"_ungetch, _ungetwch, _ungetch_nolock, _ungetwch_nolock","pos":[3719,3773]}],"content":"---\ntitle: \"_getch, _getwch | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_getch\"\n  - \"_getwch\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-conio-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"getwch\"\n  - \"_getch\"\n  - \"_getwch\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"characters, getting from console\"\n  - \"getch function\"\n  - \"_getwch function\"\n  - \"console, reading from\"\n  - \"_getch function\"\n  - \"getwch function\"\nms.assetid: cc116be7-cff2-4274-970f-5e7b18ccc05c\ncaps.latest.revision: 26\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _getch, _getwch\nGets a character from the console without echo.  \n  \n> [!IMPORTANT]\n>  This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \nint _getch( void );  \nwint_t _getwch( void );  \n```  \n  \n## Return Value  \n Returns the character read. There is no error return.  \n  \n## Remarks  \n The `_getch` and`_getwch` functions read a single character from the console without echoing the character. None of these functions can be used to read CTRL+C. When reading a function key or an arrow key, each function must be called twice; the first call returns 0 or 0xE0, and the second call returns the actual key code.  \n  \n These functions lock the calling thread and are therefore thread-safe. For non-locking versions, see [_getch_nolock, _getwch_nolock](../../c-runtime-library/reference/getch-nolock-getwch-nolock.md).  \n  \n### Generic-Text Routine Mappings  \n  \n|Tchar.h routine|_UNICODE and _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|--------------------------------------|--------------------|-----------------------|  \n|`_gettch`|`_getch`|`_getch`|`_getwch`|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_getch`|\\<conio.h>|  \n|`_getwch`|\\<conio.h> or \\<wchar.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```  \n// crt_getch.c  \n// compile with: /c  \n// This program reads characters from  \n// the keyboard until it receives a 'Y' or 'y'.  \n  \n#include <conio.h>  \n#include <ctype.h>  \n  \nint main( void )  \n{  \n   int ch;  \n  \n   _cputs( \"Type 'Y' when finished typing keys: \" );  \n   do  \n   {  \n      ch = _getch();  \n      ch = toupper( ch );  \n   } while( ch != 'Y' );  \n  \n   _putch( ch );  \n   _putch( '\\r' );    // Carriage return  \n   _putch( '\\n' );    // Line feed    \n}  \n```  \n  \n```Output  \n  \nabcdeyType 'Y' when finished typing keys: Y  \n```  \n  \n## NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [Console and Port I/O](../../c-runtime-library/console-and-port-i-o.md)   \n [_getche, _getwche](../../c-runtime-library/reference/getche-getwche.md)   \n [_cgets, _cgetws](../../c-runtime-library/cgets-cgetws.md)   \n [getc, getwc](../../c-runtime-library/reference/getc-getwc.md)   \n [_ungetch, _ungetwch, _ungetch_nolock, _ungetwch_nolock](../../c-runtime-library/reference/ungetch-ungetwch-ungetch-nolock-ungetwch-nolock.md)"}