{"nodes":[{"pos":[12,66],"content":"Asynchronous Monikers on the Internet | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Asynchronous Monikers on the Internet | Microsoft Docs","pos":[0,54]}]},{"content":"Asynchronous Monikers on the Internet","pos":[904,941]},{"content":"The Internet requires new approaches to application design because of its slow network access.","pos":[942,1036]},{"content":"Applications should perform network access asynchronously to avoid stalling the user interface.","pos":[1037,1132]},{"content":"The MFC class <bpt id=\"p1\">[</bpt>CAsyncMonikerFile<ept id=\"p1\">](../mfc/reference/casyncmonikerfile-class.md)</ept> provides asynchronous support for downloading files.","pos":[1133,1264],"source":" The MFC class [CAsyncMonikerFile](../mfc/reference/casyncmonikerfile-class.md) provides asynchronous support for downloading files."},{"content":"With asynchronous monikers, you can extend your COM application to download asynchronously across the Internet and to provide progressive rendering of large objects such as bitmaps and VRML objects.","pos":[1271,1469]},{"content":"Asynchronous monikers enable an ActiveX control property or a file on the Internet to be downloaded without blocking the response of the user interface.","pos":[1470,1622]},{"content":"Advantages of Asynchronous Monikers","pos":[1631,1666]},{"content":"You can use asynchronous monikers to:","pos":[1670,1707]},{"content":"Download code and files without blocking.","pos":[1717,1758]},{"content":"Download properties in ActiveX controls without blocking.","pos":[1768,1825]},{"content":"Receive notifications of downloading progress.","pos":[1835,1881]},{"content":"Track progress and ready state information.","pos":[1891,1934]},{"content":"Provide status information to the user about progress.","pos":[1944,1998]},{"content":"Allow the user to cancel a download at any time.","pos":[2008,2056]},{"content":"MFC Classes for Asynchronous Monikers","pos":[2065,2102]},{"content":"<bpt id=\"p1\">[</bpt>CAsyncMonikerFile<ept id=\"p1\">](../mfc/reference/casyncmonikerfile-class.md)</ept> is derived from <bpt id=\"p2\">[</bpt>CMonikerFile<ept id=\"p2\">](../mfc/reference/cmonikerfile-class.md)</ept>, which in turn is derived from <bpt id=\"p3\">[</bpt>COleStreamFile<ept id=\"p3\">](../mfc/reference/colestreamfile-class.md)</ept>.","pos":[2106,2332],"source":"[CAsyncMonikerFile](../mfc/reference/casyncmonikerfile-class.md) is derived from [CMonikerFile](../mfc/reference/cmonikerfile-class.md), which in turn is derived from [COleStreamFile](../mfc/reference/colestreamfile-class.md)."},{"content":"A <ph id=\"ph1\">`COleStreamFile`</ph> object represents a stream of data; a <ph id=\"ph2\">`CMonikerFile`</ph> object uses an <ph id=\"ph3\">`IMoniker`</ph> to obtain the data, and a <ph id=\"ph4\">`CAsyncMonikerFile`</ph> object does so asynchronously.","pos":[2333,2507],"source":" A `COleStreamFile` object represents a stream of data; a `CMonikerFile` object uses an `IMoniker` to obtain the data, and a `CAsyncMonikerFile` object does so asynchronously."},{"content":"Asynchronous monikers are used primarily in Internet-enabled applications and ActiveX controls to provide a responsive user interface during file transfers.","pos":[2514,2670]},{"content":"A prime example of this is the use of <bpt id=\"p1\">[</bpt>CDataPathProperty<ept id=\"p1\">](../mfc/reference/cdatapathproperty-class.md)</ept> to provide asynchronous properties for ActiveX controls.","pos":[2671,2830],"source":" A prime example of this is the use of [CDataPathProperty](../mfc/reference/cdatapathproperty-class.md) to provide asynchronous properties for ActiveX controls."},{"content":"MFC Classes for Data Paths in ActiveX Controls","pos":[2839,2885]},{"content":"The MFC classes <ph id=\"ph1\">`CDataPathProperty`</ph> and <bpt id=\"p1\">[</bpt>CCachedDataPathProperty<ept id=\"p1\">](../mfc/reference/ccacheddatapathproperty-class.md)</ept> implement ActiveX control properties that can be loaded asynchronously.","pos":[2889,3077],"source":"The MFC classes `CDataPathProperty` and [CCachedDataPathProperty](../mfc/reference/ccacheddatapathproperty-class.md) implement ActiveX control properties that can be loaded asynchronously."},{"content":"Asynchronous properties are loaded after synchronous initiation.","pos":[3078,3142]},{"content":"Asynchronous ActiveX controls repeatedly invoke a callback to indicate availability of new data during a lengthy property exchange process.","pos":[3143,3282]},{"content":"is derived from <ph id=\"ph1\">`CAsyncMonikerFile`</ph>.","pos":[3309,3345],"source":" is derived from `CAsyncMonikerFile`."},{"content":"is derived from <ph id=\"ph1\">`CDataPathProperty`</ph>.","pos":[3372,3408],"source":" is derived from `CDataPathProperty`."},{"content":"To implement asynchronous properties in your ActiveX controls, derive a class from <ph id=\"ph1\">`CDataPathProperty`</ph> or <ph id=\"ph2\">`CCachedDataPathProperty`</ph>, and override <bpt id=\"p1\">[</bpt>OnDataAvailable<ept id=\"p1\">](../mfc/reference/casyncmonikerfile-class.md#casyncmonikerfile__ondataavailable)</ept> and other notifications you wish to receive.","pos":[3409,3697],"source":" To implement asynchronous properties in your ActiveX controls, derive a class from `CDataPathProperty` or `CCachedDataPathProperty`, and override [OnDataAvailable](../mfc/reference/casyncmonikerfile-class.md#casyncmonikerfile__ondataavailable) and other notifications you wish to receive."},{"content":"To download a file using asynchronous monikers","pos":[3708,3754]},{"pos":[3764,3858],"content":"Declare a class derived from <bpt id=\"p1\">[</bpt>CAsyncMonikerFile<ept id=\"p1\">](../mfc/reference/casyncmonikerfile-class.md)</ept>.","source":"Declare a class derived from [CAsyncMonikerFile](../mfc/reference/casyncmonikerfile-class.md)."},{"pos":[3868,3995],"content":"Override <bpt id=\"p1\">[</bpt>OnDataAvailable<ept id=\"p1\">](../mfc/reference/casyncmonikerfile-class.md#casyncmonikerfile__ondataavailable)</ept> to display the data.","source":"Override [OnDataAvailable](../mfc/reference/casyncmonikerfile-class.md#casyncmonikerfile__ondataavailable) to display the data."},{"pos":[4005,4332],"content":"Override other member functions, including <bpt id=\"p1\">[</bpt>OnProgress<ept id=\"p1\">](../mfc/reference/casyncmonikerfile-class.md#casyncmonikerfile__onprogress)</ept>, <bpt id=\"p2\">[</bpt>OnStartBinding<ept id=\"p2\">](../mfc/reference/casyncmonikerfile-class.md#casyncmonikerfile__onstartbinding)</ept>, and <bpt id=\"p3\">[</bpt>OnStopBinding<ept id=\"p3\">](../mfc/reference/casyncmonikerfile-class.md#casyncmonikerfile__onstopbinding)</ept>.","source":"Override other member functions, including [OnProgress](../mfc/reference/casyncmonikerfile-class.md#casyncmonikerfile__onprogress), [OnStartBinding](../mfc/reference/casyncmonikerfile-class.md#casyncmonikerfile__onstartbinding), and [OnStopBinding](../mfc/reference/casyncmonikerfile-class.md#casyncmonikerfile__onstopbinding)."},{"content":"Declare an instance of this class and use it to open URLs.","pos":[4342,4400]},{"pos":[4407,4562],"content":"For information about downloading asynchronously in an ActiveX control, see <bpt id=\"p1\">[</bpt>ActiveX Controls on the Internet<ept id=\"p1\">](../mfc/activex-controls-on-the-internet.md)</ept>.","source":"For information about downloading asynchronously in an ActiveX control, see [ActiveX Controls on the Internet](../mfc/activex-controls-on-the-internet.md)."},{"content":"See Also","pos":[4571,4579]},{"content":"MFC Internet Programming Tasks","pos":[4584,4614]},{"content":"MFC Internet Programming Basics","pos":[4663,4694]}],"content":"---\ntitle: \"Asynchronous Monikers on the Internet | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ActiveX controls [C++], asynchronous\"\n  - \"MFC [C++], asynchronous monikers\"\n  - \"asynchronous monikers [C++]\"\n  - \"Web applications [C++], asynchronous\"\n  - \"downloading Internet resources and asynchronous monikers\"\n  - \"optimization [C++], asynchronous downloading across Internet\"\n  - \"Internet [C++], asynchronous downloading\"\nms.assetid: 418b0c64-0046-4dae-8118-c9c762b5822e\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Asynchronous Monikers on the Internet\nThe Internet requires new approaches to application design because of its slow network access. Applications should perform network access asynchronously to avoid stalling the user interface. The MFC class [CAsyncMonikerFile](../mfc/reference/casyncmonikerfile-class.md) provides asynchronous support for downloading files.  \n  \n With asynchronous monikers, you can extend your COM application to download asynchronously across the Internet and to provide progressive rendering of large objects such as bitmaps and VRML objects. Asynchronous monikers enable an ActiveX control property or a file on the Internet to be downloaded without blocking the response of the user interface.  \n  \n## Advantages of Asynchronous Monikers  \n You can use asynchronous monikers to:  \n  \n-   Download code and files without blocking.  \n  \n-   Download properties in ActiveX controls without blocking.  \n  \n-   Receive notifications of downloading progress.  \n  \n-   Track progress and ready state information.  \n  \n-   Provide status information to the user about progress.  \n  \n-   Allow the user to cancel a download at any time.  \n  \n## MFC Classes for Asynchronous Monikers  \n [CAsyncMonikerFile](../mfc/reference/casyncmonikerfile-class.md) is derived from [CMonikerFile](../mfc/reference/cmonikerfile-class.md), which in turn is derived from [COleStreamFile](../mfc/reference/colestreamfile-class.md). A `COleStreamFile` object represents a stream of data; a `CMonikerFile` object uses an `IMoniker` to obtain the data, and a `CAsyncMonikerFile` object does so asynchronously.  \n  \n Asynchronous monikers are used primarily in Internet-enabled applications and ActiveX controls to provide a responsive user interface during file transfers. A prime example of this is the use of [CDataPathProperty](../mfc/reference/cdatapathproperty-class.md) to provide asynchronous properties for ActiveX controls.  \n  \n## MFC Classes for Data Paths in ActiveX Controls  \n The MFC classes `CDataPathProperty` and [CCachedDataPathProperty](../mfc/reference/ccacheddatapathproperty-class.md) implement ActiveX control properties that can be loaded asynchronously. Asynchronous properties are loaded after synchronous initiation. Asynchronous ActiveX controls repeatedly invoke a callback to indicate availability of new data during a lengthy property exchange process.  \n  \n `CDataPathProperty` is derived from `CAsyncMonikerFile`. `CCachedDataPathProperty` is derived from `CDataPathProperty`. To implement asynchronous properties in your ActiveX controls, derive a class from `CDataPathProperty` or `CCachedDataPathProperty`, and override [OnDataAvailable](../mfc/reference/casyncmonikerfile-class.md#casyncmonikerfile__ondataavailable) and other notifications you wish to receive.  \n  \n#### To download a file using asynchronous monikers  \n  \n1.  Declare a class derived from [CAsyncMonikerFile](../mfc/reference/casyncmonikerfile-class.md).  \n  \n2.  Override [OnDataAvailable](../mfc/reference/casyncmonikerfile-class.md#casyncmonikerfile__ondataavailable) to display the data.  \n  \n3.  Override other member functions, including [OnProgress](../mfc/reference/casyncmonikerfile-class.md#casyncmonikerfile__onprogress), [OnStartBinding](../mfc/reference/casyncmonikerfile-class.md#casyncmonikerfile__onstartbinding), and [OnStopBinding](../mfc/reference/casyncmonikerfile-class.md#casyncmonikerfile__onstopbinding).  \n  \n4.  Declare an instance of this class and use it to open URLs.  \n  \n For information about downloading asynchronously in an ActiveX control, see [ActiveX Controls on the Internet](../mfc/activex-controls-on-the-internet.md).  \n  \n## See Also  \n [MFC Internet Programming Tasks](../mfc/mfc-internet-programming-tasks.md)   \n [MFC Internet Programming Basics](../mfc/mfc-internet-programming-basics.md)\n\n"}