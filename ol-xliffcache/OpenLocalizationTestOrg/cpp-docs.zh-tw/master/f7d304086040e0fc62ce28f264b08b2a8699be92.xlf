<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f7d304086040e0fc62ce28f264b08b2a8699be92</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\atl-drawinfo-structure.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d7e8ad391709a4436d13315f6999cec6ac56aa4e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">99208edd5107b11af174755e74b24a0d9739e30d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>ATL_DRAWINFO Structure | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ATL_DRAWINFO Structure</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Contains information used for rendering to various targets, such as a printer, metafile, or ActiveX control.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The size of the structure, in bytes.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>dwDrawAspect</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Specifies how the target is to be represented.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Representations can include content, an icon, a thumbnail, or a printed document.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For a list of possible values, see <bpt id="p1">[</bpt>DVASPECT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms690318)</ept> and <bpt id="p2">[</bpt>DVASPECT2<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms688644)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>lindex</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Portion of the target that is of interest for the draw operation.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Its interpretation varies depending on the value in the <bpt id="p1">**</bpt>dwDrawAspect<ept id="p1">**</ept> member.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>ptd</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>DVTARGETDEVICE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms686613)</ept> structure that enables drawing optimizations depending on the aspect specified.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Note that newer objects and containers that support optimized drawing interfaces support this member as well.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Older objects and containers that do not support optimized drawing interfaces always specify <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> for this member.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>hicTargetDev</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Information context for the target device pointed to by <bpt id="p1">**</bpt>ptd<ept id="p1">**</ept> from which the object can extract device metrics and test the device's capabilities.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>ptd<ept id="p1">**</ept> is <bpt id="p2">**</bpt>NULL<ept id="p2">**</ept>, the object should ignore the value in the <bpt id="p3">**</bpt>hicTargetDev<ept id="p3">**</ept> member.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>hdcDraw</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The device context on which to draw.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For a windowless object, the <bpt id="p1">**</bpt>hdcDraw<ept id="p1">**</ept> member is in the <ph id="ph1">`MM_TEXT`</ph> mapping mode with its logical coordinates matching the client coordinates of the containing window.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In addition, the device context should be in the same state as the one normally passed by a <ph id="ph1">`WM_PAINT`</ph> message.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>prcBounds</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>RECTL<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162907)</ept> structure specifying the rectangle on <bpt id="p2">**</bpt>hdcDraw<ept id="p2">**</ept> and in which the object should be drawn.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This member controls the positioning and stretching of the object.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This member should be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> to draw a windowless in-place active object.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In every other situation, <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> is not a legal value and should result in an <ph id="ph1">`E_INVALIDARG`</ph> error code.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If the container passes a non-<bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> value to a windowless object, the object should render the requested aspect into the specified device context and rectangle.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A container can request this from a windowless object to render a second, non-active view of the object or to print the object.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>prcWBounds</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>hdcDraw<ept id="p1">**</ept> is a metafile device context (see <bpt id="p2">[</bpt>GetDeviceCaps<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/dd144877)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>), this is a pointer to a <bpt id="p3">**</bpt>RECTL<ept id="p3">**</ept> structure specifying the bounding rectangle in the underlying metafile.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The rectangle structure contains the window extent and window origin.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>These values are useful for drawing metafiles.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The rectangle indicated by <bpt id="p1">**</bpt>prcBounds<ept id="p1">**</ept> is nested inside this <bpt id="p2">**</bpt>prcWBounds<ept id="p2">**</ept> rectangle; they are in the same coordinate space.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>bOptimize</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Nonzero if the drawing of the control is to be optimized, otherwise 0.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If the drawing is optimized, the state of the device context is automatically restored when you are finished rendering.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>bZoomed</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Nonzero if the target has a zoom factor, otherwise 0.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The zoom factor is stored in <bpt id="p1">**</bpt>ZoomNum<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>bRectInHimetric</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Nonzero if the dimensions of <bpt id="p1">**</bpt>prcBounds<ept id="p1">**</ept> are in <bpt id="p2">**</bpt>HIMETRIC<ept id="p2">**</ept>, otherwise 0.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>ZoomNum</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The width and height of the rectangle into which the object is rendered.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The zoom factor along the x-axis (the proportion of the object's natural size to its current extent) of the target is the value of <bpt id="p1">**</bpt>ZoomNum.cx<ept id="p1">**</ept> divided by the value of <bpt id="p2">**</bpt>ZoomDen.cx<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The zoom factor along the y-axis is achieved in a similar fashion.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>ZoomDen</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The actual width and height of the target.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Typical usage of this structure would be the retrieval of information during the rendering of the target object.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For example, you could retrieve values from <ph id="ph1">`ATL_DRAWINFO`</ph> inside your overload of <bpt id="p1">[</bpt>CComControlBase::OnDrawAdvanced<ept id="p1">](ccomcontrolbase-class.md#ccomcontrolbase__ondrawadvanced)</ept>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This structure stores pertinent information used to render the appearance of an object for the target device.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The information provided can be used in drawing to the screen, a printer, or even a metafile.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> atlctl.h</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Structures</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>IViewObject::Draw</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>CComControlBase::OnDrawAdvanced</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>