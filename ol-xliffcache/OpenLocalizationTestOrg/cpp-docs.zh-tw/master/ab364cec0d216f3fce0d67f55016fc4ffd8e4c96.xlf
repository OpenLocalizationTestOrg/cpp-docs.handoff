<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ab364cec0d216f3fce0d67f55016fc4ffd8e4c96</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\build\initializing-regular-dlls.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eb8e14e4dfc1ea1f12a17a2af355a26fff8bc7c9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">46dedf73bb6fbc0635842ce7193f1c475b52db7b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Initializing Regular DLLs | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Initializing Regular DLLs</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Because regular DLLs have a <ph id="ph1">`CWinApp`</ph> object, they should perform their initialization and termination tasks in the same location as an MFC application: in the <ph id="ph2">`InitInstance`</ph> and <bpt id="p1">**</bpt>ExitInstance<ept id="p1">**</ept> member functions of the DLL's <ph id="ph3">`CWinApp`</ph>-derived class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Because MFC provides a <ph id="ph1">`DllMain`</ph> function that is called by <bpt id="p1">**</bpt>_DllMainCRTStartup<ept id="p1">**</ept> for <bpt id="p2">**</bpt>PROCESS_ATTACH<ept id="p2">**</ept> and <bpt id="p3">**</bpt>PROCESS_DETACH<ept id="p3">**</ept>, you should not write your own <ph id="ph2">`DllMain`</ph> function.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The MFC-provided <ph id="ph1">`DllMain`</ph> function calls <ph id="ph2">`InitInstance`</ph> when your DLL is loaded and it calls <ph id="ph3">`ExitInstance`</ph> before the DLL is unloaded.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A regular DLL can keep track of multiple threads by calling <bpt id="p1">[</bpt>TlsAlloc<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms686801)</ept> and <bpt id="p2">[</bpt>TlsGetValue<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms686812)</ept> in its <ph id="ph1">`InitInstance`</ph> function.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>These functions allow the DLL to track thread-specific data.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In your regular DLL that dynamically links to MFC, if you are using any MFC OLE, MFC Database (or DAO), or MFC Sockets support, respectively, the MFC debug extension DLLs MFCOxxD.dll, MFCDxxD.dll, and MFCNxxD.dll (where xx is the version number) are linked in automatically.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You must call one of the following predefined initialization functions for each of these DLLs that you are using in your regular DLL's <ph id="ph1">`CWinApp::InitInstance`</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Type of MFC support</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initialization function to call</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>MFC OLE (MFCOxxD.dll)</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>MFC Database (MFCDxxD.dll)</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>MFC Sockets (MFCNxxD.dll)</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>What do you want to do?</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initialize extension DLLs</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initialize non-MFC DLLs</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>What do you want to know more about?</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The C run-time library behavior and _DllMainCRTStartup</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Using Database, OLE, and Sockets Extension DLLs in Regular DLLs</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Processes and threads (Windows SDK)</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Thread local storage wrappers (MFC Technical Note 58)</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializing a DLL</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>