{"nodes":[{"pos":[12,61],"content":"Module::RegisterCOMObject Method | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Module::RegisterCOMObject Method | Microsoft Docs","pos":[0,49]}]},{"content":"Module::RegisterCOMObject Method","pos":[691,723]},{"content":"Registers one or more COM objects so other applications can connect to them.","pos":[724,800]},{"content":"Syntax","pos":[809,815]},{"content":"Parameters","pos":[1022,1032]},{"content":"Fully-qualified name of a server.","pos":[1052,1085]},{"content":"An array of CLSIDs to register.","pos":[1104,1135]},{"content":"An array of IUnknown interfaces of the class objects whose availability is being published.","pos":[1157,1248]},{"content":"When the operation completes, an array of pointers to values that identify the class objects that were registered.","pos":[1268,1382]},{"content":"These values are later used revoke the registration.","pos":[1383,1435]},{"content":"The number of CLSIDs to register.","pos":[1453,1486]},{"content":"Return Value","pos":[1495,1507]},{"content":"S_OK if successfu; otherwise, an HRESULT such as CO_E_OBJISREG that indicates the reason the operation failed.","pos":[1511,1621]},{"content":"Remarks","pos":[1630,1637]},{"content":"The COM objects are registered with the CLSCTX_LOCAL_SERVER enumerator of the CLSCTX enumeration.","pos":[1641,1738]},{"pos":[1745,1930],"content":"The type of connection to the registered objects is specified by a combination of the current <ph id=\"ph1\">`comflag`</ph> template parameter and the REGCLS_SUSPENDED enumerator of the REGCLS enumeration.","source":"The type of connection to the registered objects is specified by a combination of the current `comflag` template parameter and the REGCLS_SUSPENDED enumerator of the REGCLS enumeration."},{"content":"Requirements","pos":[1939,1951]},{"pos":[1955,1975],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> module.h","source":"**Header:** module.h"},{"pos":[1982,2011],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> Microsoft::WRL","source":"**Namespace:** Microsoft::WRL"},{"content":"See Also","pos":[2018,2026]},{"content":"Module Class","pos":[2029,2041]}],"content":"---\ntitle: \"Module::RegisterCOMObject Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"module/Microsoft::WRL::Module::RegisterCOMObject\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"RegisterCOMObject method\"\nms.assetid: 59f223dc-03c6-429d-95da-b74b3f73b702\ncaps.latest.revision: 5\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Module::RegisterCOMObject Method\nRegisters one or more COM objects so other applications can connect to them.  \n  \n## Syntax  \n  \n```  \nWRL_NOTHROW virtual HRESULT RegisterCOMObject(  \n   const wchar_t* serverName,  \n   IID* clsids,  \n   IClassFactory** factories,  \n   DWORD* cookies,  \n   unsigned int count);  \n  \n```  \n  \n#### Parameters  \n `serverName`  \n Fully-qualified name of a server.  \n  \n `clsids`  \n An array of CLSIDs to register.  \n  \n `factories`  \n An array of IUnknown interfaces of the class objects whose availability is being published.  \n  \n `cookies`  \n When the operation completes, an array of pointers to values that identify the class objects that were registered. These values are later used revoke the registration.  \n  \n `count`  \n The number of CLSIDs to register.  \n  \n## Return Value  \n S_OK if successfu; otherwise, an HRESULT such as CO_E_OBJISREG that indicates the reason the operation failed.  \n  \n## Remarks  \n The COM objects are registered with the CLSCTX_LOCAL_SERVER enumerator of the CLSCTX enumeration.  \n  \n The type of connection to the registered objects is specified by a combination of the current `comflag` template parameter and the REGCLS_SUSPENDED enumerator of the REGCLS enumeration.  \n  \n## Requirements  \n **Header:** module.h  \n  \n **Namespace:** Microsoft::WRL\n \n ## See Also\n [Module Class](../windows/module-class.md)"}