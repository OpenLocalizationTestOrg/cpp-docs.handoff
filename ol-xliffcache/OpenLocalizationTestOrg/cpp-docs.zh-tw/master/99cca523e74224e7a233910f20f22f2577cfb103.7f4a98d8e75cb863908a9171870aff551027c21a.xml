{"nodes":[{"pos":[12,63],"content":"hash_multimap::operator= (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"hash_multimap::operator= (STL-CLR) | Microsoft Docs","pos":[0,51]}]},{"content":"hash_multimap::operator= (STL/CLR)","pos":[653,687]},{"content":"Replaces the controlled sequence.","pos":[688,721]},{"content":"Syntax","pos":[730,736]},{"content":"Parameters","pos":[838,848]},{"content":"right","pos":[852,857]},{"content":"Container to copy.","pos":[861,879]},{"content":"Remarks","pos":[888,895]},{"content":"The member operator copies <ph id=\"ph1\">`right`</ph> to the object, then returns <ph id=\"ph2\">`*this`</ph>.","pos":[899,970],"source":"The member operator copies `right` to the object, then returns `*this`."},{"content":"You use it to replace the controlled sequence with a copy of the controlled sequence in <ph id=\"ph1\">`right`</ph>.","pos":[971,1067],"source":" You use it to replace the controlled sequence with a copy of the controlled sequence in `right`."},{"content":"Example","pos":[1076,1083]},{"content":"Requirements","pos":[2090,2102]},{"pos":[2106,2136],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/hash_map&gt;","source":"**Header:** \\<cliext/hash_map>"},{"pos":[2143,2164],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2173,2181]},{"content":"hash_multimap (STL/CLR)","pos":[2186,2209]}],"content":"---\ntitle: \"hash_multimap::operator= (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::hash_multimap::operator=\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"operator= member [STL/CLR]\"\nms.assetid: f4c1a961-e8af-44f3-b61c-83d4dda3b403\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# hash_multimap::operator= (STL/CLR)\nReplaces the controlled sequence.  \n  \n## Syntax  \n  \n```  \nhash_multimap<Key, Mapped>% operator=(hash_multimap<Key, Mapped>% right);  \n```  \n  \n#### Parameters  \n right  \n Container to copy.  \n  \n## Remarks  \n The member operator copies `right` to the object, then returns `*this`. You use it to replace the controlled sequence with a copy of the controlled sequence in `right`.  \n  \n## Example  \n  \n```  \n// cliext_hash_multimap_operator_as.cpp   \n// compile with: /clr   \n#include <cliext/hash_map>   \n  \ntypedef cliext::hash_multimap<wchar_t, int> Myhash_multimap;   \nint main()   \n    {   \n    Myhash_multimap c1;   \n    c1.insert(Myhash_multimap::make_value(L'a', 1));   \n    c1.insert(Myhash_multimap::make_value(L'b', 2));   \n    c1.insert(Myhash_multimap::make_value(L'c', 3));   \n  \n// display contents \" [a 1] [b 2] [c 3]\"   \n    for each (Myhash_multimap::value_type elem in c1)   \n        System::Console::Write(\" [{0} {1}]\", elem->first, elem->second);   \n    System::Console::WriteLine();   \n  \n// assign to a new container   \n    Myhash_multimap c2;   \n    c2 = c1;   \n// display contents \" [a 1] [b 2] [c 3]\"   \n    for each (Myhash_multimap::value_type elem in c2)   \n        System::Console::Write(\" [{0} {1}]\", elem->first, elem->second);   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n[a 1] [b 2] [c 3]  \n[a 1] [b 2] [c 3]  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/hash_map>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [hash_multimap (STL/CLR)](../dotnet/hash-multimap-stl-clr.md)"}