{"nodes":[{"pos":[12,47],"content":"pop_heap (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"pop_heap (STL-CLR) | Microsoft Docs","pos":[0,35]}]},{"content":"pop_heap (STL/CLR)","pos":[622,640]},{"content":"Removes the largest element from the front of a heap to the next-to-last position in the range and then forms a new heap from the remaining elements.","pos":[641,790]},{"content":"Syntax","pos":[799,805]},{"content":"Remarks","pos":[1015,1022]},{"content":"This function behaves the same as the STL function <ph id=\"ph1\">`pop_heap`</ph>.","pos":[1026,1088],"source":"This function behaves the same as the STL function `pop_heap`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>pop_heap<ept id=\"p1\">](http://msdn.microsoft.com/Library/38f6eea3-d192-4597-aae7-c3ec2e659107)</ept>.","pos":[1089,1198],"source":" For more information, see [pop_heap](http://msdn.microsoft.com/Library/38f6eea3-d192-4597-aae7-c3ec2e659107)."},{"content":"Requirements","pos":[1207,1219]},{"pos":[1223,1254],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/algorithm&gt;","source":"**Header:** \\<cliext/algorithm>"},{"pos":[1261,1282],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1291,1299]},{"content":"algorithm (STL/CLR)","pos":[1304,1323]}],"content":"---\ntitle: \"pop_heap (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::pop_heap\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"pop_heap function [STL/CLR]\"\nms.assetid: d9bde0ed-2122-4d83-b4b3-f47f6fb3729a\ncaps.latest.revision: 4\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# pop_heap (STL/CLR)\nRemoves the largest element from the front of a heap to the next-to-last position in the range and then forms a new heap from the remaining elements.  \n  \n## Syntax  \n  \n```  \ntemplate<class _RanIt> inline  \n    void pop_heap(_RanIt _First, _RanIt _Last);  \ntemplate<class _RanIt, class _Pr> inline  \n    void pop_heap(_RanIt _First, _RanIt _Last, _Pr _Pred);  \n```  \n  \n## Remarks  \n This function behaves the same as the STL function `pop_heap`. For more information, see [pop_heap](http://msdn.microsoft.com/Library/38f6eea3-d192-4597-aae7-c3ec2e659107).  \n  \n## Requirements  \n **Header:** \\<cliext/algorithm>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [algorithm (STL/CLR)](../dotnet/algorithm-stl-clr.md)"}