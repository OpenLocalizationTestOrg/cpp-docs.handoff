{"nodes":[{"pos":[12,49],"content":"Compiler Error C3650 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C3650 | Microsoft Docs","pos":[0,37]}]},{"content":"Compiler Error C3650","pos":[597,617]},{"content":"'interface_method' : cannot be used as an explicit override, must be a virtual member function of a base class","pos":[618,728]},{"content":"An attempt was made to perform an explicit override on a member that was not virtual.","pos":[735,820]},{"pos":[827,936],"content":"For more information, see <bpt id=\"p1\">[</bpt>Explicit Overrides<ept id=\"p1\">](../../windows/explicit-overrides-cpp-component-extensions.md)</ept>.","source":"For more information, see [Explicit Overrides](../../windows/explicit-overrides-cpp-component-extensions.md)."},{"content":"The following sample generates C3650:","pos":[943,980]}],"content":"---\ntitle: \"Compiler Error C3650 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C3650\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C3650\"\nms.assetid: ca4d8de4-b027-4d13-9b9f-03ca62905c33\ncaps.latest.revision: 9\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Error C3650\n'interface_method' : cannot be used as an explicit override, must be a virtual member function of a base class  \n  \n An attempt was made to perform an explicit override on a member that was not virtual.  \n  \n For more information, see [Explicit Overrides](../../windows/explicit-overrides-cpp-component-extensions.md).  \n  \n The following sample generates C3650:  \n  \n```  \n// C3650.cpp  \n// compile with: /clr  \npublic interface struct I {  \n   void a();  \n};  \n  \npublic ref class S {  \npublic:  \n   static int f() { return 0; }  \n   static int g() { return 0; }  \n};  \n  \npublic ref struct T1 : public S, I {  \n   virtual int f() new sealed = S::f;   // C3650  \n   virtual int g() { return 0; }   // OK does not override S::g  \n   virtual void a() new sealed = I::a {}   // OK  \n};  \n```"}