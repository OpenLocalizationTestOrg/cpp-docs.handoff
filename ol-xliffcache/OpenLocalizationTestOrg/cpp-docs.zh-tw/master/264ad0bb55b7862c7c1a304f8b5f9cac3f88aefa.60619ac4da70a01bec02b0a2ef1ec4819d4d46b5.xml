{"nodes":[{"pos":[12,46],"content":"Predefined Macros | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Predefined Macros | Microsoft Docs","pos":[0,34]}]},{"content":"Predefined Macros","pos":[3604,3621]},{"content":"The Visual C++ compiler predefines certain preprocessor macros, depending on the language (C or C++), the compilation target, and the chosen compiler options.","pos":[3622,3780]},{"content":"Visual C++ supports the required predefined preprocessor macros specified by the ANSI/ISO C99 standard and the ISO C++14 standard.","pos":[3787,3917]},{"content":"The implementation also supports several more Microsoft-specific preprocessor macros.","pos":[3918,4003]},{"content":"Some macros are defined only for specific build environments or compiler options.","pos":[4004,4085]},{"content":"Unless noted, the macros are defined throughout a translation unit as if they were specified as <bpt id=\"p1\">**</bpt>/D<ept id=\"p1\">**</ept> compiler option arguments.","pos":[4086,4215],"source":" Unless noted, the macros are defined throughout a translation unit as if they were specified as **/D** compiler option arguments."},{"content":"When defined, the macros are expanded to the specified values by the preprocessor before compilation.","pos":[4216,4317]},{"content":"The predefined macros take no arguments and cannot be redefined.","pos":[4318,4382]},{"content":"Standard predefined identifier","pos":[4391,4421]},{"content":"The compiler supports this predefined identifier specified by ISO C99 and ISO C++11.","pos":[4425,4509]},{"pos":[4519,4647],"content":"<bpt id=\"p1\">**</bpt>__func<ph id=\"ph1\">\\_\\_</ph><ept id=\"p1\">**</ept> The unqualified and unadorned name of the enclosing function as a function-local <ph id=\"ph2\">`static``const`</ph> array of <ph id=\"ph3\">`char`</ph>.","source":"**__func\\_\\_** The unqualified and unadorned name of the enclosing function as a function-local `static``const` array of `char`."},{"content":"Standard predefined macros","pos":[4768,4794]},{"content":"The compiler supports these predefined macros specified by the ISO C99 and ISO C++14 standards.","pos":[4798,4893]},{"content":"<bpt id=\"p1\">**</bpt>__cplusplus<ept id=\"p1\">**</ept> Defined as an integer literal value when the translation unit is compiled as C++.","pos":[4903,5000],"source":"**__cplusplus** Defined as an integer literal value when the translation unit is compiled as C++."},{"content":"Otherwise, undefined.","pos":[5001,5022]},{"content":"<bpt id=\"p1\">**</bpt>__DATE<ph id=\"ph1\">\\_\\_</ph><ept id=\"p1\">**</ept> The compilation date of the current source file.","pos":[5032,5095],"source":"**__DATE\\_\\_** The compilation date of the current source file."},{"content":"The date is a constant length string literal of the form <bpt id=\"p1\">*</bpt>Mmm dd yyyy<ept id=\"p1\">*</ept>.","pos":[5096,5167],"source":" The date is a constant length string literal of the form *Mmm dd yyyy*."},{"content":"The month name <bpt id=\"p1\">*</bpt>Mmm<ept id=\"p1\">*</ept> is the same as the abbreviated month name in dates generated by the C Runtime Library <bpt id=\"p2\">[</bpt>asctime<ept id=\"p2\">](../c-runtime-library/reference/asctime-wasctime.md)</ept> function.","pos":[5168,5346],"source":" The month name *Mmm* is the same as the abbreviated month name in dates generated by the C Runtime Library [asctime](../c-runtime-library/reference/asctime-wasctime.md) function."},{"content":"The first character of date <bpt id=\"p1\">*</bpt>dd<ept id=\"p1\">*</ept> is a space if the value is less than 10.","pos":[5347,5420],"source":" The first character of date *dd* is a space if the value is less than 10."},{"content":"This macro is always defined.","pos":[5421,5450]},{"content":"<bpt id=\"p1\">**</bpt>__FILE<ph id=\"ph1\">\\_\\_</ph><ept id=\"p1\">**</ept> The name of the current source file.","pos":[5460,5511],"source":"**__FILE\\_\\_** The name of the current source file."},{"content":"<bpt id=\"p1\">**</bpt>__FILE<ph id=\"ph1\">\\_\\_</ph><ept id=\"p1\">**</ept> expands to a character string literal.","pos":[5512,5565],"source":"**__FILE\\_\\_** expands to a character string literal."},{"content":"To ensure that the full path to the file is displayed, use <bpt id=\"p1\">[</bpt>/FC (Full Path of Source Code File in Diagnostics)<ept id=\"p1\">](../build/reference/fc-full-path-of-source-code-file-in-diagnostics.md)</ept>.","pos":[5566,5749],"source":" To ensure that the full path to the file is displayed, use [/FC (Full Path of Source Code File in Diagnostics)](../build/reference/fc-full-path-of-source-code-file-in-diagnostics.md)."},{"content":"This macro is always defined.","pos":[5750,5779]},{"content":"<bpt id=\"p1\">**</bpt>__LINE<ph id=\"ph1\">\\_\\_</ph><ept id=\"p1\">**</ept> Defined as the integer line number in the current source file.","pos":[5789,5866],"source":"**__LINE\\_\\_** Defined as the integer line number in the current source file."},{"content":"The value of the <bpt id=\"p1\">**</bpt>__LINE<ph id=\"ph1\">\\_\\_</ph><ept id=\"p1\">**</ept> macro can be changed by using a <ph id=\"ph2\">`#line`</ph> directive.","pos":[5867,5949],"source":" The value of the **__LINE\\_\\_** macro can be changed by using a `#line` directive."},{"content":"This macro is always defined.","pos":[5950,5979]},{"content":"<bpt id=\"p1\">**</bpt>__STDC<ph id=\"ph1\">\\_\\_</ph><ept id=\"p1\">**</ept> Defined as 1 only when compiled as C and if the <bpt id=\"p2\">[</bpt>/Za<ept id=\"p2\">](../build/reference/za-ze-disable-language-extensions.md)</ept> compiler option is specified.","pos":[5989,6144],"source":"**__STDC\\_\\_** Defined as 1 only when compiled as C and if the [/Za](../build/reference/za-ze-disable-language-extensions.md) compiler option is specified."},{"content":"Otherwise, undefined.","pos":[6145,6166]},{"content":"<bpt id=\"p1\">**</bpt>__STDC_HOSTED<ph id=\"ph1\">\\_\\_</ph><ept id=\"p1\">**</ept> Defined as 1 if the implementation is a <bpt id=\"p2\">*</bpt>hosted implementation<ept id=\"p2\">*</ept>, one that supports the entire required standard library.","pos":[6176,6318],"source":"**__STDC_HOSTED\\_\\_** Defined as 1 if the implementation is a *hosted implementation*, one that supports the entire required standard library."},{"content":"Otherwise, defined as 0.","pos":[6319,6343]},{"content":"<bpt id=\"p1\">**</bpt>__STDCPP_THREADS<ph id=\"ph1\">\\_\\_</ph><ept id=\"p1\">**</ept> Defined as 1 if and only if a program can have more than one thread of execution, and compiled as C++.","pos":[6353,6480],"source":"**__STDCPP_THREADS\\_\\_** Defined as 1 if and only if a program can have more than one thread of execution, and compiled as C++."},{"content":"Otherwise, undefined.","pos":[6481,6502]},{"content":"<bpt id=\"p1\">**</bpt>__TIME<ph id=\"ph1\">\\_\\_</ph><ept id=\"p1\">**</ept> The time of translation of the preprocessed translation unit.","pos":[6512,6588],"source":"**__TIME\\_\\_** The time of translation of the preprocessed translation unit."},{"content":"The time is a character string literal of the form <bpt id=\"p1\">*</bpt>hh:mm:ss<ept id=\"p1\">*</ept>, the same as the time returned by the C Runtime Library <bpt id=\"p2\">[</bpt>asctime<ept id=\"p2\">](../c-runtime-library/reference/asctime-wasctime.md)</ept> function.","pos":[6589,6778],"source":" The time is a character string literal of the form *hh:mm:ss*, the same as the time returned by the C Runtime Library [asctime](../c-runtime-library/reference/asctime-wasctime.md) function."},{"content":"This macro is always defined.","pos":[6779,6808]},{"content":"Microsoft-specific predefined macros","pos":[6817,6853]},{"content":"Microsoft Visual C++ supports these additional predefined macros.","pos":[6857,6922]},{"content":"<bpt id=\"p1\">**</bpt>__ATOM<ph id=\"ph1\">\\_\\_</ph><ept id=\"p1\">**</ept> Defined as 1 when the <bpt id=\"p2\">[</bpt>/favor:ATOM<ept id=\"p2\">](../build/reference/favor-optimize-for-architecture-specifics.md)</ept> compiler option is set and the compiler target is x86 or x64.","pos":[6932,7109],"source":"**__ATOM\\_\\_** Defined as 1 when the [/favor:ATOM](../build/reference/favor-optimize-for-architecture-specifics.md) compiler option is set and the compiler target is x86 or x64."},{"content":"Otherwise, undefined.","pos":[7110,7131]},{"content":"<bpt id=\"p1\">**</bpt>__AVX<ph id=\"ph1\">\\_\\_</ph><ept id=\"p1\">**</ept> Defined as 1 when the <bpt id=\"p2\">[</bpt>/arch:AVX<ept id=\"p2\">](../build/reference/arch-x86.md)</ept> or <bpt id=\"p3\">[</bpt>/arch:AVX2<ept id=\"p3\">](../build/reference/arch-x86.md)</ept> compiler options are set and the compiler target is x86 or x64.","pos":[7141,7332],"source":"**__AVX\\_\\_** Defined as 1 when the [/arch:AVX](../build/reference/arch-x86.md) or [/arch:AVX2](../build/reference/arch-x86.md) compiler options are set and the compiler target is x86 or x64."},{"content":"Otherwise, undefined.","pos":[7333,7354]},{"content":"<bpt id=\"p1\">**</bpt>__AVX2<ph id=\"ph1\">\\_\\_</ph><ept id=\"p1\">**</ept> Defined as 1 when the <bpt id=\"p2\">[</bpt>/arch:AVX2<ept id=\"p2\">](../build/reference/arch-x86.md)</ept> compiler option is set and the compiler target is x86 or x64.","pos":[7364,7507],"source":"**__AVX2\\_\\_** Defined as 1 when the [/arch:AVX2](../build/reference/arch-x86.md) compiler option is set and the compiler target is x86 or x64."},{"content":"Otherwise, undefined.","pos":[7508,7529]},{"content":"<bpt id=\"p1\">**</bpt>_CHAR_UNSIGNED<ept id=\"p1\">**</ept> Defined as 1 if the default <ph id=\"ph1\">`char`</ph> type is unsigned.","pos":[7539,7610],"source":"**_CHAR_UNSIGNED** Defined as 1 if the default `char` type is unsigned."},{"content":"This is set when the <bpt id=\"p1\">[</bpt>/J (Default char Type Is unsigned)<ept id=\"p1\">](../build/reference/j-default-char-type-is-unsigned.md)</ept> compiler option is set.","pos":[7611,7747],"source":" This is set when the [/J (Default char Type Is unsigned)](../build/reference/j-default-char-type-is-unsigned.md) compiler option is set."},{"content":"Otherwise, undefined.","pos":[7748,7769]},{"content":"<bpt id=\"p1\">**</bpt>__CLR_VER<ept id=\"p1\">**</ept> Defined as an integer literal that represents the version of the common language runtime used when the application was compiled.","pos":[7779,7921],"source":"**__CLR_VER** Defined as an integer literal that represents the version of the common language runtime used when the application was compiled."},{"content":"The value is encoded in the form <ph id=\"ph1\">`Mmmbbbbb`</ph>, where <ph id=\"ph2\">`M`</ph> is the major version of the runtime, <ph id=\"ph3\">`mm`</ph> is the minor version of the runtime, and <ph id=\"ph4\">`bbbbb`</ph> is the build number.","pos":[7922,8088],"source":" The value is encoded in the form `Mmmbbbbb`, where `M` is the major version of the runtime, `mm` is the minor version of the runtime, and `bbbbb` is the build number."},{"content":"<bpt id=\"p1\">**</bpt>__CLR_VER<ept id=\"p1\">**</ept> is defined if the <bpt id=\"p2\">[</bpt>/clr<ept id=\"p2\">](../build/reference/clr-common-language-runtime-compilation.md)</ept> compiler option is set.","pos":[8089,8214],"source":"**__CLR_VER** is defined if the [/clr](../build/reference/clr-common-language-runtime-compilation.md) compiler option is set."},{"content":"Otherwise, undefined.","pos":[8215,8236]},{"content":"<bpt id=\"p1\">**</bpt>_CONTROL_FLOW_GUARD<ept id=\"p1\">**</ept> Defined as 1 when the <bpt id=\"p2\">[</bpt>/guard:cf (Enable Control Flow Guard)<ept id=\"p2\">](../build/reference/guard-enable-control-flow-guard.md)</ept> compiler option is set.","pos":[8418,8582],"source":"**_CONTROL_FLOW_GUARD** Defined as 1 when the [/guard:cf (Enable Control Flow Guard)](../build/reference/guard-enable-control-flow-guard.md) compiler option is set."},{"content":"Otherwise, undefined.","pos":[8583,8604]},{"content":"<bpt id=\"p1\">**</bpt>__COUNTER<ph id=\"ph1\">\\_\\_</ph><ept id=\"p1\">**</ept> Expands to an integer literal that starts at 0 and is incremented by 1 every time it is used in a source file or included headers of the source file.","pos":[8614,8781],"source":"**__COUNTER\\_\\_** Expands to an integer literal that starts at 0 and is incremented by 1 every time it is used in a source file or included headers of the source file."},{"content":"<bpt id=\"p1\">**</bpt>__COUNTER<ph id=\"ph1\">\\_\\_</ph><ept id=\"p1\">**</ept> remembers its state when you use precompiled headers.","pos":[8782,8853],"source":"**__COUNTER\\_\\_** remembers its state when you use precompiled headers."},{"content":"This macro is always defined.","pos":[8854,8883]},{"content":"This example uses <ph id=\"ph1\">`__COUNTER__`</ph> to assign unique identifiers to three different objects of the same type.","pos":[8894,8999],"source":"This example uses `__COUNTER__` to assign unique identifiers to three different objects of the same type."},{"content":"The <ph id=\"ph1\">`exampleClass`</ph> constructor takes an integer as a parameter.","pos":[9000,9063],"source":" The `exampleClass` constructor takes an integer as a parameter."},{"content":"In <ph id=\"ph1\">`main`</ph>, the application declares three objects of type <ph id=\"ph2\">`exampleClass`</ph>, using <ph id=\"ph3\">`__COUNTER__`</ph> as the unique identifier parameter:","pos":[9064,9193],"source":" In `main`, the application declares three objects of type `exampleClass`, using `__COUNTER__` as the unique identifier parameter:"},{"content":"<bpt id=\"p1\">**</bpt>__cplusplus_cli<ept id=\"p1\">**</ept> Defined as the integer literal value 200406 when compiled as C++ and the <bpt id=\"p2\">[</bpt>/clr<ept id=\"p2\">](../build/reference/clr-common-language-runtime-compilation.md)</ept>, <bpt id=\"p3\">[</bpt>/clr:pure<ept id=\"p3\">](../build/reference/clr-common-language-runtime-compilation.md)</ept>, or <bpt id=\"p4\">[</bpt>/clr:safe<ept id=\"p4\">](../build/reference/clr-common-language-runtime-compilation.md)</ept> compiler option is set.","pos":[10305,10646],"source":"**__cplusplus_cli** Defined as the integer literal value 200406 when compiled as C++ and the [/clr](../build/reference/clr-common-language-runtime-compilation.md), [/clr:pure](../build/reference/clr-common-language-runtime-compilation.md), or [/clr:safe](../build/reference/clr-common-language-runtime-compilation.md) compiler option is set."},{"content":"Otherwise, undefined.","pos":[10647,10668]},{"content":"When defined, <bpt id=\"p1\">**</bpt>__cplusplus_cli<ept id=\"p1\">**</ept> is in effect throughout the translation unit.","pos":[10669,10748],"source":" When defined, **__cplusplus_cli** is in effect throughout the translation unit."},{"content":"<bpt id=\"p1\">**</bpt>__cplusplus_winrt<ept id=\"p1\">**</ept> Defined as the integer literal value 201009 when compiled as C++ and the <bpt id=\"p2\">[</bpt>/ZW (Windows Runtime Compilation)<ept id=\"p2\">](../build/reference/zw-windows-runtime-compilation.md)</ept> compiler option is set.","pos":[11039,11247],"source":"**__cplusplus_winrt** Defined as the integer literal value 201009 when compiled as C++ and the [/ZW (Windows Runtime Compilation)](../build/reference/zw-windows-runtime-compilation.md) compiler option is set."},{"content":"Otherwise, undefined.","pos":[11248,11269]},{"content":"<bpt id=\"p1\">**</bpt>_CPPRTTI<ept id=\"p1\">**</ept> Defined as 1 if the <bpt id=\"p2\">[</bpt>/GR (Enable Run-Time Type Information)<ept id=\"p2\">](../build/reference/gr-enable-run-time-type-information.md)</ept> compiler option is set.","pos":[11279,11435],"source":"**_CPPRTTI** Defined as 1 if the [/GR (Enable Run-Time Type Information)](../build/reference/gr-enable-run-time-type-information.md) compiler option is set."},{"content":"Otherwise, undefined.","pos":[11436,11457]},{"content":"<bpt id=\"p1\">**</bpt>_CPPUNWIND<ept id=\"p1\">**</ept> Defined as 1 if one or more of the <bpt id=\"p2\">[</bpt>/GX (Enable Exception Handling)<ept id=\"p2\">](../build/reference/gx-enable-exception-handling.md)</ept>, <bpt id=\"p3\">[</bpt>/clr (Common Language Runtime Compilation)<ept id=\"p3\">](../build/reference/clr-common-language-runtime-compilation.md)</ept>, or <bpt id=\"p4\">[</bpt>/EH (Exception Handling Model)<ept id=\"p4\">](../build/reference/eh-exception-handling-model.md)</ept> compiler options are set.","pos":[11467,11825],"source":"**_CPPUNWIND** Defined as 1 if one or more of the [/GX (Enable Exception Handling)](../build/reference/gx-enable-exception-handling.md), [/clr (Common Language Runtime Compilation)](../build/reference/clr-common-language-runtime-compilation.md), or [/EH (Exception Handling Model)](../build/reference/eh-exception-handling-model.md) compiler options are set."},{"content":"Otherwise, undefined.","pos":[11826,11847]},{"content":"<bpt id=\"p1\">**</bpt>_DEBUG<ept id=\"p1\">**</ept> Defined as 1 when the <bpt id=\"p2\">[</bpt>/LDd<ept id=\"p2\">](../build/reference/md-mt-ld-use-run-time-library.md)</ept>, <bpt id=\"p3\">[</bpt>/MDd<ept id=\"p3\">](../build/reference/md-mt-ld-use-run-time-library.md)</ept>, or <bpt id=\"p4\">[</bpt>/MTd<ept id=\"p4\">](../build/reference/md-mt-ld-use-run-time-library.md)</ept> compiler option is set.","pos":[11857,12098],"source":"**_DEBUG** Defined as 1 when the [/LDd](../build/reference/md-mt-ld-use-run-time-library.md), [/MDd](../build/reference/md-mt-ld-use-run-time-library.md), or [/MTd](../build/reference/md-mt-ld-use-run-time-library.md) compiler option is set."},{"content":"Otherwise, undefined.","pos":[12099,12120]},{"content":"<bpt id=\"p1\">**</bpt>_DLL<ept id=\"p1\">**</ept> Defined as 1 when the <bpt id=\"p2\">[</bpt>/MD<ept id=\"p2\">](../build/reference/md-mt-ld-use-run-time-library.md)</ept> or <bpt id=\"p3\">[</bpt>/MDd<ept id=\"p3\">](../build/reference/md-mt-ld-use-run-time-library.md)</ept> (Multithreaded DLL) compiler option is set.","pos":[12130,12326],"source":"**_DLL** Defined as 1 when the [/MD](../build/reference/md-mt-ld-use-run-time-library.md) or [/MDd](../build/reference/md-mt-ld-use-run-time-library.md) (Multithreaded DLL) compiler option is set."},{"content":"Otherwise, undefined.","pos":[12327,12348]},{"content":"<bpt id=\"p1\">**</bpt>__FUNCDNAME<ph id=\"ph1\">\\_\\_</ph><ept id=\"p1\">**</ept> Defined as a string literal that contains the <bpt id=\"p2\">[</bpt>decorated name<ept id=\"p2\">](../build/reference/decorated-names.md)</ept> of the enclosing function.","pos":[12358,12506],"source":"**__FUNCDNAME\\_\\_** Defined as a string literal that contains the [decorated name](../build/reference/decorated-names.md) of the enclosing function."},{"content":"The macro is defined only within a function.","pos":[12507,12551]},{"content":"The <bpt id=\"p1\">**</bpt>__FUNCDNAME<ph id=\"ph1\">\\_\\_</ph><ept id=\"p1\">**</ept> macro is not expanded if you use the <bpt id=\"p2\">[</bpt>/EP<ept id=\"p2\">](../build/reference/ep-preprocess-to-stdout-without-hash-line-directives.md)</ept> or <bpt id=\"p3\">[</bpt>/P<ept id=\"p3\">](../build/reference/p-preprocess-to-a-file.md)</ept> compiler option.","pos":[12552,12765],"source":" The **__FUNCDNAME\\_\\_** macro is not expanded if you use the [/EP](../build/reference/ep-preprocess-to-stdout-without-hash-line-directives.md) or [/P](../build/reference/p-preprocess-to-a-file.md) compiler option."},{"pos":[12776,12888],"content":"This example uses the <ph id=\"ph1\">`__FUNCDNAME__`</ph>, <ph id=\"ph2\">`__FUNCSIG__`</ph>, and <ph id=\"ph3\">`__FUNCTION__`</ph> macros to display function information.","source":"This example uses the `__FUNCDNAME__`, `__FUNCSIG__`, and `__FUNCTION__` macros to display function information."},{"pos":[12910,12942],"content":"NVC_Predefined_Macros_Examples#1"},{"content":"<bpt id=\"p1\">**</bpt>__FUNCSIG<ph id=\"ph1\">\\_\\_</ph><ept id=\"p1\">**</ept> Defined as a string literal that contains the signature of the enclosing function.","pos":[13011,13111],"source":"**__FUNCSIG\\_\\_** Defined as a string literal that contains the signature of the enclosing function."},{"content":"The macro is defined only within a function.","pos":[13112,13156]},{"content":"The <bpt id=\"p1\">**</bpt>__FUNCSIG<ph id=\"ph1\">\\_\\_</ph><ept id=\"p1\">**</ept> macro is not expanded if you use the <bpt id=\"p2\">[</bpt>/EP<ept id=\"p2\">](../build/reference/ep-preprocess-to-stdout-without-hash-line-directives.md)</ept> or <bpt id=\"p3\">[</bpt>/P<ept id=\"p3\">](../build/reference/p-preprocess-to-a-file.md)</ept> compiler option.","pos":[13157,13368],"source":" The **__FUNCSIG\\_\\_** macro is not expanded if you use the [/EP](../build/reference/ep-preprocess-to-stdout-without-hash-line-directives.md) or [/P](../build/reference/p-preprocess-to-a-file.md) compiler option."},{"content":"When compiled for a 64-bit target, the calling convention is <ph id=\"ph1\">`__cdecl`</ph> by default.","pos":[13369,13451],"source":" When compiled for a 64-bit target, the calling convention is `__cdecl` by default."},{"content":"For an example of usage, see the <ph id=\"ph1\">`__FUNCDNAME__`</ph> macro.","pos":[13452,13507],"source":" For an example of usage, see the `__FUNCDNAME__` macro."},{"content":"<bpt id=\"p1\">**</bpt>__FUNCTION<ph id=\"ph1\">\\_\\_</ph><ept id=\"p1\">**</ept> Defined as a string literal that contains the undecorated name of the enclosing function.","pos":[13517,13625],"source":"**__FUNCTION\\_\\_** Defined as a string literal that contains the undecorated name of the enclosing function."},{"content":"The macro is defined only within a function.","pos":[13626,13670]},{"content":"The <bpt id=\"p1\">**</bpt>__FUNCTION<ph id=\"ph1\">\\_\\_</ph><ept id=\"p1\">**</ept> macro is not expanded if you use the <bpt id=\"p2\">[</bpt>/EP<ept id=\"p2\">](../build/reference/ep-preprocess-to-stdout-without-hash-line-directives.md)</ept> or <bpt id=\"p3\">[</bpt>/P<ept id=\"p3\">](../build/reference/p-preprocess-to-a-file.md)</ept> compiler option.","pos":[13671,13883],"source":" The **__FUNCTION\\_\\_** macro is not expanded if you use the [/EP](../build/reference/ep-preprocess-to-stdout-without-hash-line-directives.md) or [/P](../build/reference/p-preprocess-to-a-file.md) compiler option."},{"content":"For an example of usage, see the <ph id=\"ph1\">`__FUNCDNAME__`</ph> macro.","pos":[13884,13939],"source":" For an example of usage, see the `__FUNCDNAME__` macro."},{"content":"<bpt id=\"p1\">**</bpt>_INTEGRAL_MAX_BITS<ept id=\"p1\">**</ept> Defined as the integer literal value 64, the maximum size (in bits) for a non-vector integral type.","pos":[13949,14071],"source":"**_INTEGRAL_MAX_BITS** Defined as the integer literal value 64, the maximum size (in bits) for a non-vector integral type."},{"content":"This macro is always defined.","pos":[14072,14101]},{"content":"<bpt id=\"p1\">**</bpt>__INTELLISENSE<ph id=\"ph1\">\\_\\_</ph><ept id=\"p1\">**</ept> Defined as 1 during an IntelliSense compiler pass in the Visual Studio IDE.","pos":[14265,14363],"source":"**__INTELLISENSE\\_\\_** Defined as 1 during an IntelliSense compiler pass in the Visual Studio IDE."},{"content":"Otherwise, undefined.","pos":[14364,14385]},{"content":"You can use this macro to guard code the IntelliSense compiler does not understand, or use it to toggle between the build and IntelliSense compiler.","pos":[14386,14534]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Troubleshooting Tips for IntelliSense Slowness<ept id=\"p1\">](https://blogs.msdn.microsoft.com/vcblog/2011/03/29/troubleshooting-tips-for-intellisense-slowness/)</ept>.","pos":[14535,14710],"source":" For more information, see [Troubleshooting Tips for IntelliSense Slowness](https://blogs.msdn.microsoft.com/vcblog/2011/03/29/troubleshooting-tips-for-intellisense-slowness/)."},{"content":"<bpt id=\"p1\">**</bpt>_ISO_VOLATILE<ept id=\"p1\">**</ept> Defined as 1 if the <bpt id=\"p2\">[</bpt>/volatile:iso<ept id=\"p2\">](../build/reference/volatile-volatile-keyword-interpretation.md)</ept> compiler option is set.","pos":[14720,14861],"source":"**_ISO_VOLATILE** Defined as 1 if the [/volatile:iso](../build/reference/volatile-volatile-keyword-interpretation.md) compiler option is set."},{"content":"Otherwise, undefined.","pos":[14862,14883]},{"content":"<bpt id=\"p1\">**</bpt>_KERNEL_MODE<ept id=\"p1\">**</ept> Defined as 1 if the <bpt id=\"p2\">[</bpt>/kernel (Create Kernel Mode Binary)<ept id=\"p2\">](../build/reference/kernel-create-kernel-mode-binary.md)</ept> compiler option is set.","pos":[14893,15047],"source":"**_KERNEL_MODE** Defined as 1 if the [/kernel (Create Kernel Mode Binary)](../build/reference/kernel-create-kernel-mode-binary.md) compiler option is set."},{"content":"Otherwise, undefined.","pos":[15048,15069]},{"content":"<bpt id=\"p1\">**</bpt>_M_AMD64<ept id=\"p1\">**</ept> Defined as the integer literal value 100 for compilations that target x64 processors.","pos":[15079,15177],"source":"**_M_AMD64** Defined as the integer literal value 100 for compilations that target x64 processors."},{"content":"Otherwise, undefined.","pos":[15178,15199]},{"content":"<bpt id=\"p1\">**</bpt>_M_ARM<ept id=\"p1\">**</ept> Defined as the integer literal value 7 for compilations that target ARM processors.","pos":[15209,15303],"source":"**_M_ARM** Defined as the integer literal value 7 for compilations that target ARM processors."},{"content":"Otherwise, undefined.","pos":[15304,15325]},{"content":"<bpt id=\"p1\">**</bpt>_M_ARM_ARMV7VE<ept id=\"p1\">**</ept> Defined as 1 when the <bpt id=\"p2\">[</bpt>/arch:ARMv7VE<ept id=\"p2\">](../build/reference/arch-arm.md)</ept> compiler option is set for compilations that target ARM processors.","pos":[15335,15491],"source":"**_M_ARM_ARMV7VE** Defined as 1 when the [/arch:ARMv7VE](../build/reference/arch-arm.md) compiler option is set for compilations that target ARM processors."},{"content":"Otherwise, undefined.","pos":[15492,15513]},{"content":"<bpt id=\"p1\">**</bpt>_M_ARM_FP<ept id=\"p1\">**</ept> Defined as an integer literal value that indicates which <bpt id=\"p2\">[</bpt>/arch<ept id=\"p2\">](../build/reference/arch-arm.md)</ept> compiler option was set, if the compilation target is an ARM processor.","pos":[15523,15705],"source":"**_M_ARM_FP** Defined as an integer literal value that indicates which [/arch](../build/reference/arch-arm.md) compiler option was set, if the compilation target is an ARM processor."},{"content":"Otherwise, undefined.","pos":[15706,15727]},{"pos":[15741,15864],"content":"In the range 30-39 if no <bpt id=\"p1\">**</bpt>/arch<ept id=\"p1\">**</ept> ARM option was specified, indicating the default architecture for ARM was set (<ph id=\"ph1\">`VFPv3`</ph>).","source":"In the range 30-39 if no **/arch** ARM option was specified, indicating the default architecture for ARM was set (`VFPv3`)."},{"pos":[15878,15924],"content":"In the range 40-49 if <bpt id=\"p1\">**</bpt>/arch:VFPv4<ept id=\"p1\">**</ept> was set.","source":"In the range 40-49 if **/arch:VFPv4** was set."},{"pos":[15938,16009],"content":"See <bpt id=\"p1\">[</bpt>/arch (ARM)<ept id=\"p1\">](../build/reference/arch-arm.md)</ept> for more information.","source":"See [/arch (ARM)](../build/reference/arch-arm.md) for more information."},{"content":"<bpt id=\"p1\">**</bpt>_M_ARM64<ept id=\"p1\">**</ept> Defined as 1 for compilations that target 64-bit ARM processors.","pos":[16019,16096],"source":"**_M_ARM64** Defined as 1 for compilations that target 64-bit ARM processors."},{"content":"Otherwise, undefined.","pos":[16097,16118]},{"content":"<bpt id=\"p1\">**</bpt>_M_CEE<ept id=\"p1\">**</ept> Defined as 001 if any <bpt id=\"p2\">[</bpt>/clr (Common Language Runtime Compilation)<ept id=\"p2\">](../build/reference/clr-common-language-runtime-compilation.md)</ept> compiler option is set.","pos":[16128,16292],"source":"**_M_CEE** Defined as 001 if any [/clr (Common Language Runtime Compilation)](../build/reference/clr-common-language-runtime-compilation.md) compiler option is set."},{"content":"Otherwise, undefined.","pos":[16293,16314]},{"content":"<bpt id=\"p1\">**</bpt>_M_CEE_PURE<ept id=\"p1\">**</ept> Defined as 001 if the <bpt id=\"p2\">[</bpt>/clr:pure<ept id=\"p2\">](../build/reference/clr-common-language-runtime-compilation.md)</ept> compiler option is set.","pos":[16324,16460],"source":"**_M_CEE_PURE** Defined as 001 if the [/clr:pure](../build/reference/clr-common-language-runtime-compilation.md) compiler option is set."},{"content":"Otherwise, undefined.","pos":[16461,16482]},{"content":"<bpt id=\"p1\">**</bpt>_M_CEE_SAFE<ept id=\"p1\">**</ept> Defined as 001 if the <bpt id=\"p2\">[</bpt>/clr:safe<ept id=\"p2\">](../build/reference/clr-common-language-runtime-compilation.md)</ept> compiler option is set.","pos":[16492,16628],"source":"**_M_CEE_SAFE** Defined as 001 if the [/clr:safe](../build/reference/clr-common-language-runtime-compilation.md) compiler option is set."},{"content":"Otherwise, undefined.","pos":[16629,16650]},{"content":"<bpt id=\"p1\">**</bpt>_M_FP_EXCEPT<ept id=\"p1\">**</ept> Defined as 1 if the <bpt id=\"p2\">[</bpt>/fp:except<ept id=\"p2\">](../build/reference/fp-specify-floating-point-behavior.md)</ept> or <bpt id=\"p3\">[</bpt>/fp:strict<ept id=\"p3\">](../build/reference/fp-specify-floating-point-behavior.md)</ept> compiler option is set.","pos":[16660,16865],"source":"**_M_FP_EXCEPT** Defined as 1 if the [/fp:except](../build/reference/fp-specify-floating-point-behavior.md) or [/fp:strict](../build/reference/fp-specify-floating-point-behavior.md) compiler option is set."},{"content":"Otherwise, undefined.","pos":[16866,16887]},{"content":"<bpt id=\"p1\">**</bpt>_M_FP_FAST<ept id=\"p1\">**</ept> Defined as 1 if the <bpt id=\"p2\">[</bpt>/fp:fast<ept id=\"p2\">](../build/reference/fp-specify-floating-point-behavior.md)</ept> compiler option is set.","pos":[16897,17024],"source":"**_M_FP_FAST** Defined as 1 if the [/fp:fast](../build/reference/fp-specify-floating-point-behavior.md) compiler option is set."},{"content":"Otherwise, undefined.","pos":[17025,17046]},{"content":"<bpt id=\"p1\">**</bpt>_M_FP_PRECISE<ept id=\"p1\">**</ept> Defined as 1 if the <bpt id=\"p2\">[</bpt>/fp:precise<ept id=\"p2\">](../build/reference/fp-specify-floating-point-behavior.md)</ept> compiler option is set.","pos":[17056,17189],"source":"**_M_FP_PRECISE** Defined as 1 if the [/fp:precise](../build/reference/fp-specify-floating-point-behavior.md) compiler option is set."},{"content":"Otherwise, undefined.","pos":[17190,17211]},{"content":"<bpt id=\"p1\">**</bpt>_M_FP_STRICT<ept id=\"p1\">**</ept> Defined as 1 if the <bpt id=\"p2\">[</bpt>/fp:strict<ept id=\"p2\">](../build/reference/fp-specify-floating-point-behavior.md)</ept> compiler option is set.","pos":[17221,17352],"source":"**_M_FP_STRICT** Defined as 1 if the [/fp:strict](../build/reference/fp-specify-floating-point-behavior.md) compiler option is set."},{"content":"Otherwise, undefined.","pos":[17353,17374]},{"content":"<bpt id=\"p1\">**</bpt>_M_IX86<ept id=\"p1\">**</ept> Defined as the integer literal value 600 for compilations that target x86 processors.","pos":[17384,17481],"source":"**_M_IX86** Defined as the integer literal value 600 for compilations that target x86 processors."},{"content":"This macro is not defined for x64 or ARM compilation targets.","pos":[17482,17543]},{"content":"<bpt id=\"p1\">**</bpt>_M_IX86_FP<ept id=\"p1\">**</ept> Defined as an integer literal value that indicates the <bpt id=\"p2\">[</bpt>/arch<ept id=\"p2\">](../build/reference/arch-arm.md)</ept> compiler option that was set, or the default.","pos":[17553,17708],"source":"**_M_IX86_FP** Defined as an integer literal value that indicates the [/arch](../build/reference/arch-arm.md) compiler option that was set, or the default."},{"content":"This macro is always defined when the compilation target is an x86 processor.","pos":[17709,17786]},{"content":"Otherwise, undefined.","pos":[17787,17808]},{"content":"When defined, the value is:","pos":[17809,17836]},{"pos":[17850,17898],"content":"0 if the <bpt id=\"p1\">**</bpt>/arch:IA32<ept id=\"p1\">**</ept> compiler option was set.","source":"0 if the **/arch:IA32** compiler option was set."},{"pos":[17912,17959],"content":"1 if the <bpt id=\"p1\">**</bpt>/arch:SSE<ept id=\"p1\">**</ept> compiler option was set.","source":"1 if the **/arch:SSE** compiler option was set."},{"content":"2 if the <bpt id=\"p1\">**</bpt>/arch:SSE2<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>/arch:AVX<ept id=\"p2\">**</ept> or <bpt id=\"p3\">**</bpt>/arch:AVX2<ept id=\"p3\">**</ept> compiler option was set.","pos":[17973,18054],"source":"2 if the **/arch:SSE2**, **/arch:AVX** or **/arch:AVX2** compiler option was set."},{"content":"This value is the default if an <bpt id=\"p1\">**</bpt>/arch<ept id=\"p1\">**</ept> compiler option was not specified.","pos":[18055,18131],"source":" This value is the default if an **/arch** compiler option was not specified."},{"content":"When <bpt id=\"p1\">**</bpt>/arch:AVX<ept id=\"p1\">**</ept> is specified, the macro <bpt id=\"p2\">**</bpt>__AVX<ph id=\"ph1\">\\_\\_</ph><ept id=\"p2\">**</ept> is also defined.","pos":[18132,18205],"source":" When **/arch:AVX** is specified, the macro **__AVX\\_\\_** is also defined."},{"content":"When <bpt id=\"p1\">**</bpt>/arch:AVX2<ept id=\"p1\">**</ept> is specified, both <bpt id=\"p2\">**</bpt>__AVX<ph id=\"ph1\">\\_\\_</ph><ept id=\"p2\">**</ept> and <bpt id=\"p3\">**</bpt>__AVX2<ph id=\"ph2\">\\_\\_</ph><ept id=\"p3\">**</ept> are also defined.","pos":[18206,18295],"source":" When **/arch:AVX2** is specified, both **__AVX\\_\\_** and **__AVX2\\_\\_** are also defined."},{"pos":[18309,18380],"content":"See <bpt id=\"p1\">[</bpt>/arch (x86)<ept id=\"p1\">](../build/reference/arch-x86.md)</ept> for more information.","source":"See [/arch (x86)](../build/reference/arch-x86.md) for more information."},{"content":"<bpt id=\"p1\">**</bpt>_M_X64<ept id=\"p1\">**</ept> Defined as the integer literal value 100 for compilations that target x64 processors.","pos":[18390,18486],"source":"**_M_X64** Defined as the integer literal value 100 for compilations that target x64 processors."},{"content":"Otherwise, undefined.","pos":[18487,18508]},{"content":"<bpt id=\"p1\">**</bpt>_MANAGED<ept id=\"p1\">**</ept> Defined as 1 when the <bpt id=\"p2\">[</bpt>/clr<ept id=\"p2\">](../build/reference/clr-common-language-runtime-compilation.md)</ept> compiler option is set.","pos":[18518,18646],"source":"**_MANAGED** Defined as 1 when the [/clr](../build/reference/clr-common-language-runtime-compilation.md) compiler option is set."},{"content":"Otherwise, undefined.","pos":[18647,18668]},{"content":"<bpt id=\"p1\">**</bpt>_MSC_BUILD<ept id=\"p1\">**</ept> Defined as an integer literal that contains the revision number element of the compiler's version number.","pos":[18678,18798],"source":"**_MSC_BUILD** Defined as an integer literal that contains the revision number element of the compiler's version number."},{"content":"The revision number is the fourth element of the period-delimited version number.","pos":[18799,18880]},{"content":"For example, if the version number of the Visual C++ compiler is 15.00.20706.01, the <bpt id=\"p1\">**</bpt>_MSC_BUILD<ept id=\"p1\">**</ept> macro evaluates to 1.","pos":[18881,19002],"source":" For example, if the version number of the Visual C++ compiler is 15.00.20706.01, the **_MSC_BUILD** macro evaluates to 1."},{"content":"This macro is always defined.","pos":[19003,19032]},{"content":"<bpt id=\"p1\">**</bpt>_MSC_EXTENSIONS<ept id=\"p1\">**</ept> Defined as 1 if the <bpt id=\"p2\">[</bpt>/Ze (Enable Language Extensions)<ept id=\"p2\">](../build/reference/za-ze-disable-language-extensions.md)</ept> compiler option is set, which is the default.","pos":[19042,19219],"source":"**_MSC_EXTENSIONS** Defined as 1 if the [/Ze (Enable Language Extensions)](../build/reference/za-ze-disable-language-extensions.md) compiler option is set, which is the default."},{"content":"Otherwise, undefined.","pos":[19220,19241]},{"content":"<bpt id=\"p1\">**</bpt>_MSC_FULL_VER<ept id=\"p1\">**</ept> Defined as an integer literal that encodes the major, minor, and build number elements of the compiler's version number.","pos":[19251,19389],"source":"**_MSC_FULL_VER** Defined as an integer literal that encodes the major, minor, and build number elements of the compiler's version number."},{"content":"The major number is the first element of the period-delimited version number, the minor number is the second element, and the build number is the third element.","pos":[19390,19550]},{"content":"For example, if the version number of the Visual C++ compiler is 15.00.20706.01, the <bpt id=\"p1\">**</bpt>_MSC_FULL_VER<ept id=\"p1\">**</ept> macro evaluates to 150020706.","pos":[19551,19683],"source":" For example, if the version number of the Visual C++ compiler is 15.00.20706.01, the **_MSC_FULL_VER** macro evaluates to 150020706."},{"content":"Enter <bpt id=\"p1\">**</bpt>cl /?<ept id=\"p1\">**</ept>","pos":[19684,19699],"source":" Enter **cl /?**"},{"content":"at the command line to view the compiler's version number.","pos":[19700,19758]},{"content":"This macro is always defined.","pos":[19759,19788]},{"content":"<bpt id=\"p1\">**</bpt>_MSC_VER<ept id=\"p1\">**</ept> Defined as an integer literal that encodes the major and minor number elements of the compiler's version number.","pos":[19798,19923],"source":"**_MSC_VER** Defined as an integer literal that encodes the major and minor number elements of the compiler's version number."},{"content":"The major number is the first element of the period-delimited version number and the minor number is the second element.","pos":[19924,20044]},{"content":"For example, if the version number of the Visual C++ compiler is 17.00.51106.1, the <bpt id=\"p1\">**</bpt>_MSC_VER<ept id=\"p1\">**</ept> macro evaluates to 1700.","pos":[20045,20166],"source":" For example, if the version number of the Visual C++ compiler is 17.00.51106.1, the **_MSC_VER** macro evaluates to 1700."},{"content":"Enter <bpt id=\"p1\">**</bpt>cl /?<ept id=\"p1\">**</ept>","pos":[20167,20182],"source":" Enter **cl /?**"},{"content":"at the command line to view the compiler's version number.","pos":[20183,20241]},{"content":"This macro is always defined.","pos":[20242,20271]},{"content":"<bpt id=\"p1\">**</bpt>_MSVC_LANG<ept id=\"p1\">**</ept> Defined as an integer literal that specifies the C++ language standard targeted by the compiler.","pos":[20281,20392],"source":"**_MSVC_LANG** Defined as an integer literal that specifies the C++ language standard targeted by the compiler."},{"content":"When compiled as C++, the macro is the integer literal value 201402 if the <bpt id=\"p1\">[</bpt>/std:c++14<ept id=\"p1\">](../build/reference/std-specify-language-standard-version.md)</ept> compiler option is set, or by default, and it is set to a higher, unspecified value when the <bpt id=\"p2\">[</bpt>/std:c++latest<ept id=\"p2\">](../build/reference/std-specify-language-standard-version.md)</ept> compiler option is set.","pos":[20393,20736],"source":" When compiled as C++, the macro is the integer literal value 201402 if the [/std:c++14](../build/reference/std-specify-language-standard-version.md) compiler option is set, or by default, and it is set to a higher, unspecified value when the [/std:c++latest](../build/reference/std-specify-language-standard-version.md) compiler option is set."},{"content":"Otherwise, the macro is undefined.","pos":[20737,20771]},{"content":"The <bpt id=\"p1\">**</bpt>_MSVC_LANG<ept id=\"p1\">**</ept> macro and <bpt id=\"p2\">[</bpt>/std (Specify Language Standard Version)<ept id=\"p2\">](../build/reference/std-specify-language-standard-version.md)</ept> compiler options are available beginning in Visual Studio 2015 Update 3.","pos":[20772,20977],"source":" The **_MSVC_LANG** macro and [/std (Specify Language Standard Version)](../build/reference/std-specify-language-standard-version.md) compiler options are available beginning in Visual Studio 2015 Update 3."},{"content":"<bpt id=\"p1\">**</bpt>__MSVC_RUNTIME_CHECKS<ept id=\"p1\">**</ept> Defined as 1 when one of the <bpt id=\"p2\">[</bpt>/RTC<ept id=\"p2\">](../build/reference/rtc-run-time-error-checks.md)</ept> compiler options is set.","pos":[20987,21122],"source":"**__MSVC_RUNTIME_CHECKS** Defined as 1 when one of the [/RTC](../build/reference/rtc-run-time-error-checks.md) compiler options is set."},{"content":"Otherwise, undefined.","pos":[21123,21144]},{"content":"<bpt id=\"p1\">**</bpt>_MT<ept id=\"p1\">**</ept> Defined as 1 when <bpt id=\"p2\">[</bpt>/MD or /MDd<ept id=\"p2\">](../build/reference/md-mt-ld-use-run-time-library.md)</ept> (Multithreaded DLL) or <bpt id=\"p3\">[</bpt>/MT or /MTd<ept id=\"p3\">](../build/reference/md-mt-ld-use-run-time-library.md)</ept> (Multithreaded) is specified.","pos":[21154,21366],"source":"**_MT** Defined as 1 when [/MD or /MDd](../build/reference/md-mt-ld-use-run-time-library.md) (Multithreaded DLL) or [/MT or /MTd](../build/reference/md-mt-ld-use-run-time-library.md) (Multithreaded) is specified."},{"content":"Otherwise, undefined.","pos":[21367,21388]},{"content":"<bpt id=\"p1\">**</bpt>_NATIVE_WCHAR_T_DEFINED<ept id=\"p1\">**</ept> Defined as 1 when the <bpt id=\"p2\">[</bpt>/Zc:wchar_t<ept id=\"p2\">](../build/reference/zc-wchar-t-wchar-t-is-native-type.md)</ept> compiler option is set.","pos":[21398,21542],"source":"**_NATIVE_WCHAR_T_DEFINED** Defined as 1 when the [/Zc:wchar_t](../build/reference/zc-wchar-t-wchar-t-is-native-type.md) compiler option is set."},{"content":"Otherwise, undefined.","pos":[21543,21564]},{"content":"<bpt id=\"p1\">**</bpt>_OPENMP<ept id=\"p1\">**</ept> Defined as integer literal 200203, representing the date of the OpenMP specification implemented by Visual C++, if the <bpt id=\"p2\">[</bpt>/openmp (Enable OpenMP 2.0 Support)<ept id=\"p2\">](../build/reference/openmp-enable-openmp-2-0-support.md)</ept> compiler option is set.","pos":[21574,21822],"source":"**_OPENMP** Defined as integer literal 200203, representing the date of the OpenMP specification implemented by Visual C++, if the [/openmp (Enable OpenMP 2.0 Support)](../build/reference/openmp-enable-openmp-2-0-support.md) compiler option is set."},{"content":"Otherwise, undefined.","pos":[21823,21844]},{"content":"<bpt id=\"p1\">**</bpt>_PREFAST<ph id=\"ph1\">\\_</ph><ept id=\"p1\">**</ept> Defined as 1 when the <bpt id=\"p2\">[</bpt>/analyze<ept id=\"p2\">](../build/reference/analyze-code-analysis.md)</ept> compiler option is set.","pos":[22024,22140],"source":"**_PREFAST\\_** Defined as 1 when the [/analyze](../build/reference/analyze-code-analysis.md) compiler option is set."},{"content":"Otherwise, undefined.","pos":[22141,22162]},{"content":"<bpt id=\"p1\">**</bpt>__TIMESTAMP<ph id=\"ph1\">\\_\\_</ph><ept id=\"p1\">**</ept> Defined as a string literal that contains the date and time of the last modification of the current source file, in the abbreviated, constant length form returned by the C Runtime Library <bpt id=\"p2\">[</bpt>asctime<ept id=\"p2\">](../c-runtime-library/reference/asctime-wasctime.md)</ept> function, for example, <ph id=\"ph2\">`Fri 19 Aug 13:32:58 2016`</ph>.","pos":[22172,22492],"source":"**__TIMESTAMP\\_\\_** Defined as a string literal that contains the date and time of the last modification of the current source file, in the abbreviated, constant length form returned by the C Runtime Library [asctime](../c-runtime-library/reference/asctime-wasctime.md) function, for example, `Fri 19 Aug 13:32:58 2016`."},{"content":"This macro is always defined.","pos":[22493,22522]},{"content":"<bpt id=\"p1\">**</bpt>_VC_NODEFAULTLIB<ept id=\"p1\">**</ept> Defined as 1 when the <bpt id=\"p2\">[</bpt>/Zl (Omit Default Library Name)<ept id=\"p2\">](../build/reference/zl-omit-default-library-name.md)</ept> compiler option is set.","pos":[22532,22684],"source":"**_VC_NODEFAULTLIB** Defined as 1 when the [/Zl (Omit Default Library Name)](../build/reference/zl-omit-default-library-name.md) compiler option is set."},{"content":"Otherwise, undefined.","pos":[22685,22706]},{"content":"<bpt id=\"p1\">**</bpt>_WCHAR_T_DEFINED<ept id=\"p1\">**</ept> Defined as 1 when the default <bpt id=\"p2\">[</bpt>/Zc:wchar_t<ept id=\"p2\">](../build/reference/zc-wchar-t-wchar-t-is-native-type.md)</ept> compiler option is set.","pos":[22716,22861],"source":"**_WCHAR_T_DEFINED** Defined as 1 when the default [/Zc:wchar_t](../build/reference/zc-wchar-t-wchar-t-is-native-type.md) compiler option is set."},{"content":"The <bpt id=\"p1\">**</bpt>_WCHAR_T_DEFINED<ept id=\"p1\">**</ept> macro is defined but has no value if the <bpt id=\"p2\">**</bpt>/Zc:wchar_t-<ept id=\"p2\">**</ept> compiler option is set, and <ph id=\"ph1\">`wchar_t`</ph> is defined in a system header file included in your project.","pos":[22862,23043],"source":" The **_WCHAR_T_DEFINED** macro is defined but has no value if the **/Zc:wchar_t-** compiler option is set, and `wchar_t` is defined in a system header file included in your project."},{"content":"Otherwise, undefined.","pos":[23044,23065]},{"content":"<bpt id=\"p1\">**</bpt>_WIN32<ept id=\"p1\">**</ept> Defined as 1 when the compilation target is 32-bit ARM, 64-bit ARM, x86, or x64.","pos":[23075,23166],"source":"**_WIN32** Defined as 1 when the compilation target is 32-bit ARM, 64-bit ARM, x86, or x64."},{"content":"Otherwise, undefined.","pos":[23167,23188]},{"content":"<bpt id=\"p1\">**</bpt>_WIN64<ept id=\"p1\">**</ept> Defined as 1 when the compilation target is 64-bit ARM or x64.","pos":[23198,23271],"source":"**_WIN64** Defined as 1 when the compilation target is 64-bit ARM or x64."},{"content":"Otherwise, undefined.","pos":[23272,23293]},{"content":"<bpt id=\"p1\">**</bpt>_WINRT_DLL<ept id=\"p1\">**</ept> Defined as 1 when compiled as C++ and both <bpt id=\"p2\">[</bpt>/ZW (Windows Runtime Compilation)<ept id=\"p2\">](../build/reference/zw-windows-runtime-compilation.md)</ept> and <bpt id=\"p3\">[</bpt>/LD or /LDd<ept id=\"p3\">](../build/reference/md-mt-ld-use-run-time-library.md)</ept> compiler options are set.","pos":[23303,23547],"source":"**_WINRT_DLL** Defined as 1 when compiled as C++ and both [/ZW (Windows Runtime Compilation)](../build/reference/zw-windows-runtime-compilation.md) and [/LD or /LDd](../build/reference/md-mt-ld-use-run-time-library.md) compiler options are set."},{"content":"Otherwise, undefined.","pos":[23548,23569]},{"content":"Preprocessor macros used to determine the ATL or MFC library version are not predefined by the compiler.","pos":[23576,23680]},{"content":"These macros are defined in the headers for the library, so they are undefined in preprocessor directives before the required header is included.","pos":[23681,23826]},{"pos":[23836,23930],"content":"<bpt id=\"p1\">**</bpt>_ATL_VER<ept id=\"p1\">**</ept> Defined in <ph id=\"ph1\">\\&lt;</ph>atldef.h&gt; as an integer literal that encodes the ATL version number.","source":"**_ATL_VER** Defined in \\<atldef.h> as an integer literal that encodes the ATL version number."},{"pos":[23940,24035],"content":"<bpt id=\"p1\">**</bpt>_MFC_VER<ept id=\"p1\">**</ept> Defined in <ph id=\"ph1\">\\&lt;</ph>afxver_.h&gt; as an integer literal that encodes the MFC version number.","source":"**_MFC_VER** Defined in \\<afxver_.h> as an integer literal that encodes the MFC version number."},{"content":"See Also","pos":[24044,24052]},{"content":"Macros (C/C++)","pos":[24057,24071]},{"content":"Preprocessor Operators","pos":[24111,24133]},{"content":"Preprocessor Directives","pos":[24183,24206]}],"content":"---\ntitle: \"Predefined Macros | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"_ATL_VER\"\n  - \"__ATOM__\"\n  - \"__AVX__\"\n  - \"__AVX2__\"\n  - \"_CHAR_UNSIGNED\"\n  - \"__CLR_VER\"\n  - \"_CONTROL_FLOW_GUARD\"\n  - \"__COUNTER__\"\n  - \"__cplusplus\"\n  - \"__cplusplus_cli\"\n  - \"__cplusplus_winrt\"\n  - \"_CPPRTTI\"\n  - \"_CPPUNWIND\"\n  - \"__DATE__\"\n  - \"_DEBUG\"\n  - \"_DLL\"\n  - \"__FILE__\"\n  - \"__FUNCDNAME__\"\n  - \"__FUNCSIG__\"\n  - \"__FUNCTION__\"\n  - \"_INTEGRAL_MAX_BITS\"\n  - \"_ISO_VOLATILE\"\n  - \"_KERNEL_MODE\"\n  - \"__LINE__\"\n  - \"_M_AMD64\"\n  - \"_M_ARM\"\n  - \"_M_ARM_ARMV7VE\"\n  - \"_M_ARM_FP\"\n  - \"_M_ARM64\"\n  - \"_M_CEE\"\n  - \"_M_CEE_PURE\"\n  - \"_M_CEE_SAFE\"\n  - \"_M_FP_EXCEPT\"\n  - \"_M_FP_FAST\"\n  - \"_M_FP_PRECISE\"\n  - \"_M_FP_STRICT\"\n  - \"_M_IX86\"\n  - \"_M_IX86_FP\"\n  - \"_M_X64\"\n  - \"_MANAGED\"\n  - \"_MFC_VER\"\n  - \"_MSC_BUILD\"\n  - \"_MSC_EXTENSIONS\"\n  - \"_MSC_FULL_VER\"\n  - \"_MSC_VER\"\n  - \"_MSVC_LANG\"\n  - \"__MSVC_RUNTIME_CHECKS\"\n  - \"_MT\"\n  - \"_NATIVE_WCHAR_T_DEFINED\"\n  - \"_NO_SIZED_DEALLOCATION\"\n  - \"_OPENMP\"\n  - \"_PREFAST_\"\n  - \"_RESUMABLE_FUNCTIONS_SUPPORTED\"\n  - \"_RTC_CONVERSION_CHECKS_ENABLED\"\n  - \"__STDC__\"\n  - \"__STDC_HOSTED__\"\n  - \"__STDCPP_THREADS__\"\n  - \"__TIME__\"\n  - \"__TIMESTAMP__\"\n  - \"__VA_ARGS__\"\n  - \"_VC_NODEFAULTLIB\"\n  - \"_WCHAR_T_DEFINED\"\n  - \"_WIN32\"\n  - \"_WIN64\"\n  - \"_WINRT_DLL\"\n  - \"__func__\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"timestamps, preprocessor macro\"\n  - \"cl.exe compiler, version number\"\n  - \"version numbers, C/C++ compiler (cl.exe)\"\n  - \"macros, predefined C++\"\n  - \"preprocessor, macros\"\n  - \"predefined macros\"\n  - \"_ATL_VER macro\"\n  - \"__ATOM__ macro\"\n  - \"__AVX__ macro\"\n  - \"__AVX2__ macro\"\n  - \"_CHAR_UNSIGNED macro\"\n  - \"__CLR_VER macro\"\n  - \"_CONTROL_FLOW_GUARD macro\"\n  - \"__COUNTER__ macro\"\n  - \"__cplusplus macro\"\n  - \"__cplusplus_cli macro\"\n  - \"__cplusplus_winrt macro\"\n  - \"_CPPRTTI macro\"\n  - \"_CPPUNWIND macro\"\n  - \"__DATE__ macro\"\n  - \"_DEBUG macro\"\n  - \"_DLL macro\"\n  - \"__FILE__ macro\"\n  - \"__FUNCDNAME__ macro\"\n  - \"__FUNCSIG__ macro\"\n  - \"__FUNCTION__ macro\"\n  - \"_INTEGRAL_MAX_BITS macro\"\n  - \"_ISO_VOLATILE macro\"\n  - \"_KERNEL_MODE macro\"\n  - \"__LINE__ macro\"\n  - \"_M_AMD64 macro\"\n  - \"_M_ARM macro\"\n  - \"_M_ARM_ARMV7VE macro\"\n  - \"_M_ARM_FP macro\"\n  - \"_M_ARM64 macro\"\n  - \"_M_CEE macro\"\n  - \"_M_CEE_PURE macro\"\n  - \"_M_CEE_SAFE macro\"\n  - \"_M_FP_EXCEPT macro\"\n  - \"_M_FP_FAST macro\"\n  - \"_M_FP_PRECISE macro\"\n  - \"_M_FP_STRICT macro\"\n  - \"_M_IX86 macro\"\n  - \"_M_IX86_FP macro\"\n  - \"_M_X64 macro\"\n  - \"_MANAGED macro\"\n  - \"_MFC_VER macro\"\n  - \"_MSC_BUILD macro\"\n  - \"_MSC_EXTENSIONS macro\"\n  - \"_MSC_FULL_VER macro\"\n  - \"_MSC_VER macro\"\n  - \"_MSVC_LANG macro\"\n  - \"__MSVC_RUNTIME_CHECKS macro\"\n  - \"_MT macro\"\n  - \"_NATIVE_WCHAR_T_DEFINED macro\"\n  - \"_NO_SIZED_DEALLOCATION macro\"\n  - \"_OPENMP macro\"\n  - \"_PREFAST_ macro\"\n  - \"_RESUMABLE_FUNCTIONS_SUPPORTED macro\"\n  - \"_RTC_CONVERSION_CHECKS_ENABLED macro\"\n  - \"__STDC__ macro\"\n  - \"__STDC_HOSTED__ macro\"\n  - \"__STDCPP_THREADS__ macro\"\n  - \"__TIME__ macro\"\n  - \"__TIMESTAMP__ macro\"\n  - \"__VA_ARGS__ macro\"\n  - \"_VC_NODEFAULTLIB macro\"\n  - \"_WCHAR_T_DEFINED macro\"\n  - \"_WIN32 macro\"\n  - \"_WIN64 macro\"\n  - \"_WINRT_DLL macro\"\n  - \"__func__ identifier\"\nms.assetid: 1cc5f70a-a225-469c-aed0-fe766238e23f\ncaps.latest.revision: 75\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Predefined Macros\nThe Visual C++ compiler predefines certain preprocessor macros, depending on the language (C or C++), the compilation target, and the chosen compiler options.  \n  \n Visual C++ supports the required predefined preprocessor macros specified by the ANSI/ISO C99 standard and the ISO C++14 standard. The implementation also supports several more Microsoft-specific preprocessor macros. Some macros are defined only for specific build environments or compiler options. Unless noted, the macros are defined throughout a translation unit as if they were specified as **/D** compiler option arguments. When defined, the macros are expanded to the specified values by the preprocessor before compilation. The predefined macros take no arguments and cannot be redefined.  \n  \n## Standard predefined identifier  \n The compiler supports this predefined identifier specified by ISO C99 and ISO C++11.  \n  \n-   **__func\\_\\_** The unqualified and unadorned name of the enclosing function as a function-local `static``const` array of `char`.  \n  \n    ```cpp  \n    void example(){  \n        printf(\"%s\\n\", __func__);  \n    } // prints \"example\"  \n    ```  \n  \n## Standard predefined macros  \n The compiler supports these predefined macros specified by the ISO C99 and ISO C++14 standards.  \n  \n-   **__cplusplus** Defined as an integer literal value when the translation unit is compiled as C++. Otherwise, undefined.  \n  \n-   **__DATE\\_\\_** The compilation date of the current source file. The date is a constant length string literal of the form *Mmm dd yyyy*. The month name *Mmm* is the same as the abbreviated month name in dates generated by the C Runtime Library [asctime](../c-runtime-library/reference/asctime-wasctime.md) function. The first character of date *dd* is a space if the value is less than 10. This macro is always defined.  \n  \n-   **__FILE\\_\\_** The name of the current source file. **__FILE\\_\\_** expands to a character string literal. To ensure that the full path to the file is displayed, use [/FC (Full Path of Source Code File in Diagnostics)](../build/reference/fc-full-path-of-source-code-file-in-diagnostics.md). This macro is always defined.  \n  \n-   **__LINE\\_\\_** Defined as the integer line number in the current source file. The value of the **__LINE\\_\\_** macro can be changed by using a `#line` directive. This macro is always defined.  \n  \n-   **__STDC\\_\\_** Defined as 1 only when compiled as C and if the [/Za](../build/reference/za-ze-disable-language-extensions.md) compiler option is specified. Otherwise, undefined.  \n  \n-   **__STDC_HOSTED\\_\\_** Defined as 1 if the implementation is a *hosted implementation*, one that supports the entire required standard library. Otherwise, defined as 0.  \n  \n-   **__STDCPP_THREADS\\_\\_** Defined as 1 if and only if a program can have more than one thread of execution, and compiled as C++. Otherwise, undefined.  \n  \n-   **__TIME\\_\\_** The time of translation of the preprocessed translation unit. The time is a character string literal of the form *hh:mm:ss*, the same as the time returned by the C Runtime Library [asctime](../c-runtime-library/reference/asctime-wasctime.md) function. This macro is always defined.  \n  \n## Microsoft-specific predefined macros  \n Microsoft Visual C++ supports these additional predefined macros.  \n  \n-   **__ATOM\\_\\_** Defined as 1 when the [/favor:ATOM](../build/reference/favor-optimize-for-architecture-specifics.md) compiler option is set and the compiler target is x86 or x64. Otherwise, undefined.  \n  \n-   **__AVX\\_\\_** Defined as 1 when the [/arch:AVX](../build/reference/arch-x86.md) or [/arch:AVX2](../build/reference/arch-x86.md) compiler options are set and the compiler target is x86 or x64. Otherwise, undefined.  \n  \n-   **__AVX2\\_\\_** Defined as 1 when the [/arch:AVX2](../build/reference/arch-x86.md) compiler option is set and the compiler target is x86 or x64. Otherwise, undefined.  \n  \n-   **_CHAR_UNSIGNED** Defined as 1 if the default `char` type is unsigned. This is set when the [/J (Default char Type Is unsigned)](../build/reference/j-default-char-type-is-unsigned.md) compiler option is set. Otherwise, undefined.  \n  \n-   **__CLR_VER** Defined as an integer literal that represents the version of the common language runtime used when the application was compiled. The value is encoded in the form `Mmmbbbbb`, where `M` is the major version of the runtime, `mm` is the minor version of the runtime, and `bbbbb` is the build number. **__CLR_VER** is defined if the [/clr](../build/reference/clr-common-language-runtime-compilation.md) compiler option is set. Otherwise, undefined.  \n  \n    ```cpp  \n    // clr_ver.cpp  \n    // compile with: /clr  \n    using namespace System;  \n    int main() {  \n       Console::WriteLine(__CLR_VER);  \n    }  \n    ```  \n  \n-   **_CONTROL_FLOW_GUARD** Defined as 1 when the [/guard:cf (Enable Control Flow Guard)](../build/reference/guard-enable-control-flow-guard.md) compiler option is set. Otherwise, undefined.  \n  \n-   **__COUNTER\\_\\_** Expands to an integer literal that starts at 0 and is incremented by 1 every time it is used in a source file or included headers of the source file. **__COUNTER\\_\\_** remembers its state when you use precompiled headers. This macro is always defined.  \n  \n     This example uses `__COUNTER__` to assign unique identifiers to three different objects of the same type. The `exampleClass` constructor takes an integer as a parameter. In `main`, the application declares three objects of type `exampleClass`, using `__COUNTER__` as the unique identifier parameter:  \n  \n    ```cpp  \n    // macro__COUNTER__.cpp  \n    // Demonstration of __COUNTER__, assigns unique identifiers to  \n    // different objects of the same type.  \n    // Compile by using: cl /EHsc /W4 macro__COUNTER__.cpp  \n    #include <stdio.h>  \n  \n    class exampleClass {  \n        int m_nID;  \n    public:  \n        // initialize object with a read-only unique ID  \n        exampleClass(int nID) : m_nID(nID) {}  \n        int GetID(void) { return m_nID; }  \n    };  \n  \n    int main()  \n    {  \n        // __COUNTER__ is initially defined as 0  \n        exampleClass e1(__COUNTER__);  \n  \n        // On the second reference, __COUNTER__ is now defined as 1  \n        exampleClass e2(__COUNTER__);  \n  \n        // __COUNTER__ is now defined as 2  \n        exampleClass e3(__COUNTER__);  \n  \n        printf(\"e1 ID: %i\\n\", e1.GetID());  \n        printf(\"e2 ID: %i\\n\", e2.GetID());  \n        printf(\"e3 ID: %i\\n\", e3.GetID());  \n  \n        // Output  \n        // ------------------------------  \n        // e1 ID: 0  \n        // e2 ID: 1  \n        // e3 ID: 2  \n  \n        return 0;  \n    }  \n    ```  \n  \n-   **__cplusplus_cli** Defined as the integer literal value 200406 when compiled as C++ and the [/clr](../build/reference/clr-common-language-runtime-compilation.md), [/clr:pure](../build/reference/clr-common-language-runtime-compilation.md), or [/clr:safe](../build/reference/clr-common-language-runtime-compilation.md) compiler option is set. Otherwise, undefined. When defined, **__cplusplus_cli** is in effect throughout the translation unit.  \n  \n    ```cpp  \n    // cplusplus_cli.cpp  \n    // compile by using /clr  \n    #include \"stdio.h\"  \n    int main() {  \n       #ifdef __cplusplus_cli  \n          printf(\"%d\\n\", __cplusplus_cli);  \n       #else  \n          printf(\"not defined\\n\");  \n       #endif  \n    }  \n    ```  \n  \n-   **__cplusplus_winrt** Defined as the integer literal value 201009 when compiled as C++ and the [/ZW (Windows Runtime Compilation)](../build/reference/zw-windows-runtime-compilation.md) compiler option is set. Otherwise, undefined.  \n  \n-   **_CPPRTTI** Defined as 1 if the [/GR (Enable Run-Time Type Information)](../build/reference/gr-enable-run-time-type-information.md) compiler option is set. Otherwise, undefined.  \n  \n-   **_CPPUNWIND** Defined as 1 if one or more of the [/GX (Enable Exception Handling)](../build/reference/gx-enable-exception-handling.md), [/clr (Common Language Runtime Compilation)](../build/reference/clr-common-language-runtime-compilation.md), or [/EH (Exception Handling Model)](../build/reference/eh-exception-handling-model.md) compiler options are set. Otherwise, undefined.  \n  \n-   **_DEBUG** Defined as 1 when the [/LDd](../build/reference/md-mt-ld-use-run-time-library.md), [/MDd](../build/reference/md-mt-ld-use-run-time-library.md), or [/MTd](../build/reference/md-mt-ld-use-run-time-library.md) compiler option is set. Otherwise, undefined.  \n  \n-   **_DLL** Defined as 1 when the [/MD](../build/reference/md-mt-ld-use-run-time-library.md) or [/MDd](../build/reference/md-mt-ld-use-run-time-library.md) (Multithreaded DLL) compiler option is set. Otherwise, undefined.  \n  \n-   **__FUNCDNAME\\_\\_** Defined as a string literal that contains the [decorated name](../build/reference/decorated-names.md) of the enclosing function. The macro is defined only within a function. The **__FUNCDNAME\\_\\_** macro is not expanded if you use the [/EP](../build/reference/ep-preprocess-to-stdout-without-hash-line-directives.md) or [/P](../build/reference/p-preprocess-to-a-file.md) compiler option.  \n  \n     This example uses the `__FUNCDNAME__`, `__FUNCSIG__`, and `__FUNCTION__` macros to display function information.  \n  \n     [!code-cpp[NVC_Predefined_Macros_Examples#1](../preprocessor/codesnippet/CPP/predefined-macros_1.cpp)]  \n  \n-   **__FUNCSIG\\_\\_** Defined as a string literal that contains the signature of the enclosing function. The macro is defined only within a function. The **__FUNCSIG\\_\\_** macro is not expanded if you use the [/EP](../build/reference/ep-preprocess-to-stdout-without-hash-line-directives.md) or [/P](../build/reference/p-preprocess-to-a-file.md) compiler option. When compiled for a 64-bit target, the calling convention is `__cdecl` by default. For an example of usage, see the `__FUNCDNAME__` macro.  \n  \n-   **__FUNCTION\\_\\_** Defined as a string literal that contains the undecorated name of the enclosing function. The macro is defined only within a function. The **__FUNCTION\\_\\_** macro is not expanded if you use the [/EP](../build/reference/ep-preprocess-to-stdout-without-hash-line-directives.md) or [/P](../build/reference/p-preprocess-to-a-file.md) compiler option. For an example of usage, see the `__FUNCDNAME__` macro.  \n  \n-   **_INTEGRAL_MAX_BITS** Defined as the integer literal value 64, the maximum size (in bits) for a non-vector integral type. This macro is always defined.  \n  \n    ```cpp  \n    // integral_max_bits.cpp  \n    #include <stdio.h>  \n    int main() {  \n       printf(\"%d\\n\", _INTEGRAL_MAX_BITS);  \n    }  \n    ```  \n  \n-   **__INTELLISENSE\\_\\_** Defined as 1 during an IntelliSense compiler pass in the Visual Studio IDE. Otherwise, undefined. You can use this macro to guard code the IntelliSense compiler does not understand, or use it to toggle between the build and IntelliSense compiler. For more information, see [Troubleshooting Tips for IntelliSense Slowness](https://blogs.msdn.microsoft.com/vcblog/2011/03/29/troubleshooting-tips-for-intellisense-slowness/).  \n  \n-   **_ISO_VOLATILE** Defined as 1 if the [/volatile:iso](../build/reference/volatile-volatile-keyword-interpretation.md) compiler option is set. Otherwise, undefined.  \n  \n-   **_KERNEL_MODE** Defined as 1 if the [/kernel (Create Kernel Mode Binary)](../build/reference/kernel-create-kernel-mode-binary.md) compiler option is set. Otherwise, undefined.  \n  \n-   **_M_AMD64** Defined as the integer literal value 100 for compilations that target x64 processors. Otherwise, undefined.  \n  \n-   **_M_ARM** Defined as the integer literal value 7 for compilations that target ARM processors. Otherwise, undefined.  \n  \n-   **_M_ARM_ARMV7VE** Defined as 1 when the [/arch:ARMv7VE](../build/reference/arch-arm.md) compiler option is set for compilations that target ARM processors. Otherwise, undefined.  \n  \n-   **_M_ARM_FP** Defined as an integer literal value that indicates which [/arch](../build/reference/arch-arm.md) compiler option was set, if the compilation target is an ARM processor. Otherwise, undefined.  \n  \n    -   In the range 30-39 if no **/arch** ARM option was specified, indicating the default architecture for ARM was set (`VFPv3`).  \n  \n    -   In the range 40-49 if **/arch:VFPv4** was set.  \n  \n    -   See [/arch (ARM)](../build/reference/arch-arm.md) for more information.  \n  \n-   **_M_ARM64** Defined as 1 for compilations that target 64-bit ARM processors. Otherwise, undefined.  \n  \n-   **_M_CEE** Defined as 001 if any [/clr (Common Language Runtime Compilation)](../build/reference/clr-common-language-runtime-compilation.md) compiler option is set. Otherwise, undefined.  \n  \n-   **_M_CEE_PURE** Defined as 001 if the [/clr:pure](../build/reference/clr-common-language-runtime-compilation.md) compiler option is set. Otherwise, undefined.  \n  \n-   **_M_CEE_SAFE** Defined as 001 if the [/clr:safe](../build/reference/clr-common-language-runtime-compilation.md) compiler option is set. Otherwise, undefined.  \n  \n-   **_M_FP_EXCEPT** Defined as 1 if the [/fp:except](../build/reference/fp-specify-floating-point-behavior.md) or [/fp:strict](../build/reference/fp-specify-floating-point-behavior.md) compiler option is set. Otherwise, undefined.  \n  \n-   **_M_FP_FAST** Defined as 1 if the [/fp:fast](../build/reference/fp-specify-floating-point-behavior.md) compiler option is set. Otherwise, undefined.  \n  \n-   **_M_FP_PRECISE** Defined as 1 if the [/fp:precise](../build/reference/fp-specify-floating-point-behavior.md) compiler option is set. Otherwise, undefined.  \n  \n-   **_M_FP_STRICT** Defined as 1 if the [/fp:strict](../build/reference/fp-specify-floating-point-behavior.md) compiler option is set. Otherwise, undefined.  \n  \n-   **_M_IX86** Defined as the integer literal value 600 for compilations that target x86 processors. This macro is not defined for x64 or ARM compilation targets.  \n  \n-   **_M_IX86_FP** Defined as an integer literal value that indicates the [/arch](../build/reference/arch-arm.md) compiler option that was set, or the default. This macro is always defined when the compilation target is an x86 processor. Otherwise, undefined. When defined, the value is:  \n  \n    -   0 if the **/arch:IA32** compiler option was set.  \n  \n    -   1 if the **/arch:SSE** compiler option was set.  \n  \n    -   2 if the **/arch:SSE2**, **/arch:AVX** or **/arch:AVX2** compiler option was set. This value is the default if an **/arch** compiler option was not specified. When **/arch:AVX** is specified, the macro **__AVX\\_\\_** is also defined. When **/arch:AVX2** is specified, both **__AVX\\_\\_** and **__AVX2\\_\\_** are also defined.  \n  \n    -   See [/arch (x86)](../build/reference/arch-x86.md) for more information.  \n  \n-   **_M_X64** Defined as the integer literal value 100 for compilations that target x64 processors. Otherwise, undefined.  \n  \n-   **_MANAGED** Defined as 1 when the [/clr](../build/reference/clr-common-language-runtime-compilation.md) compiler option is set. Otherwise, undefined.  \n  \n-   **_MSC_BUILD** Defined as an integer literal that contains the revision number element of the compiler's version number. The revision number is the fourth element of the period-delimited version number. For example, if the version number of the Visual C++ compiler is 15.00.20706.01, the **_MSC_BUILD** macro evaluates to 1. This macro is always defined.  \n  \n-   **_MSC_EXTENSIONS** Defined as 1 if the [/Ze (Enable Language Extensions)](../build/reference/za-ze-disable-language-extensions.md) compiler option is set, which is the default. Otherwise, undefined.  \n  \n-   **_MSC_FULL_VER** Defined as an integer literal that encodes the major, minor, and build number elements of the compiler's version number. The major number is the first element of the period-delimited version number, the minor number is the second element, and the build number is the third element. For example, if the version number of the Visual C++ compiler is 15.00.20706.01, the **_MSC_FULL_VER** macro evaluates to 150020706. Enter **cl /?** at the command line to view the compiler's version number. This macro is always defined.  \n  \n-   **_MSC_VER** Defined as an integer literal that encodes the major and minor number elements of the compiler's version number. The major number is the first element of the period-delimited version number and the minor number is the second element. For example, if the version number of the Visual C++ compiler is 17.00.51106.1, the **_MSC_VER** macro evaluates to 1700. Enter **cl /?** at the command line to view the compiler's version number. This macro is always defined.  \n  \n-   **_MSVC_LANG** Defined as an integer literal that specifies the C++ language standard targeted by the compiler. When compiled as C++, the macro is the integer literal value 201402 if the [/std:c++14](../build/reference/std-specify-language-standard-version.md) compiler option is set, or by default, and it is set to a higher, unspecified value when the [/std:c++latest](../build/reference/std-specify-language-standard-version.md) compiler option is set. Otherwise, the macro is undefined. The **_MSVC_LANG** macro and [/std (Specify Language Standard Version)](../build/reference/std-specify-language-standard-version.md) compiler options are available beginning in Visual Studio 2015 Update 3.  \n  \n-   **__MSVC_RUNTIME_CHECKS** Defined as 1 when one of the [/RTC](../build/reference/rtc-run-time-error-checks.md) compiler options is set. Otherwise, undefined.  \n  \n-   **_MT** Defined as 1 when [/MD or /MDd](../build/reference/md-mt-ld-use-run-time-library.md) (Multithreaded DLL) or [/MT or /MTd](../build/reference/md-mt-ld-use-run-time-library.md) (Multithreaded) is specified. Otherwise, undefined.  \n  \n-   **_NATIVE_WCHAR_T_DEFINED** Defined as 1 when the [/Zc:wchar_t](../build/reference/zc-wchar-t-wchar-t-is-native-type.md) compiler option is set. Otherwise, undefined.  \n  \n-   **_OPENMP** Defined as integer literal 200203, representing the date of the OpenMP specification implemented by Visual C++, if the [/openmp (Enable OpenMP 2.0 Support)](../build/reference/openmp-enable-openmp-2-0-support.md) compiler option is set. Otherwise, undefined.  \n  \n    ```cpp  \n    // _OPENMP_dir.cpp  \n    // compile with: /openmp   \n    #include <stdio.h>   \n    int main() {  \n       printf(\"%d\\n\", _OPENMP);  \n    }  \n    ```  \n  \n-   **_PREFAST\\_** Defined as 1 when the [/analyze](../build/reference/analyze-code-analysis.md) compiler option is set. Otherwise, undefined.  \n  \n-   **__TIMESTAMP\\_\\_** Defined as a string literal that contains the date and time of the last modification of the current source file, in the abbreviated, constant length form returned by the C Runtime Library [asctime](../c-runtime-library/reference/asctime-wasctime.md) function, for example, `Fri 19 Aug 13:32:58 2016`. This macro is always defined.  \n  \n-   **_VC_NODEFAULTLIB** Defined as 1 when the [/Zl (Omit Default Library Name)](../build/reference/zl-omit-default-library-name.md) compiler option is set. Otherwise, undefined.  \n  \n-   **_WCHAR_T_DEFINED** Defined as 1 when the default [/Zc:wchar_t](../build/reference/zc-wchar-t-wchar-t-is-native-type.md) compiler option is set. The **_WCHAR_T_DEFINED** macro is defined but has no value if the **/Zc:wchar_t-** compiler option is set, and `wchar_t` is defined in a system header file included in your project. Otherwise, undefined.  \n  \n-   **_WIN32** Defined as 1 when the compilation target is 32-bit ARM, 64-bit ARM, x86, or x64. Otherwise, undefined.  \n  \n-   **_WIN64** Defined as 1 when the compilation target is 64-bit ARM or x64. Otherwise, undefined.  \n  \n-   **_WINRT_DLL** Defined as 1 when compiled as C++ and both [/ZW (Windows Runtime Compilation)](../build/reference/zw-windows-runtime-compilation.md) and [/LD or /LDd](../build/reference/md-mt-ld-use-run-time-library.md) compiler options are set. Otherwise, undefined.  \n  \n Preprocessor macros used to determine the ATL or MFC library version are not predefined by the compiler. These macros are defined in the headers for the library, so they are undefined in preprocessor directives before the required header is included.  \n  \n-   **_ATL_VER** Defined in \\<atldef.h> as an integer literal that encodes the ATL version number.  \n  \n-   **_MFC_VER** Defined in \\<afxver_.h> as an integer literal that encodes the MFC version number.  \n  \n## See Also  \n [Macros (C/C++)](../preprocessor/macros-c-cpp.md)   \n [Preprocessor Operators](../preprocessor/preprocessor-operators.md)   \n [Preprocessor Directives](../preprocessor/preprocessor-directives.md)"}