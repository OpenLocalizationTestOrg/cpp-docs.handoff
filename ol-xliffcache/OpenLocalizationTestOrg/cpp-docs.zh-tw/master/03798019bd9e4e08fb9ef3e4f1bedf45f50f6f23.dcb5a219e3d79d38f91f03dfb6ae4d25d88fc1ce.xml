{"nodes":[{"pos":[12,68],"content":"hash_multimap::const_iterator (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"hash_multimap::const_iterator (STL-CLR) | Microsoft Docs","pos":[0,56]}]},{"content":"hash_multimap::const_iterator (STL/CLR)","pos":[669,708]},{"content":"The type of a constant iterator for the controlled sequence.","pos":[709,769]},{"content":"Syntax","pos":[778,784]},{"content":"Remarks","pos":[837,844]},{"pos":[848,982],"content":"The type describes an object of unspecified type <ph id=\"ph1\">`T2`</ph> that can serve as a constant bidirectional iterator for the controlled sequence.","source":"The type describes an object of unspecified type `T2` that can serve as a constant bidirectional iterator for the controlled sequence."},{"content":"Example","pos":[991,998]},{"content":"Requirements","pos":[1732,1744]},{"pos":[1748,1778],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/hash_map&gt;","source":"**Header:** \\<cliext/hash_map>"},{"pos":[1785,1806],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1815,1823]},{"content":"hash_multimap (STL/CLR)","pos":[1828,1851]},{"content":"hash_multimap::iterator (STL/CLR)","pos":[1894,1927]}],"content":"---\ntitle: \"hash_multimap::const_iterator (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::hash_multimap::const_iterator\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"const_iterator member [STL/CLR]\"\nms.assetid: 3d54185c-7d30-41e6-8837-92e62448bc8e\ncaps.latest.revision: 13\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# hash_multimap::const_iterator (STL/CLR)\nThe type of a constant iterator for the controlled sequence.  \n  \n## Syntax  \n  \n```  \ntypedef T2 const_iterator;  \n```  \n  \n## Remarks  \n The type describes an object of unspecified type `T2` that can serve as a constant bidirectional iterator for the controlled sequence.  \n  \n## Example  \n  \n```  \n// cliext_hash_multimap_const_iterator.cpp   \n// compile with: /clr   \n#include <cliext/hash_map>   \n  \ntypedef cliext::hash_multimap<wchar_t, int> Myhash_multimap;   \nint main()   \n    {   \n    Myhash_multimap c1;   \n    c1.insert(Myhash_multimap::make_value(L'a', 1));   \n    c1.insert(Myhash_multimap::make_value(L'b', 2));   \n    c1.insert(Myhash_multimap::make_value(L'c', 3));   \n  \n// display contents \" [a 1] [b 2] [c 3]\"   \n    Myhash_multimap::const_iterator cit = c1.begin();   \n    for (; cit != c1.end(); ++cit)   \n        System::Console::Write(\" [{0} {1}]\", cit->first, cit->second);   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n[a 1] [b 2] [c 3]  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/hash_map>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [hash_multimap (STL/CLR)](../dotnet/hash-multimap-stl-clr.md)   \n [hash_multimap::iterator (STL/CLR)](../dotnet/hash-multimap-iterator-stl-clr.md)"}