{"nodes":[{"pos":[12,56],"content":"Marshaling Global Functions | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Marshaling Global Functions | Microsoft Docs","pos":[0,44]}]},{"content":"Marshaling Global Functions","pos":[539,566]},{"content":"These functions provide support for marshaling and converting marshaling data into interface pointers.","pos":[567,669]},{"pos":[677,844],"content":"[!IMPORTANT]\n The functions listed in the following table cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)].","leadings":["","> "],"nodes":[{"content":"The functions listed in the following table cannot be used in applications that execute in the <ph id=\"ph1\">[!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]</ph>.","pos":[14,165],"source":" The functions listed in the following table cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]."}]},{"content":"AtlFreeMarshalStream","pos":[866,886]},{"pos":[911,963],"content":"Releases the marshal data and the <ph id=\"ph1\">`IStream`</ph> pointer.","source":"Releases the marshal data and the `IStream` pointer."},{"content":"AtlMarshalPtrInProc","pos":[969,988]},{"content":"Creates a new stream object and marshals the specified interface pointer.","pos":[1012,1085]},{"content":"AtlUnmarshalPtr","pos":[1091,1106]},{"content":"Converts a stream's marshaling data into an interface pointer.","pos":[1126,1188]},{"pos":[1236,1256],"content":"AtlFreeMarshalStream"},{"content":"Releases the marshal data in the stream, then releases the stream pointer.","pos":[1260,1334]},{"content":"Parameters","pos":[1403,1413]},{"content":"[in] A pointer to the <ph id=\"ph1\">`IStream`</ph> interface on the stream used for marshaling.","pos":[1430,1506],"source":" [in] A pointer to the `IStream` interface on the stream used for marshaling."},{"content":"Example","pos":[1516,1523]},{"pos":[1528,1592],"content":"See the example for <bpt id=\"p1\">[</bpt>AtlMarshalPtrInProc<ept id=\"p1\">](#atlmarshalptrinproc)</ept>.","source":"See the example for [AtlMarshalPtrInProc](#atlmarshalptrinproc)."},{"pos":[1638,1657],"content":"AtlMarshalPtrInProc"},{"content":"Creates a new stream object, writes the CLSID of the proxy to the stream, and marshals the specified interface pointer by writing the data needed to initialize the proxy into the stream.","pos":[1661,1847]},{"content":"Parameters","pos":[1964,1974]},{"content":"pUnk","pos":[1979,1983]},{"content":"[in] A pointer to the interface to be marshaled.","pos":[1988,2036]},{"content":"[in] The GUID of the interface being marshaled.","pos":[2052,2099]},{"content":"[out] A pointer to the <ph id=\"ph1\">`IStream`</ph> interface on the new stream object used for marshaling.","pos":[2120,2208],"source":" [out] A pointer to the `IStream` interface on the new stream object used for marshaling."},{"content":"Return Value","pos":[2218,2230]},{"content":"A standard HRESULT value.","pos":[2234,2259]},{"content":"Remarks","pos":[2269,2276]},{"content":"The <bpt id=\"p1\">**</bpt>MSHLFLAGS_TABLESTRONG<ept id=\"p1\">**</ept> flag is set so the pointer can be marshaled to multiple streams.","pos":[2280,2374],"source":"The **MSHLFLAGS_TABLESTRONG** flag is set so the pointer can be marshaled to multiple streams."},{"content":"The pointer can also be unmarshaled multiple times.","pos":[2375,2426]},{"content":"If marshaling fails, the stream pointer is released.","pos":[2433,2485]},{"pos":[2514,2568],"content":"can only be used on a pointer to an in-process object."},{"content":"Example","pos":[2578,2585]},{"pos":[2600,2614],"content":"NVC_ATL_COM#50"},{"pos":[2719,2734],"content":"AtlUnmarshalPtr"},{"content":"Converts the stream's marshaling data into an interface pointer that can be used by the client.","pos":[2738,2833]},{"content":"Parameters","pos":[2947,2957]},{"content":"[in] A pointer to the stream being unmarshaled.","pos":[2974,3021]},{"content":"[in] The GUID of the interface being unmarshaled.","pos":[3037,3086]},{"content":"[out] A pointer to the unmarshaled interface.","pos":[3104,3149]},{"content":"Return Value","pos":[3159,3171]},{"content":"A standard HRESULT value.","pos":[3175,3200]},{"content":"Example","pos":[3210,3217]},{"pos":[3222,3286],"content":"See the example for <bpt id=\"p1\">[</bpt>AtlMarshalPtrInProc<ept id=\"p1\">](#atlmarshalptrinproc)</ept>.","source":"See the example for [AtlMarshalPtrInProc](#atlmarshalptrinproc)."},{"content":"See Also","pos":[3295,3303]},{"content":"Functions","pos":[3308,3317]}],"content":"---\ntitle: \"Marshaling Global Functions | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\ndev_langs: \n  - \"C++\"\nms.assetid: 877100b5-6ad9-44c5-a2e0-09414f1720d0\ncaps.latest.revision: 19\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Marshaling Global Functions\nThese functions provide support for marshaling and converting marshaling data into interface pointers.  \n  \n> [!IMPORTANT]\n>  The functions listed in the following table cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)].  \n  \n|||  \n|-|-|  \n|[AtlFreeMarshalStream](#atlfreemarshalstream)|Releases the marshal data and the `IStream` pointer.|  \n|[AtlMarshalPtrInProc](#atlmarshalptrinproc)|Creates a new stream object and marshals the specified interface pointer.|  \n|[AtlUnmarshalPtr](#atlunmarshalptr)|Converts a stream's marshaling data into an interface pointer.|  \n  \n##  <a name=\"atlfreemarshalstream\"></a>  AtlFreeMarshalStream  \n Releases the marshal data in the stream, then releases the stream pointer.  \n\n```\nHRESULT AtlFreeMarshalStream(IStream* pStream);\n```  \n  \n### Parameters  \n `pStream`  \n [in] A pointer to the `IStream` interface on the stream used for marshaling.  \n  \n### Example  \n  See the example for [AtlMarshalPtrInProc](#atlmarshalptrinproc).  \n  \n##  <a name=\"atlmarshalptrinproc\"></a>  AtlMarshalPtrInProc  \n Creates a new stream object, writes the CLSID of the proxy to the stream, and marshals the specified interface pointer by writing the data needed to initialize the proxy into the stream.  \n  \n```\nHRESULT AtlMarshalPtrInProc(\n    IUnknown* pUnk,\n    const IID& iid,\n    IStream** ppStream);\n```  \n  \n### Parameters  \n *pUnk*  \n [in] A pointer to the interface to be marshaled.  \n  \n `iid`  \n [in] The GUID of the interface being marshaled.  \n  \n `ppStream`  \n [out] A pointer to the `IStream` interface on the new stream object used for marshaling.  \n  \n### Return Value  \n A standard HRESULT value.  \n  \n### Remarks  \n The **MSHLFLAGS_TABLESTRONG** flag is set so the pointer can be marshaled to multiple streams. The pointer can also be unmarshaled multiple times.  \n  \n If marshaling fails, the stream pointer is released.  \n  \n `AtlMarshalPtrInProc` can only be used on a pointer to an in-process object.  \n  \n### Example  \n [!code-cpp[NVC_ATL_COM#50](../../atl/codesnippet/cpp/marshaling-global-functions_1.cpp)]  \n  \n##  <a name=\"atlunmarshalptr\"></a>  AtlUnmarshalPtr  \n Converts the stream's marshaling data into an interface pointer that can be used by the client.  \n   \n```\nHRESULT AtlUnmarshalPtr(\n    IStream* pStream,\n    const IID& iid,\n    IUnknown** ppUnk);\n```  \n  \n### Parameters  \n `pStream`  \n [in] A pointer to the stream being unmarshaled.  \n  \n `iid`  \n [in] The GUID of the interface being unmarshaled.  \n  \n `ppUnk`  \n [out] A pointer to the unmarshaled interface.  \n  \n### Return Value  \n A standard HRESULT value.  \n  \n### Example  \n  See the example for [AtlMarshalPtrInProc](#atlmarshalptrinproc).  \n  \n## See Also  \n [Functions](../../atl/reference/atl-functions.md)\n"}