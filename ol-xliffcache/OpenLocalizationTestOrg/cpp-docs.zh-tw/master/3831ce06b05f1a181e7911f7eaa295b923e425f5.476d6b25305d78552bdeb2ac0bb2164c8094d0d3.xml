{"nodes":[{"pos":[12,48],"content":"_bstr_t::GetAddress | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_bstr_t::GetAddress | Microsoft Docs","pos":[0,36]}]},{"content":"_bstr_t::GetAddress","pos":[625,644]},{"content":"Microsoft Specific","pos":[647,665]},{"content":"Frees any existing string and returns the address of a newly allocated string.","pos":[674,752]},{"content":"Syntax","pos":[761,767]},{"content":"Return Value","pos":[820,832]},{"pos":[836,885],"content":"A pointer to the <ph id=\"ph1\">`BSTR`</ph> wrapped by the <ph id=\"ph2\">`_bstr_t`</ph>.","source":"A pointer to the `BSTR` wrapped by the `_bstr_t`."},{"content":"Remarks","pos":[894,901]},{"content":"affects all <ph id=\"ph1\">`_bstr_t`</ph> objects that share a <ph id=\"ph2\">`BSTR`</ph>.","pos":[918,968],"source":" affects all `_bstr_t` objects that share a `BSTR`."},{"content":"More than one <ph id=\"ph1\">`_bstr_t`</ph> can share a <ph id=\"ph2\">`BSTR`</ph> through the use of the copy constructor and and <ph id=\"ph3\">`operator=`</ph>.","pos":[969,1072],"source":" More than one `_bstr_t` can share a `BSTR` through the use of the copy constructor and and `operator=`."},{"content":"Example","pos":[1081,1088]},{"pos":[1092,1172],"content":"See <bpt id=\"p1\">[</bpt>_bstr_t::Assign<ept id=\"p1\">](../cpp/bstr-t-assign.md)</ept> for a example using <ph id=\"ph1\">`GetAddress`</ph>.","source":"See [_bstr_t::Assign](../cpp/bstr-t-assign.md) for a example using `GetAddress`."},{"content":"END Microsoft Specific","pos":[1181,1203]},{"content":"See Also","pos":[1214,1222]},{"content":"_bstr_t Class","pos":[1227,1240]}],"content":"---\ntitle: \"_bstr_t::GetAddress | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"_bstr_t::GetAddress\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"GetAddress method\"\nms.assetid: 09bc9180-867e-4ee5-b22a-8339dc663142\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _bstr_t::GetAddress\n**Microsoft Specific**  \n  \n Frees any existing string and returns the address of a newly allocated string.  \n  \n## Syntax  \n  \n```  \n  \nBSTR* GetAddress( );  \n  \n```  \n  \n## Return Value  \n A pointer to the `BSTR` wrapped by the `_bstr_t`.  \n  \n## Remarks  \n `GetAddress` affects all `_bstr_t` objects that share a `BSTR`. More than one `_bstr_t` can share a `BSTR` through the use of the copy constructor and and `operator=`.  \n  \n## Example  \n See [_bstr_t::Assign](../cpp/bstr-t-assign.md) for a example using `GetAddress`.  \n  \n **END Microsoft Specific**  \n  \n## See Also  \n [_bstr_t Class](../cpp/bstr-t-class.md)"}