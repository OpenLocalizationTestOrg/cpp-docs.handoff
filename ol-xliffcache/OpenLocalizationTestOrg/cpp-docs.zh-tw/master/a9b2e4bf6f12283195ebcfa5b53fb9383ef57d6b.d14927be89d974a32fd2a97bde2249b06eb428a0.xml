{"nodes":[{"pos":[12,45],"content":"CSimpleRow Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CSimpleRow Class | Microsoft Docs","pos":[0,33]}]},{"content":"CSimpleRow Class","pos":[644,660]},{"pos":[661,795],"content":"Provides a default implementation for the row handle, which is used in the <bpt id=\"p1\">[</bpt>IRowsetImpl<ept id=\"p1\">](../../data/oledb/irowsetimpl-class.md)</ept> class.","source":"Provides a default implementation for the row handle, which is used in the [IRowsetImpl](../../data/oledb/irowsetimpl-class.md) class."},{"content":"Syntax","pos":[804,810]},{"content":"Members","pos":[853,860]},{"content":"Methods","pos":[870,877]},{"content":"AddRefRow","pos":[899,908]},{"content":"Adds a reference count to an existing row handle.","pos":[952,1001]},{"content":"Compare","pos":[1007,1014]},{"content":"Compares two rows to see if they refer to the same row instance.","pos":[1056,1120]},{"content":"CSimpleRow","pos":[1126,1136]},{"content":"The constructor.","pos":[1181,1197]},{"content":"ReleaseRow","pos":[1203,1213]},{"content":"Releases rows.","pos":[1258,1272]},{"content":"Data Members","pos":[1283,1295]},{"content":"m_dwRef","pos":[1317,1324]},{"content":"Reference count to an existing row handle.","pos":[1366,1408]},{"content":"m_iRowset","pos":[1414,1423]},{"content":"An index to the rowset representing the cursor.","pos":[1467,1514]},{"content":"Remarks","pos":[1524,1531]},{"content":"A row handle is logically a unique tag for a result row.","pos":[1535,1591]},{"content":"creates a new <ph id=\"ph1\">`CSimpleRow`</ph> for every row requested in <bpt id=\"p1\">[</bpt>IRowsetImpl::GetNextRows<ept id=\"p1\">](../../data/oledb/irowsetimpl-getnextrows.md)</ept>.","pos":[1606,1732],"source":" creates a new `CSimpleRow` for every row requested in [IRowsetImpl::GetNextRows](../../data/oledb/irowsetimpl-getnextrows.md)."},{"content":"can also be replaced with your own implementation of the row handle, as it is a default template argument to <ph id=\"ph1\">`IRowsetImpl`</ph>.","pos":[1746,1869],"source":" can also be replaced with your own implementation of the row handle, as it is a default template argument to `IRowsetImpl`."},{"content":"The only requirement to replacing this class is to have the replacement class provide a constructor that accepts a single parameter of type <bpt id=\"p1\">**</bpt>LONG<ept id=\"p1\">**</ept>.","pos":[1870,2019],"source":" The only requirement to replacing this class is to have the replacement class provide a constructor that accepts a single parameter of type **LONG**."},{"content":"Requirements","pos":[2028,2040]},{"pos":[2044,2063],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atldb.h","source":"**Header:** atldb.h"},{"content":"See Also","pos":[2072,2080]},{"content":"OLE DB Provider Templates","pos":[2085,2110]},{"content":"OLE DB Provider Template Architecture","pos":[2168,2205]},{"content":"IRowsetImpl Class","pos":[2271,2288]}],"content":"---\ntitle: \"CSimpleRow Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"CSimpleRow\"\n  - \"ATL::CSimpleRow\"\n  - \"ATL.CSimpleRow\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CSimpleRow class\"\nms.assetid: 06d9621d-60cc-4508-8b0c-528d1b1a809b\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CSimpleRow Class\nProvides a default implementation for the row handle, which is used in the [IRowsetImpl](../../data/oledb/irowsetimpl-class.md) class.  \n  \n## Syntax  \n  \n```  \nclass CSimpleRow  \n```  \n  \n## Members  \n  \n### Methods  \n  \n|||  \n|-|-|  \n|[AddRefRow](../../data/oledb/csimplerow-addrefrow.md)|Adds a reference count to an existing row handle.|  \n|[Compare](../../data/oledb/csimplerow-compare.md)|Compares two rows to see if they refer to the same row instance.|  \n|[CSimpleRow](../../data/oledb/csimplerow-csimplerow.md)|The constructor.|  \n|[ReleaseRow](../../data/oledb/csimplerow-releaserow.md)|Releases rows.|  \n  \n### Data Members  \n  \n|||  \n|-|-|  \n|[m_dwRef](../../data/oledb/csimplerow-m-dwref.md)|Reference count to an existing row handle.|  \n|[m_iRowset](../../data/oledb/csimplerow-m-irowset.md)|An index to the rowset representing the cursor.|  \n  \n## Remarks  \n A row handle is logically a unique tag for a result row. `IRowsetImpl` creates a new `CSimpleRow` for every row requested in [IRowsetImpl::GetNextRows](../../data/oledb/irowsetimpl-getnextrows.md). `CSimpleRow` can also be replaced with your own implementation of the row handle, as it is a default template argument to `IRowsetImpl`. The only requirement to replacing this class is to have the replacement class provide a constructor that accepts a single parameter of type **LONG**.  \n  \n## Requirements  \n **Header:** atldb.h  \n  \n## See Also  \n [OLE DB Provider Templates](../../data/oledb/ole-db-provider-templates-cpp.md)   \n [OLE DB Provider Template Architecture](../../data/oledb/ole-db-provider-template-architecture.md)   \n [IRowsetImpl Class](../../data/oledb/irowsetimpl-class.md)"}