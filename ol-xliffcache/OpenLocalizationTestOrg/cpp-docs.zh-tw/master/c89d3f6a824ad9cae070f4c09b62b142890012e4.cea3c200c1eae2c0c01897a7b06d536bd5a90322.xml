{"nodes":[{"pos":[12,72],"content":"Application Settings, Win 32 Project Wizard | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Application Settings, Win 32 Project Wizard | Microsoft Docs","pos":[0,60]}]},{"content":"Application Settings, Win 32 Project Wizard","pos":[700,743]},{"content":"Use this page of the wizard to set options for the Win32 project.","pos":[744,809]},{"content":"Application type","pos":[818,834]},{"content":"Creates the specified application type.","pos":[840,879]},{"content":"Option","pos":[886,892]},{"content":"Description","pos":[893,904]},{"content":"Console application","pos":[946,965]},{"content":"Creates a console application.","pos":[968,998]},{"content":"Console programs are developed with <bpt id=\"p1\">[</bpt>Console Functions<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/ms813137.aspx)</ept>, which provide character-mode support in console windows.","pos":[999,1168],"source":" Console programs are developed with [Console Functions](https://msdn.microsoft.com/en-us/library/ms813137.aspx), which provide character-mode support in console windows."},{"content":"The Visual C++ <bpt id=\"p1\">[</bpt>run-time libraries<ept id=\"p1\">](../c-runtime-library/c-run-time-library-reference.md)</ept> also provide output and input from console windows with standard I/O functions, such as <bpt id=\"p2\">**</bpt>printf_s()<ept id=\"p2\">**</ept> and <bpt id=\"p3\">**</bpt>scanf_s()<ept id=\"p3\">**</ept>.","pos":[1169,1380],"source":" The Visual C++ [run-time libraries](../c-runtime-library/c-run-time-library-reference.md) also provide output and input from console windows with standard I/O functions, such as **printf_s()** and **scanf_s()**."},{"content":"A console application has no graphical user interface.","pos":[1381,1435]},{"content":"It compiles into an .exe file and can be run as a stand-alone application from the command line.","pos":[1436,1532]},{"content":"You can add MFC and ATL support to a console application.","pos":[1545,1602]},{"content":"Windows application","pos":[1609,1628]},{"content":"Creates a Win32 program.","pos":[1631,1655]},{"content":"A Win32 program is an executable application (EXE) written in C or C++, using calls to the Win32 API to create a graphical user interface.","pos":[1656,1794]},{"content":"You cannot add MFC or ATL support to a Windows application.","pos":[1807,1866]},{"content":"DLL","pos":[1873,1876]},{"content":"Creates a Win32 dynamic-link library (DLL).","pos":[1879,1922]},{"content":"A Win32 DLL is a binary file, written in C or C++, that uses calls to the Win32 API rather than to MFC classes, and that acts as a shared library of functions that can be used simultaneously by multiple applications.","pos":[1923,2139]},{"content":"You cannot add MFC or ATL support to a DLL application.","pos":[2152,2207]},{"content":"You can indicate that the DLL exports symbols.","pos":[2208,2254]},{"content":"Static library","pos":[2261,2275]},{"content":"Creates a static library.","pos":[2278,2303]},{"content":"A static library is a file containing objects and their functions and data that links into your program when the executable file is built.","pos":[2304,2442]},{"content":"This topic explains how to create the starter files and <bpt id=\"p1\">[</bpt>project properties<ept id=\"p1\">](../ide/property-pages-visual-cpp.md)</ept> for a static library.","pos":[2443,2578],"source":" This topic explains how to create the starter files and [project properties](../ide/property-pages-visual-cpp.md) for a static library."},{"content":"A static library file provides the following benefits:","pos":[2579,2633]},{"content":"-   A Win32 static library is useful if the application you are working on makes calls to the Win32 API rather than to MFC classes.","pos":[2646,2777]},{"content":"-   The linking process is the same whether the rest of your Windows application is written in C or in C++.","pos":[2783,2890]},{"content":"-   You can link a static library to an MFC-based program or to a non-MFC program.","pos":[2896,2978]},{"content":"Additional options","pos":[2988,3006]},{"content":"Defines the support and options for the application, depending on its type.","pos":[3012,3087]},{"content":"Option","pos":[3094,3100]},{"content":"Description","pos":[3101,3112]},{"content":"Empty project","pos":[3154,3167]},{"content":"Specifies that the project files are blank.","pos":[3170,3213]},{"content":"If you have a set of source code files (such as .cpp files, header files, icons, toolbars, dialog boxes, and so on) and want to create a project in the Visual C++ development environment, you must first create a blank project, then add the files to the project.","pos":[3214,3475]},{"content":"This selection is unavailable for static library projects.","pos":[3488,3546]},{"content":"Export symbols","pos":[3553,3567]},{"content":"Specifies that the DLL project exports symbols.","pos":[3570,3617]},{"content":"Precompiled header","pos":[3624,3642]},{"content":"Specifies that the static library project uses a pre-compiled header.","pos":[3645,3714]},{"content":"Security Development Lifecycle (SDL) checks","pos":[3719,3762]},{"pos":[3763,3926],"content":"For more information about SDL, see <bpt id=\"p1\">[</bpt>Microsoft Security Development Lifecycle (SDL)  Process Guidance<ept id=\"p1\">](../build/reference/sdl-enable-additional-security-checks.md)</ept>","source":"For more information about SDL, see [Microsoft Security Development Lifecycle (SDL)  Process Guidance](../build/reference/sdl-enable-additional-security-checks.md)"},{"content":"Add support for","pos":[3936,3951]},{"content":"Add support for one of the libraries supplied in Visual C++.","pos":[3957,4017]},{"content":"Option","pos":[4024,4030]},{"content":"Description","pos":[4031,4042]},{"content":"ATL","pos":[4084,4087]},{"content":"Builds into the project support for classes in the Active Template Library (ATL).","pos":[4090,4171]},{"content":"For Win32 console applications only.","pos":[4172,4208]},{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept> This option does not indicate support for adding ATL objects using the ATL code wizards.","pos":[4221,4318],"source":"**Note** This option does not indicate support for adding ATL objects using the ATL code wizards."},{"content":"You can add ATL objects only to ATL projects or MFC projects with ATL support.","pos":[4319,4397]},{"content":"MFC","pos":[4404,4407]},{"content":"Builds into the project support for the Microsoft Foundation Class (MFC) Library.","pos":[4410,4491]},{"content":"For Win32 console applications and static libraries only.","pos":[4492,4549]},{"content":"See Also","pos":[4559,4567]},{"content":"Win32 Application Wizard","pos":[4572,4596]}],"content":"---\ntitle: \"Application Settings, Win 32 Project Wizard | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"vc.appwiz.win32.appset\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"application settings [C++]\"\n  - \"Win32 Project Wizard, application settings\"\nms.assetid: d6b818f0-9b23-4793-a6c5-df1c8c594bad\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Application Settings, Win 32 Project Wizard\nUse this page of the wizard to set options for the Win32 project.  \n  \n **Application type**  \n Creates the specified application type.  \n  \n|Option|Description|  \n|------------|-----------------|  \n|**Console application**|Creates a console application. Console programs are developed with [Console Functions](https://msdn.microsoft.com/en-us/library/ms813137.aspx), which provide character-mode support in console windows. The Visual C++ [run-time libraries](../c-runtime-library/c-run-time-library-reference.md) also provide output and input from console windows with standard I/O functions, such as **printf_s()** and **scanf_s()**. A console application has no graphical user interface. It compiles into an .exe file and can be run as a stand-alone application from the command line.<br /><br /> You can add MFC and ATL support to a console application.|  \n|**Windows application**|Creates a Win32 program. A Win32 program is an executable application (EXE) written in C or C++, using calls to the Win32 API to create a graphical user interface.<br /><br /> You cannot add MFC or ATL support to a Windows application.|  \n|**DLL**|Creates a Win32 dynamic-link library (DLL). A Win32 DLL is a binary file, written in C or C++, that uses calls to the Win32 API rather than to MFC classes, and that acts as a shared library of functions that can be used simultaneously by multiple applications.<br /><br /> You cannot add MFC or ATL support to a DLL application. You can indicate that the DLL exports symbols.|  \n|**Static library**|Creates a static library. A static library is a file containing objects and their functions and data that links into your program when the executable file is built. This topic explains how to create the starter files and [project properties](../ide/property-pages-visual-cpp.md) for a static library. A static library file provides the following benefits:<br /><br /> -   A Win32 static library is useful if the application you are working on makes calls to the Win32 API rather than to MFC classes.<br />-   The linking process is the same whether the rest of your Windows application is written in C or in C++.<br />-   You can link a static library to an MFC-based program or to a non-MFC program.|  \n  \n **Additional options**  \n Defines the support and options for the application, depending on its type.  \n  \n|Option|Description|  \n|------------|-----------------|  \n|**Empty project**|Specifies that the project files are blank. If you have a set of source code files (such as .cpp files, header files, icons, toolbars, dialog boxes, and so on) and want to create a project in the Visual C++ development environment, you must first create a blank project, then add the files to the project.<br /><br /> This selection is unavailable for static library projects.|  \n|**Export symbols**|Specifies that the DLL project exports symbols.|  \n|**Precompiled header**|Specifies that the static library project uses a pre-compiled header.|  \n|Security Development Lifecycle (SDL) checks|For more information about SDL, see [Microsoft Security Development Lifecycle (SDL)  Process Guidance](../build/reference/sdl-enable-additional-security-checks.md)|  \n  \n **Add support for**  \n Add support for one of the libraries supplied in Visual C++.  \n  \n|Option|Description|  \n|------------|-----------------|  \n|**ATL**|Builds into the project support for classes in the Active Template Library (ATL). For Win32 console applications only.<br /><br /> **Note** This option does not indicate support for adding ATL objects using the ATL code wizards. You can add ATL objects only to ATL projects or MFC projects with ATL support.|  \n|**MFC**|Builds into the project support for the Microsoft Foundation Class (MFC) Library. For Win32 console applications and static libraries only.|  \n  \n## See Also  \n [Win32 Application Wizard](../windows/win32-application-wizard.md)   \n"}