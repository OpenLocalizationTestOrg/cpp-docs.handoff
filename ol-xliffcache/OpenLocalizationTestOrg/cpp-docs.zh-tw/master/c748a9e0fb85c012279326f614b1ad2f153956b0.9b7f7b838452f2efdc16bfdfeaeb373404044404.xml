{"nodes":[{"pos":[12,69],"content":"-sdl (Enable Additional Security Checks) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"-sdl (Enable Additional Security Checks) | Microsoft Docs","pos":[0,57]}]},{"content":"/sdl (Enable Additional Security Checks)","pos":[606,646]},{"content":"Adds recommended Security Development Lifecycle (SDL) checks.","pos":[647,708]},{"content":"These checks include extra security-relevant warnings as errors, and additional secure code-generation features.","pos":[709,821]},{"content":"Syntax","pos":[830,836]},{"content":"Remarks","pos":[870,877]},{"content":"<bpt id=\"p1\">**</bpt>/sdl<ept id=\"p1\">**</ept> enables a superset of the baseline security checks provided by <bpt id=\"p2\">[</bpt>/GS<ept id=\"p2\">](../../build/reference/gs-buffer-security-check.md)</ept> and overrides <bpt id=\"p3\">**</bpt>/GS-<ept id=\"p3\">**</ept>.","pos":[881,1033],"source":"**/sdl** enables a superset of the baseline security checks provided by [/GS](../../build/reference/gs-buffer-security-check.md) and overrides **/GS-**."},{"content":"By default, <bpt id=\"p1\">**</bpt>/sdl<ept id=\"p1\">**</ept> is off.","pos":[1034,1062],"source":" By default, **/sdl** is off."},{"content":"<bpt id=\"p1\">**</bpt>/sdl-<ept id=\"p1\">**</ept> disables the additional security checks.","pos":[1063,1113],"source":"**/sdl-** disables the additional security checks."},{"content":"Compile-time Checks","pos":[1122,1141]},{"pos":[1145,1187],"content":"<bpt id=\"p1\">**</bpt>/sdl<ept id=\"p1\">**</ept> enables these warnings as errors:","source":"**/sdl** enables these warnings as errors:"},{"content":"Warning enabled by /sdl","pos":[1194,1217]},{"content":"Equivalent command-line switch","pos":[1218,1248]},{"content":"Description","pos":[1249,1260]},{"content":"C4146","pos":[1357,1362]},{"content":"/we4146","pos":[1438,1445]},{"content":"A unary minus operator was applied to an unsigned type, resulting in an unsigned result.","pos":[1446,1534]},{"content":"C4308","pos":[1540,1545]},{"content":"/we4308","pos":[1621,1628]},{"content":"A negative integral constant converted to unsigned type, resulting in a possibly meaningless result.","pos":[1629,1729]},{"content":"C4532","pos":[1735,1740]},{"content":"/we4532","pos":[1816,1823]},{"pos":[1824,1954],"content":"Use of <ph id=\"ph1\">`continue`</ph>, <ph id=\"ph2\">`break`</ph> or <ph id=\"ph3\">`goto`</ph> keywords in a <ph id=\"ph4\">`__finally`/`finally`</ph> block has undefined behavior during abnormal termination.","source":"Use of `continue`, `break` or `goto` keywords in a `__finally`/`finally` block has undefined behavior during abnormal termination."},{"content":"C4533","pos":[1960,1965]},{"content":"/we4533","pos":[2041,2048]},{"content":"Code initializing a variable will not be executed.","pos":[2049,2099]},{"content":"C4700","pos":[2105,2110]},{"content":"/we4700","pos":[2198,2205]},{"content":"Use of an uninitialized local variable.","pos":[2206,2245]},{"content":"C4703","pos":[2251,2256]},{"content":"/we4703","pos":[2332,2339]},{"content":"Use of a potentially uninitialized local pointer variable.","pos":[2340,2398]},{"content":"C4789","pos":[2404,2409]},{"content":"/we4789","pos":[2485,2492]},{"content":"Buffer overrun when specific C run-time (CRT) functions are used.","pos":[2493,2558]},{"content":"C4995","pos":[2564,2569]},{"content":"/we4995","pos":[2645,2652]},{"pos":[2653,2743],"content":"Use of a function marked with pragma <bpt id=\"p1\">[</bpt>deprecated<ept id=\"p1\">](../../preprocessor/deprecated-c-cpp.md)</ept>.","source":"Use of a function marked with pragma [deprecated](../../preprocessor/deprecated-c-cpp.md)."},{"content":"C4996","pos":[2749,2754]},{"content":"/we4996","pos":[2830,2837]},{"pos":[2838,2908],"content":"Use of a function marked as <bpt id=\"p1\">[</bpt>deprecated<ept id=\"p1\">](../../cpp/deprecated-cpp.md)</ept>.","source":"Use of a function marked as [deprecated](../../cpp/deprecated-cpp.md)."},{"content":"Runtime checks","pos":[2918,2932]},{"pos":[2936,3026],"content":"When <bpt id=\"p1\">**</bpt>/sdl<ept id=\"p1\">**</ept> is enabled, the compiler generates code to perform these checks at run time:","source":"When **/sdl** is enabled, the compiler generates code to perform these checks at run time:"},{"pos":[3036,3171],"content":"Enables the strict mode of <bpt id=\"p1\">**</bpt>/GS<ept id=\"p1\">**</ept> run-time buffer overrun detection, equivalent to compiling with <ph id=\"ph1\">`#pragma strict_gs_check(push, on)`</ph>.","source":"Enables the strict mode of **/GS** run-time buffer overrun detection, equivalent to compiling with `#pragma strict_gs_check(push, on)`."},{"content":"Performs limited pointer sanitization.","pos":[3181,3219]},{"content":"In expressions that do not involve dereferences and in types that have no user-defined destructor, pointer references are set to a non-valid address after a call to <ph id=\"ph1\">`delete`</ph>.","pos":[3220,3394],"source":" In expressions that do not involve dereferences and in types that have no user-defined destructor, pointer references are set to a non-valid address after a call to `delete`."},{"content":"This helps to prevent the reuse of stale pointer references.","pos":[3395,3455]},{"content":"Performs class member initialization.","pos":[3465,3502]},{"content":"Automatically initializes all class members to zero on object instantiation (before the constructor runs).","pos":[3503,3609]},{"content":"This helps prevent the use of uninitialized data associated with class members that the constructor does not explicitly initialize.","pos":[3610,3741]},{"content":"Remarks","pos":[3750,3757]},{"pos":[3761,3901],"content":"For more information, see <bpt id=\"p1\">[</bpt>Warnings, /sdl, and improving uninitialized variable detection<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?LinkId=331012)</ept>.","source":"For more information, see [Warnings, /sdl, and improving uninitialized variable detection](http://go.microsoft.com/fwlink/p/?LinkId=331012)."},{"content":"To set this compiler option in the Visual Studio development environment","pos":[3912,3984]},{"content":"Open the project's <bpt id=\"p1\">**</bpt>Property Pages<ept id=\"p1\">**</ept> dialog box.","pos":[3994,4043],"source":"Open the project's **Property Pages** dialog box."},{"content":"For details, see <bpt id=\"p1\">[</bpt>Working with Project Properties<ept id=\"p1\">](../../ide/working-with-project-properties.md)</ept>.","pos":[4044,4141],"source":" For details, see [Working with Project Properties](../../ide/working-with-project-properties.md)."},{"pos":[4151,4179],"content":"Select the <bpt id=\"p1\">**</bpt>C/C++<ept id=\"p1\">**</ept> folder.","source":"Select the **C/C++** folder."},{"pos":[4189,4271],"content":"On the <bpt id=\"p1\">**</bpt>General<ept id=\"p1\">**</ept> page, select the option from the <bpt id=\"p2\">**</bpt>SDL checks<ept id=\"p2\">**</ept> drop-down list.","source":"On the **General** page, select the option from the **SDL checks** drop-down list."},{"content":"See Also","pos":[4280,4288]},{"content":"Compiler Options","pos":[4293,4309]},{"content":"Setting Compiler Options","pos":[4359,4383]}],"content":"---\ntitle: \"-sdl (Enable Additional Security Checks) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"VC.Project.VCCLCompilerTool.SDLCheck\"\ndev_langs: \n  - \"C++\"\nms.assetid: 3dcf86a0-3169-4240-9f29-e04a9f535826\ncaps.latest.revision: 9\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# /sdl (Enable Additional Security Checks)\nAdds recommended Security Development Lifecycle (SDL) checks. These checks include extra security-relevant warnings as errors, and additional secure code-generation features.  \n  \n## Syntax  \n  \n```  \n/sdl[-]  \n```  \n  \n## Remarks  \n **/sdl** enables a superset of the baseline security checks provided by [/GS](../../build/reference/gs-buffer-security-check.md) and overrides **/GS-**. By default, **/sdl** is off. **/sdl-** disables the additional security checks.  \n  \n## Compile-time Checks  \n **/sdl** enables these warnings as errors:  \n  \n|Warning enabled by /sdl|Equivalent command-line switch|Description|  \n|------------------------------|-------------------------------------|-----------------|  \n|[C4146](../../error-messages/compiler-warnings/compiler-warning-level-2-c4146.md)|/we4146|A unary minus operator was applied to an unsigned type, resulting in an unsigned result.|  \n|[C4308](../../error-messages/compiler-warnings/compiler-warning-level-2-c4308.md)|/we4308|A negative integral constant converted to unsigned type, resulting in a possibly meaningless result.|  \n|[C4532](../../error-messages/compiler-warnings/compiler-warning-level-1-c4532.md)|/we4532|Use of `continue`, `break` or `goto` keywords in a `__finally`/`finally` block has undefined behavior during abnormal termination.|  \n|[C4533](../../error-messages/compiler-warnings/compiler-warning-level-1-c4533.md)|/we4533|Code initializing a variable will not be executed.|  \n|[C4700](../../error-messages/compiler-warnings/compiler-warning-level-1-and-level-4-c4700.md)|/we4700|Use of an uninitialized local variable.|  \n|[C4703](../../error-messages/compiler-warnings/compiler-warning-level-4-c4703.md)|/we4703|Use of a potentially uninitialized local pointer variable.|  \n|[C4789](../../error-messages/compiler-warnings/compiler-warning-level-1-c4789.md)|/we4789|Buffer overrun when specific C run-time (CRT) functions are used.|  \n|[C4995](../../error-messages/compiler-warnings/compiler-warning-level-3-c4995.md)|/we4995|Use of a function marked with pragma [deprecated](../../preprocessor/deprecated-c-cpp.md).|  \n|[C4996](../../error-messages/compiler-warnings/compiler-warning-level-3-c4996.md)|/we4996|Use of a function marked as [deprecated](../../cpp/deprecated-cpp.md).|  \n  \n## Runtime checks  \n When **/sdl** is enabled, the compiler generates code to perform these checks at run time:  \n  \n-   Enables the strict mode of **/GS** run-time buffer overrun detection, equivalent to compiling with `#pragma strict_gs_check(push, on)`.  \n  \n-   Performs limited pointer sanitization. In expressions that do not involve dereferences and in types that have no user-defined destructor, pointer references are set to a non-valid address after a call to `delete`. This helps to prevent the reuse of stale pointer references.  \n  \n-   Performs class member initialization. Automatically initializes all class members to zero on object instantiation (before the constructor runs). This helps prevent the use of uninitialized data associated with class members that the constructor does not explicitly initialize.  \n  \n## Remarks  \n For more information, see [Warnings, /sdl, and improving uninitialized variable detection](http://go.microsoft.com/fwlink/p/?LinkId=331012).  \n  \n#### To set this compiler option in the Visual Studio development environment  \n  \n1.  Open the project's **Property Pages** dialog box. For details, see [Working with Project Properties](../../ide/working-with-project-properties.md).  \n  \n2.  Select the **C/C++** folder.  \n  \n3.  On the **General** page, select the option from the **SDL checks** drop-down list.  \n  \n## See Also  \n [Compiler Options](../../build/reference/compiler-options.md)   \n [Setting Compiler Options](../../build/reference/setting-compiler-options.md)"}