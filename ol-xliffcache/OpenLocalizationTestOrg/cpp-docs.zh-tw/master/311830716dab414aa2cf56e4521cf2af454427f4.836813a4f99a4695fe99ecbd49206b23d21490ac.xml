{"nodes":[{"pos":[12,53],"content":"random_shuffle (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"random_shuffle (STL-CLR) | Microsoft Docs","pos":[0,41]}]},{"content":"random_shuffle (STL/CLR)","pos":[640,664]},{"content":"Rearranges a sequence of <ph id=\"ph1\">`N`</ph> elements in a range into one of <ph id=\"ph2\">`N`</ph>!","pos":[665,730],"source":"Rearranges a sequence of `N` elements in a range into one of `N`!"},{"content":"possible arrangements selected at random.","pos":[731,772]},{"content":"Syntax","pos":[781,787]},{"content":"Remarks","pos":[1012,1019]},{"content":"This function behaves the same as the STL function <ph id=\"ph1\">`random_shuffle`</ph>.","pos":[1023,1091],"source":"This function behaves the same as the STL function `random_shuffle`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>random_shuffle<ept id=\"p1\">](http://msdn.microsoft.com/Library/066a5fb1-9568-4e96-8ab9-854041d7f9d8)</ept>.","pos":[1092,1207],"source":" For more information, see [random_shuffle](http://msdn.microsoft.com/Library/066a5fb1-9568-4e96-8ab9-854041d7f9d8)."},{"content":"Requirements","pos":[1216,1228]},{"pos":[1232,1263],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/algorithm&gt;","source":"**Header:** \\<cliext/algorithm>"},{"pos":[1270,1291],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1300,1308]},{"content":"algorithm (STL/CLR)","pos":[1313,1332]}],"content":"---\ntitle: \"random_shuffle (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::random_shuffle\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"random_shuffle function [STL/CLR]\"\nms.assetid: 0f9d93e2-f50f-40e6-bbe4-2ca3231a895e\ncaps.latest.revision: 4\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# random_shuffle (STL/CLR)\nRearranges a sequence of `N` elements in a range into one of `N`! possible arrangements selected at random.  \n  \n## Syntax  \n  \n```  \ntemplate<class _RanIt> inline  \n    void random_shuffle(_RanIt _First, _RanIt _Last);  \ntemplate<class _RanIt, class _Fn1> inline  \n    void random_shuffle(_RanIt _First, _RanIt _Last, _Fn1% _Func);  \n```  \n  \n## Remarks  \n This function behaves the same as the STL function `random_shuffle`. For more information, see [random_shuffle](http://msdn.microsoft.com/Library/066a5fb1-9568-4e96-8ab9-854041d7f9d8).  \n  \n## Requirements  \n **Header:** \\<cliext/algorithm>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [algorithm (STL/CLR)](../dotnet/algorithm-stl-clr.md)"}