{"nodes":[{"pos":[12,37],"content":"C Tokens | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"C Tokens | Microsoft Docs","pos":[0,25]}]},{"content":"C Tokens","pos":[584,592]},{"content":"In a C source program, the basic element recognized by the compiler is the \"token.\"","pos":[593,676]},{"content":"A token is source-program text that the compiler does not break down into component elements.","pos":[677,770]},{"content":"Syntax","pos":[779,785]},{"content":"<bpt id=\"p1\">*</bpt>token<ept id=\"p1\">*</ept>:","pos":[789,797],"source":"*token*:"},{"content":"keyword","pos":[802,809]},{"content":"identifier","pos":[818,828]},{"content":"constant","pos":[837,845]},{"content":"string-literal","pos":[854,868]},{"content":"operator","pos":[877,885]},{"content":"punctuator","pos":[894,904]},{"pos":[913,1069],"content":"[!NOTE]\n See the introduction to[C Language Syntax Summary](../c-language/c-language-syntax-summary.md) for an explanation of the ANSI syntax conventions.","leadings":["","> "],"nodes":[{"content":"See the introduction to<bpt id=\"p1\">[</bpt>C Language Syntax Summary<ept id=\"p1\">](../c-language/c-language-syntax-summary.md)</ept> for an explanation of the ANSI syntax conventions.","pos":[9,154],"source":" See the introduction to[C Language Syntax Summary](../c-language/c-language-syntax-summary.md) for an explanation of the ANSI syntax conventions."}]},{"content":"The keywords, identifiers, constants, string literals, and operators described in this section are examples of tokens.","pos":[1076,1194]},{"content":"Punctuation characters such as brackets (<bpt id=\"p1\">**</bpt>[ ]<ept id=\"p1\">**</ept>), braces (<bpt id=\"p2\">**</bpt>{ }<ept id=\"p2\">**</ept>), parentheses ( <bpt id=\"p3\">**</bpt>( )<ept id=\"p3\">**</ept> ), and commas (<bpt id=\"p4\">**</bpt>,<ept id=\"p4\">**</ept>) are also tokens.","pos":[1195,1324],"source":" Punctuation characters such as brackets (**[ ]**), braces (**{ }**), parentheses ( **( )** ), and commas (**,**) are also tokens."},{"content":"See Also","pos":[1333,1341]},{"content":"Elements of C","pos":[1346,1359]}],"content":"---\ntitle: \"C Tokens | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"tokens\"\n  - \"translation units\"\nms.assetid: 05e5f6f1-b8ea-4f74-af17-c0b9b5dbd3b5\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# C Tokens\nIn a C source program, the basic element recognized by the compiler is the \"token.\" A token is source-program text that the compiler does not break down into component elements.  \n  \n## Syntax  \n *token*:  \n *keyword*  \n  \n *identifier*  \n  \n *constant*  \n  \n *string-literal*  \n  \n *operator*  \n  \n *punctuator*  \n  \n> [!NOTE]\n>  See the introduction to[C Language Syntax Summary](../c-language/c-language-syntax-summary.md) for an explanation of the ANSI syntax conventions.  \n  \n The keywords, identifiers, constants, string literals, and operators described in this section are examples of tokens. Punctuation characters such as brackets (**[ ]**), braces (**{ }**), parentheses ( **( )** ), and commas (**,**) are also tokens.  \n  \n## See Also  \n [Elements of C](../c-language/elements-of-c.md)"}