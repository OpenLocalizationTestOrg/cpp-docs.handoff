{"nodes":[{"pos":[12,46],"content":"Exception Classes | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Exception Classes | Microsoft Docs","pos":[0,34]}]},{"content":"Exception Classes","pos":[680,697]},{"content":"The class library provides an exception-handling mechanism based on class <ph id=\"ph1\">`CException`</ph>.","pos":[698,785],"source":"The class library provides an exception-handling mechanism based on class `CException`."},{"content":"The application framework uses exceptions in its code; you can also use them in yours.","pos":[786,872]},{"content":"For more information, see the article <bpt id=\"p1\">[</bpt>Exceptions<ept id=\"p1\">](../mfc/exception-handling-in-mfc.md)</ept>.","pos":[873,961],"source":" For more information, see the article [Exceptions](../mfc/exception-handling-in-mfc.md)."},{"content":"You can derive your own exception types from <ph id=\"ph1\">`CException`</ph>.","pos":[962,1020],"source":" You can derive your own exception types from `CException`."},{"content":"MFC provides an exception class from which you can derive your own exception as well as exception classes for all of the exceptions it supports.","pos":[1027,1171]},{"content":"CException","pos":[1179,1189]},{"content":"The base class for exceptions.","pos":[1232,1262]},{"content":"CArchiveException","pos":[1270,1287]},{"content":"An archive exception.","pos":[1337,1358]},{"content":"CDaoException","pos":[1366,1379]},{"content":"An exception resulting from a failure in a DAO database operation.","pos":[1425,1491]},{"content":"CDBException","pos":[1499,1511]},{"content":"An exception resulting from a failure in ODBC database processing.","pos":[1556,1622]},{"content":"CFileException","pos":[1630,1644]},{"content":"A file-oriented exception.","pos":[1691,1717]},{"content":"CMemoryException","pos":[1725,1741]},{"content":"An out-of-memory exception.","pos":[1790,1817]},{"content":"CNotSupportedException","pos":[1825,1847]},{"content":"An exception resulting from using an unsupported feature.","pos":[1902,1959]},{"content":"COleException","pos":[1967,1980]},{"content":"An exception resulting from a failure in OLE processing.","pos":[2026,2082]},{"content":"This class is used by both containers and servers.","pos":[2083,2133]},{"content":"COleDispatchException","pos":[2141,2162]},{"content":"An exception resulting from an error during automation.","pos":[2216,2271]},{"content":"Automation exceptions are thrown by automation servers and caught by automation clients.","pos":[2272,2360]},{"content":"CResourceException","pos":[2368,2386]},{"content":"An exception resulting from a failure to load a Windows resource.","pos":[2437,2502]},{"content":"CUserException","pos":[2510,2524]},{"content":"An exception used to stop a user-initiated operation.","pos":[2571,2624]},{"content":"Typically, the user has been notified of the problem before this exception is thrown.","pos":[2625,2710]},{"content":"See Also","pos":[2719,2727]},{"content":"Class Overview","pos":[2732,2746]}],"content":"---\ntitle: \"Exception Classes | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"vc.classes.exception\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"exception classes\"\n  - \"exception handling, exception classes\"\n  - \"MFC, exceptions\"\nms.assetid: 1a2caf12-b3e9-4189-86d2-bf7a595bf025\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Exception Classes\nThe class library provides an exception-handling mechanism based on class `CException`. The application framework uses exceptions in its code; you can also use them in yours. For more information, see the article [Exceptions](../mfc/exception-handling-in-mfc.md). You can derive your own exception types from `CException`.  \n  \n MFC provides an exception class from which you can derive your own exception as well as exception classes for all of the exceptions it supports.  \n  \n [CException](../mfc/reference/cexception-class.md)  \n The base class for exceptions.  \n  \n [CArchiveException](../mfc/reference/carchiveexception-class.md)  \n An archive exception.  \n  \n [CDaoException](../mfc/reference/cdaoexception-class.md)  \n An exception resulting from a failure in a DAO database operation.  \n  \n [CDBException](../mfc/reference/cdbexception-class.md)  \n An exception resulting from a failure in ODBC database processing.  \n  \n [CFileException](../mfc/reference/cfileexception-class.md)  \n A file-oriented exception.  \n  \n [CMemoryException](../mfc/reference/cmemoryexception-class.md)  \n An out-of-memory exception.  \n  \n [CNotSupportedException](../mfc/reference/cnotsupportedexception-class.md)  \n An exception resulting from using an unsupported feature.  \n  \n [COleException](../mfc/reference/coleexception-class.md)  \n An exception resulting from a failure in OLE processing. This class is used by both containers and servers.  \n  \n [COleDispatchException](../mfc/reference/coledispatchexception-class.md)  \n An exception resulting from an error during automation. Automation exceptions are thrown by automation servers and caught by automation clients.  \n  \n [CResourceException](../mfc/reference/cresourceexception-class.md)  \n An exception resulting from a failure to load a Windows resource.  \n  \n [CUserException](../mfc/reference/cuserexception-class.md)  \n An exception used to stop a user-initiated operation. Typically, the user has been notified of the problem before this exception is thrown.  \n  \n## See Also  \n [Class Overview](../mfc/class-library-overview.md)\n\n"}