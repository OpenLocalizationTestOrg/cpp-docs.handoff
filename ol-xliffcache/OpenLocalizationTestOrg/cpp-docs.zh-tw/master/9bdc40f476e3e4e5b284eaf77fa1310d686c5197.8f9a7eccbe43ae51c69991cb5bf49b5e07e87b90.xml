{"nodes":[{"pos":[12,45],"content":"mask_array Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"mask_array Class | Microsoft Docs","pos":[0,33]}]},{"content":"mask_array Class","pos":[702,718]},{"content":"An internal, auxiliary template class that supports objects that are subsets of parent valarrays, specified with a Boolean expression, by providing operations between the subset arrays.","pos":[719,904]},{"content":"Syntax","pos":[913,919]},{"content":"Remarks","pos":[934,941]},{"pos":[945,1277],"content":"The class describes an object that stores a reference to an object <bpt id=\"p1\">**</bpt>va<ept id=\"p1\">**</ept> of class <bpt id=\"p2\">[</bpt>valarray<ept id=\"p2\">](../standard-library/valarray-class.md)</ept><bpt id=\"p3\">**</bpt><ph id=\"ph1\">\\&lt;</ph>Type&gt;<ept id=\"p3\">**</ept>, along with an object <bpt id=\"p4\">**</bpt>ba<ept id=\"p4\">**</ept> of class <bpt id=\"p5\">[</bpt>valarray<ph id=\"ph2\">\\&lt;</ph>bool&gt;<ept id=\"p5\">](../standard-library/valarray-bool-class.md)</ept>, which describes the sequence of elements to select from the <bpt id=\"p6\">**</bpt>valarray<ph id=\"ph3\">\\&lt;</ph>Type&gt;<ept id=\"p6\">**</ept> object.","source":"The class describes an object that stores a reference to an object **va** of class [valarray](../standard-library/valarray-class.md)**\\<Type>**, along with an object **ba** of class [valarray\\<bool>](../standard-library/valarray-bool-class.md), which describes the sequence of elements to select from the **valarray\\<Type>** object."},{"content":"You construct a <bpt id=\"p1\">**</bpt>mask_array<ph id=\"ph1\">\\&lt;</ph>Type&gt;<ept id=\"p1\">**</ept> object only by writing an expression of the form <bpt id=\"p2\">[</bpt>va&amp;#91;ba&amp;#93;<ept id=\"p2\">](../standard-library/valarray-class.md#valarray__operator_at)</ept>.","pos":[1284,1449],"source":"You construct a **mask_array\\<Type>** object only by writing an expression of the form [va&#91;ba&#93;](../standard-library/valarray-class.md#valarray__operator_at)."},{"content":"The member functions of class mask_array then behave like the corresponding function signatures defined for <bpt id=\"p1\">**</bpt>valarray<ph id=\"ph1\">\\&lt;</ph>Type&gt;<ept id=\"p1\">**</ept>, except that only the sequence of selected elements is affected.","pos":[1450,1642],"source":" The member functions of class mask_array then behave like the corresponding function signatures defined for **valarray\\<Type>**, except that only the sequence of selected elements is affected."},{"content":"The sequence consists of at most <bpt id=\"p1\">**</bpt>ba.size<ept id=\"p1\">**</ept> elements.","pos":[1649,1703],"source":"The sequence consists of at most **ba.size** elements."},{"content":"An element <bpt id=\"p1\">*</bpt>J<ept id=\"p1\">*</ept> is included only if <bpt id=\"p2\">**</bpt>ba<ept id=\"p2\">**</ept>[ <bpt id=\"p3\">*</bpt>J<ept id=\"p3\">*</ept>] is true.","pos":[1704,1760],"source":" An element *J* is included only if **ba**[ *J*] is true."},{"content":"Thus, there are as many elements in the sequence as there are true elements in <bpt id=\"p1\">**</bpt>ba<ept id=\"p1\">**</ept>.","pos":[1761,1847],"source":" Thus, there are as many elements in the sequence as there are true elements in **ba**."},{"content":"If <ph id=\"ph1\">`I`</ph> is the index of the lowest true element in <bpt id=\"p1\">**</bpt>ba<ept id=\"p1\">**</ept>, then <bpt id=\"p2\">**</bpt>va<ept id=\"p2\">**</ept>[ <ph id=\"ph2\">`I`</ph>] is element zero in the selected sequence.","pos":[1848,1965],"source":" If `I` is the index of the lowest true element in **ba**, then **va**[ `I`] is element zero in the selected sequence."},{"content":"Example:","pos":[1974,1982]},{"content":"Output","pos":[2749,2755]},{"content":"Requirements","pos":[2911,2923]},{"pos":[2927,2950],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>valarray&gt;","source":"**Header:** \\<valarray>"},{"pos":[2957,2975],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"content":"See Also","pos":[2984,2992]},{"content":"Thread Safety in the C++ Standard Library","pos":[2997,3038]}],"content":"---\ntitle: \"mask_array Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std.mask_array\"\n  - \"mask_array\"\n  - \"std::mask_array\"\n  - \"valarray/std::mask_array\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"mask_array class\"\nms.assetid: c49bed6a-3000-4f39-bff6-cb9a453acb0b\ncaps.latest.revision: 20\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# mask_array Class\nAn internal, auxiliary template class that supports objects that are subsets of parent valarrays, specified with a Boolean expression, by providing operations between the subset arrays.  \n  \n## Syntax  \n  \n  \n  \n## Remarks  \n The class describes an object that stores a reference to an object **va** of class [valarray](../standard-library/valarray-class.md)**\\<Type>**, along with an object **ba** of class [valarray\\<bool>](../standard-library/valarray-bool-class.md), which describes the sequence of elements to select from the **valarray\\<Type>** object.  \n  \n You construct a **mask_array\\<Type>** object only by writing an expression of the form [va&#91;ba&#93;](../standard-library/valarray-class.md#valarray__operator_at). The member functions of class mask_array then behave like the corresponding function signatures defined for **valarray\\<Type>**, except that only the sequence of selected elements is affected.  \n  \n The sequence consists of at most **ba.size** elements. An element *J* is included only if **ba**[ *J*] is true. Thus, there are as many elements in the sequence as there are true elements in **ba**. If `I` is the index of the lowest true element in **ba**, then **va**[ `I`] is element zero in the selected sequence.  \n  \n## Example:  \n  \n```  \n// mask_array.cpp  \n// compile with: /EHsc  \n#include <valarray>  \n#include <iostream>  \n  \nint main( )  \n{  \n   using namespace std;  \n   int i;  \n  \n   valarray<int> va ( 10 );  \n   for ( i = 0 ; i < 10 ; i += 2 )  \n      va [ i ] =  i;  \n   for ( i = 1 ; i < 10 ; i += 2 )  \n      va [ i ] =  -1;  \n  \n   cout << \"The initial operand valarray is:  ( \";  \n      for ( i = 0 ; i < 10 ; i++ )  \n         cout << va [ i ] << \" \";  \n   cout << \").\" << endl;  \n  \n   // Use masked subsets to assign a value of 10  \n   // to all elements grrater than 3 in value  \n   va [va > 3 ] = 10;  \n   cout << \"The modified operand valarray is:  ( \";  \n      for ( i = 0 ; i < 10 ; i++ )  \n         cout << va [ i ] << \" \";  \n   cout << \").\" << endl;  \n}  \n```  \n  \n### Output  \n  \n```  \nThe initial operand valarray is:  (0 -1 2 -1 4 -1 6 -1 8 -1).  \nThe modified operand valarray is:  (0 -1 2 -1 10 -1 10 -1 10 -1).  \n```  \n  \n## Requirements  \n **Header:** \\<valarray>  \n  \n **Namespace:** std  \n  \n## See Also  \n [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)\n\n"}