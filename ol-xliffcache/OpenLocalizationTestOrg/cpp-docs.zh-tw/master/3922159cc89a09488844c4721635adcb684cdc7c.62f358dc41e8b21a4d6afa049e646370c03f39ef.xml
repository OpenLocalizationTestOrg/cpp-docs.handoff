{"nodes":[{"pos":[12,75],"content":"Details of ATL Support Added by the ATL Wizard | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Details of ATL Support Added by the ATL Wizard | Microsoft Docs","pos":[0,63]}]},{"content":"Details of ATL Support Added by the ATL Wizard","pos":[667,713]},{"pos":[714,965],"content":"When you <bpt id=\"p1\">[</bpt>add ATL support to an existing MFC executable or DLL<ept id=\"p1\">](../../mfc/reference/adding-atl-support-to-your-mfc-project.md)</ept>, Visual C++ makes the following modifications to the existing MFC project (in this example, the project is called <ph id=\"ph1\">`MFCEXE`</ph>):","source":"When you [add ATL support to an existing MFC executable or DLL](../../mfc/reference/adding-atl-support-to-your-mfc-project.md), Visual C++ makes the following modifications to the existing MFC project (in this example, the project is called `MFCEXE`):"},{"content":"Two new files (an .idl file and an .rgs file, used to register the server) are added.","pos":[975,1060]},{"content":"In the main application header and implementation files (Mfcexe.h and Mfcexe.cpp), a new class (derived from <bpt id=\"p1\">**</bpt>CAtlMFCModule<ept id=\"p1\">**</ept>) is added.","pos":[1070,1207],"source":"In the main application header and implementation files (Mfcexe.h and Mfcexe.cpp), a new class (derived from **CAtlMFCModule**) is added."},{"content":"In addition to the new class, code is added to <ph id=\"ph1\">`InitInstance`</ph> for registration.","pos":[1208,1287],"source":" In addition to the new class, code is added to `InitInstance` for registration."},{"content":"Code is also added to the <ph id=\"ph1\">`ExitInstance`</ph> function for revoking the class object.","pos":[1288,1368],"source":" Code is also added to the `ExitInstance` function for revoking the class object."},{"content":"In the header file, Finally, two new header files (Initguid.h and Mfcexe_i.c) are included in the implementation file, declaring and initializing the new GUIDs for the <bpt id=\"p1\">**</bpt>CAtlMFCModule<ept id=\"p1\">**</ept>-derived class.","pos":[1369,1569],"source":" In the header file, Finally, two new header files (Initguid.h and Mfcexe_i.c) are included in the implementation file, declaring and initializing the new GUIDs for the **CAtlMFCModule**-derived class."},{"content":"To register the server properly, an entry for the new .rgs file is added to the project's resource file.","pos":[1579,1683]},{"content":"Notes for DLL Projects","pos":[1692,1714]},{"content":"When you add ATL support to an MFC DLL project, you will see some differences.","pos":[1718,1796]},{"content":"Code is added to the <bpt id=\"p1\">**</bpt>DLLRegisterServer<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>DLLUnregisterServer<ept id=\"p2\">**</ept> functions for registering and unregistering the DLL.","pos":[1797,1920],"source":" Code is added to the **DLLRegisterServer** and **DLLUnregisterServer** functions for registering and unregistering the DLL."},{"content":"Code is also added to <bpt id=\"p1\">[</bpt>DllCanUnloadNow<ept id=\"p1\">](../../atl/reference/catldllmodulet-class.md#catldllmodulet__dllcanunloadnow)</ept> and <bpt id=\"p2\">[</bpt>DllGetClassObject<ept id=\"p2\">](../../atl/reference/catldllmodulet-class.md#catldllmodulet__dllgetclassobject)</ept>.","pos":[1921,2141],"source":" Code is also added to [DllCanUnloadNow](../../atl/reference/catldllmodulet-class.md#catldllmodulet__dllcanunloadnow) and [DllGetClassObject](../../atl/reference/catldllmodulet-class.md#catldllmodulet__dllgetclassobject)."},{"content":"See Also","pos":[2150,2158]},{"content":"ATL Support in an MFC Project","pos":[2163,2192]},{"content":"Adding Functionality with Code Wizards","pos":[2262,2300]},{"content":"Adding a Class","pos":[2364,2378]},{"content":"Adding a Member Function","pos":[2425,2449]},{"content":"Adding a Member Variable","pos":[2506,2530]},{"content":"Overriding a Virtual Function","pos":[2587,2616]},{"content":"MFC Message Handler","pos":[2678,2697]},{"content":"Navigating the Class Structure","pos":[2758,2788]}],"content":"---\ntitle: \"Details of ATL Support Added by the ATL Wizard | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"vc.codewiz.atl.support\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"MFC, ATL support\"\n  - \"ATL, MFC projects\"\nms.assetid: aa66bad0-008f-4886-94c1-2a0a0d04bce4\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Details of ATL Support Added by the ATL Wizard\nWhen you [add ATL support to an existing MFC executable or DLL](../../mfc/reference/adding-atl-support-to-your-mfc-project.md), Visual C++ makes the following modifications to the existing MFC project (in this example, the project is called `MFCEXE`):  \n  \n-   Two new files (an .idl file and an .rgs file, used to register the server) are added.  \n  \n-   In the main application header and implementation files (Mfcexe.h and Mfcexe.cpp), a new class (derived from **CAtlMFCModule**) is added. In addition to the new class, code is added to `InitInstance` for registration. Code is also added to the `ExitInstance` function for revoking the class object. In the header file, Finally, two new header files (Initguid.h and Mfcexe_i.c) are included in the implementation file, declaring and initializing the new GUIDs for the **CAtlMFCModule**-derived class.  \n  \n-   To register the server properly, an entry for the new .rgs file is added to the project's resource file.  \n  \n## Notes for DLL Projects  \n When you add ATL support to an MFC DLL project, you will see some differences. Code is added to the **DLLRegisterServer** and **DLLUnregisterServer** functions for registering and unregistering the DLL. Code is also added to [DllCanUnloadNow](../../atl/reference/catldllmodulet-class.md#catldllmodulet__dllcanunloadnow) and [DllGetClassObject](../../atl/reference/catldllmodulet-class.md#catldllmodulet__dllgetclassobject).  \n  \n## See Also  \n [ATL Support in an MFC Project](../../mfc/reference/adding-atl-support-to-your-mfc-project.md)   \n [Adding Functionality with Code Wizards](../../ide/adding-functionality-with-code-wizards-cpp.md)   \n [Adding a Class](../../ide/adding-a-class-visual-cpp.md)   \n [Adding a Member Function](../../ide/adding-a-member-function-visual-cpp.md)   \n [Adding a Member Variable](../../ide/adding-a-member-variable-visual-cpp.md)   \n [Overriding a Virtual Function](../../ide/overriding-a-virtual-function-visual-cpp.md)   \n [MFC Message Handler](../../mfc/reference/adding-an-mfc-message-handler.md)   \n [Navigating the Class Structure](../../ide/navigating-the-class-structure-visual-cpp.md)\n"}