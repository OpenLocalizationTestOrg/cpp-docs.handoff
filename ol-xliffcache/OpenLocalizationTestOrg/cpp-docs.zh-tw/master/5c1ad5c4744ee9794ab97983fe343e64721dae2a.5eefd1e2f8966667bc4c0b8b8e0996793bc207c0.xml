{"nodes":[{"pos":[12,45],"content":"CDBVariant Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CDBVariant Class | Microsoft Docs","pos":[0,33]}]},{"content":"CDBVariant Class","pos":[635,651]},{"content":"Represents a variant data type for the MFC ODBC classes.","pos":[652,708]},{"content":"Syntax","pos":[717,723]},{"content":"Members","pos":[766,773]},{"content":"Public Constructors","pos":[783,802]},{"content":"Name","pos":[809,813]},{"content":"Description","pos":[814,825]},{"content":"CDBVariant::CDBVariant","pos":[864,886]},{"pos":[913,946],"content":"Constructs a <ph id=\"ph1\">`CDBVariant`</ph> object.","source":"Constructs a `CDBVariant` object."},{"content":"Public Methods","pos":[957,971]},{"content":"Name","pos":[978,982]},{"content":"Description","pos":[983,994]},{"content":"CDBVariant::Clear","pos":[1033,1050]},{"pos":[1072,1103],"content":"Clears the <ph id=\"ph1\">`CDBVariant`</ph> object.","source":"Clears the `CDBVariant` object."},{"content":"Public Data Members","pos":[1114,1133]},{"content":"Name","pos":[1140,1144]},{"content":"Description","pos":[1145,1156]},{"content":"CDBVariant::m_dwType","pos":[1195,1215]},{"content":"Contains the data type of the currently stored value.","pos":[1240,1293]},{"content":"Type <ph id=\"ph1\">`DWORD`</ph>.","pos":[1294,1307],"source":" Type `DWORD`."},{"content":"Public Union Members","pos":[1318,1338]},{"content":"Name","pos":[1345,1349]},{"content":"Description","pos":[1350,1361]},{"content":"CDBVariant::m_boolVal","pos":[1400,1421]},{"pos":[1447,1481],"content":"Contains a value of type <bpt id=\"p1\">**</bpt>BOOL<ept id=\"p1\">**</ept>.","source":"Contains a value of type **BOOL**."},{"content":"CDBVariant::m_chVal","pos":[1487,1506]},{"pos":[1530,1571],"content":"Contains a value of type <ph id=\"ph1\">`unsigned char`</ph>.","source":"Contains a value of type `unsigned char`."},{"content":"CDBVariant::m_dblVal","pos":[1577,1597]},{"pos":[1622,1658],"content":"Contains a value of type <bpt id=\"p1\">**</bpt>double<ept id=\"p1\">**</ept>.","source":"Contains a value of type **double**."},{"content":"CDBVariant::m_fltVal","pos":[1664,1684]},{"pos":[1709,1744],"content":"Contains a value of type <bpt id=\"p1\">**</bpt>float<ept id=\"p1\">**</ept>.","source":"Contains a value of type **float**."},{"content":"CDBVariant::m_iVal","pos":[1750,1768]},{"pos":[1791,1826],"content":"Contains a value of type <bpt id=\"p1\">**</bpt>short<ept id=\"p1\">**</ept>.","source":"Contains a value of type **short**."},{"content":"CDBVariant::m_lVal","pos":[1832,1850]},{"pos":[1873,1907],"content":"Contains a value of type <bpt id=\"p1\">**</bpt>long<ept id=\"p1\">**</ept>.","source":"Contains a value of type **long**."},{"content":"CDBVariant::m_pbinary","pos":[1913,1934]},{"pos":[1960,2014],"content":"Contains a pointer to an object of type <ph id=\"ph1\">`CLongBinary`</ph>.","source":"Contains a pointer to an object of type `CLongBinary`."},{"content":"CDBVariant::m_pdate","pos":[2020,2039]},{"pos":[2063,2124],"content":"Contains a pointer to an object of type <bpt id=\"p1\">**</bpt>TIMESTAMP_STRUCT<ept id=\"p1\">**</ept>.","source":"Contains a pointer to an object of type **TIMESTAMP_STRUCT**."},{"content":"CDBVariant::m_pstring","pos":[2130,2151]},{"pos":[2177,2227],"content":"Contains a pointer to an object of type <ph id=\"ph1\">`CString`</ph>.","source":"Contains a pointer to an object of type `CString`."},{"content":"CDBVariant::m_pstringA","pos":[2233,2255]},{"pos":[2282,2378],"content":"Stores a pointer to an ASCII <bpt id=\"p1\">[</bpt>CString<ept id=\"p1\">](../../atl-mfc-shared/reference/cstringt-class.md)</ept> object.","source":"Stores a pointer to an ASCII [CString](../../atl-mfc-shared/reference/cstringt-class.md) object."},{"content":"CDBVariant::m_pstringW","pos":[2384,2406]},{"pos":[2433,2527],"content":"Stores a pointer to a wide <bpt id=\"p1\">[</bpt>CString<ept id=\"p1\">](../../atl-mfc-shared/reference/cstringt-class.md)</ept> object.","source":"Stores a pointer to a wide [CString](../../atl-mfc-shared/reference/cstringt-class.md) object."},{"content":"Remarks","pos":[2537,2544]},{"pos":[2561,2588],"content":"does not have a base class."},{"content":"is similar to <bpt id=\"p1\">[</bpt>COleVariant<ept id=\"p1\">](../../mfc/reference/colevariant-class.md)</ept>; however, <ph id=\"ph1\">`CDBVariant`</ph> does not use OLE.","pos":[2608,2718],"source":" is similar to [COleVariant](../../mfc/reference/colevariant-class.md); however, `CDBVariant` does not use OLE."},{"content":"allows you to store a value without worrying about the value's data type.","pos":[2732,2805]},{"content":"tracks the data type of the current value, which is stored in a union.","pos":[2819,2889]},{"content":"Class <bpt id=\"p1\">[</bpt>CRecordset<ept id=\"p1\">](../../mfc/reference/crecordset-class.md)</ept> utilizes <ph id=\"ph1\">`CDBVariant`</ph> objects in three member functions: <ph id=\"ph2\">`GetFieldValue`</ph>, <ph id=\"ph3\">`GetBookmark`</ph>, and <ph id=\"ph4\">`SetBookmark`</ph>.","pos":[2896,3063],"source":"Class [CRecordset](../../mfc/reference/crecordset-class.md) utilizes `CDBVariant` objects in three member functions: `GetFieldValue`, `GetBookmark`, and `SetBookmark`."},{"content":"For example, <ph id=\"ph1\">`GetFieldValue`</ph> allows you to dynamically fetch data in a column.","pos":[3064,3142],"source":" For example, `GetFieldValue` allows you to dynamically fetch data in a column."},{"content":"Because the data type of the column may not be known at run time, <ph id=\"ph1\">`GetFieldValue`</ph> uses a <ph id=\"ph2\">`CDBVariant`</ph> object to store the column's data.","pos":[3143,3279],"source":" Because the data type of the column may not be known at run time, `GetFieldValue` uses a `CDBVariant` object to store the column's data."},{"content":"Inheritance Hierarchy","pos":[3288,3309]},{"content":"Requirements","pos":[3334,3346]},{"pos":[3350,3369],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxdb.h","source":"**Header:** afxdb.h"},{"pos":[3418,3440],"content":"CDBVariant::CDBVariant"},{"pos":[3444,3479],"content":"Creates a NULL <ph id=\"ph1\">`CDBVariant`</ph> object.","source":"Creates a NULL `CDBVariant` object."},{"content":"Remarks","pos":[3518,3525]},{"pos":[3529,3601],"content":"Sets the <bpt id=\"p1\">[</bpt>m_dwType<ept id=\"p1\">](#cdbvariant__m_dwtype)</ept> data member to <bpt id=\"p2\">**</bpt>DBVT_NULL<ept id=\"p2\">**</ept>.","source":"Sets the [m_dwType](#cdbvariant__m_dwtype) data member to **DBVT_NULL**."},{"pos":[3645,3662],"content":"CDBVariant::Clear"},{"pos":[3666,3725],"content":"Call this member function to clear the <ph id=\"ph1\">`CDBVariant`</ph> object.","source":"Call this member function to clear the `CDBVariant` object."},{"content":"Remarks","pos":[3764,3771]},{"content":"If the value of the <bpt id=\"p1\">[</bpt>m_dwType<ept id=\"p1\">](#cdbvariant__m_dwtype)</ept> data member is <bpt id=\"p2\">**</bpt>DBVT_DATE<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>DBVT_STRING<ept id=\"p3\">**</ept>, or <bpt id=\"p4\">**</bpt>DBVT_BINARY<ept id=\"p4\">**</ept>, <bpt id=\"p5\">**</bpt>Clear<ept id=\"p5\">**</ept> frees the memory associated with the union pointer member.","pos":[3775,3964],"source":"If the value of the [m_dwType](#cdbvariant__m_dwtype) data member is **DBVT_DATE**, **DBVT_STRING**, or **DBVT_BINARY**, **Clear** frees the memory associated with the union pointer member."},{"content":"<bpt id=\"p1\">**</bpt>Clear<ept id=\"p1\">**</ept> sets <ph id=\"ph1\">`m_dwType`</ph> to <bpt id=\"p2\">**</bpt>DBVT_NULL<ept id=\"p2\">**</ept>.","pos":[3965,4008],"source":"**Clear** sets `m_dwType` to **DBVT_NULL**."},{"pos":[4015,4059],"content":"The <ph id=\"ph1\">`CDBVariant`</ph> destructor calls <bpt id=\"p1\">**</bpt>Clear<ept id=\"p1\">**</ept>.","source":"The `CDBVariant` destructor calls **Clear**."},{"pos":[4107,4128],"content":"CDBVariant::m_boolVal"},{"pos":[4132,4164],"content":"Stores a value of type <bpt id=\"p1\">**</bpt>BOOL<ept id=\"p1\">**</ept>.","source":"Stores a value of type **BOOL**."},{"content":"Remarks","pos":[4174,4181]},{"content":"The <bpt id=\"p1\">**</bpt>m_boolVal<ept id=\"p1\">**</ept> data member belongs to a union.","pos":[4185,4234],"source":"The **m_boolVal** data member belongs to a union."},{"content":"Before accessing <bpt id=\"p1\">**</bpt>m_boolVal<ept id=\"p1\">**</ept>, first check the value of <bpt id=\"p2\">[</bpt>CDBVariant::m_dwType<ept id=\"p2\">](#cdbvariant__m_dwtype)</ept>.","pos":[4235,4338],"source":" Before accessing **m_boolVal**, first check the value of [CDBVariant::m_dwType](#cdbvariant__m_dwtype)."},{"content":"If <ph id=\"ph1\">`m_dwType`</ph> is set to <bpt id=\"p1\">**</bpt>DBVT_BOOL<ept id=\"p1\">**</ept>, then <bpt id=\"p2\">**</bpt>m_boolVal<ept id=\"p2\">**</ept> will contain a valid value; otherwise, accessing <bpt id=\"p3\">**</bpt>m_boolVal<ept id=\"p3\">**</ept> will produce unreliable results.","pos":[4339,4492],"source":" If `m_dwType` is set to **DBVT_BOOL**, then **m_boolVal** will contain a valid value; otherwise, accessing **m_boolVal** will produce unreliable results."},{"pos":[4538,4557],"content":"CDBVariant::m_chVal"},{"pos":[4561,4600],"content":"Stores a value of type <ph id=\"ph1\">`unsigned char`</ph>.","source":"Stores a value of type `unsigned char`."},{"content":"Remarks","pos":[4610,4617]},{"content":"The <bpt id=\"p1\">**</bpt>m_chVal<ept id=\"p1\">**</ept> data member belongs to a union.","pos":[4621,4668],"source":"The **m_chVal** data member belongs to a union."},{"content":"Before accessing <bpt id=\"p1\">**</bpt>m_chVal<ept id=\"p1\">**</ept>, first check the value of <bpt id=\"p2\">[</bpt>CDBVariant::m_dwType<ept id=\"p2\">](#cdbvariant__m_dwtype)</ept>.","pos":[4669,4770],"source":" Before accessing **m_chVal**, first check the value of [CDBVariant::m_dwType](#cdbvariant__m_dwtype)."},{"content":"If <ph id=\"ph1\">`m_dwType`</ph> is set to <bpt id=\"p1\">**</bpt>DBVT_UCHAR<ept id=\"p1\">**</ept>, then <bpt id=\"p2\">**</bpt>m_chVal<ept id=\"p2\">**</ept> contains a valid value; otherwise, accessing <bpt id=\"p3\">**</bpt>m_chVal<ept id=\"p3\">**</ept> will produce unreliable results.","pos":[4771,4917],"source":" If `m_dwType` is set to **DBVT_UCHAR**, then **m_chVal** contains a valid value; otherwise, accessing **m_chVal** will produce unreliable results."},{"pos":[4964,4984],"content":"CDBVariant::m_dblVal"},{"pos":[4988,5022],"content":"Stores a value of type <bpt id=\"p1\">**</bpt>double<ept id=\"p1\">**</ept>.","source":"Stores a value of type **double**."},{"content":"Remarks","pos":[5032,5039]},{"content":"The <bpt id=\"p1\">**</bpt>m_dblVal<ept id=\"p1\">**</ept> data member belongs to a union.","pos":[5043,5091],"source":"The **m_dblVal** data member belongs to a union."},{"content":"Before accessing <bpt id=\"p1\">**</bpt>m_dblVal<ept id=\"p1\">**</ept>, first check the value of <bpt id=\"p2\">[</bpt>CDBVariant::m_dwType<ept id=\"p2\">](#cdbvariant__m_dwtype)</ept>.","pos":[5092,5194],"source":" Before accessing **m_dblVal**, first check the value of [CDBVariant::m_dwType](#cdbvariant__m_dwtype)."},{"content":"If <ph id=\"ph1\">`m_dwType`</ph> is set to <bpt id=\"p1\">**</bpt>DBVT_DOUBLE<ept id=\"p1\">**</ept>, then <bpt id=\"p2\">**</bpt>m_dblVal<ept id=\"p2\">**</ept> contains a valid value; otherwise, accessing <bpt id=\"p3\">**</bpt>m_dblVal<ept id=\"p3\">**</ept> will produce unreliable results.","pos":[5195,5344],"source":" If `m_dwType` is set to **DBVT_DOUBLE**, then **m_dblVal** contains a valid value; otherwise, accessing **m_dblVal** will produce unreliable results."},{"pos":[5391,5411],"content":"CDBVariant::m_dwType"},{"pos":[5415,5541],"content":"This data member contains the data type for the value that is currently stored in the <ph id=\"ph1\">`CDBVariant`</ph> object's union data member.","source":"This data member contains the data type for the value that is currently stored in the `CDBVariant` object's union data member."},{"content":"Remarks","pos":[5551,5558]},{"content":"Before accessing this union, you must check the value of <ph id=\"ph1\">`m_dwType`</ph> in order to determine which union data member to access.","pos":[5562,5686],"source":"Before accessing this union, you must check the value of `m_dwType` in order to determine which union data member to access."},{"content":"The following table lists the possible values for <ph id=\"ph1\">`m_dwType`</ph> and the corresponding union data member.","pos":[5687,5788],"source":" The following table lists the possible values for `m_dwType` and the corresponding union data member."},{"content":"m_dwType","pos":[5795,5803]},{"content":"Union data member","pos":[5804,5821]},{"content":"DBVT_NULL","pos":[5872,5881]},{"content":"No union member is valid for access.","pos":[5884,5920]},{"content":"DBVT_BOOL","pos":[5927,5936]},{"content":"m_boolVal","pos":[5940,5949]},{"content":"DBVT_UCHAR","pos":[5981,5991]},{"content":"m_chVal","pos":[5995,6002]},{"content":"DBVT_SHORT","pos":[6032,6042]},{"content":"m_iVal","pos":[6046,6052]},{"content":"DBVT_LONG","pos":[6081,6090]},{"content":"m_lVal","pos":[6094,6100]},{"content":"DBVT_SINGLE","pos":[6129,6140]},{"content":"m_fltVal","pos":[6144,6152]},{"content":"DBVT_DOUBLE","pos":[6183,6194]},{"content":"m_dblVal","pos":[6198,6206]},{"content":"DBVT_DATE","pos":[6237,6246]},{"content":"m_pdate","pos":[6250,6257]},{"content":"DBVT_STRING","pos":[6287,6298]},{"content":"m_pstring","pos":[6302,6311]},{"content":"DBVT_BINARY","pos":[6343,6354]},{"content":"m_pbinary","pos":[6358,6367]},{"content":"DBVT_ASTRING","pos":[6399,6411]},{"content":"m_pstringA","pos":[6415,6425]},{"content":"DBVT_WSTRING","pos":[6458,6470]},{"content":"m_pstringW","pos":[6474,6484]},{"pos":[6558,6578],"content":"CDBVariant::m_fltVal"},{"pos":[6582,6615],"content":"Stores a value of type <bpt id=\"p1\">**</bpt>float<ept id=\"p1\">**</ept>.","source":"Stores a value of type **float**."},{"content":"Remarks","pos":[6625,6632]},{"content":"The <bpt id=\"p1\">**</bpt>m_fltVal<ept id=\"p1\">**</ept> data member belongs to a union.","pos":[6636,6684],"source":"The **m_fltVal** data member belongs to a union."},{"content":"Before accessing <bpt id=\"p1\">**</bpt>m_fltVal<ept id=\"p1\">**</ept>, first check the value of <bpt id=\"p2\">[</bpt>CDBVariant::m_dwType<ept id=\"p2\">](#cdbvariant__m_dwtype)</ept>.","pos":[6685,6787],"source":" Before accessing **m_fltVal**, first check the value of [CDBVariant::m_dwType](#cdbvariant__m_dwtype)."},{"content":"If <ph id=\"ph1\">`m_dwType`</ph> is set to <bpt id=\"p1\">**</bpt>DBVT_SINGLE<ept id=\"p1\">**</ept>, then <bpt id=\"p2\">**</bpt>m_fltVal<ept id=\"p2\">**</ept> contains a valid value; otherwise, accessing <bpt id=\"p3\">**</bpt>m_fltVal<ept id=\"p3\">**</ept> will produce unreliable results.","pos":[6788,6937],"source":" If `m_dwType` is set to **DBVT_SINGLE**, then **m_fltVal** contains a valid value; otherwise, accessing **m_fltVal** will produce unreliable results."},{"pos":[6982,7000],"content":"CDBVariant::m_iVal"},{"pos":[7004,7037],"content":"Stores a value of type <bpt id=\"p1\">**</bpt>short<ept id=\"p1\">**</ept>.","source":"Stores a value of type **short**."},{"content":"Remarks","pos":[7047,7054]},{"content":"The <bpt id=\"p1\">**</bpt>m_iVal<ept id=\"p1\">**</ept> data member belongs to a union.","pos":[7058,7104],"source":"The **m_iVal** data member belongs to a union."},{"content":"Before accessing <bpt id=\"p1\">**</bpt>m_iVal<ept id=\"p1\">**</ept>, first check the value of <bpt id=\"p2\">[</bpt>CDBVariant::m_dwType<ept id=\"p2\">](#cdbvariant__m_dwtype)</ept>.","pos":[7105,7205],"source":" Before accessing **m_iVal**, first check the value of [CDBVariant::m_dwType](#cdbvariant__m_dwtype)."},{"content":"If <ph id=\"ph1\">`m_dwType`</ph> is set to <bpt id=\"p1\">**</bpt>DBVT_SHORT<ept id=\"p1\">**</ept>, then <bpt id=\"p2\">**</bpt>m_iVal<ept id=\"p2\">**</ept> contains a valid value; otherwise, accessing <bpt id=\"p3\">**</bpt>m_iVal<ept id=\"p3\">**</ept> will produce unreliable results.","pos":[7206,7350],"source":" If `m_dwType` is set to **DBVT_SHORT**, then **m_iVal** contains a valid value; otherwise, accessing **m_iVal** will produce unreliable results."},{"pos":[7395,7413],"content":"CDBVariant::m_lVal"},{"pos":[7417,7449],"content":"Stores a value of type <bpt id=\"p1\">**</bpt>long<ept id=\"p1\">**</ept>.","source":"Stores a value of type **long**."},{"content":"Remarks","pos":[7459,7466]},{"content":"The <bpt id=\"p1\">**</bpt>m_lVal<ept id=\"p1\">**</ept> data member belongs to a union.","pos":[7470,7516],"source":"The **m_lVal** data member belongs to a union."},{"content":"Before accessing <bpt id=\"p1\">**</bpt>m_lVal<ept id=\"p1\">**</ept>, first check the value of <bpt id=\"p2\">[</bpt>CDBVariant::m_dwType<ept id=\"p2\">](#cdbvariant__m_dwtype)</ept>.","pos":[7517,7617],"source":" Before accessing **m_lVal**, first check the value of [CDBVariant::m_dwType](#cdbvariant__m_dwtype)."},{"content":"If <ph id=\"ph1\">`m_dwType`</ph> is set to <bpt id=\"p1\">**</bpt>DBVT_LONG<ept id=\"p1\">**</ept>, then <bpt id=\"p2\">**</bpt>m_lVal<ept id=\"p2\">**</ept> contains a valid value; otherwise, accessing <bpt id=\"p3\">**</bpt>m_lVal<ept id=\"p3\">**</ept> will produce unreliable results.","pos":[7618,7761],"source":" If `m_dwType` is set to **DBVT_LONG**, then **m_lVal** contains a valid value; otherwise, accessing **m_lVal** will produce unreliable results."},{"pos":[7809,7830],"content":"CDBVariant::m_pbinary"},{"pos":[7834,7928],"content":"Stores a pointer to an object of type <bpt id=\"p1\">[</bpt>CLongBinary<ept id=\"p1\">](../../mfc/reference/clongbinary-class.md)</ept>.","source":"Stores a pointer to an object of type [CLongBinary](../../mfc/reference/clongbinary-class.md)."},{"content":"Remarks","pos":[7938,7945]},{"content":"The <bpt id=\"p1\">**</bpt>m_pbinary<ept id=\"p1\">**</ept> data member belongs to a union.","pos":[7949,7998],"source":"The **m_pbinary** data member belongs to a union."},{"content":"Before accessing <bpt id=\"p1\">**</bpt>m_pbinary<ept id=\"p1\">**</ept>, first check the value of <bpt id=\"p2\">[</bpt>CDBVariant::m_dwType<ept id=\"p2\">](#cdbvariant__m_dwtype)</ept>.","pos":[7999,8102],"source":" Before accessing **m_pbinary**, first check the value of [CDBVariant::m_dwType](#cdbvariant__m_dwtype)."},{"content":"If <ph id=\"ph1\">`m_dwType`</ph> is set to <bpt id=\"p1\">**</bpt>DBVT_BINARY<ept id=\"p1\">**</ept>, then <bpt id=\"p2\">**</bpt>m_pbinary<ept id=\"p2\">**</ept> contains a valid pointer; otherwise, accessing <bpt id=\"p3\">**</bpt>m_pbinary<ept id=\"p3\">**</ept> will produce unreliable results.","pos":[8103,8256],"source":" If `m_dwType` is set to **DBVT_BINARY**, then **m_pbinary** contains a valid pointer; otherwise, accessing **m_pbinary** will produce unreliable results."},{"pos":[8302,8321],"content":"CDBVariant::m_pdate"},{"pos":[8325,8384],"content":"Stores a pointer to an object of type <bpt id=\"p1\">**</bpt>TIMESTAMP_STRUCT<ept id=\"p1\">**</ept>.","source":"Stores a pointer to an object of type **TIMESTAMP_STRUCT**."},{"content":"Remarks","pos":[8394,8401]},{"content":"The <bpt id=\"p1\">**</bpt>m_pdate<ept id=\"p1\">**</ept> data member belongs to a union.","pos":[8405,8452],"source":"The **m_pdate** data member belongs to a union."},{"content":"Before accessing <bpt id=\"p1\">**</bpt>m_pdate<ept id=\"p1\">**</ept>, first check the value of <bpt id=\"p2\">[</bpt>CDBVariant::m_dwType<ept id=\"p2\">](#cdbvariant__m_dwtype)</ept>.","pos":[8453,8554],"source":" Before accessing **m_pdate**, first check the value of [CDBVariant::m_dwType](#cdbvariant__m_dwtype)."},{"content":"If <ph id=\"ph1\">`m_dwType`</ph> is set to <bpt id=\"p1\">**</bpt>DBVT_DATE<ept id=\"p1\">**</ept>, then <bpt id=\"p2\">**</bpt>m_pdate<ept id=\"p2\">**</ept> contains a valid pointer; otherwise, accessing <bpt id=\"p3\">**</bpt>m_pdate<ept id=\"p3\">**</ept> will produce unreliable results.","pos":[8555,8702],"source":" If `m_dwType` is set to **DBVT_DATE**, then **m_pdate** contains a valid pointer; otherwise, accessing **m_pdate** will produce unreliable results."},{"pos":[8709,8961],"content":"For more information about the <bpt id=\"p1\">**</bpt>TIMESTAMP_STRUCT<ept id=\"p1\">**</ept> data type, see the topic <bpt id=\"p2\">[</bpt>C Data Types<ept id=\"p2\">](https://msdn.microsoft.com/library/ms714556.aspx)</ept> in Appendix D of the <bpt id=\"p3\">*</bpt>ODBC Programmer's Reference<ept id=\"p3\">*</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information about the **TIMESTAMP_STRUCT** data type, see the topic [C Data Types](https://msdn.microsoft.com/library/ms714556.aspx) in Appendix D of the *ODBC Programmer's Reference* in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[9009,9030],"content":"CDBVariant::m_pstring"},{"pos":[9034,9132],"content":"Stores a pointer to an object of type <bpt id=\"p1\">[</bpt>CString<ept id=\"p1\">](../../atl-mfc-shared/reference/cstringt-class.md)</ept>.","source":"Stores a pointer to an object of type [CString](../../atl-mfc-shared/reference/cstringt-class.md)."},{"content":"Remarks","pos":[9142,9149]},{"content":"The <bpt id=\"p1\">**</bpt>m_pstring<ept id=\"p1\">**</ept> data member belongs to a union.","pos":[9153,9202],"source":"The **m_pstring** data member belongs to a union."},{"content":"Before accessing <bpt id=\"p1\">**</bpt>m_pstring<ept id=\"p1\">**</ept>, first check the value of <bpt id=\"p2\">[</bpt>CDBVariant::m_dwType<ept id=\"p2\">](#cdbvariant__m_dwtype)</ept>.","pos":[9203,9306],"source":" Before accessing **m_pstring**, first check the value of [CDBVariant::m_dwType](#cdbvariant__m_dwtype)."},{"content":"If <ph id=\"ph1\">`m_dwType`</ph> is set to <bpt id=\"p1\">**</bpt>DBVT_STRING<ept id=\"p1\">**</ept>, then <bpt id=\"p2\">**</bpt>m_pstring<ept id=\"p2\">**</ept> contains a valid pointer; otherwise, accessing <bpt id=\"p3\">**</bpt>m_pstring<ept id=\"p3\">**</ept> will produce unreliable results.","pos":[9307,9460],"source":" If `m_dwType` is set to **DBVT_STRING**, then **m_pstring** contains a valid pointer; otherwise, accessing **m_pstring** will produce unreliable results."},{"pos":[9509,9531],"content":"CDBVariant::m_pstringA"},{"pos":[9535,9631],"content":"Stores a pointer to an ASCII <bpt id=\"p1\">[</bpt>CString<ept id=\"p1\">](../../atl-mfc-shared/reference/cstringt-class.md)</ept> object.","source":"Stores a pointer to an ASCII [CString](../../atl-mfc-shared/reference/cstringt-class.md) object."},{"content":"Remarks","pos":[9641,9648]},{"content":"The <bpt id=\"p1\">**</bpt>m_pstringA<ept id=\"p1\">**</ept> data member belongs to a union.","pos":[9652,9702],"source":"The **m_pstringA** data member belongs to a union."},{"content":"Before accessing <bpt id=\"p1\">**</bpt>m_pstringA<ept id=\"p1\">**</ept>, first check the value of <bpt id=\"p2\">[</bpt>CDBVariant::m_dwType<ept id=\"p2\">](#cdbvariant__m_dwtype)</ept>.","pos":[9703,9807],"source":" Before accessing **m_pstringA**, first check the value of [CDBVariant::m_dwType](#cdbvariant__m_dwtype)."},{"content":"If <ph id=\"ph1\">`m_dwType`</ph> is set to <bpt id=\"p1\">**</bpt>DBVT_ASTRING<ept id=\"p1\">**</ept>, then <bpt id=\"p2\">**</bpt>m_pstringA<ept id=\"p2\">**</ept> contains a valid pointer; otherwise, accessing <bpt id=\"p3\">**</bpt>m_pstringA<ept id=\"p3\">**</ept> will produce unreliable results.","pos":[9808,9964],"source":" If `m_dwType` is set to **DBVT_ASTRING**, then **m_pstringA** contains a valid pointer; otherwise, accessing **m_pstringA** will produce unreliable results."},{"pos":[10013,10035],"content":"CDBVariant::m_pstringW"},{"pos":[10039,10133],"content":"Stores a pointer to a wide <bpt id=\"p1\">[</bpt>CString<ept id=\"p1\">](../../atl-mfc-shared/reference/cstringt-class.md)</ept> object.","source":"Stores a pointer to a wide [CString](../../atl-mfc-shared/reference/cstringt-class.md) object."},{"content":"Remarks","pos":[10143,10150]},{"content":"The <bpt id=\"p1\">**</bpt>m_pstringW<ept id=\"p1\">**</ept> data member belongs to a union.","pos":[10154,10204],"source":"The **m_pstringW** data member belongs to a union."},{"content":"Before accessing <bpt id=\"p1\">**</bpt>m_pstringW<ept id=\"p1\">**</ept>, first check the value of <bpt id=\"p2\">[</bpt>CDBVariant::m_dwType<ept id=\"p2\">](#cdbvariant__m_dwtype)</ept>.","pos":[10205,10309],"source":" Before accessing **m_pstringW**, first check the value of [CDBVariant::m_dwType](#cdbvariant__m_dwtype)."},{"content":"If <ph id=\"ph1\">`m_dwType`</ph> is set to <bpt id=\"p1\">**</bpt>DBVT_WSTRING<ept id=\"p1\">**</ept>, then <bpt id=\"p2\">**</bpt>m_pstringW<ept id=\"p2\">**</ept> contains a valid pointer; otherwise, accessing <bpt id=\"p3\">**</bpt>m_pstringW<ept id=\"p3\">**</ept> will produce unreliable results.","pos":[10310,10466],"source":" If `m_dwType` is set to **DBVT_WSTRING**, then **m_pstringW** contains a valid pointer; otherwise, accessing **m_pstringW** will produce unreliable results."},{"content":"See Also","pos":[10475,10483]},{"content":"Hierarchy Chart","pos":[10488,10503]},{"content":"CRecordset Class","pos":[10540,10556]}],"content":"---\ntitle: \"CDBVariant Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CDBVariant\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CDBVariant class\"\n  - \"Variant data types, ODBC\"\nms.assetid: de23609c-c560-4b24-bd6b-9d8903fd5b49\ncaps.latest.revision: 21\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CDBVariant Class\nRepresents a variant data type for the MFC ODBC classes.  \n  \n## Syntax  \n  \n```  \nclass CDBVariant  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CDBVariant::CDBVariant](#cdbvariant__cdbvariant)|Constructs a `CDBVariant` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CDBVariant::Clear](#cdbvariant__clear)|Clears the `CDBVariant` object.|  \n  \n### Public Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CDBVariant::m_dwType](#cdbvariant__m_dwtype)|Contains the data type of the currently stored value. Type `DWORD`.|  \n  \n### Public Union Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CDBVariant::m_boolVal](#cdbvariant__m_boolval)|Contains a value of type **BOOL**.|  \n|[CDBVariant::m_chVal](#cdbvariant__m_chval)|Contains a value of type `unsigned char`.|  \n|[CDBVariant::m_dblVal](#cdbvariant__m_dblval)|Contains a value of type **double**.|  \n|[CDBVariant::m_fltVal](#cdbvariant__m_fltval)|Contains a value of type **float**.|  \n|[CDBVariant::m_iVal](#cdbvariant__m_ival)|Contains a value of type **short**.|  \n|[CDBVariant::m_lVal](#cdbvariant__m_lval)|Contains a value of type **long**.|  \n|[CDBVariant::m_pbinary](#cdbvariant__m_pbinary)|Contains a pointer to an object of type `CLongBinary`.|  \n|[CDBVariant::m_pdate](#cdbvariant__m_pdate)|Contains a pointer to an object of type **TIMESTAMP_STRUCT**.|  \n|[CDBVariant::m_pstring](#cdbvariant__m_pstring)|Contains a pointer to an object of type `CString`.|  \n|[CDBVariant::m_pstringA](#cdbvariant__m_pstringa)|Stores a pointer to an ASCII [CString](../../atl-mfc-shared/reference/cstringt-class.md) object.|  \n|[CDBVariant::m_pstringW](#cdbvariant__m_pstringw)|Stores a pointer to a wide [CString](../../atl-mfc-shared/reference/cstringt-class.md) object.|  \n  \n## Remarks  \n `CDBVariant` does not have a base class.  \n  \n `CDBVariant` is similar to [COleVariant](../../mfc/reference/colevariant-class.md); however, `CDBVariant` does not use OLE. `CDBVariant` allows you to store a value without worrying about the value's data type. `CDBVariant` tracks the data type of the current value, which is stored in a union.  \n  \n Class [CRecordset](../../mfc/reference/crecordset-class.md) utilizes `CDBVariant` objects in three member functions: `GetFieldValue`, `GetBookmark`, and `SetBookmark`. For example, `GetFieldValue` allows you to dynamically fetch data in a column. Because the data type of the column may not be known at run time, `GetFieldValue` uses a `CDBVariant` object to store the column's data.  \n  \n## Inheritance Hierarchy  \n `CDBVariant`  \n  \n## Requirements  \n **Header:** afxdb.h  \n  \n##  <a name=\"cdbvariant__cdbvariant\"></a>  CDBVariant::CDBVariant  \n Creates a NULL `CDBVariant` object.  \n  \n```  \nCDBVariant();\n```  \n  \n### Remarks  \n Sets the [m_dwType](#cdbvariant__m_dwtype) data member to **DBVT_NULL**.  \n  \n##  <a name=\"cdbvariant__clear\"></a>  CDBVariant::Clear  \n Call this member function to clear the `CDBVariant` object.  \n  \n```  \nvoid Clear();\n```  \n  \n### Remarks  \n If the value of the [m_dwType](#cdbvariant__m_dwtype) data member is **DBVT_DATE**, **DBVT_STRING**, or **DBVT_BINARY**, **Clear** frees the memory associated with the union pointer member. **Clear** sets `m_dwType` to **DBVT_NULL**.  \n  \n The `CDBVariant` destructor calls **Clear**.  \n  \n##  <a name=\"cdbvariant__m_boolval\"></a>  CDBVariant::m_boolVal  \n Stores a value of type **BOOL**.  \n  \n### Remarks  \n The **m_boolVal** data member belongs to a union. Before accessing **m_boolVal**, first check the value of [CDBVariant::m_dwType](#cdbvariant__m_dwtype). If `m_dwType` is set to **DBVT_BOOL**, then **m_boolVal** will contain a valid value; otherwise, accessing **m_boolVal** will produce unreliable results.  \n  \n##  <a name=\"cdbvariant__m_chval\"></a>  CDBVariant::m_chVal  \n Stores a value of type `unsigned char`.  \n  \n### Remarks  \n The **m_chVal** data member belongs to a union. Before accessing **m_chVal**, first check the value of [CDBVariant::m_dwType](#cdbvariant__m_dwtype). If `m_dwType` is set to **DBVT_UCHAR**, then **m_chVal** contains a valid value; otherwise, accessing **m_chVal** will produce unreliable results.  \n  \n##  <a name=\"cdbvariant__m_dblval\"></a>  CDBVariant::m_dblVal  \n Stores a value of type **double**.  \n  \n### Remarks  \n The **m_dblVal** data member belongs to a union. Before accessing **m_dblVal**, first check the value of [CDBVariant::m_dwType](#cdbvariant__m_dwtype). If `m_dwType` is set to **DBVT_DOUBLE**, then **m_dblVal** contains a valid value; otherwise, accessing **m_dblVal** will produce unreliable results.  \n  \n##  <a name=\"cdbvariant__m_dwtype\"></a>  CDBVariant::m_dwType  \n This data member contains the data type for the value that is currently stored in the `CDBVariant` object's union data member.  \n  \n### Remarks  \n Before accessing this union, you must check the value of `m_dwType` in order to determine which union data member to access. The following table lists the possible values for `m_dwType` and the corresponding union data member.  \n  \n|m_dwType|Union data member|  \n|---------------|-----------------------|  \n|**DBVT_NULL**|No union member is valid for access.|  \n|**DBVT_BOOL**|[m_boolVal](#cdbvariant__m_boolval)|  \n|**DBVT_UCHAR**|[m_chVal](#cdbvariant__m_chval)|  \n|**DBVT_SHORT**|[m_iVal](#cdbvariant__m_ival)|  \n|**DBVT_LONG**|[m_lVal](#cdbvariant__m_lval)|  \n|**DBVT_SINGLE**|[m_fltVal](#cdbvariant__m_fltval)|  \n|**DBVT_DOUBLE**|[m_dblVal](#cdbvariant__m_dblval)|  \n|**DBVT_DATE**|[m_pdate](#cdbvariant__m_pdate)|  \n|**DBVT_STRING**|[m_pstring](#cdbvariant__m_pstring)|  \n|**DBVT_BINARY**|[m_pbinary](#cdbvariant__m_pbinary)|  \n|**DBVT_ASTRING**|[m_pstringA](#cdbvariant__m_pstringa)|  \n|**DBVT_WSTRING**|[m_pstringW](#cdbvariant__m_pstringw)|  \n  \n##  <a name=\"cdbvariant__m_fltval\"></a>  CDBVariant::m_fltVal  \n Stores a value of type **float**.  \n  \n### Remarks  \n The **m_fltVal** data member belongs to a union. Before accessing **m_fltVal**, first check the value of [CDBVariant::m_dwType](#cdbvariant__m_dwtype). If `m_dwType` is set to **DBVT_SINGLE**, then **m_fltVal** contains a valid value; otherwise, accessing **m_fltVal** will produce unreliable results.  \n  \n##  <a name=\"cdbvariant__m_ival\"></a>  CDBVariant::m_iVal  \n Stores a value of type **short**.  \n  \n### Remarks  \n The **m_iVal** data member belongs to a union. Before accessing **m_iVal**, first check the value of [CDBVariant::m_dwType](#cdbvariant__m_dwtype). If `m_dwType` is set to **DBVT_SHORT**, then **m_iVal** contains a valid value; otherwise, accessing **m_iVal** will produce unreliable results.  \n  \n##  <a name=\"cdbvariant__m_lval\"></a>  CDBVariant::m_lVal  \n Stores a value of type **long**.  \n  \n### Remarks  \n The **m_lVal** data member belongs to a union. Before accessing **m_lVal**, first check the value of [CDBVariant::m_dwType](#cdbvariant__m_dwtype). If `m_dwType` is set to **DBVT_LONG**, then **m_lVal** contains a valid value; otherwise, accessing **m_lVal** will produce unreliable results.  \n  \n##  <a name=\"cdbvariant__m_pbinary\"></a>  CDBVariant::m_pbinary  \n Stores a pointer to an object of type [CLongBinary](../../mfc/reference/clongbinary-class.md).  \n  \n### Remarks  \n The **m_pbinary** data member belongs to a union. Before accessing **m_pbinary**, first check the value of [CDBVariant::m_dwType](#cdbvariant__m_dwtype). If `m_dwType` is set to **DBVT_BINARY**, then **m_pbinary** contains a valid pointer; otherwise, accessing **m_pbinary** will produce unreliable results.  \n  \n##  <a name=\"cdbvariant__m_pdate\"></a>  CDBVariant::m_pdate  \n Stores a pointer to an object of type **TIMESTAMP_STRUCT**.  \n  \n### Remarks  \n The **m_pdate** data member belongs to a union. Before accessing **m_pdate**, first check the value of [CDBVariant::m_dwType](#cdbvariant__m_dwtype). If `m_dwType` is set to **DBVT_DATE**, then **m_pdate** contains a valid pointer; otherwise, accessing **m_pdate** will produce unreliable results.  \n  \n For more information about the **TIMESTAMP_STRUCT** data type, see the topic [C Data Types](https://msdn.microsoft.com/library/ms714556.aspx) in Appendix D of the *ODBC Programmer's Reference* in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"cdbvariant__m_pstring\"></a>  CDBVariant::m_pstring  \n Stores a pointer to an object of type [CString](../../atl-mfc-shared/reference/cstringt-class.md).  \n  \n### Remarks  \n The **m_pstring** data member belongs to a union. Before accessing **m_pstring**, first check the value of [CDBVariant::m_dwType](#cdbvariant__m_dwtype). If `m_dwType` is set to **DBVT_STRING**, then **m_pstring** contains a valid pointer; otherwise, accessing **m_pstring** will produce unreliable results.  \n  \n##  <a name=\"cdbvariant__m_pstringa\"></a>  CDBVariant::m_pstringA  \n Stores a pointer to an ASCII [CString](../../atl-mfc-shared/reference/cstringt-class.md) object.  \n  \n### Remarks  \n The **m_pstringA** data member belongs to a union. Before accessing **m_pstringA**, first check the value of [CDBVariant::m_dwType](#cdbvariant__m_dwtype). If `m_dwType` is set to **DBVT_ASTRING**, then **m_pstringA** contains a valid pointer; otherwise, accessing **m_pstringA** will produce unreliable results.  \n  \n##  <a name=\"cdbvariant__m_pstringw\"></a>  CDBVariant::m_pstringW  \n Stores a pointer to a wide [CString](../../atl-mfc-shared/reference/cstringt-class.md) object.  \n  \n### Remarks  \n The **m_pstringW** data member belongs to a union. Before accessing **m_pstringW**, first check the value of [CDBVariant::m_dwType](#cdbvariant__m_dwtype). If `m_dwType` is set to **DBVT_WSTRING**, then **m_pstringW** contains a valid pointer; otherwise, accessing **m_pstringW** will produce unreliable results.  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [CRecordset Class](../../mfc/reference/crecordset-class.md)\n"}