{"nodes":[{"pos":[12,49],"content":"Compiler Error C2662 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C2662 | Microsoft Docs","pos":[0,37]}]},{"content":"Compiler Error C2662","pos":[598,618]},{"content":"'function' : cannot convert 'this' pointer from 'type1' to 'type2'","pos":[619,685]},{"pos":[692,765],"content":"The compiler could not convert the <ph id=\"ph1\">`this`</ph> pointer from <ph id=\"ph2\">`type1`</ph>to <ph id=\"ph3\">`type2`</ph>.","source":"The compiler could not convert the `this` pointer from `type1`to `type2`."},{"content":"This error can be caused by invoking a non-<ph id=\"ph1\">`const`</ph> member function on a <ph id=\"ph2\">`const`</ph> object.","pos":[772,859],"source":"This error can be caused by invoking a non-`const` member function on a `const` object."},{"content":"Possible resolutions:","pos":[861,882]},{"pos":[892,939],"content":"Remove the <ph id=\"ph1\">`const`</ph> from the object declaration.","source":"Remove the `const` from the object declaration."},{"pos":[949,984],"content":"Add <ph id=\"ph1\">`const`</ph> to the member function.","source":"Add `const` to the member function."},{"content":"The following sample generates C2662:","pos":[991,1028]},{"content":"When compiling with <bpt id=\"p1\">**</bpt>/clr<ept id=\"p1\">**</ept>, you cannot call a function on a <ph id=\"ph1\">`const`</ph> or <ph id=\"ph2\">`volatile`</ph> qualified managed type.","pos":[1218,1325],"source":"When compiling with **/clr**, you cannot call a function on a `const` or `volatile` qualified managed type."},{"content":"You cannot declare a const member function of a managed class, so you cannot call methods on const managed objects.","pos":[1326,1441]},{"content":"The following sample generates C2662:","pos":[1840,1877]}],"content":"---\ntitle: \"Compiler Error C2662 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C2662\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C2662\"\nms.assetid: e172c2a4-f29e-4034-8232-e7dc6f83689f\ncaps.latest.revision: 11\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Error C2662\n'function' : cannot convert 'this' pointer from 'type1' to 'type2'  \n  \n The compiler could not convert the `this` pointer from `type1`to `type2`.  \n  \n This error can be caused by invoking a non-`const` member function on a `const` object.  Possible resolutions:  \n  \n-   Remove the `const` from the object declaration.  \n  \n-   Add `const` to the member function.  \n  \n The following sample generates C2662:  \n  \n```  \n// C2662.cpp  \nclass C {  \npublic:  \n   void func1();  \n   void func2() const{}  \n} const c;  \n  \nint main() {  \n   c.func1();   // C2662  \n   c.func2();   // OK  \n}  \n```  \n  \n When compiling with **/clr**, you cannot call a function on a `const` or `volatile` qualified managed type. You cannot declare a const member function of a managed class, so you cannot call methods on const managed objects.  \n  \n```  \n// C2662_b.cpp  \n// compile with: /c /clr  \nref struct M {  \n   property M^ Type {  \n      M^ get() { return this; }  \n   }  \n  \n   void operator=(const M %m) {  \n      M ^ prop = m.Type;   // C2662  \n   }  \n};  \n  \nref struct N {  \n   property N^ Type {  \n      N^ get() { return this; }  \n   }  \n  \n   void operator=(N % n) {  \n      N ^ prop = n.Type;   // OK  \n   }  \n};  \n```  \n  \n The following sample generates C2662:  \n  \n```  \n// C2662_c.cpp  \n// compile with: /c  \n// C2662 expected  \ntypedef int ISXVD;  \ntypedef unsigned char BYTE;  \n  \nclass LXBASE {  \nprotected:  \n    BYTE *m_rgb;  \n};  \n  \nclass LXISXVD:LXBASE {  \npublic:  \n   // Delete the following line to resolve.  \n   ISXVD *PMin() { return (ISXVD *)m_rgb; }  \n  \n   ISXVD *PMin2() const { return (ISXVD *)m_rgb; };   // OK  \n};  \n  \nvoid F(const LXISXVD *plxisxvd, int iDim) {  \n   ISXVD isxvd;  \n   // Delete the following line to resolve.  \n   isxvd = plxisxvd->PMin()[iDim];  \n  \n   isxvd = plxisxvd->PMin2()[iDim];    \n}  \n```"}