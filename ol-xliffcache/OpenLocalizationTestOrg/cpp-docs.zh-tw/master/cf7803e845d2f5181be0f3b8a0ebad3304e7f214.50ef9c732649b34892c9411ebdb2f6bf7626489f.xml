{"nodes":[{"pos":[12,51],"content":"GetCodeForInitInstance | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"GetCodeForInitInstance | Microsoft Docs","pos":[0,39]}]},{"content":"GetCodeForInitInstance","pos":[632,654]},{"pos":[655,751],"content":"Retrieves the specified code for <bpt id=\"p1\">[</bpt>InitInstance<ept id=\"p1\">](../mfc/reference/cwinapp-class.md#initinstance)</ept>.","source":"Retrieves the specified code for [InitInstance](../mfc/reference/cwinapp-class.md#initinstance)."},{"content":"Syntax","pos":[760,766]},{"content":"Parameters","pos":[876,886]},{"content":"The zero-based line number for the start of the function.","pos":[906,963]},{"content":"The zero-based line number for the end of the function.","pos":[984,1039]},{"content":"Return Value","pos":[1048,1060]},{"content":"A string containing the code for initializing the wizard instance.","pos":[1064,1130]},{"content":"Remarks","pos":[1139,1146]},{"content":"Call this member function to retrieve the appropriate code for initializing the wizard instance.","pos":[1150,1246]},{"content":"The line numbers are as follows:","pos":[1247,1279]},{"content":"Line number","pos":[1286,1297]},{"content":"InitInstance Code","pos":[1298,1315]},{"content":"0","pos":[1366,1367]},{"content":"1","pos":[1399,1400]},{"content":"2","pos":[1420,1421]},{"content":"3","pos":[1442,1443]},{"content":"4","pos":[1516,1517]},{"content":"5","pos":[1550,1551]},{"content":"6","pos":[1585,1586]},{"content":"7","pos":[1652,1653]},{"content":"8","pos":[1693,1694]},{"content":"9","pos":[1766,1767]},{"content":"10","pos":[1776,1778]},{"content":"11","pos":[1844,1846]},{"content":"12","pos":[1941,1943]},{"content":"13","pos":[1968,1970]},{"content":"14","pos":[2009,2011]},{"content":"15","pos":[2033,2035]},{"content":"16","pos":[2044,2046]},{"content":"17","pos":[2114,2116]},{"content":"18","pos":[2187,2189]},{"content":"19","pos":[2198,2200]},{"content":"20","pos":[2248,2250]},{"content":"21","pos":[2294,2296]},{"content":"22","pos":[2319,2321]},{"content":"23","pos":[2330,2332]},{"content":"24","pos":[2396,2398]},{"content":"25","pos":[2467,2469]},{"content":"26","pos":[2478,2480]},{"content":"27","pos":[2527,2529]},{"content":"28","pos":[2571,2573]},{"content":"29","pos":[2596,2598]},{"pos":[2610,2769],"content":"For each of the lines returned, <ph id=\"ph1\">`GetCodeForInitInstance`</ph> adds a leading tab (<ph id=\"ph2\">`\\t`</ph>) and a trailing \"CR-LF\" (carriage return - linefeed) character pair (<ph id=\"ph3\">`\\r\\n`</ph>).","source":"For each of the lines returned, `GetCodeForInitInstance` adds a leading tab (`\\t`) and a trailing \"CR-LF\" (carriage return - linefeed) character pair (`\\r\\n`)."},{"content":"Example","pos":[2778,2785]},{"content":"See Also","pos":[3001,3009]},{"content":"Customizing C++ Wizards with Common JScript Functions","pos":[3014,3067]},{"content":"JScript Functions for C++ Wizards","pos":[3139,3172]},{"content":"Creating a Custom Wizard","pos":[3224,3248]},{"content":"Designing a Wizard","pos":[3291,3309]},{"content":"GetCodeForExitInstance","pos":[3346,3368]}],"content":"---\ntitle: \"GetCodeForInitInstance | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"GetCodeForInitInstance\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"GetCodeForInitInstance method\"\nms.assetid: cfa4cb9f-d1cc-4be6-8db9-c253655b57e4\ncaps.latest.revision: 6\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# GetCodeForInitInstance\nRetrieves the specified code for [InitInstance](../mfc/reference/cwinapp-class.md#initinstance).  \n  \n## Syntax  \n  \n```  \n  \n      function GetCodeForInitInstance(   \n   nLineStart,   \n   nLineEnd    \n);  \n```  \n  \n#### Parameters  \n `nLineStart`  \n The zero-based line number for the start of the function.  \n  \n `nLineEnd`  \n The zero-based line number for the end of the function.  \n  \n## Return Value  \n A string containing the code for initializing the wizard instance.  \n  \n## Remarks  \n Call this member function to retrieve the appropriate code for initializing the wizard instance. The line numbers are as follows:  \n  \n|Line number|InitInstance Code|  \n|-----------------|-----------------------|  \n|0|`CWinApp::InitInstance();`|  \n|1|`return TRUE;`|  \n|2|`AfxOleInit();`|  \n|3|`// Parse command line for standard shell commands, DDE, file open`|  \n|4|`CCommandLineInfo cmdInfo;`|  \n|5|`ParseCommandLine(cmdInfo);`|  \n|6|`// App was launched with /Embedding or /Automation switch.`|  \n|7|`// Run app as automation server.`|  \n|8|`if (cmdInfo.m_bRunEmbedded &#124;&#124; cmdInfo.m_bRunAutomated)`|  \n|9|`{`|  \n|10|`\\t// Register class factories via CoRegisterClassObject().`|  \n|11|`\\tif (FAILED(_AtlModule.RegisterClassObjects(CLSCTX_LOCAL_SERVER, REGCLS_MULTIPLEUSE)))`|  \n|12|`\\t\\treturn FALSE;`|  \n|13|`\\t// Don't show the main window`|  \n|14|`\\treturn TRUE;`|  \n|15|`}`|  \n|16|`// App was launched with /Unregserver or /Unregister switch.`|  \n|17|`if (cmdInfo.m_nShellCommand == CCommandLineInfo::AppUnregister)`|  \n|18|`{`|  \n|19|`\\t_AtlModule.UpdateRegistryAppId(FALSE);`|  \n|20|`\\t_AtlModule.UnregisterServer(TRUE);`|  \n|21|`\\treturn FALSE;`|  \n|22|`}`|  \n|23|`// App was launched with /Register or /Regserver switch.`|  \n|24|`if (cmdInfo.m_nShellCommand == CCommandLineInfo::AppRegister)`|  \n|25|`{`|  \n|26|`\\t_AtlModule.UpdateRegistryAppId(TRUE);`|  \n|27|`\\t_AtlModule.RegisterServer(TRUE);`|  \n|28|`\\treturn FALSE;`|  \n|29|`}`|  \n  \n For each of the lines returned, `GetCodeForInitInstance` adds a leading tab (`\\t`) and a trailing \"CR-LF\" (carriage return - linefeed) character pair (`\\r\\n`).  \n  \n## Example  \n  \n```  \n// Get the lines numbered 0 through 2 above  \nGetCodeForInitInstance(0, 2)  \n  \n// returns the following string  \n// \"\\tCWinApp::InitInstance();\\r\\n\\treturn TRUE;\\r\\n\\tAfxOleInit();\\r\\n\"  \n  \n```  \n  \n## See Also  \n [Customizing C++ Wizards with Common JScript Functions](../ide/customizing-cpp-wizards-with-common-jscript-functions.md)   \n [JScript Functions for C++ Wizards](../ide/jscript-functions-for-cpp-wizards.md)   \n [Creating a Custom Wizard](../ide/creating-a-custom-wizard.md)   \n [Designing a Wizard](../ide/designing-a-wizard.md)   \n [GetCodeForExitInstance](../ide/getcodeforexitinstance.md)"}