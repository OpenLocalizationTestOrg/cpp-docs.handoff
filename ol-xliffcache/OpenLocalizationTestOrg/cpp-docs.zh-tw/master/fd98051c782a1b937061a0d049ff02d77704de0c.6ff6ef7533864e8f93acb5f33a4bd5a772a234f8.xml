{"nodes":[{"pos":[12,36],"content":"_getpid | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_getpid | Microsoft Docs","pos":[0,24]}]},{"content":"_getpid","pos":[966,973]},{"content":"Gets the process identification.","pos":[974,1006]},{"pos":[1014,1251],"content":"[!IMPORTANT]\n This API cannot be used in applications that execute in the Windows Runtime. For more information, see                  [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":" This API cannot be used in applications that execute in the Windows Runtime. For more information, see                  [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","pos":[13,235],"nodes":[{"content":"This API cannot be used in applications that execute in the Windows Runtime.","pos":[1,77]},{"content":"For more information, see                  <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.","pos":[78,222],"source":" For more information, see                  [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)."}]}]},{"content":"Syntax","pos":[1260,1266]},{"content":"Return Value","pos":[1313,1325]},{"content":"Returns the process ID obtained from the system.","pos":[1329,1377]},{"content":"There is no error return.","pos":[1378,1403]},{"content":"Remarks","pos":[1412,1419]},{"content":"The <ph id=\"ph1\">`_getpid`</ph> function obtains the process ID from the system.","pos":[1423,1485],"source":"The `_getpid` function obtains the process ID from the system."},{"content":"The process ID uniquely identifies the calling process.","pos":[1486,1541]},{"content":"Requirements","pos":[1550,1562]},{"content":"Routine","pos":[1569,1576]},{"content":"Required header","pos":[1577,1592]},{"content":"process.h&gt;","pos":[1649,1659],"source":"process.h>"},{"pos":[1667,1765],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":"Example","pos":[1774,1781]},{"content":".NET Framework Equivalent","pos":[2186,2211]},{"content":"System::Diagnostics::Process::Id","pos":[2216,2248]},{"content":"See Also","pos":[2335,2343]},{"content":"Process and Environment Control","pos":[2348,2379]},{"content":"_mktemp, _wmktemp","pos":[2446,2463]}],"content":"---\ntitle: \"_getpid | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_getpid\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-runtime-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_getpid\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"getpid function\"\n  - \"_getpid function\"\n  - \"process identification numbers\"\nms.assetid: d3e13bae-9a0c-4f33-86d3-ec9df9519285\ncaps.latest.revision: 20\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _getpid\nGets the process identification.  \n  \n> [!IMPORTANT]\n>  This API cannot be used in applications that execute in the Windows Runtime. For more information, see                  [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \nint _getpid( void );  \n```  \n  \n## Return Value  \n Returns the process ID obtained from the system. There is no error return.  \n  \n## Remarks  \n The `_getpid` function obtains the process ID from the system. The process ID uniquely identifies the calling process.  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_getpid`|\\<process.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```  \n// crt_getpid.c  \n// This program uses _getpid to obtain  \n// the process ID and then prints the ID.  \n  \n#include <stdio.h>  \n#include <process.h>  \n  \nint main( void )  \n{  \n   // If run from command line, shows different ID for   \n   // command line than for operating system shell.  \n  \n   printf( \"Process id: %d\\n\", _getpid() );  \n}  \n```  \n  \n```Output  \nProcess id: 3584  \n```  \n  \n## .NET Framework Equivalent  \n [System::Diagnostics::Process::Id](https://msdn.microsoft.com/en-us/library/system.diagnostics.process.id.aspx)  \n  \n## See Also  \n [Process and Environment Control](../../c-runtime-library/process-and-environment-control.md)   \n [_mktemp, _wmktemp](../../c-runtime-library/reference/mktemp-wmktemp.md)"}