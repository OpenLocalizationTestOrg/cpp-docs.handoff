{"nodes":[{"pos":[12,49],"content":"Compiler Error C2919 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C2919 | Microsoft Docs","pos":[0,37]}]},{"content":"Compiler Error C2919","pos":[598,618]},{"content":"'type': Operators cannot be used on the published surface of a WinRT type","pos":[619,692]},{"content":"The Windows Runtime type system does not support operator member functions in the published surface of a type.","pos":[699,809]},{"content":"This is because not all languages can consume operator member functions.","pos":[810,882]},{"content":"You can create private or internal operator member functions that can be called from C++ code in the same class or compilation unit.","pos":[883,1015]},{"content":"To fix this issue, remove the operator member function from the public interface, or change it to a named member function.","pos":[1022,1144]},{"content":"For example, instead of <ph id=\"ph1\">`operator==`</ph>, name the member function <ph id=\"ph2\">`Equals`</ph>.","pos":[1145,1217],"source":" For example, instead of `operator==`, name the member function `Equals`."}],"content":"---\ntitle: \"Compiler Error C2919 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C2919\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C2919\"\nms.assetid: 140a6db9-eb48-4c5e-84a7-a09d2653605b\ncaps.latest.revision: 13\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Error C2919\n'type': Operators cannot be used on the published surface of a WinRT type  \n  \n The Windows Runtime type system does not support operator member functions in the published surface of a type. This is because not all languages can consume operator member functions. You can create private or internal operator member functions that can be called from C++ code in the same class or compilation unit.  \n  \n To fix this issue, remove the operator member function from the public interface, or change it to a named member function. For example, instead of `operator==`, name the member function `Equals`."}