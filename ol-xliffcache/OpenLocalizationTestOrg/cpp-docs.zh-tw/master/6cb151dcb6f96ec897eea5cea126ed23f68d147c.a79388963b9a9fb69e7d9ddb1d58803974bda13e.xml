{"nodes":[{"pos":[12,49],"content":"Compiler Error C3069 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C3069 | Microsoft Docs","pos":[0,37]}]},{"content":"Compiler Error C3069","pos":[618,638]},{"content":"'operator': not allowed for enumeration type","pos":[639,683]},{"content":"An operator is not supported for CLR enumerations.","pos":[690,740]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Define and consume enums in C++/CLI<ept id=\"p1\">](../../dotnet/how-to-define-and-consume-enums-in-cpp-cli.md)</ept>.","pos":[742,874],"source":"  For more information, see [How to: Define and consume enums in C++/CLI](../../dotnet/how-to-define-and-consume-enums-in-cpp-cli.md)."},{"content":"Example","pos":[883,890]},{"content":"The following sample generates C3069:","pos":[894,931]}],"content":"---\ntitle: \"Compiler Error C3069 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"C3069\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C3069\"\nms.assetid: ca94291b-2bb4-4e3f-9acf-534234b83513\ncaps.latest.revision: 7\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Compiler Error C3069\n'operator': not allowed for enumeration type  \n  \n An operator is not supported for CLR enumerations.  For more information, see [How to: Define and consume enums in C++/CLI](../../dotnet/how-to-define-and-consume-enums-in-cpp-cli.md).  \n  \n## Example  \n The following sample generates C3069:  \n  \n```  \n// C3069.cpp  \n// compile with: /clr  \nenum struct E { e1 };  \nenum F { f1 };  \n  \nint main() {  \n   E e = E::e1;  \n   bool tf;  \n   tf = !e;   // C3069  \n  \n   // supported for native enums  \n   F f = f1;  \n   tf = !f;  \n}  \n```"}