{"nodes":[{"pos":[12,48],"content":"ArgTraits Structure | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ArgTraits Structure | Microsoft Docs","pos":[0,36]}]},{"content":"ArgTraits Structure","pos":[665,684]},{"content":"Supports the WRL infrastructure and is not intended to be used directly from your code.","pos":[685,772]},{"content":"Syntax","pos":[781,787]},{"content":"Parameters","pos":[3345,3355]},{"content":"Typename parameter for an ArgTraits structure that cannot match any Invoke method signature.","pos":[3380,3472]},{"content":"A delegate interface.","pos":[3503,3524]},{"content":"The type of the first argument of the Invoke method.","pos":[3542,3594]},{"content":"The type of the second argument of the Invoke method.","pos":[3612,3665]},{"content":"The type of the third argument of the Invoke method.","pos":[3683,3735]},{"content":"The type of the fourth argument of the Invoke method.","pos":[3753,3806]},{"content":"The type of the fifth argument of the Invoke method.","pos":[3824,3876]},{"content":"The type of the sixth argument of the Invoke method.","pos":[3894,3946]},{"content":"The type of the seventh argument of the Invoke method.","pos":[3964,4018]},{"content":"The type of the eigth argument of the Invoke method.","pos":[4036,4088]},{"content":"The type of the ninth argument of the Invoke method.","pos":[4106,4158]},{"content":"Remarks","pos":[4167,4174]},{"pos":[4178,4319],"content":"The <ph id=\"ph1\">`ArgTraits`</ph> structure declares a specified delegate interface and an anonymous member function that has a specified number of parameters.","source":"The `ArgTraits` structure declares a specified delegate interface and an anonymous member function that has a specified number of parameters."},{"content":"Members","pos":[4328,4335]},{"content":"Public Typedefs","pos":[4345,4360]},{"content":"Name","pos":[4367,4371]},{"content":"Description","pos":[4372,4383]},{"content":"The typedef for TArg1.","pos":[4432,4454]},{"content":"The typedef for TArg2.","pos":[4470,4492]},{"content":"The typedef for TArg3.","pos":[4508,4530]},{"content":"The typedef for TArg4.","pos":[4546,4568]},{"content":"The typedef for TArg5.","pos":[4584,4606]},{"content":"The typedef for TArg6.","pos":[4622,4644]},{"content":"The typedef for TArg7.","pos":[4660,4682]},{"content":"The typedef for TArg8.","pos":[4698,4720]},{"content":"The typedef for TArg9.","pos":[4736,4758]},{"content":"Public Constants","pos":[4769,4785]},{"content":"Name","pos":[4792,4796]},{"content":"Description","pos":[4797,4808]},{"content":"ArgTraits::args Constant","pos":[4847,4871]},{"content":"Keeps count of the number of parameters on the Invoke method of a delegate interface.","pos":[4912,4997]},{"content":"Inheritance Hierarchy","pos":[5007,5028]},{"content":"Requirements","pos":[5052,5064]},{"pos":[5068,5087],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> event.h","source":"**Header:** event.h"},{"pos":[5094,5132],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> Microsoft::WRL::Details","source":"**Namespace:** Microsoft::WRL::Details"},{"content":"See Also","pos":[5141,5149]},{"content":"Microsoft::WRL::Details Namespace","pos":[5154,5187]}],"content":"---\ntitle: \"ArgTraits Structure | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"event/Microsoft::WRL::Details::ArgTraits\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ArgTraits structure\"\nms.assetid: 58ae4115-c1bc-48c8-b01b-e60554841c30\ncaps.latest.revision: 5\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# ArgTraits Structure\nSupports the WRL infrastructure and is not intended to be used directly from your code.  \n  \n## Syntax  \n  \n```  \ntemplate<  \n   typename TMemberFunction  \n>  \nstruct ArgTraits;  \ntemplate<  \n   typename TDelegateInterface  \n>  \nstruct ArgTraits<HRESULT (STDMETHODCALLTYPE TDelegateInterface::*)(void)>;  \ntemplate<  \n   typename TDelegateInterface,  \n   typename TArg1  \n>  \nstruct ArgTraits<HRESULT (STDMETHODCALLTYPE TDelegateInterface::*)(TArg1)>;  \ntemplate<  \n   typename TDelegateInterface,  \n   typename TArg1,  \n   typename TArg2  \n>  \nstruct ArgTraits<HRESULT (STDMETHODCALLTYPE TDelegateInterface::*)(TArg1, TArg2)>;  \ntemplate<  \n   typename TDelegateInterface,  \n   typename TArg1,  \n   typename TArg2,  \n   typename TArg3  \n>  \nstruct ArgTraits<HRESULT (STDMETHODCALLTYPE TDelegateInterface::*)(TArg1, TArg2, TArg3)>;  \ntemplate<  \n   typename TDelegateInterface,  \n   typename TArg1,  \n   typename TArg2,  \n   typename TArg3,  \n   typename TArg4  \n>  \nstruct ArgTraits<HRESULT (STDMETHODCALLTYPE TDelegateInterface::*)(TArg1, TArg2, TArg3, TArg4)>;  \ntemplate<  \n   typename TDelegateInterface,  \n   typename TArg1,  \n   typename TArg2,  \n   typename TArg3,  \n   typename TArg4,  \n   typename TArg5  \n>  \nstruct ArgTraits<HRESULT (STDMETHODCALLTYPE TDelegateInterface::*)(TArg1, TArg2, TArg3, TArg4, TArg5)>;  \ntemplate<  \n   typename TDelegateInterface,  \n   typename TArg1,  \n   typename TArg2,  \n   typename TArg3,  \n   typename TArg4,  \n   typename TArg5,  \n   typename TArg6  \n>  \nstruct ArgTraits<HRESULT (STDMETHODCALLTYPE TDelegateInterface::*)(TArg1, TArg2, TArg3, TArg4, TArg5, TArg6)>;  \ntemplate<  \n   typename TDelegateInterface,  \n   typename TArg1,  \n   typename TArg2,  \n   typename TArg3,  \n   typename TArg4,  \n   typename TArg5,  \n   typename TArg6,  \n   typename TArg7  \n>  \nstruct ArgTraits<HRESULT (STDMETHODCALLTYPE TDelegateInterface::*)(TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7)>;  \ntemplate<  \n   typename TDelegateInterface,  \n   typename TArg1,  \n   typename TArg2,  \n   typename TArg3,  \n   typename TArg4,  \n   typename TArg5,  \n   typename TArg6,  \n   typename TArg7,  \n   typename TArg8  \n>  \nstruct ArgTraits<HRESULT (STDMETHODCALLTYPE TDelegateInterface::*)(TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8)>;  \ntemplate<  \n   typename TDelegateInterface,  \n   typename TArg1,  \n   typename TArg2,  \n   typename TArg3,  \n   typename TArg4,  \n   typename TArg5,  \n   typename TArg6,  \n   typename TArg7,  \n   typename TArg8,  \n   typename TArg9  \n>  \nstruct ArgTraits<HRESULT (STDMETHODCALLTYPE TDelegateInterface::*)(TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9)>;  \n```  \n  \n#### Parameters  \n `TMemberFunction`  \n Typename parameter for an ArgTraits structure that cannot match any Invoke method signature.  \n  \n `TDelegateInterface`  \n A delegate interface.  \n  \n `TArg1`  \n The type of the first argument of the Invoke method.  \n  \n `TArg2`  \n The type of the second argument of the Invoke method.  \n  \n `TArg3`  \n The type of the third argument of the Invoke method.  \n  \n `TArg4`  \n The type of the fourth argument of the Invoke method.  \n  \n `TArg5`  \n The type of the fifth argument of the Invoke method.  \n  \n `TArg6`  \n The type of the sixth argument of the Invoke method.  \n  \n `TArg7`  \n The type of the seventh argument of the Invoke method.  \n  \n `TArg8`  \n The type of the eigth argument of the Invoke method.  \n  \n `TArg9`  \n The type of the ninth argument of the Invoke method.  \n  \n## Remarks  \n The `ArgTraits` structure declares a specified delegate interface and an anonymous member function that has a specified number of parameters.  \n  \n## Members  \n  \n### Public Typedefs  \n  \n|Name|Description|  \n|----------|-----------------|  \n|`Arg1Type`|The typedef for TArg1.|  \n|`Arg2Type`|The typedef for TArg2.|  \n|`Arg3Type`|The typedef for TArg3.|  \n|`Arg4Type`|The typedef for TArg4.|  \n|`Arg5Type`|The typedef for TArg5.|  \n|`Arg6Type`|The typedef for TArg6.|  \n|`Arg7Type`|The typedef for TArg7.|  \n|`Arg8Type`|The typedef for TArg8.|  \n|`Arg9Type`|The typedef for TArg9.|  \n  \n### Public Constants  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[ArgTraits::args Constant](../windows/argtraits-args-constant.md)|Keeps count of the number of parameters on the Invoke method of a delegate interface.|  \n  \n## Inheritance Hierarchy  \n `ArgTraits`  \n  \n## Requirements  \n **Header:** event.h  \n  \n **Namespace:** Microsoft::WRL::Details  \n  \n## See Also  \n [Microsoft::WRL::Details Namespace](../windows/microsoft-wrl-details-namespace.md)"}