{"nodes":[{"pos":[12,53],"content":"is_copy_assignable Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"is_copy_assignable Class | Microsoft Docs","pos":[0,41]}]},{"content":"is_copy_assignable Class","pos":[721,745]},{"content":"Tests whether type has can be copied on assignment.","pos":[746,797]},{"content":"Syntax","pos":[806,812]},{"content":"Parameters","pos":[883,893]},{"content":"The type to query.","pos":[905,923]},{"content":"Remarks","pos":[932,939]},{"content":"An instance of the type predicate holds true if the type <ph id=\"ph1\">`Ty`</ph> is a class that has a copy assignment operator, otherwise it holds false.","pos":[943,1078],"source":"An instance of the type predicate holds true if the type `Ty` is a class that has a copy assignment operator, otherwise it holds false."},{"content":"Equivalent to is_assignable<ph id=\"ph1\">\\&lt;</ph>Ty&amp;, const Ty&amp;&gt;.","pos":[1079,1124],"source":" Equivalent to is_assignable\\<Ty&, const Ty&>."},{"content":"Requirements","pos":[1133,1145]},{"pos":[1149,1174],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> &lt;type_traits&gt;","source":"**Header:** <type_traits>"},{"pos":[1181,1199],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"content":"See Also","pos":[1208,1216]},{"content":"&lt;type_traits&gt;","pos":[1221,1234],"source":"<type_traits>"}],"content":"---\ntitle: \"is_copy_assignable Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"is_copy_assignable\"\n  - \"std.is_copy_assignable\"\n  - \"std::is_copy_assignable\"\n  - \"type_traits/std::is_copy_assignable\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"is_copy_assignable\"\nms.assetid: 3ae6bca1-85fb-4829-9ee9-0183b081ff50\ncaps.latest.revision: 12\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# is_copy_assignable Class\nTests whether type has can be copied on assignment.  \n  \n## Syntax  \n  \n```\ntemplate <class Ty>\nstruct is_copy_assignable;\n```  \n  \n#### Parameters  \n `Ty`  \n The type to query.  \n  \n## Remarks  \n An instance of the type predicate holds true if the type `Ty` is a class that has a copy assignment operator, otherwise it holds false. Equivalent to is_assignable\\<Ty&, const Ty&>.  \n  \n## Requirements  \n **Header:** <type_traits>  \n  \n **Namespace:** std  \n  \n## See Also  \n [<type_traits>](../standard-library/type-traits.md)\n\n\n\n"}