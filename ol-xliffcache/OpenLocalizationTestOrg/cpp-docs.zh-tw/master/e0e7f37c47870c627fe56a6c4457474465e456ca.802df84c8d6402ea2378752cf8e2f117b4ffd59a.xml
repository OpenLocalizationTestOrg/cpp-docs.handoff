{"nodes":[{"pos":[12,44],"content":"Using Bookmarks | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Using Bookmarks | Microsoft Docs","pos":[0,32]}]},{"content":"Using Bookmarks","pos":[679,694]},{"content":"Before you open the rowset, you must tell the provider that you want to use bookmarks.","pos":[695,781]},{"content":"To do this, set the <bpt id=\"p1\">**</bpt>DBPROP_BOOKMARKS<ept id=\"p1\">**</ept> property to <bpt id=\"p2\">**</bpt>true<ept id=\"p2\">**</ept> in your property set.","pos":[782,865],"source":" To do this, set the **DBPROP_BOOKMARKS** property to **true** in your property set."},{"content":"The provider retrieves bookmarks as column zero, so you must use the special macro <ph id=\"ph1\">`BOOKMARK_ENTRY`</ph> and the <ph id=\"ph2\">`CBookmark`</ph> class if you are using a static accessor.","pos":[866,1027],"source":" The provider retrieves bookmarks as column zero, so you must use the special macro `BOOKMARK_ENTRY` and the `CBookmark` class if you are using a static accessor."},{"content":"is a template class where the argument is the length in bytes of the bookmark buffer.","pos":[1040,1125]},{"content":"The length of the buffer required for a bookmark depends on the provider.","pos":[1126,1199]},{"content":"If you are using the ODBC OLE DB provider, as shown in the following example, the buffer must be 4 bytes.","pos":[1200,1305]},{"content":"If you use <ph id=\"ph1\">`CDynamicAccessor`</ph>, the buffer is dynamically allocated at run time.","pos":[1666,1745],"source":"If you use `CDynamicAccessor`, the buffer is dynamically allocated at run time."},{"content":"In this case, you can use a specialized version of <ph id=\"ph1\">`CBookmark`</ph> for which you do not specify a buffer length.","pos":[1746,1854],"source":" In this case, you can use a specialized version of `CBookmark` for which you do not specify a buffer length."},{"content":"Use the function <ph id=\"ph1\">`GetBookmark`</ph> to retrieve the bookmark from the current record, as shown in this code sample:","pos":[1855,1965],"source":" Use the function `GetBookmark` to retrieve the bookmark from the current record, as shown in this code sample:"},{"pos":[2253,2399],"content":"For information about supporting bookmarks in providers, see <bpt id=\"p1\">[</bpt>Provider Support for Bookmarks<ept id=\"p1\">](../../data/oledb/provider-support-for-bookmarks.md)</ept>.","source":"For information about supporting bookmarks in providers, see [Provider Support for Bookmarks](../../data/oledb/provider-support-for-bookmarks.md)."},{"content":"See Also","pos":[2408,2416]},{"content":"Using Accessors","pos":[2421,2436]}],"content":"---\ntitle: \"Using Bookmarks | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"rowsets, bookmarks\"\n  - \"OLE DB provider templates, bookmarks\"\n  - \"bookmarks, OLE DB\"\n  - \"OLE DB providers, bookmark support\"\nms.assetid: 7fa1d1a8-5063-4aa9-93ee-815bb9c98fae\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Using Bookmarks\nBefore you open the rowset, you must tell the provider that you want to use bookmarks. To do this, set the **DBPROP_BOOKMARKS** property to **true** in your property set. The provider retrieves bookmarks as column zero, so you must use the special macro `BOOKMARK_ENTRY` and the `CBookmark` class if you are using a static accessor. `CBookmark` is a template class where the argument is the length in bytes of the bookmark buffer. The length of the buffer required for a bookmark depends on the provider. If you are using the ODBC OLE DB provider, as shown in the following example, the buffer must be 4 bytes.  \n  \n```  \nclass CProducts  \n{  \npublic:  \n   CBookmark<4>   bookmark;  \n  \n   BEGIN_COLUMN_MAP(CProducts)  \n      BOOKMARK_ENTRY(bookmark)  \n   END_COLUMN_MAP()  \n};  \n  \nCDBPropSet propset(DBPROPSET_ROWSET);  \npropset.AddProperty(DBPROP_BOOKMARKS, true);  \n  \nCTable<CAccessor<CProducts> > product;  \nproduct.Open(session, \"Products\", &propset);  \n```  \n  \n If you use `CDynamicAccessor`, the buffer is dynamically allocated at run time. In this case, you can use a specialized version of `CBookmark` for which you do not specify a buffer length. Use the function `GetBookmark` to retrieve the bookmark from the current record, as shown in this code sample:  \n  \n```  \nCTable<CDynamicAccessor> product;  \nCBookmark<>              bookmark;  \nCDBPropSet propset(DBPROPSET_ROWSET);  \n  \npropset.AddProperty(DBPROP_BOOKMARKS, true);  \nproduct.Open(session, \"Products\", &propset);  \nproduct.MoveNext();  \nproduct.GetBookmark(&bookmark);  \n```  \n  \n For information about supporting bookmarks in providers, see [Provider Support for Bookmarks](../../data/oledb/provider-support-for-bookmarks.md).  \n  \n## See Also  \n [Using Accessors](../../data/oledb/using-accessors.md)"}