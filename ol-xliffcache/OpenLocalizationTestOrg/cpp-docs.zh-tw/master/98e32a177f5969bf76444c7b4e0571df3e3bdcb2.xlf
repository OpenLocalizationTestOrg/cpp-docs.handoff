<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">98e32a177f5969bf76444c7b4e0571df3e3bdcb2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\build\build-system-changes.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8c7c138865d2e1d1b4e6fc286cbff00821624033</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e23b72ecec5b93ddcad2d870aed1c829a3ed737f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Build System Changes | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Build System Changes</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The MSBuild system is used to build Visual C++ projects.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>However, in Visual Studio 2008 and earlier releases, the VCBuild system was used.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Certain file types and concepts that depended on VCBuild either do not exist or are represented differently in the current system.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This document discusses the differences in the current build system.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>.vcproj is now .vcxproj</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Project files no longer use the .vcproj file name extension.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Visual Studio automatically converts project files that were created by an earlier release of Visual C++ to the format that is used by the current system.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information about how to manually upgrade a project, see <bpt id="p1">[</bpt>/Upgrade (devenv.exe)<ept id="p1">](/visualstudio/ide/reference/upgrade-devenv-exe)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In the current release, the file name extension for a project file is .vcxproj.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>.vsprops is now .props</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In earlier releases, a <bpt id="p1">*</bpt>project property sheet<ept id="p1">*</ept> is an XML-based file that has a .vsprops file name extension.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A project property sheet lets you specify switches for build tools such as the compiler or linker and create user-defined macros.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In the current release, the file name extension for a project property sheet is .props.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Custom Build Rules and .rules Files</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In earlier releases, a <bpt id="p1">*</bpt>rule file<ept id="p1">*</ept> is an XML-based file that has a .rules file name extension.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A rule file lets you define custom build rules and incorporate them into the build process of a Visual C++ project.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A custom build rule, which can be associated with one or more file name extensions, lets you pass input files to a tool that creates one or more output files.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In this release, custom build rules are represented by three file types, .xml, .props, and .targets, instead of a .rules file.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When a .rules file that was created by using an earlier release of Visual C++ is migrated to the current release, equivalent .xml, .props, and .targets files are created and stored in your project together with the original .rules file.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In the current release, the <ph id="ph1">[!INCLUDE[TLA2#tla_ide](../build/includes/tla2sharptla_ide_md.md)]</ph> does not support the creation of new rules.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For that reason, the easiest way to use a rule file from a project that was created by using an earlier release of Visual C++ is to migrate the project to the current release.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Inheritance Macros</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In earlier releases, the <bpt id="p1">**</bpt>$(Inherit)<ept id="p1">**</ept> macro specifies the order in which inherited properties appear on the command line that is composed by the project build system.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>$(NoInherit)<ept id="p1">**</ept> macro causes any occurrences of $(Inherit) to be ignored and causes any properties that would otherwise be inherited, not to be inherited.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For example, by default the $(Inherit) macro causes files specified by using the <bpt id="p1">[</bpt>/I (Additional Include Directories)<ept id="p1">](../build/reference/i-additional-include-directories.md)</ept> compiler option to be appended to the command line.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In the current release, inheritance is supported by specifying the value of a property as the concatenation of one or more literal values and property macros.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>$(Inherit)<ept id="p1">**</ept> and <bpt id="p2">**</bpt>$(NoInherit)<ept id="p2">**</ept> macros are not supported.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In the following example, a semicolon-delimited list is assigned to a property on a property page.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The list consists of the concatenation of the <bpt id="p1">*</bpt><ph id="ph1">\&lt;</ph>value&gt;<ept id="p1">*</ept> literal and the value of the <ph id="ph2">`MyProperty`</ph> property, which is accessed by using the macro notation, <bpt id="p2">**</bpt>$(<ept id="p2">**</ept><bpt id="p3">*</bpt>MyProperty<ept id="p3">*</ept><bpt id="p4">**</bpt>)<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>.vcxproj.user Files</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A user file (.vcxproj.user) stores user-specific properties, for example, debugging and deployment settings.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The vcxproj.user file applies to all projects for a particular user.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>.vcxproj.filters File</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> is used to add a file to a project, the filters file (.vcxproj.filters) defines where in the <bpt id="p2">**</bpt>Solution Explorer<ept id="p2">**</ept> tree view the file is added, based on its file name extension.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>VC++ Directories Settings</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Visual C++ directories settings are specified on the <bpt id="p1">[</bpt>VC++ Directories Property Page<ept id="p1">](../ide/vcpp-directories-property-page.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In earlier releases of Visual Studio, directories settings apply per-user and the list of excluded directories is specified in the sysincl.dat file.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You cannot change the VC++ directories settings if you run <bpt id="p1">[</bpt>devenv /resetsettings<ept id="p1">](/visualstudio/ide/reference/resetsettings-devenv-exe)</ept> at the command line.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You also cannot change the settings if you open the <bpt id="p1">**</bpt>Tools<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Import and Export Settings<ept id="p2">**</ept>, and then select the <bpt id="p3">**</bpt>Reset all settings<ept id="p3">**</ept> option.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Migrate VC++ directories settings from a .vssettings file that is created by an earlier release of Visual C++.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">**</bpt>Tools<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Import and Export Settings<ept id="p2">**</ept>, select <bpt id="p3">**</bpt>Import selected environment settings<ept id="p3">**</ept>, and then follow the directions in the wizard.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Or when you start Visual Studio for the first time, on the <bpt id="p1">**</bpt>Choose Default Environment Settings<ept id="p1">**</ept> dialog box, select <bpt id="p2">**</bpt>Migrate my eligible settings from a previous version and apply them in addition to the default settings selected below<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>MSBuild (Visual C++)</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>