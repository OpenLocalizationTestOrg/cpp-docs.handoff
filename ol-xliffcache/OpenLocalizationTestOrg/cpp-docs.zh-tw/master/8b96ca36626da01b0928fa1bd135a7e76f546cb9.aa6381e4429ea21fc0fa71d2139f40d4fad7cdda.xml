{"nodes":[{"pos":[12,67],"content":"Application and Thread Support Classes | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Application and Thread Support Classes | Microsoft Docs","pos":[0,55]}]},{"content":"Application and Thread Support Classes","pos":[827,865]},{"pos":[866,1015],"content":"Each application has one and only one application object; this object coordinates other objects in the running program and is derived from <ph id=\"ph1\">`CWinApp`</ph>.","source":"Each application has one and only one application object; this object coordinates other objects in the running program and is derived from `CWinApp`."},{"content":"The Microsoft Foundation Class (MFC) Library supports multiple threads of execution within an application.","pos":[1022,1128]},{"content":"All applications must have at least one thread; the thread used by your <ph id=\"ph1\">`CWinApp`</ph> object is this primary thread.","pos":[1129,1241],"source":" All applications must have at least one thread; the thread used by your `CWinApp` object is this primary thread."},{"content":"encapsulates a portion of the operating system's threading capabilities.","pos":[1261,1333]},{"content":"To make using multiple threads easier, MFC also provides synchronization object classes to provide a C++ interface to Win32 synchronization objects.","pos":[1334,1482]},{"content":"Application and Thread Classes","pos":[1491,1521]},{"content":"CWinApp","pos":[1526,1533]},{"content":"Encapsulates the code to initialize, run, and terminate the application.","pos":[1573,1645]},{"content":"You will derive your application object from this class.","pos":[1646,1702]},{"content":"CWinThread","pos":[1710,1720]},{"content":"The base class for all threads.","pos":[1763,1794]},{"content":"Use directly, or derive a class from <ph id=\"ph1\">`CWinThread`</ph> if your thread performs user-interface functions.","pos":[1795,1894],"source":" Use directly, or derive a class from `CWinThread` if your thread performs user-interface functions."},{"content":"is derived from <ph id=\"ph1\">`CWinThread`</ph>.","pos":[1905,1934],"source":" is derived from `CWinThread`."},{"content":"Synchronization Object Classes","pos":[1943,1973]},{"content":"CSyncObject","pos":[1978,1989]},{"content":"Base class of the synchronization object classes.","pos":[2033,2082]},{"content":"CCriticalSection","pos":[2090,2106]},{"content":"A synchronization class that allows only one thread within a single process to access an object.","pos":[2155,2251]},{"content":"CSemaphore","pos":[2259,2269]},{"content":"A synchronization class that allows between one and a specified maximum number of simultaneous accesses to an object.","pos":[2312,2429]},{"content":"CMutex","pos":[2437,2443]},{"content":"A synchronization class that allows only one thread within any number of processes to access an object.","pos":[2482,2585]},{"content":"CEvent","pos":[2593,2599]},{"content":"A synchronization class that notifies an application when an event has occurred.","pos":[2638,2718]},{"content":"CSingleLock","pos":[2726,2737]},{"content":"Used in member functions of thread-safe classes to lock on one synchronization object.","pos":[2781,2867]},{"content":"CMultiLock","pos":[2875,2885]},{"content":"Used in member functions of thread-safe classes to lock on one or more synchronization objects from an array of synchronization objects.","pos":[2928,3064]},{"content":"Related Classes","pos":[3073,3088]},{"content":"CCommandLineInfo","pos":[3093,3109]},{"content":"Parses the command line with which your program was started.","pos":[3158,3218]},{"content":"CWaitCursor","pos":[3226,3237]},{"content":"Puts a wait cursor on the screen.","pos":[3281,3314]},{"content":"Used during lengthy operations.","pos":[3315,3346]},{"content":"CDockState","pos":[3354,3364]},{"content":"Handles persistent storage of docking state data for control bars.","pos":[3407,3473]},{"content":"CRecentFileList","pos":[3481,3496]},{"content":"Maintains the most recently used (MRU) file list.","pos":[3544,3593]},{"content":"See Also","pos":[3602,3610]},{"content":"Class Overview","pos":[3615,3629]}],"content":"---\ntitle: \"Application and Thread Support Classes | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"vc.classes.support\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"application objects [C++], thread support classes\"\n  - \"lock classes\"\n  - \"thread support classes [C++]\"\n  - \"threading [MFC]\"\n  - \"synchronization classes, multithreading\"\n  - \"application support classes [C++]\"\nms.assetid: 3c1d14fd-c35c-48f1-86ce-1e0f9a32c36d\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Application and Thread Support Classes\nEach application has one and only one application object; this object coordinates other objects in the running program and is derived from `CWinApp`.  \n  \n The Microsoft Foundation Class (MFC) Library supports multiple threads of execution within an application. All applications must have at least one thread; the thread used by your `CWinApp` object is this primary thread.  \n  \n `CWinThread` encapsulates a portion of the operating system's threading capabilities. To make using multiple threads easier, MFC also provides synchronization object classes to provide a C++ interface to Win32 synchronization objects.  \n  \n## Application and Thread Classes  \n [CWinApp](../mfc/reference/cwinapp-class.md)  \n Encapsulates the code to initialize, run, and terminate the application. You will derive your application object from this class.  \n  \n [CWinThread](../mfc/reference/cwinthread-class.md)  \n The base class for all threads. Use directly, or derive a class from `CWinThread` if your thread performs user-interface functions. `CWinApp` is derived from `CWinThread`.  \n  \n## Synchronization Object Classes  \n [CSyncObject](../mfc/reference/csyncobject-class.md)  \n Base class of the synchronization object classes.  \n  \n [CCriticalSection](../mfc/reference/ccriticalsection-class.md)  \n A synchronization class that allows only one thread within a single process to access an object.  \n  \n [CSemaphore](../mfc/reference/csemaphore-class.md)  \n A synchronization class that allows between one and a specified maximum number of simultaneous accesses to an object.  \n  \n [CMutex](../mfc/reference/cmutex-class.md)  \n A synchronization class that allows only one thread within any number of processes to access an object.  \n  \n [CEvent](../mfc/reference/cevent-class.md)  \n A synchronization class that notifies an application when an event has occurred.  \n  \n [CSingleLock](../mfc/reference/csinglelock-class.md)  \n Used in member functions of thread-safe classes to lock on one synchronization object.  \n  \n [CMultiLock](../mfc/reference/cmultilock-class.md)  \n Used in member functions of thread-safe classes to lock on one or more synchronization objects from an array of synchronization objects.  \n  \n## Related Classes  \n [CCommandLineInfo](../mfc/reference/ccommandlineinfo-class.md)  \n Parses the command line with which your program was started.  \n  \n [CWaitCursor](../mfc/reference/cwaitcursor-class.md)  \n Puts a wait cursor on the screen. Used during lengthy operations.  \n  \n [CDockState](../mfc/reference/cdockstate-class.md)  \n Handles persistent storage of docking state data for control bars.  \n  \n [CRecentFileList](../mfc/reference/crecentfilelist-class.md)  \n Maintains the most recently used (MRU) file list.  \n  \n## See Also  \n [Class Overview](../mfc/class-library-overview.md)\n\n"}