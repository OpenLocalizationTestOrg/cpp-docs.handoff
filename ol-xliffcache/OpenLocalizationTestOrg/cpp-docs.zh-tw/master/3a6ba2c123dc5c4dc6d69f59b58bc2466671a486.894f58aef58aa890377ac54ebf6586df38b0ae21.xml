{"nodes":[{"pos":[12,62],"content":"list::generic_container (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"list::generic_container (STL-CLR) | Microsoft Docs","pos":[0,50]}]},{"content":"list::generic_container (STL/CLR)","pos":[660,693]},{"content":"The type of the generic interface for the container.","pos":[694,746]},{"content":"Syntax","pos":[755,761]},{"content":"Remarks","pos":[876,883]},{"content":"The type describes the generic interface for this template container class.","pos":[887,962]},{"content":"Example","pos":[971,978]},{"content":"Requirements","pos":[2195,2207]},{"pos":[2211,2237],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/list&gt;","source":"**Header:** \\<cliext/list>"},{"pos":[2244,2265],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2274,2282]},{"content":"&lt;xref:Microsoft.VisualC.StlClr.IList%601&gt;","pos":[2286,2327],"source":"<xref:Microsoft.VisualC.StlClr.IList%601> "},{"content":"list (STL/CLR)","pos":[2333,2347]},{"content":"list::generic_iterator (STL/CLR)","pos":[2381,2413]},{"content":"list::generic_reverse_iterator (STL/CLR)","pos":[2464,2504]},{"content":"list::generic_value (STL/CLR)","pos":[2563,2592]}],"content":"---\ntitle: \"list::generic_container (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::list::generic_container\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"generic_container member [STL/CLR]\"\nms.assetid: 1a8b708e-3c75-4551-a86e-5b50d6be706a\ncaps.latest.revision: 15\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# list::generic_container (STL/CLR)\nThe type of the generic interface for the container.  \n  \n## Syntax  \n  \n```  \ntypedef Microsoft::VisualC::StlClr::  \n    IList<generic_value>  \n    generic_container;  \n```  \n  \n## Remarks  \n The type describes the generic interface for this template container class.  \n  \n## Example  \n  \n```  \n// cliext_list_generic_container.cpp   \n// compile with: /clr   \n#include <cliext/list>   \n  \nint main()   \n    {   \n    cliext::list<wchar_t> c1;   \n    c1.push_back(L'a');   \n    c1.push_back(L'b');   \n    c1.push_back(L'c');   \n  \n// display contents \" a b c\"   \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// construct a generic container   \n    cliext::list<wchar_t>::generic_container^ gc1 = %c1;   \n    for each (wchar_t elem in gc1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// modify generic and display original   \n    gc1->insert(gc1->end(), L'd');   \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// modify original and display generic   \n    c1.push_back(L'e');   \n  \n    System::Collections::IEnumerator^ enum1 =   \n        gc1->GetEnumerator();   \n    while (enum1->MoveNext())   \n        System::Console::Write(\" {0}\", enum1->Current);   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \na b c  \na b c  \na b c d  \na b c d e  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/list>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n <xref:Microsoft.VisualC.StlClr.IList%601>   \n [list (STL/CLR)](../dotnet/list-stl-clr.md)   \n [list::generic_iterator (STL/CLR)](../dotnet/list-generic-iterator-stl-clr.md)   \n [list::generic_reverse_iterator (STL/CLR)](../dotnet/list-generic-reverse-iterator-stl-clr.md)   \n [list::generic_value (STL/CLR)](../dotnet/list-generic-value-stl-clr.md)"}