{"nodes":[{"pos":[12,55],"content":"CDataRecoveryHandler Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CDataRecoveryHandler Class | Microsoft Docs","pos":[0,43]}]},{"content":"CDataRecoveryHandler Class","pos":[634,660]},{"pos":[661,763],"content":"The <ph id=\"ph1\">`CDataRecoveryHandler`</ph> autosaves documents and restores them if an application unexpectedly exits.","source":"The `CDataRecoveryHandler` autosaves documents and restores them if an application unexpectedly exits."},{"content":"Syntax","pos":[772,778]},{"content":"Members","pos":[848,855]},{"content":"Constructors","pos":[865,877]},{"content":"CDataRecoveryHandler::CDataRecoveryHandler","pos":[899,941]},{"pos":[988,1031],"content":"Constructs a <ph id=\"ph1\">`CDataRecoveryHandler`</ph> object.","source":"Constructs a `CDataRecoveryHandler` object."},{"content":"Methods","pos":[1042,1049]},{"content":"CDataRecoveryHandler::AutosaveAllDocumentInfo","pos":[1071,1116]},{"pos":[1166,1235],"content":"Autosaves each file registered with the <ph id=\"ph1\">`CDataRecoveryHandler`</ph> class.","source":"Autosaves each file registered with the `CDataRecoveryHandler` class."},{"content":"CDataRecoveryHandler::AutosaveDocumentInfo","pos":[1241,1283]},{"content":"Autosaves the specified document.","pos":[1330,1363]},{"content":"CDataRecoveryHandler::CreateDocumentInfo","pos":[1369,1409]},{"content":"Adds a document to the list of open documents.","pos":[1454,1500]},{"content":"CDataRecoveryHandler::DeleteAllAutosavedFiles","pos":[1506,1551]},{"content":"Deletes all the current autosaved files.","pos":[1601,1641]},{"content":"CDataRecoveryHandler::DeleteAutosavedFile","pos":[1647,1688]},{"content":"Deletes the specified autosaved file.","pos":[1734,1771]},{"content":"CDataRecoveryHandler::GenerateAutosaveFileName","pos":[1777,1823]},{"content":"Generates the name for an autosave file associated with the supplied document file name.","pos":[1874,1962]},{"content":"CDataRecoveryHandler::GetAutosaveInterval","pos":[1968,2009]},{"content":"Returns the interval between autosave tries.","pos":[2055,2099]},{"content":"CDataRecoveryHandler::GetAutosavePath","pos":[2105,2142]},{"content":"Returns the path of the autosaved files.","pos":[2184,2224]},{"content":"CDataRecoveryHandler::GetDocumentListName","pos":[2230,2271]},{"pos":[2317,2371],"content":"Retrieves the document name from a <ph id=\"ph1\">`CDocument`</ph> object.","source":"Retrieves the document name from a `CDocument` object."},{"content":"CDataRecoveryHandler::GetNormalDocumentTitle","pos":[2377,2421]},{"content":"Retrieves the normal title for the specified document.","pos":[2470,2524]},{"content":"CDataRecoveryHandler::GetRecoveredDocumentTitle","pos":[2530,2577]},{"content":"Creates and returns the title for the recovered document.","pos":[2629,2686]},{"content":"CDataRecoveryHandler::GetRestartIdentifier","pos":[2692,2734]},{"content":"Retrieves the unique restart identifier for the application.","pos":[2781,2841]},{"content":"CDataRecoveryHandler::GetSaveDocumentInfoOnIdle","pos":[2847,2894]},{"pos":[2946,3037],"content":"Indicates whether the <ph id=\"ph1\">`CDataRecoveryHandler`</ph> performs an autosave on the current idle loop.","source":"Indicates whether the `CDataRecoveryHandler` performs an autosave on the current idle loop."},{"content":"CDataRecoveryHandler::GetShutdownByRestartManager","pos":[3043,3092]},{"content":"Indicates whether the restart manager caused the application to exit.","pos":[3146,3215]},{"content":"CDataRecoveryHandler::Initialize","pos":[3221,3253]},{"pos":[3290,3329],"content":"Initializes the <ph id=\"ph1\">`CDataRecoveryHandler`</ph>.","source":"Initializes the `CDataRecoveryHandler`."},{"content":"CDataRecoveryHandler::QueryRestoreAutosavedDocuments","pos":[3335,3387]},{"content":"Displays a dialog box to the user for each document that the <ph id=\"ph1\">`CDataRecoveryHandler`</ph> autosaved.","pos":[3444,3538],"source":"Displays a dialog box to the user for each document that the `CDataRecoveryHandler` autosaved."},{"content":"The dialog box determines whether the user wants to restore the autosaved document.","pos":[3539,3622]},{"content":"CDataRecoveryHandler::ReadOpenDocumentList","pos":[3628,3670]},{"content":"Loads the open document list from the registry.","pos":[3717,3764]},{"content":"CDataRecoveryHandler::RemoveDocumentInfo","pos":[3770,3810]},{"content":"Removes the supplied document from the open document list.","pos":[3855,3913]},{"content":"CDataRecoveryHandler::ReopenPreviousDocuments","pos":[3919,3964]},{"content":"Opens the previously open documents.","pos":[4014,4050]},{"content":"CDataRecoveryHandler::RestoreAutosavedDocuments","pos":[4056,4103]},{"content":"Restores the autosaved documents based on user input.","pos":[4155,4208]},{"content":"CDataRecoveryHandler::SaveOpenDocumentList","pos":[4214,4256]},{"content":"Saves the current list of open documents to the Windows registry.","pos":[4303,4368]},{"content":"CDataRecoveryHandler::SetAutosaveInterval","pos":[4374,4415]},{"content":"Sets the time between autosave cycles in milliseconds.","pos":[4461,4515]},{"content":"CDataRecoveryHandler::SetAutosavePath","pos":[4521,4558]},{"content":"Sets the directory where autosaved files are stored.","pos":[4600,4652]},{"content":"CDataRecoveryHandler::SetRestartIdentifier","pos":[4658,4700]},{"pos":[4747,4830],"content":"Sets the unique restart identifier for this instance of the <ph id=\"ph1\">`CDataRecoveryHandler`</ph>.","source":"Sets the unique restart identifier for this instance of the `CDataRecoveryHandler`."},{"content":"CDataRecoveryHandler::SetSaveDocumentInfoOnIdle","pos":[4836,4883]},{"pos":[4935,5065],"content":"Sets whether the <ph id=\"ph1\">`CDataRecoveryHandler`</ph> saves the open document information to the Windows registry during the current idle cycle.","source":"Sets whether the `CDataRecoveryHandler` saves the open document information to the Windows registry during the current idle cycle."},{"content":"CDataRecoveryHandler::SetShutdownByRestartManager","pos":[5071,5120]},{"content":"Sets whether the previous exit of the application was caused by the restart manager.","pos":[5174,5258]},{"content":"CDataRecoveryHandler::UpdateDocumentInfo","pos":[5264,5304]},{"content":"Updates the information for a document because the user saved it.","pos":[5349,5414]},{"content":"Data Members","pos":[5425,5437]},{"content":"m_bRestoringPreviousOpenDocs","pos":[5458,5486]},{"content":"Indicates whether the data recovery handler reopens previously open documents.","pos":[5487,5565]},{"content":"m_bSaveDocumentInfoOnIdle","pos":[5570,5595]},{"content":"Indicates whether the data recovery handler autosaves documents on the next idle loop.","pos":[5596,5682]},{"content":"m_bShutdownByRestartManager","pos":[5687,5714]},{"content":"Indicates whether the restart manager causes the application to exit.","pos":[5715,5784]},{"content":"m_dwRestartManagerSupportFlags","pos":[5789,5819]},{"content":"Flags that indicate what support the restart manager provides for the application.","pos":[5820,5902]},{"content":"m_lstAutosavesToDelete","pos":[5907,5929]},{"content":"A list of autosaved files that were not deleted when the original documents were closed.","pos":[5930,6018]},{"content":"When the application exits, the restart manager retries deleting the files.","pos":[6019,6094]},{"content":"m_mapDocNameToAutosaveName","pos":[6099,6125]},{"content":"A map of the document names to the autosaved file names.","pos":[6126,6182]},{"content":"m_mapDocNameToDocumentPtr","pos":[6187,6212]},{"pos":[6213,6309],"content":"A map of the document names to the <bpt id=\"p1\">[</bpt>CDocument<ept id=\"p1\">](../../mfc/reference/cdocument-class.md)</ept> pointers.","source":"A map of the document names to the [CDocument](../../mfc/reference/cdocument-class.md) pointers."},{"content":"m_mapDocNameToRestoreBool","pos":[6314,6339]},{"content":"A map of the document names to a Boolean parameter that indicates whether to restore the autosaved document.","pos":[6340,6448]},{"content":"m_mapDocumentPtrToDocName","pos":[6453,6478]},{"pos":[6479,6535],"content":"A map of the <ph id=\"ph1\">`CDocument`</ph> pointers to the document names.","source":"A map of the `CDocument` pointers to the document names."},{"content":"m_mapDocumentPtrToDocTitle","pos":[6540,6566]},{"content":"A map of the <ph id=\"ph1\">`CDocument`</ph> pointers to the document titles.","pos":[6567,6624],"source":"A map of the `CDocument` pointers to the document titles."},{"content":"These titles are used for saving files.","pos":[6625,6664]},{"content":"m_nAutosaveInterval","pos":[6669,6688]},{"content":"Time in milliseconds between autosaves.","pos":[6689,6728]},{"content":"m_nTimerID","pos":[6733,6743]},{"content":"The identifier for the autosave timer.","pos":[6744,6782]},{"content":"m_strAutosavePath","pos":[6787,6804]},{"content":"The location where the autosaved documents are stored.","pos":[6805,6859]},{"content":"m_strRestartIdentifier","pos":[6864,6886]},{"content":"The string representation of a GUID for the restart manager.","pos":[6887,6947]},{"content":"Remarks","pos":[6957,6964]},{"content":"The restart manager uses the <ph id=\"ph1\">`CDataRecoveryHandler`</ph> class to keep track of all open documents and to autosave them as necessary.","pos":[6968,7096],"source":"The restart manager uses the `CDataRecoveryHandler` class to keep track of all open documents and to autosave them as necessary."},{"content":"To enable autosave, use the <bpt id=\"p1\">[</bpt>CDataRecoveryHandler::SetSaveDocumentInfoOnIdle<ept id=\"p1\">](#cdatarecoveryhandler__setsavedocumentinfoonidle)</ept> method.","pos":[7097,7232],"source":" To enable autosave, use the [CDataRecoveryHandler::SetSaveDocumentInfoOnIdle](#cdatarecoveryhandler__setsavedocumentinfoonidle) method."},{"content":"This method directs the <ph id=\"ph1\">`CDataRecoveryHandler`</ph> to perform an autosave on the next idle loop.","pos":[7233,7325],"source":" This method directs the `CDataRecoveryHandler` to perform an autosave on the next idle loop."},{"content":"The restart manager calls <ph id=\"ph1\">`SetSaveDocumentInfoOnIdle`</ph> when the <ph id=\"ph2\">`CDataRecoveryHandler`</ph> should perform an autosave.","pos":[7326,7439],"source":" The restart manager calls `SetSaveDocumentInfoOnIdle` when the `CDataRecoveryHandler` should perform an autosave."},{"content":"All of the methods of the <ph id=\"ph1\">`CDataRecoveryHandler`</ph> class are virtual.","pos":[7446,7513],"source":"All of the methods of the `CDataRecoveryHandler` class are virtual."},{"content":"Override the methods in this class to create your own custom data recovery handler.","pos":[7514,7597]},{"content":"Unless you create your own data recovery handler or restart manager, do not instantiate a CDataRecoveryHandler.","pos":[7598,7709]},{"content":"The <bpt id=\"p1\">[</bpt>CWinApp Class<ept id=\"p1\">](../../mfc/reference/cwinapp-class.md)</ept> creates a <ph id=\"ph1\">`CDataRecoveryHandler`</ph> object as it is required.","pos":[7710,7826],"source":" The [CWinApp Class](../../mfc/reference/cwinapp-class.md) creates a `CDataRecoveryHandler` object as it is required."},{"pos":[7833,7969],"content":"Before you can use a <ph id=\"ph1\">`CDataRecoveryHandler`</ph> object, you must call <bpt id=\"p1\">[</bpt>CDataRecoveryHandler::Initialize<ept id=\"p1\">](#cdatarecoveryhandler__initialize)</ept>.","source":"Before you can use a `CDataRecoveryHandler` object, you must call [CDataRecoveryHandler::Initialize](#cdatarecoveryhandler__initialize)."},{"content":"Because the <ph id=\"ph1\">`CDataRecoveryHandler`</ph> class is closely connected to the restart manager, <ph id=\"ph2\">`CDataRecoveryHandler`</ph> depends on the global parameter <ph id=\"ph3\">`m_dwRestartManagerSupportFlags`</ph>.","pos":[7976,8150],"source":"Because the `CDataRecoveryHandler` class is closely connected to the restart manager, `CDataRecoveryHandler` depends on the global parameter `m_dwRestartManagerSupportFlags`."},{"content":"This parameter determines what permissions the restart manager has and how it interacts with your application.","pos":[8151,8261]},{"content":"To incorporate the restart manager into an existing application, you have to assign <ph id=\"ph1\">`m_dwRestartManagerSupportFlags`</ph> the appropriate value in the constructor of your main application.","pos":[8262,8445],"source":" To incorporate the restart manager into an existing application, you have to assign `m_dwRestartManagerSupportFlags` the appropriate value in the constructor of your main application."},{"content":"For more information about how to use the restart manager, see <bpt id=\"p1\">[</bpt>How to: Add Restart Manager Support<ept id=\"p1\">](../../mfc/how-to-add-restart-manager-support.md)</ept>.","pos":[8446,8596],"source":" For more information about how to use the restart manager, see [How to: Add Restart Manager Support](../../mfc/how-to-add-restart-manager-support.md)."},{"content":"Requirements","pos":[8605,8617]},{"pos":[8621,8650],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxdatarecovery.h","source":"**Header:** afxdatarecovery.h"},{"pos":[8722,8767],"content":"CDataRecoveryHandler::AutosaveAllDocumentInfo"},{"pos":[8771,8840],"content":"Autosaves each file registered with the <ph id=\"ph1\">`CDataRecoveryHandler`</ph> class.","source":"Autosaves each file registered with the `CDataRecoveryHandler` class."},{"content":"Return Value","pos":[8905,8917]},{"pos":[8928,9021],"content":"if the <ph id=\"ph1\">`CDataRecoveryHandler`</ph> saved all the documents; <ph id=\"ph2\">`FALSE`</ph> if any document was not saved.","source":" if the `CDataRecoveryHandler` saved all the documents; `FALSE` if any document was not saved."},{"content":"Remarks","pos":[9031,9038]},{"content":"This method returns <ph id=\"ph1\">`TRUE`</ph> if there are no documents that must be saved.","pos":[9042,9114],"source":"This method returns `TRUE` if there are no documents that must be saved."},{"content":"It also returns <ph id=\"ph1\">`TRUE`</ph> without saving any documents if retrieving the <ph id=\"ph2\">`CWinApp`</ph> or <ph id=\"ph3\">`CDocManager`</ph> for the application generates an error.","pos":[9115,9251],"source":" It also returns `TRUE` without saving any documents if retrieving the `CWinApp` or `CDocManager` for the application generates an error."},{"content":"To use this method, either <ph id=\"ph1\">`AFX_RESTART_MANAGER_AUTOSAVE_AT_RESTART`</ph> or <ph id=\"ph2\">`AFX_RESTART_MANAGER_AUTOSAVE_AT_INTERVAL`</ph> must be set in <ph id=\"ph3\">`m_dwRestartManagerSupportFlags`</ph>.","pos":[9258,9421],"source":"To use this method, either `AFX_RESTART_MANAGER_AUTOSAVE_AT_RESTART` or `AFX_RESTART_MANAGER_AUTOSAVE_AT_INTERVAL` must be set in `m_dwRestartManagerSupportFlags`."},{"content":"See <bpt id=\"p1\">[</bpt>CDataRecoveryHandler Class<ept id=\"p1\">](../../mfc/reference/cdatarecoveryhandler-class.md)</ept> for more information about the <ph id=\"ph1\">`m_dwRestartManagerSupportFlags`</ph> parameter.","pos":[9422,9580],"source":" See [CDataRecoveryHandler Class](../../mfc/reference/cdatarecoveryhandler-class.md) for more information about the `m_dwRestartManagerSupportFlags` parameter."},{"pos":[9649,9691],"content":"CDataRecoveryHandler::AutosaveDocumentInfo"},{"content":"Autosaves the specified document.","pos":[9695,9728]},{"content":"Parameters","pos":[9853,9863]},{"content":"Parameter","pos":[9884,9893]},{"content":"Description","pos":[9894,9905]},{"pos":[9910,9914],"content":"[in]"},{"pos":[9927,9964],"content":"A pointer to the <ph id=\"ph1\">`CDocument`</ph> to save.","source":"A pointer to the `CDocument` to save."},{"pos":[9969,9973],"content":"[in]"},{"content":"indicates that the <ph id=\"ph1\">`CDataRecoveryHandler`</ph> considers <ph id=\"ph2\">`pDocument`</ph> to be modified; <ph id=\"ph3\">`FALSE`</ph> indicates that the framework considers <ph id=\"ph4\">`pDocument`</ph> to be unmodified.","pos":[10002,10158],"source":" indicates that the `CDataRecoveryHandler` considers `pDocument` to be modified; `FALSE` indicates that the framework considers `pDocument` to be unmodified."},{"content":"See the Remarks section for more information about the effect of this flag.","pos":[10159,10234]},{"content":"Return Value","pos":[10245,10257]},{"pos":[10268,10347],"content":"if the appropriate flags are set and <ph id=\"ph1\">`pDocument`</ph> is a valid <ph id=\"ph2\">`CDocument`</ph> object.","source":" if the appropriate flags are set and `pDocument` is a valid `CDocument` object."},{"content":"Remarks","pos":[10357,10364]},{"content":"Each <ph id=\"ph1\">`CDocument`</ph> object has a flag that indicates if it has changed since the last save.","pos":[10368,10456],"source":"Each `CDocument` object has a flag that indicates if it has changed since the last save."},{"content":"Use <bpt id=\"p1\">[</bpt>CDocument::IsModified<ept id=\"p1\">](../../mfc/reference/cdocument-class.md#cdocument__ismodified)</ept> to determine the state of this flag.","pos":[10457,10583],"source":" Use [CDocument::IsModified](../../mfc/reference/cdocument-class.md#cdocument__ismodified) to determine the state of this flag."},{"content":"If a <ph id=\"ph1\">`CDocument`</ph> has not changed since the last save, <ph id=\"ph2\">`AutosaveDocumentInfo`</ph> deletes any autosaved files for that document.","pos":[10584,10707],"source":" If a `CDocument` has not changed since the last save, `AutosaveDocumentInfo` deletes any autosaved files for that document."},{"content":"If a document has changed since the last save, closing it prompts the user to save the document before closing.","pos":[10708,10819]},{"pos":[10827,11050],"content":"[!NOTE]\n Using `bResetModifiedFlag` to change the state of the document to unmodified may cause the user to lose unsaved data. If the framework considers a document unmodified, closing it does not prompt the user to save.","leadings":["","> "],"nodes":[{"content":" Using `bResetModifiedFlag` to change the state of the document to unmodified may cause the user to lose unsaved data. If the framework considers a document unmodified, closing it does not prompt the user to save.","pos":[8,221],"nodes":[{"content":"Using <ph id=\"ph1\">`bResetModifiedFlag`</ph> to change the state of the document to unmodified may cause the user to lose unsaved data.","pos":[1,118],"source":" Using `bResetModifiedFlag` to change the state of the document to unmodified may cause the user to lose unsaved data."},{"content":"If the framework considers a document unmodified, closing it does not prompt the user to save.","pos":[119,213]}]}]},{"pos":[11057,11234],"content":"This method throws an exception with the <bpt id=\"p1\">[</bpt>ASSERT<ept id=\"p1\">](http://msdn.microsoft.com/library/1e70902d-d58c-4e7b-9f69-2aeb6cbe476c)</ept> macro if <ph id=\"ph1\">`pDocument`</ph> is not a valid <ph id=\"ph2\">`CDocument`</ph> object.","source":"This method throws an exception with the [ASSERT](http://msdn.microsoft.com/library/1e70902d-d58c-4e7b-9f69-2aeb6cbe476c) macro if `pDocument` is not a valid `CDocument` object."},{"content":"To use this method, either <ph id=\"ph1\">`AFX_RESTART_MANAGER_AUTOSAVE_AT_RESTART`</ph> or <ph id=\"ph2\">`AFX_RESTARTMANAGER_AUTOSAVE_AT_INTERVAL`</ph> must be set in <ph id=\"ph3\">`m_dwRestartManagerSupportFlags`</ph>.","pos":[11241,11403],"source":"To use this method, either `AFX_RESTART_MANAGER_AUTOSAVE_AT_RESTART` or `AFX_RESTARTMANAGER_AUTOSAVE_AT_INTERVAL` must be set in `m_dwRestartManagerSupportFlags`."},{"content":"See <bpt id=\"p1\">[</bpt>CDataRecoveryHandler Class<ept id=\"p1\">](../../mfc/reference/cdatarecoveryhandler-class.md)</ept> for more information about the <ph id=\"ph1\">`m_dwRestartManagerSupportFlags`</ph> parameter.","pos":[11404,11562],"source":" See [CDataRecoveryHandler Class](../../mfc/reference/cdatarecoveryhandler-class.md) for more information about the `m_dwRestartManagerSupportFlags` parameter."},{"pos":[11631,11673],"content":"CDataRecoveryHandler::CDataRecoveryHandler"},{"pos":[11677,11720],"content":"Constructs a <ph id=\"ph1\">`CDataRecoveryHandler`</ph> object.","source":"Constructs a `CDataRecoveryHandler` object."},{"content":"Parameters","pos":[11837,11847]},{"content":"Parameter","pos":[11868,11877]},{"content":"Description","pos":[11878,11889]},{"pos":[11894,11898],"content":"[in]"},{"content":"Indicates which options of the restart manager are supported.","pos":[11930,11991]},{"pos":[11996,12000],"content":"[in]"},{"content":"The time between autosaves.","pos":[12021,12048]},{"content":"This parameter is in milliseconds.","pos":[12049,12083]},{"content":"Remarks","pos":[12094,12101]},{"content":"The MFC framework automatically creates a <ph id=\"ph1\">`CDataRecoveryHandler`</ph> object for your application when you use the <bpt id=\"p1\">**</bpt>New Project<ept id=\"p1\">**</ept> wizard.","pos":[12105,12238],"source":"The MFC framework automatically creates a `CDataRecoveryHandler` object for your application when you use the **New Project** wizard."},{"content":"Unless you are customizing the data recovery behavior or the restart manager, you should not create a <ph id=\"ph1\">`CDataRecoveryHandler`</ph> object.","pos":[12239,12371],"source":" Unless you are customizing the data recovery behavior or the restart manager, you should not create a `CDataRecoveryHandler` object."},{"pos":[12378,12508],"content":"For more information about the support flags, see <bpt id=\"p1\">[</bpt>CDataRecoveryHandler Class<ept id=\"p1\">](../../mfc/reference/cdatarecoveryhandler-class.md)</ept>.","source":"For more information about the support flags, see [CDataRecoveryHandler Class](../../mfc/reference/cdatarecoveryhandler-class.md)."},{"pos":[12575,12615],"content":"CDataRecoveryHandler::CreateDocumentInfo"},{"content":"Adds a document to the list of open documents.","pos":[12619,12665]},{"content":"Parameters","pos":[12745,12755]},{"content":"Parameter","pos":[12776,12785]},{"content":"Description","pos":[12786,12797]},{"pos":[12802,12806],"content":"[in]"},{"content":"A pointer to a <ph id=\"ph1\">`CDocument`</ph>.","pos":[12819,12846],"source":"A pointer to a `CDocument`."},{"content":"This method creates the document information for this <ph id=\"ph1\">`CDocument`</ph>.","pos":[12847,12913],"source":" This method creates the document information for this `CDocument`."},{"content":"Return Value","pos":[12924,12936]},{"pos":[12940,12982],"content":"The default implementation returns <ph id=\"ph1\">`TRUE`</ph>.","source":"The default implementation returns `TRUE`."},{"content":"Remarks","pos":[12992,12999]},{"content":"This method checks if <ph id=\"ph1\">`pDocument`</ph> is already in the list of documents before it adds the document.","pos":[13003,13101],"source":"This method checks if `pDocument` is already in the list of documents before it adds the document."},{"content":"If <ph id=\"ph1\">`pDocument`</ph> is already in the list, this method deletes the autosaved file associated with <ph id=\"ph2\">`pDocument`</ph>.","pos":[13102,13208],"source":" If `pDocument` is already in the list, this method deletes the autosaved file associated with `pDocument`."},{"content":"To use this method, either <ph id=\"ph1\">`AFX_RESTART_MANAGER_AUTOSAVE_AT_RESTART`</ph> or <ph id=\"ph2\">`AFX_RESTARTMANAGER_AUTOSAVE_AT_INTERVAL`</ph> must be set in <ph id=\"ph3\">`m_dwRestartManagerSupportFlags`</ph>.","pos":[13215,13377],"source":"To use this method, either `AFX_RESTART_MANAGER_AUTOSAVE_AT_RESTART` or `AFX_RESTARTMANAGER_AUTOSAVE_AT_INTERVAL` must be set in `m_dwRestartManagerSupportFlags`."},{"content":"See <bpt id=\"p1\">[</bpt>CDataRecoveryHandler Class<ept id=\"p1\">](../../mfc/reference/cdatarecoveryhandler-class.md)</ept> for more information about the <ph id=\"ph1\">`m_dwRestartManagerSupportFlags`</ph> parameter.","pos":[13378,13536],"source":" See [CDataRecoveryHandler Class](../../mfc/reference/cdatarecoveryhandler-class.md) for more information about the `m_dwRestartManagerSupportFlags` parameter."},{"pos":[13608,13653],"content":"CDataRecoveryHandler::DeleteAllAutosavedFiles"},{"content":"Deletes all the current autosaved files.","pos":[13657,13697]},{"content":"Return Value","pos":[13762,13774]},{"pos":[13778,13827],"content":"The default implementation always returns <ph id=\"ph1\">`TRUE`</ph>.","source":"The default implementation always returns `TRUE`."},{"pos":[13895,13936],"content":"CDataRecoveryHandler::DeleteAutosavedFile"},{"content":"Deletes the specified autosaved file.","pos":[13940,13977]},{"content":"Parameters","pos":[14069,14079]},{"content":"Parameter","pos":[14100,14109]},{"content":"Description","pos":[14110,14121]},{"pos":[14126,14130],"content":"[in]"},{"content":"A string that contains the autosaved file name.","pos":[14150,14197]},{"content":"Return Value","pos":[14208,14220]},{"pos":[14224,14272],"content":"The default implementation always return <ph id=\"ph1\">`TRUE`</ph>.","source":"The default implementation always return `TRUE`."},{"content":"Remarks","pos":[14282,14289]},{"content":"If this method cannot delete the autosaved file, it saves the name of the file in a list.","pos":[14293,14382]},{"content":"The destructor for the <ph id=\"ph1\">`CDataRecoveryHandler`</ph> tries to delete each autosaved file specified in that list.","pos":[14383,14488],"source":" The destructor for the `CDataRecoveryHandler` tries to delete each autosaved file specified in that list."},{"pos":[14561,14607],"content":"CDataRecoveryHandler::GenerateAutosaveFileName"},{"content":"Generates the name for an autosave file associated with the supplied document file name.","pos":[14611,14699]},{"content":"Parameters","pos":[14807,14817]},{"content":"[in]","pos":[14821,14825]},{"content":"A string that contains the document name.","pos":[14847,14888]},{"content":"uses this document name to generate a corresponding autosave file name.","pos":[14916,14987]},{"content":"Return Value","pos":[14997,15009]},{"pos":[15013,15069],"content":"The autosave file name generated from <ph id=\"ph1\">`strDocumentName`</ph>.","source":"The autosave file name generated from `strDocumentName`."},{"content":"Remarks","pos":[15079,15086]},{"content":"Each document name has a one-to-one mapping with an autosave file name.","pos":[15090,15161]},{"pos":[15229,15270],"content":"CDataRecoveryHandler::GetAutosaveInterval"},{"content":"Returns the interval between autosave tries.","pos":[15274,15318]},{"content":"Return Value","pos":[15387,15399]},{"content":"The number of milliseconds between autosave tries.","pos":[15403,15453]},{"pos":[15517,15554],"content":"CDataRecoveryHandler::GetAutosavePath"},{"content":"Returns the path of the autosaved files.","pos":[15558,15598]},{"content":"Return Value","pos":[15667,15679]},{"content":"The location where the autosaved documents are stored.","pos":[15683,15737]},{"pos":[15805,15846],"content":"CDataRecoveryHandler::GetDocumentListName"},{"pos":[15850,15904],"content":"Retrieves the document name from a <ph id=\"ph1\">`CDocument`</ph> object.","source":"Retrieves the document name from a `CDocument` object."},{"content":"Parameters","pos":[15997,16007]},{"content":"Parameter","pos":[16028,16037]},{"content":"Description","pos":[16038,16049]},{"pos":[16054,16058],"content":"[in]"},{"content":"A pointer to a <ph id=\"ph1\">`CDocument`</ph>.","pos":[16071,16098],"source":"A pointer to a `CDocument`."},{"content":"retrieves the document name from this <ph id=\"ph1\">`CDocument`</ph>.","pos":[16121,16171],"source":" retrieves the document name from this `CDocument`."},{"content":"Return Value","pos":[16182,16194]},{"pos":[16198,16233],"content":"The document name from <ph id=\"ph1\">`pDocument`</ph>.","source":"The document name from `pDocument`."},{"content":"Remarks","pos":[16243,16250]},{"content":"The <ph id=\"ph1\">`CDataRecoveryHandler`</ph> uses the document name as the key in <ph id=\"ph2\">`m_mapDocNameToAutosaveName`</ph>, <ph id=\"ph3\">`m_mapDocNameToDocumentPtr`</ph>, and <ph id=\"ph4\">`m_mapDocNameToRestoreBool`</ph>.","pos":[16254,16409],"source":"The `CDataRecoveryHandler` uses the document name as the key in `m_mapDocNameToAutosaveName`, `m_mapDocNameToDocumentPtr`, and `m_mapDocNameToRestoreBool`."},{"content":"These parameter enable the <ph id=\"ph1\">`CDataRecoveryHandler`</ph> to monitor <ph id=\"ph2\">`CDocument`</ph> objects, the autosave file name, and the autosave settings.","pos":[16410,16542],"source":" These parameter enable the `CDataRecoveryHandler` to monitor `CDocument` objects, the autosave file name, and the autosave settings."},{"pos":[16613,16657],"content":"CDataRecoveryHandler::GetNormalDocumentTitle"},{"content":"Retrieves the normal title for the specified document.","pos":[16661,16715]},{"content":"Parameters","pos":[16802,16812]},{"content":"Parameter","pos":[16833,16842]},{"content":"Description","pos":[16843,16854]},{"pos":[16859,16863],"content":"[in]"},{"pos":[16876,16903],"content":"A pointer to a <ph id=\"ph1\">`CDocument`</ph>.","source":"A pointer to a `CDocument`."},{"content":"Return Value","pos":[16914,16926]},{"content":"The normal title for the specified document.","pos":[16930,16974]},{"content":"Remarks","pos":[16984,16991]},{"content":"The normal title of a document is usually the file name of the document without the path.","pos":[16995,17084]},{"content":"This is the title in the <bpt id=\"p1\">**</bpt>File name<ept id=\"p1\">**</ept> field of the <bpt id=\"p2\">**</bpt>Save As<ept id=\"p2\">**</ept> dialog box.","pos":[17085,17160],"source":" This is the title in the **File name** field of the **Save As** dialog box."},{"pos":[17234,17281],"content":"CDataRecoveryHandler::GetRecoveredDocumentTitle"},{"content":"Creates and returns the title for the recovered document.","pos":[17285,17342]},{"content":"Parameters","pos":[17452,17462]},{"content":"[in]","pos":[17466,17470]},{"content":"The normal title for the document.","pos":[17493,17527]},{"content":"Return Value","pos":[17537,17549]},{"content":"The recovered document title.","pos":[17553,17582]},{"content":"Remarks","pos":[17592,17599]},{"content":"By default, the recovered title of a document is the normal title with <bpt id=\"p1\">**</bpt>[recovered]<ept id=\"p1\">**</ept> appended to it.","pos":[17603,17705],"source":"By default, the recovered title of a document is the normal title with **[recovered]** appended to it."},{"content":"The recovered title is displayed to the user when the <ph id=\"ph1\">`CDataRecoveryHandler`</ph> queries the user to restore autosaved documents.","pos":[17706,17831],"source":" The recovered title is displayed to the user when the `CDataRecoveryHandler` queries the user to restore autosaved documents."},{"pos":[17900,17942],"content":"CDataRecoveryHandler::GetRestartIdentifier"},{"content":"Retrieves the unique restart identifier for the application.","pos":[17946,18006]},{"content":"Return Value","pos":[18080,18092]},{"content":"The unique restart identifier.","pos":[18096,18126]},{"content":"Remarks","pos":[18136,18143]},{"content":"The restart identifier is unique for each execution of the application.","pos":[18147,18218]},{"content":"The <ph id=\"ph1\">`CDataRecoveryHandler`</ph> stores information in the registry about the currently open documents.","pos":[18225,18322],"source":"The `CDataRecoveryHandler` stores information in the registry about the currently open documents."},{"content":"When the restart manager exits an application and restarts it, it supplies the restart identifier to the <ph id=\"ph1\">`CDataRecoveryHandler`</ph>.","pos":[18323,18451],"source":" When the restart manager exits an application and restarts it, it supplies the restart identifier to the `CDataRecoveryHandler`."},{"content":"The <ph id=\"ph1\">`CDataRecoveryHandler`</ph> uses the restart identifier to retrieve the list of previously open documents.","pos":[18452,18557],"source":" The `CDataRecoveryHandler` uses the restart identifier to retrieve the list of previously open documents."},{"content":"This enables the <ph id=\"ph1\">`CDataRecoveryHandler`</ph> to try to find and restore autosaved files.","pos":[18558,18641],"source":" This enables the `CDataRecoveryHandler` to try to find and restore autosaved files."},{"pos":[18715,18762],"content":"CDataRecoveryHandler::GetSaveDocumentInfoOnIdle"},{"pos":[18766,18857],"content":"Indicates whether the <ph id=\"ph1\">`CDataRecoveryHandler`</ph> performs an autosave on the current idle loop.","source":"Indicates whether the `CDataRecoveryHandler` performs an autosave on the current idle loop."},{"content":"Return Value","pos":[18933,18945]},{"pos":[18956,19059],"content":"indicates the <ph id=\"ph1\">`CDataRecoveryHandler`</ph> autosaves on the current idle loop; <ph id=\"ph2\">`FALSE`</ph> indicates it does not.","source":" indicates the `CDataRecoveryHandler` autosaves on the current idle loop; `FALSE` indicates it does not."},{"pos":[19135,19184],"content":"CDataRecoveryHandler::GetShutdownByRestartManager"},{"content":"Indicates whether the restart manager caused the application to exit.","pos":[19188,19257]},{"content":"Return Value","pos":[19335,19347]},{"pos":[19358,19449],"content":"indicates the restart manager caused the application to exit; <ph id=\"ph1\">`FALSE`</ph> indicates it did not.","source":" indicates the restart manager caused the application to exit; `FALSE` indicates it did not."},{"pos":[19508,19540],"content":"CDataRecoveryHandler::Initialize"},{"pos":[19544,19583],"content":"Initializes the <ph id=\"ph1\">`CDataRecoveryHandler`</ph>.","source":"Initializes the `CDataRecoveryHandler`."},{"content":"Return Value","pos":[19635,19647]},{"pos":[19658,19713],"content":"if the initialization is successful; otherwise <ph id=\"ph1\">`FALSE`</ph>.","source":" if the initialization is successful; otherwise `FALSE`."},{"content":"Remarks","pos":[19723,19730]},{"content":"The initialization process loads the path for storing autosave files from the registry.","pos":[19734,19821]},{"content":"If the <ph id=\"ph1\">`Initialize`</ph> method cannot find this directory or if the path is <ph id=\"ph2\">`NULL`</ph>, <ph id=\"ph3\">`Initialize`</ph> fails and returns <ph id=\"ph4\">`FALSE`</ph>.","pos":[19822,19941],"source":" If the `Initialize` method cannot find this directory or if the path is `NULL`, `Initialize` fails and returns `FALSE`."},{"pos":[19948,20122],"content":"Use <bpt id=\"p1\">[</bpt>CDataRecoveryHandler::SetAutosavePath<ept id=\"p1\">](#cdatarecoveryhandler__setautosavepath)</ept> to change the autosave path after your application initializes the <ph id=\"ph1\">`CDataRecoveryHandler`</ph>.","source":"Use [CDataRecoveryHandler::SetAutosavePath](#cdatarecoveryhandler__setautosavepath) to change the autosave path after your application initializes the `CDataRecoveryHandler`."},{"content":"The <ph id=\"ph1\">`Initialize`</ph> method also starts a timer to monitor when the next autosave occurs.","pos":[20129,20214],"source":"The `Initialize` method also starts a timer to monitor when the next autosave occurs."},{"content":"Use <bpt id=\"p1\">[</bpt>CDataRecoveryHandler::SetAutosaveInterval<ept id=\"p1\">](#cdatarecoveryhandler__setautosaveinterval)</ept> to change the autosave interval after your application initializes the <ph id=\"ph1\">`CDataRecoveryHandler`</ph>.","pos":[20215,20401],"source":" Use [CDataRecoveryHandler::SetAutosaveInterval](#cdatarecoveryhandler__setautosaveinterval) to change the autosave interval after your application initializes the `CDataRecoveryHandler`."},{"pos":[20480,20532],"content":"CDataRecoveryHandler::QueryRestoreAutosavedDocuments"},{"content":"Displays a dialog box to the user for each document that the <ph id=\"ph1\">`CDataRecoveryHandler`</ph> autosaved.","pos":[20536,20630],"source":"Displays a dialog box to the user for each document that the `CDataRecoveryHandler` autosaved."},{"content":"The dialog box determines whether the user wants to restore the autosaved document.","pos":[20631,20714]},{"content":"Remarks","pos":[20786,20793]},{"content":"If your application is Unicode, this method displays a <bpt id=\"p1\">[</bpt>CTaskDialog<ept id=\"p1\">](../../mfc/reference/ctaskdialog-class.md)</ept> to the user.","pos":[20797,20920],"source":"If your application is Unicode, this method displays a [CTaskDialog](../../mfc/reference/ctaskdialog-class.md) to the user."},{"content":"Otherwise, the framework uses <bpt id=\"p1\">[</bpt>AfxMessageBox<ept id=\"p1\">](../../mfc/reference/cstring-formatting-and-message-box-display.md#afxmessagebox)</ept> to query the user.","pos":[20921,21066],"source":" Otherwise, the framework uses [AfxMessageBox](../../mfc/reference/cstring-formatting-and-message-box-display.md#afxmessagebox) to query the user."},{"content":"After <ph id=\"ph1\">`QueryRestoreAutosavedDocuments`</ph> gathers all the responses from the user, it stores the information in the member variable <ph id=\"ph2\">`m_mapDocNameToRestoreBool`</ph>.","pos":[21073,21230],"source":"After `QueryRestoreAutosavedDocuments` gathers all the responses from the user, it stores the information in the member variable `m_mapDocNameToRestoreBool`."},{"content":"This method does not restore the autosaved documents.","pos":[21231,21284]},{"pos":[21353,21395],"content":"CDataRecoveryHandler::ReadOpenDocumentList"},{"content":"Loads the open document list from the registry.","pos":[21399,21446]},{"content":"Return Value","pos":[21508,21520]},{"pos":[21531,21690],"content":"indicates that <ph id=\"ph1\">`ReadOpenDocumentList`</ph> loaded the information for at least one document from the registry; <ph id=\"ph2\">`FALSE`</ph> indicates no document information was loaded.","source":" indicates that `ReadOpenDocumentList` loaded the information for at least one document from the registry; `FALSE` indicates no document information was loaded."},{"content":"Remarks","pos":[21700,21707]},{"pos":[21711,21845],"content":"This function loads the open document information from the registry and stores it in the member variable <ph id=\"ph1\">`m_mapDocNameToAutosaveName`</ph>.","source":"This function loads the open document information from the registry and stores it in the member variable `m_mapDocNameToAutosaveName`."},{"pos":[21852,21955],"content":"After <ph id=\"ph1\">`ReadOpenDocumentList`</ph> loads all the data, it deletes the document information from the registry.","source":"After `ReadOpenDocumentList` loads all the data, it deletes the document information from the registry."},{"pos":[22022,22062],"content":"CDataRecoveryHandler::RemoveDocumentInfo"},{"content":"Removes the supplied document from the open document list.","pos":[22066,22124]},{"content":"Parameters","pos":[22204,22214]},{"content":"Parameter","pos":[22235,22244]},{"content":"Description","pos":[22245,22256]},{"pos":[22261,22265],"content":"[in]"},{"content":"A pointer to the document to remove.","pos":[22278,22314]},{"content":"Return Value","pos":[22325,22337]},{"pos":[22348,22419],"content":"if <ph id=\"ph1\">`pDocument`</ph> was removed from the list; <ph id=\"ph2\">`FALSE`</ph> if an error occurred.","source":" if `pDocument` was removed from the list; `FALSE` if an error occurred."},{"content":"Remarks","pos":[22429,22436]},{"content":"When the user closes a document, the framework uses this method to remove it from the list of open documents.","pos":[22440,22549]},{"pos":[22556,22670],"content":"If <ph id=\"ph1\">`RemoveDocumentInfo`</ph> cannot find <ph id=\"ph2\">`pDocument`</ph> in the list of open documents, it does nothing and returns <ph id=\"ph3\">`TRUE`</ph>.","source":"If `RemoveDocumentInfo` cannot find `pDocument` in the list of open documents, it does nothing and returns `TRUE`."},{"content":"To use this method, <ph id=\"ph1\">`AFX_RESTART_MANAGER_REOPEN_PREVIOUS_FILES`</ph> must be set in <ph id=\"ph2\">`m_dwRestartManagerSupportFlags`</ph>.","pos":[22677,22789],"source":"To use this method, `AFX_RESTART_MANAGER_REOPEN_PREVIOUS_FILES` must be set in `m_dwRestartManagerSupportFlags`."},{"content":"See <bpt id=\"p1\">[</bpt>CDataRecoveryHandler Class<ept id=\"p1\">](../../mfc/reference/cdatarecoveryhandler-class.md)</ept> for more information about the <ph id=\"ph1\">`m_dwRestartManagerSupportFlags`</ph> parameter.","pos":[22790,22948],"source":" See [CDataRecoveryHandler Class](../../mfc/reference/cdatarecoveryhandler-class.md) for more information about the `m_dwRestartManagerSupportFlags` parameter."},{"pos":[23020,23065],"content":"CDataRecoveryHandler::ReopenPreviousDocuments"},{"content":"Opens the previously open documents.","pos":[23069,23105]},{"content":"Return Value","pos":[23170,23182]},{"pos":[23193,23248],"content":"if at least one document was opened; otherwise <ph id=\"ph1\">`FALSE`</ph>.","source":" if at least one document was opened; otherwise `FALSE`."},{"content":"Remarks","pos":[23258,23265]},{"content":"This method opens the most recent save of the previously open documents.","pos":[23269,23341]},{"content":"If a document was not saved or autosaved, <ph id=\"ph1\">`ReopenPreviousDocuments`</ph> opens a blank document based on the template for that file type.","pos":[23342,23474],"source":" If a document was not saved or autosaved, `ReopenPreviousDocuments` opens a blank document based on the template for that file type."},{"content":"To use this method, <ph id=\"ph1\">`AFX_RESTART_MANAGER_REOPEN_PREVIOUS_FILES`</ph> must be set in <ph id=\"ph2\">`m_dwRestartManagerSupportFlags`</ph>.","pos":[23481,23593],"source":"To use this method, `AFX_RESTART_MANAGER_REOPEN_PREVIOUS_FILES` must be set in `m_dwRestartManagerSupportFlags`."},{"content":"See <bpt id=\"p1\">[</bpt>CDataRecoveryHandler Class<ept id=\"p1\">](../../mfc/reference/cdatarecoveryhandler-class.md)</ept> for more information about the <ph id=\"ph1\">`m_dwRestartManagerSupportFlags`</ph> parameter.","pos":[23594,23752],"source":" See [CDataRecoveryHandler Class](../../mfc/reference/cdatarecoveryhandler-class.md) for more information about the `m_dwRestartManagerSupportFlags` parameter."},{"content":"If this parameter is not set, <ph id=\"ph1\">`ReopenPreviousDocuments`</ph> does nothing and returns <ph id=\"ph2\">`FALSE`</ph>.","pos":[23753,23842],"source":" If this parameter is not set, `ReopenPreviousDocuments` does nothing and returns `FALSE`."},{"pos":[23849,23983],"content":"If there are no documents stored in the list of previously open documents, <ph id=\"ph1\">`ReopenPreviousDocuments`</ph> does nothing and returns <ph id=\"ph2\">`FALSE`</ph>.","source":"If there are no documents stored in the list of previously open documents, `ReopenPreviousDocuments` does nothing and returns `FALSE`."},{"pos":[24057,24104],"content":"CDataRecoveryHandler::RestoreAutosavedDocuments"},{"content":"Restores the autosaved documents based on user input.","pos":[24108,24161]},{"content":"Return Value","pos":[24228,24240]},{"pos":[24251,24302],"content":"if this method successfully restores the documents."},{"content":"Remarks","pos":[24312,24319]},{"content":"This method calls <bpt id=\"p1\">[</bpt>CDataRecoveryHandler::QueryRestoreAutosavedDocuments<ept id=\"p1\">](#cdatarecoveryhandler__queryrestoreautosaveddocuments)</ept> to determine which documents the user wants to restore.","pos":[24323,24506],"source":"This method calls [CDataRecoveryHandler::QueryRestoreAutosavedDocuments](#cdatarecoveryhandler__queryrestoreautosaveddocuments) to determine which documents the user wants to restore."},{"content":"If a user decides not to restore an autosaved document, <ph id=\"ph1\">`RestoreAutosavedDocuments`</ph> deletes the autosave file.","pos":[24507,24617],"source":" If a user decides not to restore an autosaved document, `RestoreAutosavedDocuments` deletes the autosave file."},{"content":"Otherwise, <ph id=\"ph1\">`RestoreAutosavedDocuments`</ph> replaces the open document with the autosaved version.","pos":[24618,24711],"source":" Otherwise, `RestoreAutosavedDocuments` replaces the open document with the autosaved version."},{"content":"To use this method, either <ph id=\"ph1\">`AFX_RESTART_MANAGER_REOPEN_PREVIOUS_FILES`</ph> or <ph id=\"ph2\">`AFX_RESTART_MANAGER_RESTORE_AUTOSAVED_FILES`</ph> must be set in <ph id=\"ph3\">`m_dwRestartManagerSupportFlags`</ph>.","pos":[24718,24886],"source":"To use this method, either `AFX_RESTART_MANAGER_REOPEN_PREVIOUS_FILES` or `AFX_RESTART_MANAGER_RESTORE_AUTOSAVED_FILES` must be set in `m_dwRestartManagerSupportFlags`."},{"content":"See <bpt id=\"p1\">[</bpt>CDataRecoveryHandler Class<ept id=\"p1\">](../../mfc/reference/cdatarecoveryhandler-class.md)</ept> for more information about the <ph id=\"ph1\">`m_dwRestartManagerSupportFlags`</ph> parameter.","pos":[24887,25045],"source":" See [CDataRecoveryHandler Class](../../mfc/reference/cdatarecoveryhandler-class.md) for more information about the `m_dwRestartManagerSupportFlags` parameter."},{"pos":[25114,25156],"content":"CDataRecoveryHandler::SaveOpenDocumentList"},{"content":"Saves the current list of open documents to the Windows registry.","pos":[25160,25225]},{"content":"Return Value","pos":[25287,25299]},{"content":"if there are no open documents to save or if they were saved successfully.","pos":[25310,25384]},{"content":"if there are documents to save to the registry, but they were not saved because an error occurred.","pos":[25393,25491]},{"content":"Remarks","pos":[25501,25508]},{"content":"The restart manager calls <ph id=\"ph1\">`SaveOpenDocumentList`</ph> when the application exits unexpectedly or when it exits for an upgrade.","pos":[25512,25633],"source":"The restart manager calls `SaveOpenDocumentList` when the application exits unexpectedly or when it exits for an upgrade."},{"content":"When the application restarts, it uses <bpt id=\"p1\">[</bpt>CDataRecoveryHandler::ReadOpenDocumentList<ept id=\"p1\">](#cdatarecoveryhandler__readopendocumentlist)</ept> to retrieve the list of open documents.","pos":[25634,25802],"source":" When the application restarts, it uses [CDataRecoveryHandler::ReadOpenDocumentList](#cdatarecoveryhandler__readopendocumentlist) to retrieve the list of open documents."},{"content":"This method saves only the list of open documents.","pos":[25809,25859]},{"content":"The method <bpt id=\"p1\">[</bpt>CDataRecoveryHandler::AutosaveDocumentInfo<ept id=\"p1\">](#cdatarecoveryhandler__autosavedocumentinfo)</ept> is responsible for saving the documents themselves.","pos":[25860,26012],"source":" The method [CDataRecoveryHandler::AutosaveDocumentInfo](#cdatarecoveryhandler__autosavedocumentinfo) is responsible for saving the documents themselves."},{"pos":[26080,26121],"content":"CDataRecoveryHandler::SetAutosaveInterval"},{"content":"Sets the time between autosave cycles in milliseconds.","pos":[26125,26179]},{"content":"Parameters","pos":[26261,26271]},{"content":"[in]","pos":[26275,26279]},{"content":"The new autosave interval in milliseconds.","pos":[26303,26345]},{"pos":[26409,26446],"content":"CDataRecoveryHandler::SetAutosavePath"},{"content":"Sets the directory where autosaved files are stored.","pos":[26450,26502]},{"content":"Parameters","pos":[26589,26599]},{"content":"Parameter","pos":[26620,26629]},{"content":"Description","pos":[26630,26641]},{"pos":[26646,26650],"content":"[in]"},{"content":"The path where autosave files are stored.","pos":[26669,26710]},{"content":"Remarks","pos":[26721,26728]},{"content":"Changing the autosave directory does not move currently autosaved files.","pos":[26732,26804]},{"pos":[26873,26915],"content":"CDataRecoveryHandler::SetRestartIdentifier"},{"pos":[26919,27002],"content":"Sets the unique restart identifier for this instance of the <ph id=\"ph1\">`CDataRecoveryHandler`</ph>.","source":"Sets the unique restart identifier for this instance of the `CDataRecoveryHandler`."},{"content":"Parameters","pos":[27099,27109]},{"content":"Parameter","pos":[27130,27139]},{"content":"Description","pos":[27140,27151]},{"pos":[27156,27160],"content":"[in]"},{"content":"The unique identifier for the restart manager.","pos":[27184,27230]},{"content":"Remarks","pos":[27241,27248]},{"content":"The restart manager records information about the open documents in the registry.","pos":[27252,27333]},{"content":"This information is stored with the unique restart identifier as the key.","pos":[27334,27407]},{"content":"Because the restart identifier is unique for each instance of an application, multiple instances of an application may exit unexpectedly and the restart manager can recover each of them.","pos":[27408,27594]},{"pos":[27668,27715],"content":"CDataRecoveryHandler::SetSaveDocumentInfoOnIdle"},{"pos":[27719,27849],"content":"Sets whether the <ph id=\"ph1\">`CDataRecoveryHandler`</ph> saves the open document information to the Windows registry during the current idle cycle.","source":"Sets whether the `CDataRecoveryHandler` saves the open document information to the Windows registry during the current idle cycle."},{"content":"Parameters","pos":[27932,27942]},{"content":"Parameter","pos":[27963,27972]},{"content":"Description","pos":[27973,27984]},{"pos":[27989,27993],"content":"[in]"},{"pos":[28015,28105],"content":"to save document information during the current idle cycle; <ph id=\"ph1\">`FALSE to not perform a save`</ph>.","source":" to save document information during the current idle cycle; `FALSE to not perform a save`."},{"pos":[28182,28231],"content":"CDataRecoveryHandler::SetShutdownByRestartManager"},{"content":"Sets whether the previous exit of the application was caused by the restart manager.","pos":[28235,28319]},{"content":"Parameters","pos":[28418,28428]},{"content":"Parameter","pos":[28449,28458]},{"content":"Description","pos":[28459,28470]},{"pos":[28475,28479],"content":"[in]"},{"pos":[28515,28651],"content":"to indicate that the restart manager caused the application to exit; <ph id=\"ph1\">`FALSE`</ph> to indicate that the application exited for another reason.","source":" to indicate that the restart manager caused the application to exit; `FALSE` to indicate that the application exited for another reason."},{"content":"Remarks","pos":[28662,28669]},{"content":"The framework behaves differently based on whether the previous exit was unexpected or whether it was initiated by the restart manager.","pos":[28673,28808]},{"pos":[28875,28915],"content":"CDataRecoveryHandler::UpdateDocumentInfo"},{"content":"Updates the information for a document because the user saved it.","pos":[28919,28984]},{"content":"Parameters","pos":[29064,29074]},{"content":"Parameter","pos":[29095,29104]},{"content":"Description","pos":[29105,29116]},{"pos":[29121,29125],"content":"[in]"},{"content":"A pointer to the saved document.","pos":[29138,29170]},{"content":"Return Value","pos":[29181,29193]},{"pos":[29204,29317],"content":"if this method deleted the autosaved document and updated the document information; <ph id=\"ph1\">`FALSE`</ph> if an error occurred.","source":" if this method deleted the autosaved document and updated the document information; `FALSE` if an error occurred."},{"content":"Remarks","pos":[29327,29334]},{"content":"When a user saves a document, the application removes the autosaved file because it is no longer needed.","pos":[29338,29442]},{"content":"deletes the autosaved file by calling <bpt id=\"p1\">[</bpt>CDataRecoveryHandler::RemoveDocumentInfo<ept id=\"p1\">](#cdatarecoveryhandler__removedocumentinfo)</ept>.","pos":[29464,29588],"source":" deletes the autosaved file by calling [CDataRecoveryHandler::RemoveDocumentInfo](#cdatarecoveryhandler__removedocumentinfo)."},{"content":"then adds the information from <ph id=\"ph1\">`pDocument`</ph> to the list of currently open documents because <ph id=\"ph2\">`RemoveDocumentInfo`</ph> deletes that information, but the saved document is still open.","pos":[29610,29785],"source":" then adds the information from `pDocument` to the list of currently open documents because `RemoveDocumentInfo` deletes that information, but the saved document is still open."},{"content":"To use this method, <ph id=\"ph1\">`AFX_RESTART_MANAGER_REOPEN_PREVIOUS_FILES`</ph> must be set in <ph id=\"ph2\">`m_dwRestartManagerSupportFlags`</ph>.","pos":[29792,29904],"source":"To use this method, `AFX_RESTART_MANAGER_REOPEN_PREVIOUS_FILES` must be set in `m_dwRestartManagerSupportFlags`."},{"content":"See <bpt id=\"p1\">[</bpt>CDataRecoveryHandler Class<ept id=\"p1\">](../../mfc/reference/cdatarecoveryhandler-class.md)</ept> for more information about the <ph id=\"ph1\">`m_dwRestartManagerSupportFlags`</ph> parameter.","pos":[29905,30063],"source":" See [CDataRecoveryHandler Class](../../mfc/reference/cdatarecoveryhandler-class.md) for more information about the `m_dwRestartManagerSupportFlags` parameter."},{"content":"See Also","pos":[30072,30080]},{"content":"Classes","pos":[30085,30092]},{"content":"Hierarchy Chart","pos":[30135,30150]},{"content":"CObject Class","pos":[30187,30200]},{"content":"How to: Add Restart Manager Support","pos":[30245,30280]}],"content":"---\ntitle: \"CDataRecoveryHandler Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CDataRecoveryHandler\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CDataRecoveryHandler class\"\nms.assetid: 7794802c-e583-4eba-90b9-2fed1a161f9c\ncaps.latest.revision: 18\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CDataRecoveryHandler Class\nThe `CDataRecoveryHandler` autosaves documents and restores them if an application unexpectedly exits.  \n  \n## Syntax  \n  \n```  \nclass CDataRecoveryHandler : public CObject  \n```  \n  \n## Members  \n  \n### Constructors  \n  \n|||  \n|-|-|  \n|[CDataRecoveryHandler::CDataRecoveryHandler](#cdatarecoveryhandler__cdatarecoveryhandler)|Constructs a `CDataRecoveryHandler` object.|  \n  \n### Methods  \n  \n|||  \n|-|-|  \n|[CDataRecoveryHandler::AutosaveAllDocumentInfo](#cdatarecoveryhandler__autosavealldocumentinfo)|Autosaves each file registered with the `CDataRecoveryHandler` class.|  \n|[CDataRecoveryHandler::AutosaveDocumentInfo](#cdatarecoveryhandler__autosavedocumentinfo)|Autosaves the specified document.|  \n|[CDataRecoveryHandler::CreateDocumentInfo](#cdatarecoveryhandler__createdocumentinfo)|Adds a document to the list of open documents.|  \n|[CDataRecoveryHandler::DeleteAllAutosavedFiles](#cdatarecoveryhandler__deleteallautosavedfiles)|Deletes all the current autosaved files.|  \n|[CDataRecoveryHandler::DeleteAutosavedFile](#cdatarecoveryhandler__deleteautosavedfile)|Deletes the specified autosaved file.|  \n|[CDataRecoveryHandler::GenerateAutosaveFileName](#cdatarecoveryhandler__generateautosavefilename)|Generates the name for an autosave file associated with the supplied document file name.|  \n|[CDataRecoveryHandler::GetAutosaveInterval](#cdatarecoveryhandler__getautosaveinterval)|Returns the interval between autosave tries.|  \n|[CDataRecoveryHandler::GetAutosavePath](#cdatarecoveryhandler__getautosavepath)|Returns the path of the autosaved files.|  \n|[CDataRecoveryHandler::GetDocumentListName](#cdatarecoveryhandler__getdocumentlistname)|Retrieves the document name from a `CDocument` object.|  \n|[CDataRecoveryHandler::GetNormalDocumentTitle](#cdatarecoveryhandler__getnormaldocumenttitle)|Retrieves the normal title for the specified document.|  \n|[CDataRecoveryHandler::GetRecoveredDocumentTitle](#cdatarecoveryhandler__getrecovereddocumenttitle)|Creates and returns the title for the recovered document.|  \n|[CDataRecoveryHandler::GetRestartIdentifier](#cdatarecoveryhandler__getrestartidentifier)|Retrieves the unique restart identifier for the application.|  \n|[CDataRecoveryHandler::GetSaveDocumentInfoOnIdle](#cdatarecoveryhandler__getsavedocumentinfoonidle)|Indicates whether the `CDataRecoveryHandler` performs an autosave on the current idle loop.|  \n|[CDataRecoveryHandler::GetShutdownByRestartManager](#cdatarecoveryhandler__getshutdownbyrestartmanager)|Indicates whether the restart manager caused the application to exit.|  \n|[CDataRecoveryHandler::Initialize](#cdatarecoveryhandler__initialize)|Initializes the `CDataRecoveryHandler`.|  \n|[CDataRecoveryHandler::QueryRestoreAutosavedDocuments](#cdatarecoveryhandler__queryrestoreautosaveddocuments)|Displays a dialog box to the user for each document that the `CDataRecoveryHandler` autosaved. The dialog box determines whether the user wants to restore the autosaved document.|  \n|[CDataRecoveryHandler::ReadOpenDocumentList](#cdatarecoveryhandler__readopendocumentlist)|Loads the open document list from the registry.|  \n|[CDataRecoveryHandler::RemoveDocumentInfo](#cdatarecoveryhandler__removedocumentinfo)|Removes the supplied document from the open document list.|  \n|[CDataRecoveryHandler::ReopenPreviousDocuments](#cdatarecoveryhandler__reopenpreviousdocuments)|Opens the previously open documents.|  \n|[CDataRecoveryHandler::RestoreAutosavedDocuments](#cdatarecoveryhandler__restoreautosaveddocuments)|Restores the autosaved documents based on user input.|  \n|[CDataRecoveryHandler::SaveOpenDocumentList](#cdatarecoveryhandler__saveopendocumentlist)|Saves the current list of open documents to the Windows registry.|  \n|[CDataRecoveryHandler::SetAutosaveInterval](#cdatarecoveryhandler__setautosaveinterval)|Sets the time between autosave cycles in milliseconds.|  \n|[CDataRecoveryHandler::SetAutosavePath](#cdatarecoveryhandler__setautosavepath)|Sets the directory where autosaved files are stored.|  \n|[CDataRecoveryHandler::SetRestartIdentifier](#cdatarecoveryhandler__setrestartidentifier)|Sets the unique restart identifier for this instance of the `CDataRecoveryHandler`.|  \n|[CDataRecoveryHandler::SetSaveDocumentInfoOnIdle](#cdatarecoveryhandler__setsavedocumentinfoonidle)|Sets whether the `CDataRecoveryHandler` saves the open document information to the Windows registry during the current idle cycle.|  \n|[CDataRecoveryHandler::SetShutdownByRestartManager](#cdatarecoveryhandler__setshutdownbyrestartmanager)|Sets whether the previous exit of the application was caused by the restart manager.|  \n|[CDataRecoveryHandler::UpdateDocumentInfo](#cdatarecoveryhandler__updatedocumentinfo)|Updates the information for a document because the user saved it.|  \n  \n### Data Members  \n  \n|||  \n|-|-|  \n|m_bRestoringPreviousOpenDocs|Indicates whether the data recovery handler reopens previously open documents.|  \n|m_bSaveDocumentInfoOnIdle|Indicates whether the data recovery handler autosaves documents on the next idle loop.|  \n|m_bShutdownByRestartManager|Indicates whether the restart manager causes the application to exit.|  \n|m_dwRestartManagerSupportFlags|Flags that indicate what support the restart manager provides for the application.|  \n|m_lstAutosavesToDelete|A list of autosaved files that were not deleted when the original documents were closed. When the application exits, the restart manager retries deleting the files.|  \n|m_mapDocNameToAutosaveName|A map of the document names to the autosaved file names.|  \n|m_mapDocNameToDocumentPtr|A map of the document names to the [CDocument](../../mfc/reference/cdocument-class.md) pointers.|  \n|m_mapDocNameToRestoreBool|A map of the document names to a Boolean parameter that indicates whether to restore the autosaved document.|  \n|m_mapDocumentPtrToDocName|A map of the `CDocument` pointers to the document names.|  \n|m_mapDocumentPtrToDocTitle|A map of the `CDocument` pointers to the document titles. These titles are used for saving files.|  \n|m_nAutosaveInterval|Time in milliseconds between autosaves.|  \n|m_nTimerID|The identifier for the autosave timer.|  \n|m_strAutosavePath|The location where the autosaved documents are stored.|  \n|m_strRestartIdentifier|The string representation of a GUID for the restart manager.|  \n  \n## Remarks  \n The restart manager uses the `CDataRecoveryHandler` class to keep track of all open documents and to autosave them as necessary. To enable autosave, use the [CDataRecoveryHandler::SetSaveDocumentInfoOnIdle](#cdatarecoveryhandler__setsavedocumentinfoonidle) method. This method directs the `CDataRecoveryHandler` to perform an autosave on the next idle loop. The restart manager calls `SetSaveDocumentInfoOnIdle` when the `CDataRecoveryHandler` should perform an autosave.  \n  \n All of the methods of the `CDataRecoveryHandler` class are virtual. Override the methods in this class to create your own custom data recovery handler. Unless you create your own data recovery handler or restart manager, do not instantiate a CDataRecoveryHandler. The [CWinApp Class](../../mfc/reference/cwinapp-class.md) creates a `CDataRecoveryHandler` object as it is required.  \n  \n Before you can use a `CDataRecoveryHandler` object, you must call [CDataRecoveryHandler::Initialize](#cdatarecoveryhandler__initialize).  \n  \n Because the `CDataRecoveryHandler` class is closely connected to the restart manager, `CDataRecoveryHandler` depends on the global parameter `m_dwRestartManagerSupportFlags`. This parameter determines what permissions the restart manager has and how it interacts with your application. To incorporate the restart manager into an existing application, you have to assign `m_dwRestartManagerSupportFlags` the appropriate value in the constructor of your main application. For more information about how to use the restart manager, see [How to: Add Restart Manager Support](../../mfc/how-to-add-restart-manager-support.md).  \n  \n## Requirements  \n **Header:** afxdatarecovery.h  \n  \n##  <a name=\"cdatarecoveryhandler__autosavealldocumentinfo\"></a>  CDataRecoveryHandler::AutosaveAllDocumentInfo  \n Autosaves each file registered with the `CDataRecoveryHandler` class.  \n  \n```  \nvirtual BOOL AutosaveAllDocumentInfo();\n```  \n  \n### Return Value  \n `TRUE` if the `CDataRecoveryHandler` saved all the documents; `FALSE` if any document was not saved.  \n  \n### Remarks  \n This method returns `TRUE` if there are no documents that must be saved. It also returns `TRUE` without saving any documents if retrieving the `CWinApp` or `CDocManager` for the application generates an error.  \n  \n To use this method, either `AFX_RESTART_MANAGER_AUTOSAVE_AT_RESTART` or `AFX_RESTART_MANAGER_AUTOSAVE_AT_INTERVAL` must be set in `m_dwRestartManagerSupportFlags`. See [CDataRecoveryHandler Class](../../mfc/reference/cdatarecoveryhandler-class.md) for more information about the `m_dwRestartManagerSupportFlags` parameter.  \n  \n##  <a name=\"cdatarecoveryhandler__autosavedocumentinfo\"></a>  CDataRecoveryHandler::AutosaveDocumentInfo  \n Autosaves the specified document.  \n  \n```  \nvirtual BOOL AutosaveDocumentInfo(\n    CDocument* pDocument,  \n    BOOL bResetModifiedFlag = TRUE);\n```  \n  \n### Parameters  \n  \n|||  \n|-|-|  \n|Parameter|Description|  \n|[in] `pDocument`|A pointer to the `CDocument` to save.|  \n|[in] `bResetModifiedFlag`|`TRUE` indicates that the `CDataRecoveryHandler` considers `pDocument` to be modified; `FALSE` indicates that the framework considers `pDocument` to be unmodified. See the Remarks section for more information about the effect of this flag.|  \n  \n### Return Value  \n `TRUE` if the appropriate flags are set and `pDocument` is a valid `CDocument` object.  \n  \n### Remarks  \n Each `CDocument` object has a flag that indicates if it has changed since the last save. Use [CDocument::IsModified](../../mfc/reference/cdocument-class.md#cdocument__ismodified) to determine the state of this flag. If a `CDocument` has not changed since the last save, `AutosaveDocumentInfo` deletes any autosaved files for that document. If a document has changed since the last save, closing it prompts the user to save the document before closing.  \n  \n> [!NOTE]\n>  Using `bResetModifiedFlag` to change the state of the document to unmodified may cause the user to lose unsaved data. If the framework considers a document unmodified, closing it does not prompt the user to save.  \n  \n This method throws an exception with the [ASSERT](http://msdn.microsoft.com/library/1e70902d-d58c-4e7b-9f69-2aeb6cbe476c) macro if `pDocument` is not a valid `CDocument` object.  \n  \n To use this method, either `AFX_RESTART_MANAGER_AUTOSAVE_AT_RESTART` or `AFX_RESTARTMANAGER_AUTOSAVE_AT_INTERVAL` must be set in `m_dwRestartManagerSupportFlags`. See [CDataRecoveryHandler Class](../../mfc/reference/cdatarecoveryhandler-class.md) for more information about the `m_dwRestartManagerSupportFlags` parameter.  \n  \n##  <a name=\"cdatarecoveryhandler__cdatarecoveryhandler\"></a>  CDataRecoveryHandler::CDataRecoveryHandler  \n Constructs a `CDataRecoveryHandler` object.  \n  \n```  \nCDataRecoveryHandler(\n    DWORD dwRestartManagerSupportFlags,  \n    int nAutosaveInterval);\n```  \n  \n### Parameters  \n  \n|||  \n|-|-|  \n|Parameter|Description|  \n|[in] `dwRestartManagerSupportFlags`|Indicates which options of the restart manager are supported.|  \n|[in] `nAutosaveInterval`|The time between autosaves. This parameter is in milliseconds.|  \n  \n### Remarks  \n The MFC framework automatically creates a `CDataRecoveryHandler` object for your application when you use the **New Project** wizard. Unless you are customizing the data recovery behavior or the restart manager, you should not create a `CDataRecoveryHandler` object.  \n  \n For more information about the support flags, see [CDataRecoveryHandler Class](../../mfc/reference/cdatarecoveryhandler-class.md).  \n  \n##  <a name=\"cdatarecoveryhandler__createdocumentinfo\"></a>  CDataRecoveryHandler::CreateDocumentInfo  \n Adds a document to the list of open documents.  \n  \n```  \nvirtual BOOL CreateDocumentInfo(CDocument* pDocument);\n```  \n  \n### Parameters  \n  \n|||  \n|-|-|  \n|Parameter|Description|  \n|[in] `pDocument`|A pointer to a `CDocument`. This method creates the document information for this `CDocument`.|  \n  \n### Return Value  \n The default implementation returns `TRUE`.  \n  \n### Remarks  \n This method checks if `pDocument` is already in the list of documents before it adds the document. If `pDocument` is already in the list, this method deletes the autosaved file associated with `pDocument`.  \n  \n To use this method, either `AFX_RESTART_MANAGER_AUTOSAVE_AT_RESTART` or `AFX_RESTARTMANAGER_AUTOSAVE_AT_INTERVAL` must be set in `m_dwRestartManagerSupportFlags`. See [CDataRecoveryHandler Class](../../mfc/reference/cdatarecoveryhandler-class.md) for more information about the `m_dwRestartManagerSupportFlags` parameter.  \n  \n##  <a name=\"cdatarecoveryhandler__deleteallautosavedfiles\"></a>  CDataRecoveryHandler::DeleteAllAutosavedFiles  \n Deletes all the current autosaved files.  \n  \n```  \nvirtual BOOL DeleteAllAutosavedFiles();\n```  \n  \n### Return Value  \n The default implementation always returns `TRUE`.  \n  \n##  <a name=\"cdatarecoveryhandler__deleteautosavedfile\"></a>  CDataRecoveryHandler::DeleteAutosavedFile  \n Deletes the specified autosaved file.  \n  \n```  \nvirtual BOOL DeleteAutosavedFile(const CString& strAutosavedFile);\n```  \n  \n### Parameters  \n  \n|||  \n|-|-|  \n|Parameter|Description|  \n|[in] `strAutosavedFile`|A string that contains the autosaved file name.|  \n  \n### Return Value  \n The default implementation always return `TRUE`.  \n  \n### Remarks  \n If this method cannot delete the autosaved file, it saves the name of the file in a list. The destructor for the `CDataRecoveryHandler` tries to delete each autosaved file specified in that list.  \n  \n##  <a name=\"cdatarecoveryhandler__generateautosavefilename\"></a>  CDataRecoveryHandler::GenerateAutosaveFileName  \n Generates the name for an autosave file associated with the supplied document file name.  \n  \n```  \nvirtual CString GenerateAutosaveFileName(const CString& strDocumentName) const;\n\n \n```  \n  \n### Parameters  \n [in] `strDocumentName`  \n A string that contains the document name. `GenerateAutosaveFileName` uses this document name to generate a corresponding autosave file name.  \n  \n### Return Value  \n The autosave file name generated from `strDocumentName`.  \n  \n### Remarks  \n Each document name has a one-to-one mapping with an autosave file name.  \n  \n##  <a name=\"cdatarecoveryhandler__getautosaveinterval\"></a>  CDataRecoveryHandler::GetAutosaveInterval  \n Returns the interval between autosave tries.  \n  \n```  \nvirtual int GetAutosaveInterval() const;\n\n \n```  \n  \n### Return Value  \n The number of milliseconds between autosave tries.  \n  \n##  <a name=\"cdatarecoveryhandler__getautosavepath\"></a>  CDataRecoveryHandler::GetAutosavePath  \n Returns the path of the autosaved files.  \n  \n```  \nvirtual CString GetAutosavePath() const;\n\n \n```  \n  \n### Return Value  \n The location where the autosaved documents are stored.  \n  \n##  <a name=\"cdatarecoveryhandler__getdocumentlistname\"></a>  CDataRecoveryHandler::GetDocumentListName  \n Retrieves the document name from a `CDocument` object.  \n  \n```  \nvirtual CString GetDocumentListName(CDocument* pDocument) const;\n\n \n```  \n  \n### Parameters  \n  \n|||  \n|-|-|  \n|Parameter|Description|  \n|[in] `pDocument`|A pointer to a `CDocument`. `GetDocumentListName` retrieves the document name from this `CDocument`.|  \n  \n### Return Value  \n The document name from `pDocument`.  \n  \n### Remarks  \n The `CDataRecoveryHandler` uses the document name as the key in `m_mapDocNameToAutosaveName`, `m_mapDocNameToDocumentPtr`, and `m_mapDocNameToRestoreBool`. These parameter enable the `CDataRecoveryHandler` to monitor `CDocument` objects, the autosave file name, and the autosave settings.  \n  \n##  <a name=\"cdatarecoveryhandler__getnormaldocumenttitle\"></a>  CDataRecoveryHandler::GetNormalDocumentTitle  \n Retrieves the normal title for the specified document.  \n  \n```  \nvirtual CString GetNormalDocumentTitle(CDocument* pDocument);\n```  \n  \n### Parameters  \n  \n|||  \n|-|-|  \n|Parameter|Description|  \n|[in] `pDocument`|A pointer to a `CDocument`.|  \n  \n### Return Value  \n The normal title for the specified document.  \n  \n### Remarks  \n The normal title of a document is usually the file name of the document without the path. This is the title in the **File name** field of the **Save As** dialog box.  \n  \n##  <a name=\"cdatarecoveryhandler__getrecovereddocumenttitle\"></a>  CDataRecoveryHandler::GetRecoveredDocumentTitle  \n Creates and returns the title for the recovered document.  \n  \n```  \nvirtual CString GetRecoveredDocumentTitle(const CString& strDocumentTitle) const;\n\n \n```  \n  \n### Parameters  \n [in] `strDocumentTitle`  \n The normal title for the document.  \n  \n### Return Value  \n The recovered document title.  \n  \n### Remarks  \n By default, the recovered title of a document is the normal title with **[recovered]** appended to it. The recovered title is displayed to the user when the `CDataRecoveryHandler` queries the user to restore autosaved documents.  \n  \n##  <a name=\"cdatarecoveryhandler__getrestartidentifier\"></a>  CDataRecoveryHandler::GetRestartIdentifier  \n Retrieves the unique restart identifier for the application.  \n  \n```  \nvirtual CString GetRestartIdentifier() const;\n\n \n```  \n  \n### Return Value  \n The unique restart identifier.  \n  \n### Remarks  \n The restart identifier is unique for each execution of the application.  \n  \n The `CDataRecoveryHandler` stores information in the registry about the currently open documents. When the restart manager exits an application and restarts it, it supplies the restart identifier to the `CDataRecoveryHandler`. The `CDataRecoveryHandler` uses the restart identifier to retrieve the list of previously open documents. This enables the `CDataRecoveryHandler` to try to find and restore autosaved files.  \n  \n##  <a name=\"cdatarecoveryhandler__getsavedocumentinfoonidle\"></a>  CDataRecoveryHandler::GetSaveDocumentInfoOnIdle  \n Indicates whether the `CDataRecoveryHandler` performs an autosave on the current idle loop.  \n  \n```  \nvirtual BOOL GetSaveDocumentInfoOnIdle() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` indicates the `CDataRecoveryHandler` autosaves on the current idle loop; `FALSE` indicates it does not.  \n  \n##  <a name=\"cdatarecoveryhandler__getshutdownbyrestartmanager\"></a>  CDataRecoveryHandler::GetShutdownByRestartManager  \n Indicates whether the restart manager caused the application to exit.  \n  \n```  \nvirtual BOOL GetShutdownByRestartManager() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` indicates the restart manager caused the application to exit; `FALSE` indicates it did not.  \n  \n##  <a name=\"cdatarecoveryhandler__initialize\"></a>  CDataRecoveryHandler::Initialize  \n Initializes the `CDataRecoveryHandler`.  \n  \n```  \nvirtual BOOL Initialize();\n```  \n  \n### Return Value  \n `TRUE` if the initialization is successful; otherwise `FALSE`.  \n  \n### Remarks  \n The initialization process loads the path for storing autosave files from the registry. If the `Initialize` method cannot find this directory or if the path is `NULL`, `Initialize` fails and returns `FALSE`.  \n  \n Use [CDataRecoveryHandler::SetAutosavePath](#cdatarecoveryhandler__setautosavepath) to change the autosave path after your application initializes the `CDataRecoveryHandler`.  \n  \n The `Initialize` method also starts a timer to monitor when the next autosave occurs. Use [CDataRecoveryHandler::SetAutosaveInterval](#cdatarecoveryhandler__setautosaveinterval) to change the autosave interval after your application initializes the `CDataRecoveryHandler`.  \n  \n##  <a name=\"cdatarecoveryhandler__queryrestoreautosaveddocuments\"></a>  CDataRecoveryHandler::QueryRestoreAutosavedDocuments  \n Displays a dialog box to the user for each document that the `CDataRecoveryHandler` autosaved. The dialog box determines whether the user wants to restore the autosaved document.  \n  \n```  \nvirtual void QueryRestoreAutosavedDocuments();\n```  \n  \n### Remarks  \n If your application is Unicode, this method displays a [CTaskDialog](../../mfc/reference/ctaskdialog-class.md) to the user. Otherwise, the framework uses [AfxMessageBox](../../mfc/reference/cstring-formatting-and-message-box-display.md#afxmessagebox) to query the user.  \n  \n After `QueryRestoreAutosavedDocuments` gathers all the responses from the user, it stores the information in the member variable `m_mapDocNameToRestoreBool`. This method does not restore the autosaved documents.  \n  \n##  <a name=\"cdatarecoveryhandler__readopendocumentlist\"></a>  CDataRecoveryHandler::ReadOpenDocumentList  \n Loads the open document list from the registry.  \n  \n```  \nvirtual BOOL ReadOpenDocumentList();\n```  \n  \n### Return Value  \n `TRUE` indicates that `ReadOpenDocumentList` loaded the information for at least one document from the registry; `FALSE` indicates no document information was loaded.  \n  \n### Remarks  \n This function loads the open document information from the registry and stores it in the member variable `m_mapDocNameToAutosaveName`.  \n  \n After `ReadOpenDocumentList` loads all the data, it deletes the document information from the registry.  \n  \n##  <a name=\"cdatarecoveryhandler__removedocumentinfo\"></a>  CDataRecoveryHandler::RemoveDocumentInfo  \n Removes the supplied document from the open document list.  \n  \n```  \nvirtual BOOL RemoveDocumentInfo(CDocument* pDocument);\n```  \n  \n### Parameters  \n  \n|||  \n|-|-|  \n|Parameter|Description|  \n|[in] `pDocument`|A pointer to the document to remove.|  \n  \n### Return Value  \n `TRUE` if `pDocument` was removed from the list; `FALSE` if an error occurred.  \n  \n### Remarks  \n When the user closes a document, the framework uses this method to remove it from the list of open documents.  \n  \n If `RemoveDocumentInfo` cannot find `pDocument` in the list of open documents, it does nothing and returns `TRUE`.  \n  \n To use this method, `AFX_RESTART_MANAGER_REOPEN_PREVIOUS_FILES` must be set in `m_dwRestartManagerSupportFlags`. See [CDataRecoveryHandler Class](../../mfc/reference/cdatarecoveryhandler-class.md) for more information about the `m_dwRestartManagerSupportFlags` parameter.  \n  \n##  <a name=\"cdatarecoveryhandler__reopenpreviousdocuments\"></a>  CDataRecoveryHandler::ReopenPreviousDocuments  \n Opens the previously open documents.  \n  \n```  \nvirtual BOOL ReopenPreviousDocuments();\n```  \n  \n### Return Value  \n `TRUE` if at least one document was opened; otherwise `FALSE`.  \n  \n### Remarks  \n This method opens the most recent save of the previously open documents. If a document was not saved or autosaved, `ReopenPreviousDocuments` opens a blank document based on the template for that file type.  \n  \n To use this method, `AFX_RESTART_MANAGER_REOPEN_PREVIOUS_FILES` must be set in `m_dwRestartManagerSupportFlags`. See [CDataRecoveryHandler Class](../../mfc/reference/cdatarecoveryhandler-class.md) for more information about the `m_dwRestartManagerSupportFlags` parameter. If this parameter is not set, `ReopenPreviousDocuments` does nothing and returns `FALSE`.  \n  \n If there are no documents stored in the list of previously open documents, `ReopenPreviousDocuments` does nothing and returns `FALSE`.  \n  \n##  <a name=\"cdatarecoveryhandler__restoreautosaveddocuments\"></a>  CDataRecoveryHandler::RestoreAutosavedDocuments  \n Restores the autosaved documents based on user input.  \n  \n```  \nvirtual BOOL RestoreAutosavedDocuments();\n```  \n  \n### Return Value  \n `TRUE` if this method successfully restores the documents.  \n  \n### Remarks  \n This method calls [CDataRecoveryHandler::QueryRestoreAutosavedDocuments](#cdatarecoveryhandler__queryrestoreautosaveddocuments) to determine which documents the user wants to restore. If a user decides not to restore an autosaved document, `RestoreAutosavedDocuments` deletes the autosave file. Otherwise, `RestoreAutosavedDocuments` replaces the open document with the autosaved version.  \n  \n To use this method, either `AFX_RESTART_MANAGER_REOPEN_PREVIOUS_FILES` or `AFX_RESTART_MANAGER_RESTORE_AUTOSAVED_FILES` must be set in `m_dwRestartManagerSupportFlags`. See [CDataRecoveryHandler Class](../../mfc/reference/cdatarecoveryhandler-class.md) for more information about the `m_dwRestartManagerSupportFlags` parameter.  \n  \n##  <a name=\"cdatarecoveryhandler__saveopendocumentlist\"></a>  CDataRecoveryHandler::SaveOpenDocumentList  \n Saves the current list of open documents to the Windows registry.  \n  \n```  \nvirtual BOOL SaveOpenDocumentList();\n```  \n  \n### Return Value  \n `TRUE` if there are no open documents to save or if they were saved successfully. `FALSE` if there are documents to save to the registry, but they were not saved because an error occurred.  \n  \n### Remarks  \n The restart manager calls `SaveOpenDocumentList` when the application exits unexpectedly or when it exits for an upgrade. When the application restarts, it uses [CDataRecoveryHandler::ReadOpenDocumentList](#cdatarecoveryhandler__readopendocumentlist) to retrieve the list of open documents.  \n  \n This method saves only the list of open documents. The method [CDataRecoveryHandler::AutosaveDocumentInfo](#cdatarecoveryhandler__autosavedocumentinfo) is responsible for saving the documents themselves.  \n  \n##  <a name=\"cdatarecoveryhandler__setautosaveinterval\"></a>  CDataRecoveryHandler::SetAutosaveInterval  \n Sets the time between autosave cycles in milliseconds.  \n  \n```  \nVirtual void SetAutosaveInterval(int nAutosaveInterval);\n```  \n  \n### Parameters  \n [in] `nAutosaveInterval`  \n The new autosave interval in milliseconds.  \n  \n##  <a name=\"cdatarecoveryhandler__setautosavepath\"></a>  CDataRecoveryHandler::SetAutosavePath  \n Sets the directory where autosaved files are stored.  \n  \n```  \nvirtual void SetAutosavePath(const CString& strAutosavePath);\n```  \n  \n### Parameters  \n  \n|||  \n|-|-|  \n|Parameter|Description|  \n|[in] `strAutosavePath`|The path where autosave files are stored.|  \n  \n### Remarks  \n Changing the autosave directory does not move currently autosaved files.  \n  \n##  <a name=\"cdatarecoveryhandler__setrestartidentifier\"></a>  CDataRecoveryHandler::SetRestartIdentifier  \n Sets the unique restart identifier for this instance of the `CDataRecoveryHandler`.  \n  \n```  \nvirtual void SetRestartIdentifier(const CString& strRestartIdentifier);\n```  \n  \n### Parameters  \n  \n|||  \n|-|-|  \n|Parameter|Description|  \n|[in] `strRestartIdentifier`|The unique identifier for the restart manager.|  \n  \n### Remarks  \n The restart manager records information about the open documents in the registry. This information is stored with the unique restart identifier as the key. Because the restart identifier is unique for each instance of an application, multiple instances of an application may exit unexpectedly and the restart manager can recover each of them.  \n  \n##  <a name=\"cdatarecoveryhandler__setsavedocumentinfoonidle\"></a>  CDataRecoveryHandler::SetSaveDocumentInfoOnIdle  \n Sets whether the `CDataRecoveryHandler` saves the open document information to the Windows registry during the current idle cycle.  \n  \n```  \nvirtual void SetSaveDocumentInfoOnIdle(BOOL bSaveOnIdle);\n```  \n  \n### Parameters  \n  \n|||  \n|-|-|  \n|Parameter|Description|  \n|[in] `bSaveOnIdle`|`TRUE` to save document information during the current idle cycle; `FALSE to not perform a save`.|  \n  \n##  <a name=\"cdatarecoveryhandler__setshutdownbyrestartmanager\"></a>  CDataRecoveryHandler::SetShutdownByRestartManager  \n Sets whether the previous exit of the application was caused by the restart manager.  \n  \n```  \nvirtual void SetShutdownByRestartManager(BOOL bShutdownByRestartManager);\n```  \n  \n### Parameters  \n  \n|||  \n|-|-|  \n|Parameter|Description|  \n|[in] `bShutdownByRestartManager`|`TRUE` to indicate that the restart manager caused the application to exit; `FALSE` to indicate that the application exited for another reason.|  \n  \n### Remarks  \n The framework behaves differently based on whether the previous exit was unexpected or whether it was initiated by the restart manager.  \n  \n##  <a name=\"cdatarecoveryhandler__updatedocumentinfo\"></a>  CDataRecoveryHandler::UpdateDocumentInfo  \n Updates the information for a document because the user saved it.  \n  \n```  \nvirtual BOOL UpdateDocumentInfo(CDocument* pDocument);\n```  \n  \n### Parameters  \n  \n|||  \n|-|-|  \n|Parameter|Description|  \n|[in] `pDocument`|A pointer to the saved document.|  \n  \n### Return Value  \n `TRUE` if this method deleted the autosaved document and updated the document information; `FALSE` if an error occurred.  \n  \n### Remarks  \n When a user saves a document, the application removes the autosaved file because it is no longer needed. `UpdateDocumentInfo` deletes the autosaved file by calling [CDataRecoveryHandler::RemoveDocumentInfo](#cdatarecoveryhandler__removedocumentinfo). `UpdateDocumentInfo` then adds the information from `pDocument` to the list of currently open documents because `RemoveDocumentInfo` deletes that information, but the saved document is still open.  \n  \n To use this method, `AFX_RESTART_MANAGER_REOPEN_PREVIOUS_FILES` must be set in `m_dwRestartManagerSupportFlags`. See [CDataRecoveryHandler Class](../../mfc/reference/cdatarecoveryhandler-class.md) for more information about the `m_dwRestartManagerSupportFlags` parameter.  \n  \n## See Also  \n [Classes](../../mfc/reference/mfc-classes.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [CObject Class](../../mfc/reference/cobject-class.md)   \n [How to: Add Restart Manager Support](../../mfc/how-to-add-restart-manager-support.md)\n\n"}