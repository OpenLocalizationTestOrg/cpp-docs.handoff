<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f6f2d2cc97d2de5601ad68012d102bb3200a9e37</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\text\support-for-using-wmain.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7fd9cd81405e960bf3df52e315b96712ed9cd95a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">707e907f8899a2fa93776aa68b95eea1c8df70e5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Support for Using wmain | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Support for Using wmain</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Visual C++ supports defining a <bpt id="p1">**</bpt>wmain<ept id="p1">**</ept> function and passing wide-character arguments to your Unicode application.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You declare formal parameters to <bpt id="p1">**</bpt>wmain<ept id="p1">**</ept>, using a format similar to <bpt id="p2">**</bpt>main<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can then pass wide-character arguments and, optionally, a wide-character environment pointer to the program.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`argv`</ph> and <ph id="ph2">`envp`</ph> parameters to <bpt id="p1">**</bpt>wmain<ept id="p1">**</ept> are of type <ph id="ph3">`wchar_t*`</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>MFC Unicode applications use <bpt id="p1">**</bpt>wWinMain<ept id="p1">**</ept> as the entry point.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In this case, <ph id="ph1">`CWinApp::m_lpCmdLine`</ph> is a Unicode string.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Be sure to set <bpt id="p1">**</bpt>wWinMainCRTStartup<ept id="p1">**</ept> with the <bpt id="p2">[</bpt>/ENTRY<ept id="p2">](../build/reference/entry-entry-point-symbol.md)</ept> linker option.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If your program uses a <bpt id="p1">**</bpt>main<ept id="p1">**</ept> function, the multibyte-character environment is created by the run-time library at program startup.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A wide-character copy of the environment is created only when needed (for example, by a call to the <ph id="ph1">`_wgetenv`</ph> or <ph id="ph2">`_wputenv`</ph> functions).</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>On the first call to <ph id="ph1">`_wputenv`</ph>, or on the first call to <ph id="ph2">`_wgetenv`</ph> if an MBCS environment already exists, a corresponding wide-character string environment is created.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The environment is then pointed to by the <ph id="ph1">`_wenviron`</ph> global variable, which is a wide-character version of the <ph id="ph2">`_environ`</ph> global variable.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>At this point, two copies of the environment (MBCS and Unicode) exist simultaneously and are maintained by the run-time system throughout the life of the program.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Similarly, if your program uses a <bpt id="p1">**</bpt>wmain<ept id="p1">**</ept> function, a wide-character environment is created at program startup and is pointed to by the <ph id="ph1">`_wenviron`</ph> global variable.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>An MBCS (ASCII) environment is created on the first call to <ph id="ph1">`_putenv`</ph> or <ph id="ph2">`getenv`</ph> and is pointed to by the <ph id="ph3">`_environ`</ph> global variable.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Support for Unicode</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Unicode Programming Summary</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>WinMain Function</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>