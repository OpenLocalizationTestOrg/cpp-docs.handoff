{"nodes":[{"pos":[12,81],"content":"Relationship Between a C++ Window Object and an HWND | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Relationship Between a C++ Window Object and an HWND | Microsoft Docs","pos":[0,69]}]},{"content":"Relationship Between a C++ Window Object and an HWND","pos":[733,785]},{"content":"The window <bpt id=\"p1\">*</bpt>object<ept id=\"p1\">*</ept> is an object of the C++ <ph id=\"ph1\">`CWnd`</ph> class (or a derived class) that your program creates directly.","pos":[786,899],"source":"The window *object* is an object of the C++ `CWnd` class (or a derived class) that your program creates directly."},{"content":"It comes and goes in response to your program's constructor and destructor calls.","pos":[900,981]},{"content":"The Windows <bpt id=\"p1\">*</bpt>window<ept id=\"p1\">*</ept>, on the other hand, is an opaque handle to an internal Windows data structure that corresponds to a window and consumes system resources when present.","pos":[982,1153],"source":" The Windows *window*, on the other hand, is an opaque handle to an internal Windows data structure that corresponds to a window and consumes system resources when present."},{"content":"A Windows window is identified by a \"window handle\" (<ph id=\"ph1\">`HWND`</ph>) and is created after the <ph id=\"ph2\">`CWnd`</ph> object is created by a call to the <bpt id=\"p1\">**</bpt>Create<ept id=\"p1\">**</ept> member function of class <ph id=\"ph3\">`CWnd`</ph>.","pos":[1154,1325],"source":" A Windows window is identified by a \"window handle\" (`HWND`) and is created after the `CWnd` object is created by a call to the **Create** member function of class `CWnd`."},{"content":"The window may be destroyed either by a program call or by a user's action.","pos":[1326,1401]},{"content":"The window handle is stored in the window object's <ph id=\"ph1\">`m_hWnd`</ph> member variable.","pos":[1402,1478],"source":" The window handle is stored in the window object's `m_hWnd` member variable."},{"content":"The following figure shows the relationship between the C++ window object and the Windows window.","pos":[1479,1576]},{"content":"Creating windows is discussed in <bpt id=\"p1\">[</bpt>Creating Windows<ept id=\"p1\">](../mfc/creating-windows.md)</ept>.","pos":[1577,1657],"source":" Creating windows is discussed in [Creating Windows](../mfc/creating-windows.md)."},{"content":"Destroying windows is discussed in <bpt id=\"p1\">[</bpt>Destroying Window Objects<ept id=\"p1\">](../mfc/destroying-window-objects.md)</ept>.","pos":[1658,1758],"source":" Destroying windows is discussed in [Destroying Window Objects](../mfc/destroying-window-objects.md)."},{"content":"CWnd window object and resulting window","pos":[1767,1806]},{"content":"Window Object and Windows Window","pos":[1846,1878]},{"content":"See Also","pos":[1887,1895]},{"content":"Window Objects","pos":[1900,1914]}],"content":"---\ntitle: \"Relationship Between a C++ Window Object and an HWND | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"HWND\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"Windows window [C++]\"\n  - \"window objects [C++], HWND and\"\n  - \"HWND\"\n  - \"CWnd class, HWND\"\n  - \"HWND, window objects\"\nms.assetid: f2e76340-6691-4ee6-9424-0345634a9469\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Relationship Between a C++ Window Object and an HWND\nThe window *object* is an object of the C++ `CWnd` class (or a derived class) that your program creates directly. It comes and goes in response to your program's constructor and destructor calls. The Windows *window*, on the other hand, is an opaque handle to an internal Windows data structure that corresponds to a window and consumes system resources when present. A Windows window is identified by a \"window handle\" (`HWND`) and is created after the `CWnd` object is created by a call to the **Create** member function of class `CWnd`. The window may be destroyed either by a program call or by a user's action. The window handle is stored in the window object's `m_hWnd` member variable. The following figure shows the relationship between the C++ window object and the Windows window. Creating windows is discussed in [Creating Windows](../mfc/creating-windows.md). Destroying windows is discussed in [Destroying Window Objects](../mfc/destroying-window-objects.md).  \n  \n ![CWnd window object and resulting window](../mfc/media/vc37fj1.gif \"vc37fj1\")  \nWindow Object and Windows Window  \n  \n## See Also  \n [Window Objects](../mfc/window-objects.md)\n\n"}