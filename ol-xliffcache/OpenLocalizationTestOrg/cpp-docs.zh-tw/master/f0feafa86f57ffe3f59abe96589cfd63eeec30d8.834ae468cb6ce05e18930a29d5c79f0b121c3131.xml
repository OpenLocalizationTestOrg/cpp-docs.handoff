{"nodes":[{"pos":[12,47],"content":"_variant_t::Attach | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_variant_t::Attach | Microsoft Docs","pos":[0,35]}]},{"content":"_variant_t::Attach","pos":[693,711]},{"content":"Microsoft Specific","pos":[714,732]},{"pos":[741,800],"content":"Attaches a <bpt id=\"p1\">**</bpt>VARIANT<ept id=\"p1\">**</ept> object into the <ph id=\"ph1\">`_variant_t`</ph> object.","source":"Attaches a **VARIANT** object into the `_variant_t` object."},{"content":"Syntax","pos":[809,815]},{"content":"Parameters","pos":[892,902]},{"content":"varSrc","pos":[907,913]},{"content":"A <bpt id=\"p1\">**</bpt>VARIANT<ept id=\"p1\">**</ept> object to be attached to this <ph id=\"ph1\">`_variant_t`</ph> object.","pos":[918,982],"source":" A **VARIANT** object to be attached to this `_variant_t` object."},{"content":"Remarks","pos":[991,998]},{"content":"Takes ownership of the <bpt id=\"p1\">**</bpt>VARIANT<ept id=\"p1\">**</ept> by encapsulating it.","pos":[1002,1057],"source":"Takes ownership of the **VARIANT** by encapsulating it."},{"content":"This member function releases any existing encapsulated <bpt id=\"p1\">**</bpt>VARIANT<ept id=\"p1\">**</ept>, then copies the supplied <bpt id=\"p2\">**</bpt>VARIANT<ept id=\"p2\">**</ept>, and sets its <bpt id=\"p3\">**</bpt>VARTYPE<ept id=\"p3\">**</ept> to <ph id=\"ph1\">`VT_EMPTY`</ph> to make sure its resources can only be released by the <ph id=\"ph2\">`_variant_t`</ph> destructor.","pos":[1058,1283],"source":" This member function releases any existing encapsulated **VARIANT**, then copies the supplied **VARIANT**, and sets its **VARTYPE** to `VT_EMPTY` to make sure its resources can only be released by the `_variant_t` destructor."},{"content":"END Microsoft Specific","pos":[1292,1314]},{"content":"See Also","pos":[1325,1333]},{"content":"_variant_t Class","pos":[1338,1354]}],"content":"---\ntitle: \"_variant_t::Attach | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"_variant_t::Attach\"\n  - \"_variant_t.Attach\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"Attach method\"\n  - \"VARIANT object, attach\"\n  - \"VARIANT object\"\nms.assetid: 2f02bd08-2306-4477-aa88-d2a5dee2b859\ncaps.latest.revision: 6\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _variant_t::Attach\n**Microsoft Specific**  \n  \n Attaches a **VARIANT** object into the `_variant_t` object.  \n  \n## Syntax  \n  \n```  \n  \n      void Attach(  \n   VARIANT& varSrc   \n);  \n```  \n  \n#### Parameters  \n *varSrc*  \n A **VARIANT** object to be attached to this `_variant_t` object.  \n  \n## Remarks  \n Takes ownership of the **VARIANT** by encapsulating it. This member function releases any existing encapsulated **VARIANT**, then copies the supplied **VARIANT**, and sets its **VARTYPE** to `VT_EMPTY` to make sure its resources can only be released by the `_variant_t` destructor.  \n  \n **END Microsoft Specific**  \n  \n## See Also  \n [_variant_t Class](../cpp/variant-t-class.md)"}