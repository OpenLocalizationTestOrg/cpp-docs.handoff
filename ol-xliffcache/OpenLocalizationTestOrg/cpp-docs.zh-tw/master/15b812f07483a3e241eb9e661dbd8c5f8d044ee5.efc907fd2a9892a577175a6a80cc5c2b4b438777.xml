{"nodes":[{"pos":[12,47],"content":"ClassFactory Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ClassFactory Class | Microsoft Docs","pos":[0,35]}]},{"content":"ClassFactory Class","pos":[658,676]},{"content":"Implements the basic functionality of the IClassFactory interface.","pos":[677,743]},{"content":"Syntax","pos":[752,758]},{"content":"Parameters","pos":[1145,1155]},{"content":"The zeroth interface.","pos":[1167,1188]},{"content":"The first interface.","pos":[1203,1223]},{"content":"The second interface.","pos":[1238,1259]},{"content":"Remarks","pos":[1268,1275]},{"pos":[1279,1351],"content":"Utilize <ph id=\"ph1\">`ClassFactory`</ph> to provide a user-defined factory implementation.","source":"Utilize `ClassFactory` to provide a user-defined factory implementation."},{"pos":[1358,1536],"content":"The following programming pattern demonstrates how to use the <bpt id=\"p1\">[</bpt>Implements<ept id=\"p1\">](../windows/implements-structure.md)</ept> structure to specify more than three interfaces on a class factory.","source":"The following programming pattern demonstrates how to use the [Implements](../windows/implements-structure.md) structure to specify more than three interfaces on a class factory."},{"content":"Members","pos":[1617,1624]},{"content":"Public Constructors","pos":[1634,1653]},{"content":"Name","pos":[1660,1664]},{"content":"Description","pos":[1665,1676]},{"content":"ClassFactory::ClassFactory Constructor","pos":[1715,1753]},{"content":"Public Methods","pos":[1819,1833]},{"content":"Name","pos":[1840,1844]},{"content":"Description","pos":[1845,1856]},{"content":"ClassFactory::AddRef Method","pos":[1895,1922]},{"content":"Increments the reference count for the current ClassFactory object.","pos":[1966,2033]},{"content":"ClassFactory::LockServer Method","pos":[2039,2070]},{"content":"Increments or decrements the number of underlying objects that are tracked by the current ClassFactory object.","pos":[2118,2228]},{"content":"ClassFactory::QueryInterface Method","pos":[2234,2269]},{"content":"Retrieves a pointer to the interface specified by parameter.","pos":[2321,2381]},{"content":"ClassFactory::Release Method","pos":[2387,2415]},{"content":"Decrements the reference count for the current ClassFactory object.","pos":[2460,2527]},{"content":"Inheritance Hierarchy","pos":[2537,2558]},{"content":"Requirements","pos":[2780,2792]},{"pos":[2796,2816],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> module.h","source":"**Header:** module.h"},{"pos":[2823,2852],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> Microsoft::WRL","source":"**Namespace:** Microsoft::WRL"},{"content":"See Also","pos":[2861,2869]},{"content":"Microsoft::WRL Namespace","pos":[2874,2898]},{"content":"RuntimeClassType Enumeration","pos":[2944,2972]}],"content":"---\ntitle: \"ClassFactory Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"module/Microsoft::WRL::ClassFactory\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ClassFactory class\"\nms.assetid: f13e6bce-722b-4f18-b7cf-3ffa6345c1db\ncaps.latest.revision: 4\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# ClassFactory Class\nImplements the basic functionality of the IClassFactory interface.  \n  \n## Syntax  \n  \n```  \ntemplate <  \n   typename I0 = Details::Nil,  \n   typename I1 = Details::Nil,  \n   typename I2 = Details::Nil  \n>  \nclass ClassFactory : public Details::RuntimeClass<  \n   typename Details::InterfaceListHelper<IClassFactory,   \n   I0,   \n   I1,   \n   I2,   \n   Details::Nil>::TypeT,   \n   RuntimeClassFlags<ClassicCom | InhibitWeakReference>,   \n      false>;  \n```  \n  \n#### Parameters  \n `I0`  \n The zeroth interface.  \n  \n `I1`  \n The first interface.  \n  \n `I2`  \n The second interface.  \n  \n## Remarks  \n Utilize `ClassFactory` to provide a user-defined factory implementation.  \n  \n The following programming pattern demonstrates how to use the [Implements](../windows/implements-structure.md) structure to specify more than three interfaces on a class factory.  \n  \n `struct MyFactory : ClassFactory<Implements<I1, I2, I3>, I4, I5>`  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[ClassFactory::ClassFactory Constructor](../windows/classfactory-classfactory-constructor.md)||  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[ClassFactory::AddRef Method](../windows/classfactory-addref-method.md)|Increments the reference count for the current ClassFactory object.|  \n|[ClassFactory::LockServer Method](../windows/classfactory-lockserver-method.md)|Increments or decrements the number of underlying objects that are tracked by the current ClassFactory object.|  \n|[ClassFactory::QueryInterface Method](../windows/classfactory-queryinterface-method.md)|Retrieves a pointer to the interface specified by parameter.|  \n|[ClassFactory::Release Method](../windows/classfactory-release-method.md)|Decrements the reference count for the current ClassFactory object.|  \n  \n## Inheritance Hierarchy  \n `I0`  \n  \n `ChainInterfaces`  \n  \n `I0`  \n  \n `RuntimeClassBase`  \n  \n `ImplementsHelper`  \n  \n `DontUseNewUseMake`  \n  \n `RuntimeClassFlags`  \n  \n `RuntimeClassBaseT`  \n  \n `RuntimeClass`  \n  \n `ClassFactory`  \n  \n## Requirements  \n **Header:** module.h  \n  \n **Namespace:** Microsoft::WRL  \n  \n## See Also  \n [Microsoft::WRL Namespace](../windows/microsoft-wrl-namespace.md)   \n [RuntimeClassType Enumeration](../windows/runtimeclasstype-enumeration.md)"}