{"nodes":[{"pos":[12,44],"content":"Buffer Overflow | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Buffer Overflow | Microsoft Docs","pos":[0,32]}]},{"content":"Buffer Overflow","pos":[643,658]},{"content":"Varying character sizes can cause problems when you put characters into a buffer.","pos":[659,740]},{"content":"Consider the following code, which copies characters from a string, <ph id=\"ph1\">`sz`</ph>, into a buffer, <ph id=\"ph2\">`rgch`</ph>:","pos":[741,837],"source":" Consider the following code, which copies characters from a string, `sz`, into a buffer, `rgch`:"},{"content":"The question is: Was the last byte copied a lead byte?","pos":[928,982]},{"content":"The following does not solve the problem because it can potentially overflow the buffer:","pos":[983,1071]},{"content":"The <ph id=\"ph1\">`_mbccpy`</ph> call attempts to do the correct thing — copy the full character, whether it is 1 or 2 bytes.","pos":[1227,1333],"source":"The `_mbccpy` call attempts to do the correct thing — copy the full character, whether it is 1 or 2 bytes."},{"content":"But it does not take into account that the last character copied might not fit the buffer if the character is 2 bytes wide.","pos":[1334,1457]},{"content":"The correct solution is:","pos":[1458,1482]},{"content":"This code tests for possible buffer overflow in the loop test, using <ph id=\"ph1\">`_mbclen`</ph> to test the size of the current character pointed to by <ph id=\"ph2\">`sz`</ph>.","pos":[1657,1797],"source":"This code tests for possible buffer overflow in the loop test, using `_mbclen` to test the size of the current character pointed to by `sz`."},{"content":"By making a call to the <ph id=\"ph1\">`_mbsnbcpy`</ph> function, you can replace the code in the <ph id=\"ph2\">`while`</ph> loop with a single line of code.","pos":[1798,1916],"source":" By making a call to the `_mbsnbcpy` function, you can replace the code in the `while` loop with a single line of code."},{"content":"For example:","pos":[1917,1929]},{"content":"See Also","pos":[1994,2002]},{"content":"MBCS Programming Tips","pos":[2007,2028]}],"content":"---\ntitle: \"Buffer Overflow | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"buffers [C++], character sizes\"\n  - \"buffer overflows [C++]\"\n  - \"MBCS [C++], buffer overflow\"\nms.assetid: f2b7e40a-f02b-46d8-a449-51d26fc0c663\ncaps.latest.revision: 8\nauthor: \"ghogen\"\nms.author: \"ghogen\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Buffer Overflow\nVarying character sizes can cause problems when you put characters into a buffer. Consider the following code, which copies characters from a string, `sz`, into a buffer, `rgch`:  \n  \n```  \ncb = 0;  \nwhile( cb < sizeof( rgch ) )  \n    rgch[ cb++ ] = *sz++;  \n```  \n  \n The question is: Was the last byte copied a lead byte? The following does not solve the problem because it can potentially overflow the buffer:  \n  \n```  \ncb = 0;  \nwhile( cb < sizeof( rgch ) )  \n{  \n    _mbccpy( rgch + cb, sz );  \n    cb += _mbclen( sz );  \n    sz = _mbsinc( sz );  \n}  \n```  \n  \n The `_mbccpy` call attempts to do the correct thing — copy the full character, whether it is 1 or 2 bytes. But it does not take into account that the last character copied might not fit the buffer if the character is 2 bytes wide. The correct solution is:  \n  \n```  \ncb = 0;  \nwhile( (cb + _mbclen( sz )) <= sizeof( rgch ) )  \n{  \n    _mbccpy( rgch + cb, sz );  \n    cb += _mbclen( sz );  \n    sz = _mbsinc( sz );  \n}  \n```  \n  \n This code tests for possible buffer overflow in the loop test, using `_mbclen` to test the size of the current character pointed to by `sz`. By making a call to the `_mbsnbcpy` function, you can replace the code in the `while` loop with a single line of code. For example:  \n  \n```  \n_mbsnbcpy( rgch, sz, sizeof( rgch ) );  \n```  \n  \n## See Also  \n [MBCS Programming Tips](../text/mbcs-programming-tips.md)"}