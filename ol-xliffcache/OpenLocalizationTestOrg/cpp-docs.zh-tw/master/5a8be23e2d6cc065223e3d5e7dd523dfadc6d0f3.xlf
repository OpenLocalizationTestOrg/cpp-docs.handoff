<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5a8be23e2d6cc065223e3d5e7dd523dfadc6d0f3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\intrinsics\interlockedexchangeadd-intrinsic-functions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">feed721927c70198db35e3c277e5fb7faafdb1c9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dcaa265cef6320701dfc8d5a0cdb3bafb370e5cb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>_InterlockedExchangeAdd Intrinsic Functions | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>_InterlockedExchangeAdd Intrinsic Functions</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Microsoft Specific</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Provide compiler intrinsic support for the Win32 <ph id="ph1">[!INCLUDE[winsdkshort](../atl-mfc-shared/reference/includes/winsdkshort_md.md)]</ph> <bpt id="p1">[</bpt>_InterlockedExchangeAdd Intrinsic Functions<ept id="p1">](../intrinsics/interlockedexchangeadd-intrinsic-functions.md)</ept> function.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>[in, out]</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The value to be added to; replaced by the result of the addition.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The value to add.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The return value is the initial value of the variable pointed to by the <ph id="ph1">`Addend`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Intrinsic</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Architecture</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Header</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>, <ph id="ph1">`_InterlockedExchangeAdd8`</ph>, <ph id="ph2">`_InterlockedExchangeAdd16`</ph>,</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>x86, ARM,</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>intrin.h&gt;</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>, <ph id="ph1">`_InterlockedExchangeAdd_rel`</ph>, <ph id="ph2">`_InterlockedExchangeAdd_nf`</ph>, <ph id="ph3">`_InterlockedExchangeAdd8_acq`</ph>, <ph id="ph4">`_InterlockedExchangeAdd8_rel`</ph>, <ph id="ph5">`_InterlockedExchangeAdd8_nf`</ph>,<ph id="ph6">`_InterlockedExchangeAdd16_acq`</ph>, <ph id="ph7">`_InterlockedExchangeAdd16_rel`</ph>, <ph id="ph8">`_InterlockedExchangeAdd16_nf`</ph>, <ph id="ph9">`_InterlockedExchangeAdd64_acq`</ph>, <ph id="ph10">`_InterlockedExchangeAdd64_rel`</ph>,</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>ARM</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>intrin.h&gt;</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>, <ph id="ph1">`_InterlockedExchangeAdd_HLERelease`</ph>, <ph id="ph2">`_InterlockedExchangeAdd64_HLEAcquire`</ph>,</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>x86,</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>immintrin.h&gt;</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>There are several variations on <ph id="ph1">`_InterlockedExchangeAdd`</ph> that vary based on the data types they involve and whether processor-specific acquire or release semantics is used.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>While the <ph id="ph1">`_InterlockedExchangeAdd`</ph> function operates on 32-bit integer values, <ph id="ph2">`_InterlockedExchangeAdd8`</ph> operates on 8-bit integer values, <ph id="ph3">`_InterlockedExchangeAdd16`</ph> operates on 16-bit integer values, and <ph id="ph4">`_InterlockedExchangeAdd64`</ph> operates on 64-bit integer values.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>On ARM platforms, use the intrinsics with <ph id="ph1">`_acq`</ph> and <ph id="ph2">`_rel`</ph> suffixes if you need acquire and release semantics, such as at the beginning and end of a critical section.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The intrinsics with an <ph id="ph1">`_nf`</ph> ("no fence") suffix do not act as a memory barrier.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>On Intel platforms that support Hardware Lock Elision (HLE) instructions, the intrinsics with <ph id="ph1">`_HLEAcquire`</ph> and <ph id="ph2">`_HLERelease`</ph> suffixes include a hint to the processor that can accelerate performance by eliminating a lock write step in hardware.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If these intrinsics are called on platforms that do not support HLE, the hint is ignored.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>These routines are only available as intrinsics.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Thus, they are intrinsic whether or not <bpt id="p1">[</bpt>/Oi<ept id="p1">](../build/reference/oi-generate-intrinsic-functions.md)</ept> or <bpt id="p2">[</bpt>#pragma intrinsic<ept id="p2">](../preprocessor/intrinsic.md)</ept> is used.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>It is not possible to use <bpt id="p1">[</bpt>#pragma function<ept id="p1">](../preprocessor/function-c-cpp.md)</ept> on these intrinsics.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For a sample of how to use <ph id="ph1">`_InterlockedExchangeAdd`</ph>, see <bpt id="p1">[</bpt>_InterlockedDecrement<ept id="p1">](../intrinsics/interlockeddecrement-intrinsic-functions.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>END Microsoft Specific</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Compiler Intrinsics</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Keywords</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Conflicts with the x86 Compiler</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>