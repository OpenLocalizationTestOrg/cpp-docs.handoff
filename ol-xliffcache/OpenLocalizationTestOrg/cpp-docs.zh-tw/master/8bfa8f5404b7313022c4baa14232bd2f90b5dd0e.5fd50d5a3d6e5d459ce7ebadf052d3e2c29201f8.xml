{"nodes":[{"pos":[12,43],"content":"CAtlFile Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CAtlFile Class | Microsoft Docs","pos":[0,31]}]},{"content":"CAtlFile Class","pos":[637,651]},{"content":"This class provides a thin wrapper around the Windows file-handling API.","pos":[652,724]},{"pos":[732,842],"content":"[!IMPORTANT]\n This class and its members cannot be used in applications that execute in the Windows Runtime.","leadings":["","> "],"nodes":[{"content":"This class and its members cannot be used in applications that execute in the Windows Runtime.","pos":[14,108]}]},{"content":"Syntax","pos":[851,857]},{"content":"Members","pos":[915,922]},{"content":"Public Constructors","pos":[932,951]},{"content":"Name","pos":[958,962]},{"content":"Description","pos":[963,974]},{"content":"CAtlFile::CAtlFile","pos":[1013,1031]},{"content":"The constructor.","pos":[1054,1070]},{"content":"Public Methods","pos":[1081,1095]},{"content":"Name","pos":[1102,1106]},{"content":"Description","pos":[1107,1118]},{"content":"CAtlFile::Create","pos":[1157,1173]},{"content":"Call this method to create or open a file.","pos":[1194,1236]},{"content":"CAtlFile::Flush","pos":[1242,1257]},{"content":"Call this method to clear the buffers for the file and cause all buffered data to be written to the file.","pos":[1277,1382]},{"content":"CAtlFile::GetOverlappedResult","pos":[1388,1417]},{"content":"Call this method to get the results of an overlapped operation on the file.","pos":[1451,1526]},{"content":"CAtlFile::GetPosition","pos":[1532,1553]},{"content":"Call this method to get the current file pointer position from the file.","pos":[1579,1651]},{"content":"CAtlFile::GetSize","pos":[1657,1674]},{"content":"Call this method to get the size in bytes of the file.","pos":[1696,1750]},{"content":"CAtlFile::LockRange","pos":[1756,1775]},{"content":"Call this method to lock a region in the file to prevent other processes from accessing it.","pos":[1799,1890]},{"content":"CAtlFile::Read","pos":[1896,1910]},{"content":"Call this method to read data from a file starting at the position indicated by the file pointer.","pos":[1929,2026]},{"content":"CAtlFile::Seek","pos":[2032,2046]},{"content":"Call this method to move the file pointer of the file.","pos":[2065,2119]},{"content":"CAtlFile::SetSize","pos":[2125,2142]},{"content":"Call this method to set the size of the file.","pos":[2164,2209]},{"content":"CAtlFile::UnlockRange","pos":[2215,2236]},{"content":"Call this method to unlock a region of the file.","pos":[2262,2310]},{"content":"CAtlFile::Write","pos":[2316,2331]},{"content":"Call this method to write data to the file starting at the position indicated by the file pointer.","pos":[2351,2449]},{"content":"Protected Data Members","pos":[2460,2482]},{"content":"Name","pos":[2489,2493]},{"content":"Description","pos":[2494,2505]},{"content":"CAtlFile::m_pTM","pos":[2544,2559]},{"pos":[2579,2621],"content":"Pointer to <ph id=\"ph1\">`CAtlTransactionManager`</ph> object","source":"Pointer to `CAtlTransactionManager` object"},{"content":"Remarks","pos":[2631,2638]},{"content":"Use this class when file-handling needs are relatively simple, but more abstraction than the Windows API provides is required, without including MFC dependencies.","pos":[2642,2804]},{"content":"Inheritance Hierarchy","pos":[2813,2834]},{"content":"CHandle","pos":[2839,2846]},{"content":"Requirements","pos":[2911,2923]},{"pos":[2927,2948],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlfile.h","source":"**Header:** atlfile.h"},{"pos":[2993,3011],"content":"CAtlFile::CAtlFile"},{"content":"The constructor.","pos":[3015,3031]},{"content":"Parameters","pos":[3205,3215]},{"content":"The file object.","pos":[3229,3245]},{"content":"The file handle.","pos":[3263,3279]},{"content":"Pointer to CAtlTransactionManager object","pos":[3295,3335]},{"content":"Remarks","pos":[3345,3352]},{"pos":[3356,3484],"content":"The copy constructor transfers ownership of the file handle from the original <ph id=\"ph1\">`CAtlFile`</ph> object to the newly constructed object.","source":"The copy constructor transfers ownership of the file handle from the original `CAtlFile` object to the newly constructed object."},{"pos":[3527,3543],"content":"CAtlFile::Create"},{"content":"Call this method to create or open a file.","pos":[3547,3589]},{"content":"Parameters","pos":[3872,3882]},{"content":"szFilename","pos":[3887,3897]},{"content":"The file name.","pos":[3902,3916]},{"content":"The desired access.","pos":[3944,3963]},{"content":"See <ph id=\"ph1\">`dwDesiredAccess`</ph> in <bpt id=\"p1\">[</bpt>CreateFile<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa363858)</ept> in the <ph id=\"ph2\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[3964,4121],"source":" See `dwDesiredAccess` in [CreateFile](http://msdn.microsoft.com/library/windows/desktop/aa363858) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"The share mode.","pos":[4145,4160]},{"content":"See <ph id=\"ph1\">`dwShareMode`</ph> in <bpt id=\"p1\">**</bpt>CreateFile<ept id=\"p1\">**</ept>.","pos":[4161,4197],"source":" See `dwShareMode` in **CreateFile**."},{"content":"The creation disposition.","pos":[4231,4256]},{"content":"See <ph id=\"ph1\">`dwCreationDisposition`</ph> in <bpt id=\"p1\">**</bpt>CreateFile<ept id=\"p1\">**</ept>.","pos":[4257,4303],"source":" See `dwCreationDisposition` in **CreateFile**."},{"content":"The flags and attributes.","pos":[4336,4361]},{"content":"See <ph id=\"ph1\">`dwFlagsAndAttributes`</ph> in <bpt id=\"p1\">**</bpt>CreateFile<ept id=\"p1\">**</ept>.","pos":[4362,4407],"source":" See `dwFlagsAndAttributes` in **CreateFile**."},{"content":"The security attributes.","pos":[4424,4448]},{"content":"See <bpt id=\"p1\">*</bpt>lpSecurityAttributes<ept id=\"p1\">*</ept> in <bpt id=\"p2\">**</bpt>CreateFile<ept id=\"p2\">**</ept>.","pos":[4449,4494],"source":" See *lpSecurityAttributes* in **CreateFile**."},{"content":"The template file.","pos":[4520,4538]},{"content":"See <ph id=\"ph1\">`hTemplateFile`</ph> in <bpt id=\"p1\">**</bpt>CreateFile<ept id=\"p1\">**</ept>.","pos":[4539,4577],"source":" See `hTemplateFile` in **CreateFile**."},{"content":"Return Value","pos":[4587,4599]},{"pos":[4603,4663],"content":"Returns <ph id=\"ph1\">`S_OK`</ph> on success, or an error <ph id=\"ph2\">`HRESULT`</ph> on failure.","source":"Returns `S_OK` on success, or an error `HRESULT` on failure."},{"content":"Remarks","pos":[4673,4680]},{"pos":[4684,4790],"content":"Calls <bpt id=\"p1\">[</bpt>CreateFile<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa363858)</ept> to create or open the file.","source":"Calls [CreateFile](http://msdn.microsoft.com/library/windows/desktop/aa363858) to create or open the file."},{"pos":[4832,4847],"content":"CAtlFile::Flush"},{"content":"Call this method to clear the buffers for the file and cause all buffered data to be written to the file.","pos":[4851,4956]},{"content":"Return Value","pos":[5004,5016]},{"pos":[5020,5080],"content":"Returns <ph id=\"ph1\">`S_OK`</ph> on success, or an error <ph id=\"ph2\">`HRESULT`</ph> on failure.","source":"Returns `S_OK` on success, or an error `HRESULT` on failure."},{"content":"Remarks","pos":[5090,5097]},{"pos":[5101,5221],"content":"Calls <bpt id=\"p1\">[</bpt>FlushFileBuffers<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa364439)</ept> to flush buffered data to the file.","source":"Calls [FlushFileBuffers](http://msdn.microsoft.com/library/windows/desktop/aa364439) to flush buffered data to the file."},{"pos":[5277,5306],"content":"CAtlFile::GetOverlappedResult"},{"content":"Call this method to get the results of an overlapped operation on the file.","pos":[5310,5385]},{"content":"Parameters","pos":[5523,5533]},{"content":"The overlapped structure.","pos":[5554,5579]},{"content":"See <ph id=\"ph1\">`lpOverlapped`</ph> in <bpt id=\"p1\">[</bpt>GetOverlappedResult<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms683209)</ept> in the <ph id=\"ph2\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[5580,5743],"source":" See `lpOverlapped` in [GetOverlappedResult](http://msdn.microsoft.com/library/windows/desktop/ms683209) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"dwBytesTransferred","pos":[5751,5769]},{"content":"The bytes transferred.","pos":[5774,5796]},{"content":"See <bpt id=\"p1\">*</bpt>lpNumberOfBytesTransferred<ept id=\"p1\">*</ept> in <ph id=\"ph1\">`GetOverlappedResult`</ph>.","pos":[5797,5855],"source":" See *lpNumberOfBytesTransferred* in `GetOverlappedResult`."},{"content":"The wait option.","pos":[5873,5889]},{"content":"See <ph id=\"ph1\">`bWait`</ph> in <ph id=\"ph2\">`GetOverlappedResult`</ph>.","pos":[5890,5927],"source":" See `bWait` in `GetOverlappedResult`."},{"content":"Return Value","pos":[5937,5949]},{"pos":[5953,6013],"content":"Returns <ph id=\"ph1\">`S_OK`</ph> on success, or an error <ph id=\"ph2\">`HRESULT`</ph> on failure.","source":"Returns `S_OK` on success, or an error `HRESULT` on failure."},{"content":"Remarks","pos":[6023,6030]},{"pos":[6034,6180],"content":"Calls <bpt id=\"p1\">[</bpt>GetOverlappedResult<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms683209)</ept> to get the results of an overlapped operation on the file.","source":"Calls [GetOverlappedResult](http://msdn.microsoft.com/library/windows/desktop/ms683209) to get the results of an overlapped operation on the file."},{"pos":[6228,6249],"content":"CAtlFile::GetPosition"},{"content":"Call this method to get the current file pointer position.","pos":[6253,6311]},{"content":"Parameters","pos":[6386,6396]},{"content":"The position in bytes.","pos":[6410,6432]},{"content":"Return Value","pos":[6442,6454]},{"pos":[6458,6518],"content":"Returns <ph id=\"ph1\">`S_OK`</ph> on success, or an error <ph id=\"ph2\">`HRESULT`</ph> on failure.","source":"Returns `S_OK` on success, or an error `HRESULT` on failure."},{"content":"Remarks","pos":[6528,6535]},{"pos":[6539,6663],"content":"Calls <bpt id=\"p1\">[</bpt>SetFilePointer<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa365541)</ept> to get the current file pointer position.","source":"Calls [SetFilePointer](http://msdn.microsoft.com/library/windows/desktop/aa365541) to get the current file pointer position."},{"pos":[6707,6724],"content":"CAtlFile::GetSize"},{"content":"Call this method to get the size in bytes of the file.","pos":[6728,6782]},{"content":"Parameters","pos":[6853,6863]},{"content":"The number of bytes in the file.","pos":[6877,6909]},{"content":"Return Value","pos":[6919,6931]},{"pos":[6935,6995],"content":"Returns <ph id=\"ph1\">`S_OK`</ph> on success, or an error <ph id=\"ph2\">`HRESULT`</ph> on failure.","source":"Returns `S_OK` on success, or an error `HRESULT` on failure."},{"content":"Remarks","pos":[7005,7012]},{"pos":[7016,7133],"content":"Calls <bpt id=\"p1\">[</bpt>GetFileSize<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa364955)</ept> to get the size in bytes of the file.","source":"Calls [GetFileSize](http://msdn.microsoft.com/library/windows/desktop/aa364955) to get the size in bytes of the file."},{"pos":[7179,7198],"content":"CAtlFile::LockRange"},{"content":"Call this method to lock a region in the file to prevent other processes from accessing it.","pos":[7202,7293]},{"content":"Parameters","pos":[7386,7396]},{"content":"The position in the file where the lock should begin.","pos":[7410,7463]},{"content":"The length of the byte range to be locked.","pos":[7482,7524]},{"content":"Return Value","pos":[7534,7546]},{"pos":[7550,7610],"content":"Returns <ph id=\"ph1\">`S_OK`</ph> on success, or an error <ph id=\"ph2\">`HRESULT`</ph> on failure.","source":"Returns `S_OK` on success, or an error `HRESULT` on failure."},{"content":"Remarks","pos":[7620,7627]},{"content":"Calls <bpt id=\"p1\">[</bpt>LockFile<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa365202)</ept> to lock a region in the file.","pos":[7631,7737],"source":"Calls [LockFile](http://msdn.microsoft.com/library/windows/desktop/aa365202) to lock a region in the file."},{"content":"Locking bytes in a file prevents access to those bytes by other processes.","pos":[7738,7812]},{"content":"You can lock more than one region of a file, but no overlapping regions are allowed.","pos":[7813,7897]},{"content":"When you unlock a region, using <bpt id=\"p1\">[</bpt>CAtlFile::UnlockRange<ept id=\"p1\">](#catlfile__unlockrange)</ept>, the byte range must correspond exactly to the region that was previously locked.","pos":[7898,8059],"source":" When you unlock a region, using [CAtlFile::UnlockRange](#catlfile__unlockrange), the byte range must correspond exactly to the region that was previously locked."},{"content":"does not merge adjacent regions; if two locked regions are adjacent, you must unlock each separately.","pos":[8072,8173]},{"pos":[8215,8230],"content":"CAtlFile::m_pTM"},{"pos":[8234,8279],"content":"Pointer to a <ph id=\"ph1\">`CAtlTransactionManager`</ph> object.","source":"Pointer to a `CAtlTransactionManager` object."},{"content":"Remarks","pos":[8333,8340]},{"pos":[8381,8395],"content":"CAtlFile::Read"},{"content":"Call this method to read data from a file starting at the position indicated by the file pointer.","pos":[8399,8496]},{"content":"Parameters","pos":[8912,8922]},{"content":"Pointer to the buffer that will receive the data read from the file.","pos":[8939,9007]},{"content":"The buffer size in bytes.","pos":[9028,9053]},{"content":"The number of bytes read.","pos":[9076,9101]},{"content":"The overlapped structure.","pos":[9125,9150]},{"content":"See <ph id=\"ph1\">`lpOverlapped`</ph> in <bpt id=\"p1\">[</bpt>ReadFile<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa365467)</ept> in the <ph id=\"ph2\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[9151,9303],"source":" See `lpOverlapped` in [ReadFile](http://msdn.microsoft.com/library/windows/desktop/aa365467) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"The completion routine.","pos":[9336,9359]},{"content":"See <bpt id=\"p1\">*</bpt>lpCompletionRoutine<ept id=\"p1\">*</ept> in <bpt id=\"p2\">[</bpt>ReadFileEx<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/aa365468)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[9360,9521],"source":" See *lpCompletionRoutine* in [ReadFileEx](http://msdn.microsoft.com/library/windows/desktop/aa365468) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Return Value","pos":[9531,9543]},{"pos":[9547,9607],"content":"Returns <ph id=\"ph1\">`S_OK`</ph> on success, or an error <ph id=\"ph2\">`HRESULT`</ph> on failure.","source":"Returns `S_OK` on success, or an error `HRESULT` on failure."},{"content":"Remarks","pos":[9617,9624]},{"content":"The first three forms call <bpt id=\"p1\">[</bpt>ReadFile<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa365467)</ept>, the last <bpt id=\"p2\">[</bpt>ReadFileEx<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/aa365468)</ept> to read data from the file.","pos":[9628,9836],"source":"The first three forms call [ReadFile](http://msdn.microsoft.com/library/windows/desktop/aa365467), the last [ReadFileEx](http://msdn.microsoft.com/library/windows/desktop/aa365468) to read data from the file."},{"content":"Use <bpt id=\"p1\">[</bpt>CAtlFile::Seek<ept id=\"p1\">](#catlfile__seek)</ept> to move the file pointer.","pos":[9837,9900],"source":" Use [CAtlFile::Seek](#catlfile__seek) to move the file pointer."},{"pos":[9941,9955],"content":"CAtlFile::Seek"},{"content":"Call this method to move the file pointer of the file.","pos":[9959,10013]},{"content":"Parameters","pos":[10114,10124]},{"content":"The offset from the starting point given by <ph id=\"ph1\">`dwFrom`</ph>.","pos":[10141,10194],"source":" The offset from the starting point given by `dwFrom`."},{"content":"The starting point (FILE_BEGIN, FILE_CURRENT, or FILE_END).","pos":[10213,10272]},{"content":"Return Value","pos":[10282,10294]},{"pos":[10298,10358],"content":"Returns <ph id=\"ph1\">`S_OK`</ph> on success, or an error <ph id=\"ph2\">`HRESULT`</ph> on failure.","source":"Returns `S_OK` on success, or an error `HRESULT` on failure."},{"content":"Remarks","pos":[10368,10375]},{"pos":[10379,10487],"content":"Calls <bpt id=\"p1\">[</bpt>SetFilePointer<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa365541)</ept> to move the file pointer.","source":"Calls [SetFilePointer](http://msdn.microsoft.com/library/windows/desktop/aa365541) to move the file pointer."},{"pos":[10531,10548],"content":"CAtlFile::SetSize"},{"content":"Call this method to set the size of the file.","pos":[10552,10597]},{"content":"Parameters","pos":[10666,10676]},{"content":"The new length of the file in bytes.","pos":[10693,10729]},{"content":"Return Value","pos":[10739,10751]},{"pos":[10755,10815],"content":"Returns <ph id=\"ph1\">`S_OK`</ph> on success, or an error <ph id=\"ph2\">`HRESULT`</ph> on failure.","source":"Returns `S_OK` on success, or an error `HRESULT` on failure."},{"content":"Remarks","pos":[10825,10832]},{"content":"Calls <bpt id=\"p1\">[</bpt>SetFilePointer<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa365541)</ept> and <bpt id=\"p2\">[</bpt>SetEndOfFile<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/aa365531)</ept> to set the size of the file.","pos":[10836,11026],"source":"Calls [SetFilePointer](http://msdn.microsoft.com/library/windows/desktop/aa365541) and [SetEndOfFile](http://msdn.microsoft.com/library/windows/desktop/aa365531) to set the size of the file."},{"content":"On return, the file pointer is positioned at the end of the file.","pos":[11027,11092]},{"pos":[11140,11161],"content":"CAtlFile::UnlockRange"},{"content":"Call this method to unlock a region of the file.","pos":[11165,11213]},{"content":"Parameters","pos":[11308,11318]},{"content":"The position in the file where the unlock should begin.","pos":[11332,11387]},{"content":"The length of the byte range to be unlocked.","pos":[11406,11450]},{"content":"Return Value","pos":[11460,11472]},{"pos":[11476,11536],"content":"Returns <ph id=\"ph1\">`S_OK`</ph> on success, or an error <ph id=\"ph2\">`HRESULT`</ph> on failure.","source":"Returns `S_OK` on success, or an error `HRESULT` on failure."},{"content":"Remarks","pos":[11546,11553]},{"pos":[11557,11667],"content":"Calls <bpt id=\"p1\">[</bpt>UnlockFile<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa365715)</ept> to unlock a region of the file.","source":"Calls [UnlockFile](http://msdn.microsoft.com/library/windows/desktop/aa365715) to unlock a region of the file."},{"pos":[11709,11724],"content":"CAtlFile::Write"},{"content":"Call this method to write data to the file starting at the position indicated by the file pointer.","pos":[11728,11826]},{"content":"Parameters","pos":[12196,12206]},{"content":"The buffer containing the data to be written to the file.","pos":[12223,12280]},{"content":"The number of bytes to be transferred from the buffer.","pos":[12301,12355]},{"content":"The overlapped structure.","pos":[12379,12404]},{"content":"See <ph id=\"ph1\">`lpOverlapped`</ph> in <bpt id=\"p1\">[</bpt>WriteFile<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa365747)</ept> in the <ph id=\"ph2\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[12405,12558],"source":" See `lpOverlapped` in [WriteFile](http://msdn.microsoft.com/library/windows/desktop/aa365747) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"The completion routine.","pos":[12591,12614]},{"content":"See <bpt id=\"p1\">*</bpt>lpCompletionRoutine<ept id=\"p1\">*</ept> in <bpt id=\"p2\">[</bpt>WriteFileEx<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/aa365748)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[12615,12777],"source":" See *lpCompletionRoutine* in [WriteFileEx](http://msdn.microsoft.com/library/windows/desktop/aa365748) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"The bytes written.","pos":[12804,12822]},{"content":"Return Value","pos":[12832,12844]},{"pos":[12848,12908],"content":"Returns <ph id=\"ph1\">`S_OK`</ph> on success, or an error <ph id=\"ph2\">`HRESULT`</ph> on failure.","source":"Returns `S_OK` on success, or an error `HRESULT` on failure."},{"content":"Remarks","pos":[12918,12925]},{"content":"The first three forms call <bpt id=\"p1\">[</bpt>WriteFile<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa365747)</ept>, the last calls <bpt id=\"p2\">[</bpt>WriteFileEx<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/aa365748)</ept> to write data to the file.","pos":[12929,13144],"source":"The first three forms call [WriteFile](http://msdn.microsoft.com/library/windows/desktop/aa365747), the last calls [WriteFileEx](http://msdn.microsoft.com/library/windows/desktop/aa365748) to write data to the file."},{"content":"Use <bpt id=\"p1\">[</bpt>CAtlFile::Seek<ept id=\"p1\">](#catlfile__seek)</ept> to move the file pointer.","pos":[13145,13208],"source":" Use [CAtlFile::Seek](#catlfile__seek) to move the file pointer."},{"content":"See Also","pos":[13217,13225]},{"content":"Marquee Sample","pos":[13230,13244]},{"content":"Class Overview","pos":[13280,13294]},{"content":"CHandle Class","pos":[13334,13347]}],"content":"---\ntitle: \"CAtlFile Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CAtlFile\"\n  - \"ATL::CAtlFile\"\n  - \"ATL.CAtlFile\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CAtlFile class\"\nms.assetid: 93ed160b-af2a-448c-9cbe-e5fa46c199bb\ncaps.latest.revision: 23\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CAtlFile Class\nThis class provides a thin wrapper around the Windows file-handling API.  \n  \n> [!IMPORTANT]\n>  This class and its members cannot be used in applications that execute in the Windows Runtime.  \n  \n## Syntax  \n  \n```\nclass CAtlFile :\n    public CHandle\n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAtlFile::CAtlFile](#catlfile__catlfile)|The constructor.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAtlFile::Create](#catlfile__create)|Call this method to create or open a file.|  \n|[CAtlFile::Flush](#catlfile__flush)|Call this method to clear the buffers for the file and cause all buffered data to be written to the file.|  \n|[CAtlFile::GetOverlappedResult](#catlfile__getoverlappedresult)|Call this method to get the results of an overlapped operation on the file.|  \n|[CAtlFile::GetPosition](#catlfile__getposition)|Call this method to get the current file pointer position from the file.|  \n|[CAtlFile::GetSize](#catlfile__getsize)|Call this method to get the size in bytes of the file.|  \n|[CAtlFile::LockRange](#catlfile__lockrange)|Call this method to lock a region in the file to prevent other processes from accessing it.|  \n|[CAtlFile::Read](#catlfile__read)|Call this method to read data from a file starting at the position indicated by the file pointer.|  \n|[CAtlFile::Seek](#catlfile__seek)|Call this method to move the file pointer of the file.|  \n|[CAtlFile::SetSize](#catlfile__setsize)|Call this method to set the size of the file.|  \n|[CAtlFile::UnlockRange](#catlfile__unlockrange)|Call this method to unlock a region of the file.|  \n|[CAtlFile::Write](#catlfile__write)|Call this method to write data to the file starting at the position indicated by the file pointer.|  \n  \n### Protected Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAtlFile::m_pTM](#catlfile__m_ptm)|Pointer to `CAtlTransactionManager` object|  \n  \n## Remarks  \n Use this class when file-handling needs are relatively simple, but more abstraction than the Windows API provides is required, without including MFC dependencies.  \n  \n## Inheritance Hierarchy  \n [CHandle](../../atl/reference/chandle-class.md)  \n  \n `CAtlFile`  \n  \n## Requirements  \n **Header:** atlfile.h  \n  \n##  <a name=\"catlfile__catlfile\"></a>  CAtlFile::CAtlFile  \n The constructor.  \n  \n```\nCAtlFile() throw();\nCAtlFile(CAtlTransactionManager* pTM = NULL) throw();\nCAtlFile(CAtlFile& file) throw();\nexplicit CAtlFile(HANDLE   hFile) throw();\n```  \n  \n### Parameters  \n `file`  \n The file object.  \n  \n `hFile`  \n The file handle.  \n  \n `pTM`  \n Pointer to CAtlTransactionManager object  \n  \n### Remarks  \n The copy constructor transfers ownership of the file handle from the original `CAtlFile` object to the newly constructed object.  \n  \n##  <a name=\"catlfile__create\"></a>  CAtlFile::Create  \n Call this method to create or open a file.  \n  \n```\nHRESULT Create(\n    LPCTSTR szFilename,\n    DWORD dwDesiredAccess,\n    DWORD dwShareMode,\n    DWORD dwCreationDisposition,\n    DWORD dwFlagsAndAttributes = FILE_ATTRIBUTE_NORMAL,\n    LPSECURITY_ATTRIBUTES lpsa = NULL,\n    HANDLE hTemplateFile = NULL) throw();\n```  \n  \n### Parameters  \n *szFilename*  \n The file name.  \n  \n `dwDesiredAccess`  \n The desired access. See `dwDesiredAccess` in [CreateFile](http://msdn.microsoft.com/library/windows/desktop/aa363858) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `dwShareMode`  \n The share mode. See `dwShareMode` in **CreateFile**.  \n  \n `dwCreationDisposition`  \n The creation disposition. See `dwCreationDisposition` in **CreateFile**.  \n  \n `dwFlagsAndAttributes`  \n The flags and attributes. See `dwFlagsAndAttributes` in **CreateFile**.  \n  \n `lpsa`  \n The security attributes. See *lpSecurityAttributes* in **CreateFile**.  \n  \n `hTemplateFile`  \n The template file. See `hTemplateFile` in **CreateFile**.  \n  \n### Return Value  \n Returns `S_OK` on success, or an error `HRESULT` on failure.  \n  \n### Remarks  \n Calls [CreateFile](http://msdn.microsoft.com/library/windows/desktop/aa363858) to create or open the file.  \n  \n##  <a name=\"catlfile__flush\"></a>  CAtlFile::Flush  \n Call this method to clear the buffers for the file and cause all buffered data to be written to the file.  \n  \n```\nHRESULT Flush() throw();\n```  \n  \n### Return Value  \n Returns `S_OK` on success, or an error `HRESULT` on failure.  \n  \n### Remarks  \n Calls [FlushFileBuffers](http://msdn.microsoft.com/library/windows/desktop/aa364439) to flush buffered data to the file.  \n  \n##  <a name=\"catlfile__getoverlappedresult\"></a>  CAtlFile::GetOverlappedResult  \n Call this method to get the results of an overlapped operation on the file.  \n  \n```\nHRESULT GetOverlappedResult(\n    LPOVERLAPPED pOverlapped,\n    DWORD& dwBytesTransferred,\n    BOOL bWait) throw();\n```  \n  \n### Parameters  \n `pOverlapped`  \n The overlapped structure. See `lpOverlapped` in [GetOverlappedResult](http://msdn.microsoft.com/library/windows/desktop/ms683209) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n *dwBytesTransferred*  \n The bytes transferred. See *lpNumberOfBytesTransferred* in `GetOverlappedResult`.  \n  \n `bWait`  \n The wait option. See `bWait` in `GetOverlappedResult`.  \n  \n### Return Value  \n Returns `S_OK` on success, or an error `HRESULT` on failure.  \n  \n### Remarks  \n Calls [GetOverlappedResult](http://msdn.microsoft.com/library/windows/desktop/ms683209) to get the results of an overlapped operation on the file.  \n  \n##  <a name=\"catlfile__getposition\"></a>  CAtlFile::GetPosition  \n Call this method to get the current file pointer position.  \n  \n```\nHRESULT GetPosition(ULONGLONG& nPos) const throw();\n```  \n  \n### Parameters  \n `nPos`  \n The position in bytes.  \n  \n### Return Value  \n Returns `S_OK` on success, or an error `HRESULT` on failure.  \n  \n### Remarks  \n Calls [SetFilePointer](http://msdn.microsoft.com/library/windows/desktop/aa365541) to get the current file pointer position.  \n  \n##  <a name=\"catlfile__getsize\"></a>  CAtlFile::GetSize  \n Call this method to get the size in bytes of the file.  \n  \n```\nHRESULT GetSize(ULONGLONG& nLen) const throw();\n```  \n  \n### Parameters  \n `nLen`  \n The number of bytes in the file.  \n  \n### Return Value  \n Returns `S_OK` on success, or an error `HRESULT` on failure.  \n  \n### Remarks  \n Calls [GetFileSize](http://msdn.microsoft.com/library/windows/desktop/aa364955) to get the size in bytes of the file.  \n  \n##  <a name=\"catlfile__lockrange\"></a>  CAtlFile::LockRange  \n Call this method to lock a region in the file to prevent other processes from accessing it.  \n  \n```\nHRESULT LockRange(\n    ULONGLONG nPos,\n    ULONGLONG nCount) throw();\n```  \n  \n### Parameters  \n `nPos`  \n The position in the file where the lock should begin.  \n  \n `nCount`  \n The length of the byte range to be locked.  \n  \n### Return Value  \n Returns `S_OK` on success, or an error `HRESULT` on failure.  \n  \n### Remarks  \n Calls [LockFile](http://msdn.microsoft.com/library/windows/desktop/aa365202) to lock a region in the file. Locking bytes in a file prevents access to those bytes by other processes. You can lock more than one region of a file, but no overlapping regions are allowed. When you unlock a region, using [CAtlFile::UnlockRange](#catlfile__unlockrange), the byte range must correspond exactly to the region that was previously locked. `LockRange` does not merge adjacent regions; if two locked regions are adjacent, you must unlock each separately.  \n  \n##  <a name=\"catlfile__m_ptm\"></a>  CAtlFile::m_pTM  \n Pointer to a `CAtlTransactionManager` object.  \n  \n```\nCAtlTransactionManager* m_pTM;\n```  \n  \n### Remarks  \n  \n##  <a name=\"catlfile__read\"></a>  CAtlFile::Read  \n Call this method to read data from a file starting at the position indicated by the file pointer.  \n  \n```\nHRESULT Read(\n    LPVOID pBuffer,\n    DWORD nBufSize) throw();\nHRESULT Read(\n    LPVOID pBuffer,\n    DWORD nBufSize,\n    DWORD& nBytesRead) throw();\nHRESULT Read(\n    LPVOID pBuffer,\n    DWORD nBufSize,\n    LPOVERLAPPED pOverlapped) throw();\nHRESULT Read(\n    LPVOID pBuffer,\n    DWORD nBufSize,\n    LPOVERLAPPED pOverlapped,\n    LPOVERLAPPED_COMPLETION_ROUTINE pfnCompletionRoutine) throw();\n```  \n  \n### Parameters  \n `pBuffer`  \n Pointer to the buffer that will receive the data read from the file.  \n  \n `nBufSize`  \n The buffer size in bytes.  \n  \n `nBytesRead`  \n The number of bytes read.  \n  \n `pOverlapped`  \n The overlapped structure. See `lpOverlapped` in [ReadFile](http://msdn.microsoft.com/library/windows/desktop/aa365467) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `pfnCompletionRoutine`  \n The completion routine. See *lpCompletionRoutine* in [ReadFileEx](http://msdn.microsoft.com/library/windows/desktop/aa365468) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Return Value  \n Returns `S_OK` on success, or an error `HRESULT` on failure.  \n  \n### Remarks  \n The first three forms call [ReadFile](http://msdn.microsoft.com/library/windows/desktop/aa365467), the last [ReadFileEx](http://msdn.microsoft.com/library/windows/desktop/aa365468) to read data from the file. Use [CAtlFile::Seek](#catlfile__seek) to move the file pointer.  \n  \n##  <a name=\"catlfile__seek\"></a>  CAtlFile::Seek  \n Call this method to move the file pointer of the file.  \n  \n```\nHRESULT Seek(\n    LONGLONG nOffset,\n    DWORD dwFrom = FILE_CURRENT) throw();\n```  \n  \n### Parameters  \n `nOffset`  \n The offset from the starting point given by `dwFrom`.  \n  \n `dwFrom`  \n The starting point (FILE_BEGIN, FILE_CURRENT, or FILE_END).  \n  \n### Return Value  \n Returns `S_OK` on success, or an error `HRESULT` on failure.  \n  \n### Remarks  \n Calls [SetFilePointer](http://msdn.microsoft.com/library/windows/desktop/aa365541) to move the file pointer.  \n  \n##  <a name=\"catlfile__setsize\"></a>  CAtlFile::SetSize  \n Call this method to set the size of the file.  \n  \n```\nHRESULT SetSize(ULONGLONG   nNewLen) throw();\n```  \n  \n### Parameters  \n `nNewLen`  \n The new length of the file in bytes.  \n  \n### Return Value  \n Returns `S_OK` on success, or an error `HRESULT` on failure.  \n  \n### Remarks  \n Calls [SetFilePointer](http://msdn.microsoft.com/library/windows/desktop/aa365541) and [SetEndOfFile](http://msdn.microsoft.com/library/windows/desktop/aa365531) to set the size of the file. On return, the file pointer is positioned at the end of the file.  \n  \n##  <a name=\"catlfile__unlockrange\"></a>  CAtlFile::UnlockRange  \n Call this method to unlock a region of the file.  \n  \n```\nHRESULT UnlockRange(\n    ULONGLONG nPos,\n    ULONGLONG nCount) throw();\n```  \n  \n### Parameters  \n `nPos`  \n The position in the file where the unlock should begin.  \n  \n `nCount`  \n The length of the byte range to be unlocked.  \n  \n### Return Value  \n Returns `S_OK` on success, or an error `HRESULT` on failure.  \n  \n### Remarks  \n Calls [UnlockFile](http://msdn.microsoft.com/library/windows/desktop/aa365715) to unlock a region of the file.  \n  \n##  <a name=\"catlfile__write\"></a>  CAtlFile::Write  \n Call this method to write data to the file starting at the position indicated by the file pointer.  \n  \n```\nHRESULT Write(\n    LPCVOID pBuffer,\n    DWORD nBufSize,\n    LPOVERLAPPED pOverlapped,\n    LPOVERLAPPED_COMPLETION_ROUTINE pfnCompletionRoutine) throw();\nHRESULT Write(\n    LPCVOID pBuffer,\n    DWORD nBufSize,\n    DWORD* pnBytesWritten = NULL) throw();\nHRESULT Write(\n    LPCVOID pBuffer,\n    DWORD nBufSize,\n    LPOVERLAPPED pOverlapped) throw();\n```  \n  \n### Parameters  \n `pBuffer`  \n The buffer containing the data to be written to the file.  \n  \n `nBufSize`  \n The number of bytes to be transferred from the buffer.  \n  \n `pOverlapped`  \n The overlapped structure. See `lpOverlapped` in [WriteFile](http://msdn.microsoft.com/library/windows/desktop/aa365747) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `pfnCompletionRoutine`  \n The completion routine. See *lpCompletionRoutine* in [WriteFileEx](http://msdn.microsoft.com/library/windows/desktop/aa365748) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `pnBytesWritten`  \n The bytes written.  \n  \n### Return Value  \n Returns `S_OK` on success, or an error `HRESULT` on failure.  \n  \n### Remarks  \n The first three forms call [WriteFile](http://msdn.microsoft.com/library/windows/desktop/aa365747), the last calls [WriteFileEx](http://msdn.microsoft.com/library/windows/desktop/aa365748) to write data to the file. Use [CAtlFile::Seek](#catlfile__seek) to move the file pointer.  \n  \n## See Also  \n [Marquee Sample](../../visual-cpp-samples.md)   \n [Class Overview](../../atl/atl-class-overview.md)   \n [CHandle Class](../../atl/reference/chandle-class.md)\n"}