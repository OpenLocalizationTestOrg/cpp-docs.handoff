{"nodes":[{"pos":[12,60],"content":"-ORDER (Put Functions in Order) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"-ORDER (Put Functions in Order) | Microsoft Docs","pos":[0,48]}]},{"content":"/ORDER (Put Functions in Order)","pos":[815,846]},{"content":"Parameters","pos":[884,894]},{"content":"filename","pos":[899,907]},{"content":"A text file specifying the linking order for COMDAT functions.","pos":[912,974]},{"content":"Remarks","pos":[983,990]},{"content":"The /ORDER option tells LINK to optimize your program by placing certain COMDATs into the image in a predetermined order.","pos":[994,1115]},{"content":"LINK places the functions in the specified order within each section in the image.","pos":[1116,1198]},{"content":"Specify the order in <bpt id=\"p1\">*</bpt>filename<ept id=\"p1\">*</ept>, which is a text file (response file) that lists the COMDATs in the order you want to link them.","pos":[1205,1333],"source":"Specify the order in *filename*, which is a text file (response file) that lists the COMDATs in the order you want to link them."},{"content":"Each line in <bpt id=\"p1\">*</bpt>filename<ept id=\"p1\">*</ept> contains the name of one COMDAT.","pos":[1334,1390],"source":" Each line in *filename* contains the name of one COMDAT."},{"content":"An object contains COMDATs if it has been compiled with the /Gy option.","pos":[1391,1462]},{"content":"Function names are case sensitive.","pos":[1463,1497]},{"content":"LINK uses decorated forms of identifiers.","pos":[1504,1545]},{"content":"The compiler decorates an identifier when it creates the .obj file.","pos":[1546,1613]},{"content":"Use the <bpt id=\"p1\">[</bpt>DUMPBIN<ept id=\"p1\">](../../build/reference/dumpbin-reference.md)</ept> tool to get the decorated form of an identifier when you need to specify it to the linker.","pos":[1614,1766],"source":" Use the [DUMPBIN](../../build/reference/dumpbin-reference.md) tool to get the decorated form of an identifier when you need to specify it to the linker."},{"content":"For more information on decorated names, see <bpt id=\"p1\">[</bpt>Decorated Names<ept id=\"p1\">](../../build/reference/decorated-names.md)</ept>.","pos":[1767,1872],"source":" For more information on decorated names, see [Decorated Names](../../build/reference/decorated-names.md)."},{"content":"If more than one /ORDER specification is used, the last one specified takes effect.","pos":[1879,1962]},{"content":"Ordering allows you to optimize your program's paging behavior through swap tuning by grouping a function with the functions it calls.","pos":[1969,2103]},{"content":"You can also group frequently called functions together.","pos":[2104,2160]},{"content":"These techniques increase the probability that a called function is in memory when it is needed and will not have to be paged from disk.","pos":[2161,2297]},{"content":"The linker will prepend an underscore (_) to every decorated name in <bpt id=\"p1\">*</bpt>filename<ept id=\"p1\">*</ept> unless the name starts with a question mark (?) or at sign (@).","pos":[2304,2447],"source":"The linker will prepend an underscore (_) to every decorated name in *filename* unless the name starts with a question mark (?) or at sign (@)."},{"content":"For example, if an object file contains <ph id=\"ph1\">`extern \"C\" int func(int)`</ph> and <ph id=\"ph2\">`int main(void)`</ph>, DUMPBIN <bpt id=\"p1\">[</bpt>/SYMBOLS<ept id=\"p1\">](../../build/reference/symbols.md)</ept> will list these decorated names:","pos":[2448,2622],"source":" For example, if an object file contains `extern \"C\" int func(int)` and `int main(void)`, DUMPBIN [/SYMBOLS](../../build/reference/symbols.md) will list these decorated names:"},{"pos":[2756,2830],"content":"However, the name specified in the order file should be <ph id=\"ph1\">`func`</ph> and <ph id=\"ph2\">`main`</ph>.","source":"However, the name specified in the order file should be `func` and `main`."},{"content":"The /ORDER option disables incremental linking.","pos":[2837,2884]},{"pos":[2892,3130],"content":"[!NOTE]\n LINK cannot order static functions because static function names are not public symbol names. When /ORDER is specified, linker warning LNK4037 is generated for each symbol, in the order file, that is either static or not found.","leadings":["","> "],"nodes":[{"content":" LINK cannot order static functions because static function names are not public symbol names. When /ORDER is specified, linker warning LNK4037 is generated for each symbol, in the order file, that is either static or not found.","pos":[8,236],"nodes":[{"content":"LINK cannot order static functions because static function names are not public symbol names.","pos":[1,94]},{"content":"When /ORDER is specified, linker warning LNK4037 is generated for each symbol, in the order file, that is either static or not found.","pos":[95,228]}]}]},{"content":"To set this linker option in the Visual Studio development environment","pos":[3140,3210]},{"content":"Open the project's <bpt id=\"p1\">**</bpt>Property Pages<ept id=\"p1\">**</ept> dialog box.","pos":[3220,3269],"source":"Open the project's **Property Pages** dialog box."},{"content":"For details, see <bpt id=\"p1\">[</bpt>Setting Visual C++ Project Properties<ept id=\"p1\">](../../ide/working-with-project-properties.md)</ept>.","pos":[3270,3373],"source":" For details, see [Setting Visual C++ Project Properties](../../ide/working-with-project-properties.md)."},{"pos":[3383,3411],"content":"Click the <bpt id=\"p1\">**</bpt>Linker<ept id=\"p1\">**</ept> folder.","source":"Click the **Linker** folder."},{"pos":[3421,3462],"content":"Click the <bpt id=\"p1\">**</bpt>Optimization<ept id=\"p1\">**</ept> property page.","source":"Click the **Optimization** property page."},{"pos":[3472,3511],"content":"Modify the <bpt id=\"p1\">**</bpt>Function Order<ept id=\"p1\">**</ept> property.","source":"Modify the **Function Order** property."},{"content":"To set this linker option programmatically","pos":[3521,3563]},{"content":"See &lt;xref:Microsoft.VisualStudio.VCProjectEngine.VCLinkerTool.FunctionOrder%2A&gt;.","pos":[3573,3653],"source":"See <xref:Microsoft.VisualStudio.VCProjectEngine.VCLinkerTool.FunctionOrder%2A>."},{"content":"See Also","pos":[3662,3670]},{"content":"Setting Linker Options","pos":[3675,3697]},{"content":"Linker Options","pos":[3753,3767]}],"content":"---\ntitle: \"-ORDER (Put Functions in Order) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"VC.Project.VCLinkerTool.FunctionOrder\"\n  - \"/order\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ORDER linker option\"\n  - \"-ORDER linker option\"\n  - \"LINK tool [C++], program optimizing\"\n  - \"/ORDER linker option\"\n  - \"LINK tool [C++], swap tuning\"\n  - \"paging, optimizing\"\nms.assetid: ecf5eb3e-e404-4e86-9a91-4e5ec157261a\ncaps.latest.revision: 9\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# /ORDER (Put Functions in Order)\n```  \n/ORDER:@filename  \n```  \n  \n## Parameters  \n *filename*  \n A text file specifying the linking order for COMDAT functions.  \n  \n## Remarks  \n The /ORDER option tells LINK to optimize your program by placing certain COMDATs into the image in a predetermined order. LINK places the functions in the specified order within each section in the image.  \n  \n Specify the order in *filename*, which is a text file (response file) that lists the COMDATs in the order you want to link them. Each line in *filename* contains the name of one COMDAT. An object contains COMDATs if it has been compiled with the /Gy option. Function names are case sensitive.  \n  \n LINK uses decorated forms of identifiers. The compiler decorates an identifier when it creates the .obj file. Use the [DUMPBIN](../../build/reference/dumpbin-reference.md) tool to get the decorated form of an identifier when you need to specify it to the linker. For more information on decorated names, see [Decorated Names](../../build/reference/decorated-names.md).  \n  \n If more than one /ORDER specification is used, the last one specified takes effect.  \n  \n Ordering allows you to optimize your program's paging behavior through swap tuning by grouping a function with the functions it calls. You can also group frequently called functions together. These techniques increase the probability that a called function is in memory when it is needed and will not have to be paged from disk.  \n  \n The linker will prepend an underscore (_) to every decorated name in *filename* unless the name starts with a question mark (?) or at sign (@). For example, if an object file contains `extern \"C\" int func(int)` and `int main(void)`, DUMPBIN [/SYMBOLS](../../build/reference/symbols.md) will list these decorated names:  \n  \n```  \n009 00000000 SECT3  notype ()    External     | _func  \n00A 00000008 SECT3  notype ()    External     | _main  \n```  \n  \n However, the name specified in the order file should be `func` and `main`.  \n  \n The /ORDER option disables incremental linking.  \n  \n> [!NOTE]\n>  LINK cannot order static functions because static function names are not public symbol names. When /ORDER is specified, linker warning LNK4037 is generated for each symbol, in the order file, that is either static or not found.  \n  \n### To set this linker option in the Visual Studio development environment  \n  \n1.  Open the project's **Property Pages** dialog box. For details, see [Setting Visual C++ Project Properties](../../ide/working-with-project-properties.md).  \n  \n2.  Click the **Linker** folder.  \n  \n3.  Click the **Optimization** property page.  \n  \n4.  Modify the **Function Order** property.  \n  \n### To set this linker option programmatically  \n  \n-   See <xref:Microsoft.VisualStudio.VCProjectEngine.VCLinkerTool.FunctionOrder%2A>.  \n  \n## See Also  \n [Setting Linker Options](../../build/reference/setting-linker-options.md)   \n [Linker Options](../../build/reference/linker-options.md)"}