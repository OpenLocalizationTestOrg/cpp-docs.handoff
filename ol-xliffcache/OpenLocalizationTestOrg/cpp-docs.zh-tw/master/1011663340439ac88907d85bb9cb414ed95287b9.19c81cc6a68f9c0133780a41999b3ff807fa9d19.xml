{"nodes":[{"pos":[12,64],"content":"tan, tanf, tanl, tanh, tanhf, tanhl | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"tan, tanf, tanl, tanh, tanhf, tanhl | Microsoft Docs","pos":[0,52]}]},{"content":"tan, tanf, tanl, tanh, tanhf, tanhl","pos":[1328,1363]},{"pos":[1364,1467],"content":"Calculates the tangent (<ph id=\"ph1\">`tan`</ph>, <ph id=\"ph2\">`tanf`</ph>, or <ph id=\"ph3\">`tanl`</ph>), or hyperbolic tangent (<ph id=\"ph4\">`tanh`</ph>, <ph id=\"ph5\">`tanhf`</ph>, or <ph id=\"ph6\">`tanhl`</ph>).","source":"Calculates the tangent (`tan`, `tanf`, or `tanl`), or hyperbolic tangent (`tanh`, `tanhf`, or `tanhl`)."},{"content":"Syntax","pos":[1476,1482]},{"content":"Parameters","pos":[1937,1947]},{"content":"Angle in radians.","pos":[1958,1975]},{"content":"Return Value","pos":[1984,1996]},{"content":"The <ph id=\"ph1\">`tan`</ph> functions return the tangent of <ph id=\"ph2\">`x`</ph>.","pos":[2000,2046],"source":"The `tan` functions return the tangent of `x`."},{"content":"If <ph id=\"ph1\">`x`</ph> is greater than or equal to 263, or less than or equal to –263, a loss of significance in the result occurs.","pos":[2047,2162],"source":" If `x` is greater than or equal to 263, or less than or equal to –263, a loss of significance in the result occurs."},{"content":"The <ph id=\"ph1\">`tanh`</ph> functions return the hyperbolic tangent of <ph id=\"ph2\">`x`</ph>.","pos":[2169,2227],"source":"The `tanh` functions return the hyperbolic tangent of `x`."},{"content":"There is no error return.","pos":[2228,2253]},{"content":"Input","pos":[2260,2265]},{"content":"SEH Exception","pos":[2266,2279]},{"pos":[2290,2299],"content":"Exception"},{"content":"± QNAN,IND","pos":[2366,2376]},{"content":"none","pos":[2377,2381]},{"content":"_DOMAIN","pos":[2382,2389]},{"pos":[2394,2414],"content":"± ∞  (<ph id=\"ph1\">`tan`</ph>, <ph id=\"ph2\">`tanf`</ph>)","source":"± ∞  (`tan`, `tanf`)"},{"content":"_DOMAIN","pos":[2425,2432]},{"content":"Remarks","pos":[2442,2449]},{"content":"Because C++ allows overloading, you can call overloads of <ph id=\"ph1\">`tan`</ph> and <ph id=\"ph2\">`tanh`</ph> that take and return <ph id=\"ph3\">`float`</ph> or <ph id=\"ph4\">`long double`</ph> values.","pos":[2453,2581],"source":"Because C++ allows overloading, you can call overloads of `tan` and `tanh` that take and return `float` or `long double` values."},{"content":"In a C program, <ph id=\"ph1\">`tan`</ph> and <ph id=\"ph2\">`tanh`</ph> always take and return <ph id=\"ph3\">`double`</ph>.","pos":[2582,2647],"source":" In a C program, `tan` and `tanh` always take and return `double`."},{"content":"Requirements","pos":[2656,2668]},{"content":"Routine","pos":[2675,2682]},{"content":"Required header","pos":[2683,2698]},{"pos":[2748,2782],"content":", <ph id=\"ph1\">`tanf`</ph>, <ph id=\"ph2\">`tanl`</ph>, <ph id=\"ph3\">`tanh`</ph>, <ph id=\"ph4\">`tanhf`</ph>,","source":", `tanf`, `tanl`, `tanh`, `tanhf`, "},{"content":"math.h&gt;","pos":[2793,2800],"source":"math.h>"},{"pos":[2808,2912],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":"Example","pos":[2921,2928]},{"content":".NET Framework Equivalent","pos":[3404,3429]},{"content":"System::Math::Tan","pos":[3440,3457]},{"content":"System::Math::Tanh","pos":[3532,3550]},{"content":"See Also","pos":[3624,3632]},{"content":"Floating-Point Support","pos":[3637,3659]},{"content":"acos, acosf, acosl","pos":[3717,3735]},{"content":"asin, asinf, asinl","pos":[3797,3815]},{"content":"atan, atanf, atanl, atan2, atan2f, atan2l","pos":[3877,3918]},{"content":"cos, cosf, cosl, cosh, coshf, coshl","pos":[4000,4035]},{"content":"sin, sinf, sinl, sinh, sinhf, sinhl","pos":[4111,4146]},{"content":"_CItan","pos":[4222,4228]}],"content":"---\ntitle: \"tan, tanf, tanl, tanh, tanhf, tanhl | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"tanhf\"\n  - \"tanh\"\n  - \"tan\"\n  - \"tanhl\"\n  - \"tanf\"\n  - \"tanl\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-math-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"tanh\"\n  - \"tan\"\n  - \"_tanl\"\n  - \"tanl\"\n  - \"_tanhl\"\n  - \"tanf\"\n  - \"tanhf\"\n  - \"tanhl\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"tanl function\"\n  - \"tanhl function\"\n  - \"_tanl function\"\n  - \"_tanhl function\"\n  - \"tan function\"\n  - \"calculating tangents\"\n  - \"tangent\"\n  - \"tanh function\"\n  - \"tanhf function\"\n  - \"tanf function\"\n  - \"trigonometric functions\"\n  - \"hyperbolic functions\"\nms.assetid: 36cc0ce8-9c80-4653-b354-ddb3b378b6bd\ncaps.latest.revision: 16\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# tan, tanf, tanl, tanh, tanhf, tanhl\nCalculates the tangent (`tan`, `tanf`, or `tanl`), or hyperbolic tangent (`tanh`, `tanhf`, or `tanhl`).  \n  \n## Syntax  \n  \n```  \ndouble tan(  \n   double x   \n);  \nfloat tan(  \n   float x   \n);  // C++ only  \nlong double tan(  \n   long double x  \n);  // C++ only  \nfloat tanf(  \n   float x   \n);  \nlong double tanl(  \n   long double x  \n);  \ndouble tanh(  \n   double x   \n);  \nfloat tanh(  \n   float x   \n);  // C++ only  \nlong double tanh(  \n   long double x  \n);  // C++ only  \nfloat tanhf(  \n   float x   \n);  \nlong double tanhl(  \n   long double x  \n);  \n```  \n  \n#### Parameters  \n `x`  \n Angle in radians.  \n  \n## Return Value  \n The `tan` functions return the tangent of `x`. If `x` is greater than or equal to 263, or less than or equal to –263, a loss of significance in the result occurs.  \n  \n The `tanh` functions return the hyperbolic tangent of `x`. There is no error return.  \n  \n|Input|SEH Exception|`Matherr` Exception|  \n|-----------|-------------------|-------------------------|  \n|± QNAN,IND|none|_DOMAIN|  \n|± ∞  (`tan`, `tanf`)|`INVALID`|_DOMAIN|  \n  \n## Remarks  \n Because C++ allows overloading, you can call overloads of `tan` and `tanh` that take and return `float` or `long double` values. In a C program, `tan` and `tanh` always take and return `double`.  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`tan`, `tanf`, `tanl`, `tanh`, `tanhf`, `tanhl`|\\<math.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```  \n// crt_tan.c  \n// This program displays the tangent of pi / 4  \n// and the hyperbolic tangent of the result.  \n//  \n  \n#include <math.h>  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n   double pi = 3.1415926535;  \n   double x, y;  \n  \n   x = tan( pi / 4 );  \n   y = tanh( x );  \n   printf( \"tan( %f ) = %f\\n\", pi/4, x );  \n   printf( \"tanh( %f ) = %f\\n\", x, y );  \n}  \n```  \n  \n```Output  \ntan( 0.785398 ) = 1.000000  \ntanh( 1.000000 ) = 0.761594  \n```  \n  \n## .NET Framework Equivalent  \n  \n-   [System::Math::Tan](https://msdn.microsoft.com/en-us/library/system.math.tan.aspx)  \n  \n-   [System::Math::Tanh](https://msdn.microsoft.com/en-us/library/system.math.tanh.aspx)  \n  \n## See Also  \n [Floating-Point Support](../../c-runtime-library/floating-point-support.md)   \n [acos, acosf, acosl](../../c-runtime-library/reference/acos-acosf-acosl.md)   \n [asin, asinf, asinl](../../c-runtime-library/reference/asin-asinf-asinl.md)   \n [atan, atanf, atanl, atan2, atan2f, atan2l](../../c-runtime-library/reference/atan-atanf-atanl-atan2-atan2f-atan2l.md)   \n [cos, cosf, cosl, cosh, coshf, coshl](../../c-runtime-library/reference/cos-cosf-cosl-cosh-coshf-coshl.md)   \n [sin, sinf, sinl, sinh, sinhf, sinhl](../../c-runtime-library/reference/sin-sinf-sinl-sinh-sinhf-sinhl.md)   \n [_CItan](../../c-runtime-library/citan.md)"}