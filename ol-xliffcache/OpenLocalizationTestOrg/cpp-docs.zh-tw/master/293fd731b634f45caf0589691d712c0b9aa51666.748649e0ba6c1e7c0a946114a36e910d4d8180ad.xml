{"nodes":[{"pos":[12,60],"content":"Debugging and Exception Classes | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Debugging and Exception Classes | Microsoft Docs","pos":[0,48]}]},{"content":"Debugging and Exception Classes","pos":[685,716]},{"content":"These classes provide support for debugging dynamic memory allocation and for passing exception information from the function where the exception is thrown to the function where it is caught.","pos":[717,908]},{"content":"Use classes <bpt id=\"p1\">[</bpt>CDumpContext<ept id=\"p1\">](../mfc/reference/cdumpcontext-class.md)</ept> and <bpt id=\"p2\">[</bpt>CMemoryState<ept id=\"p2\">](../mfc/reference/cmemorystate-structure.md)</ept> during development to assist with debugging, as described in <bpt id=\"p3\">[</bpt>Debugging MFC Applications<ept id=\"p3\">](/visualstudio/debugger/mfc-debugging-techniques)</ept>.","pos":[915,1184],"source":"Use classes [CDumpContext](../mfc/reference/cdumpcontext-class.md) and [CMemoryState](../mfc/reference/cmemorystate-structure.md) during development to assist with debugging, as described in [Debugging MFC Applications](/visualstudio/debugger/mfc-debugging-techniques)."},{"content":"Use <bpt id=\"p1\">[</bpt>CRuntimeClass<ept id=\"p1\">](../mfc/reference/cruntimeclass-structure.md)</ept> to determine the class of any object at run time, as described in the article <bpt id=\"p2\">[</bpt>Accessing Run-Time Class Information<ept id=\"p2\">](../mfc/accessing-run-time-class-information.md)</ept>.","pos":[1185,1415],"source":" Use [CRuntimeClass](../mfc/reference/cruntimeclass-structure.md) to determine the class of any object at run time, as described in the article [Accessing Run-Time Class Information](../mfc/accessing-run-time-class-information.md)."},{"content":"The framework uses <ph id=\"ph1\">`CRuntimeClass`</ph> to create objects of a particular class dynamically.","pos":[1416,1503],"source":" The framework uses `CRuntimeClass` to create objects of a particular class dynamically."},{"content":"See Also","pos":[1512,1520]},{"content":"Class Overview","pos":[1525,1539]}],"content":"---\ntitle: \"Debugging and Exception Classes | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"vc.classes.debug\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"debugging [MFC], exception classes\"\n  - \"debugging [MFC], classes for debugging\"\nms.assetid: 0d158efd-2e62-452e-9d2a-d3c30dfee7f9\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Debugging and Exception Classes\nThese classes provide support for debugging dynamic memory allocation and for passing exception information from the function where the exception is thrown to the function where it is caught.  \n  \n Use classes [CDumpContext](../mfc/reference/cdumpcontext-class.md) and [CMemoryState](../mfc/reference/cmemorystate-structure.md) during development to assist with debugging, as described in [Debugging MFC Applications](/visualstudio/debugger/mfc-debugging-techniques). Use [CRuntimeClass](../mfc/reference/cruntimeclass-structure.md) to determine the class of any object at run time, as described in the article [Accessing Run-Time Class Information](../mfc/accessing-run-time-class-information.md). The framework uses `CRuntimeClass` to create objects of a particular class dynamically.  \n  \n## See Also  \n [Class Overview](../mfc/class-library-overview.md)\n\n"}