{"nodes":[{"pos":[12,56],"content":"IExecutionContext Structure | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"IExecutionContext Structure | Microsoft Docs","pos":[0,44]}]},{"content":"IExecutionContext Structure","pos":[653,680]},{"content":"An interface to an execution context which can run on a given virtual processor and be cooperatively context switched.","pos":[681,799]},{"content":"Syntax","pos":[808,814]},{"content":"Members","pos":[862,869]},{"content":"Public Methods","pos":[879,893]},{"content":"Name","pos":[900,904]},{"content":"Description","pos":[905,916]},{"content":"IExecutionContext::Dispatch Method","pos":[955,989]},{"content":"The method that is called when a thread proxy starts executing a particular execution context.","pos":[1002,1096]},{"content":"This should be the main worker routine for your scheduler.","pos":[1097,1155]},{"content":"IExecutionContext::GetId Method","pos":[1161,1192]},{"content":"Returns a unique identifier for the execution context.","pos":[1202,1256]},{"content":"IExecutionContext::GetProxy Method","pos":[1262,1296]},{"content":"Returns an interface to the thread proxy that is executing this context.","pos":[1309,1381]},{"content":"IExecutionContext::GetScheduler Method","pos":[1387,1425]},{"content":"Returns an interface to the scheduler this execution context belongs to.","pos":[1442,1514]},{"content":"IExecutionContext::SetProxy Method","pos":[1520,1554]},{"content":"Associates a thread proxy with this execution context.","pos":[1567,1621]},{"content":"The associated thread proxy invokes this method right before it starts executing the context's <ph id=\"ph1\">`Dispatch`</ph> method.","pos":[1622,1735],"source":" The associated thread proxy invokes this method right before it starts executing the context's `Dispatch` method."},{"content":"Remarks","pos":[1745,1752]},{"content":"If you are implementing a custom scheduler that interfaces with the Concurrency Runtime's Resource Manager, you will need to implement the <ph id=\"ph1\">`IExecutionContext`</ph> interface.","pos":[1756,1925],"source":"If you are implementing a custom scheduler that interfaces with the Concurrency Runtime's Resource Manager, you will need to implement the `IExecutionContext` interface."},{"content":"The threads created by the Resource Manager perform work on behalf of your scheduler by executing the <ph id=\"ph1\">`IExecutionContext::Dispatch`</ph> method.","pos":[1926,2065],"source":" The threads created by the Resource Manager perform work on behalf of your scheduler by executing the `IExecutionContext::Dispatch` method."},{"content":"Inheritance Hierarchy","pos":[2074,2095]},{"content":"Requirements","pos":[2127,2139]},{"pos":[2143,2165],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> concrtrm.h","source":"**Header:** concrtrm.h"},{"pos":[2172,2198],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> concurrency","source":"**Namespace:** concurrency"},{"pos":[2233,2267],"content":"IExecutionContext::Dispatch Method"},{"content":"The method that is called when a thread proxy starts executing a particular execution context.","pos":[2271,2365]},{"content":"This should be the main worker routine for your scheduler.","pos":[2366,2424]},{"content":"Parameters","pos":[2513,2523]},{"content":"A pointer to the state under which this execution context is being dispatched.","pos":[2547,2625]},{"content":"For more information on dispatch state, see <bpt id=\"p1\">[</bpt>DispatchState<ept id=\"p1\">](dispatchstate-structure.md)</ept>.","pos":[2626,2714],"source":" For more information on dispatch state, see [DispatchState](dispatchstate-structure.md)."},{"pos":[2746,2777],"content":"IExecutionContext::GetId Method"},{"content":"Returns a unique identifier for the execution context.","pos":[2781,2835]},{"content":"Return Value","pos":[2898,2910]},{"content":"A unique integer identifier.","pos":[2914,2942]},{"content":"Remarks","pos":[2952,2959]},{"content":"You should use the method <ph id=\"ph1\">`GetExecutionContextId`</ph> to obtain a unique identifier for the object that implements the <ph id=\"ph2\">`IExecutionContext`</ph> interface, before you use the interface as a parameter to methods supplied by the Resource Manager.","pos":[2963,3197],"source":"You should use the method `GetExecutionContextId` to obtain a unique identifier for the object that implements the `IExecutionContext` interface, before you use the interface as a parameter to methods supplied by the Resource Manager."},{"content":"You are expected to return the same identifier when the <ph id=\"ph1\">`GetId`</ph> function is invoked.","pos":[3198,3282],"source":" You are expected to return the same identifier when the `GetId` function is invoked."},{"content":"An identifier obtained from a different source could result in undefined behavior.","pos":[3289,3371]},{"pos":[3406,3440],"content":"IExecutionContext::GetProxy Method"},{"content":"Returns an interface to the thread proxy that is executing this context.","pos":[3444,3516]},{"content":"Return Value","pos":[3577,3589]},{"content":"An <ph id=\"ph1\">`IThreadProxy`</ph> interface.","pos":[3593,3621],"source":"An `IThreadProxy` interface."},{"content":"If the execution context's thread proxy has not been initialized with a call to <ph id=\"ph1\">`SetProxy`</ph>, the function must return <ph id=\"ph2\">`NULL`</ph>.","pos":[3622,3746],"source":" If the execution context's thread proxy has not been initialized with a call to `SetProxy`, the function must return `NULL`."},{"content":"Remarks","pos":[3756,3763]},{"content":"The Resource Manager will invoke the <ph id=\"ph1\">`SetProxy`</ph> method on an execution context, with an <ph id=\"ph2\">`IThreadProxy`</ph> interface as a parameter, prior to entering the <ph id=\"ph3\">`Dispatch`</ph> method on the on the context.","pos":[3767,3958],"source":"The Resource Manager will invoke the `SetProxy` method on an execution context, with an `IThreadProxy` interface as a parameter, prior to entering the `Dispatch` method on the on the context."},{"content":"You are expected to store this argument and return it on calls to <ph id=\"ph1\">`GetProxy()`</ph>.","pos":[3959,4038],"source":" You are expected to store this argument and return it on calls to `GetProxy()`."},{"pos":[4077,4115],"content":"IExecutionContext::GetScheduler Method"},{"content":"Returns an interface to the scheduler this execution context belongs to.","pos":[4119,4191]},{"content":"Return Value","pos":[4254,4266]},{"pos":[4270,4296],"content":"An <ph id=\"ph1\">`IScheduler`</ph> interface.","source":"An `IScheduler` interface."},{"content":"Remarks","pos":[4306,4313]},{"pos":[4317,4483],"content":"You are required to initialize the execution context with a valid <ph id=\"ph1\">`IScheduler`</ph> interface before you use it as a parameter to methods supplied by the Resource Manager.","source":"You are required to initialize the execution context with a valid `IScheduler` interface before you use it as a parameter to methods supplied by the Resource Manager."},{"pos":[4518,4552],"content":"IExecutionContext::SetProxy Method"},{"content":"Associates a thread proxy with this execution context.","pos":[4556,4610]},{"content":"The associated thread proxy invokes this method right before it starts executing the context's <ph id=\"ph1\">`Dispatch`</ph> method.","pos":[4611,4724],"source":" The associated thread proxy invokes this method right before it starts executing the context's `Dispatch` method."},{"content":"Parameters","pos":[4810,4820]},{"content":"An interface to the thread proxy that is about to enter the <ph id=\"ph1\">`Dispatch`</ph> method on this execution context.","pos":[4842,4946],"source":" An interface to the thread proxy that is about to enter the `Dispatch` method on this execution context."},{"content":"Remarks","pos":[4956,4963]},{"content":"You are expected to save the parameter <ph id=\"ph1\">`pThreadProxy`</ph> and return it on a call to the <ph id=\"ph2\">`GetProxy`</ph> method.","pos":[4967,5070],"source":"You are expected to save the parameter `pThreadProxy` and return it on a call to the `GetProxy` method."},{"content":"The Resource Manager guarantees that the thread proxy associated with the execution context will not change while the thread proxy is executing the <ph id=\"ph1\">`Dispatch`</ph> method.","pos":[5071,5237],"source":" The Resource Manager guarantees that the thread proxy associated with the execution context will not change while the thread proxy is executing the `Dispatch` method."},{"content":"See Also","pos":[5246,5254]},{"content":"concurrency Namespace","pos":[5259,5280]},{"content":"IScheduler Structure","pos":[5313,5333]},{"content":"IThreadProxy Structure","pos":[5365,5387]}],"content":"---\ntitle: \"IExecutionContext Structure | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"concrtrm/concurrency::IExecutionContext\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"IExecutionContext structure\"\nms.assetid: f3108089-ecda-4b07-86db-3efae60c31e0\ncaps.latest.revision: 18\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# IExecutionContext Structure\nAn interface to an execution context which can run on a given virtual processor and be cooperatively context switched.  \n  \n## Syntax  \n  \n```\nstruct IExecutionContext;\n```  \n  \n## Members  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[IExecutionContext::Dispatch Method](#dispatch)|The method that is called when a thread proxy starts executing a particular execution context. This should be the main worker routine for your scheduler.|  \n|[IExecutionContext::GetId Method](#getid)|Returns a unique identifier for the execution context.|  \n|[IExecutionContext::GetProxy Method](#getproxy)|Returns an interface to the thread proxy that is executing this context.|  \n|[IExecutionContext::GetScheduler Method](#getscheduler)|Returns an interface to the scheduler this execution context belongs to.|  \n|[IExecutionContext::SetProxy Method](#setproxy)|Associates a thread proxy with this execution context. The associated thread proxy invokes this method right before it starts executing the context's `Dispatch` method.|  \n  \n## Remarks  \n If you are implementing a custom scheduler that interfaces with the Concurrency Runtime's Resource Manager, you will need to implement the `IExecutionContext` interface. The threads created by the Resource Manager perform work on behalf of your scheduler by executing the `IExecutionContext::Dispatch` method.  \n  \n## Inheritance Hierarchy  \n `IExecutionContext`  \n  \n## Requirements  \n **Header:** concrtrm.h  \n  \n **Namespace:** concurrency  \n  \n##  <a name=\"dispatch\"></a>  IExecutionContext::Dispatch Method  \n The method that is called when a thread proxy starts executing a particular execution context. This should be the main worker routine for your scheduler.  \n  \n```\nvirtual void Dispatch(_Inout_ DispatchState* pDispatchState) = 0;\n```  \n  \n### Parameters  \n `pDispatchState`  \n A pointer to the state under which this execution context is being dispatched. For more information on dispatch state, see [DispatchState](dispatchstate-structure.md).  \n  \n##  <a name=\"getid\"></a>  IExecutionContext::GetId Method  \n Returns a unique identifier for the execution context.  \n  \n```\nvirtual unsigned int GetId() const = 0;\n```  \n  \n### Return Value  \n A unique integer identifier.  \n  \n### Remarks  \n You should use the method `GetExecutionContextId` to obtain a unique identifier for the object that implements the `IExecutionContext` interface, before you use the interface as a parameter to methods supplied by the Resource Manager. You are expected to return the same identifier when the `GetId` function is invoked.  \n  \n An identifier obtained from a different source could result in undefined behavior.  \n  \n##  <a name=\"getproxy\"></a>  IExecutionContext::GetProxy Method  \n Returns an interface to the thread proxy that is executing this context.  \n  \n```\nvirtual IThreadProxy* GetProxy() = 0;\n```  \n  \n### Return Value  \n An `IThreadProxy` interface. If the execution context's thread proxy has not been initialized with a call to `SetProxy`, the function must return `NULL`.  \n  \n### Remarks  \n The Resource Manager will invoke the `SetProxy` method on an execution context, with an `IThreadProxy` interface as a parameter, prior to entering the `Dispatch` method on the on the context. You are expected to store this argument and return it on calls to `GetProxy()`.  \n  \n##  <a name=\"getscheduler\"></a>  IExecutionContext::GetScheduler Method  \n Returns an interface to the scheduler this execution context belongs to.  \n  \n```\nvirtual IScheduler* GetScheduler() = 0;\n```  \n  \n### Return Value  \n An `IScheduler` interface.  \n  \n### Remarks  \n You are required to initialize the execution context with a valid `IScheduler` interface before you use it as a parameter to methods supplied by the Resource Manager.  \n  \n##  <a name=\"setproxy\"></a>  IExecutionContext::SetProxy Method  \n Associates a thread proxy with this execution context. The associated thread proxy invokes this method right before it starts executing the context's `Dispatch` method.  \n  \n```\nvirtual void SetProxy(_Inout_ IThreadProxy* pThreadProxy) = 0;\n```  \n  \n### Parameters  \n `pThreadProxy`  \n An interface to the thread proxy that is about to enter the `Dispatch` method on this execution context.  \n  \n### Remarks  \n You are expected to save the parameter `pThreadProxy` and return it on a call to the `GetProxy` method. The Resource Manager guarantees that the thread proxy associated with the execution context will not change while the thread proxy is executing the `Dispatch` method.  \n  \n## See Also  \n [concurrency Namespace](concurrency-namespace.md)   \n [IScheduler Structure](ischeduler-structure.md)   \n [IThreadProxy Structure](ithreadproxy-structure.md)\n"}