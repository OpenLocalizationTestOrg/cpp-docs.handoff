{"nodes":[{"pos":[12,44],"content":"_ismbb Routines | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_ismbb Routines | Microsoft Docs","pos":[0,32]}]},{"content":"_ismbb Routines","pos":[835,850]},{"pos":[851,991],"content":"Tests the given integer value <ph id=\"ph1\">`c`</ph> for a particular condition, by using the current locale or a specified LC_CTYPE conversion state category.","source":"Tests the given integer value `c` for a particular condition, by using the current locale or a specified LC_CTYPE conversion state category."},{"content":"_ismbbalnum, _ismbbalnum_l","pos":[1013,1039]},{"content":"_ismbbkprint, _ismbbkprint_l","pos":[1101,1129]},{"content":"_ismbbalpha, _ismbbalpha_l","pos":[1197,1223]},{"content":"_ismbbkpunct, _ismbbkpunct_l","pos":[1296,1324]},{"content":"_ismbbblank, _ismbbblank_l","pos":[1392,1418]},{"content":"_ismbblead, _ismbblead_l","pos":[1480,1504]},{"content":"_ismbbgraph, _ismbbgraph_l","pos":[1568,1594]},{"content":"_ismbbprint, _ismbbprint_l","pos":[1656,1682]},{"content":"_ismbbkalnum, _ismbbkalnum_l","pos":[1748,1776]},{"content":"_ismbbpunct, _ismbbpunct_l","pos":[1840,1866]},{"content":"_ismbbkana, _ismbbkana_l","pos":[1932,1956]},{"content":"_ismbbtrail, _ismbbtrail_l","pos":[2016,2042]},{"content":"Remarks","pos":[2112,2119]},{"content":"Every routine in the <ph id=\"ph1\">`_ismbb`</ph> family tests the given integer value <ph id=\"ph2\">`c`</ph> for a particular condition.","pos":[2123,2221],"source":"Every routine in the `_ismbb` family tests the given integer value `c` for a particular condition."},{"content":"The test result depends on the multibyte code page that's in effect.","pos":[2222,2290]},{"content":"By default, the multibyte code page is set to the ANSI code page that's obtained from the operating system at program startup.","pos":[2291,2417]},{"content":"You can use <bpt id=\"p1\">[</bpt>_getmbcp<ept id=\"p1\">](../c-runtime-library/reference/getmbcp.md)</ept> to query for the multibyte code page that's in use, or <bpt id=\"p2\">[</bpt>_setmbcp<ept id=\"p2\">](../c-runtime-library/reference/setmbcp.md)</ept> to change it.","pos":[2418,2606],"source":" You can use [_getmbcp](../c-runtime-library/reference/getmbcp.md) to query for the multibyte code page that's in use, or [_setmbcp](../c-runtime-library/reference/setmbcp.md) to change it."},{"content":"The output value is affected by the setting of the <ph id=\"ph1\">`LC_CTYPE`</ph> category setting of the locale; for more information, see <bpt id=\"p1\">[</bpt>setlocale, _wsetlocale<ept id=\"p1\">](../c-runtime-library/reference/setlocale-wsetlocale.md)</ept>.","pos":[2613,2814],"source":"The output value is affected by the setting of the `LC_CTYPE` category setting of the locale; for more information, see [setlocale, _wsetlocale](../c-runtime-library/reference/setlocale-wsetlocale.md)."},{"content":"The versions of these functions that don't have the <bpt id=\"p1\">**</bpt>_l<ept id=\"p1\">**</ept> suffix use the current locale for this locale-dependent behavior; the versions that do have the <bpt id=\"p2\">**</bpt>_l<ept id=\"p2\">**</ept> suffix are identical except that instead they use the locale parameter that's passed in.","pos":[2815,3065],"source":" The versions of these functions that don't have the **_l** suffix use the current locale for this locale-dependent behavior; the versions that do have the **_l** suffix are identical except that instead they use the locale parameter that's passed in."},{"pos":[3072,3146],"content":"The routines in the <ph id=\"ph1\">`_ismbb`</ph> family test the given integer <ph id=\"ph2\">`c`</ph> as follows.","source":"The routines in the `_ismbb` family test the given integer `c` as follows."},{"content":"Routine","pos":[3153,3160]},{"content":"Byte test condition","pos":[3161,3180]},{"content":"_ismbbalnum","pos":[3230,3241]},{"pos":[3312,3340],"content":"&amp;#124;&amp;#124; <ph id=\"ph1\">`_ismbbkalnum`</ph>.","source":" &#124;&#124; `_ismbbkalnum`."},{"content":"_ismbbalpha","pos":[3346,3357]},{"pos":[3439,3467],"content":"&amp;#124;&amp;#124; <ph id=\"ph1\">`_ismbbkalnum`</ph>.","source":" &#124;&#124; `_ismbbkalnum`."},{"content":"_ismbbblank","pos":[3473,3484]},{"content":"_ismbbgraph","pos":[3560,3571]},{"pos":[3632,3717],"content":"Same as <ph id=\"ph1\">`_ismbbprint`</ph>, but <ph id=\"ph2\">`_ismbbgraph`</ph> does not include the space character (0x20).","source":"Same as `_ismbbprint`, but `_ismbbgraph` does not include the space character (0x20)."},{"content":"_ismbbkalnum","pos":[3723,3735]},{"content":"Non-ASCII text symbol other than punctuation.","pos":[3798,3843]},{"content":"For example, in code page 932 only, <ph id=\"ph1\">`_ismbbkalnum`</ph> tests for katakana alphanumeric.","pos":[3844,3927],"source":" For example, in code page 932 only, `_ismbbkalnum` tests for katakana alphanumeric."},{"content":"_ismbbkana","pos":[3933,3943]},{"content":"Katakana (0xA1 – 0xDF).","pos":[4002,4025]},{"content":"Specific to code page 932.","pos":[4026,4052]},{"content":"_ismbbkprint","pos":[4058,4070]},{"content":"Non-ASCII text or non-ASCII punctuation symbol.","pos":[4133,4180]},{"content":"For example, in code page 932 only, <ph id=\"ph1\">`_ismbbkprint`</ph> tests for katakana alphanumeric or katakana punctuation (range: 0xA1 – 0xDF).","pos":[4181,4309],"source":" For example, in code page 932 only, `_ismbbkprint` tests for katakana alphanumeric or katakana punctuation (range: 0xA1 – 0xDF)."},{"content":"_ismbbkpunct","pos":[4315,4327]},{"content":"Non-ASCII punctuation.","pos":[4390,4412]},{"content":"For example, in code page 932 only, <ph id=\"ph1\">`_ismbbkpunct`</ph> tests for katakana punctuation.","pos":[4413,4495],"source":" For example, in code page 932 only, `_ismbbkpunct` tests for katakana punctuation."},{"content":"_ismbblead","pos":[4501,4511]},{"content":"First byte of multibyte character.","pos":[4570,4604]},{"content":"For example, in code page 932 only, valid ranges are 0x81 – 0x9F, 0xE0 – 0xFC.","pos":[4605,4683]},{"content":"_ismbbprint","pos":[4689,4700]},{"content":"&amp;#124;&amp;#124; <ph id=\"ph1\">`_ismbbkprint`</ph>.","pos":[4771,4799],"source":" &#124;&#124; `_ismbbkprint`."},{"content":"<bpt id=\"p1\">**</bpt>ismbbprint<ept id=\"p1\">**</ept> includes the space character (0x20).","pos":[4800,4851],"source":"**ismbbprint** includes the space character (0x20)."},{"content":"_ismbbpunct","pos":[4857,4868]},{"pos":[4939,4967],"content":"&amp;#124;&amp;#124; <ph id=\"ph1\">`_ismbbkpunct`</ph>.","source":" &#124;&#124; `_ismbbkpunct`."},{"content":"_ismbbtrail","pos":[4973,4984]},{"content":"Second byte of multibyte character.","pos":[5045,5080]},{"content":"For example, in code page 932 only, valid ranges are 0x40 – 0x7E, 0x80 – 0xEC.","pos":[5081,5159]},{"content":"The following table shows the ORed values that compose the test conditions for these routines.","pos":[5167,5261]},{"content":"The manifest constants <ph id=\"ph1\">`_BLANK`</ph>, <ph id=\"ph2\">`_DIGIT`</ph>, <ph id=\"ph3\">`_LOWER`</ph>, <ph id=\"ph4\">`_PUNCT`</ph>, and <ph id=\"ph5\">`_UPPER`</ph> are defined in Ctype.h.","pos":[5262,5361],"source":" The manifest constants `_BLANK`, `_DIGIT`, `_LOWER`, `_PUNCT`, and `_UPPER` are defined in Ctype.h."},{"content":"Routine","pos":[5368,5375]},{"content":"_BLANK","pos":[5376,5382]},{"content":"_DIGIT","pos":[5383,5389]},{"content":"LOWER","pos":[5390,5395]},{"content":"_PUNCT","pos":[5396,5402]},{"content":"UPPER","pos":[5403,5408]},{"content":"Non-","pos":[5409,5413]},{"content":"ASCII","pos":[5426,5431]},{"content":"text","pos":[5444,5448]},{"content":"Non-","pos":[5449,5453]},{"content":"ASCII","pos":[5466,5471]},{"content":"punct","pos":[5484,5489]},{"content":"—","pos":[5655,5656]},{"content":"x","pos":[5657,5658]},{"content":"x","pos":[5659,5660]},{"content":"—","pos":[5661,5662]},{"content":"x","pos":[5663,5664]},{"content":"x","pos":[5665,5666]},{"content":"—","pos":[5667,5668]},{"content":"—","pos":[5687,5688]},{"content":"—","pos":[5689,5690]},{"content":"x","pos":[5691,5692]},{"content":"—","pos":[5693,5694]},{"content":"x","pos":[5695,5696]},{"content":"x","pos":[5697,5698]},{"content":"—","pos":[5699,5700]},{"content":"x","pos":[5719,5720]},{"content":"—","pos":[5721,5722]},{"content":"—","pos":[5723,5724]},{"content":"—","pos":[5725,5726]},{"content":"—","pos":[5727,5728]},{"content":"—","pos":[5729,5730]},{"content":"—","pos":[5731,5732]},{"content":"—","pos":[5751,5752]},{"content":"x","pos":[5753,5754]},{"content":"x","pos":[5755,5756]},{"content":"x","pos":[5757,5758]},{"content":"x","pos":[5759,5760]},{"content":"x","pos":[5761,5762]},{"content":"x","pos":[5763,5764]},{"content":"—","pos":[5784,5785]},{"content":"—","pos":[5786,5787]},{"content":"—","pos":[5788,5789]},{"content":"—","pos":[5790,5791]},{"content":"—","pos":[5792,5793]},{"content":"x","pos":[5794,5795]},{"content":"—","pos":[5796,5797]},{"content":"—","pos":[5817,5818]},{"content":"—","pos":[5819,5820]},{"content":"—","pos":[5821,5822]},{"content":"—","pos":[5823,5824]},{"content":"—","pos":[5825,5826]},{"content":"x","pos":[5827,5828]},{"content":"x","pos":[5829,5830]},{"content":"—","pos":[5850,5851]},{"content":"—","pos":[5852,5853]},{"content":"—","pos":[5854,5855]},{"content":"—","pos":[5856,5857]},{"content":"—","pos":[5858,5859]},{"content":"—","pos":[5860,5861]},{"content":"x","pos":[5862,5863]},{"content":"x","pos":[5882,5883]},{"content":"x","pos":[5884,5885]},{"content":"x","pos":[5886,5887]},{"content":"x","pos":[5888,5889]},{"content":"x","pos":[5890,5891]},{"content":"x","pos":[5892,5893]},{"content":"x","pos":[5894,5895]},{"content":"—","pos":[5914,5915]},{"content":"—","pos":[5916,5917]},{"content":"—","pos":[5918,5919]},{"content":"x","pos":[5920,5921]},{"content":"—","pos":[5922,5923]},{"content":"—","pos":[5924,5925]},{"content":"x","pos":[5926,5927]},{"content":"The <ph id=\"ph1\">`_ismbb`</ph> routines are implemented both as functions and as macros.","pos":[5935,6005],"source":"The `_ismbb` routines are implemented both as functions and as macros."},{"content":"For more information about how to choose either implementation, see <bpt id=\"p1\">[</bpt>Recommendations for Choosing Between Functions and Macros<ept id=\"p1\">](../c-runtime-library/recommendations-for-choosing-between-functions-and-macros.md)</ept>.","pos":[6006,6217],"source":" For more information about how to choose either implementation, see [Recommendations for Choosing Between Functions and Macros](../c-runtime-library/recommendations-for-choosing-between-functions-and-macros.md)."},{"content":".NET Framework Equivalent","pos":[6226,6251]},{"pos":[6255,6396],"content":"Not applicable, but see <bpt id=\"p1\">[</bpt>System::Globalization::CultureInfo<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.globalization.cultureinfo.aspx)</ept>.","source":"Not applicable, but see [System::Globalization::CultureInfo](https://msdn.microsoft.com/en-us/library/system.globalization.cultureinfo.aspx)."},{"content":"See Also","pos":[6405,6413]},{"content":"Byte Classification","pos":[6418,6437]},{"content":"is, isw Routines","pos":[6489,6505]},{"content":"_mbbtombc, _mbbtombc_l","pos":[6553,6575]},{"content":"_mbctombb, _mbctombb_l","pos":[6637,6659]}],"content":"---\ntitle: \"_ismbb Routines | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napilocation: \n  - \"msvcr110.dll\"\n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_ismbb\"\n  - \"ismbb\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"ismbb routines\"\n  - \"_ismbb routines\"\nms.assetid: d63c232e-3fe4-4844-aafd-2133846ece4b\ncaps.latest.revision: 14\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# _ismbb Routines\nTests the given integer value `c` for a particular condition, by using the current locale or a specified LC_CTYPE conversion state category.  \n  \n|||  \n|-|-|  \n|[_ismbbalnum, _ismbbalnum_l](../c-runtime-library/reference/ismbbalnum-ismbbalnum-l.md)|[_ismbbkprint, _ismbbkprint_l](../c-runtime-library/reference/ismbbkprint-ismbbkprint-l.md)|  \n|[_ismbbalpha, _ismbbalpha_l](http://msdn.microsoft.com/en-us/8e54cb92-fc2b-41f5-8ab4-b22ac8aa9ad0)|[_ismbbkpunct, _ismbbkpunct_l](../c-runtime-library/reference/ismbbkpunct-ismbbkpunct-l.md)|  \n|[_ismbbblank, _ismbbblank_l](../c-runtime-library/reference/ismbbblank-ismbbblank-l.md)|[_ismbblead, _ismbblead_l](../c-runtime-library/reference/ismbblead-ismbblead-l.md)|  \n|[_ismbbgraph, _ismbbgraph_l](../c-runtime-library/reference/ismbbgraph-ismbbgraph-l.md)|[_ismbbprint, _ismbbprint_l](../c-runtime-library/reference/ismbbprint-ismbbprint-l.md)|  \n|[_ismbbkalnum, _ismbbkalnum_l](../c-runtime-library/reference/ismbbkalnum-ismbbkalnum-l.md)|[_ismbbpunct, _ismbbpunct_l](../c-runtime-library/reference/ismbbpunct-ismbbpunct-l.md)|  \n|[_ismbbkana, _ismbbkana_l](../c-runtime-library/reference/ismbbkana-ismbbkana-l.md)|[_ismbbtrail, _ismbbtrail_l](../c-runtime-library/reference/ismbbtrail-ismbbtrail-l.md)|  \n  \n## Remarks  \n Every routine in the `_ismbb` family tests the given integer value `c` for a particular condition. The test result depends on the multibyte code page that's in effect. By default, the multibyte code page is set to the ANSI code page that's obtained from the operating system at program startup. You can use [_getmbcp](../c-runtime-library/reference/getmbcp.md) to query for the multibyte code page that's in use, or [_setmbcp](../c-runtime-library/reference/setmbcp.md) to change it.  \n  \n The output value is affected by the setting of the `LC_CTYPE` category setting of the locale; for more information, see [setlocale, _wsetlocale](../c-runtime-library/reference/setlocale-wsetlocale.md). The versions of these functions that don't have the **_l** suffix use the current locale for this locale-dependent behavior; the versions that do have the **_l** suffix are identical except that instead they use the locale parameter that's passed in.  \n  \n The routines in the `_ismbb` family test the given integer `c` as follows.  \n  \n|Routine|Byte test condition|  \n|-------------|-------------------------|  \n|[_ismbbalnum](../c-runtime-library/reference/ismbbalnum-ismbbalnum-l.md)|`isalnum` &#124;&#124; `_ismbbkalnum`.|  \n|[_ismbbalpha](http://msdn.microsoft.com/en-us/8e54cb92-fc2b-41f5-8ab4-b22ac8aa9ad0)|`isalpha` &#124;&#124; `_ismbbkalnum`.|  \n|[_ismbbblank](../c-runtime-library/reference/ismbbblank-ismbbblank-l.md)|`isblank`|  \n|[_ismbbgraph](../c-runtime-library/reference/ismbbgraph-ismbbgraph-l.md)|Same as `_ismbbprint`, but `_ismbbgraph` does not include the space character (0x20).|  \n|[_ismbbkalnum](../c-runtime-library/reference/ismbbkalnum-ismbbkalnum-l.md)|Non-ASCII text symbol other than punctuation. For example, in code page 932 only, `_ismbbkalnum` tests for katakana alphanumeric.|  \n|[_ismbbkana](../c-runtime-library/reference/ismbbkana-ismbbkana-l.md)|Katakana (0xA1 – 0xDF). Specific to code page 932.|  \n|[_ismbbkprint](../c-runtime-library/reference/ismbbkprint-ismbbkprint-l.md)|Non-ASCII text or non-ASCII punctuation symbol. For example, in code page 932 only, `_ismbbkprint` tests for katakana alphanumeric or katakana punctuation (range: 0xA1 – 0xDF).|  \n|[_ismbbkpunct](../c-runtime-library/reference/ismbbkpunct-ismbbkpunct-l.md)|Non-ASCII punctuation. For example, in code page 932 only, `_ismbbkpunct` tests for katakana punctuation.|  \n|[_ismbblead](../c-runtime-library/reference/ismbblead-ismbblead-l.md)|First byte of multibyte character. For example, in code page 932 only, valid ranges are 0x81 – 0x9F, 0xE0 – 0xFC.|  \n|[_ismbbprint](../c-runtime-library/reference/ismbbprint-ismbbprint-l.md)|`isprint` &#124;&#124; `_ismbbkprint`. **ismbbprint** includes the space character (0x20).|  \n|[_ismbbpunct](../c-runtime-library/reference/ismbbpunct-ismbbpunct-l.md)|`ispunct` &#124;&#124; `_ismbbkpunct`.|  \n|[_ismbbtrail](../c-runtime-library/reference/ismbbtrail-ismbbtrail-l.md)|Second byte of multibyte character. For example, in code page 932 only, valid ranges are 0x40 – 0x7E, 0x80 – 0xEC.|  \n  \n The following table shows the ORed values that compose the test conditions for these routines. The manifest constants `_BLANK`, `_DIGIT`, `_LOWER`, `_PUNCT`, and `_UPPER` are defined in Ctype.h.  \n  \n|Routine|_BLANK|_DIGIT|LOWER|_PUNCT|UPPER|Non-<br /><br /> ASCII<br /><br /> text|Non-<br /><br /> ASCII<br /><br /> punct|  \n|-------------|-------------|-------------|-----------|-------------|-----------|------------------------------|-------------------------------|  \n|`_ismbbalnum`|—|x|x|—|x|x|—|  \n|`_ismbbalpha`|—|—|x|—|x|x|—|  \n|`_ismbbblank`|x|—|—|—|—|—|—|  \n|`_ismbbgraph`|—|x|x|x|x|x|x|  \n|`_ismbbkalnum`|—|—|—|—|—|x|—|  \n|`_ismbbkprint`|—|—|—|—|—|x|x|  \n|`_ismbbkpunct`|—|—|—|—|—|—|x|  \n|`_ismbbprint`|x|x|x|x|x|x|x|  \n|`_ismbbpunct`|—|—|—|x|—|—|x|  \n  \n The `_ismbb` routines are implemented both as functions and as macros. For more information about how to choose either implementation, see [Recommendations for Choosing Between Functions and Macros](../c-runtime-library/recommendations-for-choosing-between-functions-and-macros.md).  \n  \n## .NET Framework Equivalent  \n Not applicable, but see [System::Globalization::CultureInfo](https://msdn.microsoft.com/en-us/library/system.globalization.cultureinfo.aspx).  \n  \n## See Also  \n [Byte Classification](../c-runtime-library/byte-classification.md)   \n [is, isw Routines](../c-runtime-library/is-isw-routines.md)   \n [_mbbtombc, _mbbtombc_l](../c-runtime-library/reference/mbbtombc-mbbtombc-l.md)   \n [_mbctombb, _mbctombb_l](../c-runtime-library/reference/mbctombb-mbctombb-l.md)"}