{"nodes":[{"pos":[12,75],"content":"How to: Retrieve the Windows Version (C++-CLI) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Retrieve the Windows Version (C++-CLI) | Microsoft Docs","pos":[0,63]}]},{"content":"How to: Retrieve the Windows Version (C++/CLI)","pos":[663,709]},{"content":"The following code example demonstrates how to retrieve the platform and version information of the current operating system.","pos":[710,835]},{"content":"This information is stored in the &lt;xref:System.Environment.OSVersion%2A?displayProperty=fullName&gt; property and consists of an enumeration that describes the version of Windows in broad terms and a &lt;xref:System.Environment.Version%2A&gt; object that contains the exact build of the operating system.","pos":[836,1131],"source":" This information is stored in the <xref:System.Environment.OSVersion%2A?displayProperty=fullName> property and consists of an enumeration that describes the version of Windows in broad terms and a <xref:System.Environment.Version%2A> object that contains the exact build of the operating system."},{"content":"Example","pos":[1140,1147]},{"content":"See Also","pos":[2080,2088]},{"content":"Windows Operations (C++/CLI)","pos":[2093,2121]},{"content":".NET Programming with C++/CLI (Visual C++)","pos":[2169,2211]}],"content":"---\ntitle: \"How to: Retrieve the Windows Version (C++-CLI) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"Windows [C++], version\"\n  - \"Windows [C++], retrieving version using Visual C++\"\nms.assetid: 7e6f567b-d378-49bb-aa59-2240f69a022d\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Retrieve the Windows Version (C++/CLI)\nThe following code example demonstrates how to retrieve the platform and version information of the current operating system. This information is stored in the <xref:System.Environment.OSVersion%2A?displayProperty=fullName> property and consists of an enumeration that describes the version of Windows in broad terms and a <xref:System.Environment.Version%2A> object that contains the exact build of the operating system.  \n  \n## Example  \n  \n```  \n// os_ver.cpp  \n// compile with: /clr  \nusing namespace System;  \n  \nint main()   \n{  \n   OperatingSystem^ osv = Environment::OSVersion;  \n   PlatformID id = osv->Platform;  \n   Console::Write(\"Operating system: \");  \n  \n   if (id == PlatformID::Win32NT)  \n      Console::WriteLine(\"Win32NT\");  \n   else if (id == PlatformID::Win32S)  \n      Console::WriteLine(\"Win32S\");  \n   else if (id == PlatformID::Win32Windows)  \n      Console::WriteLine(\"Win32Windows\");  \n   else  \n      Console::WriteLine(\"WinCE\");  \n  \n   Version^ version = osv->Version;  \n   if (version)  \n   {  \n      int build = version->Build;  \n      int major = version->Major;  \n      int minor = version->Minor;  \n      int revision = Environment::Version->Revision;  \n      Console::Write(\"OS Version: \");  \n      Console::WriteLine(\"{0}.{1}.{2}.{3}\",   \n                   build, major, minor, revision);  \n   }  \n  \n   return 0;  \n}  \n```  \n  \n## See Also  \n [Windows Operations (C++/CLI)](../dotnet/windows-operations-cpp-cli.md)   \n [.NET Programming with C++/CLI (Visual C++)](../dotnet/dotnet-programming-with-cpp-cli-visual-cpp.md)"}