{"nodes":[{"pos":[12,55],"content":"Traversing a Simple Rowset | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Traversing a Simple Rowset | Microsoft Docs","pos":[0,43]}]},{"content":"Traversing a Simple Rowset","pos":[723,749]},{"content":"The following example shows a quick and easy database access that does not involve commands.","pos":[750,842]},{"content":"The following consumer code, in an ATL project, retrieves records from a table called <bpt id=\"p1\">*</bpt>Artists<ept id=\"p1\">*</ept> in a Microsoft Access database using the Microsoft OLE DB Provider for ODBC.","pos":[843,1015],"source":" The following consumer code, in an ATL project, retrieves records from a table called *Artists* in a Microsoft Access database using the Microsoft OLE DB Provider for ODBC."},{"content":"The code creates a <bpt id=\"p1\">[</bpt>CTable<ept id=\"p1\">](../../data/oledb/ctable-class.md)</ept> table object with an accessor based on the user record class <ph id=\"ph1\">`CArtists`</ph>.","pos":[1016,1150],"source":" The code creates a [CTable](../../data/oledb/ctable-class.md) table object with an accessor based on the user record class `CArtists`."},{"content":"It opens a connection, opens a session on the connection, and opens the table on the session.","pos":[1151,1244]},{"pos":[1851,1896],"content":"The user record, <ph id=\"ph1\">`CArtists`</ph>, looks like this:","source":"The user record, `CArtists`, looks like this:"},{"content":"See Also","pos":[2221,2229]},{"content":"Working with OLE DB Consumer Templates","pos":[2234,2272]}],"content":"---\ntitle: \"Traversing a Simple Rowset | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"data access [C++], rowsets\"\n  - \"rowsets [C++], accessing\"\n  - \"simple rowsets\"\n  - \"OLE DB consumers [C++], database attributes\"\n  - \"accessors [C++], rowsets\"\nms.assetid: b45acf16-4029-429d-ab8d-b7fba98b9740\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Traversing a Simple Rowset\nThe following example shows a quick and easy database access that does not involve commands. The following consumer code, in an ATL project, retrieves records from a table called *Artists* in a Microsoft Access database using the Microsoft OLE DB Provider for ODBC. The code creates a [CTable](../../data/oledb/ctable-class.md) table object with an accessor based on the user record class `CArtists`. It opens a connection, opens a session on the connection, and opens the table on the session.  \n  \n```  \n#include <atldbcli.h>  \n  \nCDataSource connection;  \nCSession session;  \nCTable<CAccessor<CArtists> > artists;  \n  \n// Open the connection, session, and table, specifying authentication   \n// using Windows NT integrated security. Hard-coding a password is a major  \n// security weakness.  \nconnection.Open(CLSID_MSDASQL, \"NWind\", NULL, NULL,   \nDBPROP_AUTH_INTEGRATED);  \nsession.Open(connection);  \nartists.Open(session, \"Artists\");  \n  \n// Get data from the rowset  \nwhile (artists.MoveNext() == S_OK)  \n{  \n   cout << artists.m_szFirstName;  \n   cout << artists.m_szLastName;  \n}  \n```  \n  \n The user record, `CArtists`, looks like this:  \n  \n```  \nclass CArtists  \n{  \npublic:  \n// Data Elements  \n   CHAR m_szFirstName[20];  \n   CHAR m_szLastName[30];  \n   short m_nAge;  \n  \n// Column binding map  \nBEGIN_COLUMN_MAP(CArtists)  \n   COLUMN_ENTRY(1, m_szFirstName)  \n   COLUMN_ENTRY(2, m_szLastName)  \n   COLUMN_ENTRY(3, m_nAge)  \nEND_COLUMN_MAP()  \n```  \n  \n## See Also  \n [Working with OLE DB Consumer Templates](../../data/oledb/working-with-ole-db-consumer-templates.md)"}