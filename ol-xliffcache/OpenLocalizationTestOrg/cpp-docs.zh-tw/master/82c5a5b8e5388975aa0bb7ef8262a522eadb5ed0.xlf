<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">82c5a5b8e5388975aa0bb7ef8262a522eadb5ed0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\cpp\overview-of-cpp-statements.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d35432acd17871102e49e719a05f3879255ea7f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7bcdb51517233f156ff64d04600ec2e55319d557</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Overview of C++ Statements | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Overview of C++ Statements</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>C++ statements are executed sequentially, except when an expression statement, a selection statement, an iteration statement, or a jump statement specifically modifies that sequence.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Statements may be of the following types:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In most cases, the C++ statement syntax is identical to that of ANSI C. The primary difference between the two is that in C, declarations are allowed only at the start of a block; C++ adds the <bpt id="p1">*</bpt>declaration-statement<ept id="p1">*</ept>, which effectively removes this restriction.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This enables you to introduce variables at a point in the program where a precomputed initialization value can be calculated.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Declaring variables inside blocks also allows you to exercise precise control over the scope and lifetime of those variables.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The topics on statements describe the following C++ keywords:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>break</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>else</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>__if_exists</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>__try</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>case</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>__except</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>__if_not_exists</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>try</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>catch</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>for</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>__leave</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>while</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>continue</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>goto</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>return</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>default</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>__finally</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>switch</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>do</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>if</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>throw</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Statements</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>