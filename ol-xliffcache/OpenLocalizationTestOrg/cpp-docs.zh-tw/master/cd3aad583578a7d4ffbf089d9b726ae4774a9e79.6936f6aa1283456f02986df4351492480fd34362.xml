{"nodes":[{"pos":[12,59],"content":"Checking for Memory Overwrites | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Checking for Memory Overwrites | Microsoft Docs","pos":[0,47]}]},{"content":"Checking for Memory Overwrites","pos":[586,616]},{"content":"If you get an access violation on a call to a heap manipulation function, it is possible that your program has corrupted the heap.","pos":[617,747]},{"content":"A common symptom of this situation would be:","pos":[748,792]},{"content":"The <bpt id=\"p1\">[</bpt>_heapchk<ept id=\"p1\">](../../c-runtime-library/reference/heapchk.md)</ept> function is available in both debug and release builds (Windows NT only) for verifying the integrity of the run time library heap.","pos":[847,1038],"source":"The [_heapchk](../../c-runtime-library/reference/heapchk.md) function is available in both debug and release builds (Windows NT only) for verifying the integrity of the run time library heap."},{"content":"You can use <ph id=\"ph1\">`_heapchk`</ph> in much the same way as the <ph id=\"ph2\">`AfxCheckMemory`</ph> function to isolate a heap overwrite, for example:","pos":[1039,1157],"source":" You can use `_heapchk` in much the same way as the `AfxCheckMemory` function to isolate a heap overwrite, for example:"},{"content":"If this function ever fails, you need to isolate at which point the heap was corrupted.","pos":[1224,1311]},{"content":"See Also","pos":[1320,1328]},{"content":"Fixing Release Build Problems","pos":[1333,1362]}],"content":"---\ntitle: \"Checking for Memory Overwrites | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"memory, overwrites\"\nms.assetid: da7c5d77-a267-415f-a8ab-ee5ce5bfc286\ncaps.latest.revision: 7\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Checking for Memory Overwrites\nIf you get an access violation on a call to a heap manipulation function, it is possible that your program has corrupted the heap. A common symptom of this situation would be:  \n  \n```  \nAccess Violation in _searchseg  \n```  \n  \n The [_heapchk](../../c-runtime-library/reference/heapchk.md) function is available in both debug and release builds (Windows NT only) for verifying the integrity of the run time library heap. You can use `_heapchk` in much the same way as the `AfxCheckMemory` function to isolate a heap overwrite, for example:  \n  \n```  \nif(_heapchk()!=_HEAPOK)  \n   DebugBreak();  \n```  \n  \n If this function ever fails, you need to isolate at which point the heap was corrupted.  \n  \n## See Also  \n [Fixing Release Build Problems](../../build/reference/fixing-release-build-problems.md)"}