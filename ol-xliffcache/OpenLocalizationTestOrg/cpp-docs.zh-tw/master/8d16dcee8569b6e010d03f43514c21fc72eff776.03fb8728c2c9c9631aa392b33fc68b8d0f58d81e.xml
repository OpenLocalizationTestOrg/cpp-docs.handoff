{"nodes":[{"pos":[12,38],"content":"_flushall | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_flushall | Microsoft Docs","pos":[0,26]}]},{"content":"_flushall","pos":[1010,1019]},{"content":"Flushes all streams; clears all buffers.","pos":[1020,1060]},{"content":"Syntax","pos":[1069,1075]},{"content":"Return Value","pos":[1124,1136]},{"content":"returns the number of open streams (input and output).","pos":[1152,1206]},{"content":"There is no error return.","pos":[1207,1232]},{"content":"Remarks","pos":[1241,1248]},{"content":"By default, the <ph id=\"ph1\">`_flushall`</ph> function writes to appropriate files the contents of all buffers associated with open output streams.","pos":[1252,1381],"source":"By default, the `_flushall` function writes to appropriate files the contents of all buffers associated with open output streams."},{"content":"All buffers associated with open input streams are cleared of their current contents.","pos":[1382,1467]},{"content":"(These buffers are normally maintained by the operating system, which determines the optimal time to write the data automatically to disk: when a buffer is full, when a stream is closed, or when a program terminates normally without closing streams.)","pos":[1468,1718]},{"content":"If a read follows a call to <ph id=\"ph1\">`_flushall`</ph>, new data is read from the input files into the buffers.","pos":[1725,1821],"source":"If a read follows a call to `_flushall`, new data is read from the input files into the buffers."},{"content":"All streams remain open after the call to <ph id=\"ph1\">`_flushall`</ph>.","pos":[1822,1876],"source":" All streams remain open after the call to `_flushall`."},{"content":"The commit-to-disk feature of the run-time library lets you ensure that critical data is written directly to disk rather than to the operating system buffers.","pos":[1883,2041]},{"content":"Without rewriting an existing program, you can enable this feature by linking the program's object files with Commode.obj.","pos":[2042,2164]},{"content":"In the resulting executable file, calls to <ph id=\"ph1\">`_flushall`</ph> write the contents of all buffers to disk.","pos":[2165,2262],"source":" In the resulting executable file, calls to `_flushall` write the contents of all buffers to disk."},{"content":"Only <ph id=\"ph1\">`_flushall`</ph> and <ph id=\"ph2\">`fflush`</ph> are affected by Commode.obj.","pos":[2263,2321],"source":" Only `_flushall` and `fflush` are affected by Commode.obj."},{"pos":[2328,2574],"content":"For information about controlling the commit-to-disk feature, see <bpt id=\"p1\">[</bpt>Stream I/O<ept id=\"p1\">](../../c-runtime-library/stream-i-o.md)</ept>, <bpt id=\"p2\">[</bpt>fopen<ept id=\"p2\">](../../c-runtime-library/reference/fopen-wfopen.md)</ept>, and <bpt id=\"p3\">[</bpt>_fdopen<ept id=\"p3\">](../../c-runtime-library/reference/fdopen-wfdopen.md)</ept>.","source":"For information about controlling the commit-to-disk feature, see [Stream I/O](../../c-runtime-library/stream-i-o.md), [fopen](../../c-runtime-library/reference/fopen-wfopen.md), and [_fdopen](../../c-runtime-library/reference/fdopen-wfdopen.md)."},{"content":"Requirements","pos":[2583,2595]},{"content":"Function","pos":[2602,2610]},{"content":"Required header","pos":[2611,2626]},{"content":"stdio.h&gt;","pos":[2686,2694],"source":"stdio.h>"},{"pos":[2702,2820],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"content":"Example","pos":[2829,2836]},{"content":".NET Framework Equivalent","pos":[3168,3193]},{"content":"System::IO::FileStream::Flush","pos":[3204,3233]},{"content":"System::IO::StreamWriter::Flush","pos":[3301,3332]},{"content":"System::IO::TextWriter::Flush","pos":[3420,3449]},{"content":"System::IO::BinaryWriter::Flush","pos":[3535,3566]},{"content":"See Also","pos":[3652,3660]},{"content":"Stream I/O","pos":[3665,3675]},{"content":"_commit","pos":[3721,3728]},{"content":"fclose, _fcloseall","pos":[3780,3798]},{"content":"fflush","pos":[3860,3866]},{"content":"setvbuf","pos":[3918,3925]}],"content":"---\ntitle: \"_flushall | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_flushall\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-stdio-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_flushall\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"flushall function\"\n  - \"flushing streams\"\n  - \"streams, flushing\"\n  - \"_flushall function\"\nms.assetid: 2cd73562-6d00-4ca2-b13c-80d0ae7870b5\ncaps.latest.revision: 16\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# _flushall\nFlushes all streams; clears all buffers.  \n  \n## Syntax  \n  \n```  \nint _flushall( void );  \n```  \n  \n## Return Value  \n `_flushall` returns the number of open streams (input and output). There is no error return.  \n  \n## Remarks  \n By default, the `_flushall` function writes to appropriate files the contents of all buffers associated with open output streams. All buffers associated with open input streams are cleared of their current contents. (These buffers are normally maintained by the operating system, which determines the optimal time to write the data automatically to disk: when a buffer is full, when a stream is closed, or when a program terminates normally without closing streams.)  \n  \n If a read follows a call to `_flushall`, new data is read from the input files into the buffers. All streams remain open after the call to `_flushall`.  \n  \n The commit-to-disk feature of the run-time library lets you ensure that critical data is written directly to disk rather than to the operating system buffers. Without rewriting an existing program, you can enable this feature by linking the program's object files with Commode.obj. In the resulting executable file, calls to `_flushall` write the contents of all buffers to disk. Only `_flushall` and `fflush` are affected by Commode.obj.  \n  \n For information about controlling the commit-to-disk feature, see [Stream I/O](../../c-runtime-library/stream-i-o.md), [fopen](../../c-runtime-library/reference/fopen-wfopen.md), and [_fdopen](../../c-runtime-library/reference/fdopen-wfdopen.md).  \n  \n## Requirements  \n  \n|Function|Required header|  \n|--------------|---------------------|  \n|`_flushall`|\\<stdio.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Example  \n  \n```  \n// crt_flushall.c  \n// This program uses _flushall  \n// to flush all open buffers.  \n  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n   int numflushed;  \n  \n   numflushed = _flushall();  \n   printf( \"There were %d streams flushed\\n\", numflushed );  \n}  \n```  \n  \n```Output  \nThere were 3 streams flushed  \n```  \n  \n## .NET Framework Equivalent  \n  \n-   [System::IO::FileStream::Flush](https://msdn.microsoft.com/en-us/library/2bw4h516.aspx)  \n  \n-   [System::IO::StreamWriter::Flush](https://msdn.microsoft.com/en-us/library/system.io.streamwriter.flush.aspx)  \n  \n-   [System::IO::TextWriter::Flush](https://msdn.microsoft.com/en-us/library/system.io.textwriter.flush.aspx)  \n  \n-   [System::IO::BinaryWriter::Flush](https://msdn.microsoft.com/en-us/library/system.io.binarywriter.flush.aspx)  \n  \n## See Also  \n [Stream I/O](../../c-runtime-library/stream-i-o.md)   \n [_commit](../../c-runtime-library/reference/commit.md)   \n [fclose, _fcloseall](../../c-runtime-library/reference/fclose-fcloseall.md)   \n [fflush](../../c-runtime-library/reference/fflush.md)   \n [setvbuf](../../c-runtime-library/reference/setvbuf.md)"}