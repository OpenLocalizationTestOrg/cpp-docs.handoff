{"nodes":[{"pos":[12,49],"content":"Compiler Error C3711 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C3711 | Microsoft Docs","pos":[0,37]}]},{"content":"Compiler Error C3711","pos":[597,617]},{"content":"'method': an non-managed event source method must return void or an integral type","pos":[618,699]},{"content":"You defined a method in the event source that did not return void or an integral type.","pos":[706,792]},{"content":"To fix this error, make the event and event handler have a return type of <ph id=\"ph1\">`void`</ph> or an integral type such as <ph id=\"ph2\">`int`</ph> or <ph id=\"ph3\">`long`</ph>.","pos":[793,918],"source":" To fix this error, make the event and event handler have a return type of `void` or an integral type such as `int` or `long`."},{"content":"The following sample generates C3711:","pos":[925,962]}],"content":"---\ntitle: \"Compiler Error C3711 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C3711\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C3711\"\nms.assetid: 26d581cc-2153-4ee0-b814-a371184be3e1\ncaps.latest.revision: 7\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Error C3711\n'method': an non-managed event source method must return void or an integral type  \n  \n You defined a method in the event source that did not return void or an integral type. To fix this error, make the event and event handler have a return type of `void` or an integral type such as `int` or `long`.  \n  \n The following sample generates C3711:  \n  \n```  \n// C3711.cpp  \n#include <atlbase.h>  \n#include <atlcom.h>  \n#include <atlctl.h>  \n  \n[event_source(native)]  \nclass CEventSrc {  \npublic:  \n   __event float event1();   // C3711  \n   // try the following line instead  \n   // __event int event1();  \n   // also change the handler, below  \n};  \n  \n[event_receiver(native)]  \nclass CEventRec {  \npublic:  \n   float handler1() {         // change float to int  \n      return 0.0;             // change 0.0 to 0  \n   }  \n   void HookEvents(CEventSrc* pSrc) {  \n      __hook(CEventSrc::event1, pSrc, CEventRec::handler1);  \n   }  \n   void UnhookEvents(CEventSrc* pSrc) {  \n      __unhook(CEventSrc::event1, pSrc, CEventRec::handler1);  \n   }  \n};  \n  \nint main() {  \n}  \n```"}