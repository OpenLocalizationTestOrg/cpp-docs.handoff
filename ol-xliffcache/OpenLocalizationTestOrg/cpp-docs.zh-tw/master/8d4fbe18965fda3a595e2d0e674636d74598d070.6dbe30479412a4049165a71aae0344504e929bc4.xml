{"nodes":[{"pos":[12,56],"content":"CDynamicAccessor::GetLength | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CDynamicAccessor::GetLength | Microsoft Docs","pos":[0,44]}]},{"content":"CDynamicAccessor::GetLength","pos":[738,765]},{"content":"Retrieves the length of the specified column.","pos":[766,811]},{"content":"Syntax","pos":[820,826]},{"content":"Parameters","pos":[1141,1151]},{"content":"[in] The column number.","pos":[1168,1191]},{"content":"Column numbers start with 1.","pos":[1192,1220]},{"content":"A value of 0 refers to the bookmark column, if any.","pos":[1221,1272]},{"content":"[in] A pointer to a character string containing the column name.","pos":[1296,1360]},{"content":"[out] A pointer to the integer containing the length of the column in bytes.","pos":[1380,1456]},{"content":"Return Value","pos":[1465,1477]},{"content":"Returns <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if the specified column is found.","pos":[1481,1531],"source":"Returns **true** if the specified column is found."},{"content":"Otherwise, this function returns <bpt id=\"p1\">**</bpt>false<ept id=\"p1\">**</ept>.","pos":[1532,1575],"source":" Otherwise, this function returns **false**."},{"content":"Remarks","pos":[1584,1591]},{"content":"The first override takes the column number, and the second and third overrides take the column name in ANSI or Unicode format, respectively.","pos":[1595,1735]},{"content":"Requirements","pos":[1744,1756]},{"pos":[1760,1782],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atldbcli.h","source":"**Header:** atldbcli.h"},{"content":"See Also","pos":[1791,1799]},{"content":"CDynamicAccessor Class","pos":[1804,1826]},{"content":"CDynamicAccessor::SetLength","pos":[1877,1904]}],"content":"---\ntitle: \"CDynamicAccessor::GetLength | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"CDynamicAccessor.GetLength\"\n  - \"ATL.CDynamicAccessor.GetLength\"\n  - \"CDynamicAccessor::GetLength\"\n  - \"ATL::CDynamicAccessor::GetLength\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"GetLength method\"\nms.assetid: 3ae8983b-b267-4cf9-bfc0-3e191f79e646\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CDynamicAccessor::GetLength\nRetrieves the length of the specified column.  \n  \n## Syntax  \n  \n```  \n  \n      bool GetLength(   \n   DBORDINAL nColumn,   \n   DBLENGTH* pLength    \n) const throw( );  \nbool GetLength(   \n   const CHAR* pColumnName,   \n   DBLENGTH* pLength    \n) const throw( );  \nbool GetLength(   \n   const WCHAR* pColumnName,   \n   DBLENGTH* pLength    \n) const throw( );  \n```  \n  \n#### Parameters  \n `nColumn`  \n [in] The column number. Column numbers start with 1. A value of 0 refers to the bookmark column, if any.  \n  \n `pColumnName`  \n [in] A pointer to a character string containing the column name.  \n  \n `pLength`  \n [out] A pointer to the integer containing the length of the column in bytes.  \n  \n## Return Value  \n Returns **true** if the specified column is found. Otherwise, this function returns **false**.  \n  \n## Remarks  \n The first override takes the column number, and the second and third overrides take the column name in ANSI or Unicode format, respectively.  \n  \n## Requirements  \n **Header:** atldbcli.h  \n  \n## See Also  \n [CDynamicAccessor Class](../../data/oledb/cdynamicaccessor-class.md)   \n [CDynamicAccessor::SetLength](../../data/oledb/cdynamicaccessor-setlength.md)"}