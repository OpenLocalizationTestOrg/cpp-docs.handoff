{"nodes":[{"pos":[12,49],"content":"CComPolyObject Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CComPolyObject Class | Microsoft Docs","pos":[0,37]}]},{"content":"CComPolyObject Class","pos":[815,835]},{"pos":[836,913],"content":"This class implements <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> for an aggregated or nonaggregated object.","source":"This class implements **IUnknown** for an aggregated or nonaggregated object."},{"content":"Syntax","pos":[922,928]},{"content":"Parameters","pos":[1089,1099]},{"content":"Your class, derived from <bpt id=\"p1\">[</bpt>CComObjectRoot<ept id=\"p1\">](../../atl/reference/ccomobjectroot-class.md)</ept> or <bpt id=\"p2\">[</bpt>CComObjectRootEx<ept id=\"p2\">](../../atl/reference/ccomobjectrootex-class.md)</ept>, as well as from any other interfaces you want to support on the object.","pos":[1118,1346],"source":" Your class, derived from [CComObjectRoot](../../atl/reference/ccomobjectroot-class.md) or [CComObjectRootEx](../../atl/reference/ccomobjectrootex-class.md), as well as from any other interfaces you want to support on the object."},{"content":"Members","pos":[1355,1362]},{"content":"Public Constructors","pos":[1372,1391]},{"content":"Name","pos":[1398,1402]},{"content":"Description","pos":[1403,1414]},{"content":"CComPolyObject::CComPolyObject","pos":[1453,1483]},{"content":"The constructor.","pos":[1518,1534]},{"content":"CComPolyObject::~CComPolyObject","pos":[1540,1571]},{"content":"The destructor.","pos":[1611,1626]},{"content":"Public Methods","pos":[1637,1651]},{"content":"Name","pos":[1658,1662]},{"content":"Description","pos":[1663,1674]},{"content":"CComPolyObject::AddRef","pos":[1713,1735]},{"content":"Increments the object's reference count.","pos":[1762,1802]},{"content":"CComPolyObject::CreateInstance","pos":[1808,1838]},{"pos":[1873,2057],"content":"(Static) Allows you to create a new <bpt id=\"p1\">**</bpt>CComPolyObject&lt;<ept id=\"p1\">**</ept> <ph id=\"ph1\">`contained`</ph> <bpt id=\"p2\">**</bpt><ph id=\"ph2\">&gt;</ph><ept id=\"p2\">**</ept> object without the overhead of <bpt id=\"p3\">[</bpt>CoCreateInstance<ept id=\"p3\">](http://msdn.microsoft.com/library/windows/desktop/ms686615)</ept>.","source":"(Static) Allows you to create a new **CComPolyObject<** `contained` **>** object without the overhead of [CoCreateInstance](http://msdn.microsoft.com/library/windows/desktop/ms686615)."},{"content":"CComPolyObject::FinalConstruct","pos":[2063,2093]},{"pos":[2128,2175],"content":"Performs final initialization of <ph id=\"ph1\">`m_contained`</ph>.","source":"Performs final initialization of `m_contained`."},{"content":"CComPolyObject::FinalRelease","pos":[2181,2209]},{"pos":[2242,2286],"content":"Performs final destruction of <ph id=\"ph1\">`m_contained`</ph>.","source":"Performs final destruction of `m_contained`."},{"content":"CComPolyObject::QueryInterface","pos":[2292,2322]},{"content":"Retrieves a pointer to the requested interface.","pos":[2357,2404]},{"content":"CComPolyObject::Release","pos":[2410,2433]},{"content":"Decrements the object's reference count.","pos":[2461,2501]},{"content":"Public Data Members","pos":[2512,2531]},{"content":"Name","pos":[2538,2542]},{"content":"Description","pos":[2543,2554]},{"content":"CComPolyObject::m_contained","pos":[2593,2620]},{"pos":[2652,2799],"content":"Delegates <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> calls to the outer unknown if the object is aggregated or to the <bpt id=\"p2\">**</bpt>IUnknown<ept id=\"p2\">**</ept> of the object if the object is not aggregated.","source":"Delegates **IUnknown** calls to the outer unknown if the object is aggregated or to the **IUnknown** of the object if the object is not aggregated."},{"content":"Remarks","pos":[2809,2816]},{"pos":[2837,2961],"content":"implements <bpt id=\"p1\">[</bpt>IUnknown<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms680509)</ept> for an aggregated or nonaggregated object.","source":" implements [IUnknown](http://msdn.microsoft.com/library/windows/desktop/ms680509) for an aggregated or nonaggregated object."},{"content":"When an instance of <ph id=\"ph1\">`CComPolyObject`</ph> is created, the value of the outer unknown is checked.","pos":[2968,3059],"source":"When an instance of `CComPolyObject` is created, the value of the outer unknown is checked."},{"content":"If it is <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>IUnknown<ept id=\"p2\">**</ept> is implemented for a nonaggregated object.","pos":[3060,3134],"source":" If it is **NULL**, **IUnknown** is implemented for a nonaggregated object."},{"content":"If the outer unknown is not <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>IUnknown<ept id=\"p2\">**</ept> is implemented for an aggregated object.","pos":[3135,3226],"source":" If the outer unknown is not **NULL**, **IUnknown** is implemented for an aggregated object."},{"content":"The advantage of using <ph id=\"ph1\">`CComPolyObject`</ph> is that you avoid having both <bpt id=\"p1\">[</bpt>CComAggObject<ept id=\"p1\">](../../atl/reference/ccomaggobject-class.md)</ept> and <bpt id=\"p2\">[</bpt>CComObject<ept id=\"p2\">](../../atl/reference/ccomobject-class.md)</ept> in your module to handle the aggregated and nonaggregated cases.","pos":[3233,3485],"source":"The advantage of using `CComPolyObject` is that you avoid having both [CComAggObject](../../atl/reference/ccomaggobject-class.md) and [CComObject](../../atl/reference/ccomobject-class.md) in your module to handle the aggregated and nonaggregated cases."},{"content":"A single <ph id=\"ph1\">`CComPolyObject`</ph> object handles both cases.","pos":[3486,3538],"source":" A single `CComPolyObject` object handles both cases."},{"content":"This means only one copy of the vtable and one copy of the functions exist in your module.","pos":[3539,3629]},{"content":"If your vtable is large, this can substantially decrease your module size.","pos":[3630,3704]},{"content":"However, if your vtable is small, using <ph id=\"ph1\">`CComPolyObject`</ph> can result in a slightly larger module size because it is not optimized for an aggregated or nonaggregated object, as are <ph id=\"ph2\">`CComAggObject`</ph> and <ph id=\"ph3\">`CComObject`</ph>.","pos":[3705,3917],"source":" However, if your vtable is small, using `CComPolyObject` can result in a slightly larger module size because it is not optimized for an aggregated or nonaggregated object, as are `CComAggObject` and `CComObject`."},{"content":"If the <ph id=\"ph1\">`DECLARE_POLY_AGGREGATABLE`</ph> macro is specified in your object's class definition, <ph id=\"ph2\">`CComPolyObject`</ph> will be used to create your object.","pos":[3924,4065],"source":"If the `DECLARE_POLY_AGGREGATABLE` macro is specified in your object's class definition, `CComPolyObject` will be used to create your object."},{"content":"will automatically be declared if you use the ATL Project Wizard to create a full control or Internet Explorer control.","pos":[4094,4213]},{"content":"If aggregated, the <ph id=\"ph1\">`CComPolyObject`</ph> object has its own <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept>, separate from the outer object's <bpt id=\"p2\">**</bpt>IUnknown<ept id=\"p2\">**</ept>, and maintains its own reference count.","pos":[4220,4374],"source":"If aggregated, the `CComPolyObject` object has its own **IUnknown**, separate from the outer object's **IUnknown**, and maintains its own reference count."},{"content":"uses <bpt id=\"p1\">[</bpt>CComContainedObject<ept id=\"p1\">](../../atl/reference/ccomcontainedobject-class.md)</ept> to delegate to the outer unknown.","pos":[4392,4502],"source":" uses [CComContainedObject](../../atl/reference/ccomcontainedobject-class.md) to delegate to the outer unknown."},{"pos":[4509,4645],"content":"For more information about aggregation, see the article <bpt id=\"p1\">[</bpt>Fundamentals of ATL COM Objects<ept id=\"p1\">](../../atl/fundamentals-of-atl-com-objects.md)</ept>.","source":"For more information about aggregation, see the article [Fundamentals of ATL COM Objects](../../atl/fundamentals-of-atl-com-objects.md)."},{"content":"Inheritance Hierarchy","pos":[4654,4675]},{"content":"CComObjectRootEx","pos":[4707,4723]},{"content":"Requirements","pos":[4820,4832]},{"pos":[4836,4856],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlcom.h","source":"**Header:** atlcom.h"},{"pos":[4905,4927],"content":"CComPolyObject::AddRef"},{"content":"Increments the reference count on the object.","pos":[4931,4976]},{"content":"Return Value","pos":[5028,5040]},{"content":"A value that may be useful for diagnostics or testing.","pos":[5044,5098]},{"pos":[5155,5185],"content":"CComPolyObject::CComPolyObject"},{"content":"The constructor.","pos":[5189,5205]},{"content":"Parameters","pos":[5254,5264]},{"content":"[in] A pointer to the outer unknown if the object is to be aggregated, or <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> if the object if the object is not aggregated.","pos":[5276,5405],"source":" [in] A pointer to the outer unknown if the object is to be aggregated, or **NULL** if the object if the object is not aggregated."},{"content":"Remarks","pos":[5415,5422]},{"pos":[5426,5559],"content":"Initializes the <ph id=\"ph1\">`CComContainedObject`</ph> data member, <bpt id=\"p1\">[</bpt>m_contained<ept id=\"p1\">](#ccompolyobject__m_contained)</ept>, and increments the module lock count.","source":"Initializes the `CComContainedObject` data member, [m_contained](#ccompolyobject__m_contained), and increments the module lock count."},{"content":"The destructor decrements the module lock count.","pos":[5566,5614]},{"pos":[5676,5707],"content":"CComPolyObject::~CComPolyObject"},{"content":"The destructor.","pos":[5711,5726]},{"content":"Remarks","pos":[5768,5775]},{"pos":[5779,5900],"content":"Frees all allocated resources, calls <bpt id=\"p1\">[</bpt>FinalRelease<ept id=\"p1\">](#ccompolyobject__finalrelease)</ept>, and decrements the module lock count.","source":"Frees all allocated resources, calls [FinalRelease](#ccompolyobject__finalrelease), and decrements the module lock count."},{"pos":[5957,5987],"content":"CComPolyObject::CreateInstance"},{"pos":[5991,6165],"content":"Allows you to create a new <bpt id=\"p1\">**</bpt>CComPolyObject&lt;<ept id=\"p1\">**</ept><ph id=\"ph1\">`contained`</ph> <bpt id=\"p2\">**</bpt><ph id=\"ph2\">&gt;</ph><ept id=\"p2\">**</ept> object without the overhead of <bpt id=\"p3\">[</bpt>CoCreateInstance<ept id=\"p3\">](http://msdn.microsoft.com/library/windows/desktop/ms686615)</ept>.","source":"Allows you to create a new **CComPolyObject<**`contained` **>** object without the overhead of [CoCreateInstance](http://msdn.microsoft.com/library/windows/desktop/ms686615)."},{"content":"Parameters","pos":[6283,6293]},{"content":"[out] A pointer to a <bpt id=\"p1\">**</bpt>CComPolyObject&lt;<ept id=\"p1\">**</ept> <ph id=\"ph1\">`contained`</ph><bpt id=\"p2\">**</bpt><ph id=\"ph2\">&gt;</ph><ept id=\"p2\">**</ept> pointer.","pos":[6305,6371],"source":" [out] A pointer to a **CComPolyObject<** `contained`**>** pointer."},{"content":"If <ph id=\"ph1\">`CreateInstance`</ph> is unsuccessful, <ph id=\"ph2\">`pp`</ph> is set to <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[6372,6433],"source":" If `CreateInstance` is unsuccessful, `pp` is set to **NULL**."},{"content":"Return Value","pos":[6443,6455]},{"pos":[6459,6486],"content":"A standard <ph id=\"ph1\">`HRESULT`</ph> value.","source":"A standard `HRESULT` value."},{"content":"Remarks","pos":[6496,6503]},{"pos":[6507,6670],"content":"The object returned has a reference count of zero, so call <ph id=\"ph1\">`AddRef`</ph> immediately, then use <bpt id=\"p1\">**</bpt>Release<ept id=\"p1\">**</ept> to free the reference on the object pointer when you're done.","source":"The object returned has a reference count of zero, so call `AddRef` immediately, then use **Release** to free the reference on the object pointer when you're done."},{"pos":[6677,6918],"content":"If you don't need direct access to the object, but still want to create a new object without the overhead of <ph id=\"ph1\">`CoCreateInstance`</ph>, use <bpt id=\"p1\">[</bpt>CComCoClass::CreateInstance<ept id=\"p1\">](../../atl/reference/ccomcoclass-class.md#ccomcoclass__createinstance)</ept> instead.","source":"If you don't need direct access to the object, but still want to create a new object without the overhead of `CoCreateInstance`, use [CComCoClass::CreateInstance](../../atl/reference/ccomcoclass-class.md#ccomcoclass__createinstance) instead."},{"pos":[6975,7005],"content":"CComPolyObject::FinalConstruct"},{"pos":[7009,7173],"content":"Called during the final stages of object construction, this method performs any final initialization on the <bpt id=\"p1\">[</bpt>m_contained<ept id=\"p1\">](#ccompolyobject__m_contained)</ept> data member.","source":"Called during the final stages of object construction, this method performs any final initialization on the [m_contained](#ccompolyobject__m_contained) data member."},{"content":"Return Value","pos":[7222,7234]},{"pos":[7238,7265],"content":"A standard <ph id=\"ph1\">`HRESULT`</ph> value.","source":"A standard `HRESULT` value."},{"pos":[7320,7348],"content":"CComPolyObject::FinalRelease"},{"pos":[7352,7464],"content":"Called during object destruction, this method frees the <bpt id=\"p1\">[</bpt>m_contained<ept id=\"p1\">](#ccompolyobject__m_contained)</ept> data member.","source":"Called during object destruction, this method frees the [m_contained](#ccompolyobject__m_contained) data member."},{"pos":[7552,7579],"content":"CComPolyObject::m_contained"},{"pos":[7583,7688],"content":"A <bpt id=\"p1\">[</bpt>CComContainedObject<ept id=\"p1\">](../../atl/reference/ccomcontainedobject-class.md)</ept> object derived from your class.","source":"A [CComContainedObject](../../atl/reference/ccomcontainedobject-class.md) object derived from your class."},{"content":"Parameters","pos":[7755,7765]},{"content":"[in] Your class, derived from <bpt id=\"p1\">[</bpt>CComObjectRoot<ept id=\"p1\">](../../atl/reference/ccomobjectroot-class.md)</ept> or <bpt id=\"p2\">[</bpt>CComObjectRootEx<ept id=\"p2\">](../../atl/reference/ccomobjectrootex-class.md)</ept>, as well as from any other interfaces you want to support on the object.","pos":[7784,8017],"source":" [in] Your class, derived from [CComObjectRoot](../../atl/reference/ccomobjectroot-class.md) or [CComObjectRootEx](../../atl/reference/ccomobjectrootex-class.md), as well as from any other interfaces you want to support on the object."},{"content":"Remarks","pos":[8027,8034]},{"pos":[8038,8213],"content":"<bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> calls through <ph id=\"ph1\">`m_contained`</ph> are delegated to the outer unknown if the object is aggregated, or to the <bpt id=\"p2\">**</bpt>IUnknown<ept id=\"p2\">**</ept> of this object if the object is not aggregated.","source":"**IUnknown** calls through `m_contained` are delegated to the outer unknown if the object is aggregated, or to the **IUnknown** of this object if the object is not aggregated."},{"pos":[8270,8300],"content":"CComPolyObject::QueryInterface"},{"content":"Retrieves a pointer to the requested interface.","pos":[8304,8351]},{"content":"Parameters","pos":[8493,8503]},{"content":"The COM interface.","pos":[8514,8532]},{"content":"[in] The identifier of the interface being requested.","pos":[8548,8601]},{"content":"[out] A pointer to the interface pointer identified by <ph id=\"ph1\">`iid`</ph>.","pos":[8623,8684],"source":" [out] A pointer to the interface pointer identified by `iid`."},{"content":"If the object does not support this interface, <ph id=\"ph1\">`ppvObject`</ph> is set to <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[8685,8763],"source":" If the object does not support this interface, `ppvObject` is set to **NULL**."},{"content":"[out] A pointer to the interface identified by <bpt id=\"p1\">**</bpt>__uuidof(Q)<ept id=\"p1\">**</ept>.","pos":[8778,8841],"source":" [out] A pointer to the interface identified by **__uuidof(Q)**."},{"content":"Return Value","pos":[8851,8863]},{"pos":[8867,8894],"content":"A standard <ph id=\"ph1\">`HRESULT`</ph> value.","source":"A standard `HRESULT` value."},{"content":"Remarks","pos":[8904,8911]},{"content":"For an aggregated object, if the requested interface is <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept>, <ph id=\"ph1\">`QueryInterface`</ph> returns a pointer to the aggregated object's own <bpt id=\"p2\">**</bpt>IUnknown<ept id=\"p2\">**</ept> and increments the reference count.","pos":[8915,9099],"source":"For an aggregated object, if the requested interface is **IUnknown**, `QueryInterface` returns a pointer to the aggregated object's own **IUnknown** and increments the reference count."},{"content":"Otherwise, this method queries for the interface through the <ph id=\"ph1\">`CComContainedObject`</ph> data member, <bpt id=\"p1\">[</bpt>m_contained<ept id=\"p1\">](#ccompolyobject__m_contained)</ept>.","pos":[9100,9240],"source":" Otherwise, this method queries for the interface through the `CComContainedObject` data member, [m_contained](#ccompolyobject__m_contained)."},{"pos":[9290,9313],"content":"CComPolyObject::Release"},{"content":"Decrements the reference count on the object.","pos":[9317,9362]},{"content":"Return Value","pos":[9415,9427]},{"content":"In debug builds, <bpt id=\"p1\">**</bpt>Release<ept id=\"p1\">**</ept> returns a value that may be useful for diagnostics or testing.","pos":[9431,9522],"source":"In debug builds, **Release** returns a value that may be useful for diagnostics or testing."},{"content":"In nondebug builds, <bpt id=\"p1\">**</bpt>Release<ept id=\"p1\">**</ept> always returns 0.","pos":[9523,9572],"source":" In nondebug builds, **Release** always returns 0."},{"content":"See Also","pos":[9581,9589]},{"content":"CComObjectRootEx Class","pos":[9594,9616]},{"content":"DECLARE_POLY_AGGREGATABLE","pos":[9670,9695]},{"content":"Class Overview","pos":[9774,9788]}],"content":"---\ntitle: \"CComPolyObject Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CComPolyObject\"\n  - \"ATL.CComPolyObject<contained>\"\n  - \"ATL::CComPolyObject\"\n  - \"ATL::CComPolyObject<contained>\"\n  - \"ATL.CComPolyObject\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"aggregate objects [C++], in ATL\"\n  - \"aggregation [C++], ATL objects\"\n  - \"CComPolyObject class\"\nms.assetid: eaf67c18-e855-48ca-9b15-f1df3106121b\ncaps.latest.revision: 19\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CComPolyObject Class\nThis class implements **IUnknown** for an aggregated or nonaggregated object.  \n  \n## Syntax  \n  \n```\ntemplate<class contained>  class CComPolyObject : public IUnknown, public CComObjectRootEx\n <contained\n ::_ThreadModel::ThreadModelNoCS>\n```  \n  \n#### Parameters  \n `contained`  \n Your class, derived from [CComObjectRoot](../../atl/reference/ccomobjectroot-class.md) or [CComObjectRootEx](../../atl/reference/ccomobjectrootex-class.md), as well as from any other interfaces you want to support on the object.  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CComPolyObject::CComPolyObject](#ccompolyobject__ccompolyobject)|The constructor.|  \n|[CComPolyObject::~CComPolyObject](#ccompolyobject___dtorccompolyobject)|The destructor.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CComPolyObject::AddRef](#ccompolyobject__addref)|Increments the object's reference count.|  \n|[CComPolyObject::CreateInstance](#ccompolyobject__createinstance)|(Static) Allows you to create a new **CComPolyObject<** `contained` **>** object without the overhead of [CoCreateInstance](http://msdn.microsoft.com/library/windows/desktop/ms686615).|  \n|[CComPolyObject::FinalConstruct](#ccompolyobject__finalconstruct)|Performs final initialization of `m_contained`.|  \n|[CComPolyObject::FinalRelease](#ccompolyobject__finalrelease)|Performs final destruction of `m_contained`.|  \n|[CComPolyObject::QueryInterface](#ccompolyobject__queryinterface)|Retrieves a pointer to the requested interface.|  \n|[CComPolyObject::Release](#ccompolyobject__release)|Decrements the object's reference count.|  \n  \n### Public Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CComPolyObject::m_contained](#ccompolyobject__m_contained)|Delegates **IUnknown** calls to the outer unknown if the object is aggregated or to the **IUnknown** of the object if the object is not aggregated.|  \n  \n## Remarks  \n `CComPolyObject` implements [IUnknown](http://msdn.microsoft.com/library/windows/desktop/ms680509) for an aggregated or nonaggregated object.  \n  \n When an instance of `CComPolyObject` is created, the value of the outer unknown is checked. If it is **NULL**, **IUnknown** is implemented for a nonaggregated object. If the outer unknown is not **NULL**, **IUnknown** is implemented for an aggregated object.  \n  \n The advantage of using `CComPolyObject` is that you avoid having both [CComAggObject](../../atl/reference/ccomaggobject-class.md) and [CComObject](../../atl/reference/ccomobject-class.md) in your module to handle the aggregated and nonaggregated cases. A single `CComPolyObject` object handles both cases. This means only one copy of the vtable and one copy of the functions exist in your module. If your vtable is large, this can substantially decrease your module size. However, if your vtable is small, using `CComPolyObject` can result in a slightly larger module size because it is not optimized for an aggregated or nonaggregated object, as are `CComAggObject` and `CComObject`.  \n  \n If the `DECLARE_POLY_AGGREGATABLE` macro is specified in your object's class definition, `CComPolyObject` will be used to create your object. `DECLARE_POLY_AGGREGATABLE` will automatically be declared if you use the ATL Project Wizard to create a full control or Internet Explorer control.  \n  \n If aggregated, the `CComPolyObject` object has its own **IUnknown**, separate from the outer object's **IUnknown**, and maintains its own reference count. `CComPolyObject` uses [CComContainedObject](../../atl/reference/ccomcontainedobject-class.md) to delegate to the outer unknown.  \n  \n For more information about aggregation, see the article [Fundamentals of ATL COM Objects](../../atl/fundamentals-of-atl-com-objects.md).  \n  \n## Inheritance Hierarchy  \n `CComObjectRootBase`  \n  \n [CComObjectRootEx](../../atl/reference/ccomobjectrootex-class.md)  \n  \n `IUnknown`  \n  \n `CComPolyObject`  \n  \n## Requirements  \n **Header:** atlcom.h  \n  \n##  <a name=\"ccompolyobject__addref\"></a>  CComPolyObject::AddRef  \n Increments the reference count on the object.  \n  \n```\nSTDMETHOD_(ULONG, AddRef)();\n```  \n  \n### Return Value  \n A value that may be useful for diagnostics or testing.  \n  \n##  <a name=\"ccompolyobject__ccompolyobject\"></a>  CComPolyObject::CComPolyObject  \n The constructor.  \n  \n```\nCComPolyObject(void* pv);\n```  \n  \n### Parameters  \n `pv`  \n [in] A pointer to the outer unknown if the object is to be aggregated, or **NULL** if the object if the object is not aggregated.  \n  \n### Remarks  \n Initializes the `CComContainedObject` data member, [m_contained](#ccompolyobject__m_contained), and increments the module lock count.  \n  \n The destructor decrements the module lock count.  \n  \n##  <a name=\"ccompolyobject___dtorccompolyobject\"></a>  CComPolyObject::~CComPolyObject  \n The destructor.  \n  \n```\n~CComPolyObject();\n```  \n  \n### Remarks  \n Frees all allocated resources, calls [FinalRelease](#ccompolyobject__finalrelease), and decrements the module lock count.  \n  \n##  <a name=\"ccompolyobject__createinstance\"></a>  CComPolyObject::CreateInstance  \n Allows you to create a new **CComPolyObject<**`contained` **>** object without the overhead of [CoCreateInstance](http://msdn.microsoft.com/library/windows/desktop/ms686615).  \n  \n```\nstatic HRESULT WINAPI CreateInstance(LPUNKNOWN pUnkOuter,\n    CComPolyObject<contained>** pp);\n```  \n  \n### Parameters  \n `pp`  \n [out] A pointer to a **CComPolyObject<** `contained`**>** pointer. If `CreateInstance` is unsuccessful, `pp` is set to **NULL**.  \n  \n### Return Value  \n A standard `HRESULT` value.  \n  \n### Remarks  \n The object returned has a reference count of zero, so call `AddRef` immediately, then use **Release** to free the reference on the object pointer when you're done.  \n  \n If you don't need direct access to the object, but still want to create a new object without the overhead of `CoCreateInstance`, use [CComCoClass::CreateInstance](../../atl/reference/ccomcoclass-class.md#ccomcoclass__createinstance) instead.  \n  \n##  <a name=\"ccompolyobject__finalconstruct\"></a>  CComPolyObject::FinalConstruct  \n Called during the final stages of object construction, this method performs any final initialization on the [m_contained](#ccompolyobject__m_contained) data member.  \n  \n```\nHRESULT FinalConstruct();\n```  \n  \n### Return Value  \n A standard `HRESULT` value.  \n  \n##  <a name=\"ccompolyobject__finalrelease\"></a>  CComPolyObject::FinalRelease  \n Called during object destruction, this method frees the [m_contained](#ccompolyobject__m_contained) data member.  \n  \n```\nvoid FinalRelease();\n```  \n  \n##  <a name=\"ccompolyobject__m_contained\"></a>  CComPolyObject::m_contained  \n A [CComContainedObject](../../atl/reference/ccomcontainedobject-class.md) object derived from your class.  \n  \n```\nCComContainedObject<contained> m_contained;\n```  \n  \n### Parameters  \n `contained`  \n [in] Your class, derived from [CComObjectRoot](../../atl/reference/ccomobjectroot-class.md) or [CComObjectRootEx](../../atl/reference/ccomobjectrootex-class.md), as well as from any other interfaces you want to support on the object.  \n  \n### Remarks  \n **IUnknown** calls through `m_contained` are delegated to the outer unknown if the object is aggregated, or to the **IUnknown** of this object if the object is not aggregated.  \n  \n##  <a name=\"ccompolyobject__queryinterface\"></a>  CComPolyObject::QueryInterface  \n Retrieves a pointer to the requested interface.  \n  \n```\nSTDMETHOD(QueryInterface)(REFIID iid,\n    void** ppvObject);\n\n    template <class Q>  HRESULT QueryInterface(Q\n** pp);\n```  \n  \n### Parameters  \n `Q`  \n The COM interface.  \n  \n `iid`  \n [in] The identifier of the interface being requested.  \n  \n `ppvObject`  \n [out] A pointer to the interface pointer identified by `iid`. If the object does not support this interface, `ppvObject` is set to **NULL**.  \n  \n `pp`  \n [out] A pointer to the interface identified by **__uuidof(Q)**.  \n  \n### Return Value  \n A standard `HRESULT` value.  \n  \n### Remarks  \n For an aggregated object, if the requested interface is **IUnknown**, `QueryInterface` returns a pointer to the aggregated object's own **IUnknown** and increments the reference count. Otherwise, this method queries for the interface through the `CComContainedObject` data member, [m_contained](#ccompolyobject__m_contained).  \n  \n##  <a name=\"ccompolyobject__release\"></a>  CComPolyObject::Release  \n Decrements the reference count on the object.  \n  \n```\nSTDMETHOD_(ULONG, Release)();\n```  \n  \n### Return Value  \n In debug builds, **Release** returns a value that may be useful for diagnostics or testing. In nondebug builds, **Release** always returns 0.  \n  \n## See Also  \n [CComObjectRootEx Class](../../atl/reference/ccomobjectrootex-class.md)   \n [DECLARE_POLY_AGGREGATABLE](http://msdn.microsoft.com/library/7569e738-cfbc-4404-ba1d-78dcefa3bdb3)   \n [Class Overview](../../atl/atl-class-overview.md)\n"}