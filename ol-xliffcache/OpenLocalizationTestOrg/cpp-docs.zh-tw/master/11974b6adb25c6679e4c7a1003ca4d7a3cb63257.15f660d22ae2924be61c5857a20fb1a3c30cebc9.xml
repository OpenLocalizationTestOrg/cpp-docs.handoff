{"nodes":[{"pos":[12,42],"content":"_mm_stream_ss | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_mm_stream_ss | Microsoft Docs","pos":[0,30]}]},{"content":"_mm_stream_ss","pos":[661,674]},{"content":"Microsoft Specific","pos":[677,695]},{"content":"Writes 32-bit data to a memory location without polluting the caches.","pos":[704,773]},{"content":"Syntax","pos":[782,788]},{"content":"Parameters","pos":[879,889]},{"content":"[out]","pos":[893,898]},{"content":"A pointer to the location where the source data is written.","pos":[909,968]},{"content":"[in]","pos":[975,979]},{"content":"A 128-bit number that contains the <ph id=\"ph1\">`float`</ph> value to be written in its bottom 32 bits..","pos":[992,1078],"source":" A 128-bit number that contains the `float` value to be written in its bottom 32 bits.."},{"content":"Return Value","pos":[1087,1099]},{"content":"None.","pos":[1103,1108]},{"content":"Requirements","pos":[1117,1129]},{"content":"Intrinsic","pos":[1136,1145]},{"content":"Architecture","pos":[1146,1158]},{"content":"SSE4a","pos":[1218,1223]},{"pos":[1231,1258],"content":"<bpt id=\"p1\">**</bpt>Header file<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>intrin.h&gt;","source":"**Header file** \\<intrin.h>"},{"content":"Remarks","pos":[1267,1274]},{"content":"This intrinsic generates the <ph id=\"ph1\">`movntss`</ph> instruction.","pos":[1278,1329],"source":"This intrinsic generates the `movntss` instruction."},{"content":"To determine hardware support for this instruction, call the <ph id=\"ph1\">`__cpuid`</ph> intrinsic with <ph id=\"ph2\">`InfoType=0x80000001`</ph>and check bit 6 of <ph id=\"ph3\">`CPUInfo[2] (ECX)`</ph>.","pos":[1330,1475],"source":" To determine hardware support for this instruction, call the `__cpuid` intrinsic with `InfoType=0x80000001`and check bit 6 of `CPUInfo[2] (ECX)`."},{"content":"This bit is 1 when the instruction is supported, and 0 otherwise.","pos":[1476,1541]},{"pos":[1548,1695],"content":"If you run code that uses the <ph id=\"ph1\">`_mm_stream_ss`</ph> intrinsic on hardware that does not support the <ph id=\"ph2\">`movntss`</ph> instruction, the results are unpredictable.","source":"If you run code that uses the `_mm_stream_ss` intrinsic on hardware that does not support the `movntss` instruction, the results are unpredictable."},{"content":"Example","pos":[1704,1711]},{"content":"END Microsoft Specific","pos":[2322,2344]},{"content":"Copyright 2007 by Advanced Micro Devices, Inc. All rights reserved.","pos":[2348,2415]},{"content":"Reproduced with permission from Advanced Micro Devices, Inc.","pos":[2416,2476]},{"content":"See Also","pos":[2485,2493]},{"content":"_mm_stream_sd","pos":[2498,2511]},{"content":"_mm_stream_ps","pos":[2549,2562]},{"content":"_mm_store_ss","pos":[2639,2651]},{"content":"_mm_sfence","pos":[2728,2738]},{"content":"Streaming SIMD Extensions that Support the Cache","pos":[2815,2863]},{"content":"Compiler Intrinsics","pos":[2940,2959]}],"content":"---\ntitle: \"_mm_stream_ss | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"_mm_stream_ss\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"movntss instruction\"\n  - \"_mm_stream_ss intrinsic\"\nms.assetid: c53dffe9-0dfe-4063-85d3-e8987b870fce\ncaps.latest.revision: 13\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# _mm_stream_ss\n**Microsoft Specific**  \n  \n Writes 32-bit data to a memory location without polluting the caches.  \n  \n## Syntax  \n  \n```  \nvoid _mm_stream_ss(  \n   float * Dest,  \n   __m128 Source  \n);  \n```  \n  \n#### Parameters  \n [out] `Dest`  \n A pointer to the location where the source data is written.  \n  \n [in] `Source`  \n A 128-bit number that contains the `float` value to be written in its bottom 32 bits..  \n  \n## Return Value  \n None.  \n  \n## Requirements  \n  \n|Intrinsic|Architecture|  \n|---------------|------------------|  \n|`_mm_stream_ss`|SSE4a|  \n  \n **Header file** \\<intrin.h>  \n  \n## Remarks  \n This intrinsic generates the `movntss` instruction. To determine hardware support for this instruction, call the `__cpuid` intrinsic with `InfoType=0x80000001`and check bit 6 of `CPUInfo[2] (ECX)`. This bit is 1 when the instruction is supported, and 0 otherwise.  \n  \n If you run code that uses the `_mm_stream_ss` intrinsic on hardware that does not support the `movntss` instruction, the results are unpredictable.  \n  \n## Example  \n  \n```  \n// Compile this sample with: /EHsc  \n#include <iostream>  \n#include <intrin.h>  \nusing namespace std;  \n  \nint main()  \n{  \n    __m128 vals;  \n    float f[4];  \n  \n    f[0] = -1.;  \n    f[1] = -2.;  \n    f[2] = -3.;  \n    f[3] = -4.;  \n    vals.m128_f32[0] = 0.;  \n    vals.m128_f32[1] = 1.;  \n    vals.m128_f32[2] = 2.;  \n    vals.m128_f32[3] = 3.;  \n    _mm_stream_ss(&f[3], vals);  \n    cout << \"f[0] = \" << f[0] << \", f[1] = \" << f[1] << endl;  \n    cout << \"f[1] = \" << f[1] << \", f[3] = \" << f[3] << endl;  \n}  \n  \n```  \n  \n```Output  \nf[0] = -1, f[1] = -2  \nf[2] = -3, f[3] = 3  \n```  \n  \n## END Microsoft Specific  \n Copyright 2007 by Advanced Micro Devices, Inc. All rights reserved. Reproduced with permission from Advanced Micro Devices, Inc.  \n  \n## See Also  \n [_mm_stream_sd](../intrinsics/mm-stream-sd.md)   \n [_mm_stream_ps](http://msdn.microsoft.com/en-us/f7af2f19-c0d4-43c6-b5f6-a658d2b1d869)   \n [_mm_store_ss](http://msdn.microsoft.com/en-us/dfeeea35-8faf-4f54-8a9e-6723e226fb08)   \n [_mm_sfence](http://msdn.microsoft.com/en-us/b6c0d18e-3628-4318-826b-45f66782e870)   \n [Streaming SIMD Extensions that Support the Cache](http://msdn.microsoft.com/en-us/8f03493a-d5f5-4457-892e-0b6540494872)   \n [Compiler Intrinsics](../intrinsics/compiler-intrinsics.md)"}