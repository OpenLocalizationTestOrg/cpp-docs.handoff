{"nodes":[{"pos":[12,50],"content":"remove_volatile Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"remove_volatile Class | Microsoft Docs","pos":[0,38]}]},{"content":"remove_volatile Class","pos":[799,820]},{"content":"Makes non volatile type from type.","pos":[821,855]},{"content":"Syntax","pos":[864,870]},{"content":"Parameters","pos":[1029,1039]},{"content":"The type to modify.","pos":[1050,1069]},{"content":"Remarks","pos":[1078,1085]},{"pos":[1089,1213],"content":"An instance of <ph id=\"ph1\">`remove_volatile&lt;T&gt;`</ph> holds a modified-type that is <ph id=\"ph2\">`T1`</ph> when <ph id=\"ph3\">`T`</ph> is of the form <ph id=\"ph4\">`volatile T1`</ph>, otherwise <ph id=\"ph5\">`T`</ph>.","source":"An instance of `remove_volatile<T>` holds a modified-type that is `T1` when `T` is of the form `volatile T1`, otherwise `T`."},{"content":"Example","pos":[1222,1229]},{"content":"Requirements","pos":[1637,1649]},{"pos":[1653,1678],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> &lt;type_traits&gt;","source":"**Header:** <type_traits>"},{"pos":[1685,1703],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"content":"See Also","pos":[1712,1720]},{"content":"&lt;type_traits&gt;","pos":[1725,1738],"source":"<type_traits>"},{"content":"add_volatile Class","pos":[1781,1799]}],"content":"---\ntitle: \"remove_volatile Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std::tr1::remove_volatile\"\n  - \"std.tr1.remove_volatile\"\n  - \"remove_volatile\"\n  - \"std.remove_volatile\"\n  - \"std::remove_volatile\"\n  - \"type_traits/std::remove_volatile\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"remove_volatile class [TR1]\"\n  - \"remove_volatile\"\nms.assetid: 8b87e2c2-a581-4eb3-8691-c5603910d61d\ncaps.latest.revision: 20\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# remove_volatile Class\nMakes non volatile type from type.  \n  \n## Syntax  \n  \n```  \ntemplate <class T>  \nstruct remove_volatile;  \n \ntemplate <class T>  \nusing remove_volatile_t = typename remove_volatile<T>::type;  \n```  \n  \n#### Parameters  \n `T`  \n The type to modify.  \n  \n## Remarks  \n An instance of `remove_volatile<T>` holds a modified-type that is `T1` when `T` is of the form `volatile T1`, otherwise `T`.  \n  \n## Example  \n  \n```cpp  \n#include <type_traits>   \n#include <iostream>   \n  \nint main()   \n    {   \n    int *p = (std::remove_volatile_t<volatile int> *)0;   \n  \n    p = p;  // to quiet \"unused\" warning   \n    std::cout << \" remove_volatile_t<volatile int> == \"   \n        << typeid(*p).name() << std::endl;   \n  \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \nremove_volatile_t<volatile int> == int  \n```  \n  \n## Requirements  \n **Header:** <type_traits>  \n  \n **Namespace:** std  \n  \n## See Also  \n [<type_traits>](../standard-library/type-traits.md)   \n [add_volatile Class](../standard-library/add-volatile-class.md)\n"}