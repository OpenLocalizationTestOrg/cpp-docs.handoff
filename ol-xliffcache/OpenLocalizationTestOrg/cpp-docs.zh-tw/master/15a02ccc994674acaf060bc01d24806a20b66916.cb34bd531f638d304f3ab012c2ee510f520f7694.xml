{"nodes":[{"pos":[12,62],"content":"multimap::generic_value (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"multimap::generic_value (STL-CLR) | Microsoft Docs","pos":[0,50]}]},{"content":"multimap::generic_value (STL/CLR)","pos":[655,688]},{"content":"The type of an element for use with the generic interface for the container.","pos":[689,765]},{"content":"Syntax","pos":[774,780]},{"content":"Remarks","pos":[836,843]},{"pos":[847,1002],"content":"The type describes an object of type <ph id=\"ph1\">`GValue`</ph> that describes the stored element value for use with the generic interface for this template container class.","source":"The type describes an object of type `GValue` that describes the stored element value for use with the generic interface for this template container class."},{"content":"Example","pos":[1011,1018]},{"content":"Requirements","pos":[2174,2186]},{"pos":[2190,2215],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/map&gt;","source":"**Header:** \\<cliext/map>"},{"pos":[2222,2243],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2252,2260]},{"content":"multimap (STL/CLR)","pos":[2265,2283]},{"content":"multimap::generic_container (STL/CLR)","pos":[2321,2358]},{"content":"multimap::generic_iterator (STL/CLR)","pos":[2414,2450]},{"content":"multimap::generic_reverse_iterator (STL/CLR)","pos":[2505,2549]}],"content":"---\ntitle: \"multimap::generic_value (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::multimap::generic_value\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"generic_value member [STL/CLR]\"\nms.assetid: e403233f-5132-45ca-be04-2c85e923f37d\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# multimap::generic_value (STL/CLR)\nThe type of an element for use with the generic interface for the container.  \n  \n## Syntax  \n  \n```  \ntypedef GValue generic_value;  \n```  \n  \n## Remarks  \n The type describes an object of type `GValue` that describes the stored element value for use with the generic interface for this template container class.  \n  \n## Example  \n  \n```  \n// cliext_multimap_generic_value.cpp   \n// compile with: /clr   \n#include <cliext/map>   \n  \ntypedef cliext::multimap<wchar_t, int> Mymultimap;   \nint main()   \n    {   \n    Mymultimap c1;   \n    c1.insert(Mymultimap::make_value(L'a', 1));   \n    c1.insert(Mymultimap::make_value(L'b', 2));   \n    c1.insert(Mymultimap::make_value(L'c', 3));   \n  \n// display contents \" [a 1] [b 2] [c 3]\"   \n    for each (Mymultimap::value_type elem in c1)   \n        System::Console::Write(\" [{0} {1}]\", elem->first, elem->second);   \n    System::Console::WriteLine();   \n  \n// construct a generic container   \n    Mymultimap::generic_container^ gc1 = %c1;   \n    for each (Mymultimap::value_type elem in gc1)   \n        System::Console::Write(\" [{0} {1}]\", elem->first, elem->second);   \n    System::Console::WriteLine();   \n  \n// get an element and display it   \n    Mymultimap::generic_iterator gcit = gc1->begin();   \n    Mymultimap::generic_value gcval = *gcit;   \n    System::Console::WriteLine(\" [{0} {1}]\", gcval->first, gcval->second);   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n[a 1] [b 2] [c 3]  \n[a 1] [b 2] [c 3]  \n[a 1]  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/map>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [multimap (STL/CLR)](../dotnet/multimap-stl-clr.md)   \n [multimap::generic_container (STL/CLR)](../dotnet/multimap-generic-container-stl-clr.md)   \n [multimap::generic_iterator (STL/CLR)](../dotnet/multimap-generic-iterator-stl-clr.md)   \n [multimap::generic_reverse_iterator (STL/CLR)](../dotnet/multimap-generic-reverse-iterator-stl-clr.md)"}