{"nodes":[{"pos":[12,52],"content":"CDataPathProperty Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CDataPathProperty Class | Microsoft Docs","pos":[0,40]}]},{"content":"CDataPathProperty Class","pos":[741,764]},{"content":"Implements an OLE control property that can be loaded asynchronously.","pos":[765,834]},{"content":"Syntax","pos":[843,849]},{"content":"Members","pos":[926,933]},{"content":"Public Constructors","pos":[943,962]},{"content":"Name","pos":[969,973]},{"content":"Description","pos":[974,985]},{"content":"CDataPathProperty::CDataPathProperty","pos":[1024,1060]},{"pos":[1101,1141],"content":"Constructs a <ph id=\"ph1\">`CDataPathProperty`</ph> object.","source":"Constructs a `CDataPathProperty` object."},{"content":"Public Methods","pos":[1152,1166]},{"content":"Name","pos":[1173,1177]},{"content":"Description","pos":[1178,1189]},{"content":"CDataPathProperty::GetControl","pos":[1228,1257]},{"pos":[1291,1377],"content":"Retrieves the asynchronous OLE control associated with the <ph id=\"ph1\">`CDataPathProperty`</ph> object.","source":"Retrieves the asynchronous OLE control associated with the `CDataPathProperty` object."},{"content":"CDataPathProperty::GetPath","pos":[1383,1409]},{"content":"Retrieves the pathname of the property.","pos":[1440,1479]},{"content":"CDataPathProperty::Open","pos":[1485,1508]},{"content":"Initiates loading of the asynchronous property for the associated ActiveX (OLE) control.","pos":[1536,1624]},{"content":"CDataPathProperty::ResetData","pos":[1630,1658]},{"pos":[1691,1799],"content":"Calls <ph id=\"ph1\">`CAsyncMonikerFile::OnDataAvailable`</ph> to notify the container that the control properties have changed.","source":"Calls `CAsyncMonikerFile::OnDataAvailable` to notify the container that the control properties have changed."},{"content":"CDataPathProperty::SetControl","pos":[1805,1834]},{"content":"Sets the asynchronous ActiveX (OLE) control associated with the property.","pos":[1868,1941]},{"content":"CDataPathProperty::SetPath","pos":[1947,1973]},{"content":"Sets the pathname of the property.","pos":[2004,2038]},{"content":"Remarks","pos":[2048,2055]},{"content":"Asynchronous properties are loaded after synchronous initiation.","pos":[2059,2123]},{"content":"The class <ph id=\"ph1\">`CDataPathProperty`</ph> is derived from <bpt id=\"p1\">**</bpt>CAysncMonikerFile<ept id=\"p1\">**</ept>.","pos":[2130,2198],"source":"The class `CDataPathProperty` is derived from **CAysncMonikerFile**."},{"content":"To implement asynchronous properties in your OLE controls, derive a class from <ph id=\"ph1\">`CDataPathProperty`</ph>, and override <bpt id=\"p1\">[</bpt>OnDataAvailable<ept id=\"p1\">](../../mfc/reference/casyncmonikerfile-class.md#casyncmonikerfile__ondataavailable)</ept>.","pos":[2199,2413],"source":" To implement asynchronous properties in your OLE controls, derive a class from `CDataPathProperty`, and override [OnDataAvailable](../../mfc/reference/casyncmonikerfile-class.md#casyncmonikerfile__ondataavailable)."},{"content":"For more information about how to use asynchronous monikers and ActiveX controls in Internet applications, see the following articles:","pos":[2420,2554]},{"content":"Internet First Steps: ActiveX Controls","pos":[2563,2601]},{"content":"Internet First Steps: Asynchronous Monikers","pos":[2658,2701]},{"content":"Inheritance Hierarchy","pos":[2763,2784]},{"content":"CObject","pos":[2789,2796]},{"content":"CFile","pos":[2843,2848]},{"content":"COleStreamFile","pos":[2893,2907]},{"content":"CMonikerFile","pos":[2961,2973]},{"content":"CAsyncMonikerFile","pos":[3025,3042]},{"content":"Requirements","pos":[3126,3138]},{"pos":[3142,3162],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxctl.h","source":"**Header:** afxctl.h"},{"pos":[3225,3261],"content":"CDataPathProperty::CDataPathProperty"},{"pos":[3265,3305],"content":"Constructs a <ph id=\"ph1\">`CDataPathProperty`</ph> object.","source":"Constructs a `CDataPathProperty` object."},{"content":"Parameters","pos":[3459,3469]},{"content":"A pointer to the OLE control object to be associated with this <ph id=\"ph1\">`CDataPathProperty`</ph> object.","pos":[3487,3577],"source":" A pointer to the OLE control object to be associated with this `CDataPathProperty` object."},{"content":"The path, which may be absolute or relative, used to create an asynchronous moniker that references the actual absolute location of the property.","pos":[3598,3743]},{"content":"uses URLs, not filenames.","pos":[3764,3789]},{"content":"If you want a <ph id=\"ph1\">`CDataPathProperty`</ph> object for a file, prepend <ph id=\"ph2\">`file://`</ph> to the path.","pos":[3790,3873],"source":" If you want a `CDataPathProperty` object for a file, prepend `file://` to the path."},{"content":"Remarks","pos":[3883,3890]},{"content":"The <ph id=\"ph1\">`COleControl`</ph> object pointed to by <ph id=\"ph2\">`pControl`</ph> is used by <bpt id=\"p1\">**</bpt>Open<ept id=\"p1\">**</ept> and retrieved by derived classes.","pos":[3894,3997],"source":"The `COleControl` object pointed to by `pControl` is used by **Open** and retrieved by derived classes."},{"content":"If <ph id=\"ph1\">`pControl`</ph> is <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>, the control used with <bpt id=\"p2\">**</bpt>Open<ept id=\"p2\">**</ept> should be set with <ph id=\"ph2\">`SetControl`</ph>.","pos":[3998,4088],"source":" If `pControl` is **NULL**, the control used with **Open** should be set with `SetControl`."},{"content":"If <ph id=\"ph1\">`lpszPath`</ph> is <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>, you can pass in the path through <bpt id=\"p2\">**</bpt>Open<ept id=\"p2\">**</ept> or set it with <ph id=\"ph2\">`SetPath`</ph>.","pos":[4089,4183],"source":" If `lpszPath` is **NULL**, you can pass in the path through **Open** or set it with `SetPath`."},{"pos":[4239,4268],"content":"CDataPathProperty::GetControl"},{"pos":[4272,4382],"content":"Call this member function to retrieve the <ph id=\"ph1\">`COleControl`</ph> object associated with the <ph id=\"ph2\">`CDataPathProperty`</ph> object.","source":"Call this member function to retrieve the `COleControl` object associated with the `CDataPathProperty` object."},{"content":"Return Value","pos":[4434,4446]},{"content":"Returns a pointer to the OLE control associated with the <ph id=\"ph1\">`CDataPathProperty`</ph> object.","pos":[4450,4534],"source":"Returns a pointer to the OLE control associated with the `CDataPathProperty` object."},{"content":"<bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> if not control is associated.","pos":[4535,4573],"source":"**NULL** if not control is associated."},{"pos":[4626,4652],"content":"CDataPathProperty::GetPath"},{"pos":[4656,4852],"content":"Call this member function to retrieve the path, set when the <ph id=\"ph1\">`CDataPathProperty`</ph> object was constructed, or specified in <bpt id=\"p1\">**</bpt>Open<ept id=\"p1\">**</ept>, or specified in a previous call to the <ph id=\"ph2\">`SetPath`</ph> member function.","source":"Call this member function to retrieve the path, set when the `CDataPathProperty` object was constructed, or specified in **Open**, or specified in a previous call to the `SetPath` member function."},{"content":"Return Value","pos":[4905,4917]},{"content":"Returns the pathname to the property itself.","pos":[4921,4965]},{"content":"Can be empty if no path has been specified.","pos":[4966,5009]},{"pos":[5059,5082],"content":"CDataPathProperty::Open"},{"content":"Call this member function to initiate loading of the asynchronous property for the associated control.","pos":[5086,5188]},{"content":"Parameters","pos":[5546,5556]},{"content":"A pointer to the OLE control object to be associated with this <ph id=\"ph1\">`CDataPathProperty`</ph> object.","pos":[5574,5664],"source":" A pointer to the OLE control object to be associated with this `CDataPathProperty` object."},{"content":"A pointer to a file exception.","pos":[5683,5713]},{"content":"In the event of an error, will be set to the cause.","pos":[5714,5765]},{"content":"The path, which may be absolute or relative, used to create an asynchronous moniker that references the actual absolute location of the property.","pos":[5786,5931]},{"content":"uses URLs, not filenames.","pos":[5952,5977]},{"content":"If you want a <ph id=\"ph1\">`CDataPathProperty`</ph> object for a file, prepend <ph id=\"ph2\">`file://`</ph> to the path.","pos":[5978,6061],"source":" If you want a `CDataPathProperty` object for a file, prepend `file://` to the path."},{"content":"Return Value","pos":[6071,6083]},{"content":"Nonzero if successful; otherwise 0.","pos":[6087,6122]},{"content":"Remarks","pos":[6132,6139]},{"pos":[6143,6218],"content":"The function attempts to obtain the <ph id=\"ph1\">`IBindHost`</ph> interface from the control.","source":"The function attempts to obtain the `IBindHost` interface from the control."},{"content":"Before calling <bpt id=\"p1\">**</bpt>Open<ept id=\"p1\">**</ept> without a path, the value for the property's path must be set.","pos":[6225,6311],"source":"Before calling **Open** without a path, the value for the property's path must be set."},{"content":"This can be done when the object is constructed, or by calling the <ph id=\"ph1\">`SetPath`</ph> member function.","pos":[6312,6405],"source":" This can be done when the object is constructed, or by calling the `SetPath` member function."},{"content":"Before calling <bpt id=\"p1\">**</bpt>Open<ept id=\"p1\">**</ept> without a control, an ActiveX control (formerly known as an OLE control) can be associated with the object.","pos":[6412,6543],"source":"Before calling **Open** without a control, an ActiveX control (formerly known as an OLE control) can be associated with the object."},{"content":"This can be done when the object is constructed, or by calling <ph id=\"ph1\">`SetControl`</ph>.","pos":[6544,6620],"source":" This can be done when the object is constructed, or by calling `SetControl`."},{"pos":[6627,6786],"content":"All overloads of <bpt id=\"p1\">[</bpt>CAsyncMonikerFile::Open<ept id=\"p1\">](../../mfc/reference/casyncmonikerfile-class.md#casyncmonikerfile__open)</ept> are also available from <ph id=\"ph1\">`CDataPathProperty`</ph>.","source":"All overloads of [CAsyncMonikerFile::Open](../../mfc/reference/casyncmonikerfile-class.md#casyncmonikerfile__open) are also available from `CDataPathProperty`."},{"pos":[6841,6869],"content":"CDataPathProperty::ResetData"},{"pos":[6873,7068],"content":"Call this function to get <ph id=\"ph1\">`CAsyncMonikerFile::OnDataAvailable`</ph> to notify the container that the control properties have changed, and all the information loaded asynchronously is no longer useful.","source":"Call this function to get `CAsyncMonikerFile::OnDataAvailable` to notify the container that the control properties have changed, and all the information loaded asynchronously is no longer useful."},{"content":"Remarks","pos":[7119,7126]},{"content":"Opening should be restarted.","pos":[7130,7158]},{"content":"Derived classes can override this function for different defaults.","pos":[7159,7225]},{"pos":[7281,7310],"content":"CDataPathProperty::SetControl"},{"pos":[7314,7417],"content":"Call this member function to associate an asynchronous OLE control with the <ph id=\"ph1\">`CDataPathProperty`</ph> object.","source":"Call this member function to associate an asynchronous OLE control with the `CDataPathProperty` object."},{"content":"Parameters","pos":[7482,7492]},{"content":"A pointer to the asynchronous OLE control to be associated with the property.","pos":[7510,7587]},{"pos":[7640,7666],"content":"CDataPathProperty::SetPath"},{"content":"Call this member function to set the pathname of the property.","pos":[7670,7732]},{"content":"Parameters","pos":[7789,7799]},{"content":"A path, which may be absolute or relative, to the property being loaded asynchronously.","pos":[7817,7904]},{"content":"uses URLs, not filenames.","pos":[7925,7950]},{"content":"If you want a <ph id=\"ph1\">`CDataPathProperty`</ph> object for a file, prepend <ph id=\"ph2\">`file://`</ph> to the path.","pos":[7951,8034],"source":" If you want a `CDataPathProperty` object for a file, prepend `file://` to the path."},{"content":"See Also","pos":[8043,8051]},{"content":"MFC Sample Image","pos":[8056,8072]},{"content":"CAsyncMonikerFile Class","pos":[8108,8131]},{"content":"Hierarchy Chart","pos":[8186,8201]},{"content":"CAsyncMonikerFile Class","pos":[8238,8261]}],"content":"---\ntitle: \"CDataPathProperty Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CDataPathProperty\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ActiveX controls [C++], asynchronous\"\n  - \"OLE controls [C++], asynchronous\"\n  - \"CDataPathProperty class\"\n  - \"asynchronous controls [C++]\"\nms.assetid: 1f96efdb-54e4-460b-862c-eba5d4103488\ncaps.latest.revision: 24\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CDataPathProperty Class\nImplements an OLE control property that can be loaded asynchronously.  \n  \n## Syntax  \n  \n```  \nclass CDataPathProperty : public CAsyncMonikerFile  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CDataPathProperty::CDataPathProperty](#cdatapathproperty__cdatapathproperty)|Constructs a `CDataPathProperty` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CDataPathProperty::GetControl](#cdatapathproperty__getcontrol)|Retrieves the asynchronous OLE control associated with the `CDataPathProperty` object.|  \n|[CDataPathProperty::GetPath](#cdatapathproperty__getpath)|Retrieves the pathname of the property.|  \n|[CDataPathProperty::Open](#cdatapathproperty__open)|Initiates loading of the asynchronous property for the associated ActiveX (OLE) control.|  \n|[CDataPathProperty::ResetData](#cdatapathproperty__resetdata)|Calls `CAsyncMonikerFile::OnDataAvailable` to notify the container that the control properties have changed.|  \n|[CDataPathProperty::SetControl](#cdatapathproperty__setcontrol)|Sets the asynchronous ActiveX (OLE) control associated with the property.|  \n|[CDataPathProperty::SetPath](#cdatapathproperty__setpath)|Sets the pathname of the property.|  \n  \n## Remarks  \n Asynchronous properties are loaded after synchronous initiation.  \n  \n The class `CDataPathProperty` is derived from **CAysncMonikerFile**. To implement asynchronous properties in your OLE controls, derive a class from `CDataPathProperty`, and override [OnDataAvailable](../../mfc/reference/casyncmonikerfile-class.md#casyncmonikerfile__ondataavailable).  \n  \n For more information about how to use asynchronous monikers and ActiveX controls in Internet applications, see the following articles:  \n  \n- [Internet First Steps: ActiveX Controls](../../mfc/activex-controls-on-the-internet.md)  \n  \n- [Internet First Steps: Asynchronous Monikers](../../mfc/asynchronous-monikers-on-the-internet.md)  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CFile](../../mfc/reference/cfile-class.md)  \n  \n [COleStreamFile](../../mfc/reference/colestreamfile-class.md)  \n  \n [CMonikerFile](../../mfc/reference/cmonikerfile-class.md)  \n  \n [CAsyncMonikerFile](../../mfc/reference/casyncmonikerfile-class.md)  \n  \n `CDataPathProperty`  \n  \n## Requirements  \n **Header:** afxctl.h  \n  \n##  <a name=\"cdatapathproperty__cdatapathproperty\"></a>  CDataPathProperty::CDataPathProperty  \n Constructs a `CDataPathProperty` object.  \n  \n```  \nCDataPathProperty(\n    COleControl* pControl = NULL);\n\n \nCDataPathProperty(\n    LPCTSTR lpszPath, COleControl* pControl = NULL);\n```  \n  \n### Parameters  \n `pControl`  \n A pointer to the OLE control object to be associated with this `CDataPathProperty` object.  \n  \n `lpszPath`  \n The path, which may be absolute or relative, used to create an asynchronous moniker that references the actual absolute location of the property. `CDataPathProperty` uses URLs, not filenames. If you want a `CDataPathProperty` object for a file, prepend `file://` to the path.  \n  \n### Remarks  \n The `COleControl` object pointed to by `pControl` is used by **Open** and retrieved by derived classes. If `pControl` is **NULL**, the control used with **Open** should be set with `SetControl`. If `lpszPath` is **NULL**, you can pass in the path through **Open** or set it with `SetPath`.  \n  \n##  <a name=\"cdatapathproperty__getcontrol\"></a>  CDataPathProperty::GetControl  \n Call this member function to retrieve the `COleControl` object associated with the `CDataPathProperty` object.  \n  \n```  \nCOleControl* GetControl();\n```  \n  \n### Return Value  \n Returns a pointer to the OLE control associated with the `CDataPathProperty` object. **NULL** if not control is associated.  \n  \n##  <a name=\"cdatapathproperty__getpath\"></a>  CDataPathProperty::GetPath  \n Call this member function to retrieve the path, set when the `CDataPathProperty` object was constructed, or specified in **Open**, or specified in a previous call to the `SetPath` member function.  \n  \n```  \nCString GetPath() const;\n\n \n```  \n  \n### Return Value  \n Returns the pathname to the property itself. Can be empty if no path has been specified.  \n  \n##  <a name=\"cdatapathproperty__open\"></a>  CDataPathProperty::Open  \n Call this member function to initiate loading of the asynchronous property for the associated control.  \n  \n```  \nvirtual BOOL Open(\n    COleControl* pControl,  \n    CFileException* pError = NULL);\n\n \nvirtual BOOL Open(\n    LPCTSTR lpszPath,  \n    COleControl* pControl,\n    CFileException* pError = NULL);\n\n \nvirtual BOOL Open(\n    LPCTSTR lpszPath,  \n    CFileException* pError = NULL);\n\n \nvirtual BOOL Open(\n    CFileException* pError = NULL);\n```  \n  \n### Parameters  \n `pControl`  \n A pointer to the OLE control object to be associated with this `CDataPathProperty` object.  \n  \n `pError`  \n A pointer to a file exception. In the event of an error, will be set to the cause.  \n  \n `lpszPath`  \n The path, which may be absolute or relative, used to create an asynchronous moniker that references the actual absolute location of the property. `CDataPathProperty` uses URLs, not filenames. If you want a `CDataPathProperty` object for a file, prepend `file://` to the path.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n The function attempts to obtain the `IBindHost` interface from the control.  \n  \n Before calling **Open** without a path, the value for the property's path must be set. This can be done when the object is constructed, or by calling the `SetPath` member function.  \n  \n Before calling **Open** without a control, an ActiveX control (formerly known as an OLE control) can be associated with the object. This can be done when the object is constructed, or by calling `SetControl`.  \n  \n All overloads of [CAsyncMonikerFile::Open](../../mfc/reference/casyncmonikerfile-class.md#casyncmonikerfile__open) are also available from `CDataPathProperty`.  \n  \n##  <a name=\"cdatapathproperty__resetdata\"></a>  CDataPathProperty::ResetData  \n Call this function to get `CAsyncMonikerFile::OnDataAvailable` to notify the container that the control properties have changed, and all the information loaded asynchronously is no longer useful.  \n  \n```  \nvirtual void ResetData();\n```  \n  \n### Remarks  \n Opening should be restarted. Derived classes can override this function for different defaults.  \n  \n##  <a name=\"cdatapathproperty__setcontrol\"></a>  CDataPathProperty::SetControl  \n Call this member function to associate an asynchronous OLE control with the `CDataPathProperty` object.  \n  \n```  \nvoid SetControl(COleControl* pControl);\n```  \n  \n### Parameters  \n `pControl`  \n A pointer to the asynchronous OLE control to be associated with the property.  \n  \n##  <a name=\"cdatapathproperty__setpath\"></a>  CDataPathProperty::SetPath  \n Call this member function to set the pathname of the property.  \n  \n```  \nvoid SetPath(LPCTSTR lpszPath);\n```  \n  \n### Parameters  \n `lpszPath`  \n A path, which may be absolute or relative, to the property being loaded asynchronously. `CDataPathProperty` uses URLs, not filenames. If you want a `CDataPathProperty` object for a file, prepend `file://` to the path.  \n  \n## See Also  \n [MFC Sample Image](../../visual-cpp-samples.md)   \n [CAsyncMonikerFile Class](../../mfc/reference/casyncmonikerfile-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [CAsyncMonikerFile Class](../../mfc/reference/casyncmonikerfile-class.md)\n"}