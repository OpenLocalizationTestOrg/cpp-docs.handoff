{"nodes":[{"pos":[12,53],"content":"CAnimationVariable Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CAnimationVariable Class | Microsoft Docs","pos":[0,41]}]},{"pos":[676,700],"content":"CAnimationVariable Class","linkify":"CAnimationVariable Class","nodes":[{"content":"CAnimationVariable Class","pos":[0,24]}]},{"content":"Represents an animation variable.","pos":[701,734]},{"pos":[743,749],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[801,808],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[818,837],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[844,848]},{"content":"Description","pos":[849,860]},{"pos":[898,979],"content":"<bpt id=\"p1\">[</bpt>CAnimationVariable::CAnimationVariable<ept id=\"p1\">](#canimationvariable__canimationvariable)</ept>","source":"[CAnimationVariable::CAnimationVariable](#canimationvariable__canimationvariable)"},{"content":"Constructs an animation variable object.","pos":[980,1020]},{"pos":[1025,1108],"content":"<bpt id=\"p1\">[</bpt>CAnimationVariable::~CAnimationVariable<ept id=\"p1\">](#canimationvariable__~canimationvariable)</ept>","source":"[CAnimationVariable::~CAnimationVariable](#canimationvariable__~canimationvariable)"},{"content":"The destructor.","pos":[1109,1124]},{"content":"Called when a CAnimationVariable object is being destroyed.","pos":[1125,1184]},{"pos":[1195,1209],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1216,1220]},{"content":"Description","pos":[1221,1232]},{"pos":[1270,1341],"content":"<bpt id=\"p1\">[</bpt>CAnimationVariable::AddTransition<ept id=\"p1\">](#canimationvariable__addtransition)</ept>","source":"[CAnimationVariable::AddTransition](#canimationvariable__addtransition)"},{"content":"Adds a transition.","pos":[1342,1360]},{"pos":[1365,1442],"content":"<bpt id=\"p1\">[</bpt>CAnimationVariable::ApplyTransitions<ept id=\"p1\">](#canimationvariable__applytransitions)</ept>","source":"[CAnimationVariable::ApplyTransitions](#canimationvariable__applytransitions)"},{"content":"Adds transitions from the internal list to storyboard.","pos":[1443,1497]},{"pos":[1502,1579],"content":"<bpt id=\"p1\">[</bpt>CAnimationVariable::ClearTransitions<ept id=\"p1\">](#canimationvariable__cleartransitions)</ept>","source":"[CAnimationVariable::ClearTransitions](#canimationvariable__cleartransitions)"},{"content":"Clears transitions.","pos":[1580,1599]},{"pos":[1604,1661],"content":"<bpt id=\"p1\">[</bpt>CAnimationVariable::Create<ept id=\"p1\">](#canimationvariable__create)</ept>","source":"[CAnimationVariable::Create](#canimationvariable__create)"},{"content":"Creates the underlying animation variable COM object.","pos":[1662,1715]},{"pos":[1720,1799],"content":"<bpt id=\"p1\">[</bpt>CAnimationVariable::CreateTransitions<ept id=\"p1\">](#canimationvariable__createtransitions)</ept>","source":"[CAnimationVariable::CreateTransitions](#canimationvariable__createtransitions)"},{"content":"Creates all transitions to be applied to this animation variable.","pos":[1800,1865]},{"pos":[1870,1975],"content":"<bpt id=\"p1\">[</bpt>CAnimationVariable::EnableIntegerValueChangedEvent<ept id=\"p1\">](#canimationvariable__enableintegervaluechangedevent)</ept>","source":"[CAnimationVariable::EnableIntegerValueChangedEvent](#canimationvariable__enableintegervaluechangedevent)"},{"content":"Enables or disables the IntegerValueChanged event.","pos":[1976,2026]},{"pos":[2031,2122],"content":"<bpt id=\"p1\">[</bpt>CAnimationVariable::EnableValueChangedEvent<ept id=\"p1\">](#canimationvariable__enablevaluechangedevent)</ept>","source":"[CAnimationVariable::EnableValueChangedEvent](#canimationvariable__enablevaluechangedevent)"},{"content":"Enables or disables the ValueChanged event.","pos":[2123,2166]},{"pos":[2171,2246],"content":"<bpt id=\"p1\">[</bpt>CAnimationVariable::GetDefaultValue<ept id=\"p1\">](#canimationvariable__getdefaultvalue)</ept>","source":"[CAnimationVariable::GetDefaultValue](#canimationvariable__getdefaultvalue)"},{"content":"Returns default value.","pos":[2247,2269]},{"pos":[2274,2367],"content":"<bpt id=\"p1\">[</bpt>CAnimationVariable::GetParentAnimationObject<ept id=\"p1\">](#canimationvariable__getparentanimationobject)</ept>","source":"[CAnimationVariable::GetParentAnimationObject](#canimationvariable__getparentanimationobject)"},{"content":"Returns the parent animation object.","pos":[2368,2404]},{"pos":[2409,2470],"content":"<bpt id=\"p1\">[</bpt>CAnimationVariable::GetValue<ept id=\"p1\">](#canimationvariable__getvalue)</ept>","source":"[CAnimationVariable::GetValue](#canimationvariable__getvalue)"},{"content":"Overloaded.","pos":[2471,2482]},{"content":"Returns the current value of animation variable.","pos":[2483,2531]},{"pos":[2536,2603],"content":"<bpt id=\"p1\">[</bpt>CAnimationVariable::GetVariable<ept id=\"p1\">](#canimationvariable__getvariable)</ept>","source":"[CAnimationVariable::GetVariable](#canimationvariable__getvariable)"},{"content":"Returns a pointer to IUIAnimationVariable COM object.","pos":[2604,2657]},{"pos":[2662,2737],"content":"<bpt id=\"p1\">[</bpt>CAnimationVariable::SetDefaultValue<ept id=\"p1\">](#canimationvariable__setdefaultvalue)</ept>","source":"[CAnimationVariable::SetDefaultValue](#canimationvariable__setdefaultvalue)"},{"content":"Sets default value and releases IUIAnimationVariable COM object.","pos":[2738,2802]},{"pos":[2813,2830],"content":"Protected Methods","linkify":"Protected Methods","nodes":[{"content":"Protected Methods","pos":[0,17]}]},{"content":"Name","pos":[2837,2841]},{"content":"Description","pos":[2842,2853]},{"pos":[2891,2984],"content":"<bpt id=\"p1\">[</bpt>CAnimationVariable::SetParentAnimationObject<ept id=\"p1\">](#canimationvariable__setparentanimationobject)</ept>","source":"[CAnimationVariable::SetParentAnimationObject](#canimationvariable__setparentanimationobject)"},{"content":"Sets the relationship between an animation variable and an animation object.","pos":[2985,3061]},{"pos":[3072,3091],"content":"Public Data Members","linkify":"Public Data Members","nodes":[{"content":"Public Data Members","pos":[0,19]}]},{"content":"Name","pos":[3098,3102]},{"content":"Description","pos":[3103,3114]},{"pos":[3152,3247],"content":"<bpt id=\"p1\">[</bpt>CAnimationVariable::m_bAutodestroyTransitions<ept id=\"p1\">](#canimationvariable__m_bautodestroytransitions)</ept>","source":"[CAnimationVariable::m_bAutodestroyTransitions](#canimationvariable__m_bautodestroytransitions)"},{"content":"Specifies whether related transition objects should be deleted.","pos":[3248,3311]},{"pos":[3322,3344],"content":"Protected Data Members","linkify":"Protected Data Members","nodes":[{"content":"Protected Data Members","pos":[0,22]}]},{"content":"Name","pos":[3351,3355]},{"content":"Description","pos":[3356,3367]},{"pos":[3405,3484],"content":"<bpt id=\"p1\">[</bpt>CAnimationVariable::m_dblDefaultValue<ept id=\"p1\">](#canimationvariable__m_dbldefaultvalue)</ept>","source":"[CAnimationVariable::m_dblDefaultValue](#canimationvariable__m_dbldefaultvalue)"},{"content":"Specifies the default value, which is propagated to IUIAnimationVariable.","pos":[3485,3558]},{"pos":[3563,3640],"content":"<bpt id=\"p1\">[</bpt>CAnimationVariable::m_lstTransitions<ept id=\"p1\">](#canimationvariable__m_lsttransitions)</ept>","source":"[CAnimationVariable::m_lstTransitions](#canimationvariable__m_lsttransitions)"},{"content":"Contains a list of transitions that animate this animation variable.","pos":[3641,3709]},{"pos":[3714,3789],"content":"<bpt id=\"p1\">[</bpt>CAnimationVariable::m_pParentObject<ept id=\"p1\">](#canimationvariable__m_pparentobject)</ept>","source":"[CAnimationVariable::m_pParentObject](#canimationvariable__m_pparentobject)"},{"content":"A pointer to an animation object that encapsulates this animation variable.","pos":[3790,3865]},{"pos":[3870,3935],"content":"<bpt id=\"p1\">[</bpt>CAnimationVariable::m_variable<ept id=\"p1\">](#canimationvariable__m_variable)</ept>","source":"[CAnimationVariable::m_variable](#canimationvariable__m_variable)"},{"content":"Stores a pointer to IUIAnimationVariable COM object.","pos":[3936,3988]},{"content":"NULL if the COM object has not been created yet, or if creation failed.","pos":[3989,4060]},{"pos":[4070,4077],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The CAnimationVariable class encapsulates IUIAnimationVariable COM object.","pos":[4081,4155]},{"content":"It also holds a list of transitions to be applied to the animation variable in a storyboard.","pos":[4156,4248]},{"content":"CAnimationVariable objects are embedded to animation objects, which can represent in an application an animated value, point, size, color and rectangle.","pos":[4249,4401]},{"pos":[4410,4431],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[4435,4504],"content":"<bpt id=\"p1\">[</bpt>CAnimationVariable<ept id=\"p1\">](../../mfc/reference/canimationvariable-class.md)</ept>","source":"[CAnimationVariable](../../mfc/reference/canimationvariable-class.md)"},{"pos":[4513,4525],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[4529,4565],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxanimationcontroller.h","source":"**Header:** afxanimationcontroller.h"},{"pos":[4575,4674],"content":"<bpt id=\"p1\">&lt;a name=\"canimationvariable___dtorcanimationvariable\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationVariable::~CAnimationVariable","linkify":"<a name=\"canimationvariable___dtorcanimationvariable\"></a>  CAnimationVariable::~CAnimationVariable","source":"<a name=\"canimationvariable___dtorcanimationvariable\"></a>  CAnimationVariable::~CAnimationVariable"},{"content":"The destructor.","pos":[4678,4693]},{"content":"Called when a CAnimationVariable object is being destroyed.","pos":[4694,4753]},{"pos":[4809,4892],"content":"<bpt id=\"p1\">&lt;a name=\"canimationvariable__addtransition\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationVariable::AddTransition","linkify":"<a name=\"canimationvariable__addtransition\"></a>  CAnimationVariable::AddTransition","source":"<a name=\"canimationvariable__addtransition\"></a>  CAnimationVariable::AddTransition"},{"content":"Adds a transition.","pos":[4896,4914]},{"pos":[4989,4999],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to a transition to add.","pos":[5020,5053]},{"pos":[5063,5070],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is called to add a transition to the internal list of transitions to be applied to the animation variable.","pos":[5074,5192]},{"content":"This list should be cleared when an animation has been scheduled.","pos":[5193,5258]},{"pos":[5268,5357],"content":"<bpt id=\"p1\">&lt;a name=\"canimationvariable__applytransitions\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationVariable::ApplyTransitions","linkify":"<a name=\"canimationvariable__applytransitions\"></a>  CAnimationVariable::ApplyTransitions","source":"<a name=\"canimationvariable__applytransitions\"></a>  CAnimationVariable::ApplyTransitions"},{"content":"Adds transitions from the internal list to storyboard.","pos":[5361,5415]},{"pos":[5577,5587],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to parent animation controller.","pos":[5608,5649]},{"content":"A pointer to storyboard.","pos":[5673,5697]},{"content":"TRUE, if this method should add transitions that depend on keyframes.","pos":[5728,5797]},{"pos":[5807,5814],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method adds transitions from the internal list to storyboard.","pos":[5818,5884]},{"content":"It's called from the top level code several times to add transitions that do not depend on keyframes and add transitions that depend on keyframes.","pos":[5885,6031]},{"content":"If the underlying animation variable COM object has not been created, this method creates it at this stage.","pos":[6032,6139]},{"pos":[6149,6242],"content":"<bpt id=\"p1\">&lt;a name=\"canimationvariable__canimationvariable\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationVariable::CAnimationVariable","linkify":"<a name=\"canimationvariable__canimationvariable\"></a>  CAnimationVariable::CAnimationVariable","source":"<a name=\"canimationvariable__canimationvariable\"></a>  CAnimationVariable::CAnimationVariable"},{"content":"Constructs an animation variable object.","pos":[6246,6286]},{"pos":[6361,6371],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies the default value.","pos":[6396,6424]},{"pos":[6434,6441],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Constructs an animation variable object and sets its default value.","pos":[6445,6512]},{"content":"A default value is used when a variable is not animated, or can't be animated.","pos":[6513,6591]},{"pos":[6601,6690],"content":"<bpt id=\"p1\">&lt;a name=\"canimationvariable__cleartransitions\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationVariable::ClearTransitions","linkify":"<a name=\"canimationvariable__cleartransitions\"></a>  CAnimationVariable::ClearTransitions","source":"<a name=\"canimationvariable__cleartransitions\"></a>  CAnimationVariable::ClearTransitions"},{"content":"Clears transitions.","pos":[6694,6713]},{"pos":[6780,6790],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies whether this method should delete transition objects.","pos":[6812,6875]},{"pos":[6885,6892],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method removes all transitions from the internal list of transitions.","pos":[6896,6970]},{"content":"If bAutodestroy is TRUE, or m_bAutodestroyTransitions is TRUE, then transitions are deleted.","pos":[6971,7063]},{"content":"Otherwise the caller should deallocate the transition objects.","pos":[7064,7126]},{"pos":[7136,7205],"content":"<bpt id=\"p1\">&lt;a name=\"canimationvariable__create\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationVariable::Create","linkify":"<a name=\"canimationvariable__create\"></a>  CAnimationVariable::Create","source":"<a name=\"canimationvariable__create\"></a>  CAnimationVariable::Create"},{"content":"Creates the underlying animation variable COM object.","pos":[7209,7262]},{"pos":[7339,7349],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to animation manager.","pos":[7367,7398]},{"pos":[7408,7420],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"TRUE if the animation variable was successfully created; otherwise FALSE.","pos":[7424,7497]},{"pos":[7507,7514],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method creates the underlying animation variable COM object and sets its default value.","pos":[7518,7610]},{"pos":[7620,7711],"content":"<bpt id=\"p1\">&lt;a name=\"canimationvariable__createtransitions\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationVariable::CreateTransitions","linkify":"<a name=\"canimationvariable__createtransitions\"></a>  CAnimationVariable::CreateTransitions","source":"<a name=\"canimationvariable__createtransitions\"></a>  CAnimationVariable::CreateTransitions"},{"content":"Creates all transitions to be applied to this animation variable.","pos":[7715,7780]},{"pos":[7922,7932],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to transition library.","pos":[7950,7982]},{"content":"A pointer to transition factory.","pos":[8003,8035]},{"pos":[8045,8057],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"TRUE if transitions were created successfully; otherwise FALSE.","pos":[8061,8124]},{"pos":[8134,8141],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is called by the framework when it needs to create transitions that have been added to the variable's internal list of transitions.","pos":[8145,8288]},{"pos":[8298,8415],"content":"<bpt id=\"p1\">&lt;a name=\"canimationvariable__enableintegervaluechangedevent\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationVariable::EnableIntegerValueChangedEvent","linkify":"<a name=\"canimationvariable__enableintegervaluechangedevent\"></a>  CAnimationVariable::EnableIntegerValueChangedEvent","source":"<a name=\"canimationvariable__enableintegervaluechangedevent\"></a>  CAnimationVariable::EnableIntegerValueChangedEvent"},{"content":"Enables or disables the IntegerValueChanged event.","pos":[8419,8469]},{"pos":[8592,8602],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to parent controller.","pos":[8623,8654]},{"content":"TRUE - enable event, FALSE - disable event.","pos":[8674,8717]},{"pos":[8727,8734],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When ValueChanged event is enabled, the framework calls virtual method CAnimationController::OnAnimationIntegerValueChanged.","pos":[8738,8862]},{"content":"You need to override it in a class derived from CAnimationController in order to process this event.","pos":[8863,8963]},{"content":"This method is called every time the integer value of animation variable is changed.","pos":[8964,9048]},{"pos":[9058,9161],"content":"<bpt id=\"p1\">&lt;a name=\"canimationvariable__enablevaluechangedevent\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationVariable::EnableValueChangedEvent","linkify":"<a name=\"canimationvariable__enablevaluechangedevent\"></a>  CAnimationVariable::EnableValueChangedEvent","source":"<a name=\"canimationvariable__enablevaluechangedevent\"></a>  CAnimationVariable::EnableValueChangedEvent"},{"content":"Enables or disables the ValueChanged event.","pos":[9165,9208]},{"pos":[9324,9334],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to parent controller.","pos":[9355,9386]},{"content":"TRUE - enable event, FALSE - disable event.","pos":[9406,9449]},{"pos":[9459,9466],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When ValueChanged event is enabled, the framework calls virtual method CAnimationController::OnAnimationValueChanged.","pos":[9470,9587]},{"content":"You need to override it in a class derived from CAnimationController in order to process this event.","pos":[9588,9688]},{"content":"This method is called every time the value of animation variable is changed.","pos":[9689,9765]},{"pos":[9775,9862],"content":"<bpt id=\"p1\">&lt;a name=\"canimationvariable__getdefaultvalue\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationVariable::GetDefaultValue","linkify":"<a name=\"canimationvariable__getdefaultvalue\"></a>  CAnimationVariable::GetDefaultValue","source":"<a name=\"canimationvariable__getdefaultvalue\"></a>  CAnimationVariable::GetDefaultValue"},{"content":"Returns default value.","pos":[9866,9888]},{"pos":[9948,9960],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The default value.","pos":[9964,9982]},{"pos":[9992,9999],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use this function to obtain default value of animation variable.","pos":[10003,10067]},{"content":"The default value can be set in constructor or by SetDefaultValue method.","pos":[10068,10141]},{"pos":[10151,10256],"content":"<bpt id=\"p1\">&lt;a name=\"canimationvariable__getparentanimationobject\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationVariable::GetParentAnimationObject","linkify":"<a name=\"canimationvariable__getparentanimationobject\"></a>  CAnimationVariable::GetParentAnimationObject","source":"<a name=\"canimationvariable__getparentanimationobject\"></a>  CAnimationVariable::GetParentAnimationObject"},{"content":"Returns the parent animation object.","pos":[10260,10296]},{"pos":[10371,10383],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A pointer to parent animation object, if relationship was established, otherwise NULL.","pos":[10387,10473]},{"pos":[10483,10490],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method can be called to retrieve a pointer to a parent animation object (a container).","pos":[10494,10585]},{"pos":[10595,10668],"content":"<bpt id=\"p1\">&lt;a name=\"canimationvariable__getvalue\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationVariable::GetValue","linkify":"<a name=\"canimationvariable__getvalue\"></a>  CAnimationVariable::GetValue","source":"<a name=\"canimationvariable__getvalue\"></a>  CAnimationVariable::GetValue"},{"content":"Returns the current value of animation variable.","pos":[10672,10720]},{"pos":[10817,10827],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The current value of the animation variable.","pos":[10845,10889]},{"content":"The current value of the animation variable.","pos":[10908,10952]},{"pos":[10962,10974],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"S_OK if the value was obtained successfully, or underlying animation variable has not been created.","pos":[10978,11077]},{"content":"Otherwise HRESULT error code.","pos":[11078,11107]},{"pos":[11117,11124],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method can be called to retrieve the current value of animation variable.","pos":[11128,11206]},{"content":"If the underlying COM object has not been created, dblValue will contain a default value, when the function returns.","pos":[11207,11323]},{"pos":[11333,11412],"content":"<bpt id=\"p1\">&lt;a name=\"canimationvariable__getvariable\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationVariable::GetVariable","linkify":"<a name=\"canimationvariable__getvariable\"></a>  CAnimationVariable::GetVariable","source":"<a name=\"canimationvariable__getvariable\"></a>  CAnimationVariable::GetVariable"},{"content":"Returns a pointer to IUIAnimationVariable COM object.","pos":[11416,11469]},{"pos":[11531,11543],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A valid pointer to IUIAnimationVariable COM object, or NULL if animation variable was not created, or can't be created.","pos":[11547,11666]},{"pos":[11676,11683],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use this function to access the underlying IUIAnimationVariable COM object and call its methods directly if needed.","pos":[11687,11802]},{"pos":[11812,11919],"content":"<bpt id=\"p1\">&lt;a name=\"canimationvariable__m_bautodestroytransitions\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationVariable::m_bAutodestroyTransitions","linkify":"<a name=\"canimationvariable__m_bautodestroytransitions\"></a>  CAnimationVariable::m_bAutodestroyTransitions","source":"<a name=\"canimationvariable__m_bautodestroytransitions\"></a>  CAnimationVariable::m_bAutodestroyTransitions"},{"content":"Specifies whether related transition objects should be deleted.","pos":[11923,11986]},{"pos":[12045,12052],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Set this value to TRUE to force deletion of transition objects when they are being removed from the internal list of transitions.","pos":[12056,12185]},{"content":"If this value is FALSE the transitions should be deleted by calling application.","pos":[12186,12266]},{"content":"The list of transitions is always cleared after an animation has been scheduled.","pos":[12267,12347]},{"content":"The default value is FALSE.","pos":[12348,12375]},{"pos":[12385,12476],"content":"<bpt id=\"p1\">&lt;a name=\"canimationvariable__m_dbldefaultvalue\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationVariable::m_dblDefaultValue","linkify":"<a name=\"canimationvariable__m_dbldefaultvalue\"></a>  CAnimationVariable::m_dblDefaultValue","source":"<a name=\"canimationvariable__m_dbldefaultvalue\"></a>  CAnimationVariable::m_dblDefaultValue"},{"content":"Specifies the default value, which is propagated to IUIAnimationVariable.","pos":[12480,12553]},{"pos":[12606,12695],"content":"<bpt id=\"p1\">&lt;a name=\"canimationvariable__m_lsttransitions\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationVariable::m_lstTransitions","linkify":"<a name=\"canimationvariable__m_lsttransitions\"></a>  CAnimationVariable::m_lstTransitions","source":"<a name=\"canimationvariable__m_lsttransitions\"></a>  CAnimationVariable::m_lstTransitions"},{"content":"Contains a list of transitions that animate this animation variable.","pos":[12699,12767]},{"pos":[12820,12907],"content":"<bpt id=\"p1\">&lt;a name=\"canimationvariable__m_pparentobject\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationVariable::m_pParentObject","linkify":"<a name=\"canimationvariable__m_pparentobject\"></a>  CAnimationVariable::m_pParentObject","source":"<a name=\"canimationvariable__m_pparentobject\"></a>  CAnimationVariable::m_pParentObject"},{"content":"A pointer to an animation object that encapsulates this animation variable.","pos":[12911,12986]},{"pos":[13052,13129],"content":"<bpt id=\"p1\">&lt;a name=\"canimationvariable__m_variable\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationVariable::m_variable","linkify":"<a name=\"canimationvariable__m_variable\"></a>  CAnimationVariable::m_variable","source":"<a name=\"canimationvariable__m_variable\"></a>  CAnimationVariable::m_variable"},{"content":"Stores a pointer to IUIAnimationVariable COM object.","pos":[13133,13185]},{"content":"NULL if the COM object has not been created yet, or if creation failed.","pos":[13186,13257]},{"pos":[13331,13418],"content":"<bpt id=\"p1\">&lt;a name=\"canimationvariable__setdefaultvalue\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationVariable::SetDefaultValue","linkify":"<a name=\"canimationvariable__setdefaultvalue\"></a>  CAnimationVariable::SetDefaultValue","source":"<a name=\"canimationvariable__setdefaultvalue\"></a>  CAnimationVariable::SetDefaultValue"},{"content":"Sets default value and releases IUIAnimationVariable COM object.","pos":[13422,13486]},{"pos":[13557,13567],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies the new default value.","pos":[13592,13624]},{"pos":[13634,13641],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use this method to reset the default value.","pos":[13645,13688]},{"content":"This method releases the internal IUIAnimationVariable COM object, therefore when animation variable is recreated, the underlying COM object gets the new default value.","pos":[13689,13857]},{"content":"The default value is returned by GetValue if the COM object representing the animation variable is not created, or if the variable has not been animated.","pos":[13858,14011]},{"pos":[14021,14126],"content":"<bpt id=\"p1\">&lt;a name=\"canimationvariable__setparentanimationobject\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationVariable::SetParentAnimationObject","linkify":"<a name=\"canimationvariable__setparentanimationobject\"></a>  CAnimationVariable::SetParentAnimationObject","source":"<a name=\"canimationvariable__setparentanimationobject\"></a>  CAnimationVariable::SetParentAnimationObject"},{"content":"Sets the relationship between an animation variable and an animation object.","pos":[14130,14206]},{"pos":[14299,14309],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to an animation object that contains this variable.","pos":[14332,14393]},{"pos":[14403,14410],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is called internally to establish one-to-one relationship between an animation variable and an animation object that encapsulates it.","pos":[14414,14559]},{"pos":[14568,14576],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[14580,14625],"content":"<bpt id=\"p1\">[</bpt>Classes<ept id=\"p1\">](../../mfc/reference/mfc-classes.md)</ept>","source":"[Classes](../../mfc/reference/mfc-classes.md)"}],"content":"---\ntitle: \"CAnimationVariable Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CAnimationVariable\"\n  - \"afxanimationcontroller/CAnimationVariable\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CAnimationVariable class\"\nms.assetid: 506e697e-31a8-4033-a27e-292f4d7b42d9\ncaps.latest.revision: 17\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CAnimationVariable Class\nRepresents an animation variable.  \n  \n## Syntax  \n  \n```  \nclass CAnimationVariable;  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAnimationVariable::CAnimationVariable](#canimationvariable__canimationvariable)|Constructs an animation variable object.|  \n|[CAnimationVariable::~CAnimationVariable](#canimationvariable__~canimationvariable)|The destructor. Called when a CAnimationVariable object is being destroyed.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAnimationVariable::AddTransition](#canimationvariable__addtransition)|Adds a transition.|  \n|[CAnimationVariable::ApplyTransitions](#canimationvariable__applytransitions)|Adds transitions from the internal list to storyboard.|  \n|[CAnimationVariable::ClearTransitions](#canimationvariable__cleartransitions)|Clears transitions.|  \n|[CAnimationVariable::Create](#canimationvariable__create)|Creates the underlying animation variable COM object.|  \n|[CAnimationVariable::CreateTransitions](#canimationvariable__createtransitions)|Creates all transitions to be applied to this animation variable.|  \n|[CAnimationVariable::EnableIntegerValueChangedEvent](#canimationvariable__enableintegervaluechangedevent)|Enables or disables the IntegerValueChanged event.|  \n|[CAnimationVariable::EnableValueChangedEvent](#canimationvariable__enablevaluechangedevent)|Enables or disables the ValueChanged event.|  \n|[CAnimationVariable::GetDefaultValue](#canimationvariable__getdefaultvalue)|Returns default value.|  \n|[CAnimationVariable::GetParentAnimationObject](#canimationvariable__getparentanimationobject)|Returns the parent animation object.|  \n|[CAnimationVariable::GetValue](#canimationvariable__getvalue)|Overloaded. Returns the current value of animation variable.|  \n|[CAnimationVariable::GetVariable](#canimationvariable__getvariable)|Returns a pointer to IUIAnimationVariable COM object.|  \n|[CAnimationVariable::SetDefaultValue](#canimationvariable__setdefaultvalue)|Sets default value and releases IUIAnimationVariable COM object.|  \n  \n### Protected Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAnimationVariable::SetParentAnimationObject](#canimationvariable__setparentanimationobject)|Sets the relationship between an animation variable and an animation object.|  \n  \n### Public Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAnimationVariable::m_bAutodestroyTransitions](#canimationvariable__m_bautodestroytransitions)|Specifies whether related transition objects should be deleted.|  \n  \n### Protected Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAnimationVariable::m_dblDefaultValue](#canimationvariable__m_dbldefaultvalue)|Specifies the default value, which is propagated to IUIAnimationVariable.|  \n|[CAnimationVariable::m_lstTransitions](#canimationvariable__m_lsttransitions)|Contains a list of transitions that animate this animation variable.|  \n|[CAnimationVariable::m_pParentObject](#canimationvariable__m_pparentobject)|A pointer to an animation object that encapsulates this animation variable.|  \n|[CAnimationVariable::m_variable](#canimationvariable__m_variable)|Stores a pointer to IUIAnimationVariable COM object. NULL if the COM object has not been created yet, or if creation failed.|  \n  \n## Remarks  \n The CAnimationVariable class encapsulates IUIAnimationVariable COM object. It also holds a list of transitions to be applied to the animation variable in a storyboard. CAnimationVariable objects are embedded to animation objects, which can represent in an application an animated value, point, size, color and rectangle.  \n  \n## Inheritance Hierarchy  \n [CAnimationVariable](../../mfc/reference/canimationvariable-class.md)  \n  \n## Requirements  \n **Header:** afxanimationcontroller.h  \n  \n##  <a name=\"canimationvariable___dtorcanimationvariable\"></a>  CAnimationVariable::~CAnimationVariable  \n The destructor. Called when a CAnimationVariable object is being destroyed.  \n  \n```  \nvirtual ~CAnimationVariable();\n```  \n  \n##  <a name=\"canimationvariable__addtransition\"></a>  CAnimationVariable::AddTransition  \n Adds a transition.  \n  \n```  \nvoid AddTransition(CBaseTransition* pTransition);\n```  \n  \n### Parameters  \n `pTransition`  \n A pointer to a transition to add.  \n  \n### Remarks  \n This method is called to add a transition to the internal list of transitions to be applied to the animation variable. This list should be cleared when an animation has been scheduled.  \n  \n##  <a name=\"canimationvariable__applytransitions\"></a>  CAnimationVariable::ApplyTransitions  \n Adds transitions from the internal list to storyboard.  \n  \n```  \nvoid ApplyTransitions(\n    CAnimationController* pController,  \n    IUIAnimationStoryboard* pStoryboard,  \n    BOOL bDependOnKeyframes);\n```  \n  \n### Parameters  \n `pController`  \n A pointer to parent animation controller.  \n  \n `pStoryboard`  \n A pointer to storyboard.  \n  \n `bDependOnKeyframes`  \n TRUE, if this method should add transitions that depend on keyframes.  \n  \n### Remarks  \n This method adds transitions from the internal list to storyboard. It's called from the top level code several times to add transitions that do not depend on keyframes and add transitions that depend on keyframes. If the underlying animation variable COM object has not been created, this method creates it at this stage.  \n  \n##  <a name=\"canimationvariable__canimationvariable\"></a>  CAnimationVariable::CAnimationVariable  \n Constructs an animation variable object.  \n  \n```  \nCAnimationVariable(DOUBLE dblDefaultValue = 0.0);\n```  \n  \n### Parameters  \n `dblDefaultValue`  \n Specifies the default value.  \n  \n### Remarks  \n Constructs an animation variable object and sets its default value. A default value is used when a variable is not animated, or can't be animated.  \n  \n##  <a name=\"canimationvariable__cleartransitions\"></a>  CAnimationVariable::ClearTransitions  \n Clears transitions.  \n  \n```  \nvoid ClearTransitions(BOOL bAutodestroy);\n```  \n  \n### Parameters  \n `bAutodestroy`  \n Specifies whether this method should delete transition objects.  \n  \n### Remarks  \n This method removes all transitions from the internal list of transitions. If bAutodestroy is TRUE, or m_bAutodestroyTransitions is TRUE, then transitions are deleted. Otherwise the caller should deallocate the transition objects.  \n  \n##  <a name=\"canimationvariable__create\"></a>  CAnimationVariable::Create  \n Creates the underlying animation variable COM object.  \n  \n```  \nvirtual BOOL Create(IUIAnimationManager* pManager);\n```  \n  \n### Parameters  \n `pManager`  \n A pointer to animation manager.  \n  \n### Return Value  \n TRUE if the animation variable was successfully created; otherwise FALSE.  \n  \n### Remarks  \n This method creates the underlying animation variable COM object and sets its default value.  \n  \n##  <a name=\"canimationvariable__createtransitions\"></a>  CAnimationVariable::CreateTransitions  \n Creates all transitions to be applied to this animation variable.  \n  \n```  \nBOOL CreateTransitions(\n    IUIAnimationTransitionLibrary* pLibrary,  \n    IUIAnimationTransitionFactory* pFactory);\n```  \n  \n### Parameters  \n `pLibrary`  \n A pointer to transition library.  \n  \n `pFactory`  \n A pointer to transition factory.  \n  \n### Return Value  \n TRUE if transitions were created successfully; otherwise FALSE.  \n  \n### Remarks  \n This method is called by the framework when it needs to create transitions that have been added to the variable's internal list of transitions.  \n  \n##  <a name=\"canimationvariable__enableintegervaluechangedevent\"></a>  CAnimationVariable::EnableIntegerValueChangedEvent  \n Enables or disables the IntegerValueChanged event.  \n  \n```  \nvoid EnableIntegerValueChangedEvent (\n    CAnimationController* pController,  \n    BOOL bEnable);\n```  \n  \n### Parameters  \n `pController`  \n A pointer to parent controller.  \n  \n `bEnable`  \n TRUE - enable event, FALSE - disable event.  \n  \n### Remarks  \n When ValueChanged event is enabled, the framework calls virtual method CAnimationController::OnAnimationIntegerValueChanged. You need to override it in a class derived from CAnimationController in order to process this event. This method is called every time the integer value of animation variable is changed.  \n  \n##  <a name=\"canimationvariable__enablevaluechangedevent\"></a>  CAnimationVariable::EnableValueChangedEvent  \n Enables or disables the ValueChanged event.  \n  \n```  \nvoid EnableValueChangedEvent (\n    CAnimationController* pController,  \n    BOOL bEnable);\n```  \n  \n### Parameters  \n `pController`  \n A pointer to parent controller.  \n  \n `bEnable`  \n TRUE - enable event, FALSE - disable event.  \n  \n### Remarks  \n When ValueChanged event is enabled, the framework calls virtual method CAnimationController::OnAnimationValueChanged. You need to override it in a class derived from CAnimationController in order to process this event. This method is called every time the value of animation variable is changed.  \n  \n##  <a name=\"canimationvariable__getdefaultvalue\"></a>  CAnimationVariable::GetDefaultValue  \n Returns default value.  \n  \n```  \nDOUBLE GetDefaultValue() const;\n\n \n```  \n  \n### Return Value  \n The default value.  \n  \n### Remarks  \n Use this function to obtain default value of animation variable. The default value can be set in constructor or by SetDefaultValue method.  \n  \n##  <a name=\"canimationvariable__getparentanimationobject\"></a>  CAnimationVariable::GetParentAnimationObject  \n Returns the parent animation object.  \n  \n```  \nCAnimationBaseObject* GetParentAnimationObject();\n```  \n  \n### Return Value  \n A pointer to parent animation object, if relationship was established, otherwise NULL.  \n  \n### Remarks  \n This method can be called to retrieve a pointer to a parent animation object (a container).  \n  \n##  <a name=\"canimationvariable__getvalue\"></a>  CAnimationVariable::GetValue  \n Returns the current value of animation variable.  \n  \n```  \nHRESULT GetValue(DOUBLE& dblValue);\n\n \nHRESULT GetValue(INT32& nValue);\n```  \n  \n### Parameters  \n `dblValue`  \n The current value of the animation variable.  \n  \n `nValue`  \n The current value of the animation variable.  \n  \n### Return Value  \n S_OK if the value was obtained successfully, or underlying animation variable has not been created. Otherwise HRESULT error code.  \n  \n### Remarks  \n This method can be called to retrieve the current value of animation variable. If the underlying COM object has not been created, dblValue will contain a default value, when the function returns.  \n  \n##  <a name=\"canimationvariable__getvariable\"></a>  CAnimationVariable::GetVariable  \n Returns a pointer to IUIAnimationVariable COM object.  \n  \n```  \nIUIAnimationVariable* GetVariable();\n```  \n  \n### Return Value  \n A valid pointer to IUIAnimationVariable COM object, or NULL if animation variable was not created, or can't be created.  \n  \n### Remarks  \n Use this function to access the underlying IUIAnimationVariable COM object and call its methods directly if needed.  \n  \n##  <a name=\"canimationvariable__m_bautodestroytransitions\"></a>  CAnimationVariable::m_bAutodestroyTransitions  \n Specifies whether related transition objects should be deleted.  \n  \n```  \nBOOL m_bAutodestroyTransitions;  \n```  \n  \n### Remarks  \n Set this value to TRUE to force deletion of transition objects when they are being removed from the internal list of transitions. If this value is FALSE the transitions should be deleted by calling application. The list of transitions is always cleared after an animation has been scheduled. The default value is FALSE.  \n  \n##  <a name=\"canimationvariable__m_dbldefaultvalue\"></a>  CAnimationVariable::m_dblDefaultValue  \n Specifies the default value, which is propagated to IUIAnimationVariable.  \n  \n```  \nDOUBLE m_dblDefaultValue;  \n```  \n  \n##  <a name=\"canimationvariable__m_lsttransitions\"></a>  CAnimationVariable::m_lstTransitions  \n Contains a list of transitions that animate this animation variable.  \n  \n```  \nCObList m_lstTransitions;  \n```  \n  \n##  <a name=\"canimationvariable__m_pparentobject\"></a>  CAnimationVariable::m_pParentObject  \n A pointer to an animation object that encapsulates this animation variable.  \n  \n```  \nCAnimationBaseObject* m_pParentObject;  \n```  \n  \n##  <a name=\"canimationvariable__m_variable\"></a>  CAnimationVariable::m_variable  \n Stores a pointer to IUIAnimationVariable COM object. NULL if the COM object has not been created yet, or if creation failed.  \n  \n```  \nATL::CComPtr<IUIAnimationVariable> m_variable;  \n```  \n  \n##  <a name=\"canimationvariable__setdefaultvalue\"></a>  CAnimationVariable::SetDefaultValue  \n Sets default value and releases IUIAnimationVariable COM object.  \n  \n```  \nvoid SetDefaultValue(DOUBLE dblDefaultValue);\n```  \n  \n### Parameters  \n `dblDefaultValue`  \n Specifies the new default value.  \n  \n### Remarks  \n Use this method to reset the default value. This method releases the internal IUIAnimationVariable COM object, therefore when animation variable is recreated, the underlying COM object gets the new default value. The default value is returned by GetValue if the COM object representing the animation variable is not created, or if the variable has not been animated.  \n  \n##  <a name=\"canimationvariable__setparentanimationobject\"></a>  CAnimationVariable::SetParentAnimationObject  \n Sets the relationship between an animation variable and an animation object.  \n  \n```  \nvoid SetParentAnimationObject(CAnimationBaseObject* pParentObject);\n```  \n  \n### Parameters  \n `pParentObject`  \n A pointer to an animation object that contains this variable.  \n  \n### Remarks  \n This method is called internally to establish one-to-one relationship between an animation variable and an animation object that encapsulates it.  \n  \n## See Also  \n [Classes](../../mfc/reference/mfc-classes.md)\n"}