{"nodes":[{"pos":[12,41],"content":"auto Keyword | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"auto Keyword | Microsoft Docs","pos":[0,29]}]},{"content":"auto Keyword","pos":[658,670]},{"content":"The <ph id=\"ph1\">`auto`</ph> keyword is a declaration specifier.","pos":[671,717],"source":"The `auto` keyword is a declaration specifier."},{"content":"However, the C++ standard defines an original and a revised meaning for this keyword.","pos":[718,803]},{"content":"Before <ph id=\"ph1\">[!INCLUDE[cpp_dev10_long](../build/includes/cpp_dev10_long_md.md)]</ph>, the <ph id=\"ph2\">`auto`</ph> keyword declares a variable in the <bpt id=\"p1\">*</bpt>automatic<ept id=\"p1\">*</ept> storage class; that is, a variable that has a local lifetime.","pos":[804,998],"source":" Before [!INCLUDE[cpp_dev10_long](../build/includes/cpp_dev10_long_md.md)], the `auto` keyword declares a variable in the *automatic* storage class; that is, a variable that has a local lifetime."},{"content":"Starting with <ph id=\"ph1\">[!INCLUDE[cpp_dev10_long](../build/includes/cpp_dev10_long_md.md)]</ph>, the<ph id=\"ph2\">`auto`</ph> keyword declares a variable whose type is deduced from the initialization expression in its declaration.","pos":[999,1195],"source":" Starting with [!INCLUDE[cpp_dev10_long](../build/includes/cpp_dev10_long_md.md)], the`auto` keyword declares a variable whose type is deduced from the initialization expression in its declaration."},{"content":"The <bpt id=\"p1\">[</bpt>/Zc:auto&amp;#91;-&amp;#93;<ept id=\"p1\">](../build/reference/zc-auto-deduce-variable-type.md)</ept> compiler option controls the meaning of the <ph id=\"ph1\">`auto`</ph> keyword.","pos":[1196,1333],"source":" The [/Zc:auto&#91;-&#93;](../build/reference/zc-auto-deduce-variable-type.md) compiler option controls the meaning of the `auto` keyword."},{"content":"Syntax","pos":[1342,1348]},{"content":"Remarks","pos":[1426,1433]},{"pos":[1437,1553],"content":"The definition of the <ph id=\"ph1\">`auto`</ph> keyword changes in the C++ programming language, but not in the C programming language.","source":"The definition of the `auto` keyword changes in the C++ programming language, but not in the C programming language."},{"pos":[1560,1647],"content":"The following topics describe the <ph id=\"ph1\">`auto`</ph> keyword and the corresponding compiler option:","source":"The following topics describe the `auto` keyword and the corresponding compiler option:"},{"pos":[1657,1735],"content":"<bpt id=\"p1\">[</bpt>auto<ept id=\"p1\">](../cpp/auto-cpp.md)</ept> describes the new definition of the <ph id=\"ph1\">`auto`</ph> keyword.","source":"[auto](../cpp/auto-cpp.md) describes the new definition of the `auto` keyword."},{"pos":[1748,1934],"content":"<bpt id=\"p1\">[</bpt>/Zc:auto (Deduce Variable Type)<ept id=\"p1\">](../build/reference/zc-auto-deduce-variable-type.md)</ept> describes the compiler option that tells the compiler which definition of the <ph id=\"ph1\">`auto`</ph> keyword to use.","source":"[/Zc:auto (Deduce Variable Type)](../build/reference/zc-auto-deduce-variable-type.md) describes the compiler option that tells the compiler which definition of the `auto` keyword to use."},{"content":"See Also","pos":[1943,1951]},{"content":"Keywords","pos":[1956,1964]}],"content":"---\ntitle: \"auto Keyword | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"auto\"\n  - \"auto_cpp\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"automatic storage class, auto keyword\"\n  - \"auto keyword\"\nms.assetid: 744a41c0-2510-4140-a1be-96257e722908\ncaps.latest.revision: 14\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# auto Keyword\nThe `auto` keyword is a declaration specifier. However, the C++ standard defines an original and a revised meaning for this keyword. Before [!INCLUDE[cpp_dev10_long](../build/includes/cpp_dev10_long_md.md)], the `auto` keyword declares a variable in the *automatic* storage class; that is, a variable that has a local lifetime. Starting with [!INCLUDE[cpp_dev10_long](../build/includes/cpp_dev10_long_md.md)], the`auto` keyword declares a variable whose type is deduced from the initialization expression in its declaration. The [/Zc:auto&#91;-&#93;](../build/reference/zc-auto-deduce-variable-type.md) compiler option controls the meaning of the `auto` keyword.  \n  \n## Syntax  \n  \n```cpp  \nauto declarator ;  \nauto declarator initializer;  \n```  \n  \n## Remarks  \n The definition of the `auto` keyword changes in the C++ programming language, but not in the C programming language.  \n  \n The following topics describe the `auto` keyword and the corresponding compiler option:  \n  \n-   [auto](../cpp/auto-cpp.md) describes the new definition of the `auto` keyword.  \n  \n  \n-   [/Zc:auto (Deduce Variable Type)](../build/reference/zc-auto-deduce-variable-type.md) describes the compiler option that tells the compiler which definition of the `auto` keyword to use.  \n  \n## See Also  \n [Keywords](../cpp/keywords-cpp.md)"}