{"nodes":[{"pos":[12,43],"content":"pair (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"pair (STL-CLR) | Microsoft Docs","pos":[0,31]}]},{"content":"pair (STL/CLR)","pos":[607,621]},{"content":"The template class describes an object that wraps a pair of values.","pos":[622,689]},{"content":"Syntax","pos":[698,704]},{"content":"Parameters","pos":[803,813]},{"content":"Value1","pos":[817,823]},{"content":"The type of first wrapped value.","pos":[827,859]},{"content":"Value2","pos":[866,872]},{"content":"The type of second wrapped value.","pos":[876,909]},{"content":"Members","pos":[918,925]},{"content":"Type Definition","pos":[932,947]},{"content":"Description","pos":[948,959]},{"content":"pair::first_type (STL/CLR)","pos":[1009,1035]},{"content":"The type of the first wrapped value.","pos":[1075,1111]},{"content":"pair::second_type (STL/CLR)","pos":[1117,1144]},{"content":"The type of the second wrapped value.","pos":[1185,1222]},{"content":"Member Object","pos":[1230,1243]},{"content":"Description","pos":[1244,1255]},{"content":"pair::first (STL/CLR)","pos":[1303,1324]},{"content":"The first stored value.","pos":[1359,1382]},{"content":"pair::second (STL/CLR)","pos":[1388,1410]},{"content":"The second stored value.","pos":[1446,1470]},{"content":"Member Function","pos":[1478,1493]},{"content":"Description","pos":[1494,1505]},{"content":"pair::pair (STL/CLR)","pos":[1555,1575]},{"content":"Constructs a pair object.","pos":[1609,1634]},{"content":"pair::swap (STL/CLR)","pos":[1640,1660]},{"content":"Swaps the contents of two pairs.","pos":[1694,1726]},{"content":"Operator","pos":[1734,1742]},{"content":"Description","pos":[1743,1754]},{"content":"pair::operator= (STL/CLR)","pos":[1797,1822]},{"content":"Replaces the stored pair of values.","pos":[1867,1902]},{"content":"Remarks","pos":[1912,1919]},{"content":"The object stores a pair of values.","pos":[1923,1958]},{"content":"You use this template class to combine two values into a single object.","pos":[1959,2030]},{"content":"Note that <ph id=\"ph1\">`cliext::pair`</ph> (described here) stores only managed types; to store a pair of unmanaged types use <ph id=\"ph2\">`std::pair`</ph>, declared in <ph id=\"ph3\">`&lt;utility&gt;`</ph>.","pos":[2031,2176],"source":" Note that `cliext::pair` (described here) stores only managed types; to store a pair of unmanaged types use `std::pair`, declared in `<utility>`."},{"content":"Requirements","pos":[2185,2197]},{"pos":[2201,2230],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/utility&gt;","source":"**Header:** \\<cliext/utility>"},{"pos":[2237,2258],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2267,2275]},{"content":"make_pair (STL/CLR)","pos":[2280,2299]}],"content":"---\ntitle: \"pair (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::pair\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"pair class [STL/CLR]\"\nms.assetid: 3326b4d9-a52a-49e5-8103-9aa5e8b352de\ncaps.latest.revision: 5\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# pair (STL/CLR)\nThe template class describes an object that wraps a pair of values.  \n  \n## Syntax  \n  \n```  \ntemplate<typename Value1,  \n    typename Value2>  \n    ref class pair;  \n```  \n  \n#### Parameters  \n Value1  \n The type of first wrapped value.  \n  \n Value2  \n The type of second wrapped value.  \n  \n## Members  \n  \n|Type Definition|Description|  \n|---------------------|-----------------|  \n|[pair::first_type (STL/CLR)](../dotnet/pair-first-type-stl-clr.md)|The type of the first wrapped value.|  \n|[pair::second_type (STL/CLR)](../dotnet/pair-second-type-stl-clr.md)|The type of the second wrapped value.|  \n  \n|Member Object|Description|  \n|-------------------|-----------------|  \n|[pair::first (STL/CLR)](../dotnet/pair-first-stl-clr.md)|The first stored value.|  \n|[pair::second (STL/CLR)](../dotnet/pair-second-stl-clr.md)|The second stored value.|  \n  \n|Member Function|Description|  \n|---------------------|-----------------|  \n|[pair::pair (STL/CLR)](../dotnet/pair-pair-stl-clr.md)|Constructs a pair object.|  \n|[pair::swap (STL/CLR)](../dotnet/pair-swap-stl-clr.md)|Swaps the contents of two pairs.|  \n  \n|Operator|Description|  \n|--------------|-----------------|  \n|[pair::operator= (STL/CLR)](../dotnet/pair-operator-assign-stl-clr.md)|Replaces the stored pair of values.|  \n  \n## Remarks  \n The object stores a pair of values. You use this template class to combine two values into a single object. Note that `cliext::pair` (described here) stores only managed types; to store a pair of unmanaged types use `std::pair`, declared in `<utility>`.  \n  \n## Requirements  \n **Header:** \\<cliext/utility>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [make_pair (STL/CLR)](../dotnet/make-pair-stl-clr.md)"}