{"nodes":[{"pos":[12,42],"content":"CRowset::Undo | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CRowset::Undo | Microsoft Docs","pos":[0,30]}]},{"content":"CRowset::Undo","pos":[805,818]},{"pos":[819,921],"content":"Undoes any changes made to a row since the last fetch or <bpt id=\"p1\">[</bpt>Update<ept id=\"p1\">](../../data/oledb/crowset-update.md)</ept>.","source":"Undoes any changes made to a row since the last fetch or [Update](../../data/oledb/crowset-update.md)."},{"content":"Syntax","pos":[930,936]},{"content":"Parameters","pos":[1097,1107]},{"content":"[out] A pointer to the location where <bpt id=\"p1\">**</bpt>Undo<ept id=\"p1\">**</ept> returns the number of rows it attempted to undo if required.","pos":[1123,1230],"source":" [out] A pointer to the location where **Undo** returns the number of rows it attempted to undo if required."},{"content":"[out] A pointer to the location where <bpt id=\"p1\">**</bpt>Undo<ept id=\"p1\">**</ept> returns an array of handles to all rows it attempted to undo if required.","pos":[1248,1368],"source":" [out] A pointer to the location where **Undo** returns an array of handles to all rows it attempted to undo if required."},{"content":"[out] A pointer to the location where <bpt id=\"p1\">**</bpt>Undo<ept id=\"p1\">**</ept> returns the row status value.","pos":[1388,1464],"source":" [out] A pointer to the location where **Undo** returns the row status value."},{"content":"No status is returned if <ph id=\"ph1\">`pStatus`</ph> is null.","pos":[1465,1508],"source":" No status is returned if `pStatus` is null."},{"content":"Return Value","pos":[1517,1529]},{"pos":[1533,1554],"content":"A standard <ph id=\"ph1\">`HRESULT`</ph>.","source":"A standard `HRESULT`."},{"content":"Remarks","pos":[1563,1570]},{"content":"This method requires the optional interface <ph id=\"ph1\">`IRowsetUpdate`</ph>, which might not be supported on all providers; if this is the case, the method returns <bpt id=\"p1\">**</bpt>E_NOINTERFACE<ept id=\"p1\">**</ept>.","pos":[1574,1740],"source":"This method requires the optional interface `IRowsetUpdate`, which might not be supported on all providers; if this is the case, the method returns **E_NOINTERFACE**."},{"content":"You must also set <bpt id=\"p1\">**</bpt>DBPROP_IRowsetUpdate<ept id=\"p1\">**</ept> to <ph id=\"ph1\">`VARIANT_TRUE`</ph> before calling <bpt id=\"p2\">**</bpt>Open<ept id=\"p2\">**</ept> on the table or command containing the rowset.","pos":[1741,1872],"source":" You must also set **DBPROP_IRowsetUpdate** to `VARIANT_TRUE` before calling **Open** on the table or command containing the rowset."},{"content":"Requirements","pos":[1881,1893]},{"pos":[1897,1919],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atldbcli.h","source":"**Header:** atldbcli.h"},{"content":"See Also","pos":[1928,1936]},{"content":"CRowset Class","pos":[1941,1954]},{"content":"IRowsetUpdate::Undo","pos":[1996,2015]}],"content":"---\ntitle: \"CRowset::Undo | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"CRowset.Undo\"\n  - \"ATL::CRowset<TAccessor>::Undo\"\n  - \"CRowset<TAccessor>::Undo\"\n  - \"ATL.CRowset.Undo\"\n  - \"ATL.CRowset<TAccessor>.Undo\"\n  - \"CRowset<TAccessor>.Undo\"\n  - \"ATL::CRowset::Undo\"\n  - \"CRowset::Undo\"\n  - \"Undo\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"Undo method\"\nms.assetid: 1ccd70e2-3931-41c4-893e-a05d0e295410\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CRowset::Undo\nUndoes any changes made to a row since the last fetch or [Update](../../data/oledb/crowset-update.md).  \n  \n## Syntax  \n  \n```  \n  \n      HRESULT Undo(   \n   DBCOUNTITEM* pcRows = NULL,   \n   HROW* phRow = NULL,   \n   DBROWSTATUS* pStatus = NULL    \n) throw( );  \n```  \n  \n#### Parameters  \n `pcRows`  \n [out] A pointer to the location where **Undo** returns the number of rows it attempted to undo if required.  \n  \n `phRow`  \n [out] A pointer to the location where **Undo** returns an array of handles to all rows it attempted to undo if required.  \n  \n `pStatus`  \n [out] A pointer to the location where **Undo** returns the row status value. No status is returned if `pStatus` is null.  \n  \n## Return Value  \n A standard `HRESULT`.  \n  \n## Remarks  \n This method requires the optional interface `IRowsetUpdate`, which might not be supported on all providers; if this is the case, the method returns **E_NOINTERFACE**. You must also set **DBPROP_IRowsetUpdate** to `VARIANT_TRUE` before calling **Open** on the table or command containing the rowset.  \n  \n## Requirements  \n **Header:** atldbcli.h  \n  \n## See Also  \n [CRowset Class](../../data/oledb/crowset-class.md)   \n [IRowsetUpdate::Undo](https://msdn.microsoft.com/en-us/library/ms719655.aspx)"}