{"nodes":[{"pos":[12,49],"content":"CStockPropImpl Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CStockPropImpl Class | Microsoft Docs","pos":[0,37]}]},{"pos":[743,763],"content":"CStockPropImpl Class","linkify":"CStockPropImpl Class","nodes":[{"content":"CStockPropImpl Class","pos":[0,20]}]},{"content":"This class provides methods for supporting stock property values.","pos":[764,829]},{"pos":[837,947],"content":"[!IMPORTANT]\n This class and its members cannot be used in applications that execute in the Windows Runtime.","leadings":["","> "],"nodes":[{"content":"This class and its members cannot be used in applications that execute in the Windows Runtime.","pos":[14,108]}]},{"pos":[956,962],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1332,1342],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The class implementing the control and deriving from <ph id=\"ph1\">`CStockPropImpl`</ph>.","pos":[1353,1423],"source":" The class implementing the control and deriving from `CStockPropImpl`."},{"content":"A dual interface exposing the stock properties.","pos":[1449,1496]},{"content":"A pointer to the IID of <ph id=\"ph1\">`InterfaceName`</ph>.","pos":[1513,1553],"source":" A pointer to the IID of `InterfaceName`."},{"content":"A pointer to the LIBID of the type library containing the definition of <ph id=\"ph1\">`InterfaceName`</ph>.","pos":[1572,1660],"source":" A pointer to the LIBID of the type library containing the definition of `InterfaceName`."},{"content":"The major version of the type library.","pos":[1679,1717]},{"content":"The default value is 1.","pos":[1718,1741]},{"content":"The minor version of the type library.","pos":[1760,1798]},{"content":"The default value is 0.","pos":[1799,1822]},{"content":"The class used to manage the type information for <ph id=\"ph1\">`T`</ph>.","pos":[1843,1897],"source":" The class used to manage the type information for `T`."},{"content":"The default value is <ph id=\"ph1\">`CComTypeInfoHolder`</ph>.","pos":[1898,1940],"source":" The default value is `CComTypeInfoHolder`."},{"pos":[1949,1956],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[1966,1980],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"pos":[2001,2050],"content":"<bpt id=\"p1\">[</bpt>get_Appearance<ept id=\"p1\">](#cstockpropimpl__get_appearance)</ept>","source":"[get_Appearance](#cstockpropimpl__get_appearance)"},{"content":"Call this method to get the paint style used by the control, for example, flat or 3D.","pos":[2051,2136]},{"pos":[2141,2186],"content":"<bpt id=\"p1\">[</bpt>get_AutoSize<ept id=\"p1\">](#cstockpropimpl__get_autosize)</ept>","source":"[get_AutoSize](#cstockpropimpl__get_autosize)"},{"content":"Call this method to get the status of the flag that indicates if the control cannot be any other size.","pos":[2187,2289]},{"pos":[2294,2341],"content":"<bpt id=\"p1\">[</bpt>get_BackColor<ept id=\"p1\">](#cstockpropimpl__get_backcolor)</ept>","source":"[get_BackColor](#cstockpropimpl__get_backcolor)"},{"content":"Call this method to get the control's background color.","pos":[2342,2397]},{"pos":[2402,2449],"content":"<bpt id=\"p1\">[</bpt>get_BackStyle<ept id=\"p1\">](#cstockpropimpl__get_backstyle)</ept>","source":"[get_BackStyle](#cstockpropimpl__get_backstyle)"},{"content":"Call this method to get the control's background style, either transparent or opaque.","pos":[2450,2535]},{"pos":[2540,2591],"content":"<bpt id=\"p1\">[</bpt>get_BorderColor<ept id=\"p1\">](#cstockpropimpl__get_bordercolor)</ept>","source":"[get_BorderColor](#cstockpropimpl__get_bordercolor)"},{"content":"Call this method to get the control's border color.","pos":[2592,2643]},{"pos":[2648,2699],"content":"<bpt id=\"p1\">[</bpt>get_BorderStyle<ept id=\"p1\">](#cstockpropimpl__get_borderstyle)</ept>","source":"[get_BorderStyle](#cstockpropimpl__get_borderstyle)"},{"content":"Call this method to get the control's border style.","pos":[2700,2751]},{"pos":[2756,2811],"content":"<bpt id=\"p1\">[</bpt>get_BorderVisible<ept id=\"p1\">](#cstockpropimpl__get_bordervisible)</ept>","source":"[get_BorderVisible](#cstockpropimpl__get_bordervisible)"},{"content":"Call this method to get the status of the flag that indicates if the control's border is visible or not.","pos":[2812,2916]},{"pos":[2921,2972],"content":"<bpt id=\"p1\">[</bpt>get_BorderWidth<ept id=\"p1\">](#cstockpropimpl__get_borderwidth)</ept>","source":"[get_BorderWidth](#cstockpropimpl__get_borderwidth)"},{"content":"Call this method to get the width (in pixels) of the control's border.","pos":[2973,3043]},{"pos":[3048,3091],"content":"<bpt id=\"p1\">[</bpt>get_Caption<ept id=\"p1\">](#cstockpropimpl__get_caption)</ept>","source":"[get_Caption](#cstockpropimpl__get_caption)"},{"content":"Call this method to get the text specified in an object's caption.","pos":[3092,3158]},{"pos":[3163,3208],"content":"<bpt id=\"p1\">[</bpt>get_DrawMode<ept id=\"p1\">](#cstockpropimpl__get_drawmode)</ept>","source":"[get_DrawMode](#cstockpropimpl__get_drawmode)"},{"content":"Call this method to get the control's drawing mode, for example, XOR Pen or Invert Colors.","pos":[3209,3299]},{"pos":[3304,3351],"content":"<bpt id=\"p1\">[</bpt>get_DrawStyle<ept id=\"p1\">](#cstockpropimpl__get_drawstyle)</ept>","source":"[get_DrawStyle](#cstockpropimpl__get_drawstyle)"},{"content":"Call this method to get the control's drawing style, for example, solid, dashed, or dotted.","pos":[3352,3443]},{"pos":[3448,3495],"content":"<bpt id=\"p1\">[</bpt>get_DrawWidth<ept id=\"p1\">](#cstockpropimpl__get_drawwidth)</ept>","source":"[get_DrawWidth](#cstockpropimpl__get_drawwidth)"},{"content":"Call this method to get the drawing width (in pixels) used by the control's drawing methods.","pos":[3496,3588]},{"pos":[3593,3636],"content":"<bpt id=\"p1\">[</bpt>get_Enabled<ept id=\"p1\">](#cstockpropimpl__get_enabled)</ept>","source":"[get_Enabled](#cstockpropimpl__get_enabled)"},{"content":"Call this method to get the status of the flag that indicates if the control is enabled.","pos":[3637,3725]},{"pos":[3730,3777],"content":"<bpt id=\"p1\">[</bpt>get_FillColor<ept id=\"p1\">](#cstockpropimpl__get_fillcolor)</ept>","source":"[get_FillColor](#cstockpropimpl__get_fillcolor)"},{"content":"Call this method to get the control's fill color.","pos":[3778,3827]},{"pos":[3832,3879],"content":"<bpt id=\"p1\">[</bpt>get_FillStyle<ept id=\"p1\">](#cstockpropimpl__get_fillstyle)</ept>","source":"[get_FillStyle](#cstockpropimpl__get_fillstyle)"},{"content":"Call this method to get the control's fill style, for example, solid, transparent, or cross-hatched.","pos":[3880,3980]},{"pos":[3985,4022],"content":"<bpt id=\"p1\">[</bpt>get_Font<ept id=\"p1\">](#cstockpropimpl__get_font)</ept>","source":"[get_Font](#cstockpropimpl__get_font)"},{"content":"Call this method to get a pointer to the control's font properties.","pos":[4023,4090]},{"pos":[4095,4142],"content":"<bpt id=\"p1\">[</bpt>get_ForeColor<ept id=\"p1\">](#cstockpropimpl__get_forecolor)</ept>","source":"[get_ForeColor](#cstockpropimpl__get_forecolor)"},{"content":"Call this method to get the control's foreground color.","pos":[4143,4198]},{"pos":[4203,4240],"content":"<bpt id=\"p1\">[</bpt>get_HWND<ept id=\"p1\">](#cstockpropimpl__get_hwnd)</ept>","source":"[get_HWND](#cstockpropimpl__get_hwnd)"},{"content":"Call this method to get the window handle associated with the control.","pos":[4241,4311]},{"pos":[4316,4363],"content":"<bpt id=\"p1\">[</bpt>get_MouseIcon<ept id=\"p1\">](#cstockpropimpl__get_mouseicon)</ept>","source":"[get_MouseIcon](#cstockpropimpl__get_mouseicon)"},{"content":"Call this method to get the picture properties of the graphic (icon, bitmap, or metafile) to be displayed when the mouse is over the control.","pos":[4364,4505]},{"pos":[4510,4563],"content":"<bpt id=\"p1\">[</bpt>get_MousePointer<ept id=\"p1\">](#cstockpropimpl__get_mousepointer)</ept>","source":"[get_MousePointer](#cstockpropimpl__get_mousepointer)"},{"content":"Call this method to get the type of mouse pointer displayed when the mouse is over the control, for example, arrow, cross, or hourglass.","pos":[4564,4700]},{"pos":[4705,4748],"content":"<bpt id=\"p1\">[</bpt>get_Picture<ept id=\"p1\">](#cstockpropimpl__get_picture)</ept>","source":"[get_Picture](#cstockpropimpl__get_picture)"},{"content":"Call this method to get a pointer to the picture properties of a graphic (icon, bitmap, or metafile) to be displayed.","pos":[4749,4866]},{"pos":[4871,4920],"content":"<bpt id=\"p1\">[</bpt>get_ReadyState<ept id=\"p1\">](#cstockpropimpl__get_readystate)</ept>","source":"[get_ReadyState](#cstockpropimpl__get_readystate)"},{"content":"Call this method to get the control's ready state, for example, loading or loaded.","pos":[4921,5003]},{"pos":[5008,5051],"content":"<bpt id=\"p1\">[</bpt>get_TabStop<ept id=\"p1\">](#cstockpropimpl__get_tabstop)</ept>","source":"[get_TabStop](#cstockpropimpl__get_tabstop)"},{"content":"Call this method to get the flag that indicates if the control is a tab stop or not.","pos":[5052,5136]},{"pos":[5141,5178],"content":"<bpt id=\"p1\">[</bpt>get_Text<ept id=\"p1\">](#cstockpropimpl__get_text)</ept>","source":"[get_Text](#cstockpropimpl__get_text)"},{"content":"Call this method to get the text that is displayed with the control.","pos":[5179,5247]},{"pos":[5252,5290],"content":"<bpt id=\"p1\">[</bpt>getvalid<ept id=\"p1\">](#cstockpropimpl__get_valid)</ept>","source":"[getvalid](#cstockpropimpl__get_valid)"},{"content":"Call this method to get the status of the flag that indicates if the control is valid or not.","pos":[5291,5384]},{"pos":[5389,5430],"content":"<bpt id=\"p1\">[</bpt>get_Window<ept id=\"p1\">](#cstockpropimpl__get_window)</ept>","source":"[get_Window](#cstockpropimpl__get_window)"},{"content":"Call this method to get the window handle associated with the control.","pos":[5431,5501]},{"content":"Identical to <bpt id=\"p1\">[</bpt>CStockPropImpl::get_HWND<ept id=\"p1\">](#cstockpropimpl__get_hwnd)</ept>.","pos":[5502,5569],"source":" Identical to [CStockPropImpl::get_HWND](#cstockpropimpl__get_hwnd)."},{"pos":[5574,5623],"content":"<bpt id=\"p1\">[</bpt>put_Appearance<ept id=\"p1\">](#cstockpropimpl__put_appearance)</ept>","source":"[put_Appearance](#cstockpropimpl__put_appearance)"},{"content":"Call this method to set the paint style used by the control, for example, flat or 3D.","pos":[5624,5709]},{"pos":[5714,5759],"content":"<bpt id=\"p1\">[</bpt>put_AutoSize<ept id=\"p1\">](#cstockpropimpl__put_autosize)</ept>","source":"[put_AutoSize](#cstockpropimpl__put_autosize)"},{"content":"Call this method to set the value of the flag that indicates if the control cannot be any other size.","pos":[5760,5861]},{"pos":[5866,5913],"content":"<bpt id=\"p1\">[</bpt>put_BackColor<ept id=\"p1\">](#cstockpropimpl__put_backcolor)</ept>","source":"[put_BackColor](#cstockpropimpl__put_backcolor)"},{"content":"Call this method to set the control's background color.","pos":[5914,5969]},{"pos":[5974,6021],"content":"<bpt id=\"p1\">[</bpt>put_BackStyle<ept id=\"p1\">](#cstockpropimpl__put_backstyle)</ept>","source":"[put_BackStyle](#cstockpropimpl__put_backstyle)"},{"content":"Call this method to set the control's background style.","pos":[6022,6077]},{"pos":[6082,6133],"content":"<bpt id=\"p1\">[</bpt>put_BorderColor<ept id=\"p1\">](#cstockpropimpl__put_bordercolor)</ept>","source":"[put_BorderColor](#cstockpropimpl__put_bordercolor)"},{"content":"Call this method to set the control's border color.","pos":[6134,6185]},{"pos":[6190,6241],"content":"<bpt id=\"p1\">[</bpt>put_BorderStyle<ept id=\"p1\">](#cstockpropimpl__put_borderstyle)</ept>","source":"[put_BorderStyle](#cstockpropimpl__put_borderstyle)"},{"content":"Call this method to set the control's border style.","pos":[6242,6293]},{"pos":[6298,6353],"content":"<bpt id=\"p1\">[</bpt>put_BorderVisible<ept id=\"p1\">](#cstockpropimpl__put_bordervisible)</ept>","source":"[put_BorderVisible](#cstockpropimpl__put_bordervisible)"},{"content":"Call this method to set the value of the flag that indicates if the control's border is visible or not.","pos":[6354,6457]},{"pos":[6462,6513],"content":"<bpt id=\"p1\">[</bpt>put_BorderWidth<ept id=\"p1\">](#cstockpropimpl__put_borderwidth)</ept>","source":"[put_BorderWidth](#cstockpropimpl__put_borderwidth)"},{"content":"Call this method to set the width of the control's border.","pos":[6514,6572]},{"pos":[6577,6620],"content":"<bpt id=\"p1\">[</bpt>put_Caption<ept id=\"p1\">](#cstockpropimpl__put_caption)</ept>","source":"[put_Caption](#cstockpropimpl__put_caption)"},{"content":"Call this method to set the text to be displayed with the control.","pos":[6621,6687]},{"pos":[6692,6737],"content":"<bpt id=\"p1\">[</bpt>put_DrawMode<ept id=\"p1\">](#cstockpropimpl__put_drawmode)</ept>","source":"[put_DrawMode](#cstockpropimpl__put_drawmode)"},{"content":"Call this method to set the control's drawing mode, for example, XOR Pen or Invert Colors.","pos":[6738,6828]},{"pos":[6833,6880],"content":"<bpt id=\"p1\">[</bpt>put_DrawStyle<ept id=\"p1\">](#cstockpropimpl__put_drawstyle)</ept>","source":"[put_DrawStyle](#cstockpropimpl__put_drawstyle)"},{"content":"Call this method to set the control's drawing style, for example, solid, dashed, or dotted.","pos":[6881,6972]},{"pos":[6977,7024],"content":"<bpt id=\"p1\">[</bpt>put_DrawWidth<ept id=\"p1\">](#cstockpropimpl__put_drawwidth)</ept>","source":"[put_DrawWidth](#cstockpropimpl__put_drawwidth)"},{"content":"Call this method to set the width (in pixels) used by the control's drawing methods.","pos":[7025,7109]},{"pos":[7114,7157],"content":"<bpt id=\"p1\">[</bpt>put_Enabled<ept id=\"p1\">](#cstockpropimpl__put_enabled)</ept>","source":"[put_Enabled](#cstockpropimpl__put_enabled)"},{"content":"Call this method to set the flag that indicates if the control is enabled.","pos":[7158,7232]},{"pos":[7237,7284],"content":"<bpt id=\"p1\">[</bpt>put_FillColor<ept id=\"p1\">](#cstockpropimpl__put_fillcolor)</ept>","source":"[put_FillColor](#cstockpropimpl__put_fillcolor)"},{"content":"Call this method to set the control's fill color.","pos":[7285,7334]},{"pos":[7339,7386],"content":"<bpt id=\"p1\">[</bpt>put_FillStyle<ept id=\"p1\">](#cstockpropimpl__put_fillstyle)</ept>","source":"[put_FillStyle](#cstockpropimpl__put_fillstyle)"},{"content":"Call this method to set the control's fill style, for example, solid, transparent, or cross-hatched.","pos":[7387,7487]},{"pos":[7492,7529],"content":"<bpt id=\"p1\">[</bpt>put_Font<ept id=\"p1\">](#cstockpropimpl__put_font)</ept>","source":"[put_Font](#cstockpropimpl__put_font)"},{"content":"Call this method to set the control's font properties.","pos":[7530,7584]},{"pos":[7589,7636],"content":"<bpt id=\"p1\">[</bpt>put_ForeColor<ept id=\"p1\">](#cstockpropimpl__put_forecolor)</ept>","source":"[put_ForeColor](#cstockpropimpl__put_forecolor)"},{"content":"Call this method to set the control's foreground color.","pos":[7637,7692]},{"pos":[7697,7734],"content":"<bpt id=\"p1\">[</bpt>put_HWND<ept id=\"p1\">](#cstockpropimpl__put_hwnd)</ept>","source":"[put_HWND](#cstockpropimpl__put_hwnd)"},{"content":"This method returns E_FAIL.","pos":[7735,7762]},{"pos":[7767,7814],"content":"<bpt id=\"p1\">[</bpt>put_MouseIcon<ept id=\"p1\">](#cstockpropimpl__put_mouseicon)</ept>","source":"[put_MouseIcon](#cstockpropimpl__put_mouseicon)"},{"content":"Call this method to set the picture properties of the graphic (icon, bitmap, or metafile) to be displayed when the mouse is over the control.","pos":[7815,7956]},{"pos":[7961,8014],"content":"<bpt id=\"p1\">[</bpt>put_MousePointer<ept id=\"p1\">](#cstockpropimpl__put_mousepointer)</ept>","source":"[put_MousePointer](#cstockpropimpl__put_mousepointer)"},{"content":"Call this method to set the type of mouse pointer displayed when the mouse is over the control, for example, arrow, cross, or hourglass.","pos":[8015,8151]},{"pos":[8156,8199],"content":"<bpt id=\"p1\">[</bpt>put_Picture<ept id=\"p1\">](#cstockpropimpl__put_picture)</ept>","source":"[put_Picture](#cstockpropimpl__put_picture)"},{"content":"Call this method to set the picture properties of a graphic (icon, bitmap, or metafile) to be displayed.","pos":[8200,8304]},{"pos":[8309,8358],"content":"<bpt id=\"p1\">[</bpt>put_ReadyState<ept id=\"p1\">](#cstockpropimpl__put_readystate)</ept>","source":"[put_ReadyState](#cstockpropimpl__put_readystate)"},{"content":"Call this method to set the control's ready state, for example, loading or loaded.","pos":[8359,8441]},{"pos":[8446,8489],"content":"<bpt id=\"p1\">[</bpt>put_TabStop<ept id=\"p1\">](#cstockpropimpl__put_tabstop)</ept>","source":"[put_TabStop](#cstockpropimpl__put_tabstop)"},{"content":"Call this method to set the value of the flag that indicates if the control is a tab stop or not.","pos":[8490,8587]},{"pos":[8592,8629],"content":"<bpt id=\"p1\">[</bpt>put_Text<ept id=\"p1\">](#cstockpropimpl__put_text)</ept>","source":"[put_Text](#cstockpropimpl__put_text)"},{"content":"Call this method to set the text that is displayed with the control.","pos":[8630,8698]},{"pos":[8703,8741],"content":"<bpt id=\"p1\">[</bpt>putvalid<ept id=\"p1\">](#cstockpropimpl__put_valid)</ept>","source":"[putvalid](#cstockpropimpl__put_valid)"},{"content":"Call this method to set the flag that indicates if the control is valid or not.","pos":[8742,8821]},{"pos":[8826,8867],"content":"<bpt id=\"p1\">[</bpt>put_Window<ept id=\"p1\">](#cstockpropimpl__put_window)</ept>","source":"[put_Window](#cstockpropimpl__put_window)"},{"pos":[8868,8962],"content":"This method calls <bpt id=\"p1\">[</bpt>CStockPropImpl::put_HWND<ept id=\"p1\">](#cstockpropimpl__put_hwnd)</ept>, which returns E_FAIL.","source":"This method calls [CStockPropImpl::put_HWND](#cstockpropimpl__put_hwnd), which returns E_FAIL."},{"pos":[8967,9010],"content":"<bpt id=\"p1\">[</bpt>putref_Font<ept id=\"p1\">](#cstockpropimpl__putref_font)</ept>","source":"[putref_Font](#cstockpropimpl__putref_font)"},{"content":"Call this method to set the control's font properties, with a reference count.","pos":[9011,9089]},{"pos":[9094,9147],"content":"<bpt id=\"p1\">[</bpt>putref_MouseIcon<ept id=\"p1\">](#cstockpropimpl__putref_mouseicon)</ept>","source":"[putref_MouseIcon](#cstockpropimpl__putref_mouseicon)"},{"content":"Call this method to set the picture properties of the graphic (icon, bitmap, or metafile) to be displayed when the mouse is over the control, with a reference count.","pos":[9148,9313]},{"pos":[9318,9367],"content":"<bpt id=\"p1\">[</bpt>putref_Picture<ept id=\"p1\">](#cstockpropimpl__putref_picture)</ept>","source":"[putref_Picture](#cstockpropimpl__putref_picture)"},{"content":"Call this method to set the picture properties of a graphic (icon, bitmap, or metafile) to be displayed, with a reference count.","pos":[9368,9496]},{"pos":[9506,9513],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"<ph id=\"ph1\">`CStockPropImpl`</ph> provides <bpt id=\"p1\">**</bpt>put<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>get<ept id=\"p2\">**</ept> methods for each stock property.","pos":[9517,9595],"source":"`CStockPropImpl` provides **put** and **get** methods for each stock property."},{"content":"These methods provide the code necessary to set or get the data member associated with each property and to notify and synchronize with the container when any property changes.","pos":[9596,9772]},{"content":"Visual C++ provides support for stock properties through its wizards.","pos":[9779,9848]},{"content":"For more information about adding stock properties to a control, see the <bpt id=\"p1\">[</bpt>ATL Tutorial<ept id=\"p1\">](../../atl/active-template-library-atl-tutorial.md)</ept>.","pos":[9849,9988],"source":" For more information about adding stock properties to a control, see the [ATL Tutorial](../../atl/active-template-library-atl-tutorial.md)."},{"content":"For backward compatibility, <ph id=\"ph1\">`CStockPropImpl`</ph> also exposes <ph id=\"ph2\">`get_Window`</ph> and <ph id=\"ph3\">`put_Window`</ph> methods that simply call <ph id=\"ph4\">`get_HWND`</ph> and <ph id=\"ph5\">`put_HWND`</ph>, respectively.","pos":[9995,10148],"source":"For backward compatibility, `CStockPropImpl` also exposes `get_Window` and `put_Window` methods that simply call `get_HWND` and `put_HWND`, respectively."},{"content":"The default implementation of <ph id=\"ph1\">`put_HWND`</ph> returns <bpt id=\"p1\">**</bpt>E_FAIL<ept id=\"p1\">**</ept> since <ph id=\"ph2\">`HWND`</ph> should be a read-only property.","pos":[10149,10253],"source":" The default implementation of `put_HWND` returns **E_FAIL** since `HWND` should be a read-only property."},{"pos":[10260,10323],"content":"The following properties also have a <bpt id=\"p1\">**</bpt>putref<ept id=\"p1\">**</ept> implementation:","source":"The following properties also have a **putref** implementation:"},{"content":"Font","pos":[10333,10337]},{"content":"MouseIcon","pos":[10347,10356]},{"content":"Picture","pos":[10366,10373]},{"pos":[10380,10583],"content":"The same three stock properties require their corresponding data member to be of type <ph id=\"ph1\">`CComPtr`</ph> or some other class that provides correct interface reference counting by means of the assignment operator.","source":"The same three stock properties require their corresponding data member to be of type `CComPtr` or some other class that provides correct interface reference counting by means of the assignment operator."},{"pos":[10592,10613],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[10627,10686],"content":"<bpt id=\"p1\">[</bpt>IDispatchImpl<ept id=\"p1\">](../../atl/reference/idispatchimpl-class.md)</ept>","source":"[IDispatchImpl](../../atl/reference/idispatchimpl-class.md)"},{"pos":[10718,10730],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[10734,10754],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlctl.h","source":"**Header:** atlctl.h"},{"pos":[10764,10841],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__get_appearance\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::get_Appearance","linkify":"<a name=\"cstockpropimpl__get_appearance\"></a>  CStockPropImpl::get_Appearance","source":"<a name=\"cstockpropimpl__get_appearance\"></a>  CStockPropImpl::get_Appearance"},{"content":"Call this method to get the paint style used by the control, for example, flat or 3D.","pos":[10845,10930]},{"pos":[11015,11025],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>pnAppearance<ept id=\"p1\">*</ept>","pos":[11029,11043],"source":"*pnAppearance*"},{"content":"Variable that receives the control's paint style.","pos":[11047,11096]},{"pos":[11106,11118],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[11122,11178]},{"pos":[11188,11261],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__get_autosize\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::get_AutoSize","linkify":"<a name=\"cstockpropimpl__get_autosize\"></a>  CStockPropImpl::get_AutoSize","source":"<a name=\"cstockpropimpl__get_autosize\"></a>  CStockPropImpl::get_AutoSize"},{"content":"Call this method to get the status of the flag that indicates if the control cannot be any other size.","pos":[11265,11367]},{"pos":[11456,11466],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>pbAutoSize<ept id=\"p1\">*</ept>","pos":[11470,11482],"source":"*pbAutoSize*"},{"content":"Variable that receives the flag status.","pos":[11486,11525]},{"content":"TRUE indicates that the control cannot be any other size.","pos":[11526,11583]},{"pos":[11593,11605],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[11609,11665]},{"pos":[11675,11750],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__get_backcolor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::get_BackColor","linkify":"<a name=\"cstockpropimpl__get_backcolor\"></a>  CStockPropImpl::get_BackColor","source":"<a name=\"cstockpropimpl__get_backcolor\"></a>  CStockPropImpl::get_BackColor"},{"content":"Call this method to get the control's background color.","pos":[11754,11809]},{"pos":[11899,11909],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>pclrBackColor<ept id=\"p1\">*</ept>","pos":[11913,11928],"source":"*pclrBackColor*"},{"content":"Variable that receives the control's background color.","pos":[11932,11986]},{"pos":[11996,12008],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[12012,12068]},{"pos":[12078,12153],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__get_backstyle\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::get_BackStyle","linkify":"<a name=\"cstockpropimpl__get_backstyle\"></a>  CStockPropImpl::get_BackStyle","source":"<a name=\"cstockpropimpl__get_backstyle\"></a>  CStockPropImpl::get_BackStyle"},{"content":"Call this method to get the control's background style, either transparent or opaque.","pos":[12157,12242]},{"pos":[12325,12335],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>pnBackStyle<ept id=\"p1\">*</ept>","pos":[12339,12352],"source":"*pnBackStyle*"},{"content":"Variable that receives the control's background style.","pos":[12356,12410]},{"pos":[12420,12432],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[12436,12492]},{"pos":[12502,12581],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__get_bordercolor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::get_BorderColor","linkify":"<a name=\"cstockpropimpl__get_bordercolor\"></a>  CStockPropImpl::get_BorderColor","source":"<a name=\"cstockpropimpl__get_bordercolor\"></a>  CStockPropImpl::get_BorderColor"},{"content":"Call this method to get the control's border color.","pos":[12585,12636]},{"pos":[12730,12740],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>pclrBorderColor<ept id=\"p1\">*</ept>","pos":[12744,12761],"source":"*pclrBorderColor*"},{"content":"Variable that receives the control's border color.","pos":[12765,12815]},{"pos":[12825,12837],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[12841,12897]},{"pos":[12907,12986],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__get_borderstyle\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::get_BorderStyle","linkify":"<a name=\"cstockpropimpl__get_borderstyle\"></a>  CStockPropImpl::get_BorderStyle","source":"<a name=\"cstockpropimpl__get_borderstyle\"></a>  CStockPropImpl::get_BorderStyle"},{"content":"Call this method to get the control's border style.","pos":[12990,13041]},{"pos":[13128,13138],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>pnBorderStyle<ept id=\"p1\">*</ept>","pos":[13142,13157],"source":"*pnBorderStyle*"},{"content":"Variable that receives the control's border style.","pos":[13161,13211]},{"pos":[13221,13233],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[13237,13293]},{"pos":[13303,13386],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__get_bordervisible\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::get_BorderVisible","linkify":"<a name=\"cstockpropimpl__get_bordervisible\"></a>  CStockPropImpl::get_BorderVisible","source":"<a name=\"cstockpropimpl__get_bordervisible\"></a>  CStockPropImpl::get_BorderVisible"},{"content":"Call this method to get the status of the flag that indicates if the control's border is visible or not.","pos":[13390,13494]},{"pos":[13593,13603],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>pbBorderVisible<ept id=\"p1\">*</ept>","pos":[13607,13624],"source":"*pbBorderVisible*"},{"content":"Variable that receives the flag status.","pos":[13628,13667]},{"content":"TRUE indicates that the control's border is visible.","pos":[13668,13720]},{"pos":[13730,13742],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[13746,13802]},{"pos":[13812,13891],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__get_borderwidth\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::get_BorderWidth","linkify":"<a name=\"cstockpropimpl__get_borderwidth\"></a>  CStockPropImpl::get_BorderWidth","source":"<a name=\"cstockpropimpl__get_borderwidth\"></a>  CStockPropImpl::get_BorderWidth"},{"content":"Call this method to get the width of the control's border.","pos":[13895,13953]},{"pos":[14040,14050],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>pnBorderWidth<ept id=\"p1\">*</ept>","pos":[14054,14069],"source":"*pnBorderWidth*"},{"content":"Variable that receives the control's border width.","pos":[14073,14123]},{"pos":[14133,14145],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[14149,14205]},{"pos":[14215,14286],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__get_caption\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::get_Caption","linkify":"<a name=\"cstockpropimpl__get_caption\"></a>  CStockPropImpl::get_Caption","source":"<a name=\"cstockpropimpl__get_caption\"></a>  CStockPropImpl::get_Caption"},{"content":"Call this method to get the text specified in an object's caption.","pos":[14290,14356]},{"pos":[14438,14448],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>pbstrCaption<ept id=\"p1\">*</ept>","pos":[14452,14466],"source":"*pbstrCaption*"},{"content":"The text to be displayed with the control.","pos":[14470,14512]},{"pos":[14522,14534],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[14538,14594]},{"pos":[14604,14677],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__get_drawmode\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::get_DrawMode","linkify":"<a name=\"cstockpropimpl__get_drawmode\"></a>  CStockPropImpl::get_DrawMode","source":"<a name=\"cstockpropimpl__get_drawmode\"></a>  CStockPropImpl::get_DrawMode"},{"content":"Call this method to get the control's drawing mode, for example, XOR Pen or Invert Colors.","pos":[14681,14771]},{"pos":[14852,14862],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>pnDrawMode<ept id=\"p1\">*</ept>","pos":[14866,14878],"source":"*pnDrawMode*"},{"content":"Variable that receives the control's drawing mode.","pos":[14882,14932]},{"pos":[14942,14954],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[14958,15014]},{"pos":[15024,15099],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__get_drawstyle\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::get_DrawStyle","linkify":"<a name=\"cstockpropimpl__get_drawstyle\"></a>  CStockPropImpl::get_DrawStyle","source":"<a name=\"cstockpropimpl__get_drawstyle\"></a>  CStockPropImpl::get_DrawStyle"},{"content":"Call this method to get the control's drawing style, for example, solid, dashed, or dotted.","pos":[15103,15194]},{"pos":[15277,15287],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>pnDrawStyle<ept id=\"p1\">*</ept>","pos":[15291,15304],"source":"*pnDrawStyle*"},{"content":"Variable that receives the control's drawing style.","pos":[15308,15359]},{"pos":[15369,15381],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[15385,15441]},{"pos":[15451,15526],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__get_drawwidth\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::get_DrawWidth","linkify":"<a name=\"cstockpropimpl__get_drawwidth\"></a>  CStockPropImpl::get_DrawWidth","source":"<a name=\"cstockpropimpl__get_drawwidth\"></a>  CStockPropImpl::get_DrawWidth"},{"content":"Call this method to get the drawing width (in pixels) used by the control's drawing methods.","pos":[15530,15622]},{"pos":[15705,15715],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>pnDrawWidth<ept id=\"p1\">*</ept>","pos":[15719,15732],"source":"*pnDrawWidth*"},{"content":"Variable that receives the control's width value, in pixels.","pos":[15736,15796]},{"pos":[15806,15818],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[15822,15878]},{"pos":[15888,15959],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__get_enabled\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::get_Enabled","linkify":"<a name=\"cstockpropimpl__get_enabled\"></a>  CStockPropImpl::get_Enabled","source":"<a name=\"cstockpropimpl__get_enabled\"></a>  CStockPropImpl::get_Enabled"},{"content":"Call this method to get the status of the flag that indicates if the control is enabled.","pos":[15963,16051]},{"pos":[16138,16148],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Variable that receives the flag status.","pos":[16167,16206]},{"content":"TRUE indicates that the control is enabled.","pos":[16207,16250]},{"pos":[16260,16272],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[16276,16332]},{"pos":[16342,16417],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__get_fillcolor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::get_FillColor","linkify":"<a name=\"cstockpropimpl__get_fillcolor\"></a>  CStockPropImpl::get_FillColor","source":"<a name=\"cstockpropimpl__get_fillcolor\"></a>  CStockPropImpl::get_FillColor"},{"content":"Call this method to get the control's fill color.","pos":[16421,16470]},{"pos":[16560,16570],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>pclrFillColor<ept id=\"p1\">*</ept>","pos":[16574,16589],"source":"*pclrFillColor*"},{"content":"Variable that receives the control's fill color.","pos":[16593,16641]},{"pos":[16651,16663],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[16667,16723]},{"pos":[16733,16808],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__get_fillstyle\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::get_FillStyle","linkify":"<a name=\"cstockpropimpl__get_fillstyle\"></a>  CStockPropImpl::get_FillStyle","source":"<a name=\"cstockpropimpl__get_fillstyle\"></a>  CStockPropImpl::get_FillStyle"},{"content":"Call this method to get the control's fill style, for example, solid, transparent, or crosshatched.","pos":[16812,16911]},{"pos":[16994,17004],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>pnFillStyle<ept id=\"p1\">*</ept>","pos":[17008,17021],"source":"*pnFillStyle*"},{"content":"Variable that receives the control's fill style.","pos":[17025,17073]},{"pos":[17083,17095],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[17099,17155]},{"pos":[17165,17230],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__get_font\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::get_Font","linkify":"<a name=\"cstockpropimpl__get_font\"></a>  CStockPropImpl::get_Font","source":"<a name=\"cstockpropimpl__get_font\"></a>  CStockPropImpl::get_Font"},{"content":"Call this method to get a pointer to the control's font properties.","pos":[17234,17301]},{"pos":[17380,17390],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Variable that receives a pointer to the control's font properties.","pos":[17406,17472]},{"pos":[17482,17494],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[17498,17554]},{"pos":[17564,17639],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__get_forecolor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::get_ForeColor","linkify":"<a name=\"cstockpropimpl__get_forecolor\"></a>  CStockPropImpl::get_ForeColor","source":"<a name=\"cstockpropimpl__get_forecolor\"></a>  CStockPropImpl::get_ForeColor"},{"content":"Call this method to get the control's foreground color.","pos":[17643,17698]},{"pos":[17788,17798],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>pclrForeColor<ept id=\"p1\">*</ept>","pos":[17802,17817],"source":"*pclrForeColor*"},{"content":"Variable that receives the controls foreground color.","pos":[17821,17874]},{"pos":[17884,17896],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[17900,17956]},{"pos":[17966,18031],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__get_hwnd\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::get_HWND","linkify":"<a name=\"cstockpropimpl__get_hwnd\"></a>  CStockPropImpl::get_HWND","source":"<a name=\"cstockpropimpl__get_hwnd\"></a>  CStockPropImpl::get_HWND"},{"content":"Call this method to get the window handle associated with the control.","pos":[18035,18105]},{"pos":[18181,18191],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The window handle associated with the control.","pos":[18206,18252]},{"pos":[18262,18274],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[18278,18334]},{"pos":[18344,18419],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__get_mouseicon\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::get_MouseIcon","linkify":"<a name=\"cstockpropimpl__get_mouseicon\"></a>  CStockPropImpl::get_MouseIcon","source":"<a name=\"cstockpropimpl__get_mouseicon\"></a>  CStockPropImpl::get_MouseIcon"},{"content":"Call this method to get the picture properties of the graphic (icon, bitmap, or metafile) to be displayed when the mouse is over the control.","pos":[18423,18564]},{"pos":[18654,18664],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Variable that receives a pointer to the picture properties of the graphic.","pos":[18683,18757]},{"pos":[18767,18779],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[18783,18839]},{"pos":[18849,18930],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__get_mousepointer\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::get_MousePointer","linkify":"<a name=\"cstockpropimpl__get_mousepointer\"></a>  CStockPropImpl::get_MousePointer","source":"<a name=\"cstockpropimpl__get_mousepointer\"></a>  CStockPropImpl::get_MousePointer"},{"content":"Call this method to get the type of mouse pointer displayed when the mouse is over the control, for example, arrow, cross, or hourglass.","pos":[18934,19070]},{"pos":[19159,19169],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>pnMousePointer<ept id=\"p1\">*</ept>","pos":[19173,19189],"source":"*pnMousePointer*"},{"content":"Variable that receives the type of mouse pointer.","pos":[19193,19242]},{"pos":[19252,19264],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[19268,19324]},{"pos":[19334,19405],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__get_picture\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::get_Picture","linkify":"<a name=\"cstockpropimpl__get_picture\"></a>  CStockPropImpl::get_Picture","source":"<a name=\"cstockpropimpl__get_picture\"></a>  CStockPropImpl::get_Picture"},{"content":"Call this method to get a pointer to the picture properties of a graphic (icon, bitmap, or metafile) to be displayed.","pos":[19409,19526]},{"pos":[19614,19624],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Variable that receives a pointer to the picture's properties.","pos":[19643,19704]},{"content":"See <bpt id=\"p1\">[</bpt>IPictureDisp<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms680762)</ept> for more details.","pos":[19705,19801],"source":" See [IPictureDisp](http://msdn.microsoft.com/library/windows/desktop/ms680762) for more details."},{"pos":[19811,19823],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[19827,19883]},{"pos":[19893,19970],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__get_readystate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::get_ReadyState","linkify":"<a name=\"cstockpropimpl__get_readystate\"></a>  CStockPropImpl::get_ReadyState","source":"<a name=\"cstockpropimpl__get_readystate\"></a>  CStockPropImpl::get_ReadyState"},{"content":"Call this method to get the control's ready state, for example, loading or loaded.","pos":[19974,20056]},{"pos":[20141,20151],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>pnReadyState<ept id=\"p1\">*</ept>","pos":[20155,20169],"source":"*pnReadyState*"},{"content":"Variable that receives the control's ready state.","pos":[20173,20222]},{"pos":[20232,20244],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[20248,20304]},{"pos":[20314,20385],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__get_tabstop\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::get_TabStop","linkify":"<a name=\"cstockpropimpl__get_tabstop\"></a>  CStockPropImpl::get_TabStop","source":"<a name=\"cstockpropimpl__get_tabstop\"></a>  CStockPropImpl::get_TabStop"},{"content":"Call this method to get the status of the flag that indicates if the control is a tab stop or not.","pos":[20389,20487]},{"pos":[20574,20584],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>pbTabStop<ept id=\"p1\">*</ept>","pos":[20588,20599],"source":"*pbTabStop*"},{"content":"Variable that receives the flag status.","pos":[20603,20642]},{"content":"TRUE indicates that the control is a tab stop.","pos":[20643,20689]},{"pos":[20699,20711],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[20715,20771]},{"pos":[20781,20846],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__get_text\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::get_Text","linkify":"<a name=\"cstockpropimpl__get_text\"></a>  CStockPropImpl::get_Text","source":"<a name=\"cstockpropimpl__get_text\"></a>  CStockPropImpl::get_Text"},{"content":"Call this method to get the text that is displayed with the control.","pos":[20850,20918]},{"pos":[20994,21004],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>pbstrText<ept id=\"p1\">*</ept>","pos":[21008,21019],"source":"*pbstrText*"},{"content":"The text that is displayed with the control.","pos":[21023,21067]},{"pos":[21077,21089],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[21093,21149]},{"pos":[21159,21225],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__get_valid\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::getvalid","linkify":"<a name=\"cstockpropimpl__get_valid\"></a>  CStockPropImpl::getvalid","source":"<a name=\"cstockpropimpl__get_valid\"></a>  CStockPropImpl::getvalid"},{"content":"Call this method to get the status of the flag that indicates if the control is valid or not.","pos":[21229,21322]},{"pos":[21404,21414],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>pbValid<ept id=\"p1\">*</ept>","pos":[21418,21427],"source":"*pbValid*"},{"content":"Variable that receives the flag status.","pos":[21431,21470]},{"content":"TRUE indicates that the control is valid.","pos":[21471,21512]},{"pos":[21522,21534],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[21538,21594]},{"pos":[21604,21673],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__get_window\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::get_Window","linkify":"<a name=\"cstockpropimpl__get_window\"></a>  CStockPropImpl::get_Window","source":"<a name=\"cstockpropimpl__get_window\"></a>  CStockPropImpl::get_Window"},{"content":"Call this method to get the window handle associated with the control.","pos":[21677,21747]},{"content":"Identical to <bpt id=\"p1\">[</bpt>CStockPropImpl::get_HWND<ept id=\"p1\">](#cstockpropimpl__get_hwnd)</ept>.","pos":[21748,21815],"source":" Identical to [CStockPropImpl::get_HWND](#cstockpropimpl__get_hwnd)."},{"pos":[21893,21903],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The window handle associated with the control.","pos":[21918,21964]},{"pos":[21974,21986],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[21990,22046]},{"pos":[22056,22133],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__put_appearance\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::put_Appearance","linkify":"<a name=\"cstockpropimpl__put_appearance\"></a>  CStockPropImpl::put_Appearance","source":"<a name=\"cstockpropimpl__put_appearance\"></a>  CStockPropImpl::put_Appearance"},{"content":"Call this method to set the paint style used by the control, for example, flat or 3D.","pos":[22137,22222]},{"pos":[22308,22318],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The new paint style to be used by the control.","pos":[22339,22385]},{"pos":[22395,22407],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[22411,22467]},{"pos":[22477,22550],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__put_autosize\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::put_AutoSize","linkify":"<a name=\"cstockpropimpl__put_autosize\"></a>  CStockPropImpl::put_AutoSize","source":"<a name=\"cstockpropimpl__put_autosize\"></a>  CStockPropImpl::put_AutoSize"},{"content":"Call this method to set the value of flag that indicates if the control cannot be any other size.","pos":[22554,22651]},{"pos":[22739,22749],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>bAutoSize<ept id=\"p1\">*</ept>","pos":[22753,22764],"source":"*bAutoSize*"},{"content":"TRUE if the control cannot be any other size.","pos":[22768,22813]},{"pos":[22823,22835],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[22839,22895]},{"pos":[22905,22980],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__put_backcolor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::put_BackColor","linkify":"<a name=\"cstockpropimpl__put_backcolor\"></a>  CStockPropImpl::put_BackColor","source":"<a name=\"cstockpropimpl__put_backcolor\"></a>  CStockPropImpl::put_BackColor"},{"content":"Call this method to set the control's background color.","pos":[22984,23039]},{"pos":[23127,23137],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>clrBackColor<ept id=\"p1\">*</ept>","pos":[23141,23155],"source":"*clrBackColor*"},{"content":"The new control background color.","pos":[23159,23192]},{"pos":[23202,23214],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[23218,23274]},{"pos":[23284,23359],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__put_backstyle\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::put_BackStyle","linkify":"<a name=\"cstockpropimpl__put_backstyle\"></a>  CStockPropImpl::put_BackStyle","source":"<a name=\"cstockpropimpl__put_backstyle\"></a>  CStockPropImpl::put_BackStyle"},{"content":"Call this method to set the control's background style.","pos":[23363,23418]},{"pos":[23499,23509],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>nBackStyle<ept id=\"p1\">*</ept>","pos":[23513,23525],"source":"*nBackStyle*"},{"content":"The new control background style.","pos":[23529,23562]},{"pos":[23572,23584],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[23588,23644]},{"pos":[23654,23733],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__put_bordercolor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::put_BorderColor","linkify":"<a name=\"cstockpropimpl__put_bordercolor\"></a>  CStockPropImpl::put_BorderColor","source":"<a name=\"cstockpropimpl__put_bordercolor\"></a>  CStockPropImpl::put_BorderColor"},{"content":"Call this method to set the control's border color.","pos":[23737,23788]},{"pos":[23880,23890],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>clrBorderColor<ept id=\"p1\">*</ept>","pos":[23894,23910],"source":"*clrBorderColor*"},{"content":"The new border color.","pos":[23914,23935]},{"content":"The OLE_COLOR data type is internally represented as a 32-bit long integer.","pos":[23936,24011]},{"pos":[24021,24033],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[24037,24093]},{"pos":[24103,24182],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__put_borderstyle\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::put_BorderStyle","linkify":"<a name=\"cstockpropimpl__put_borderstyle\"></a>  CStockPropImpl::put_BorderStyle","source":"<a name=\"cstockpropimpl__put_borderstyle\"></a>  CStockPropImpl::put_BorderStyle"},{"content":"Call this method to set the control's border style.","pos":[24186,24237]},{"pos":[24322,24332],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>nBorderStyle<ept id=\"p1\">*</ept>","pos":[24336,24350],"source":"*nBorderStyle*"},{"content":"The new border style.","pos":[24354,24375]},{"pos":[24385,24397],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[24401,24457]},{"pos":[24467,24550],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__put_bordervisible\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::put_BorderVisible","linkify":"<a name=\"cstockpropimpl__put_bordervisible\"></a>  CStockPropImpl::put_BorderVisible","source":"<a name=\"cstockpropimpl__put_bordervisible\"></a>  CStockPropImpl::put_BorderVisible"},{"content":"Call this method to set the value of the flag that indicates if the control's border is visible or not.","pos":[24554,24657]},{"pos":[24754,24764],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>bBorderVisible<ept id=\"p1\">*</ept>","pos":[24768,24784],"source":"*bBorderVisible*"},{"content":"TRUE if the border is to be visible.","pos":[24788,24824]},{"pos":[24834,24846],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[24850,24906]},{"pos":[24916,24995],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__put_borderwidth\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::put_BorderWidth","linkify":"<a name=\"cstockpropimpl__put_borderwidth\"></a>  CStockPropImpl::put_BorderWidth","source":"<a name=\"cstockpropimpl__put_borderwidth\"></a>  CStockPropImpl::put_BorderWidth"},{"content":"Call this method to set the width of the control's border.","pos":[24999,25057]},{"pos":[25142,25152],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The new width of the control's border.","pos":[25174,25212]},{"pos":[25222,25234],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[25238,25294]},{"pos":[25304,25375],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__put_caption\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::put_Caption","linkify":"<a name=\"cstockpropimpl__put_caption\"></a>  CStockPropImpl::put_Caption","source":"<a name=\"cstockpropimpl__put_caption\"></a>  CStockPropImpl::put_Caption"},{"content":"Call this method to set the text to be displayed with the control.","pos":[25379,25445]},{"pos":[25525,25535],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>bstrCaption<ept id=\"p1\">*</ept>","pos":[25539,25552],"source":"*bstrCaption*"},{"content":"The text to be displayed with the control.","pos":[25556,25598]},{"pos":[25608,25620],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[25624,25680]},{"pos":[25690,25763],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__put_drawmode\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::put_DrawMode","linkify":"<a name=\"cstockpropimpl__put_drawmode\"></a>  CStockPropImpl::put_DrawMode","source":"<a name=\"cstockpropimpl__put_drawmode\"></a>  CStockPropImpl::put_DrawMode"},{"content":"Call this method to set the control's drawing mode, for example, XOR Pen or Invert Colors.","pos":[25767,25857]},{"pos":[25936,25946],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The new drawing mode for the control.","pos":[25965,26002]},{"pos":[26012,26024],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[26028,26084]},{"pos":[26094,26169],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__put_drawstyle\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::put_DrawStyle","linkify":"<a name=\"cstockpropimpl__put_drawstyle\"></a>  CStockPropImpl::put_DrawStyle","source":"<a name=\"cstockpropimpl__put_drawstyle\"></a>  CStockPropImpl::put_DrawStyle"},{"content":"Call this method to set the control's drawing style, for example, solid, dashed, or dotted.","pos":[26173,26264]},{"pos":[26346,26356],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>nDrawStyle<ept id=\"p1\">*</ept>","pos":[26360,26372],"source":"*nDrawStyle*"},{"content":"The new drawing style for the control.","pos":[26376,26414]},{"pos":[26424,26436],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[26440,26496]},{"pos":[26506,26581],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__put_drawwidth\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::put_DrawWidth","linkify":"<a name=\"cstockpropimpl__put_drawwidth\"></a>  CStockPropImpl::put_DrawWidth","source":"<a name=\"cstockpropimpl__put_drawwidth\"></a>  CStockPropImpl::put_DrawWidth"},{"content":"Call this method to set the width (in pixels) used by the control's drawing methods.","pos":[26585,26669]},{"pos":[26750,26760],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>nDrawWidth<ept id=\"p1\">*</ept>","pos":[26764,26776],"source":"*nDrawWidth*"},{"content":"The new width to be used by the control's drawing methods.","pos":[26780,26838]},{"pos":[26848,26860],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[26864,26920]},{"pos":[26930,27001],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__put_enabled\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::put_Enabled","linkify":"<a name=\"cstockpropimpl__put_enabled\"></a>  CStockPropImpl::put_Enabled","source":"<a name=\"cstockpropimpl__put_enabled\"></a>  CStockPropImpl::put_Enabled"},{"content":"Call this method to set the value of the flag that indicates if the control is enabled.","pos":[27005,27092]},{"pos":[27177,27187],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"TRUE if the control is enabled.","pos":[27205,27236]},{"pos":[27246,27258],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[27262,27318]},{"pos":[27328,27403],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__put_fillcolor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::put_FillColor","linkify":"<a name=\"cstockpropimpl__put_fillcolor\"></a>  CStockPropImpl::put_FillColor","source":"<a name=\"cstockpropimpl__put_fillcolor\"></a>  CStockPropImpl::put_FillColor"},{"content":"Call this method to set the control's fill color.","pos":[27407,27456]},{"pos":[27546,27556],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>clrFillColor<ept id=\"p1\">*</ept>","pos":[27560,27574],"source":"*clrFillColor*"},{"content":"The new fill color for the control.","pos":[27578,27613]},{"pos":[27623,27635],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[27639,27695]},{"pos":[27705,27780],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__put_fillstyle\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::put_FillStyle","linkify":"<a name=\"cstockpropimpl__put_fillstyle\"></a>  CStockPropImpl::put_FillStyle","source":"<a name=\"cstockpropimpl__put_fillstyle\"></a>  CStockPropImpl::put_FillStyle"},{"content":"Call this method to set the control's fill style, for example, solid, transparent, or cross-hatched.","pos":[27784,27884]},{"pos":[27965,27975],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>nFillStyle<ept id=\"p1\">*</ept>","pos":[27979,27991],"source":"*nFillStyle*"},{"content":"The new fill style for the control.","pos":[27995,28030]},{"pos":[28040,28052],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[28056,28112]},{"pos":[28122,28187],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__put_font\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::put_Font","linkify":"<a name=\"cstockpropimpl__put_font\"></a>  CStockPropImpl::put_Font","source":"<a name=\"cstockpropimpl__put_font\"></a>  CStockPropImpl::put_Font"},{"content":"Call this method to set the control's font properties.","pos":[28191,28245]},{"pos":[28322,28332],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to the control's font properties.","pos":[28347,28390]},{"pos":[28400,28412],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[28416,28472]},{"pos":[28482,28557],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__put_forecolor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::put_ForeColor","linkify":"<a name=\"cstockpropimpl__put_forecolor\"></a>  CStockPropImpl::put_ForeColor","source":"<a name=\"cstockpropimpl__put_forecolor\"></a>  CStockPropImpl::put_ForeColor"},{"content":"Call this method to set the control's foreground color.","pos":[28561,28616]},{"pos":[28704,28714],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>clrForeColor<ept id=\"p1\">*</ept>","pos":[28718,28732],"source":"*clrForeColor*"},{"content":"The new foreground color of the control.","pos":[28736,28776]},{"pos":[28786,28798],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[28802,28858]},{"pos":[28868,28933],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__put_hwnd\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::put_HWND","linkify":"<a name=\"cstockpropimpl__put_hwnd\"></a>  CStockPropImpl::put_HWND","source":"<a name=\"cstockpropimpl__put_hwnd\"></a>  CStockPropImpl::put_HWND"},{"content":"This method returns E_FAIL.","pos":[28937,28964]},{"pos":[29044,29054],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt><ph id=\"ph1\">/</ph><ph id=\"ph2\">\\*</ph> hWnd <ph id=\"ph3\">\\*</ph><ph id=\"ph4\">/</ph><ept id=\"p1\">*</ept>","pos":[29058,29072],"source":"*/\\* hWnd \\*/*"},{"content":"Reserved.","pos":[29076,29085]},{"pos":[29095,29107],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns E_FAIL.","pos":[29111,29126]},{"pos":[29136,29143],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The window handle is a read-only value.","pos":[29147,29186]},{"pos":[29196,29271],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__put_mouseicon\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::put_MouseIcon","linkify":"<a name=\"cstockpropimpl__put_mouseicon\"></a>  CStockPropImpl::put_MouseIcon","source":"<a name=\"cstockpropimpl__put_mouseicon\"></a>  CStockPropImpl::put_MouseIcon"},{"content":"Call this method to set the picture properties of the graphic (icon, bitmap, or metafile) to be displayed when the mouse is over the control.","pos":[29275,29416]},{"pos":[29504,29514],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to the picture properties of the graphic.","pos":[29532,29583]},{"pos":[29593,29605],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[29609,29665]},{"pos":[29675,29756],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__put_mousepointer\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::put_MousePointer","linkify":"<a name=\"cstockpropimpl__put_mousepointer\"></a>  CStockPropImpl::put_MousePointer","source":"<a name=\"cstockpropimpl__put_mousepointer\"></a>  CStockPropImpl::put_MousePointer"},{"content":"Call this method to set the type of mouse pointer displayed when the mouse is over the control, for example, arrow, cross, or hourglass.","pos":[29760,29896]},{"pos":[29983,29993],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>nMousePointer<ept id=\"p1\">*</ept>","pos":[29997,30012],"source":"*nMousePointer*"},{"content":"The type of mouse pointer.","pos":[30016,30042]},{"pos":[30052,30064],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[30068,30124]},{"pos":[30134,30205],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__put_picture\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::put_Picture","linkify":"<a name=\"cstockpropimpl__put_picture\"></a>  CStockPropImpl::put_Picture","source":"<a name=\"cstockpropimpl__put_picture\"></a>  CStockPropImpl::put_Picture"},{"content":"Call this method to set the picture properties of a graphic (icon, bitmap, or metafile) to be displayed.","pos":[30209,30313]},{"pos":[30399,30409],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to the picture's properties.","pos":[30427,30465]},{"content":"See <bpt id=\"p1\">[</bpt>IPictureDisp<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms680762)</ept> for more details.","pos":[30466,30562],"source":" See [IPictureDisp](http://msdn.microsoft.com/library/windows/desktop/ms680762) for more details."},{"pos":[30572,30584],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[30588,30644]},{"pos":[30654,30731],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__put_readystate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::put_ReadyState","linkify":"<a name=\"cstockpropimpl__put_readystate\"></a>  CStockPropImpl::put_ReadyState","source":"<a name=\"cstockpropimpl__put_readystate\"></a>  CStockPropImpl::put_ReadyState"},{"content":"Call this method to set the control's ready state, for example, loading or loaded.","pos":[30735,30817]},{"pos":[30900,30910],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>nReadyState<ept id=\"p1\">*</ept>","pos":[30914,30927],"source":"*nReadyState*"},{"content":"The control's ready state.","pos":[30931,30957]},{"pos":[30967,30979],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[30983,31039]},{"pos":[31049,31120],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__put_tabstop\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::put_TabStop","linkify":"<a name=\"cstockpropimpl__put_tabstop\"></a>  CStockPropImpl::put_TabStop","source":"<a name=\"cstockpropimpl__put_tabstop\"></a>  CStockPropImpl::put_TabStop"},{"content":"Call this method to set the flag that indicates if the control is a tab stop or not.","pos":[31124,31208]},{"pos":[31293,31303],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>bTabStop<ept id=\"p1\">*</ept>","pos":[31307,31317],"source":"*bTabStop*"},{"content":"TRUE if the control is a tab stop.","pos":[31321,31355]},{"pos":[31365,31377],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[31381,31437]},{"pos":[31447,31512],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__put_text\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::put_Text","linkify":"<a name=\"cstockpropimpl__put_text\"></a>  CStockPropImpl::put_Text","source":"<a name=\"cstockpropimpl__put_text\"></a>  CStockPropImpl::put_Text"},{"content":"Call this method to set the text that is displayed with the control.","pos":[31516,31584]},{"pos":[31658,31668],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The text that is displayed with the control.","pos":[31686,31730]},{"pos":[31740,31752],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[31756,31812]},{"pos":[31822,31888],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__put_valid\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::putvalid","linkify":"<a name=\"cstockpropimpl__put_valid\"></a>  CStockPropImpl::putvalid","source":"<a name=\"cstockpropimpl__put_valid\"></a>  CStockPropImpl::putvalid"},{"content":"Call this method to set the flag that indicates if the control is valid or not.","pos":[31892,31971]},{"pos":[32053,32063],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>bValid<ept id=\"p1\">*</ept>","pos":[32067,32075],"source":"*bValid*"},{"content":"TRUE if the control is valid.","pos":[32079,32108]},{"pos":[32118,32130],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[32134,32190]},{"pos":[32200,32269],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__put_window\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::put_Window","linkify":"<a name=\"cstockpropimpl__put_window\"></a>  CStockPropImpl::put_Window","source":"<a name=\"cstockpropimpl__put_window\"></a>  CStockPropImpl::put_Window"},{"pos":[32273,32367],"content":"This method calls <bpt id=\"p1\">[</bpt>CStockPropImpl::put_HWND<ept id=\"p1\">](#cstockpropimpl__put_hwnd)</ept>, which returns E_FAIL.","source":"This method calls [CStockPropImpl::put_HWND](#cstockpropimpl__put_hwnd), which returns E_FAIL."},{"pos":[32443,32453],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The window handle.","pos":[32467,32485]},{"pos":[32495,32507],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns E_FAIL.","pos":[32511,32526]},{"pos":[32536,32543],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The window handle is a read-only value.","pos":[32547,32586]},{"pos":[32596,32667],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__putref_font\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::putref_Font","linkify":"<a name=\"cstockpropimpl__putref_font\"></a>  CStockPropImpl::putref_Font","source":"<a name=\"cstockpropimpl__putref_font\"></a>  CStockPropImpl::putref_Font"},{"content":"Call this method to set the control's font properties, with a reference count.","pos":[32671,32749]},{"pos":[32829,32839],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to the control's font properties.","pos":[32854,32897]},{"pos":[32907,32919],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[32923,32979]},{"pos":[32989,32996],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[33000,33094],"content":"The same as <bpt id=\"p1\">[</bpt>CStockPropImpl::put_Font<ept id=\"p1\">](#cstockpropimpl__put_font)</ept>, but with a reference count.","source":"The same as [CStockPropImpl::put_Font](#cstockpropimpl__put_font), but with a reference count."},{"pos":[33104,33185],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__putref_mouseicon\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::putref_MouseIcon","linkify":"<a name=\"cstockpropimpl__putref_mouseicon\"></a>  CStockPropImpl::putref_MouseIcon","source":"<a name=\"cstockpropimpl__putref_mouseicon\"></a>  CStockPropImpl::putref_MouseIcon"},{"content":"Call this method to set the picture properties of the graphic (icon, bitmap, or metafile) to be displayed when the mouse is over the control, with a reference count.","pos":[33189,33354]},{"pos":[33445,33455],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to the picture properties of the graphic.","pos":[33473,33524]},{"pos":[33534,33546],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[33550,33606]},{"pos":[33616,33623],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[33627,33731],"content":"The same as <bpt id=\"p1\">[</bpt>CStockPropImpl::put_MouseIcon<ept id=\"p1\">](#cstockpropimpl__put_mouseicon)</ept>, but with a reference count.","source":"The same as [CStockPropImpl::put_MouseIcon](#cstockpropimpl__put_mouseicon), but with a reference count."},{"pos":[33741,33818],"content":"<bpt id=\"p1\">&lt;a name=\"cstockpropimpl__putref_picture\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStockPropImpl::putref_Picture","linkify":"<a name=\"cstockpropimpl__putref_picture\"></a>  CStockPropImpl::putref_Picture","source":"<a name=\"cstockpropimpl__putref_picture\"></a>  CStockPropImpl::putref_Picture"},{"content":"Call this method to set the picture properties of a graphic (icon, bitmap, or metafile) to be displayed, with a reference count.","pos":[33822,33950]},{"pos":[34039,34049],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to the picture's properties.","pos":[34067,34105]},{"content":"See <bpt id=\"p1\">[</bpt>IPictureDisp<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms680762)</ept> for more details.","pos":[34106,34202],"source":" See [IPictureDisp](http://msdn.microsoft.com/library/windows/desktop/ms680762) for more details."},{"pos":[34212,34224],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[34228,34284]},{"pos":[34294,34301],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[34305,34405],"content":"The same as <bpt id=\"p1\">[</bpt>CStockPropImpl::put_Picture<ept id=\"p1\">](#cstockpropimpl__put_picture)</ept>, but with a reference count.","source":"The same as [CStockPropImpl::put_Picture](#cstockpropimpl__put_picture), but with a reference count."},{"pos":[34414,34422],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Class Overview<ept id=\"p1\">](../../atl/atl-class-overview.md)</ept><ph id=\"ph1\"> </ph>","pos":[34426,34476],"source":"[Class Overview](../../atl/atl-class-overview.md) "},{"content":"<bpt id=\"p1\"> [</bpt>IDispatchImpl Class<ept id=\"p1\">](../../atl/reference/idispatchimpl-class.md)</ept>","pos":[34479,34545],"source":" [IDispatchImpl Class](../../atl/reference/idispatchimpl-class.md)"}],"content":"---\ntitle: \"CStockPropImpl Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CStockPropImpl\"\n  - \"ATL::CStockPropImpl\"\n  - \"ATL.CStockPropImpl\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CStockPropImpl class\"\n  - \"controls [ATL], stock properties\"\n  - \"stock properties, ATL controls\"\nms.assetid: 45f11d7d-6580-4a0e-872d-3bc8b836cfda\ncaps.latest.revision: 20\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CStockPropImpl Class\nThis class provides methods for supporting stock property values.  \n  \n> [!IMPORTANT]\n>  This class and its members cannot be used in applications that execute in the Windows Runtime.  \n  \n## Syntax  \n  \n```\ntemplate <class T, class InterfaceName,\n    const IID* piid = &_ATL_IIDOF(InterfaceName),\n    const GUID* plibid = &CComModule::m_libid,\n    WORD wMajor = 1,\n    WORD wMinor = 0, class tihclass = CcomTypeInfoHolder>  class ATL_NO_VTABLE CStockPropImpl :  public IDispatchImpl<InterfaceName,\n    piid,\n plibid,\n    wMajor,\n wMinor,\n    tihclass>\n```   \n  \n#### Parameters  \n `T`  \n The class implementing the control and deriving from `CStockPropImpl`.  \n  \n `InterfaceName`  \n A dual interface exposing the stock properties.  \n  \n `piid`  \n A pointer to the IID of `InterfaceName`.  \n  \n `plibid`  \n A pointer to the LIBID of the type library containing the definition of `InterfaceName`.  \n  \n `wMajor`  \n The major version of the type library. The default value is 1.  \n  \n `wMinor`  \n The minor version of the type library. The default value is 0.  \n  \n `tihclass`  \n The class used to manage the type information for `T`. The default value is `CComTypeInfoHolder`.  \n  \n## Members  \n  \n### Public Methods  \n  \n|||  \n|-|-|  \n|[get_Appearance](#cstockpropimpl__get_appearance)|Call this method to get the paint style used by the control, for example, flat or 3D.|  \n|[get_AutoSize](#cstockpropimpl__get_autosize)|Call this method to get the status of the flag that indicates if the control cannot be any other size.|  \n|[get_BackColor](#cstockpropimpl__get_backcolor)|Call this method to get the control's background color.|  \n|[get_BackStyle](#cstockpropimpl__get_backstyle)|Call this method to get the control's background style, either transparent or opaque.|  \n|[get_BorderColor](#cstockpropimpl__get_bordercolor)|Call this method to get the control's border color.|  \n|[get_BorderStyle](#cstockpropimpl__get_borderstyle)|Call this method to get the control's border style.|  \n|[get_BorderVisible](#cstockpropimpl__get_bordervisible)|Call this method to get the status of the flag that indicates if the control's border is visible or not.|  \n|[get_BorderWidth](#cstockpropimpl__get_borderwidth)|Call this method to get the width (in pixels) of the control's border.|  \n|[get_Caption](#cstockpropimpl__get_caption)|Call this method to get the text specified in an object's caption.|  \n|[get_DrawMode](#cstockpropimpl__get_drawmode)|Call this method to get the control's drawing mode, for example, XOR Pen or Invert Colors.|  \n|[get_DrawStyle](#cstockpropimpl__get_drawstyle)|Call this method to get the control's drawing style, for example, solid, dashed, or dotted.|  \n|[get_DrawWidth](#cstockpropimpl__get_drawwidth)|Call this method to get the drawing width (in pixels) used by the control's drawing methods.|  \n|[get_Enabled](#cstockpropimpl__get_enabled)|Call this method to get the status of the flag that indicates if the control is enabled.|  \n|[get_FillColor](#cstockpropimpl__get_fillcolor)|Call this method to get the control's fill color.|  \n|[get_FillStyle](#cstockpropimpl__get_fillstyle)|Call this method to get the control's fill style, for example, solid, transparent, or cross-hatched.|  \n|[get_Font](#cstockpropimpl__get_font)|Call this method to get a pointer to the control's font properties.|  \n|[get_ForeColor](#cstockpropimpl__get_forecolor)|Call this method to get the control's foreground color.|  \n|[get_HWND](#cstockpropimpl__get_hwnd)|Call this method to get the window handle associated with the control.|  \n|[get_MouseIcon](#cstockpropimpl__get_mouseicon)|Call this method to get the picture properties of the graphic (icon, bitmap, or metafile) to be displayed when the mouse is over the control.|  \n|[get_MousePointer](#cstockpropimpl__get_mousepointer)|Call this method to get the type of mouse pointer displayed when the mouse is over the control, for example, arrow, cross, or hourglass.|  \n|[get_Picture](#cstockpropimpl__get_picture)|Call this method to get a pointer to the picture properties of a graphic (icon, bitmap, or metafile) to be displayed.|  \n|[get_ReadyState](#cstockpropimpl__get_readystate)|Call this method to get the control's ready state, for example, loading or loaded.|  \n|[get_TabStop](#cstockpropimpl__get_tabstop)|Call this method to get the flag that indicates if the control is a tab stop or not.|  \n|[get_Text](#cstockpropimpl__get_text)|Call this method to get the text that is displayed with the control.|  \n|[getvalid](#cstockpropimpl__get_valid)|Call this method to get the status of the flag that indicates if the control is valid or not.|  \n|[get_Window](#cstockpropimpl__get_window)|Call this method to get the window handle associated with the control. Identical to [CStockPropImpl::get_HWND](#cstockpropimpl__get_hwnd).|  \n|[put_Appearance](#cstockpropimpl__put_appearance)|Call this method to set the paint style used by the control, for example, flat or 3D.|  \n|[put_AutoSize](#cstockpropimpl__put_autosize)|Call this method to set the value of the flag that indicates if the control cannot be any other size.|  \n|[put_BackColor](#cstockpropimpl__put_backcolor)|Call this method to set the control's background color.|  \n|[put_BackStyle](#cstockpropimpl__put_backstyle)|Call this method to set the control's background style.|  \n|[put_BorderColor](#cstockpropimpl__put_bordercolor)|Call this method to set the control's border color.|  \n|[put_BorderStyle](#cstockpropimpl__put_borderstyle)|Call this method to set the control's border style.|  \n|[put_BorderVisible](#cstockpropimpl__put_bordervisible)|Call this method to set the value of the flag that indicates if the control's border is visible or not.|  \n|[put_BorderWidth](#cstockpropimpl__put_borderwidth)|Call this method to set the width of the control's border.|  \n|[put_Caption](#cstockpropimpl__put_caption)|Call this method to set the text to be displayed with the control.|  \n|[put_DrawMode](#cstockpropimpl__put_drawmode)|Call this method to set the control's drawing mode, for example, XOR Pen or Invert Colors.|  \n|[put_DrawStyle](#cstockpropimpl__put_drawstyle)|Call this method to set the control's drawing style, for example, solid, dashed, or dotted.|  \n|[put_DrawWidth](#cstockpropimpl__put_drawwidth)|Call this method to set the width (in pixels) used by the control's drawing methods.|  \n|[put_Enabled](#cstockpropimpl__put_enabled)|Call this method to set the flag that indicates if the control is enabled.|  \n|[put_FillColor](#cstockpropimpl__put_fillcolor)|Call this method to set the control's fill color.|  \n|[put_FillStyle](#cstockpropimpl__put_fillstyle)|Call this method to set the control's fill style, for example, solid, transparent, or cross-hatched.|  \n|[put_Font](#cstockpropimpl__put_font)|Call this method to set the control's font properties.|  \n|[put_ForeColor](#cstockpropimpl__put_forecolor)|Call this method to set the control's foreground color.|  \n|[put_HWND](#cstockpropimpl__put_hwnd)|This method returns E_FAIL.|  \n|[put_MouseIcon](#cstockpropimpl__put_mouseicon)|Call this method to set the picture properties of the graphic (icon, bitmap, or metafile) to be displayed when the mouse is over the control.|  \n|[put_MousePointer](#cstockpropimpl__put_mousepointer)|Call this method to set the type of mouse pointer displayed when the mouse is over the control, for example, arrow, cross, or hourglass.|  \n|[put_Picture](#cstockpropimpl__put_picture)|Call this method to set the picture properties of a graphic (icon, bitmap, or metafile) to be displayed.|  \n|[put_ReadyState](#cstockpropimpl__put_readystate)|Call this method to set the control's ready state, for example, loading or loaded.|  \n|[put_TabStop](#cstockpropimpl__put_tabstop)|Call this method to set the value of the flag that indicates if the control is a tab stop or not.|  \n|[put_Text](#cstockpropimpl__put_text)|Call this method to set the text that is displayed with the control.|  \n|[putvalid](#cstockpropimpl__put_valid)|Call this method to set the flag that indicates if the control is valid or not.|  \n|[put_Window](#cstockpropimpl__put_window)|This method calls [CStockPropImpl::put_HWND](#cstockpropimpl__put_hwnd), which returns E_FAIL.|  \n|[putref_Font](#cstockpropimpl__putref_font)|Call this method to set the control's font properties, with a reference count.|  \n|[putref_MouseIcon](#cstockpropimpl__putref_mouseicon)|Call this method to set the picture properties of the graphic (icon, bitmap, or metafile) to be displayed when the mouse is over the control, with a reference count.|  \n|[putref_Picture](#cstockpropimpl__putref_picture)|Call this method to set the picture properties of a graphic (icon, bitmap, or metafile) to be displayed, with a reference count.|  \n  \n## Remarks  \n `CStockPropImpl` provides **put** and **get** methods for each stock property. These methods provide the code necessary to set or get the data member associated with each property and to notify and synchronize with the container when any property changes.  \n  \n Visual C++ provides support for stock properties through its wizards. For more information about adding stock properties to a control, see the [ATL Tutorial](../../atl/active-template-library-atl-tutorial.md).  \n  \n For backward compatibility, `CStockPropImpl` also exposes `get_Window` and `put_Window` methods that simply call `get_HWND` and `put_HWND`, respectively. The default implementation of `put_HWND` returns **E_FAIL** since `HWND` should be a read-only property.  \n  \n The following properties also have a **putref** implementation:  \n  \n-   Font  \n  \n-   MouseIcon  \n  \n-   Picture  \n  \n The same three stock properties require their corresponding data member to be of type `CComPtr` or some other class that provides correct interface reference counting by means of the assignment operator.  \n  \n## Inheritance Hierarchy  \n `T`  \n  \n [IDispatchImpl](../../atl/reference/idispatchimpl-class.md)  \n  \n `CStockPropImpl`  \n  \n## Requirements  \n **Header:** atlctl.h  \n  \n##  <a name=\"cstockpropimpl__get_appearance\"></a>  CStockPropImpl::get_Appearance  \n Call this method to get the paint style used by the control, for example, flat or 3D.  \n  \n```\nHRESULT STDMETHODCALLTYPE get_Appearance(SHORT pnAppearance);\n```  \n  \n### Parameters  \n *pnAppearance*  \n Variable that receives the control's paint style.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__get_autosize\"></a>  CStockPropImpl::get_AutoSize  \n Call this method to get the status of the flag that indicates if the control cannot be any other size.  \n  \n```\nHRESULT STDMETHODCALLTYPE get_Autosize(VARIANT_BOOL* pbAutoSize);\n```  \n  \n### Parameters  \n *pbAutoSize*  \n Variable that receives the flag status. TRUE indicates that the control cannot be any other size.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__get_backcolor\"></a>  CStockPropImpl::get_BackColor  \n Call this method to get the control's background color.  \n  \n```\nHRESULT STDMETHODCALLTYPE get_BackColor(OLE_COLOR* pclrBackColor);\n```  \n  \n### Parameters  \n *pclrBackColor*  \n Variable that receives the control's background color.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__get_backstyle\"></a>  CStockPropImpl::get_BackStyle  \n Call this method to get the control's background style, either transparent or opaque.  \n  \n```\nHRESULT STDMETHODCALLTYPE get_BackStyle(LONG* pnBackStyle);\n```  \n  \n### Parameters  \n *pnBackStyle*  \n Variable that receives the control's background style.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__get_bordercolor\"></a>  CStockPropImpl::get_BorderColor  \n Call this method to get the control's border color.  \n  \n```\nHRESULT STDMETHODCALLTYPE get_BorderColor(OLE_COLOR* pclrBorderColor);\n```  \n  \n### Parameters  \n *pclrBorderColor*  \n Variable that receives the control's border color.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__get_borderstyle\"></a>  CStockPropImpl::get_BorderStyle  \n Call this method to get the control's border style.  \n  \n```\nHRESULT STDMETHODCALLTYPE get_BorderStyle(LONG* pnBorderStyle);\n```  \n  \n### Parameters  \n *pnBorderStyle*  \n Variable that receives the control's border style.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__get_bordervisible\"></a>  CStockPropImpl::get_BorderVisible  \n Call this method to get the status of the flag that indicates if the control's border is visible or not.  \n  \n```\nHRESULT STDMETHODCALLTYPE get_BorderVisible(VARIANT_BOOL* pbBorderVisible);\n```  \n  \n### Parameters  \n *pbBorderVisible*  \n Variable that receives the flag status. TRUE indicates that the control's border is visible.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__get_borderwidth\"></a>  CStockPropImpl::get_BorderWidth  \n Call this method to get the width of the control's border.  \n  \n```\nHRESULT STDMETHODCALLTYPE get_BorderWidth(LONG* pnBorderWidth);\n```  \n  \n### Parameters  \n *pnBorderWidth*  \n Variable that receives the control's border width.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__get_caption\"></a>  CStockPropImpl::get_Caption  \n Call this method to get the text specified in an object's caption.  \n  \n```\nHRESULT STDMETHODCALLTYPE get_Caption(BSTR* pbstrCaption);\n```  \n  \n### Parameters  \n *pbstrCaption*  \n The text to be displayed with the control.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__get_drawmode\"></a>  CStockPropImpl::get_DrawMode  \n Call this method to get the control's drawing mode, for example, XOR Pen or Invert Colors.  \n  \n```\nHRESULT STDMETHODCALLTYPE get_DrawMode(LONG* pnDrawMode);\n```  \n  \n### Parameters  \n *pnDrawMode*  \n Variable that receives the control's drawing mode.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__get_drawstyle\"></a>  CStockPropImpl::get_DrawStyle  \n Call this method to get the control's drawing style, for example, solid, dashed, or dotted.  \n  \n```\nHRESULT STDMETHODCALLTYPE get_DrawStyle(LONG* pnDrawStyle);\n```  \n  \n### Parameters  \n *pnDrawStyle*  \n Variable that receives the control's drawing style.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__get_drawwidth\"></a>  CStockPropImpl::get_DrawWidth  \n Call this method to get the drawing width (in pixels) used by the control's drawing methods.  \n  \n```\nHRESULT STDMETHODCALLTYPE get_DrawWidth(LONG* pnDrawWidth);\n```  \n  \n### Parameters  \n *pnDrawWidth*  \n Variable that receives the control's width value, in pixels.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__get_enabled\"></a>  CStockPropImpl::get_Enabled  \n Call this method to get the status of the flag that indicates if the control is enabled.  \n  \n```\nHRESULT STDMETHODCALLTYPE get_Enabled(VARIANT_BOOL* pbEnabled);\n```  \n  \n### Parameters  \n `pbEnabled`  \n Variable that receives the flag status. TRUE indicates that the control is enabled.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__get_fillcolor\"></a>  CStockPropImpl::get_FillColor  \n Call this method to get the control's fill color.  \n  \n```\nHRESULT STDMETHODCALLTYPE get_FillColor(OLE_COLOR* pclrFillColor);\n```  \n  \n### Parameters  \n *pclrFillColor*  \n Variable that receives the control's fill color.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__get_fillstyle\"></a>  CStockPropImpl::get_FillStyle  \n Call this method to get the control's fill style, for example, solid, transparent, or crosshatched.  \n  \n```\nHRESULT STDMETHODCALLTYPE get_FillStyle(LONG* pnFillStyle);\n```  \n  \n### Parameters  \n *pnFillStyle*  \n Variable that receives the control's fill style.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__get_font\"></a>  CStockPropImpl::get_Font  \n Call this method to get a pointer to the control's font properties.  \n  \n```\nHRESULT STDMETHODCALLTYPE get_Font(IFontDisp** ppFont);\n```  \n  \n### Parameters  \n `ppFont`  \n Variable that receives a pointer to the control's font properties.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__get_forecolor\"></a>  CStockPropImpl::get_ForeColor  \n Call this method to get the control's foreground color.  \n  \n```\nHRESULT STDMETHODCALLTYPE get_ForeColor(OLE_COLOR* pclrForeColor);\n```  \n  \n### Parameters  \n *pclrForeColor*  \n Variable that receives the controls foreground color.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__get_hwnd\"></a>  CStockPropImpl::get_HWND  \n Call this method to get the window handle associated with the control.  \n  \n```\nHRESULT STDMETHODCALLTYPE get_HWND(LONG_PTR* phWnd);\n```  \n  \n### Parameters  \n `phWnd`  \n The window handle associated with the control.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__get_mouseicon\"></a>  CStockPropImpl::get_MouseIcon  \n Call this method to get the picture properties of the graphic (icon, bitmap, or metafile) to be displayed when the mouse is over the control.  \n  \n```\nHRESULT STDMETHODCALLTYPE get_MouseIcon(IPictureDisp** ppPicture);\n```  \n  \n### Parameters  \n `ppPicture`  \n Variable that receives a pointer to the picture properties of the graphic.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__get_mousepointer\"></a>  CStockPropImpl::get_MousePointer  \n Call this method to get the type of mouse pointer displayed when the mouse is over the control, for example, arrow, cross, or hourglass.  \n  \n```\nHRESULT STDMETHODCALLTYPE get_MousePointer(LONG* pnMousePointer);\n```  \n  \n### Parameters  \n *pnMousePointer*  \n Variable that receives the type of mouse pointer.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__get_picture\"></a>  CStockPropImpl::get_Picture  \n Call this method to get a pointer to the picture properties of a graphic (icon, bitmap, or metafile) to be displayed.  \n  \n```\nHRESULT STDMETHODCALLTYPE get_Picture(IPictureDisp** ppPicture);\n```  \n  \n### Parameters  \n `ppPicture`  \n Variable that receives a pointer to the picture's properties. See [IPictureDisp](http://msdn.microsoft.com/library/windows/desktop/ms680762) for more details.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__get_readystate\"></a>  CStockPropImpl::get_ReadyState  \n Call this method to get the control's ready state, for example, loading or loaded.  \n  \n```\nHRESULT STDMETHODCALLTYPE get_ReadyState(LONG* pnReadyState);\n```  \n  \n### Parameters  \n *pnReadyState*  \n Variable that receives the control's ready state.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__get_tabstop\"></a>  CStockPropImpl::get_TabStop  \n Call this method to get the status of the flag that indicates if the control is a tab stop or not.  \n  \n```\nHRESULT STDMETHODCALLTYPE get_TabStop(VARIANT_BOOL* pbTabStop);\n```  \n  \n### Parameters  \n *pbTabStop*  \n Variable that receives the flag status. TRUE indicates that the control is a tab stop.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__get_text\"></a>  CStockPropImpl::get_Text  \n Call this method to get the text that is displayed with the control.  \n  \n```\nHRESULT STDMETHODCALLTYPE get_Text(BSTR* pbstrText);\n```  \n  \n### Parameters  \n *pbstrText*  \n The text that is displayed with the control.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__get_valid\"></a>  CStockPropImpl::getvalid  \n Call this method to get the status of the flag that indicates if the control is valid or not.  \n  \n```\nHRESULT STDMETHODCALLTYPE getvalid(VARIANT_BOOL* pbValid);\n```  \n  \n### Parameters  \n *pbValid*  \n Variable that receives the flag status. TRUE indicates that the control is valid.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__get_window\"></a>  CStockPropImpl::get_Window  \n Call this method to get the window handle associated with the control. Identical to [CStockPropImpl::get_HWND](#cstockpropimpl__get_hwnd).  \n  \n```\nHRESULT STDMETHODCALLTYPE get_Window(LONG_PTR* phWnd);\n```  \n  \n### Parameters  \n `phWnd`  \n The window handle associated with the control.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__put_appearance\"></a>  CStockPropImpl::put_Appearance  \n Call this method to set the paint style used by the control, for example, flat or 3D.  \n  \n```\nHRESULT STDMETHODCALLTYPE put_Appearance(SHORT   nAppearance);\n```  \n  \n### Parameters  \n `nAppearance`  \n The new paint style to be used by the control.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__put_autosize\"></a>  CStockPropImpl::put_AutoSize  \n Call this method to set the value of flag that indicates if the control cannot be any other size.  \n  \n```\nHRESULT STDMETHODCALLTYPE put_AutoSize(VARIANT_BOOL bAutoSize,);\n```  \n  \n### Parameters  \n *bAutoSize*  \n TRUE if the control cannot be any other size.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__put_backcolor\"></a>  CStockPropImpl::put_BackColor  \n Call this method to set the control's background color.  \n  \n```\nHRESULT STDMETHODCALLTYPE put_BackColor(OLE_COLOR clrBackColor);\n```  \n  \n### Parameters  \n *clrBackColor*  \n The new control background color.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__put_backstyle\"></a>  CStockPropImpl::put_BackStyle  \n Call this method to set the control's background style.  \n  \n```\nHRESULT STDMETHODCALLTYPE put_BackStyle(LONG nBackStyle);\n```  \n  \n### Parameters  \n *nBackStyle*  \n The new control background style.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__put_bordercolor\"></a>  CStockPropImpl::put_BorderColor  \n Call this method to set the control's border color.  \n  \n```\nHRESULT STDMETHODCALLTYPE put_BorderColor(OLE_COLOR clrBorderColor);\n```  \n  \n### Parameters  \n *clrBorderColor*  \n The new border color. The OLE_COLOR data type is internally represented as a 32-bit long integer.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__put_borderstyle\"></a>  CStockPropImpl::put_BorderStyle  \n Call this method to set the control's border style.  \n  \n```\nHRESULT STDMETHODCALLTYPE put_BorderStyle(LONG nBorderStyle);\n```  \n  \n### Parameters  \n *nBorderStyle*  \n The new border style.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__put_bordervisible\"></a>  CStockPropImpl::put_BorderVisible  \n Call this method to set the value of the flag that indicates if the control's border is visible or not.  \n  \n```\nHRESULT STDMETHODCALLTYPE put_BorderVisible(VARIANT_BOOL bBorderVisible);\n```  \n  \n### Parameters  \n *bBorderVisible*  \n TRUE if the border is to be visible.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__put_borderwidth\"></a>  CStockPropImpl::put_BorderWidth  \n Call this method to set the width of the control's border.  \n  \n```\nHRESULT STDMETHODCALLTYPE put_BorderWidth(LONG nBorderWidth);\n```  \n  \n### Parameters  \n `nBorderWidth`  \n The new width of the control's border.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__put_caption\"></a>  CStockPropImpl::put_Caption  \n Call this method to set the text to be displayed with the control.  \n  \n```\nHRESULT STDMETHODCALLTYPE put_Caption(BSTR bstrCaption);\n```  \n  \n### Parameters  \n *bstrCaption*  \n The text to be displayed with the control.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__put_drawmode\"></a>  CStockPropImpl::put_DrawMode  \n Call this method to set the control's drawing mode, for example, XOR Pen or Invert Colors.  \n  \n```\nHRESULT STDMETHODCALLTYPE put_DrawMode(LONG nDrawMode);\n```  \n  \n### Parameters  \n `nDrawMode`  \n The new drawing mode for the control.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__put_drawstyle\"></a>  CStockPropImpl::put_DrawStyle  \n Call this method to set the control's drawing style, for example, solid, dashed, or dotted.  \n  \n```\nHRESULT STDMETHODCALLTYPE put_DrawStyle(LONG pnDrawStyle);\n```  \n  \n### Parameters  \n *nDrawStyle*  \n The new drawing style for the control.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__put_drawwidth\"></a>  CStockPropImpl::put_DrawWidth  \n Call this method to set the width (in pixels) used by the control's drawing methods.  \n  \n```\nHRESULT STDMETHODCALLTYPE put_DrawWidth(LONG nDrawWidth);\n```  \n  \n### Parameters  \n *nDrawWidth*  \n The new width to be used by the control's drawing methods.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__put_enabled\"></a>  CStockPropImpl::put_Enabled  \n Call this method to set the value of the flag that indicates if the control is enabled.  \n  \n```\nHRESULT STDMETHODCALLTYPE put_Enabled(VARIANT_BOOL bEnabled);\n```  \n  \n### Parameters  \n `bEnabled`  \n TRUE if the control is enabled.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__put_fillcolor\"></a>  CStockPropImpl::put_FillColor  \n Call this method to set the control's fill color.  \n  \n```\nHRESULT STDMETHODCALLTYPE put_FillColor(OLE_COLOR   clrFillColor);\n```  \n  \n### Parameters  \n *clrFillColor*  \n The new fill color for the control.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__put_fillstyle\"></a>  CStockPropImpl::put_FillStyle  \n Call this method to set the control's fill style, for example, solid, transparent, or cross-hatched.  \n  \n```\nHRESULT STDMETHODCALLTYPE put_FillStyle(LONG nFillStyle);\n```  \n  \n### Parameters  \n *nFillStyle*  \n The new fill style for the control.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__put_font\"></a>  CStockPropImpl::put_Font  \n Call this method to set the control's font properties.  \n  \n```\nHRESULT STDMETHODCALLTYPE put_Font(IFontDisp* pFont);\n```  \n  \n### Parameters  \n `pFont`  \n A pointer to the control's font properties.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__put_forecolor\"></a>  CStockPropImpl::put_ForeColor  \n Call this method to set the control's foreground color.  \n  \n```\nHRESULT STDMETHODCALLTYPE put_ForeColor(OLE_COLOR clrForeColor);\n```  \n  \n### Parameters  \n *clrForeColor*  \n The new foreground color of the control.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__put_hwnd\"></a>  CStockPropImpl::put_HWND  \n This method returns E_FAIL.  \n  \n```\nHRESULT STDMETHODCALLTYPE put_HWND(LONG_PTR /* hWnd */);\n```  \n  \n### Parameters  \n */\\* hWnd \\*/*  \n Reserved.  \n  \n### Return Value  \n Returns E_FAIL.  \n  \n### Remarks  \n The window handle is a read-only value.  \n  \n##  <a name=\"cstockpropimpl__put_mouseicon\"></a>  CStockPropImpl::put_MouseIcon  \n Call this method to set the picture properties of the graphic (icon, bitmap, or metafile) to be displayed when the mouse is over the control.  \n  \n```\nHRESULT STDMETHODCALLTYPE put_MouseIcon(IPictureDisp* pPicture);\n```  \n  \n### Parameters  \n `pPicture`  \n A pointer to the picture properties of the graphic.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__put_mousepointer\"></a>  CStockPropImpl::put_MousePointer  \n Call this method to set the type of mouse pointer displayed when the mouse is over the control, for example, arrow, cross, or hourglass.  \n  \n```\nHRESULT STDMETHODCALLTYPE put_MousePointer(LONG nMousePointer);\n```  \n  \n### Parameters  \n *nMousePointer*  \n The type of mouse pointer.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__put_picture\"></a>  CStockPropImpl::put_Picture  \n Call this method to set the picture properties of a graphic (icon, bitmap, or metafile) to be displayed.  \n  \n```\nHRESULT STDMETHODCALLTYPE put_Picture(IPictureDisp* pPicture);\n```  \n  \n### Parameters  \n `pPicture`  \n A pointer to the picture's properties. See [IPictureDisp](http://msdn.microsoft.com/library/windows/desktop/ms680762) for more details.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__put_readystate\"></a>  CStockPropImpl::put_ReadyState  \n Call this method to set the control's ready state, for example, loading or loaded.  \n  \n```\nHRESULT STDMETHODCALLTYPE put_ReadyState(LONG nReadyState);\n```  \n  \n### Parameters  \n *nReadyState*  \n The control's ready state.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__put_tabstop\"></a>  CStockPropImpl::put_TabStop  \n Call this method to set the flag that indicates if the control is a tab stop or not.  \n  \n```\nHRESULT STDMETHODCALLTYPE put_TabStop(VARIANT_BOOL bTabStop);\n```  \n  \n### Parameters  \n *bTabStop*  \n TRUE if the control is a tab stop.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__put_text\"></a>  CStockPropImpl::put_Text  \n Call this method to set the text that is displayed with the control.  \n  \n```\nHRESULT STDMETHODCALLTYPE put_Text(BSTR bstrText);\n```  \n  \n### Parameters  \n `bstrText`  \n The text that is displayed with the control.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__put_valid\"></a>  CStockPropImpl::putvalid  \n Call this method to set the flag that indicates if the control is valid or not.  \n  \n```\nHRESULT STDMETHODCALLTYPE getvalid(VARIANT_BOOL   bValid);\n```  \n  \n### Parameters  \n *bValid*  \n TRUE if the control is valid.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"cstockpropimpl__put_window\"></a>  CStockPropImpl::put_Window  \n This method calls [CStockPropImpl::put_HWND](#cstockpropimpl__put_hwnd), which returns E_FAIL.  \n  \n```\nHRESULT STDMETHODCALLTYPE put_Window(LONG_PTR hWnd);\n```  \n  \n### Parameters  \n `hWnd`  \n The window handle.  \n  \n### Return Value  \n Returns E_FAIL.  \n  \n### Remarks  \n The window handle is a read-only value.  \n  \n##  <a name=\"cstockpropimpl__putref_font\"></a>  CStockPropImpl::putref_Font  \n Call this method to set the control's font properties, with a reference count.  \n  \n```\nHRESULT STDMETHODCALLTYPE putref_Font(IFontDisp* pFont);\n```  \n  \n### Parameters  \n `pFont`  \n A pointer to the control's font properties.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n### Remarks  \n The same as [CStockPropImpl::put_Font](#cstockpropimpl__put_font), but with a reference count.  \n  \n##  <a name=\"cstockpropimpl__putref_mouseicon\"></a>  CStockPropImpl::putref_MouseIcon  \n Call this method to set the picture properties of the graphic (icon, bitmap, or metafile) to be displayed when the mouse is over the control, with a reference count.  \n  \n```\nHRESULT STDMETHODCALLTYPE putref_MouseIcon(IPictureDisp* pPicture);\n```  \n  \n### Parameters  \n `pPicture`  \n A pointer to the picture properties of the graphic.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n### Remarks  \n The same as [CStockPropImpl::put_MouseIcon](#cstockpropimpl__put_mouseicon), but with a reference count.  \n  \n##  <a name=\"cstockpropimpl__putref_picture\"></a>  CStockPropImpl::putref_Picture  \n Call this method to set the picture properties of a graphic (icon, bitmap, or metafile) to be displayed, with a reference count.  \n  \n```\nHRESULT STDMETHODCALLTYPE putref_Picture(IPictureDisp* pPicture);\n```  \n  \n### Parameters  \n `pPicture`  \n A pointer to the picture's properties. See [IPictureDisp](http://msdn.microsoft.com/library/windows/desktop/ms680762) for more details.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n### Remarks  \n The same as [CStockPropImpl::put_Picture](#cstockpropimpl__put_picture), but with a reference count.  \n  \n## See Also  \n [Class Overview](../../atl/atl-class-overview.md)   \n [IDispatchImpl Class](../../atl/reference/idispatchimpl-class.md)\n"}