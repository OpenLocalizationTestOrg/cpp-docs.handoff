{"nodes":[{"pos":[12,49],"content":"is_placeholder Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"is_placeholder Class | Microsoft Docs","pos":[0,37]}]},{"content":"is_placeholder Class","pos":[722,742]},{"content":"Tests if type is a placeholder.","pos":[743,774]},{"content":"Syntax","pos":[783,789]},{"content":"struct is_placeholder {","pos":[795,818]},{"content":"static const int value;","pos":[824,847]},{"content":"};","pos":[853,855]},{"content":"Remarks","pos":[864,871]},{"content":"The constant value <ph id=\"ph1\">`value`</ph> is 0 if the type <ph id=\"ph2\">`Ty`</ph> is not a placeholder; otherwise, its value is the position of the function call argument that it binds to.","pos":[875,1030],"source":"The constant value `value` is 0 if the type `Ty` is not a placeholder; otherwise, its value is the position of the function call argument that it binds to."},{"content":"You use it to determine the value <ph id=\"ph1\">`N`</ph> for the Nth placeholder <ph id=\"ph2\">`_N`</ph>.","pos":[1031,1098],"source":" You use it to determine the value `N` for the Nth placeholder `_N`."},{"content":"Example","pos":[1107,1114]},{"content":"Requirements","pos":[1558,1570]},{"pos":[1574,1599],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>functional&gt;","source":"**Header:** \\<functional>"},{"pos":[1606,1624],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"content":"See Also","pos":[1633,1641]},{"content":"_1 Object","pos":[1646,1655]}],"content":"---\ntitle: \"is_placeholder Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"is_placeholder\"\n  - \"std.tr1.is_placeholder\"\n  - \"functional/std::tr1::is_placeholder\"\n  - \"std::tr1::is_placeholder\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"is_placeholder class [TR1]\"\nms.assetid: 2b21a792-96d1-4bb8-b911-0db796510835\ncaps.latest.revision: 22\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# is_placeholder Class\nTests if type is a placeholder.  \n  \n## Syntax  \n  \nstruct is_placeholder {  \n   static const int value;  \n   };  \n  \n## Remarks  \n The constant value `value` is 0 if the type `Ty` is not a placeholder; otherwise, its value is the position of the function call argument that it binds to. You use it to determine the value `N` for the Nth placeholder `_N`.  \n  \n## Example  \n  \n```cpp  \n// std_tr1__functional__is_placeholder.cpp   \n// compile with: /EHsc   \n#include <functional>   \n#include <iostream>   \n  \nusing namespace std::placeholders;   \n  \ntemplate<class Expr>\nvoid test_for_placeholder(const Expr&)\n{\n    std::cout << std::is_placeholder<Expr>::value << std::endl;\n}\n\nint main()\n{\n    test_for_placeholder(3.0);\n    test_for_placeholder(_3);\n\n    return (0);\n}  \n```  \n  \n```Output  \n0  \n3  \n```  \n  \n## Requirements  \n **Header:** \\<functional>  \n  \n **Namespace:** std  \n  \n## See Also  \n [_1 Object](../standard-library/1-object.md)\n\n"}