{"nodes":[{"pos":[12,73],"content":"_get_purecall_handler, _set_purecall_handler | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_get_purecall_handler, _set_purecall_handler | Microsoft Docs","pos":[0,61]}]},{"content":"_get_purecall_handler, _set_purecall_handler","pos":[1385,1429]},{"content":"Gets or sets the error handler for a pure virtual function call.","pos":[1430,1494]},{"content":"Syntax","pos":[1503,1509]},{"content":"Parameters","pos":[1738,1748]},{"content":"The function to be called when a pure virtual function is called.","pos":[1766,1831]},{"content":"A <ph id=\"ph1\">`_purecall_handler`</ph> function must have a void return type.","pos":[1832,1892],"source":" A `_purecall_handler` function must have a void return type."},{"content":"Return Value","pos":[1901,1913]},{"content":"The previous <ph id=\"ph1\">`_purecall_handler`</ph>.","pos":[1917,1950],"source":"The previous `_purecall_handler`."},{"content":"Returns <ph id=\"ph1\">`nullptr`</ph> if there was no previous handler.","pos":[1951,2002],"source":" Returns `nullptr` if there was no previous handler."},{"content":"Remarks","pos":[2011,2018]},{"pos":[2022,2138],"content":"The <ph id=\"ph1\">`_get_purecall_handler`</ph> and <ph id=\"ph2\">`_set_purecall_handler`</ph> functions are Microsoft-specific and apply only to C++ code.","source":"The `_get_purecall_handler` and `_set_purecall_handler` functions are Microsoft-specific and apply only to C++ code."},{"content":"A call to a pure virtual function is an error because it has no implementation.","pos":[2145,2224]},{"content":"By default, the compiler generates code to invoke an error handler function when a pure virtual function is called, which terminates the program.","pos":[2225,2370]},{"content":"You can install your own error handler function for pure virtual function calls, to catch them for debugging or reporting purposes.","pos":[2371,2502]},{"content":"To use your own error handler, create a function that has the <ph id=\"ph1\">`_purecall_handler`</ph> signature, then use <ph id=\"ph2\">`_set_purecall_handler`</ph> to make it the current handler.","pos":[2503,2660],"source":" To use your own error handler, create a function that has the `_purecall_handler` signature, then use `_set_purecall_handler` to make it the current handler."},{"content":"Because there is only one <ph id=\"ph1\">`_purecall_handler`</ph> for each process, when you call <ph id=\"ph2\">`_set_purecall_handler`</ph> it immediately impacts all threads.","pos":[2667,2804],"source":"Because there is only one `_purecall_handler` for each process, when you call `_set_purecall_handler` it immediately impacts all threads."},{"content":"The last caller on any thread sets the handler.","pos":[2805,2852]},{"pos":[2859,2951],"content":"To restore the default behavior, call <ph id=\"ph1\">`_set_purecall_handler`</ph> by using a <ph id=\"ph2\">`nullptr`</ph> argument.","source":"To restore the default behavior, call `_set_purecall_handler` by using a `nullptr` argument."},{"content":"Requirements","pos":[2960,2972]},{"content":"Routine","pos":[2979,2986]},{"content":"Required header","pos":[2987,3002]},{"pos":[3070,3071],"content":","},{"content":"cstdlib&gt; or <ph id=\"ph1\">\\&lt;</ph>stdlib.h&gt;","pos":[3098,3121],"source":"cstdlib> or \\<stdlib.h>"},{"pos":[3129,3222],"content":"For compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":"Example","pos":[3231,3238]},{"content":"See Also","pos":[4030,4038]},{"content":"Error Handling","pos":[4043,4057]},{"content":"_purecall","pos":[4111,4120]}],"content":"---\ntitle: \"_get_purecall_handler, _set_purecall_handler | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_set_purecall_handler\"\n  - \"_set_purecall_handler_m\"\n  - \"_get_purecall_handler\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_set_purecall_handler\"\n  - \"_set_purecall_handler_m\"\n  - \"set_purecall_handler_m\"\n  - \"set_purecall_handler\"\n  - \"stdlib/_set_purecall_handler\"\n  - \"stdlib/_get_purecall_handler\"\n  - \"_get_purecall_handler\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"_set_purecall_handler function\"\n  - \"set_purecall_handler function\"\n  - \"purecall_handler\"\n  - \"set_purecall_handler_m function\"\n  - \"_purecall_handler\"\n  - \"_set_purecall_handler_m function\"\n  - \"_get_purecall_handler function\"\nms.assetid: 2759b878-8afa-4129-86e7-72afc2153d9c\ncaps.latest.revision: 20\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _get_purecall_handler, _set_purecall_handler\nGets or sets the error handler for a pure virtual function call.  \n  \n## Syntax  \n  \n```  \ntypedef void (__cdecl* _purecall_handler)(void);  \n  \n_purecall_handler __cdecl _get_purecall_handler(void);  \n  \n_purecall_handler __cdecl _set_purecall_handler(   \n   _purecall_handler function  \n);  \n```  \n  \n#### Parameters  \n `function`  \n The function to be called when a pure virtual function is called. A `_purecall_handler` function must have a void return type.  \n  \n## Return Value  \n The previous `_purecall_handler`. Returns `nullptr` if there was no previous handler.  \n  \n## Remarks  \n The `_get_purecall_handler` and `_set_purecall_handler` functions are Microsoft-specific and apply only to C++ code.  \n  \n A call to a pure virtual function is an error because it has no implementation. By default, the compiler generates code to invoke an error handler function when a pure virtual function is called, which terminates the program. You can install your own error handler function for pure virtual function calls, to catch them for debugging or reporting purposes. To use your own error handler, create a function that has the `_purecall_handler` signature, then use `_set_purecall_handler` to make it the current handler.  \n  \n Because there is only one `_purecall_handler` for each process, when you call `_set_purecall_handler` it immediately impacts all threads. The last caller on any thread sets the handler.  \n  \n To restore the default behavior, call `_set_purecall_handler` by using a `nullptr` argument.  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_get_purecall_handler`, `_set_purecall_handler`|\\<cstdlib> or \\<stdlib.h>|  \n  \n For compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```  \n// _set_purecall_handler.cpp  \n// compile with: /W1  \n#include <tchar.h>  \n#include <stdio.h>  \n#include <stdlib.h>  \n  \nclass CDerived;  \nclass CBase  \n{  \npublic:  \n   CBase(CDerived *derived): m_pDerived(derived) {};  \n   ~CBase();  \n   virtual void function(void) = 0;  \n  \n   CDerived * m_pDerived;  \n};  \n  \nclass CDerived : public CBase  \n{  \npublic:  \n   CDerived() : CBase(this) {};   // C4355  \n   virtual void function(void) {};  \n};  \n  \nCBase::~CBase()  \n{  \n   m_pDerived -> function();  \n}  \n  \nvoid myPurecallHandler(void)  \n{  \n   printf(\"In _purecall_handler.\");  \n   exit(0);  \n}  \n  \nint _tmain(int argc, _TCHAR* argv[])  \n{  \n   _set_purecall_handler(myPurecallHandler);  \n   CDerived myDerived;  \n}  \n```  \n  \n```Output  \nIn _purecall_handler.  \n```  \n  \n## See Also  \n [Error Handling](../../c-runtime-library/error-handling-crt.md)   \n [_purecall](../../c-runtime-library/reference/purecall.md)"}