{"nodes":[{"pos":[12,38],"content":"wcrtomb_s | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"wcrtomb_s | Microsoft Docs","pos":[0,26]}]},{"content":"wcrtomb_s","pos":[1005,1014]},{"content":"Convert a wide character into its multibyte character representation.","pos":[1015,1084]},{"content":"A version of <bpt id=\"p1\">[</bpt>wcrtomb<ept id=\"p1\">](../../c-runtime-library/reference/wcrtomb.md)</ept> with security enhancements as described in <bpt id=\"p2\">[</bpt>Security Features in the CRT<ept id=\"p2\">](../../c-runtime-library/security-features-in-the-crt.md)</ept>.","pos":[1085,1285],"source":" A version of [wcrtomb](../../c-runtime-library/reference/wcrtomb.md) with security enhancements as described in [Security Features in the CRT](../../c-runtime-library/security-features-in-the-crt.md)."},{"content":"Syntax","pos":[1294,1300]},{"content":"Parameters","pos":[1631,1641]},{"content":"[out]","pos":[1645,1650]},{"content":"Returns the number of bytes written or -1 if an error occurred.","pos":[1669,1732]},{"content":"[out]","pos":[1739,1744]},{"content":"The resulting multibyte converted character.","pos":[1757,1801]},{"content":"[in]","pos":[1808,1812]},{"content":"The size of the <ph id=\"ph1\">`mbchar`</ph> variable in bytes.","pos":[1831,1874],"source":" The size of the `mbchar` variable in bytes."},{"content":"[in]","pos":[1881,1885]},{"content":"A wide character to convert.","pos":[1897,1925]},{"content":"[in]","pos":[1932,1936]},{"content":"A pointer to an <ph id=\"ph1\">`mbstate_t`</ph> object.","pos":[1950,1985],"source":" A pointer to an `mbstate_t` object."},{"content":"Return Value","pos":[1994,2006]},{"pos":[2010,2062],"content":"Returns zero or an <ph id=\"ph1\">`errno`</ph> value if an error occurs.","source":"Returns zero or an `errno` value if an error occurs."},{"content":"Remarks","pos":[2071,2078]},{"content":"The <ph id=\"ph1\">`wcrtomb_s`</ph> function converts a wide character, beginning in the specified conversion state contained in <ph id=\"ph2\">`mbstate`</ph>, from the value contained in <ph id=\"ph3\">`wchar`</ph>, into the address represented by <ph id=\"ph4\">`mbchar`</ph>.","pos":[2082,2280],"source":"The `wcrtomb_s` function converts a wide character, beginning in the specified conversion state contained in `mbstate`, from the value contained in `wchar`, into the address represented by `mbchar`."},{"content":"The <ph id=\"ph1\">`pReturnValue`</ph> value will be the number of bytes converted, but no more than <ph id=\"ph2\">`MB_CUR_MAX`</ph> bytes, or an -1 if an error occurred.","pos":[2281,2412],"source":" The `pReturnValue` value will be the number of bytes converted, but no more than `MB_CUR_MAX` bytes, or an -1 if an error occurred."},{"content":"If <ph id=\"ph1\">`mbstate`</ph> is null, the internal <ph id=\"ph2\">`mbstate_t`</ph> conversion state is used.","pos":[2419,2491],"source":"If `mbstate` is null, the internal `mbstate_t` conversion state is used."},{"content":"If the character contained in <ph id=\"ph1\">`wchar`</ph> does not have a corresponding multibyte character, the value of <ph id=\"ph2\">`pReturnValue`</ph> will be -1 and the function will return the <ph id=\"ph3\">`errno`</ph> value of <ph id=\"ph4\">`EILSEQ`</ph>.","pos":[2492,2679],"source":" If the character contained in `wchar` does not have a corresponding multibyte character, the value of `pReturnValue` will be -1 and the function will return the `errno` value of `EILSEQ`."},{"content":"The <ph id=\"ph1\">`wcrtomb_s`</ph> function differs from <bpt id=\"p1\">[</bpt>wctomb_s, _wctomb_s_l<ept id=\"p1\">](../../c-runtime-library/reference/wctomb-s-wctomb-s-l.md)</ept> by its restartability.","pos":[2686,2828],"source":"The `wcrtomb_s` function differs from [wctomb_s, _wctomb_s_l](../../c-runtime-library/reference/wctomb-s-wctomb-s-l.md) by its restartability."},{"content":"The conversion state is stored in <ph id=\"ph1\">`mbstate`</ph> for subsequent calls to the same or other restartable functions.","pos":[2829,2937],"source":" The conversion state is stored in `mbstate` for subsequent calls to the same or other restartable functions."},{"content":"Results are undefined when mixing the use of restartable and nonrestartable functions.","pos":[2938,3024]},{"content":"For example, an application would use <ph id=\"ph1\">`wcsrlen`</ph> rather than <ph id=\"ph2\">`wcslen`</ph>, if a subsequent call to <ph id=\"ph3\">`wcsrtombs_s`</ph> were used instead of","pos":[3025,3153],"source":" For example, an application would use `wcsrlen` rather than `wcslen`, if a subsequent call to `wcsrtombs_s` were used instead of "},{"content":"In C++, using this function is simplified by template overloads; the overloads can infer buffer length automatically (eliminating the need to specify a size argument) and they can automatically replace older, non-secure functions with their newer, secure counterparts.","pos":[3174,3442]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Secure Template Overloads<ept id=\"p1\">](../../c-runtime-library/secure-template-overloads.md)</ept>.","pos":[3443,3551],"source":" For more information, see [Secure Template Overloads](../../c-runtime-library/secure-template-overloads.md)."},{"content":"Exceptions","pos":[3560,3570]},{"pos":[3574,3741],"content":"The <ph id=\"ph1\">`wcrtomb_s`</ph> function is multithread safe as long as no function in the current thread calls <ph id=\"ph2\">`setlocale`</ph> while this function is executing and the <ph id=\"ph3\">`mbstate`</ph> is null.","source":"The `wcrtomb_s` function is multithread safe as long as no function in the current thread calls `setlocale` while this function is executing and the `mbstate` is null."},{"content":"Example","pos":[3750,3757]},{"content":".NET Framework Equivalent","pos":[4855,4880]},{"content":"Not applicable.","pos":[4884,4899]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[4900,4947],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[4948,5073],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"content":"Requirements","pos":[5082,5094]},{"content":"Routine","pos":[5101,5108]},{"content":"Required header","pos":[5109,5124]},{"content":"wchar.h&gt;","pos":[5183,5191],"source":"wchar.h>"},{"content":"See Also","pos":[5201,5209]},{"content":"Data Conversion","pos":[5214,5229]},{"content":"Locale","pos":[5280,5286]},{"content":"Interpretation of Multibyte-Character Sequences","pos":[5328,5375]},{"content":"mbsinit","pos":[5458,5465]}],"content":"---\ntitle: \"wcrtomb_s | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"wcrtomb_s\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-convert-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"wcrtomb_s\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"wide characters, converting\"\n  - \"wcrtomb_s function\"\n  - \"multibyte characters\"\n  - \"characters, converting\"\nms.assetid: 9a8a1bd0-1d60-463d-a3a2-d83525eaf656\ncaps.latest.revision: 22\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# wcrtomb_s\nConvert a wide character into its multibyte character representation. A version of [wcrtomb](../../c-runtime-library/reference/wcrtomb.md) with security enhancements as described in [Security Features in the CRT](../../c-runtime-library/security-features-in-the-crt.md).  \n  \n## Syntax  \n  \n```  \nerrno_t wcrtomb_s(  \n   size_t *pReturnValue,  \n   char *mbchar,  \n   size_t sizeOfmbchar,  \n   wchar_t *wchar,  \n   mbstate_t *mbstate  \n);  \ntemplate <size_t size>  \nerrno_t wcrtomb_s(  \n   size_t *pReturnValue,  \n   char (&mbchar)[size],  \n   wchar_t *wchar,  \n   mbstate_t *mbstate  \n); // C++ only  \n```  \n  \n#### Parameters  \n [out] `pReturnValue`  \n Returns the number of bytes written or -1 if an error occurred.  \n  \n [out] `mbchar`  \n The resulting multibyte converted character.  \n  \n [in] `sizeOfmbchar`  \n The size of the `mbchar` variable in bytes.  \n  \n [in] `wchar`  \n A wide character to convert.  \n  \n [in] `mbstate`  \n A pointer to an `mbstate_t` object.  \n  \n## Return Value  \n Returns zero or an `errno` value if an error occurs.  \n  \n## Remarks  \n The `wcrtomb_s` function converts a wide character, beginning in the specified conversion state contained in `mbstate`, from the value contained in `wchar`, into the address represented by `mbchar`. The `pReturnValue` value will be the number of bytes converted, but no more than `MB_CUR_MAX` bytes, or an -1 if an error occurred.  \n  \n If `mbstate` is null, the internal `mbstate_t` conversion state is used. If the character contained in `wchar` does not have a corresponding multibyte character, the value of `pReturnValue` will be -1 and the function will return the `errno` value of `EILSEQ`.  \n  \n The `wcrtomb_s` function differs from [wctomb_s, _wctomb_s_l](../../c-runtime-library/reference/wctomb-s-wctomb-s-l.md) by its restartability. The conversion state is stored in `mbstate` for subsequent calls to the same or other restartable functions. Results are undefined when mixing the use of restartable and nonrestartable functions. For example, an application would use `wcsrlen` rather than `wcslen`, if a subsequent call to `wcsrtombs_s` were used instead of `wcstombs_s.`  \n  \n In C++, using this function is simplified by template overloads; the overloads can infer buffer length automatically (eliminating the need to specify a size argument) and they can automatically replace older, non-secure functions with their newer, secure counterparts. For more information, see [Secure Template Overloads](../../c-runtime-library/secure-template-overloads.md).  \n  \n## Exceptions  \n The `wcrtomb_s` function is multithread safe as long as no function in the current thread calls `setlocale` while this function is executing and the `mbstate` is null.  \n  \n## Example  \n  \n```  \n// crt_wcrtomb_s.c  \n// This program converts a wide character  \n// to its corresponding multibyte character.  \n//  \n  \n#include <string.h>  \n#include <stdio.h>  \n#include <wchar.h>  \n  \nint main( void )  \n{  \n    errno_t     returnValue;  \n    size_t      pReturnValue;  \n    mbstate_t   mbstate;  \n    size_t      sizeOfmbStr = 1;  \n    char        mbchar = 0;  \n    wchar_t*    wchar = L\"Q\\0\";  \n  \n    // Reset to initial conversion state  \n    memset(&mbstate, 0, sizeof(mbstate));  \n  \n    returnValue = wcrtomb_s(&pReturnValue, &mbchar, sizeof(char),  \n                            *wchar, &mbstate);  \n    if (returnValue == 0) {  \n        printf(\"The corresponding wide character \\\"\");  \n        wprintf(L\"%s\\\"\", wchar);  \n        printf(\" was converted to a the \\\"%c\\\" \", mbchar);  \n        printf(\"multibyte character.\\n\");  \n    }  \n    else  \n    {  \n        printf(\"No corresponding multibyte character \"  \n               \"was found.\\n\");  \n    }  \n}  \n```  \n  \n```Output  \nThe corresponding wide character \"Q\" was converted to a the \"Q\" multibyte character.  \n```  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`wcrtomb_s`|\\<wchar.h>|  \n  \n## See Also  \n [Data Conversion](../../c-runtime-library/data-conversion.md)   \n [Locale](../../c-runtime-library/locale.md)   \n [Interpretation of Multibyte-Character Sequences](../../c-runtime-library/interpretation-of-multibyte-character-sequences.md)   \n [mbsinit](../../c-runtime-library/reference/mbsinit.md)"}