{"nodes":[{"pos":[12,56],"content":"queue::front_item (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"queue::front_item (STL-CLR) | Microsoft Docs","pos":[0,44]}]},{"content":"queue::front_item (STL/CLR)","pos":[641,668]},{"content":"Accesses the first element.","pos":[669,696]},{"content":"Syntax","pos":[705,711]},{"content":"Remarks","pos":[769,776]},{"content":"The property accesses the first element of the controlled sequence, which must be non-empty.","pos":[780,872]},{"content":"You use it to read or write the first element, when you know it exists.","pos":[873,944]},{"content":"Example","pos":[953,960]},{"content":"Requirements","pos":[1796,1808]},{"pos":[1812,1839],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/queue&gt;","source":"**Header:** \\<cliext/queue>"},{"pos":[1846,1867],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1876,1884]},{"content":"queue (STL/CLR)","pos":[1889,1904]},{"content":"queue::back (STL/CLR)","pos":[1939,1960]},{"content":"queue::back_item (STL/CLR)","pos":[2000,2026]},{"content":"queue::front (STL/CLR)","pos":[2071,2093]},{"content":"queue::front (STL/CLR)","pos":[2134,2156]}],"content":"---\ntitle: \"queue::front_item (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::queue::front_item\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"front_item member [STL/CLR]\"\nms.assetid: 389ab030-4351-48e6-9b03-417f1d3fcb86\ncaps.latest.revision: 15\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# queue::front_item (STL/CLR)\nAccesses the first element.  \n  \n## Syntax  \n  \n```  \nproperty value_type front_item;  \n```  \n  \n## Remarks  \n The property accesses the first element of the controlled sequence, which must be non-empty. You use it to read or write the first element, when you know it exists.  \n  \n## Example  \n  \n```  \n// cliext_queue_front_item.cpp   \n// compile with: /clr   \n#include <cliext/queue>   \n  \ntypedef cliext::queue<wchar_t> Myqueue;   \nint main()   \n    {   \n    Myqueue c1;   \n    c1.push(L'a');   \n    c1.push(L'b');   \n    c1.push(L'c');   \n  \n// display initial contents \" a b c\"   \n    for each (wchar_t elem in c1.get_container())   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// inspect last item   \n    System::Console::WriteLine(\"front_item = {0}\", c1.front_item);   \n  \n// alter last item and reinspect   \n    c1.front_item = L'x';   \n    for each (wchar_t elem in c1.get_container())   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n a b c  \nfront_item = a  \n x b c  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/queue>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [queue (STL/CLR)](../dotnet/queue-stl-clr.md)   \n [queue::back (STL/CLR)](../dotnet/queue-back-stl-clr.md)   \n [queue::back_item (STL/CLR)](../dotnet/queue-back-item-stl-clr.md)   \n [queue::front (STL/CLR)](../dotnet/queue-front-stl-clr.md)   \n [queue::front (STL/CLR)](../dotnet/queue-front-stl-clr.md)"}