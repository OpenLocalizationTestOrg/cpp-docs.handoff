{"nodes":[{"pos":[12,53],"content":"catanh, catanhf, catanhl | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"catanh, catanhf, catanhl | Microsoft Docs","pos":[0,41]}]},{"content":"catanh, catanhf, catanhl","pos":[1095,1119]},{"content":"Retrieves the inverse hyperbolic tangent of a complex number, with branch cuts outside the interval [−1; +1] along the real axis.","pos":[1120,1249]},{"content":"Syntax","pos":[1258,1264]},{"content":"Parameters","pos":[1539,1549]},{"content":"A complex number that represents an angle, in radians.","pos":[1560,1614]},{"content":"Return Value","pos":[1623,1635]},{"content":"The inverse hyperbolic tangent of <ph id=\"ph1\">`z`</ph>, in radians.","pos":[1639,1689],"source":"The inverse hyperbolic tangent of `z`, in radians."},{"content":"The result is unbounded along the real axis, and  in the interval [−iπ/2; +iπ/2] along the imaginary axis.","pos":[1690,1796]},{"content":"A domain error will occur if <ph id=\"ph1\">`z`</ph> is outside the interval [-1, +1].","pos":[1797,1863],"source":" A domain error will occur if `z` is outside the interval [-1, +1]."},{"content":"A pole error will occur if <ph id=\"ph1\">`z`</ph> is -1 or +1.","pos":[1864,1907],"source":" A pole error will occur if `z` is -1 or +1."},{"content":"Remarks","pos":[1916,1923]},{"content":"Because C++ allows overloading, you can call overloads of <ph id=\"ph1\">`catanh`</ph> that take and return <ph id=\"ph2\">`_Fcomplex`</ph> and <ph id=\"ph3\">`_Lcomplex`</ph> values.","pos":[1927,2050],"source":"Because C++ allows overloading, you can call overloads of `catanh` that take and return `_Fcomplex` and `_Lcomplex` values."},{"content":"In a C program, <ph id=\"ph1\">`catanh`</ph> always takes and returns a <ph id=\"ph2\">`_Dcomplex`</ph> value.","pos":[2051,2121],"source":" In a C program, `catanh` always takes and returns a `_Dcomplex` value."},{"content":"Requirements","pos":[2130,2142]},{"content":"Routine","pos":[2149,2156]},{"content":"C header","pos":[2157,2165]},{"content":"C++ header","pos":[2166,2176]},{"pos":[2241,2267],"content":",               <ph id=\"ph1\">`catanhf`</ph>,","source":",               `catanhf`, "},{"content":"complex.h&gt;","pos":[2280,2290],"source":"complex.h>"},{"content":"ccomplex&gt;","pos":[2293,2302],"source":"ccomplex>"},{"pos":[2310,2428],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"content":"See Also","pos":[2437,2445]},{"content":"Alphabetical Function Reference","pos":[2450,2481]},{"content":"ctanh, ctanhf, ctanhl","pos":[2562,2583]},{"content":"catan, catanf, catanl","pos":[2648,2669]},{"content":"csinh, csinhf, csinhl","pos":[2734,2755]},{"content":"casinh, casinhf, casinhl","pos":[2820,2844]},{"content":"ccosh, ccoshf, ccoshl","pos":[2912,2933]},{"content":"cacosh, cacoshf, cacoshl","pos":[2998,3022]},{"content":"cacos, cacosf, cacosl","pos":[3090,3111]},{"content":"ctan, ctanf, ctanl","pos":[3176,3194]},{"content":"csin, csinf, csinl","pos":[3256,3274]},{"content":"casin, casinf, casinl","pos":[3336,3357]},{"content":"ccos, ccosf, ccosl","pos":[3422,3440]},{"content":"csqrt, csqrtf, csqrtl","pos":[3502,3523]}],"content":"---\ntitle: \"catanh, catanhf, catanhl | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"cpp\"\n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"catanh\"\n  - \"catanhf\"\n  - \"catanhl\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-math-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"catanh\"\n  - \"catanhf\"\n  - \"catanhl\"\n  - \"complex/catanh\"\n  - \"complex/catanhf\"\n  - \"complex/catanhl\"\ndev_langs: \n  - \"C\"\n  - \"C++\"\nhelpviewer_keywords: \n  - \"catanh function\"\n  - \"catanhf function\"\n  - \"catanhl function\"\nms.assetid: 1b6021cb-647a-41b4-9d7f-919cc8b57b86\ncaps.latest.revision: 10\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# catanh, catanhf, catanhl\nRetrieves the inverse hyperbolic tangent of a complex number, with branch cuts outside the interval [−1; +1] along the real axis.  \n  \n## Syntax  \n  \n```  \n_Dcomplex catanh(   \n   _Dcomplex z   \n);  \n_Fcomplex catanh(   \n   _Fcomplex z   \n);  // C++ only  \n_Lcomplex catanh(   \n   _Lcomplex z   \n);  //  C++ only  \n_Fcomplex catanhf(   \n   _Fcomplex z   \n);  \n_Lcomplex catanhl(   \n   _Lcomplex z   \n);  \n```  \n  \n#### Parameters  \n `z`  \n A complex number that represents an angle, in radians.  \n  \n## Return Value  \n The inverse hyperbolic tangent of `z`, in radians. The result is unbounded along the real axis, and  in the interval [−iπ/2; +iπ/2] along the imaginary axis. A domain error will occur if `z` is outside the interval [-1, +1]. A pole error will occur if `z` is -1 or +1.  \n  \n## Remarks  \n Because C++ allows overloading, you can call overloads of `catanh` that take and return `_Fcomplex` and `_Lcomplex` values. In a C program, `catanh` always takes and returns a `_Dcomplex` value.  \n  \n## Requirements  \n  \n|Routine|C header|C++ header|  \n|-------------|--------------|------------------|  \n|`catanh`,               `catanhf`, `catanhl`|\\<complex.h>|\\<ccomplex>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## See Also  \n [Alphabetical Function Reference](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)   \n [ctanh, ctanhf, ctanhl](../../c-runtime-library/reference/ctanh-ctanhf-ctanhl.md)   \n [catan, catanf, catanl](../../c-runtime-library/reference/catan-catanf-catanl.md)   \n [csinh, csinhf, csinhl](../../c-runtime-library/reference/csinh-csinhf-csinhl.md)   \n [casinh, casinhf, casinhl](../../c-runtime-library/reference/casinh-casinhf-casinhl.md)   \n [ccosh, ccoshf, ccoshl](../../c-runtime-library/reference/ccosh-ccoshf-ccoshl.md)   \n [cacosh, cacoshf, cacoshl](../../c-runtime-library/reference/cacosh-cacoshf-cacoshl.md)   \n [cacos, cacosf, cacosl](../../c-runtime-library/reference/cacos-cacosf-cacosl.md)   \n [ctan, ctanf, ctanl](../../c-runtime-library/reference/ctan-ctanf-ctanl.md)   \n [csin, csinf, csinl](../../c-runtime-library/reference/csin-csinf-csinl.md)   \n [casin, casinf, casinl](../../c-runtime-library/reference/casin-casinf-casinl.md)   \n [ccos, ccosf, ccosl](../../c-runtime-library/reference/ccos-ccosf-ccosl.md)   \n [csqrt, csqrtf, csqrtl](../../c-runtime-library/reference/csqrt-csqrtf-csqrtl.md)"}