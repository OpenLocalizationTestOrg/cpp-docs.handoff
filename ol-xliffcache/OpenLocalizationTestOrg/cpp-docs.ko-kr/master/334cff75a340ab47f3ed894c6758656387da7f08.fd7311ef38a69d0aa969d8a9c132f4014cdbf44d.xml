{"nodes":[{"pos":[12,49],"content":"_STATIC_ASSERT Macro | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_STATIC_ASSERT Macro | Microsoft Docs","pos":[0,37]}]},{"content":"_STATIC_ASSERT Macro","pos":[858,878]},{"pos":[879,967],"content":"Evaluate an expression at compile time and generate an error when the result is <ph id=\"ph1\">`FALSE`</ph>.","source":"Evaluate an expression at compile time and generate an error when the result is `FALSE`."},{"content":"Syntax","pos":[976,982]},{"content":"Parameters","pos":[1055,1065]},{"content":"Expression (including pointers) that evaluates to nonzero (<ph id=\"ph1\">`TRUE`</ph>) or 0 (<ph id=\"ph2\">`FALSE`</ph>).","pos":[1092,1174],"source":" Expression (including pointers) that evaluates to nonzero (`TRUE`) or 0 (`FALSE`)."},{"content":"Remarks","pos":[1183,1190]},{"content":"This macro resembles the <bpt id=\"p1\">[</bpt>_ASSERT and _ASSERTE macros<ept id=\"p1\">](../../c-runtime-library/reference/assert-asserte-assert-expr-macros.md)</ept>, except that <ph id=\"ph1\">`booleanExpression`</ph> is evaluated at compile time instead of at runtime.","pos":[1194,1405],"source":"This macro resembles the [_ASSERT and _ASSERTE macros](../../c-runtime-library/reference/assert-asserte-assert-expr-macros.md), except that `booleanExpression` is evaluated at compile time instead of at runtime."},{"content":"If <ph id=\"ph1\">`booleanExpression`</ph> evaluates to <ph id=\"ph2\">`FALSE`</ph> (0), <bpt id=\"p1\">[</bpt>Compiler Error C2466<ept id=\"p1\">](../../error-messages/compiler-errors-1/compiler-error-c2466.md)</ept> is generated.","pos":[1406,1555],"source":" If `booleanExpression` evaluates to `FALSE` (0), [Compiler Error C2466](../../error-messages/compiler-errors-1/compiler-error-c2466.md) is generated."},{"content":"Example","pos":[1564,1571]},{"content":"In this example, we check whether the <ph id=\"ph1\">`sizeof`</ph> an <ph id=\"ph2\">`int`</ph> is larger than or equal to 2 bytes and whether the <ph id=\"ph3\">`sizeof`</ph> a <ph id=\"ph4\">`long`</ph> is 1 byte.","pos":[1575,1710],"source":"In this example, we check whether the `sizeof` an `int` is larger than or equal to 2 bytes and whether the `sizeof` a `long` is 1 byte."},{"content":"The program will not compile and it will generate <bpt id=\"p1\">[</bpt>Compiler Error C2466<ept id=\"p1\">](../../error-messages/compiler-errors-1/compiler-error-c2466.md)</ept> because a <ph id=\"ph1\">`long`</ph> is larger than 1 byte.","pos":[1711,1887],"source":" The program will not compile and it will generate [Compiler Error C2466](../../error-messages/compiler-errors-1/compiler-error-c2466.md) because a `long` is larger than 1 byte."},{"content":"Requirements","pos":[2266,2278]},{"content":"Macro","pos":[2285,2290]},{"content":"Required header","pos":[2291,2306]},{"content":"crtdbg.h&gt;","pos":[2368,2377],"source":"crtdbg.h>"},{"content":".NET Framework Equivalent","pos":[2387,2412]},{"content":"System::Diagnostics::Debug::Assert","pos":[2417,2451]},{"content":"See Also","pos":[2540,2548]},{"content":"Alphabetical Function Reference","pos":[2553,2584]},{"content":"_ASSERT, _ASSERTE, _ASSERT_EXPR Macros","pos":[2665,2703]}],"content":"---\ntitle: \"_STATIC_ASSERT Macro | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_STATIC_ASSERT\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"_STATIC_ASSERT macro\"\nms.assetid: 89b0350c-2c2f-4be6-9786-8b1f0780a5da\ncaps.latest.revision: 6\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _STATIC_ASSERT Macro\nEvaluate an expression at compile time and generate an error when the result is `FALSE`.  \n  \n## Syntax  \n  \n```  \n_STATIC_ASSERT(  \n    booleanExpression  \n);  \n```  \n  \n#### Parameters  \n `booleanExpression`  \n Expression (including pointers) that evaluates to nonzero (`TRUE`) or 0 (`FALSE`).  \n  \n## Remarks  \n This macro resembles the [_ASSERT and _ASSERTE macros](../../c-runtime-library/reference/assert-asserte-assert-expr-macros.md), except that `booleanExpression` is evaluated at compile time instead of at runtime. If `booleanExpression` evaluates to `FALSE` (0), [Compiler Error C2466](../../error-messages/compiler-errors-1/compiler-error-c2466.md) is generated.  \n  \n## Example  \n In this example, we check whether the `sizeof` an `int` is larger than or equal to 2 bytes and whether the `sizeof` a `long` is 1 byte. The program will not compile and it will generate [Compiler Error C2466](../../error-messages/compiler-errors-1/compiler-error-c2466.md) because a `long` is larger than 1 byte.  \n  \n```  \n// crt__static_assert.c  \n  \n#include <crtdbg.h>  \n#include <stdio.h>  \n  \n_STATIC_ASSERT(sizeof(int) >= 2);  \n_STATIC_ASSERT(sizeof(long) == 1);  // C2466  \n  \nint main()  \n{  \n    printf(\"I am sure that sizeof(int) will be >= 2: %d\\n\",  \n        sizeof(int));  \n    printf(\"I am not so sure that sizeof(long) == 1: %d\\n\",  \n        sizeof(long));  \n}  \n```  \n  \n## Requirements  \n  \n|Macro|Required header|  \n|-----------|---------------------|  \n|`_STATIC_ASSERT`|\\<crtdbg.h>|  \n  \n## .NET Framework Equivalent  \n [System::Diagnostics::Debug::Assert](https://msdn.microsoft.com/en-us/library/system.diagnostics.debug.assert.aspx)  \n  \n## See Also  \n [Alphabetical Function Reference](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)   \n [_ASSERT, _ASSERTE, _ASSERT_EXPR Macros](../../c-runtime-library/reference/assert-asserte-assert-expr-macros.md)"}