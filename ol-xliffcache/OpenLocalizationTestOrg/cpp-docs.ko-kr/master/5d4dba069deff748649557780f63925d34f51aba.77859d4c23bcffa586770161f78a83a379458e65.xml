{"nodes":[{"pos":[12,73],"content":"Template Classes for Arrays, Lists, and Maps | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Template Classes for Arrays, Lists, and Maps | Microsoft Docs","pos":[0,61]}]},{"content":"Template Classes for Arrays, Lists, and Maps","pos":[754,798]},{"content":"These collection classes are templates whose parameters determine the types of the objects stored in the aggregates.","pos":[799,915]},{"content":"The <ph id=\"ph1\">`CArray`</ph>, <ph id=\"ph2\">`CMap`</ph>, and <ph id=\"ph3\">`CList`</ph> classes use global helper functions that must usually be customized.","pos":[916,1018],"source":" The `CArray`, `CMap`, and `CList` classes use global helper functions that must usually be customized."},{"content":"For more information about these helper functions, see <bpt id=\"p1\">[</bpt>Collection Class Helpers<ept id=\"p1\">](../mfc/reference/collection-class-helpers.md)</ept>.","pos":[1019,1147],"source":" For more information about these helper functions, see [Collection Class Helpers](../mfc/reference/collection-class-helpers.md)."},{"content":"The typed pointer classes are wrappers for other classes in the class library.","pos":[1148,1226]},{"content":"By using these wrappers, you enlist the compiler's type-checking to help you avoid errors.","pos":[1227,1317]},{"content":"For more information on using these classes, see <bpt id=\"p1\">[</bpt>Collections<ept id=\"p1\">](../mfc/collections.md)</ept>.","pos":[1318,1404],"source":" For more information on using these classes, see [Collections](../mfc/collections.md)."},{"content":"These classes provide templates you can use to create arrays, lists, and maps using any type you like.","pos":[1411,1513]},{"content":"CArray","pos":[1521,1527]},{"content":"Template class for making arrays of arbitrary types.","pos":[1566,1618]},{"content":"CList","pos":[1626,1631]},{"content":"Template class for making lists of arbitrary types.","pos":[1669,1720]},{"content":"CMap","pos":[1728,1732]},{"content":"Template class for making maps with arbitrary key and value types.","pos":[1769,1835]},{"content":"CTypedPtrArray","pos":[1843,1857]},{"content":"Template class for type-safe arrays of pointers.","pos":[1904,1952]},{"content":"CTypedPtrList","pos":[1960,1973]},{"content":"Template class for type-safe lists of pointers.","pos":[2019,2066]},{"content":"CTypedPtrMap","pos":[2074,2086]},{"content":"Template class for type-safe maps with pointers.","pos":[2131,2179]},{"content":"See Also","pos":[2188,2196]},{"content":"Class Overview","pos":[2201,2215]}],"content":"---\ntitle: \"Template Classes for Arrays, Lists, and Maps | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"vc.classes.template\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"arrays [C++], classes\"\n  - \"template classes, for arrays/lists and maps\"\n  - \"list classes\"\n  - \"map classes\"\n  - \"template classes\"\nms.assetid: a8331c4b-068a-48f8-a629-b8449601e121\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Template Classes for Arrays, Lists, and Maps\nThese collection classes are templates whose parameters determine the types of the objects stored in the aggregates. The `CArray`, `CMap`, and `CList` classes use global helper functions that must usually be customized. For more information about these helper functions, see [Collection Class Helpers](../mfc/reference/collection-class-helpers.md). The typed pointer classes are wrappers for other classes in the class library. By using these wrappers, you enlist the compiler's type-checking to help you avoid errors. For more information on using these classes, see [Collections](../mfc/collections.md).  \n  \n These classes provide templates you can use to create arrays, lists, and maps using any type you like.  \n  \n [CArray](../mfc/reference/carray-class.md)  \n Template class for making arrays of arbitrary types.  \n  \n [CList](../mfc/reference/clist-class.md)  \n Template class for making lists of arbitrary types.  \n  \n [CMap](../mfc/reference/cmap-class.md)  \n Template class for making maps with arbitrary key and value types.  \n  \n [CTypedPtrArray](../mfc/reference/ctypedptrarray-class.md)  \n Template class for type-safe arrays of pointers.  \n  \n [CTypedPtrList](../mfc/reference/ctypedptrlist-class.md)  \n Template class for type-safe lists of pointers.  \n  \n [CTypedPtrMap](../mfc/reference/ctypedptrmap-class.md)  \n Template class for type-safe maps with pointers.  \n  \n## See Also  \n [Class Overview](../mfc/class-library-overview.md)\n\n"}