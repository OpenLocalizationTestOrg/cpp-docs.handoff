<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ddd36568abbc085f1875bf3abc30140438308651</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\windows\attribute-programming-faq.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">de55ca33517de9076f7ac218c629fdfc944a56ec</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a7d0fb4382c1e66ce96826ca86612300e0b618dc</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Attribute Programming FAQ | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Attribute Programming FAQ</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic answers the following frequently asked questions:</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>What is an HRESULT?</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When do I have to specify the parameter name for an attribute?</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Can I use comments in an attribute block?</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>How do attributes interact with inheritance?</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>How can I use attributes in a nonattributed ATL project?</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>How can I use an .idl file in an attributed project?</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Can I modify code that is injected by an attribute?</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>How can I forward declare an attributed interface?</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Can I use attributes on a class derived from a class that also uses attributes?</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>What is an HRESULT?</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`HRESULT`</ph> is a simple data type that is often used as a return value by attributes and ATL in general.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The following table describes the various values.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>More values are contained in the header file winerror.h.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>S_OK</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Operation successful</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>0x00000000</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>E_UNEXPECTED</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Unexpected failure</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>0x8000FFFF</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>E_NOTIMPL</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Not implemented</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>0x80004001</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>E_OUTOFMEMORY</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Failed to allocate necessary memory</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>0x8007000E</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>E_INVALIDARG</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>One or more arguments are invalid</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>0x80070057</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>E_NOINTERFACE</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>No such interface supported</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>0x80004002</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>E_POINTER</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Invalid pointer</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>0x80004003</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>E_HANDLE</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Invalid handle</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>0x80070006</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>E_ABORT</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Operation aborted</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>0x80004004</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>E_FAIL</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Unspecified failure</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>0x80004005</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>E_ACCESSDENIED</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>General access denied error</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>0x80070005</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>When do I have to specify the parameter name for an attribute?</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In most cases, if the attribute has a single parameter, that parameter is named.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This name is not required when inserting the attribute in your code.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>For example, the following usage of the <bpt id="p1">[</bpt>aggregatable<ept id="p1">](../windows/aggregatable.md)</ept> attribute:</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>is exactly the same as:</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>However, the following attributes have single, unnamed parameters:</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>call_as</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>case</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>cpp_quote</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>default</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>defaultvalue</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>defaultvtable</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>emitidl</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>entry</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>first_is</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>helpcontext</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>helpfile</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>helpstring</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>helpstringcontext</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>helpstringdll</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>id</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>iid_is</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>import</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>importlib</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>include</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>includelib</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>last_is</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>length_is</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>max_is</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>no_injected_text</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>pointer_default</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>pragma</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>restricted</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>size_is</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>source</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>switch_is</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>switch_type</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>transmit_as</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>wire_marshal</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Can I use comments in an attribute block?</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>You can use both single-line and multiple-line comments within an attribute block.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>However, you cannot use either style of comment within the parentheses holding the parameters to an attribute.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The following is allowed:</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The following is disallowed:</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>How do attributes interact with inheritance?</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>You can inherit both attributed and unattributed classes from other classes, which may themselves be attributed or not.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The result of deriving from an attributed class is the same as deriving from that class after the attribute provider has transformed its code.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Attributes are not transmitted to derived classes through C++ inheritance.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>An attribute provider only transforms code in the vicinity of its attributes.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>How can I use attributes in a nonattributed ATL project?</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>You may have a nonattributed ATL project, which has an .idl file, and you may want to start adding attributed objects.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>In this case, use the Add Class Wizard to provide the code.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>How can I use an .idl file in an attributed project?</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>You may have a .idl file that you want to use in your ATL attributed project.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>In this case, you would use the <bpt id="p1">[</bpt>importidl<ept id="p1">](../windows/importidl.md)</ept> attribute, compile the .idl file to a .h file (see the <bpt id="p2">[</bpt>MIDL Property Pages<ept id="p2">](../ide/midl-property-pages.md)</ept> in the project's Property Pages dialog box), and then include the .h file in your project.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Can I modify code that is injected by an attribute?</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Some attributes inject code into your project.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>You can see the injected code by using the <bpt id="p1">[</bpt>/Fx<ept id="p1">](../build/reference/fx-merge-injected-code.md)</ept> compiler option.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>It is also possible to copy code from the injected file and paste it into your source code.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>This allows you to modify the behavior of the attribute.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>However, you may have to modify other parts of your code as well.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The following sample is the result of copying injected code into a source code file:</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>How can I forward declare an attributed interface?</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>If you are going to make a forward declaration of an attributed interface, you must apply the same attributes to the forward declaration that you apply to the actual interface declaration.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>You must also apply the <bpt id="p1">[</bpt>export<ept id="p1">](../windows/export.md)</ept> attribute to your forward declaration.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Can I use attributes on a class derived from a class that also uses attributes?</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>No, using attributes on a class derived from a class that also uses attributes is not supported.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Concepts</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>