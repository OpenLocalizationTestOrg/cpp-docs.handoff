{"nodes":[{"pos":[12,55],"content":"CComAutoThreadModule Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CComAutoThreadModule Class | Microsoft Docs","pos":[0,43]}]},{"content":"CComAutoThreadModule Class","pos":[664,690]},{"pos":[691,817],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComAutoThreadModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComAutoThreadModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"pos":[825,935],"content":"[!IMPORTANT]\n This class and its members cannot be used in applications that execute in the Windows Runtime.","leadings":["","> "],"nodes":[{"content":"This class and its members cannot be used in applications that execute in the Windows Runtime.","pos":[14,108]}]},{"content":"Syntax","pos":[944,950]},{"content":"Parameters","pos":[1092,1102]},{"content":"[in] The class managing thread selection.","pos":[1127,1168]},{"content":"The default value is <bpt id=\"p1\">[</bpt>CComSimpleThreadAllocator<ept id=\"p1\">](../../atl/reference/ccomsimplethreadallocator-class.md)</ept>.","pos":[1169,1274],"source":" The default value is [CComSimpleThreadAllocator](../../atl/reference/ccomsimplethreadallocator-class.md)."},{"content":"Members","pos":[1283,1290]},{"content":"Methods","pos":[1300,1307]},{"content":"CreateInstance","pos":[1329,1343]},{"content":"Selects a thread and then creates an object in the associated apartment.","pos":[1384,1456]},{"content":"GetDefaultThreads","pos":[1462,1479]},{"content":"(Static) Dynamically calculates the number of threads for the module based on the number of processors.","pos":[1523,1626]},{"content":"Init","pos":[1632,1636]},{"content":"Creates the module's threads.","pos":[1667,1696]},{"content":"Lock","pos":[1702,1706]},{"content":"Increments the lock count on the module and on the current thread.","pos":[1737,1803]},{"content":"Unlock","pos":[1809,1815]},{"content":"Decrements the lock count on the module and on the current thread.","pos":[1848,1914]},{"content":"Data Members","pos":[1925,1937]},{"content":"Data Members","pos":[1947,1959]},{"content":"dwThreadID","pos":[1981,1991]},{"content":"Contains the identifier of the current thread.","pos":[2028,2074]},{"content":"m_Allocator","pos":[2080,2091]},{"content":"Manages thread selection.","pos":[2129,2154]},{"content":"m_nThreads","pos":[2160,2170]},{"content":"Contains the number of threads in the module.","pos":[2207,2252]},{"content":"m_pApartments","pos":[2258,2271]},{"content":"Manages the module's apartments.","pos":[2311,2343]},{"content":"Remarks","pos":[2353,2360]},{"pos":[2368,2647],"content":"[!NOTE]\n This class is obsolete, having been replaced by the [CAtlAutoThreadModule](../../atl/reference/catlautothreadmodule-class.md) and [CAtlModule](../../atl/reference/catlmodule-class.md) derived classes. The information that follows is for use with older releases of ATL.","leadings":["","> "],"nodes":[{"content":" This class is obsolete, having been replaced by the [CAtlAutoThreadModule](../../atl/reference/catlautothreadmodule-class.md) and [CAtlModule](../../atl/reference/catlmodule-class.md) derived classes. The information that follows is for use with older releases of ATL.","pos":[8,277],"nodes":[{"content":"This class is obsolete, having been replaced by the <bpt id=\"p1\">[</bpt>CAtlAutoThreadModule<ept id=\"p1\">](../../atl/reference/catlautothreadmodule-class.md)</ept> and <bpt id=\"p2\">[</bpt>CAtlModule<ept id=\"p2\">](../../atl/reference/catlmodule-class.md)</ept> derived classes.","pos":[1,201],"source":" This class is obsolete, having been replaced by the [CAtlAutoThreadModule](../../atl/reference/catlautothreadmodule-class.md) and [CAtlModule](../../atl/reference/catlmodule-class.md) derived classes."},{"content":"The information that follows is for use with older releases of ATL.","pos":[202,269]}]}]},{"content":"derives from <bpt id=\"p1\">[</bpt>CComModule<ept id=\"p1\">](../../atl/reference/ccommodule-class.md)</ept> to implement a thread-pooled, apartment-model COM server for EXEs and Windows services.","pos":[2677,2831],"source":" derives from [CComModule](../../atl/reference/ccommodule-class.md) to implement a thread-pooled, apartment-model COM server for EXEs and Windows services."},{"content":"uses <bpt id=\"p1\">[</bpt>CComApartment<ept id=\"p1\">](../../atl/reference/ccomapartment-class.md)</ept> to manage an apartment for each thread in the module.","pos":[2855,2973],"source":" uses [CComApartment](../../atl/reference/ccomapartment-class.md) to manage an apartment for each thread in the module."},{"content":"Derive your module from <ph id=\"ph1\">`CComAutoThreadModule`</ph> when you want to create objects in multiple apartments.","pos":[2980,3082],"source":"Derive your module from `CComAutoThreadModule` when you want to create objects in multiple apartments."},{"content":"You must also include the <bpt id=\"p1\">[</bpt>DECLARE_CLASSFACTORY_AUTO_THREAD<ept id=\"p1\">](http://msdn.microsoft.com/library/19d7105e-03e8-4412-9f5e-5384c8a5e18f)</ept> macro in your object's class definition to specify <bpt id=\"p2\">[</bpt>CComClassFactoryAutoThread<ept id=\"p2\">](../../atl/reference/ccomclassfactoryautothread-class.md)</ept> as the class factory.","pos":[3083,3374],"source":" You must also include the [DECLARE_CLASSFACTORY_AUTO_THREAD](http://msdn.microsoft.com/library/19d7105e-03e8-4412-9f5e-5384c8a5e18f) macro in your object's class definition to specify [CComClassFactoryAutoThread](../../atl/reference/ccomclassfactoryautothread-class.md) as the class factory."},{"content":"By default, the ATL COM AppWizard (the ATL Project Wizard in Visual Studio .NET) will derive your module from <ph id=\"ph1\">`CComModule`</ph>.","pos":[3381,3504],"source":"By default, the ATL COM AppWizard (the ATL Project Wizard in Visual Studio .NET) will derive your module from `CComModule`."},{"content":"To use <ph id=\"ph1\">`CComAutoThreadModule`</ph>, modify the class definition.","pos":[3505,3564],"source":" To use `CComAutoThreadModule`, modify the class definition."},{"content":"For example:","pos":[3565,3577]},{"pos":[3595,3611],"content":"NVC_ATL_AxHost#2"},{"content":"Inheritance Hierarchy","pos":[3682,3703]},{"content":"_ATL_MODULE","pos":[3708,3719]},{"content":"CAtlModule","pos":[3757,3767]},{"content":"CAtlModuleT","pos":[3846,3857]},{"content":"CAtlAutoThreadModuleT","pos":[3908,3929]},{"content":"CComModule","pos":[3990,4000]},{"content":"Requirements","pos":[4080,4092]},{"pos":[4096,4117],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlbase.h","source":"**Header:** atlbase.h"},{"pos":[4180,4216],"content":"CComAutoThreadModule::CreateInstance"},{"pos":[4220,4346],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComAutoThreadModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComAutoThreadModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Parameters","pos":[4459,4469]},{"content":"pfnCreateInstance","pos":[4474,4491]},{"content":"[in] A pointer to a creator function.","pos":[4496,4533]},{"content":"[in] The IID of the requested interface.","pos":[4550,4590]},{"content":"[out] A pointer to the interface pointer identified by <ph id=\"ph1\">`riid`</ph>.","pos":[4609,4671],"source":" [out] A pointer to the interface pointer identified by `riid`."},{"content":"If the object does not support this interface, <ph id=\"ph1\">`ppvObj`</ph> is set to NULL.","pos":[4672,4743],"source":" If the object does not support this interface, `ppvObj` is set to NULL."},{"content":"Return Value","pos":[4753,4765]},{"content":"A standard HRESULT value.","pos":[4769,4794]},{"content":"Remarks","pos":[4804,4811]},{"content":"Selects a thread and then creates an object in the associated apartment.","pos":[4815,4887]},{"pos":[4946,4978],"content":"CComAutoThreadModule::dwThreadID"},{"pos":[4982,5108],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComAutoThreadModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComAutoThreadModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Remarks","pos":[5149,5156]},{"content":"Contains the identifier of the current thread.","pos":[5160,5206]},{"pos":[5272,5311],"content":"CComAutoThreadModule::GetDefaultThreads"},{"pos":[5315,5441],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComAutoThreadModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComAutoThreadModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Return Value","pos":[5496,5508]},{"content":"The number of threads to be created in the EXE module.","pos":[5512,5566]},{"content":"Remarks","pos":[5576,5583]},{"content":"This static function dynamically calculates the maximum number of threads for the EXE module, based on the number of processors.","pos":[5587,5715]},{"content":"By default, this return value is passed to the <bpt id=\"p1\">[</bpt>Init<ept id=\"p1\">](#ccomautothreadmodule__init)</ept> method to create the threads.","pos":[5716,5828],"source":" By default, this return value is passed to the [Init](#ccomautothreadmodule__init) method to create the threads."},{"pos":[5881,5907],"content":"CComAutoThreadModule::Init"},{"pos":[5911,6037],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComAutoThreadModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComAutoThreadModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Parameters","pos":[6189,6199]},{"content":"[in] A pointer to an array of object map entries.","pos":[6210,6259]},{"content":"[in] The <ph id=\"ph1\">`HINSTANCE`</ph> passed to <bpt id=\"p1\">**</bpt>DLLMain<ept id=\"p1\">**</ept> or <ph id=\"ph2\">`WinMain`</ph>.","pos":[6273,6329],"source":" [in] The `HINSTANCE` passed to **DLLMain** or `WinMain`."},{"content":"[in] A pointer to the LIBID of the type library associated with the project.","pos":[6348,6424]},{"content":"[in] The number of threads to be created.","pos":[6445,6486]},{"content":"By default, <ph id=\"ph1\">`nThreads`</ph> is the value returned by <bpt id=\"p1\">[</bpt>GetDefaultThreads<ept id=\"p1\">](#ccomautothreadmodule__getdefaultthreads)</ept>.","pos":[6487,6597],"source":" By default, `nThreads` is the value returned by [GetDefaultThreads](#ccomautothreadmodule__getdefaultthreads)."},{"content":"Remarks","pos":[6607,6614]},{"pos":[6618,6701],"content":"Initializes data members and creates the number of threads specified by <ph id=\"ph1\">`nThreads`</ph>.","source":"Initializes data members and creates the number of threads specified by `nThreads`."},{"pos":[6754,6780],"content":"CComAutoThreadModule::Lock"},{"pos":[6784,6910],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComAutoThreadModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComAutoThreadModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Return Value","pos":[6946,6958]},{"content":"A value that may be useful for diagnostics or testing.","pos":[6962,7016]},{"content":"Remarks","pos":[7026,7033]},{"content":"Performs an atomic increment on the lock count for the module and for the current thread.","pos":[7037,7126]},{"content":"uses the module lock count to determine whether any clients are accessing the module.","pos":[7150,7235]},{"content":"The lock count on the current thread is used for statistical purposes.","pos":[7236,7306]},{"pos":[7366,7399],"content":"CComAutoThreadModule::m_Allocator"},{"pos":[7403,7529],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComAutoThreadModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComAutoThreadModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Remarks","pos":[7588,7595]},{"content":"The object managing thread selection.","pos":[7599,7636]},{"content":"By default, the <ph id=\"ph1\">`ThreadAllocator`</ph> class template parameter is <bpt id=\"p1\">[</bpt>CComSimpleThreadAllocator<ept id=\"p1\">](../../atl/reference/ccomsimplethreadallocator-class.md)</ept>.","pos":[7637,7783],"source":" By default, the `ThreadAllocator` class template parameter is [CComSimpleThreadAllocator](../../atl/reference/ccomsimplethreadallocator-class.md)."},{"pos":[7842,7874],"content":"CComAutoThreadModule::m_nThreads"},{"pos":[7878,8004],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComAutoThreadModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComAutoThreadModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Remarks","pos":[8043,8050]},{"content":"Contains the number of threads in the EXE module.","pos":[8054,8103]},{"content":"When <bpt id=\"p1\">[</bpt>Init<ept id=\"p1\">](#ccomautothreadmodule__init)</ept> is called, <ph id=\"ph1\">`m_nThreads`</ph> is set to the <ph id=\"ph2\">`nThreads`</ph> parameter value.","pos":[8104,8210],"source":" When [Init](#ccomautothreadmodule__init) is called, `m_nThreads` is set to the `nThreads` parameter value."},{"content":"Each thread's associated apartment is managed by a <bpt id=\"p1\">[</bpt>CComApartment<ept id=\"p1\">](../../atl/reference/ccomapartment-class.md)</ept> object.","pos":[8211,8329],"source":" Each thread's associated apartment is managed by a [CComApartment](../../atl/reference/ccomapartment-class.md) object."},{"pos":[8391,8426],"content":"CComAutoThreadModule::m_pApartments"},{"pos":[8430,8556],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComAutoThreadModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComAutoThreadModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Remarks","pos":[8609,8616]},{"content":"Points to an array of <bpt id=\"p1\">[</bpt>CComApartment<ept id=\"p1\">](../../atl/reference/ccomapartment-class.md)</ept> objects, each of which manages an apartment in the module.","pos":[8620,8760],"source":"Points to an array of [CComApartment](../../atl/reference/ccomapartment-class.md) objects, each of which manages an apartment in the module."},{"content":"The number of elements in the array is based on the <bpt id=\"p1\">[</bpt>m_nThreads<ept id=\"p1\">](#ccomautothreadmodule__m_nthreads)</ept> member.","pos":[8761,8868],"source":" The number of elements in the array is based on the [m_nThreads](#ccomautothreadmodule__m_nthreads) member."},{"pos":[8923,8951],"content":"CComAutoThreadModule::Unlock"},{"pos":[8955,9081],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComAutoThreadModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComAutoThreadModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Return Value","pos":[9119,9131]},{"content":"A value that may be useful for diagnostics or testing.","pos":[9135,9189]},{"content":"Remarks","pos":[9199,9206]},{"content":"Performs an atomic decrement on the lock count for the module and for the current thread.","pos":[9210,9299]},{"content":"uses the module lock count to determine whether any clients are accessing the module.","pos":[9323,9408]},{"content":"The lock count on the current thread is used for statistical purposes.","pos":[9409,9479]},{"content":"When the module lock count reaches zero, the module can be unloaded.","pos":[9486,9554]},{"content":"See Also","pos":[9563,9571]},{"content":"Class Overview","pos":[9576,9590]},{"content":"Module Classes","pos":[9630,9644]}],"content":"---\ntitle: \"CComAutoThreadModule Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CComAutoThreadModule\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CComAutoThreadModule class\"\n  - \"apartment model modules\"\nms.assetid: 13063ea5-a57e-4aac-97d3-227137262811\ncaps.latest.revision: 21\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CComAutoThreadModule Class\nAs of ATL 7.0, `CComAutoThreadModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n> [!IMPORTANT]\n>  This class and its members cannot be used in applications that execute in the Windows Runtime.  \n  \n## Syntax  \n  \n```\ntemplate <class   ThreadAllocator = CComSimpleThreadAllocator>\n    class CComAutoThreadModule :\n    public CComModule\n```  \n  \n#### Parameters  \n `ThreadAllocator`  \n [in] The class managing thread selection. The default value is [CComSimpleThreadAllocator](../../atl/reference/ccomsimplethreadallocator-class.md).  \n  \n## Members  \n  \n### Methods  \n  \n|||  \n|-|-|  \n|[CreateInstance](#ccomautothreadmodule__createinstance)|Selects a thread and then creates an object in the associated apartment.|  \n|[GetDefaultThreads](#ccomautothreadmodule__getdefaultthreads)|(Static) Dynamically calculates the number of threads for the module based on the number of processors.|  \n|[Init](#ccomautothreadmodule__init)|Creates the module's threads.|  \n|[Lock](#ccomautothreadmodule__lock)|Increments the lock count on the module and on the current thread.|  \n|[Unlock](#ccomautothreadmodule__unlock)|Decrements the lock count on the module and on the current thread.|  \n  \n### Data Members  \n  \n### Data Members  \n  \n|||  \n|-|-|  \n|[dwThreadID](#ccomautothreadmodule__dwthreadid)|Contains the identifier of the current thread.|  \n|[m_Allocator](#ccomautothreadmodule__m_allocator)|Manages thread selection.|  \n|[m_nThreads](#ccomautothreadmodule__m_nthreads)|Contains the number of threads in the module.|  \n|[m_pApartments](#ccomautothreadmodule__m_papartments)|Manages the module's apartments.|  \n  \n## Remarks  \n  \n> [!NOTE]\n>  This class is obsolete, having been replaced by the [CAtlAutoThreadModule](../../atl/reference/catlautothreadmodule-class.md) and [CAtlModule](../../atl/reference/catlmodule-class.md) derived classes. The information that follows is for use with older releases of ATL.  \n  \n `CComAutoThreadModule` derives from [CComModule](../../atl/reference/ccommodule-class.md) to implement a thread-pooled, apartment-model COM server for EXEs and Windows services. `CComAutoThreadModule` uses [CComApartment](../../atl/reference/ccomapartment-class.md) to manage an apartment for each thread in the module.  \n  \n Derive your module from `CComAutoThreadModule` when you want to create objects in multiple apartments. You must also include the [DECLARE_CLASSFACTORY_AUTO_THREAD](http://msdn.microsoft.com/library/19d7105e-03e8-4412-9f5e-5384c8a5e18f) macro in your object's class definition to specify [CComClassFactoryAutoThread](../../atl/reference/ccomclassfactoryautothread-class.md) as the class factory.  \n  \n By default, the ATL COM AppWizard (the ATL Project Wizard in Visual Studio .NET) will derive your module from `CComModule`. To use `CComAutoThreadModule`, modify the class definition. For example:  \n  \n [!code-cpp[NVC_ATL_AxHost#2](../../atl/codesnippet/cpp/ccomautothreadmodule-class_1.cpp)]  \n  \n## Inheritance Hierarchy  \n [_ATL_MODULE](atl-typedefs.md#_atl_module)  \n  \n [CAtlModule](../../atl/reference/catlmodule-class.md)  \n  \n `IAtlAutoThreadModule`  \n  \n [CAtlModuleT](../../atl/reference/catlmodulet-class.md)  \n  \n [CAtlAutoThreadModuleT](../../atl/reference/catlautothreadmodulet-class.md)  \n  \n [CComModule](../../atl/reference/ccommodule-class.md)  \n  \n `CComAutoThreadModule`  \n  \n## Requirements  \n **Header:** atlbase.h  \n  \n##  <a name=\"ccomautothreadmodule__createinstance\"></a>  CComAutoThreadModule::CreateInstance  \n As of ATL 7.0, `CComAutoThreadModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nHRESULT CreateInstance(\n    void* pfnCreateInstance,\n    REFIID riid,\n    void** ppvObj);\n```  \n  \n### Parameters  \n *pfnCreateInstance*  \n [in] A pointer to a creator function.  \n  \n `riid`  \n [in] The IID of the requested interface.  \n  \n `ppvObj`  \n [out] A pointer to the interface pointer identified by `riid`. If the object does not support this interface, `ppvObj` is set to NULL.  \n  \n### Return Value  \n A standard HRESULT value.  \n  \n### Remarks  \n Selects a thread and then creates an object in the associated apartment.  \n  \n##  <a name=\"ccomautothreadmodule__dwthreadid\"></a>  CComAutoThreadModule::dwThreadID  \n As of ATL 7.0, `CComAutoThreadModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nDWORD dwThreadID;\n```  \n  \n### Remarks  \n Contains the identifier of the current thread.  \n  \n##  <a name=\"ccomautothreadmodule__getdefaultthreads\"></a>  CComAutoThreadModule::GetDefaultThreads  \n As of ATL 7.0, `CComAutoThreadModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nstatic int GetDefaultThreads();\n```  \n  \n### Return Value  \n The number of threads to be created in the EXE module.  \n  \n### Remarks  \n This static function dynamically calculates the maximum number of threads for the EXE module, based on the number of processors. By default, this return value is passed to the [Init](#ccomautothreadmodule__init) method to create the threads.  \n  \n##  <a name=\"ccomautothreadmodule__init\"></a>  CComAutoThreadModule::Init  \n As of ATL 7.0, `CComAutoThreadModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nHRESULT Init(\n    _ATL_OBJMAP_ENTRY* p,\n    HINSTANCE h,\n    const GUID* plibid = NULL,\n    int nThreads = GetDefaultThreads());\n```  \n  \n### Parameters  \n `p`  \n [in] A pointer to an array of object map entries.  \n  \n `h`  \n [in] The `HINSTANCE` passed to **DLLMain** or `WinMain`.  \n  \n `plibid`  \n [in] A pointer to the LIBID of the type library associated with the project.  \n  \n `nThreads`  \n [in] The number of threads to be created. By default, `nThreads` is the value returned by [GetDefaultThreads](#ccomautothreadmodule__getdefaultthreads).  \n  \n### Remarks  \n Initializes data members and creates the number of threads specified by `nThreads`.  \n  \n##  <a name=\"ccomautothreadmodule__lock\"></a>  CComAutoThreadModule::Lock  \n As of ATL 7.0, `CComAutoThreadModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nLONG Lock();\n```  \n  \n### Return Value  \n A value that may be useful for diagnostics or testing.  \n  \n### Remarks  \n Performs an atomic increment on the lock count for the module and for the current thread. `CComAutoThreadModule` uses the module lock count to determine whether any clients are accessing the module. The lock count on the current thread is used for statistical purposes.  \n  \n##  <a name=\"ccomautothreadmodule__m_allocator\"></a>  CComAutoThreadModule::m_Allocator  \n As of ATL 7.0, `CComAutoThreadModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nThreadAllocator\n    m_Allocator;\n```     \n  \n### Remarks  \n The object managing thread selection. By default, the `ThreadAllocator` class template parameter is [CComSimpleThreadAllocator](../../atl/reference/ccomsimplethreadallocator-class.md).  \n  \n##  <a name=\"ccomautothreadmodule__m_nthreads\"></a>  CComAutoThreadModule::m_nThreads  \n As of ATL 7.0, `CComAutoThreadModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nint m_nThreads;\n```  \n  \n### Remarks  \n Contains the number of threads in the EXE module. When [Init](#ccomautothreadmodule__init) is called, `m_nThreads` is set to the `nThreads` parameter value. Each thread's associated apartment is managed by a [CComApartment](../../atl/reference/ccomapartment-class.md) object.  \n  \n##  <a name=\"ccomautothreadmodule__m_papartments\"></a>  CComAutoThreadModule::m_pApartments  \n As of ATL 7.0, `CComAutoThreadModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nCComApartment* m_pApartments;\n```  \n  \n### Remarks  \n Points to an array of [CComApartment](../../atl/reference/ccomapartment-class.md) objects, each of which manages an apartment in the module. The number of elements in the array is based on the [m_nThreads](#ccomautothreadmodule__m_nthreads) member.  \n  \n##  <a name=\"ccomautothreadmodule__unlock\"></a>  CComAutoThreadModule::Unlock  \n As of ATL 7.0, `CComAutoThreadModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nLONG Unlock();\n```  \n  \n### Return Value  \n A value that may be useful for diagnostics or testing.  \n  \n### Remarks  \n Performs an atomic decrement on the lock count for the module and for the current thread. `CComAutoThreadModule` uses the module lock count to determine whether any clients are accessing the module. The lock count on the current thread is used for statistical purposes.  \n  \n When the module lock count reaches zero, the module can be unloaded.  \n  \n## See Also  \n [Class Overview](../../atl/atl-class-overview.md)   \n [Module Classes](../../atl/atl-module-classes.md)\n"}