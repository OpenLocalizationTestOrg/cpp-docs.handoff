{"nodes":[{"pos":[12,57],"content":"hash_multiset::end (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"hash_multiset::end (STL-CLR) | Microsoft Docs","pos":[0,45]}]},{"content":"hash_multiset::end (STL/CLR)","pos":[636,664]},{"content":"Designates the end of the controlled sequence.","pos":[665,711]},{"content":"Syntax","pos":[720,726]},{"content":"Remarks","pos":[768,775]},{"content":"The member function returns a bidirectional iterator that points just beyond the end of the controlled sequence.","pos":[779,891]},{"content":"You use it to obtain an iterator that designates the end of the controlled sequence; its status doesn not change if the length of the controlled sequence changes.","pos":[892,1054]},{"content":"Example","pos":[1063,1070]},{"content":"Requirements","pos":[1843,1855]},{"pos":[1859,1889],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/hash_set&gt;","source":"**Header:** \\<cliext/hash_set>"},{"pos":[1896,1917],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1926,1934]},{"content":"hash_multiset (STL/CLR)","pos":[1939,1962]},{"content":"hash_multiset::begin (STL/CLR)","pos":[2005,2035]}],"content":"---\ntitle: \"hash_multiset::end (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::hash_multiset::end\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"end member [STL/CLR]\"\nms.assetid: 6f4b222c-2f82-445e-80e5-6e2afd233d4b\ncaps.latest.revision: 13\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# hash_multiset::end (STL/CLR)\nDesignates the end of the controlled sequence.  \n  \n## Syntax  \n  \n```  \niterator end();  \n```  \n  \n## Remarks  \n The member function returns a bidirectional iterator that points just beyond the end of the controlled sequence. You use it to obtain an iterator that designates the end of the controlled sequence; its status doesn not change if the length of the controlled sequence changes.  \n  \n## Example  \n  \n```  \n// cliext_hash_multiset_end.cpp   \n// compile with: /clr   \n#include <cliext/hash_set>   \n  \ntypedef cliext::hash_multiset<wchar_t> Myhash_multiset;   \nint main()   \n    {   \n    Myhash_multiset c1;   \n    c1.insert(L'a');   \n    c1.insert(L'b');   \n    c1.insert(L'c');   \n  \n// display initial contents \" a b c\"   \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// inspect last two items   \n    Myhash_multiset::iterator it = c1.end();   \n    --it;   \n    System::Console::WriteLine(\"*-- --end() = {0}\", *--it);   \n    System::Console::WriteLine(\"*--end() = {0}\", *++it);   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n a b c  \n*-- --end() = b  \n*--end() = c  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/hash_set>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [hash_multiset (STL/CLR)](../dotnet/hash-multiset-stl-clr.md)   \n [hash_multiset::begin (STL/CLR)](../dotnet/hash-multiset-begin-stl-clr.md)"}