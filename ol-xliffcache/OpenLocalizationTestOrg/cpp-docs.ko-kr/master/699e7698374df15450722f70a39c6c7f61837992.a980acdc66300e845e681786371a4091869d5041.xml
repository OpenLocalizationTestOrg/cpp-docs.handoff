{"nodes":[{"pos":[12,49],"content":"Compiler Error C2299 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C2299 | Microsoft Docs","pos":[0,37]}]},{"content":"Compiler Error C2299","pos":[598,618]},{"content":"'function' : behavior change: an explicit specialization can not be a copy constructor or copy assignment operator","pos":[619,733]},{"content":"This error can also be generated as a result of compiler conformance work that was done for Visual C++ 2005: previous versions of Visual C++ allowed explicit specializations for a copy constructor or a copy assignment operator.","pos":[740,967]},{"content":"To resolve C2299, do not make the copy constructor or assignment operator a template function, but rather a non-template function that takes a class type.","pos":[974,1128]},{"content":"Any code that calls the copy constructor or assignment operator by explicitly specifying the template arguments needs to remove the template arguments.","pos":[1129,1280]},{"content":"The following sample generates C2299:","pos":[1287,1324]}],"content":"---\ntitle: \"Compiler Error C2299 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C2299\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C2299\"\nms.assetid: d001c2bc-f6fd-47aa-8e42-0eb824d6441d\ncaps.latest.revision: 16\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Error C2299\n'function' : behavior change: an explicit specialization can not be a copy constructor or copy assignment operator  \n  \n This error can also be generated as a result of compiler conformance work that was done for Visual C++ 2005: previous versions of Visual C++ allowed explicit specializations for a copy constructor or a copy assignment operator.  \n  \n To resolve C2299, do not make the copy constructor or assignment operator a template function, but rather a non-template function that takes a class type. Any code that calls the copy constructor or assignment operator by explicitly specifying the template arguments needs to remove the template arguments.  \n  \n The following sample generates C2299:  \n  \n```  \n// C2299.cpp  \n// compile with: /c  \nclass C {  \n   template <class T>  \n   C (T t);  \n  \n   template <> C (const C&);   // C2299  \n   C (const C&);   // OK  \n};  \n```"}