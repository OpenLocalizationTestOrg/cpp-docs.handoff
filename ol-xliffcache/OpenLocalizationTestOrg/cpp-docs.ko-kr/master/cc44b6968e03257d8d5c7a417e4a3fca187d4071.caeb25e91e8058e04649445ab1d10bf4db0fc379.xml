{"nodes":[{"pos":[12,40],"content":"Stack Usage | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Stack Usage | Microsoft Docs","pos":[0,28]}]},{"content":"Stack Usage","pos":[520,531]},{"content":"All memory beyond the current address of RSP is considered volatile: The OS, or a debugger, may overwrite this memory during a user debug session, or an interrupt handler.","pos":[532,703]},{"content":"Thus, RSP must always be set before attempting to read or write values to a stack frame.","pos":[704,792]},{"pos":[799,901],"content":"This section discusses the allocation of stack space for local variables and the <bpt id=\"p1\">**</bpt>alloca<ept id=\"p1\">**</ept> intrinsic.","source":"This section discusses the allocation of stack space for local variables and the **alloca** intrinsic."},{"content":"Stack Allocation","pos":[912,928]},{"content":"Dynamic Parameter Stack Area Construction","pos":[970,1011]},{"content":"Function Types","pos":[1078,1092]},{"content":"malloc Alignment","pos":[1132,1148]},{"content":"alloca","pos":[1190,1196]},{"content":"See Also","pos":[1226,1234]},{"content":"x64 Software Conventions","pos":[1239,1263]}],"content":"---\ntitle: \"Stack Usage | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nms.assetid: 383f0072-0438-489f-8829-cca89582408c\ncaps.latest.revision: 9\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Stack Usage\nAll memory beyond the current address of RSP is considered volatile: The OS, or a debugger, may overwrite this memory during a user debug session, or an interrupt handler. Thus, RSP must always be set before attempting to read or write values to a stack frame.  \n  \n This section discusses the allocation of stack space for local variables and the **alloca** intrinsic.  \n  \n-   [Stack Allocation](../build/stack-allocation.md)  \n  \n-   [Dynamic Parameter Stack Area Construction](../build/dynamic-parameter-stack-area-construction.md)  \n  \n-   [Function Types](../build/function-types.md)  \n  \n-   [malloc Alignment](../build/malloc-alignment.md)  \n  \n-   [alloca](../build/alloca.md)  \n  \n## See Also  \n [x64 Software Conventions](../build/x64-software-conventions.md)"}