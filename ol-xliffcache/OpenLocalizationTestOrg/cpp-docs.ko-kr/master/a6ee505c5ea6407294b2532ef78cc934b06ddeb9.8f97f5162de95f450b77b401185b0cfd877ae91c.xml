{"nodes":[{"pos":[12,46],"content":"&lt;exception&gt; | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&amp;lt;</ph>exception<ph id=\"ph2\">&amp;gt;</ph> | Microsoft Docs","pos":[0,34],"source":"&lt;exception&gt; | Microsoft Docs"}]},{"pos":[649,666],"content":"&lt;exception&gt;","linkify":"&lt;exception&gt;","nodes":[{"content":"<ph id=\"ph1\">&amp;lt;</ph>exception<ph id=\"ph2\">&amp;gt;</ph>","pos":[0,17],"source":"&lt;exception&gt;"}]},{"content":"Defines several types and functions related to the handling of exceptions.","pos":[667,741]},{"content":"Exception handling is used in situations in which the system can recover from an error.","pos":[742,829]},{"content":"It provides a means for control to be returned from a function to the program.","pos":[830,908]},{"content":"The objective of incorporating exception handling is to increase the program's robustness while providing a way to recover from an error in an orderly fashion.","pos":[909,1068]},{"pos":[1077,1083],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1134,1142],"content":"Typedefs","linkify":"Typedefs","nodes":[{"content":"Typedefs","pos":[0,8]}]},{"pos":[1163,1235],"content":"<bpt id=\"p1\">[</bpt>exception_ptr<ept id=\"p1\">](../standard-library/exception-typedefs.md#exception_ptr)</ept>","source":"[exception_ptr](../standard-library/exception-typedefs.md#exception_ptr)"},{"content":"A type that describes a pointer to an exception.","pos":[1236,1284]},{"pos":[1289,1369],"content":"<bpt id=\"p1\">[</bpt>terminate_handler<ept id=\"p1\">](../standard-library/exception-typedefs.md#terminate_handler)</ept>","source":"[terminate_handler](../standard-library/exception-typedefs.md#terminate_handler)"},{"pos":[1370,1458],"content":"A type that describes a pointer to a function suitable for use as a <ph id=\"ph1\">`terminate_handler`</ph>.","source":"A type that describes a pointer to a function suitable for use as a `terminate_handler`."},{"pos":[1463,1545],"content":"<bpt id=\"p1\">[</bpt>unexpected_handler<ept id=\"p1\">](../standard-library/exception-typedefs.md#unexpected_handler)</ept>","source":"[unexpected_handler](../standard-library/exception-typedefs.md#unexpected_handler)"},{"pos":[1546,1636],"content":"A type that describes a pointer to a function suitable for use as an <ph id=\"ph1\">`unexpected_handler`</ph>.","source":"A type that describes a pointer to a function suitable for use as an `unexpected_handler`."},{"pos":[1647,1656],"content":"Functions","linkify":"Functions","nodes":[{"content":"Functions","pos":[0,9]}]},{"pos":[1677,1758],"content":"<bpt id=\"p1\">[</bpt>current_exception<ept id=\"p1\">](../standard-library/exception-functions.md#current_exception)</ept>","source":"[current_exception](../standard-library/exception-functions.md#current_exception)"},{"content":"Obtains a pointer to the current exception.","pos":[1759,1802]},{"pos":[1807,1880],"content":"<bpt id=\"p1\">[</bpt>get_terminate<ept id=\"p1\">](../standard-library/exception-functions.md#get_terminate)</ept>","source":"[get_terminate](../standard-library/exception-functions.md#get_terminate)"},{"pos":[1881,1930],"content":"Obtains the current <ph id=\"ph1\">`terminate_handler`</ph> function.","source":"Obtains the current `terminate_handler` function."},{"pos":[1935,2010],"content":"<bpt id=\"p1\">[</bpt>get_unexpected<ept id=\"p1\">](../standard-library/exception-functions.md#get_unexpected)</ept>","source":"[get_unexpected](../standard-library/exception-functions.md#get_unexpected)"},{"pos":[2011,2061],"content":"Obtains the current <ph id=\"ph1\">`unexpected_handler`</ph> function.","source":"Obtains the current `unexpected_handler` function."},{"pos":[2066,2149],"content":"<bpt id=\"p1\">[</bpt>make_exception_ptr<ept id=\"p1\">](../standard-library/exception-functions.md#make_exception_ptr)</ept>","source":"[make_exception_ptr](../standard-library/exception-functions.md#make_exception_ptr)"},{"pos":[2150,2218],"content":"Creates an <ph id=\"ph1\">`exception_ptr`</ph> object that holds a copy of an exception.","source":"Creates an `exception_ptr` object that holds a copy of an exception."},{"pos":[2223,2304],"content":"<bpt id=\"p1\">[</bpt>rethrow_exception<ept id=\"p1\">](../standard-library/exception-functions.md#rethrow_exception)</ept>","source":"[rethrow_exception](../standard-library/exception-functions.md#rethrow_exception)"},{"content":"Throws an exception passed as a parameter.","pos":[2305,2347]},{"pos":[2352,2425],"content":"<bpt id=\"p1\">[</bpt>set_terminate<ept id=\"p1\">](../standard-library/exception-functions.md#set_terminate)</ept>","source":"[set_terminate](../standard-library/exception-functions.md#set_terminate)"},{"pos":[2426,2511],"content":"Establishes a new <ph id=\"ph1\">`terminate_handler`</ph> to be called at the termination of the program.","source":"Establishes a new `terminate_handler` to be called at the termination of the program."},{"pos":[2516,2591],"content":"<bpt id=\"p1\">[</bpt>set_unexpected<ept id=\"p1\">](../standard-library/exception-functions.md#set_unexpected)</ept>","source":"[set_unexpected](../standard-library/exception-functions.md#set_unexpected)"},{"pos":[2592,2681],"content":"Establishes a new <ph id=\"ph1\">`unexpected_handler`</ph> to be when an unexpected exception is encountered.","source":"Establishes a new `unexpected_handler` to be when an unexpected exception is encountered."},{"pos":[2686,2751],"content":"<bpt id=\"p1\">[</bpt>terminate<ept id=\"p1\">](../standard-library/exception-functions.md#terminate)</ept>","source":"[terminate](../standard-library/exception-functions.md#terminate)"},{"content":"Calls a terminate handler.","pos":[2752,2778]},{"pos":[2783,2866],"content":"<bpt id=\"p1\">[</bpt>uncaught_exception<ept id=\"p1\">](../standard-library/exception-functions.md#uncaught_exception)</ept>","source":"[uncaught_exception](../standard-library/exception-functions.md#uncaught_exception)"},{"pos":[2867,2940],"content":"Returns <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> only if a thrown exception is being currently processed.","source":"Returns **true** only if a thrown exception is being currently processed."},{"pos":[2945,3012],"content":"<bpt id=\"p1\">[</bpt>unexpected<ept id=\"p1\">](../standard-library/exception-functions.md#unexpected)</ept>","source":"[unexpected](../standard-library/exception-functions.md#unexpected)"},{"content":"Calls an unexpected handler.","pos":[3013,3041]},{"pos":[3052,3059],"content":"Classes","linkify":"Classes","nodes":[{"content":"Classes","pos":[0,7]}]},{"pos":[3080,3145],"content":"<bpt id=\"p1\">[</bpt>bad_exception Class<ept id=\"p1\">](../standard-library/bad-exception-class.md)</ept>","source":"[bad_exception Class](../standard-library/bad-exception-class.md)"},{"pos":[3146,3227],"content":"The class describes an exception that can be thrown from an <ph id=\"ph1\">`unexpected_handler`</ph>.","source":"The class describes an exception that can be thrown from an `unexpected_handler`."},{"pos":[3232,3289],"content":"<bpt id=\"p1\">[</bpt>exception Class<ept id=\"p1\">](../standard-library/exception-class.md)</ept>","source":"[exception Class](../standard-library/exception-class.md)"},{"content":"The class serves as the base class for all exceptions thrown by certain expressions and by the Standard C++ Library.","pos":[3290,3406]},{"pos":[3416,3424],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Header Files Reference<ept id=\"p1\">](../standard-library/cpp-standard-library-header-files.md)</ept><ph id=\"ph1\"> </ph>","pos":[3428,3511],"source":"[Header Files Reference](../standard-library/cpp-standard-library-header-files.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Thread Safety in the C++ Standard Library<ept id=\"p1\">](../standard-library/thread-safety-in-the-cpp-standard-library.md)</ept>","pos":[3514,3624],"source":" [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)"}],"content":"---\ntitle: \"&lt;exception&gt; | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"<exception>\"\n  - \"std::<exception>\"\n  - \"std.<exception>\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"exception header\"\nms.assetid: 28900768-5dd7-4834-b907-5e37ab3407db\ncaps.latest.revision: 20\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# &lt;exception&gt;\nDefines several types and functions related to the handling of exceptions. Exception handling is used in situations in which the system can recover from an error. It provides a means for control to be returned from a function to the program. The objective of incorporating exception handling is to increase the program's robustness while providing a way to recover from an error in an orderly fashion.  \n  \n## Syntax  \n  \n```  \n#include <exception>  \n  \n```  \n  \n### Typedefs  \n  \n|||  \n|-|-|  \n|[exception_ptr](../standard-library/exception-typedefs.md#exception_ptr)|A type that describes a pointer to an exception.|  \n|[terminate_handler](../standard-library/exception-typedefs.md#terminate_handler)|A type that describes a pointer to a function suitable for use as a `terminate_handler`.|  \n|[unexpected_handler](../standard-library/exception-typedefs.md#unexpected_handler)|A type that describes a pointer to a function suitable for use as an `unexpected_handler`.|  \n  \n### Functions  \n  \n|||  \n|-|-|  \n|[current_exception](../standard-library/exception-functions.md#current_exception)|Obtains a pointer to the current exception.|  \n|[get_terminate](../standard-library/exception-functions.md#get_terminate)|Obtains the current `terminate_handler` function.|  \n|[get_unexpected](../standard-library/exception-functions.md#get_unexpected)|Obtains the current `unexpected_handler` function.|  \n|[make_exception_ptr](../standard-library/exception-functions.md#make_exception_ptr)|Creates an `exception_ptr` object that holds a copy of an exception.|  \n|[rethrow_exception](../standard-library/exception-functions.md#rethrow_exception)|Throws an exception passed as a parameter.|  \n|[set_terminate](../standard-library/exception-functions.md#set_terminate)|Establishes a new `terminate_handler` to be called at the termination of the program.|  \n|[set_unexpected](../standard-library/exception-functions.md#set_unexpected)|Establishes a new `unexpected_handler` to be when an unexpected exception is encountered.|  \n|[terminate](../standard-library/exception-functions.md#terminate)|Calls a terminate handler.|  \n|[uncaught_exception](../standard-library/exception-functions.md#uncaught_exception)|Returns **true** only if a thrown exception is being currently processed.|  \n|[unexpected](../standard-library/exception-functions.md#unexpected)|Calls an unexpected handler.|  \n  \n### Classes  \n  \n|||  \n|-|-|  \n|[bad_exception Class](../standard-library/bad-exception-class.md)|The class describes an exception that can be thrown from an `unexpected_handler`.|  \n|[exception Class](../standard-library/exception-class.md)|The class serves as the base class for all exceptions thrown by certain expressions and by the Standard C++ Library.|  \n  \n## See Also  \n [Header Files Reference](../standard-library/cpp-standard-library-header-files.md)   \n [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)\n\n"}