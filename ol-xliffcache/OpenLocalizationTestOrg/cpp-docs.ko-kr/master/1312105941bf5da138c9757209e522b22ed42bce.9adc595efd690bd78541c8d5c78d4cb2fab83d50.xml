{"nodes":[{"pos":[12,61],"content":"Compiler Warning (level 3) C4373 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Warning (level 3) C4373 | Microsoft Docs","pos":[0,49]}]},{"pos":[630,662],"content":"Compiler Warning (level 3) C4373","linkify":"Compiler Warning (level 3) C4373","nodes":[{"content":"Compiler Warning (level 3) C4373","pos":[0,32]}]},{"content":"'%$S': virtual function overrides '%$pS', previous versions of the compiler did not override when parameters only differed by const/volatile qualifiers","pos":[663,814]},{"content":"Your application contains a method in a derived class that overrides a virtual method in a base class, and the parameters in the overriding method differ by only a <bpt id=\"p1\">[</bpt>const<ept id=\"p1\">](../../cpp/const-cpp.md)</ept> or <bpt id=\"p2\">[</bpt>volatile<ept id=\"p2\">](../../cpp/volatile-cpp.md)</ept> qualifier from the parameters of the virtual method.","pos":[821,1110],"source":"Your application contains a method in a derived class that overrides a virtual method in a base class, and the parameters in the overriding method differ by only a [const](../../cpp/const-cpp.md) or [volatile](../../cpp/volatile-cpp.md) qualifier from the parameters of the virtual method."},{"content":"This means the compiler must bind a function reference to the method in either the base or derived class.","pos":[1111,1216]},{"content":"Versions of the compiler prior to <ph id=\"ph1\">[!INCLUDE[cpp_orcas_long](../../cpp/includes/cpp_orcas_long_md.md)]</ph> bind the function to the method in the base class, then issue a warning message.","pos":[1223,1405],"source":"Versions of the compiler prior to [!INCLUDE[cpp_orcas_long](../../cpp/includes/cpp_orcas_long_md.md)] bind the function to the method in the base class, then issue a warning message."},{"content":"Subsequent versions of the compiler ignore the <ph id=\"ph1\">`const`</ph> or <ph id=\"ph2\">`volatile`</ph> qualifier, bind the function to the method in the derived class, then issue warning <ph id=\"ph3\">`C4373`</ph>.","pos":[1406,1567],"source":" Subsequent versions of the compiler ignore the `const` or `volatile` qualifier, bind the function to the method in the derived class, then issue warning `C4373`."},{"content":"This latter behavior complies with the C++ standard.","pos":[1568,1620]},{"pos":[1629,1636],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example generates warning C4373.","pos":[1640,1691]}],"content":"---\ntitle: \"Compiler Warning (level 3) C4373 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"C4373\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C4373\"\nms.assetid: 670c0ba3-b7d6-4aed-b207-1cb84da3bcde\ncaps.latest.revision: 7\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Compiler Warning (level 3) C4373\n'%$S': virtual function overrides '%$pS', previous versions of the compiler did not override when parameters only differed by const/volatile qualifiers  \n  \n Your application contains a method in a derived class that overrides a virtual method in a base class, and the parameters in the overriding method differ by only a [const](../../cpp/const-cpp.md) or [volatile](../../cpp/volatile-cpp.md) qualifier from the parameters of the virtual method. This means the compiler must bind a function reference to the method in either the base or derived class.  \n  \n Versions of the compiler prior to [!INCLUDE[cpp_orcas_long](../../cpp/includes/cpp_orcas_long_md.md)] bind the function to the method in the base class, then issue a warning message. Subsequent versions of the compiler ignore the `const` or `volatile` qualifier, bind the function to the method in the derived class, then issue warning `C4373`. This latter behavior complies with the C++ standard.  \n  \n## Example  \n The following code example generates warning C4373.  \n  \n```  \n// c4373.cpp  \n// compile with: /c /W3  \n#include <stdio.h>  \nstruct Base  \n{  \n    virtual void f(int i) {  \n        printf(\"base\\n\");  \n    }  \n};  \nstruct Derived : Base  \n{  \n    void f(const int i) {  // C4373  \n        printf(\"derived\\n\");  \n    }  \n};  \nvoid main()  \n{  \n    Derived d;  \n    Base* p = &d;  \n    p->f(1);  \n}  \n```  \n  \n```Output  \nderived  \n```"}