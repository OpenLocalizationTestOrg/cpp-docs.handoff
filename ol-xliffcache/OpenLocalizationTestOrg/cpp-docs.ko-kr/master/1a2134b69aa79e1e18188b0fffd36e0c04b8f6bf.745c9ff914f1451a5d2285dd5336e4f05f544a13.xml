{"nodes":[{"pos":[12,53],"content":"CMFCRibbonComboBox Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CMFCRibbonComboBox Class | Microsoft Docs","pos":[0,41]}]},{"content":"CMFCRibbonComboBox Class","pos":[628,652]},{"pos":[653,788],"content":"The <ph id=\"ph1\">`CMFCRibbonComboBox`</ph> class implements a combo box control that you can add to a ribbon bar, a ribbon panel, or a ribbon popup menu.","source":"The `CMFCRibbonComboBox` class implements a combo box control that you can add to a ribbon bar, a ribbon panel, or a ribbon popup menu."},{"content":"Syntax","pos":[797,803]},{"content":"Members","pos":[878,885]},{"content":"Constructors","pos":[895,907]},{"content":"Name","pos":[914,918]},{"content":"Description","pos":[919,930]},{"content":"CMFCRibbonComboBox::CMFCRibbonComboBox","pos":[969,1007]},{"content":"Constructs a CMFCRibbonComboBox object.","pos":[1050,1089]},{"content":"Public Methods","pos":[1100,1114]},{"content":"Name","pos":[1121,1125]},{"content":"Description","pos":[1126,1137]},{"content":"CMFCRibbonComboBox::AddItem","pos":[1176,1203]},{"content":"Appends a unique item to the list box.","pos":[1235,1273]},{"content":"CMFCRibbonComboBox::DeleteItem","pos":[1279,1309]},{"content":"Deletes a specified item from the list box.","pos":[1344,1387]},{"content":"CMFCRibbonComboBox::EnableDropDownListResize","pos":[1393,1437]},{"content":"Specifies whether the list box can change size when it drops down.","pos":[1486,1552]},{"content":"CMFCRibbonComboBox::FindItem","pos":[1558,1586]},{"content":"Returns the index of the first item in the list box that matches a specified string.","pos":[1619,1703]},{"content":"CMFCRibbonComboBox::GetCount","pos":[1709,1737]},{"content":"Returns the number of items in the list box.","pos":[1770,1814]},{"content":"CMFCRibbonComboBox::GetCurSel","pos":[1820,1849]},{"content":"Gets the index of the currently selected item in the list box.","pos":[1883,1945]},{"content":"CMFCRibbonComboBox::GetDropDownHeight","pos":[1951,1988]},{"content":"Gets the height of the list box when the list box is dropped down.","pos":[2030,2096]},{"content":"CMFCRibbonComboBox::GetIntermediateSize","pos":[2102,2141]},{"content":"Returns the size of the combo box as displayed in intermediate mode.","pos":[2185,2253]},{"content":"CMFCRibbonComboBox::GetItem","pos":[2259,2286]},{"content":"Returns the string associated with an item at a specified index in the list box.","pos":[2318,2398]},{"content":"CMFCRibbonComboBox::GetItemData","pos":[2404,2435]},{"content":"Returns the data associated with an item at a specified index in the list box.","pos":[2471,2549]},{"content":"CMFCRibbonComboBox::HasEditBox","pos":[2555,2585]},{"content":"Indicates whether the control contains an edit box.","pos":[2620,2671]},{"content":"CMFCRibbonComboBox::IsResizeDropDownList","pos":[2677,2717]},{"content":"Indicates whether or not the list box can be resized.","pos":[2762,2815]},{"content":"CMFCRibbonComboBox::OnSelectItem","pos":[2821,2853]},{"content":"Called by the framework when the user selects an item in the list box.","pos":[2890,2960]},{"content":"CMFCRibbonComboBox::RemoveAllItems","pos":[2966,3000]},{"content":"Deletes all items from the list box and clears the edit box.","pos":[3039,3099]},{"content":"CMFCRibbonComboBox::SelectItem","pos":[3105,3135]},{"content":"Selects an item in the list box.","pos":[3170,3202]},{"content":"CMFCRibbonComboBox::SetDropDownHeight","pos":[3208,3245]},{"content":"Sets the height of the list box when it is dropped down.","pos":[3287,3343]},{"content":"Remarks","pos":[3353,3360]},{"content":"The ribbon combo box consists of a list box combined with either a static label or label that can be edited by the user.","pos":[3364,3484]},{"content":"You must specify which type you want when you create your ribbon combo box.","pos":[3485,3560]},{"content":"Example","pos":[3569,3576]},{"pos":[3580,3771],"content":"The following example demonstrates how to construct an object of the <ph id=\"ph1\">`CMFCRibbonComboBox`</ph> class, add an item to the combo box, select an item in the combo box, and add a combo box to a panel.","source":"The following example demonstrates how to construct an object of the `CMFCRibbonComboBox` class, add an item to the combo box, select an item in the combo box, and add a combo box to a panel."},{"pos":[3789,3809],"content":"NVC_MFC_RibbonApp#11"},{"content":"Inheritance Hierarchy","pos":[3888,3909]},{"content":"CObject","pos":[3914,3921]},{"content":"CMFCRibbonBaseElement","pos":[3968,3989]},{"content":"CMFCRibbonButton","pos":[4050,4066]},{"content":"CMFCRibbonEdit","pos":[4122,4136]},{"content":"CMFCRibbonComboBox","pos":[4190,4208]},{"content":"Requirements","pos":[4267,4279]},{"pos":[4283,4314],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxribboncombobox.h","source":"**Header:** afxribboncombobox.h"},{"pos":[4368,4395],"content":"CMFCRibbonComboBox::AddItem"},{"content":"Appends a unique item to the list box.","pos":[4399,4437]},{"content":"Parameters","pos":[4536,4546]},{"content":"[in]","pos":[4550,4554]},{"content":"The string of the item to add.","pos":[4569,4599]},{"content":"[in]","pos":[4606,4610]},{"content":"The data associated with the item to add.","pos":[4623,4664]},{"content":"Return Value","pos":[4674,4686]},{"content":"The zero-based index of the appended item.","pos":[4690,4732]},{"pos":[4797,4835],"content":"CMFCRibbonComboBox::CMFCRibbonComboBox"},{"pos":[4839,4880],"content":"Constructs a <ph id=\"ph1\">`CMFCRibbonComboBox`</ph> object.","source":"Constructs a `CMFCRibbonComboBox` object."},{"content":"Parameters","pos":[5087,5097]},{"content":"[in]","pos":[5101,5105]},{"content":"The ID of the combo box.","pos":[5115,5139]},{"content":"[in]","pos":[5146,5150]},{"content":"if you want an edit box within the control; <ph id=\"ph1\">`FALSE`</ph> otherwise.","pos":[5175,5237],"source":" if you want an edit box within the control; `FALSE` otherwise."},{"content":"[in]","pos":[5244,5248]},{"content":"Width of the combo box in pixels; or -1 for the default width.","pos":[5261,5323]},{"content":"[in]","pos":[5330,5334]},{"content":"The display label of the combo box.","pos":[5350,5385]},{"content":"[in]","pos":[5392,5396]},{"content":"The small image index of the combo box.","pos":[5409,5448]},{"content":"Remarks","pos":[5458,5465]},{"content":"The default width is 108 pixels.","pos":[5469,5501]},{"pos":[5558,5588],"content":"CMFCRibbonComboBox::DeleteItem"},{"content":"Deletes a specified item from the list box.","pos":[5592,5635]},{"content":"Parameters","pos":[5761,5771]},{"content":"[in]","pos":[5775,5779]},{"content":"The zero-based index of the item to be deleted.","pos":[5792,5839]},{"content":"[in]","pos":[5846,5850]},{"content":"The data associated with the item to be deleted.","pos":[5863,5911]},{"content":"[in]","pos":[5918,5922]},{"content":"The string of the item to be deleted.","pos":[5937,5974]},{"content":"If there are multiple items with the same string, the first item is deleted.","pos":[5975,6051]},{"content":"Return Value","pos":[6061,6073]},{"pos":[6084,6143],"content":"if the specified item has been deleted; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","source":" if the specified item has been deleted; otherwise, `FALSE`."},{"content":"Remarks","pos":[6153,6160]},{"pos":[6231,6275],"content":"CMFCRibbonComboBox::EnableDropDownListResize"},{"content":"Specifies whether the list box can change size when it drops down.","pos":[6279,6345]},{"content":"Parameters","pos":[6421,6431]},{"content":"[in]","pos":[6435,6439]},{"content":"to enable resizing; <ph id=\"ph1\">`FALSE`</ph> to disable resizing.","pos":[6460,6508],"source":" to enable resizing; `FALSE` to disable resizing."},{"content":"Remarks","pos":[6518,6525]},{"content":"When resizing is enabled, the list box will change size to fit the items it displays.","pos":[6529,6614]},{"pos":[6669,6697],"content":"CMFCRibbonComboBox::FindItem"},{"content":"Returns the index of the first item in the list box that matches a specified string.","pos":[6701,6785]},{"content":"Parameters","pos":[6851,6861]},{"content":"[in]","pos":[6865,6869]},{"content":"The string of an item in the list box.","pos":[6884,6922]},{"content":"Return Value","pos":[6932,6944]},{"content":"The zero-based index of the item; or -1 if the item is not found.","pos":[6948,7013]},{"content":"Remarks","pos":[7023,7030]},{"pos":[7085,7113],"content":"CMFCRibbonComboBox::GetCount"},{"content":"Returns the number of items in the list box.","pos":[7117,7161]},{"content":"Return Value","pos":[7215,7227]},{"content":"The number of items in the list box, or 0 if the list box contains no items.","pos":[7231,7307]},{"content":"Remarks","pos":[7317,7324]},{"pos":[7380,7409],"content":"CMFCRibbonComboBox::GetCurSel"},{"content":"Gets the index of the currently selected item in the list box.","pos":[7413,7475]},{"content":"Return Value","pos":[7526,7538]},{"content":"The zero-based index of the currently selected item in the list box; or -1 if no item is selected.","pos":[7542,7640]},{"pos":[7704,7741],"content":"CMFCRibbonComboBox::GetDropDownHeight"},{"content":"Gets the height of the list box when the list box is dropped down.","pos":[7745,7811]},{"content":"Return Value","pos":[7861,7873]},{"content":"The height, in pixels, of the list box.","pos":[7877,7916]},{"content":"Remarks","pos":[7926,7933]},{"pos":[7999,8038],"content":"CMFCRibbonComboBox::GetIntermediateSize"},{"content":"Returns the size of the combo box as displayed in intermediate mode.","pos":[8042,8110]},{"content":"Parameters","pos":[8180,8190]},{"content":"[in]","pos":[8194,8198]},{"content":"Pointer to a device context for the combo box.","pos":[8208,8254]},{"content":"Return Value","pos":[8264,8276]},{"content":"The size of the combo box.","pos":[8280,8306]},{"content":"Remarks","pos":[8316,8323]},{"content":"The size returned is based on the size of the combo box when it displays small images.","pos":[8327,8413]},{"pos":[8467,8494],"content":"CMFCRibbonComboBox::GetItem"},{"content":"Returns the string associated with an item at a specified index in the list box.","pos":[8498,8578]},{"content":"Parameters","pos":[8641,8651]},{"content":"[in]","pos":[8655,8659]},{"content":"The zero-based index of an item in the list box.","pos":[8672,8720]},{"content":"Return Value","pos":[8730,8742]},{"pos":[8746,8936],"content":"A pointer to the string that is associated with the item; otherwise, <ph id=\"ph1\">`NULL`</ph> if the index parameter is invalid, or if the index parameter is -1 and there is no item selected in the combo box.","source":"A pointer to the string that is associated with the item; otherwise, `NULL` if the index parameter is invalid, or if the index parameter is -1 and there is no item selected in the combo box."},{"content":"Remarks","pos":[8946,8953]},{"pos":[9011,9042],"content":"CMFCRibbonComboBox::GetItemData"},{"content":"Returns the data associated with an item at a specified index in the list box.","pos":[9046,9124]},{"content":"Parameters","pos":[9193,9203]},{"content":"[in]","pos":[9207,9211]},{"content":"The zero-based index of an item in the list box.","pos":[9224,9272]},{"content":"Return Value","pos":[9282,9294]},{"content":"The data associated with the item; or 0 if the item does not exist, or if the index parameter is -1 and there is no selected item in the list box.","pos":[9298,9444]},{"pos":[9501,9531],"content":"CMFCRibbonComboBox::HasEditBox"},{"content":"Indicates whether the control contains an edit box.","pos":[9535,9586]},{"content":"Return Value","pos":[9639,9651]},{"pos":[9662,9718],"content":"if the control contains an edit box; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","source":" if the control contains an edit box; otherwise, `FALSE`."},{"content":"Remarks","pos":[9728,9735]},{"pos":[9802,9842],"content":"CMFCRibbonComboBox::IsResizeDropDownList"},{"content":"Indicates whether or not the list box can be resized.","pos":[9846,9899]},{"content":"Return Value","pos":[9962,9974]},{"content":"if the list box can be resized; otherwise <ph id=\"ph1\">`FALSE`</ph>.","pos":[9985,10035],"source":" if the list box can be resized; otherwise `FALSE`."},{"content":"CMFCRibbonComboBox::EnableDropDownListResize","pos":[10037,10081]},{"content":"Remarks","pos":[10139,10146]},{"pos":[10150,10297],"content":"You can enable list box resizing by using the <bpt id=\"p1\">[</bpt>CMFCRibbonComboBox::EnableDropDownListResize<ept id=\"p1\">](#cmfcribboncombobox__enabledropdownlistresize)</ept> method.","source":"You can enable list box resizing by using the [CMFCRibbonComboBox::EnableDropDownListResize](#cmfcribboncombobox__enabledropdownlistresize) method."},{"pos":[10356,10388],"content":"CMFCRibbonComboBox::OnSelectItem"},{"content":"Called by the framework when a user selects an item in the list box.","pos":[10392,10460]},{"content":"Parameters","pos":[10523,10533]},{"content":"[in]","pos":[10537,10541]},{"content":"The index of the selected item.","pos":[10553,10584]},{"content":"Remarks","pos":[10594,10601]},{"content":"Override this method if you want to process a user input selection.","pos":[10605,10672]},{"pos":[10733,10767],"content":"CMFCRibbonComboBox::RemoveAllItems"},{"content":"Deletes all items from the list box and clears the edit box.","pos":[10771,10831]},{"content":"Remarks","pos":[10879,10886]},{"pos":[10943,10973],"content":"CMFCRibbonComboBox::SelectItem"},{"content":"Selects an item in the list box.","pos":[10977,11009]},{"content":"Parameters","pos":[11135,11145]},{"content":"[in]","pos":[11149,11153]},{"content":"The zero-based index of an item in the list box.","pos":[11166,11214]},{"content":"[in]","pos":[11221,11225]},{"content":"The data associated with an item in the list box.","pos":[11238,11287]},{"content":"[in]","pos":[11294,11298]},{"content":"The string of an item in the list box.","pos":[11313,11351]},{"content":"Return Value","pos":[11361,11373]},{"pos":[11384,11432],"content":"if the method was successful; otherwise <ph id=\"ph1\">`FALSE`</ph>.","source":" if the method was successful; otherwise `FALSE`."},{"content":"Remarks","pos":[11442,11449]},{"pos":[11513,11550],"content":"CMFCRibbonComboBox::SetDropDownHeight"},{"content":"Sets the height of the list box when it is dropped down.","pos":[11554,11610]},{"content":"Parameters","pos":[11672,11682]},{"content":"[in]","pos":[11686,11690]},{"content":"The height, in pixels, of the list box.","pos":[11704,11743]},{"content":"Remarks","pos":[11753,11760]},{"content":"The default height is 150 pixels.","pos":[11764,11797]},{"content":"See Also","pos":[11806,11814]},{"content":"Hierarchy Chart","pos":[11819,11834]},{"content":"Classes","pos":[11871,11878]},{"content":"CMFCRibbonEdit Class","pos":[11921,11941]}],"content":"---\ntitle: \"CMFCRibbonComboBox Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CMFCRibbonComboBox\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CMFCRibbonComboBox class\"\nms.assetid: 9b29a6a4-cf17-4152-9b13-0bf90784b30d\ncaps.latest.revision: 35\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CMFCRibbonComboBox Class\nThe `CMFCRibbonComboBox` class implements a combo box control that you can add to a ribbon bar, a ribbon panel, or a ribbon popup menu.  \n  \n## Syntax  \n  \n```  \nclass CMFCRibbonComboBox : public CMFCRibbonEdit  \n```  \n  \n## Members  \n  \n### Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCRibbonComboBox::CMFCRibbonComboBox](#cmfcribboncombobox__cmfcribboncombobox)|Constructs a CMFCRibbonComboBox object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCRibbonComboBox::AddItem](#cmfcribboncombobox__additem)|Appends a unique item to the list box.|  \n|[CMFCRibbonComboBox::DeleteItem](#cmfcribboncombobox__deleteitem)|Deletes a specified item from the list box.|  \n|[CMFCRibbonComboBox::EnableDropDownListResize](#cmfcribboncombobox__enabledropdownlistresize)|Specifies whether the list box can change size when it drops down.|  \n|[CMFCRibbonComboBox::FindItem](#cmfcribboncombobox__finditem)|Returns the index of the first item in the list box that matches a specified string.|  \n|[CMFCRibbonComboBox::GetCount](#cmfcribboncombobox__getcount)|Returns the number of items in the list box.|  \n|[CMFCRibbonComboBox::GetCurSel](#cmfcribboncombobox__getcursel)|Gets the index of the currently selected item in the list box.|  \n|[CMFCRibbonComboBox::GetDropDownHeight](#cmfcribboncombobox__getdropdownheight)|Gets the height of the list box when the list box is dropped down.|  \n|[CMFCRibbonComboBox::GetIntermediateSize](#cmfcribboncombobox__getintermediatesize)|Returns the size of the combo box as displayed in intermediate mode.|  \n|[CMFCRibbonComboBox::GetItem](#cmfcribboncombobox__getitem)|Returns the string associated with an item at a specified index in the list box.|  \n|[CMFCRibbonComboBox::GetItemData](#cmfcribboncombobox__getitemdata)|Returns the data associated with an item at a specified index in the list box.|  \n|[CMFCRibbonComboBox::HasEditBox](#cmfcribboncombobox__haseditbox)|Indicates whether the control contains an edit box.|  \n|[CMFCRibbonComboBox::IsResizeDropDownList](#cmfcribboncombobox__isresizedropdownlist)|Indicates whether or not the list box can be resized.|  \n|[CMFCRibbonComboBox::OnSelectItem](#cmfcribboncombobox__onselectitem)|Called by the framework when the user selects an item in the list box.|  \n|[CMFCRibbonComboBox::RemoveAllItems](#cmfcribboncombobox__removeallitems)|Deletes all items from the list box and clears the edit box.|  \n|[CMFCRibbonComboBox::SelectItem](#cmfcribboncombobox__selectitem)|Selects an item in the list box.|  \n|[CMFCRibbonComboBox::SetDropDownHeight](#cmfcribboncombobox__setdropdownheight)|Sets the height of the list box when it is dropped down.|  \n  \n## Remarks  \n The ribbon combo box consists of a list box combined with either a static label or label that can be edited by the user. You must specify which type you want when you create your ribbon combo box.  \n  \n## Example  \n The following example demonstrates how to construct an object of the `CMFCRibbonComboBox` class, add an item to the combo box, select an item in the combo box, and add a combo box to a panel.  \n  \n [!code-cpp[NVC_MFC_RibbonApp#11](../../mfc/reference/codesnippet/cpp/cmfcribboncombobox-class_1.cpp)]  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CMFCRibbonBaseElement](../../mfc/reference/cmfcribbonbaseelement-class.md)  \n  \n [CMFCRibbonButton](../../mfc/reference/cmfcribbonbutton-class.md)  \n  \n [CMFCRibbonEdit](../../mfc/reference/cmfcribbonedit-class.md)  \n  \n [CMFCRibbonComboBox](../../mfc/reference/cmfcribboncombobox-class.md)  \n  \n## Requirements  \n **Header:** afxribboncombobox.h  \n  \n##  <a name=\"cmfcribboncombobox__additem\"></a>  CMFCRibbonComboBox::AddItem  \n Appends a unique item to the list box.  \n  \n```  \nvirtual INT_PTR AddItem(\n    LPCTSTR lpszItem,  \n    DWORD_PTR dwData=0);\n```  \n  \n### Parameters  \n [in] `lpszItem`  \n The string of the item to add.  \n  \n [in] `dwData`  \n The data associated with the item to add.  \n  \n### Return Value  \n The zero-based index of the appended item.  \n  \n##  <a name=\"cmfcribboncombobox__cmfcribboncombobox\"></a>  CMFCRibbonComboBox::CMFCRibbonComboBox  \n Constructs a `CMFCRibbonComboBox` object.  \n  \n```  \npublic:  \nCMFCRibbonComboBox(\n    UINT nID,  \n    BOOL bHasEditBox=TRUE,  \n    Int nWidth=-1,  \n    LPCTSTR lpszLabel=NULL,  \n    Int nImage=-1);\n\nprotected:  \nCMFCRibbonComboBox();\n```  \n  \n### Parameters  \n [in] `nID`  \n The ID of the combo box.  \n  \n [in] `bHasEditBox`  \n `TRUE` if you want an edit box within the control; `FALSE` otherwise.  \n  \n [in] `nWidth`  \n Width of the combo box in pixels; or -1 for the default width.  \n  \n [in] `lpszLabel`  \n The display label of the combo box.  \n  \n [in] `nImage`  \n The small image index of the combo box.  \n  \n### Remarks  \n The default width is 108 pixels.  \n  \n##  <a name=\"cmfcribboncombobox__deleteitem\"></a>  CMFCRibbonComboBox::DeleteItem  \n Deletes a specified item from the list box.  \n  \n```  \nBOOL DeleteItem(int iIndex);\n\nBOOL DeleteItem(DWORD_PTR dwData);\n\nBOOL DeleteItem(LPCTSTR lpszText);\n```  \n  \n### Parameters  \n [in] `iIndex`  \n The zero-based index of the item to be deleted.  \n  \n [in] `dwData`  \n The data associated with the item to be deleted.  \n  \n [in] `lpszText`  \n The string of the item to be deleted. If there are multiple items with the same string, the first item is deleted.  \n  \n### Return Value  \n `TRUE` if the specified item has been deleted; otherwise, `FALSE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncombobox__enabledropdownlistresize\"></a>  CMFCRibbonComboBox::EnableDropDownListResize  \n Specifies whether the list box can change size when it drops down.  \n  \n```  \nvoid EnableDropDownListResize(BOOL bEnable=FALSE);\n```  \n  \n### Parameters  \n [in] `bEnable`  \n `TRUE` to enable resizing; `FALSE` to disable resizing.  \n  \n### Remarks  \n When resizing is enabled, the list box will change size to fit the items it displays.  \n  \n##  <a name=\"cmfcribboncombobox__finditem\"></a>  CMFCRibbonComboBox::FindItem  \n Returns the index of the first item in the list box that matches a specified string.  \n  \n```  \nint FindItem(LPCTSTR lpszText) const;\n\n \n```  \n  \n### Parameters  \n [in] `lpszText`  \n The string of an item in the list box.  \n  \n### Return Value  \n The zero-based index of the item; or -1 if the item is not found.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncombobox__getcount\"></a>  CMFCRibbonComboBox::GetCount  \n Returns the number of items in the list box.  \n  \n```  \nINT_PTR GetCount() const;\n\n \n```  \n  \n### Return Value  \n The number of items in the list box, or 0 if the list box contains no items.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncombobox__getcursel\"></a>  CMFCRibbonComboBox::GetCurSel  \n Gets the index of the currently selected item in the list box.  \n  \n```  \nint GetCurSel() const;\n\n \n```  \n  \n### Return Value  \n The zero-based index of the currently selected item in the list box; or -1 if no item is selected.  \n  \n##  <a name=\"cmfcribboncombobox__getdropdownheight\"></a>  CMFCRibbonComboBox::GetDropDownHeight  \n Gets the height of the list box when the list box is dropped down.  \n  \n```  \nint GetDropDownHeight();\n```  \n  \n### Return Value  \n The height, in pixels, of the list box.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncombobox__getintermediatesize\"></a>  CMFCRibbonComboBox::GetIntermediateSize  \n Returns the size of the combo box as displayed in intermediate mode.  \n  \n```  \nvirtual CSize GetIntermediateSize(CDC* pDC);\n```  \n  \n### Parameters  \n [in] `pDC`  \n Pointer to a device context for the combo box.  \n  \n### Return Value  \n The size of the combo box.  \n  \n### Remarks  \n The size returned is based on the size of the combo box when it displays small images.  \n  \n##  <a name=\"cmfcribboncombobox__getitem\"></a>  CMFCRibbonComboBox::GetItem  \n Returns the string associated with an item at a specified index in the list box.  \n  \n```  \nLPCTSTR GetItem(int iIndex) const;\n\n \n```  \n  \n### Parameters  \n [in] `iIndex`  \n The zero-based index of an item in the list box.  \n  \n### Return Value  \n A pointer to the string that is associated with the item; otherwise, `NULL` if the index parameter is invalid, or if the index parameter is -1 and there is no item selected in the combo box.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncombobox__getitemdata\"></a>  CMFCRibbonComboBox::GetItemData  \n Returns the data associated with an item at a specified index in the list box.  \n  \n```  \nDWORD_PTR GetItemData(int iIndex) const;\n\n \n```  \n  \n### Parameters  \n [in] `iIndex`  \n The zero-based index of an item in the list box.  \n  \n### Return Value  \n The data associated with the item; or 0 if the item does not exist, or if the index parameter is -1 and there is no selected item in the list box.  \n  \n##  <a name=\"cmfcribboncombobox__haseditbox\"></a>  CMFCRibbonComboBox::HasEditBox  \n Indicates whether the control contains an edit box.  \n  \n```  \nBOOL HasEditBox() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the control contains an edit box; otherwise, `FALSE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncombobox__isresizedropdownlist\"></a>  CMFCRibbonComboBox::IsResizeDropDownList  \n Indicates whether or not the list box can be resized.  \n  \n```  \nBOOL IsResizeDropDownList() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the list box can be resized; otherwise `FALSE`. [CMFCRibbonComboBox::EnableDropDownListResize](#cmfcribboncombobox__enabledropdownlistresize)  \n  \n### Remarks  \n You can enable list box resizing by using the [CMFCRibbonComboBox::EnableDropDownListResize](#cmfcribboncombobox__enabledropdownlistresize) method.  \n  \n##  <a name=\"cmfcribboncombobox__onselectitem\"></a>  CMFCRibbonComboBox::OnSelectItem  \n Called by the framework when a user selects an item in the list box.  \n  \n```  \nvirtual void OnSelectItem(int nItem);\n```  \n  \n### Parameters  \n [in] `nItem`  \n The index of the selected item.  \n  \n### Remarks  \n Override this method if you want to process a user input selection.  \n  \n##  <a name=\"cmfcribboncombobox__removeallitems\"></a>  CMFCRibbonComboBox::RemoveAllItems  \n Deletes all items from the list box and clears the edit box.  \n  \n```  \nvoid RemoveAllItems();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncombobox__selectitem\"></a>  CMFCRibbonComboBox::SelectItem  \n Selects an item in the list box.  \n  \n```  \nBOOL SelectItem(int iIndex);\n\nBOOL SelectItem(DWORD_PTR dwData);\n\nBOOL SelectItem(LPCTSTR lpszText);\n```  \n  \n### Parameters  \n [in] `iIndex`  \n The zero-based index of an item in the list box.  \n  \n [in] `dwData`  \n The data associated with an item in the list box.  \n  \n [in] `lpszText`  \n The string of an item in the list box.  \n  \n### Return Value  \n `TRUE` if the method was successful; otherwise `FALSE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncombobox__setdropdownheight\"></a>  CMFCRibbonComboBox::SetDropDownHeight  \n Sets the height of the list box when it is dropped down.  \n  \n```  \nvoid SetDropDownHeight(int nHeight);\n```  \n  \n### Parameters  \n [in] `nHeight`  \n The height, in pixels, of the list box.  \n  \n### Remarks  \n The default height is 150 pixels.  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)   \n [CMFCRibbonEdit Class](../../mfc/reference/cmfcribbonedit-class.md)\n"}