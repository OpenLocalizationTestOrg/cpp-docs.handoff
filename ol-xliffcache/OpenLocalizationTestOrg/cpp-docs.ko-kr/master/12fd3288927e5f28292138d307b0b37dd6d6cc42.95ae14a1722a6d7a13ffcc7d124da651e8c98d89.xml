{"nodes":[{"pos":[12,51],"content":"CSettingsStoreSP Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CSettingsStoreSP Class | Microsoft Docs","pos":[0,39]}]},{"content":"CSettingsStoreSP Class","pos":[622,644]},{"pos":[645,804],"content":"The <ph id=\"ph1\">`CSettingsStoreSP`</ph> class is a helper class that you can use to create instances of the <bpt id=\"p1\">[</bpt>CSettingsStore Class<ept id=\"p1\">](../../mfc/reference/csettingsstore-class.md)</ept>.","source":"The `CSettingsStoreSP` class is a helper class that you can use to create instances of the [CSettingsStore Class](../../mfc/reference/csettingsstore-class.md)."},{"content":"Syntax","pos":[813,819]},{"content":"Members","pos":[868,875]},{"content":"Public Constructors","pos":[885,904]},{"content":"Name","pos":[911,915]},{"content":"Description","pos":[916,927]},{"content":"CSettingsStoreSP::CSettingsStoreSP","pos":[966,1000]},{"pos":[1039,1078],"content":"Constructs a <ph id=\"ph1\">`CSettingsStoreSP`</ph> object.","source":"Constructs a `CSettingsStoreSP` object."},{"content":"Public Methods","pos":[1089,1103]},{"content":"Name","pos":[1110,1114]},{"content":"Description","pos":[1115,1126]},{"content":"CSettingsStoreSP::Create","pos":[1165,1189]},{"pos":[1218,1287],"content":"Creates an instance of a class that is derived from <ph id=\"ph1\">`CSettingsStore`</ph>.","source":"Creates an instance of a class that is derived from `CSettingsStore`."},{"content":"CSettingsStoreSP::SetRuntimeClass","pos":[1293,1326]},{"content":"Sets the runtime class.","pos":[1364,1387]},{"content":"The <ph id=\"ph1\">`Create`</ph> method uses the runtime class to determine what class of objects to create.","pos":[1388,1476],"source":" The `Create` method uses the runtime class to determine what class of objects to create."},{"content":"Data Members","pos":[1487,1499]},{"content":"Name","pos":[1506,1510]},{"content":"Description","pos":[1511,1522]},{"content":"Custom user data that is stored in the <ph id=\"ph1\">`CSettingsStoreSP`</ph> object.","pos":[1575,1640],"source":"Custom user data that is stored in the `CSettingsStoreSP` object."},{"content":"You supply this data in the constructor of the <ph id=\"ph1\">`CSettingsStoreSP`</ph> object.","pos":[1641,1714],"source":" You supply this data in the constructor of the `CSettingsStoreSP` object."},{"pos":[1733,1802],"content":"The <ph id=\"ph1\">`CSettingsStore`</ph>-derived object that the <ph id=\"ph2\">`Create`</ph> method creates.","source":"The `CSettingsStore`-derived object that the `Create` method creates."},{"content":"Remarks","pos":[1812,1819]},{"content":"You can use the <ph id=\"ph1\">`CSettingsStoreSP`</ph> class to redirect all MFC registry operations to other locations, such as an XML file or a database.","pos":[1823,1958],"source":"You can use the `CSettingsStoreSP` class to redirect all MFC registry operations to other locations, such as an XML file or a database."},{"content":"To do this, follow these steps:","pos":[1959,1990]},{"pos":[2000,2072],"content":"Create a class (such as <ph id=\"ph1\">`CMyStore`</ph>) and derive it from <ph id=\"ph2\">`CSettingsStore`</ph>.","source":"Create a class (such as `CMyStore`) and derive it from `CSettingsStore`."},{"pos":[2082,2314],"content":"Use <bpt id=\"p1\">[</bpt>DECLARE_DYNCREATE<ept id=\"p1\">](run-time-object-model-services.md#declare_dyncreate)</ept> and <bpt id=\"p2\">[</bpt>IMPLEMENT_DYNCREATE<ept id=\"p2\">](run-time-object-model-services.md#implement_dyncreate)</ept> macros with your custom <ph id=\"ph1\">`CSettingsStore`</ph> class to enable dynamic creation.","source":"Use [DECLARE_DYNCREATE](run-time-object-model-services.md#declare_dyncreate) and [IMPLEMENT_DYNCREATE](run-time-object-model-services.md#implement_dyncreate) macros with your custom `CSettingsStore` class to enable dynamic creation."},{"content":"Override the virtual functions and implement the <ph id=\"ph1\">`Read`</ph> and <ph id=\"ph2\">`Write`</ph> functions in your custom class.","pos":[2324,2423],"source":"Override the virtual functions and implement the `Read` and `Write` functions in your custom class."},{"content":"Implement any other functionality to read and write data to your desired location.","pos":[2424,2506]},{"pos":[2516,2706],"content":"In your application, call <ph id=\"ph1\">`CSettingsStoreSP::SetRuntimeClass`</ph> and pass in a pointer to the <bpt id=\"p1\">[</bpt>CRuntimeClass Structure<ept id=\"p1\">](../../mfc/reference/cruntimeclass-structure.md)</ept> obtained from your class.","source":"In your application, call `CSettingsStoreSP::SetRuntimeClass` and pass in a pointer to the [CRuntimeClass Structure](../../mfc/reference/cruntimeclass-structure.md) obtained from your class."},{"content":"Whenever the framework would typically access the registry, it will now dynamically instantiate your custom class and use it to read or write data.","pos":[2713,2860]},{"content":"uses a global static variable.","pos":[2903,2933]},{"content":"Therefore, only one custom store is available at a time.","pos":[2934,2990]},{"content":"Requirements","pos":[2999,3011]},{"pos":[3015,3045],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxsettingsstore.h","source":"**Header:** afxsettingsstore.h"},{"pos":[3096,3120],"content":"CSettingsStoreSP::Create"},{"pos":[3124,3253],"content":"Creates a new instance of an object that is derived from the <bpt id=\"p1\">[</bpt>CSettingsStore Class<ept id=\"p1\">](../../mfc/reference/csettingsstore-class.md)</ept>.","source":"Creates a new instance of an object that is derived from the [CSettingsStore Class](../../mfc/reference/csettingsstore-class.md)."},{"content":"Parameters","pos":[3359,3369]},{"content":"[in]","pos":[3373,3377]},{"content":"A Boolean parameter that determines whether a <ph id=\"ph1\">`CSettingsStore`</ph> object is created in administrator mode.","pos":[3390,3493],"source":" A Boolean parameter that determines whether a `CSettingsStore` object is created in administrator mode."},{"content":"[in]","pos":[3500,3504]},{"content":"A Boolean parameter that determines whether a <ph id=\"ph1\">`CSettingsStore`</ph> object is created for read-only access.","pos":[3520,3622],"source":" A Boolean parameter that determines whether a `CSettingsStore` object is created for read-only access."},{"content":"Return Value","pos":[3632,3644]},{"pos":[3648,3705],"content":"A reference to the newly created <ph id=\"ph1\">`CSettingsStore`</ph> object.","source":"A reference to the newly created `CSettingsStore` object."},{"content":"Remarks","pos":[3715,3722]},{"content":"You can use the method <bpt id=\"p1\">[</bpt>CSettingsStoreSP::SetRuntimeClass<ept id=\"p1\">](#csettingsstoresp__setruntimeclass)</ept> to determine what type of object <ph id=\"ph1\">`CSettingsStoreSP::Create`</ph> will create.","pos":[3726,3893],"source":"You can use the method [CSettingsStoreSP::SetRuntimeClass](#csettingsstoresp__setruntimeclass) to determine what type of object `CSettingsStoreSP::Create` will create."},{"content":"By default, this method creates a <ph id=\"ph1\">`CSettingsStore`</ph> object.","pos":[3894,3952],"source":" By default, this method creates a `CSettingsStore` object."},{"content":"If you create a <ph id=\"ph1\">`CSettingsStore`</ph> object in administrator mode, the default location for all registry access is HKEY_LOCAL_MACHINE.","pos":[3959,4089],"source":"If you create a `CSettingsStore` object in administrator mode, the default location for all registry access is HKEY_LOCAL_MACHINE."},{"content":"Otherwise, the default location for all registry access is HKEY_CURRENT_USER.","pos":[4090,4167]},{"content":"If <ph id=\"ph1\">`bAdmin`</ph> is <ph id=\"ph2\">`TRUE`</ph>, the application must have administration rights.","pos":[4174,4245],"source":"If `bAdmin` is `TRUE`, the application must have administration rights."},{"content":"Otherwise, it will fail when it tries to access the registry.","pos":[4246,4307]},{"content":"Example","pos":[4317,4324]},{"pos":[4328,4426],"content":"The following example demonstrates how to use the <ph id=\"ph1\">`Create`</ph> method of the <ph id=\"ph2\">`CSettingsStoreSP`</ph> class.","source":"The following example demonstrates how to use the `Create` method of the `CSettingsStoreSP` class."},{"pos":[4444,4464],"content":"NVC_MFC_RibbonApp#33"},{"pos":[4593,4627],"content":"CSettingsStoreSP::CSettingsStoreSP"},{"pos":[4631,4723],"content":"Constructs a <bpt id=\"p1\">[</bpt>CSettingsStoreSP Class<ept id=\"p1\">](../../mfc/reference/csettingsstoresp-class.md)</ept> object.","source":"Constructs a [CSettingsStoreSP Class](../../mfc/reference/csettingsstoresp-class.md) object."},{"content":"Parameters","pos":[4806,4816]},{"content":"[in]","pos":[4820,4824]},{"content":"User-defined data that the <ph id=\"ph1\">`CSettingsStoreSP`</ph> object stores.","pos":[4841,4901],"source":" User-defined data that the `CSettingsStoreSP` object stores."},{"content":"Remarks","pos":[4911,4918]},{"pos":[4922,5034],"content":"The <ph id=\"ph1\">`CSettingsStoreSP`</ph> object stores the data from <ph id=\"ph2\">`dwUserData`</ph> in the protected member variable <ph id=\"ph3\">`m_dwUserData`</ph>.","source":"The `CSettingsStoreSP` object stores the data from `dwUserData` in the protected member variable `m_dwUserData`."},{"pos":[5094,5127],"content":"CSettingsStoreSP::SetRuntimeClass"},{"content":"Sets the runtime class.","pos":[5131,5154]},{"content":"The method <bpt id=\"p1\">[</bpt>CSettingsStoreSP::Create<ept id=\"p1\">](#csettingsstoresp__create)</ept> uses the runtime class to determine what type of object to create.","pos":[5155,5286],"source":" The method [CSettingsStoreSP::Create](#csettingsstoresp__create) uses the runtime class to determine what type of object to create."},{"content":"Parameters","pos":[5389,5399]},{"content":"[in]","pos":[5403,5407]},{"content":"A pointer to the runtime class information for a class derived from the <bpt id=\"p1\">[</bpt>CSettingsStore Class<ept id=\"p1\">](../../mfc/reference/csettingsstore-class.md)</ept>.","pos":[5418,5558],"source":" A pointer to the runtime class information for a class derived from the [CSettingsStore Class](../../mfc/reference/csettingsstore-class.md)."},{"content":"Return Value","pos":[5568,5580]},{"pos":[5591,5685],"content":"if successful; <ph id=\"ph1\">`FALSE`</ph> if the class identified by <ph id=\"ph2\">`pRTI`</ph> is not derived from <ph id=\"ph3\">`CSettingsStore`</ph>.","source":" if successful; `FALSE` if the class identified by `pRTI` is not derived from `CSettingsStore`."},{"content":"Remarks","pos":[5695,5702]},{"content":"You can use the <bpt id=\"p1\">[</bpt>CSettingsStoreSP Class<ept id=\"p1\">](../../mfc/reference/csettingsstoresp-class.md)</ept> to derive classes from <ph id=\"ph1\">`CSettingsStore`</ph>.","pos":[5706,5834],"source":"You can use the [CSettingsStoreSP Class](../../mfc/reference/csettingsstoresp-class.md) to derive classes from `CSettingsStore`."},{"content":"Use the method <ph id=\"ph1\">`SetRuntimeClass`</ph> if you want to create objects of a custom class that is derived from <ph id=\"ph2\">`CSettingsStore`</ph>.","pos":[5835,5954],"source":" Use the method `SetRuntimeClass` if you want to create objects of a custom class that is derived from `CSettingsStore`."},{"content":"See Also","pos":[5963,5971]},{"content":"Classes","pos":[5976,5983]},{"content":"Hierarchy Chart","pos":[6026,6041]},{"content":"CSettingsStore Class","pos":[6078,6098]}],"content":"---\ntitle: \"CSettingsStoreSP Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CSettingsStoreSP\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CSettingsStoreSP class\"\nms.assetid: bcd37f40-cfd4-4d17-a5ce-3bfabe995dcc\ncaps.latest.revision: 18\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CSettingsStoreSP Class\nThe `CSettingsStoreSP` class is a helper class that you can use to create instances of the [CSettingsStore Class](../../mfc/reference/csettingsstore-class.md).  \n  \n## Syntax  \n  \n```  \nclass CSettingsStoreSP  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CSettingsStoreSP::CSettingsStoreSP](#csettingsstoresp__csettingsstoresp)|Constructs a `CSettingsStoreSP` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CSettingsStoreSP::Create](#csettingsstoresp__create)|Creates an instance of a class that is derived from `CSettingsStore`.|  \n|[CSettingsStoreSP::SetRuntimeClass](#csettingsstoresp__setruntimeclass)|Sets the runtime class. The `Create` method uses the runtime class to determine what class of objects to create.|  \n  \n### Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|`m_dwUserData`|Custom user data that is stored in the `CSettingsStoreSP` object. You supply this data in the constructor of the `CSettingsStoreSP` object.|  \n|`m_pRegistry`|The `CSettingsStore`-derived object that the `Create` method creates.|  \n  \n## Remarks  \n You can use the `CSettingsStoreSP` class to redirect all MFC registry operations to other locations, such as an XML file or a database. To do this, follow these steps:  \n  \n1.  Create a class (such as `CMyStore`) and derive it from `CSettingsStore`.  \n  \n2.  Use [DECLARE_DYNCREATE](run-time-object-model-services.md#declare_dyncreate) and [IMPLEMENT_DYNCREATE](run-time-object-model-services.md#implement_dyncreate) macros with your custom `CSettingsStore` class to enable dynamic creation.  \n  \n3.  Override the virtual functions and implement the `Read` and `Write` functions in your custom class. Implement any other functionality to read and write data to your desired location.  \n  \n4.  In your application, call `CSettingsStoreSP::SetRuntimeClass` and pass in a pointer to the [CRuntimeClass Structure](../../mfc/reference/cruntimeclass-structure.md) obtained from your class.  \n  \n Whenever the framework would typically access the registry, it will now dynamically instantiate your custom class and use it to read or write data.  \n  \n `CSettingsStoreSP::SetRuntimeClass` uses a global static variable. Therefore, only one custom store is available at a time.  \n  \n## Requirements  \n **Header:** afxsettingsstore.h  \n  \n##  <a name=\"csettingsstoresp__create\"></a>  CSettingsStoreSP::Create  \n Creates a new instance of an object that is derived from the [CSettingsStore Class](../../mfc/reference/csettingsstore-class.md).  \n  \n```  \nCSettingsStore& CSettingsStoreSP Create(\n    BOOL bAdmin,  \n    BOOL bReadOnly);\n```  \n  \n### Parameters  \n [in] `bAdmin`  \n A Boolean parameter that determines whether a `CSettingsStore` object is created in administrator mode.  \n  \n [in] `bReadOnly`  \n A Boolean parameter that determines whether a `CSettingsStore` object is created for read-only access.  \n  \n### Return Value  \n A reference to the newly created `CSettingsStore` object.  \n  \n### Remarks  \n You can use the method [CSettingsStoreSP::SetRuntimeClass](#csettingsstoresp__setruntimeclass) to determine what type of object `CSettingsStoreSP::Create` will create. By default, this method creates a `CSettingsStore` object.  \n  \n If you create a `CSettingsStore` object in administrator mode, the default location for all registry access is HKEY_LOCAL_MACHINE. Otherwise, the default location for all registry access is HKEY_CURRENT_USER.  \n  \n If `bAdmin` is `TRUE`, the application must have administration rights. Otherwise, it will fail when it tries to access the registry.  \n  \n### Example  \n The following example demonstrates how to use the `Create` method of the `CSettingsStoreSP` class.  \n  \n [!code-cpp[NVC_MFC_RibbonApp#33](../../mfc/reference/codesnippet/cpp/csettingsstoresp-class_1.cpp)]  \n  \n##  <a name=\"csettingsstoresp__csettingsstoresp\"></a>  CSettingsStoreSP::CSettingsStoreSP  \n Constructs a [CSettingsStoreSP Class](../../mfc/reference/csettingsstoresp-class.md) object.  \n  \n```  \nCSettingsStoreSP::CSettingsStoreSP(DWORD dwUserData = 0);\n```  \n  \n### Parameters  \n [in] `dwUserData`  \n User-defined data that the `CSettingsStoreSP` object stores.  \n  \n### Remarks  \n The `CSettingsStoreSP` object stores the data from `dwUserData` in the protected member variable `m_dwUserData`.  \n  \n##  <a name=\"csettingsstoresp__setruntimeclass\"></a>  CSettingsStoreSP::SetRuntimeClass  \n Sets the runtime class. The method [CSettingsStoreSP::Create](#csettingsstoresp__create) uses the runtime class to determine what type of object to create.  \n  \n```  \nstatic BOOL __stdcall CSettingsStoreSP::SetRuntimeClass(CRuntimeClass* pRTI);\n```  \n  \n### Parameters  \n [in] `pRTI`  \n A pointer to the runtime class information for a class derived from the [CSettingsStore Class](../../mfc/reference/csettingsstore-class.md).  \n  \n### Return Value  \n `TRUE` if successful; `FALSE` if the class identified by `pRTI` is not derived from `CSettingsStore`.  \n  \n### Remarks  \n You can use the [CSettingsStoreSP Class](../../mfc/reference/csettingsstoresp-class.md) to derive classes from `CSettingsStore`. Use the method `SetRuntimeClass` if you want to create objects of a custom class that is derived from `CSettingsStore`.  \n  \n## See Also  \n [Classes](../../mfc/reference/mfc-classes.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [CSettingsStore Class](../../mfc/reference/csettingsstore-class.md)\n"}