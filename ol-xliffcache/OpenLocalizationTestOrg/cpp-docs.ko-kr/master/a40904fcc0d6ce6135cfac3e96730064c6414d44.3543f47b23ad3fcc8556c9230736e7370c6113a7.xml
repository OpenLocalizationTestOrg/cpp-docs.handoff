{"nodes":[{"pos":[12,49],"content":"Compiler Error C3028 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C3028 | Microsoft Docs","pos":[0,37]}]},{"content":"Compiler Error C3028","pos":[597,617]},{"content":"'member' : only a variable or static data member can be used in a data-sharing clause","pos":[618,703]},{"content":"A symbol other than a variable or static data member was passed to the reduction clause.","pos":[710,798]},{"content":"The following sample generates C3028:","pos":[805,842]}],"content":"---\ntitle: \"Compiler Error C3028 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C3028\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C3028\"\nms.assetid: 175e697f-8e8f-492a-8456-6240ffbbb900\ncaps.latest.revision: 8\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Error C3028\n'member' : only a variable or static data member can be used in a data-sharing clause  \n  \n A symbol other than a variable or static data member was passed to the reduction clause.  \n  \n The following sample generates C3028:  \n  \n```  \n// C3028.cpp  \n// compile with: /openmp /link vcomps.lib  \nint g_i;  \n  \nclass MyClass {  \npublic:  \n   MyClass();  \n   MyClass(int x);  \n   static int x_public;  \n   int mbr;  \nprivate:  \n   static int x_private;  \n};  \n  \nint MyClass::x_public;  \nint MyClass::x_private;  \n  \nnamespace XyzNS {  \n   struct xyz { int x; };  \n   xyz xyz;  \n}  \n  \nnamespace NS {  \n   int a1;  \n   struct Bar {  \n      static MyClass MyClass;  \n   };  \n   struct Baz : public Bar {  \n      using NS::Bar::MyClass;  \n   };  \n}  \n  \nMyClass NS::Bar::MyClass;  \n  \ntypedef int MyInt;  \n  \ntemplate <class T, size_t n> class CTempl {  \npublic:  \n   static T public_array[n];  \nprivate:  \n   static T private_array[n];  \n};  \n  \ntemplate<class T,size_t n> T CTempl<T,n>::public_array[n];  \ntemplate<class T,size_t n> T CTempl<T,n>::private_array[n];  \n  \nCTempl<int,5> tx;  \n  \nstruct Incomplete;  \nextern Incomplete inc;  \n  \nMyClass::MyClass(int x) {  \n  \n   #pragma omp parallel reduction(+: x, g_i, x_public, x_private)     \n   // OK  \n      ;  \n  \n   #pragma omp parallel reduction(+: x, g_i, MyClass::x_public,   \n   MyClass::x_private)     \n   // OK  \n      ;  \n  \n   #pragma omp parallel reduction(+: mbr)     \n   // C3028, member of a class.  \n      ;  \n}  \n  \nint main() {  \n  \n   #pragma omp parallel reduction(+:main)     \n   // C3028, main is a function.  \n      ;  \n  \n   #pragma omp parallel reduction(+: XyzNS)     \n   // C3028, XyzNS is a namespace.  \n      ;  \n}  \n```"}