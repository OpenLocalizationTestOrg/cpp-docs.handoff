{"nodes":[{"pos":[12,40],"content":"no_registry | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"no_registry | Microsoft Docs","pos":[0,28]}]},{"content":"no_registry","pos":[610,621]},{"pos":[636,725],"content":"tells the compiler not to search the registry for type libraries imported with <ph id=\"ph1\">`#import`</ph>.","source":" tells the compiler not to search the registry for type libraries imported with `#import`."},{"content":"Syntax","pos":[734,740]},{"content":"Parameters","pos":[800,810]},{"content":"filename","pos":[815,823]},{"content":"A type library.","pos":[828,843]},{"content":"Remarks","pos":[852,859]},{"content":"If a referenced type library is not found in the include directories, the compilation will fail even if the type library is in the registry.","pos":[863,1003]},{"content":"propagates to other type libraries implicitly imported with <ph id=\"ph1\">`auto_search`</ph>.","pos":[1019,1093],"source":" propagates to other type libraries implicitly imported with `auto_search`."},{"pos":[1100,1228],"content":"The compiler will never search the registry for type libraries that are specified by file name and passed directly to <ph id=\"ph1\">`#import`</ph>.","source":"The compiler will never search the registry for type libraries that are specified by file name and passed directly to `#import`."},{"pos":[1235,1483],"content":"When <ph id=\"ph1\">`auto_search`</ph> is specified, the additional <ph id=\"ph2\">`#import`</ph>s will be generated with the <ph id=\"ph3\">`no_registry`</ph> setting of the initial <ph id=\"ph4\">`#import`</ph> (if the initial <ph id=\"ph5\">`#import`</ph> directive was <ph id=\"ph6\">`no_registry`</ph>, an <ph id=\"ph7\">`auto_search`</ph>-generated <ph id=\"ph8\">`#import`</ph> is also <ph id=\"ph9\">`no_registry`</ph>.)","source":"When `auto_search` is specified, the additional `#import`s will be generated with the `no_registry` setting of the initial `#import` (if the initial `#import` directive was `no_registry`, an `auto_search`-generated `#import` is also `no_registry`.)"},{"content":"is useful if you want to import cross referenced type libraries without the risk of the compiler finding an older version of the file in the registry.","pos":[1504,1654]},{"content":"is also useful if the type library is not registered.","pos":[1670,1723]},{"content":"See Also","pos":[1732,1740]},{"content":"import Attributes","pos":[1746,1763]},{"content":"import Directive","pos":[1818,1834]}],"content":"---\ntitle: \"no_registry | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"no_registry\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"no_registry attribute\"\nms.assetid: d30de4e2-551c-428c-98fd-951330d578d3\ncaps.latest.revision: 5\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# no_registry\n`no_registry` tells the compiler not to search the registry for type libraries imported with `#import`.  \n  \n## Syntax  \n  \n```  \n  \n#import filename no_registry  \n```  \n  \n#### Parameters  \n *filename*  \n A type library.  \n  \n## Remarks  \n If a referenced type library is not found in the include directories, the compilation will fail even if the type library is in the registry.  `no_registry` propagates to other type libraries implicitly imported with `auto_search`.  \n  \n The compiler will never search the registry for type libraries that are specified by file name and passed directly to `#import`.  \n  \n When `auto_search` is specified, the additional `#import`s will be generated with the `no_registry` setting of the initial `#import` (if the initial `#import` directive was `no_registry`, an `auto_search`-generated `#import` is also `no_registry`.)  \n  \n `no_registry` is useful if you want to import cross referenced type libraries without the risk of the compiler finding an older version of the file in the registry.  `no_registry` is also useful if the type library is not registered.  \n  \n## See Also  \n [#import Attributes](../preprocessor/hash-import-attributes-cpp.md)   \n [#import Directive](../preprocessor/hash-import-directive-cpp.md)"}