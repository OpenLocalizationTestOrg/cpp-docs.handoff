{"nodes":[{"pos":[12,41],"content":"CA2AEX Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CA2AEX Class | Microsoft Docs","pos":[0,29]}]},{"content":"CA2AEX Class","pos":[717,729]},{"pos":[730,829],"content":"This class is used by the string conversion macros <ph id=\"ph1\">`CA2TEX`</ph> and <ph id=\"ph2\">`CT2AEX`</ph>, and the typedef <bpt id=\"p1\">**</bpt>CA2A<ept id=\"p1\">**</ept>.","source":"This class is used by the string conversion macros `CA2TEX` and `CT2AEX`, and the typedef **CA2A**."},{"pos":[837,947],"content":"[!IMPORTANT]\n This class and its members cannot be used in applications that execute in the Windows Runtime.","leadings":["","> "],"nodes":[{"content":"This class and its members cannot be used in applications that execute in the Windows Runtime.","pos":[14,108]}]},{"content":"Syntax","pos":[956,962]},{"content":"Parameters","pos":[1042,1052]},{"content":"The size of the buffer used in the translation process.","pos":[1077,1132]},{"content":"The default length is 128 bytes.","pos":[1133,1165]},{"content":"Members","pos":[1174,1181]},{"content":"Public Constructors","pos":[1191,1210]},{"content":"Name","pos":[1217,1221]},{"content":"Description","pos":[1222,1233]},{"content":"CA2AEX::CA2AEX","pos":[1272,1286]},{"content":"The constructor.","pos":[1305,1321]},{"content":"CA2AEX::~CA2AEX","pos":[1327,1342]},{"content":"The destructor.","pos":[1366,1381]},{"content":"Public Operators","pos":[1392,1408]},{"content":"Name","pos":[1415,1419]},{"content":"Description","pos":[1420,1431]},{"content":"CA2AEX::operator LPSTR","pos":[1470,1492]},{"content":"Conversion operator.","pos":[1519,1539]},{"content":"Public Data Members","pos":[1550,1569]},{"content":"Name","pos":[1576,1580]},{"content":"Description","pos":[1581,1592]},{"content":"CA2AEX::m_psz","pos":[1631,1644]},{"content":"The data member that stores the source string.","pos":[1662,1708]},{"content":"CA2AEX::m_szBuffer","pos":[1714,1732]},{"content":"The static buffer, used to store the converted string.","pos":[1755,1809]},{"content":"Remarks","pos":[1819,1826]},{"pos":[1830,1923],"content":"Unless extra functionality is required, use <ph id=\"ph1\">`CA2TEX`</ph>, <ph id=\"ph2\">`CT2AEX`</ph>, or <bpt id=\"p1\">**</bpt>CA2A<ept id=\"p1\">**</ept> in your own code.","source":"Unless extra functionality is required, use `CA2TEX`, `CT2AEX`, or **CA2A** in your own code."},{"content":"This class contains a fixed-size static buffer which is used to store the result of the conversion.","pos":[1930,2029]},{"content":"If the result is too large to fit into the static buffer, the class allocates memory using <ph id=\"ph1\">`malloc`</ph>, freeing the memory when the object goes out of scope.","pos":[2030,2184],"source":" If the result is too large to fit into the static buffer, the class allocates memory using `malloc`, freeing the memory when the object goes out of scope."},{"content":"This ensures that, unlike text conversion macros available in previous versions of ATL, this class is safe to use in loops and that it won't overflow the stack.","pos":[2185,2345]},{"pos":[2352,2475],"content":"If the class tries to allocate memory on the heap and fails, it will call <ph id=\"ph1\">`AtlThrow`</ph> with an argument of <bpt id=\"p1\">**</bpt>E_OUTOFMEMORY<ept id=\"p1\">**</ept>.","source":"If the class tries to allocate memory on the heap and fails, it will call `AtlThrow` with an argument of **E_OUTOFMEMORY**."},{"content":"By default, the ATL conversion classes and macros use the current thread's ANSI code page for the conversion.","pos":[2482,2591]},{"content":"The following macros are based on this class:","pos":[2598,2643]},{"content":"The following typedef is based on this class:","pos":[2682,2727]},{"content":"CA2A","pos":[2737,2741]},{"pos":[2750,2915],"content":"For a discussion of these text conversion macros, see <bpt id=\"p1\">[</bpt>ATL and MFC String Conversion Macros<ept id=\"p1\">](http://msdn.microsoft.com/library/8f53659e-0464-4424-97db-6b8453c49863)</ept>.","source":"For a discussion of these text conversion macros, see [ATL and MFC String Conversion Macros](http://msdn.microsoft.com/library/8f53659e-0464-4424-97db-6b8453c49863)."},{"content":"Example","pos":[2924,2931]},{"pos":[2935,3105],"content":"See <bpt id=\"p1\">[</bpt>ATL and MFC String Conversion Macros<ept id=\"p1\">](http://msdn.microsoft.com/library/8f53659e-0464-4424-97db-6b8453c49863)</ept> for an example of using these string conversion macros.","source":"See [ATL and MFC String Conversion Macros](http://msdn.microsoft.com/library/8f53659e-0464-4424-97db-6b8453c49863) for an example of using these string conversion macros."},{"content":"Requirements","pos":[3114,3126]},{"pos":[3130,3151],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlconv.h","source":"**Header:** atlconv.h"},{"pos":[3192,3206],"content":"CA2AEX::CA2AEX"},{"content":"The constructor.","pos":[3210,3226]},{"content":"Parameters","pos":[3344,3354]},{"content":"The text string to be converted.","pos":[3367,3399]},{"content":"Unused in this class.","pos":[3421,3442]},{"content":"Remarks","pos":[3452,3459]},{"content":"Creates the buffer required for the translation.","pos":[3463,3511]},{"pos":[3557,3572],"content":"CA2AEX::~CA2AEX"},{"content":"The destructor.","pos":[3576,3591]},{"content":"Remarks","pos":[3633,3640]},{"content":"Frees the allocated buffer.","pos":[3644,3671]},{"pos":[3711,3724],"content":"CA2AEX::m_psz"},{"content":"The data member that stores the source string.","pos":[3728,3774]},{"pos":[3845,3863],"content":"CA2AEX::m_szBuffer"},{"content":"The static buffer, used to store the converted string.","pos":[3867,3921]},{"pos":[4020,4042],"content":"CA2AEX::operator LPSTR"},{"content":"Conversion operator.","pos":[4046,4066]},{"content":"```operator LPSTR() const throw();","pos":[4072,4106]}],"content":"---\ntitle: \"CA2AEX Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ATL::CA2AEX<t_nBufferLength>\"\n  - \"CA2AEX\"\n  - \"ATL.CA2AEX<t_nBufferLength>\"\n  - \"ATLCONV/CA2AEX\"\n  - \"ATL.CA2AEX\"\n  - \"ATL::CA2AEX\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CA2AEX class\"\nms.assetid: 57dc65df-d9cf-4a84-99d3-6e031dde3664\ncaps.latest.revision: 20\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CA2AEX Class\nThis class is used by the string conversion macros `CA2TEX` and `CT2AEX`, and the typedef **CA2A**.  \n  \n> [!IMPORTANT]\n>  This class and its members cannot be used in applications that execute in the Windows Runtime.  \n  \n## Syntax  \n  \n```\ntemplate <int   t_nBufferLength = 128>\n    class CA2AEX\n```  \n  \n#### Parameters  \n `t_nBufferLength`  \n The size of the buffer used in the translation process. The default length is 128 bytes.  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CA2AEX::CA2AEX](#ca2aex__ca2aex)|The constructor.|  \n|[CA2AEX::~CA2AEX](#ca2aex___dtorca2aex)|The destructor.|  \n  \n### Public Operators  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CA2AEX::operator LPSTR](#ca2aex__operator_lpstr)|Conversion operator.|  \n  \n### Public Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CA2AEX::m_psz](#ca2aex__m_psz)|The data member that stores the source string.|  \n|[CA2AEX::m_szBuffer](#ca2aex__m_szbuffer)|The static buffer, used to store the converted string.|  \n  \n## Remarks  \n Unless extra functionality is required, use `CA2TEX`, `CT2AEX`, or **CA2A** in your own code.  \n  \n This class contains a fixed-size static buffer which is used to store the result of the conversion. If the result is too large to fit into the static buffer, the class allocates memory using `malloc`, freeing the memory when the object goes out of scope. This ensures that, unlike text conversion macros available in previous versions of ATL, this class is safe to use in loops and that it won't overflow the stack.  \n  \n If the class tries to allocate memory on the heap and fails, it will call `AtlThrow` with an argument of **E_OUTOFMEMORY**.  \n  \n By default, the ATL conversion classes and macros use the current thread's ANSI code page for the conversion.  \n  \n The following macros are based on this class:  \n  \n- `CA2TEX`  \n  \n- `CT2AEX`  \n  \n The following typedef is based on this class:  \n  \n- **CA2A**  \n  \n For a discussion of these text conversion macros, see [ATL and MFC String Conversion Macros](http://msdn.microsoft.com/library/8f53659e-0464-4424-97db-6b8453c49863).  \n  \n## Example  \n See [ATL and MFC String Conversion Macros](http://msdn.microsoft.com/library/8f53659e-0464-4424-97db-6b8453c49863) for an example of using these string conversion macros.  \n  \n## Requirements  \n **Header:** atlconv.h  \n  \n##  <a name=\"ca2aex__ca2aex\"></a>  CA2AEX::CA2AEX  \n The constructor.  \n  \n```\nCA2AEX(\n    LPCSTR psz,\n    UINT nCodePage) throw(...);\n\n    CA2AEX(\n LPCSTR  psz) throw(...);\n```  \n  \n### Parameters  \n `psz`  \n The text string to be converted.  \n  \n `nCodePage`  \n Unused in this class.  \n  \n### Remarks  \n Creates the buffer required for the translation.  \n  \n##  <a name=\"ca2aex___dtorca2aex\"></a>  CA2AEX::~CA2AEX  \n The destructor.  \n  \n```\n~CA2AEX() throw();\n```  \n  \n### Remarks  \n Frees the allocated buffer.  \n  \n##  <a name=\"ca2aex__m_psz\"></a>  CA2AEX::m_psz  \n The data member that stores the source string.  \n  \n```\nLPSTR m_psz;\n```  \n  \n##  <a name=\"ca2aex__m_szbuffer\"></a>  CA2AEX::m_szBuffer  \n The static buffer, used to store the converted string.  \n  \n```\nchar m_szBuffer[ t_nBufferLength\n ];\n```  \n  \n##  <a name=\"ca2aex__operator_lpstr\"></a>  CA2AEX::operator LPSTR  \n Conversion operator.  \n  \n```operator LPSTR() const throw();\n```  \n  \n### Return Value  \n Returns the text string as type **LPSTR**.  \n  \n## See Also  \n [CA2CAEX Class](../../atl/reference/ca2caex-class.md)   \n [CA2WEX Class](../../atl/reference/ca2wex-class.md)   \n [CW2AEX Class](../../atl/reference/cw2aex-class.md)   \n [CW2CWEX Class](../../atl/reference/cw2cwex-class.md)   \n [CW2WEX Class](../../atl/reference/cw2wex-class.md)   \n [Class Overview](../../atl/atl-class-overview.md)"}