{"nodes":[{"pos":[12,53],"content":"ICommandTarget Interface | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ICommandTarget Interface | Microsoft Docs","pos":[0,41]}]},{"content":"ICommandTarget Interface","pos":[624,648]},{"content":"Provides a user control with an interface to receive commands from a command source object.","pos":[649,740]},{"content":"Syntax","pos":[749,755]},{"content":"Members","pos":[812,819]},{"content":"Public Methods","pos":[829,843]},{"content":"Name","pos":[850,854]},{"content":"Description","pos":[855,866]},{"content":"ICommandTarget::Initialize","pos":[905,931]},{"content":"Initializes the command target object.","pos":[962,1000]},{"content":"Remarks","pos":[1010,1017]},{"content":"When you host a user control in an MFC View, <bpt id=\"p1\">[</bpt>CWinFormsView<ept id=\"p1\">](../../mfc/reference/cwinformsview-class.md)</ept> routes commands and update command UI messages to the user control to allow it to handle MFC commands (for example, frame menu items and toolbar buttons).","pos":[1021,1280],"source":"When you host a user control in an MFC View, [CWinFormsView](../../mfc/reference/cwinformsview-class.md) routes commands and update command UI messages to the user control to allow it to handle MFC commands (for example, frame menu items and toolbar buttons)."},{"content":"By implementing <ph id=\"ph1\">`ICommandTarget`</ph>, you give the user control a reference to the <bpt id=\"p1\">[</bpt>ICommandSource<ept id=\"p1\">](../../mfc/reference/icommandsource-interface.md)</ept> object.","pos":[1281,1433],"source":" By implementing `ICommandTarget`, you give the user control a reference to the [ICommandSource](../../mfc/reference/icommandsource-interface.md) object."},{"pos":[1440,1622],"content":"See <bpt id=\"p1\">[</bpt>How to: Add Command Routing to the Windows Forms Control<ept id=\"p1\">](../../dotnet/how-to-add-command-routing-to-the-windows-forms-control.md)</ept> for an example of how to use <ph id=\"ph1\">`ICommandTarget`</ph>.","source":"See [How to: Add Command Routing to the Windows Forms Control](../../dotnet/how-to-add-command-routing-to-the-windows-forms-control.md) for an example of how to use `ICommandTarget`."},{"pos":[1629,1779],"content":"For more information on using Windows Forms, see <bpt id=\"p1\">[</bpt>Using a Windows Form User Control in MFC<ept id=\"p1\">](../../dotnet/using-a-windows-form-user-control-in-mfc.md)</ept>.","source":"For more information on using Windows Forms, see [Using a Windows Form User Control in MFC](../../dotnet/using-a-windows-form-user-control-in-mfc.md)."},{"content":"Requirements","pos":[1788,1800]},{"pos":[1804,1876],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxwinforms.h (defined in assembly atlmfc\\lib\\mfcmifc80.dll)","source":"**Header:** afxwinforms.h (defined in assembly atlmfc\\lib\\mfcmifc80.dll)"},{"pos":[1928,1954],"content":"ICommandTarget::Initialize"},{"content":"Initializes the command target object.","pos":[1958,1996]},{"content":"Parameters","pos":[2068,2078]},{"content":"A handle to the command source object.","pos":[2097,2135]},{"content":"Remarks","pos":[2145,2152]},{"content":"When you host a user control in an MFC View, CWinFormsView routes commands and update command UI messages to the user control to allow it to handle MFC commands.","pos":[2156,2317]},{"content":"This method initializes the command target object and associates it with the specified command source object cmdSource.","pos":[2324,2443]},{"content":"It should be called in the user control class implementation.","pos":[2444,2505]},{"content":"At initialization, you should register command handlers with the command source object by calling ICommandSource::AddCommandHandler in the Initialize implementation.","pos":[2506,2671]},{"content":"See How to: Add Command Routing to the Windows Forms Control for an example of how to use Initialize to do this.","pos":[2672,2784]},{"content":"See Also","pos":[2793,2801]},{"content":"How to: Add Command Routing to the Windows Forms Control","pos":[2806,2862]},{"content":"ICommandSource Interface","pos":[2942,2966]}],"content":"---\ntitle: \"ICommandTarget Interface | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ICommandTarget\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ICommandTarget interface\"\nms.assetid: dd9927f6-3479-4e7c-8ef9-13206cf901f3\ncaps.latest.revision: 27\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# ICommandTarget Interface\nProvides a user control with an interface to receive commands from a command source object.  \n  \n## Syntax  \n  \n```  \ninterface class ICommandTarget  \n```  \n  \n## Members  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[ICommandTarget::Initialize](#icommandtarget__initialize)|Initializes the command target object.|  \n  \n## Remarks  \n When you host a user control in an MFC View, [CWinFormsView](../../mfc/reference/cwinformsview-class.md) routes commands and update command UI messages to the user control to allow it to handle MFC commands (for example, frame menu items and toolbar buttons). By implementing `ICommandTarget`, you give the user control a reference to the [ICommandSource](../../mfc/reference/icommandsource-interface.md) object.  \n  \n See [How to: Add Command Routing to the Windows Forms Control](../../dotnet/how-to-add-command-routing-to-the-windows-forms-control.md) for an example of how to use `ICommandTarget`.  \n  \n For more information on using Windows Forms, see [Using a Windows Form User Control in MFC](../../dotnet/using-a-windows-form-user-control-in-mfc.md).  \n  \n## Requirements  \n **Header:** afxwinforms.h (defined in assembly atlmfc\\lib\\mfcmifc80.dll)  \n  \n##  <a name=\"icommandtarget__initialize\"></a> ICommandTarget::Initialize  \n Initializes the command target object.  \n  \n```  \nvoid Initialize(ICommandSource^ cmdSource);\n\n \n```  \n  \n### Parameters  \n `cmdSource`  \n A handle to the command source object.  \n  \n### Remarks  \n When you host a user control in an MFC View, CWinFormsView routes commands and update command UI messages to the user control to allow it to handle MFC commands.  \n  \n This method initializes the command target object and associates it with the specified command source object cmdSource. It should be called in the user control class implementation. At initialization, you should register command handlers with the command source object by calling ICommandSource::AddCommandHandler in the Initialize implementation. See How to: Add Command Routing to the Windows Forms Control for an example of how to use Initialize to do this.  \n  \n## See Also  \n [How to: Add Command Routing to the Windows Forms Control](../../dotnet/how-to-add-command-routing-to-the-windows-forms-control.md)   \n [ICommandSource Interface](../../mfc/reference/icommandsource-interface.md)\n\n\n\n"}