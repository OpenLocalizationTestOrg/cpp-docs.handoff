{"nodes":[{"pos":[12,46],"content":"file_status Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"file_status Class | Microsoft Docs","pos":[0,34]}]},{"pos":[728,745],"content":"file_status Class","linkify":"file_status Class","nodes":[{"content":"file_status Class","pos":[0,17]}]},{"pos":[746,919],"content":"Wraps a <bpt id=\"p1\">[</bpt>file_type<ept id=\"p1\">](../standard-library/filesystem-enumerations.md#filesystem__file_type)</ept> and file <bpt id=\"p2\">[</bpt>perms<ept id=\"p2\">](../standard-library/filesystem-enumerations.md#filesystem__perms)</ept>.","source":"Wraps a [file_type](../standard-library/filesystem-enumerations.md#filesystem__file_type) and file [perms](../standard-library/filesystem-enumerations.md#filesystem__perms)."},{"pos":[928,934],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[982,1006],"content":"file_status::file_status","linkify":"file_status::file_status","nodes":[{"content":"file_status::file_status","pos":[0,24]}]},{"pos":[1229,1251],"content":"file_status::operator=","linkify":"file_status::operator=","nodes":[{"content":"file_status::operator=","pos":[0,22]}]},{"content":"The defaulted member assignment operators behave as expected.","pos":[1400,1461]},{"pos":[1470,1474],"content":"type","linkify":"type","nodes":[{"content":"type","pos":[0,4]}]},{"content":"Gets or sets the file_type.","pos":[1572,1599]},{"pos":[1608,1619],"content":"permissions","linkify":"permissions","nodes":[{"content":"permissions","pos":[0,11]}]},{"content":"``cpp","pos":[1625,1630]},{"content":"perms permissions() const noexcept","pos":[1633,1667]},{"content":"void permissions(perms_Prms) noexcept","pos":[1670,1707]}],"content":"---\ntitle: \"file_status Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"filesystem/std::experimental::filesystemfile_status\"\n  - \"filesystem/std::experimental::filesystemfile_status::perms\"\n  - \"filesystem/std::experimental::filesystemfile_status::type\"\ndev_langs: \n  - \"C++\"\nms.assetid: 9781840e-ad22-44dd-ad79-0fabaa94bac4\ncaps.latest.revision: 15\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# file_status Class\nWraps a [file_type](../standard-library/filesystem-enumerations.md#filesystem__file_type) and file [perms](../standard-library/filesystem-enumerations.md#filesystem__perms).  \n  \n## Syntax  \n  \n```cpp  \nclass file_status;  \n```  \n  \n## file_status::file_status  \n  \n```cpp  \nexplicit file_status(file_type ftype = file_type::none, perms mask = perms::unknown) noexcept;\nfile_status(const file_status&) noexcept = default;\nfile_status(file_status&&) noexcept = default;  \n```  \n  \n## file_status::operator=  \n  \n```cpp  \nfile_status& operator=(const file_status&) noexcept = default;  \nfile_status& operator=(file_status&&) nexcept = default;  \n```  \n  \n The defaulted member assignment operators behave as expected.  \n  \n## type  \n  \n```cpp  \nfile_type type() const noexcept  \nvoid type(file_type _Ftype) noexcept  \n```  \n  \n Gets or sets the file_type.  \n  \n## permissions  \n  \n``cpp  \nperms permissions() const noexcept  \nvoid permissions(perms_Prms) noexcept   \n```  \n  \n Gets or sets the file permissions.  \n  \n Use the setter to make a file readonly or remove the readonly attribute.  \n  \n## Requirements  \n **Header:** filesystem  \n  \n **Namespace:** std::experimental::filesystem  \n  \n## See Also  \n [Header Files Reference](../standard-library/cpp-standard-library-header-files.md)   \n [path Class](../standard-library/path-class.md)   \n [\\<filesystem>](../standard-library/filesystem.md)\n\n"}