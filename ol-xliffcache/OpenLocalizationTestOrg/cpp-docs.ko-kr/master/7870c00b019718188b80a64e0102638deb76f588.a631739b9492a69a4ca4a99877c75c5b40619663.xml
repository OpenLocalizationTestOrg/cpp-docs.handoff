{"nodes":[{"pos":[12,48],"content":"bad_exception Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"bad_exception Class | Microsoft Docs","pos":[0,36]}]},{"content":"bad_exception Class","pos":[660,679]},{"content":"The class describes an exception that can be thrown from an unexpected handler.","pos":[680,759]},{"content":"Syntax","pos":[768,774]},{"content":"Remarks","pos":[846,853]},{"pos":[857,1170],"content":"<bpt id=\"p1\">[</bpt>unexpected<ept id=\"p1\">](../standard-library/exception-functions.md#unexpected)</ept> will throw a <ph id=\"ph1\">`bad_exception`</ph> instead of terminating or instead of calling another function specified with <bpt id=\"p2\">[</bpt>set_unexpected<ept id=\"p2\">](../standard-library/exception-functions.md#set_unexpected)</ept> if <ph id=\"ph2\">`bad_exception`</ph> is included in the throw list of a function.","source":"[unexpected](../standard-library/exception-functions.md#unexpected) will throw a `bad_exception` instead of terminating or instead of calling another function specified with [set_unexpected](../standard-library/exception-functions.md#set_unexpected) if `bad_exception` is included in the throw list of a function."},{"content":"The value returned by <bpt id=\"p1\">**</bpt>what<ept id=\"p1\">**</ept> is an implementation-defined C string.","pos":[1177,1246],"source":"The value returned by **what** is an implementation-defined C string."},{"content":"None of the member functions throw any exceptions.","pos":[1247,1297]},{"pos":[1304,1428],"content":"For a list of members inherited by the <ph id=\"ph1\">`bad_exception`</ph> class, see <bpt id=\"p1\">[</bpt>exception Class<ept id=\"p1\">](../standard-library/exception-class.md)</ept>.","source":"For a list of members inherited by the `bad_exception` class, see [exception Class](../standard-library/exception-class.md)."},{"content":"Example","pos":[1437,1444]},{"pos":[1448,1652],"content":"See <bpt id=\"p1\">[</bpt>set_unexpected<ept id=\"p1\">](../standard-library/exception-functions.md#set_unexpected)</ept> for an example of the use of <bpt id=\"p2\">[</bpt>unexpected<ept id=\"p2\">](../standard-library/exception-functions.md#unexpected)</ept> throwing a <ph id=\"ph1\">`bad_exception`</ph>.","source":"See [set_unexpected](../standard-library/exception-functions.md#set_unexpected) for an example of the use of [unexpected](../standard-library/exception-functions.md#unexpected) throwing a `bad_exception`."},{"content":"Requirements","pos":[1661,1673]},{"pos":[1677,1701],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>exception&gt;","source":"**Header:** \\<exception>"},{"pos":[1708,1726],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"content":"See Also","pos":[1735,1743]},{"pos":[1746,1914],"content":"<bpt id=\"p1\">[</bpt>exception Class<ept id=\"p1\">](../standard-library/exception-class.md)</ept><ph id=\"ph1\">\n</ph><bpt id=\"p2\"> [</bpt>Thread Safety in the C++ Standard Library<ept id=\"p2\">](../standard-library/thread-safety-in-the-cpp-standard-library.md)</ept>","source":"[exception Class](../standard-library/exception-class.md)\n [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)"}],"content":"---\ntitle: \"bad_exception Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std.bad_exception\"\n  - \"bad_exception\"\n  - \"std::bad_exception\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"bad_exception class\"\nms.assetid: 5ae2c4ef-c7ad-4469-8a9e-a773e86bb000\ncaps.latest.revision: 20\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# bad_exception Class\nThe class describes an exception that can be thrown from an unexpected handler.  \n  \n## Syntax  \n  \n```  \nclass bad_exception    : public exception {};  \n```  \n  \n## Remarks  \n [unexpected](../standard-library/exception-functions.md#unexpected) will throw a `bad_exception` instead of terminating or instead of calling another function specified with [set_unexpected](../standard-library/exception-functions.md#set_unexpected) if `bad_exception` is included in the throw list of a function.  \n  \n The value returned by **what** is an implementation-defined C string. None of the member functions throw any exceptions.  \n  \n For a list of members inherited by the `bad_exception` class, see [exception Class](../standard-library/exception-class.md).  \n  \n## Example  \n See [set_unexpected](../standard-library/exception-functions.md#set_unexpected) for an example of the use of [unexpected](../standard-library/exception-functions.md#unexpected) throwing a `bad_exception`.  \n  \n## Requirements  \n **Header:** \\<exception>  \n  \n **Namespace:** std  \n  \n## See Also  \n[exception Class](../standard-library/exception-class.md)\n [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)\n\n"}