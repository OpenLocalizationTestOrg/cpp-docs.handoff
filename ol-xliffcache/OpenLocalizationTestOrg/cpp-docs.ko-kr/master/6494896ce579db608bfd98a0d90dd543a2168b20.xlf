<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6494896ce579db608bfd98a0d90dd543a2168b20</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\cfont-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">16208b87121c6d3d1e3d3fc4c611d63ec15548cf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0c690699b13d7bbd7a4041242e4b433a4d8ed3ec</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CFont Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CFont Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Encapsulates a Windows graphics device interface (GDI) font and provides member functions for manipulating the font.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>CFont::CFont</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CFont`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>CFont::CreateFont</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a <ph id="ph1">`CFont`</ph> with the specified characteristics.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>CFont::CreateFontIndirect</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a <ph id="ph1">`CFont`</ph> object with the characteristics given in a <ph id="ph2">`LOGFONT`</ph> structure.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>CFont::CreatePointFont</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Initializes a <ph id="ph1">`CFont`</ph> with the specified height, measured in tenths of a point, and typeface.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>CFont::CreatePointFontIndirect</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Same as <ph id="ph1">`CreateFontIndirect`</ph> except that the font height is measured in tenths of a point rather than logical units.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>CFont::FromHandle</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Returns a pointer to a <ph id="ph1">`CFont`</ph> object when given a Windows <bpt id="p1">**</bpt>HFONT<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>CFont::GetLogFont</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Fills a <ph id="ph1">`LOGFONT`</ph> with information about the logical font attached to the <ph id="ph2">`CFont`</ph> object.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Public Operators</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>CFont::operator HFONT</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Returns the Windows GDI font handle attached to the <ph id="ph1">`CFont`</ph> object.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To use a <ph id="ph1">`CFont`</ph> object, construct a <ph id="ph2">`CFont`</ph> object and attach a Windows font to it with <bpt id="p1">[</bpt>CreateFont<ept id="p1">](#cfont__createfont)</ept>, <bpt id="p2">[</bpt>CreateFontIndirect<ept id="p2">](#cfont__createfontindirect)</ept>, <bpt id="p3">[</bpt>CreatePointFont<ept id="p3">](#cfont__createpointfont)</ept>, or <bpt id="p4">[</bpt>CreatePointFontIndirect<ept id="p4">](#cfont__createpointfontindirect)</ept>, and then use the object's member functions to manipulate the font.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CreatePointFont`</ph> and <ph id="ph2">`CreatePointFontIndirect`</ph> functions are often easier to use than <ph id="ph3">`CreateFont`</ph> or <ph id="ph4">`CreateFontIndirect`</ph> since they do the conversion for the height of the font from a point size to logical units automatically.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information on <ph id="ph1">`CFont`</ph>, see <bpt id="p1">[</bpt>Graphic Objects<ept id="p1">](../../mfc/graphic-objects.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>CObject</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>CGdiObject</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxwin.h</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>CFont::CFont</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CFont`</ph> object.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The resulting object must be initialized with <ph id="ph1">`CreateFont`</ph>, <ph id="ph2">`CreateFontIndirect`</ph>, <ph id="ph3">`CreatePointFont`</ph>, or <ph id="ph4">`CreatePointFontIndirect`</ph> before it can be used.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>NVC_MFCDocView#70</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>CFont::CreateFont</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Initializes a <ph id="ph1">`CFont`</ph> object with the specified characteristics.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Specifies the desired height (in logical units) of the font.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>See the <ph id="ph1">`lfHeight`</ph> member of the <bpt id="p1">[</bpt>LOGFONT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd145037)</ept>structure in the <ph id="ph2">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> for a description.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The absolute value of <ph id="ph1">`nHeight`</ph> must not exceed 16,384 device units after it is converted.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For all height comparisons, the font mapper looks for the largest font that does not exceed the requested size or the smallest font if all the fonts exceed the requested size.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Specifies the average width (in logical units) of characters in the font.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`nWidth`</ph> is 0, the aspect ratio of the device will be matched against the digitization aspect ratio of the available fonts to find the closest match, which is determined by the absolute value of the difference.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Specifies the angle (in 0.1-degree units) between the escapement vector and the x-axis of the display surface.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The escapement vector is the line through the origins of the first and last characters on a line.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The angle is measured counterclockwise from the x-axis.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>See the <ph id="ph1">`lfEscapement`</ph> member in the <ph id="ph2">`LOGFONT`</ph> structure in the <ph id="ph3">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> for more information.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Specifies the angle (in 0.1-degree units) between the baseline of a character and the x-axis.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The angle is measured counterclockwise from the x-axis for coordinate systems in which the y-direction is down and clockwise from the x-axis for coordinate systems in which the y-direction is up.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Specifies the font weight (in inked pixels per 1000).</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>See the <ph id="ph1">`lfWeight`</ph> member in the <ph id="ph2">`LOGFONT`</ph> structure in the <ph id="ph3">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> for more information.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The described values are approximate; the actual appearance depends on the typeface.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Some fonts have only <ph id="ph1">`FW_NORMAL`</ph>, <ph id="ph2">`FW_REGULAR`</ph>, and <ph id="ph3">`FW_BOLD`</ph> weights.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`FW_DONTCARE`</ph> is specified, a default weight is used.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Specifies whether the font is italic.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Specifies whether the font is underlined.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Specifies whether characters in the font are struck out.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Specifies a strikeout font if set to a nonzero value.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Specifies the font's character setSee the <ph id="ph1">`lfCharSet`</ph> member in the <ph id="ph2">`LOGFONT`</ph> structure in the <ph id="ph3">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> for a list of values.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The OEM character set is system-dependent.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Fonts with other character sets may exist in the system.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An application that uses a font with an unknown character set must not attempt to translate or interpret strings that are to be rendered with that font.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Instead, the strings should be passed directly to the output device driver.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The font mapper does not use the <ph id="ph1">`DEFAULT_CHARSET`</ph> value.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>An application can use this value to allow the name and size of a font to fully describe the logical font.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If a font with the specified name does not exist, a font from any character set can be substituted for the specified font.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>To avoid unexpected results, applications should use the <ph id="ph1">`DEFAULT_CHARSET`</ph> value sparingly.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Specifies the desired output precision.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The output precision defines how closely the output must match the requested font's height, width, character orientation, escapement, and pitch.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>See the <ph id="ph1">`lfOutPrecision`</ph> member in the <ph id="ph2">`LOGFONT`</ph> structure in the <ph id="ph3">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> for a list of values and more information.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Specifies the desired clipping precision.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The clipping precision defines how to clip characters that are partially outside the clipping region.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>See the <ph id="ph1">`lfClipPrecision`</ph> member in the <ph id="ph2">`LOGFONT`</ph> structure in the <ph id="ph3">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> for a list of values.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>To use an embedded read-only font, an application must specify <ph id="ph1">`CLIP_ENCAPSULATE`</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>To achieve consistent rotation of device, TrueType, and vector fonts, an application can use the OR operator to combine the <ph id="ph1">`CLIP_LH_ANGLES`</ph> value with any of the other <ph id="ph2">`nClipPrecision`</ph> values.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`CLIP_LH_ANGLES`</ph> bit is set, the rotation for all fonts depends on whether the orientation of the coordinate system is left-handed or right-handed.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>(For more information about the orientation of coordinate systems, see the description of the <ph id="ph1">`nOrientation`</ph> parameter.) If <ph id="ph2">`CLIP_LH_ANGLES`</ph> is not set, device fonts always rotate counterclockwise, but the rotation of other fonts is dependent on the orientation of the coordinate system.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Specifies the font's output quality, which defines how carefully the GDI must attempt to match the logical-font attributes to those of an actual physical font.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>See the <ph id="ph1">`lfQuality`</ph> member in the <ph id="ph2">`LOGFONT`</ph> structure in the <ph id="ph3">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> for a list of values.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Specifies the pitch and family of the font.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>See the <ph id="ph1">`lfPitchAndFamily`</ph> member in the <ph id="ph2">`LOGFONT`</ph> structure in the <ph id="ph3">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> for a list of values and more information.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CString`</ph> or pointer to a null-terminated string that specifies the typeface name of the font.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The length of this string must not exceed 30 characters.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The Windows <bpt id="p1">[</bpt>EnumFontFamilies<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162619)</ept> function can be used to enumerate all currently available fonts.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`lpszFacename`</ph> is <ph id="ph2">`NULL`</ph>, the GDI uses a device-independent typeface.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The font can subsequently be selected as the font for any device context.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CreateFont`</ph> function does not create a new Windows GDI font.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>It merely selects the closest match from the physical fonts available to the GDI.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Applications can use the default settings for most parameters when creating a logical font.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The parameters that should always be given specific values are <ph id="ph1">`nHeight`</ph> and <ph id="ph2">`lpszFacename`</ph>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`nHeight`</ph> and <ph id="ph2">`lpszFacename`</ph> are not set by the application, the logical font that is created is device-dependent.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>When you finish with the <ph id="ph1">`CFont`</ph> object created by the <ph id="ph2">`CreateFont`</ph> function, use <ph id="ph3">`CDC::SelectObject`</ph> to select a different font into the device context, then delete the <ph id="ph4">`CFont`</ph> object that is no longer needed.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>NVC_MFCDocView#71</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>CFont::CreateFontIndirect</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Initializes a <ph id="ph1">`CFont`</ph> object with the characteristics given in a <bpt id="p1">[</bpt>LOGFONT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd145037)</ept>structure.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Points to a <ph id="ph1">`LOGFONT`</ph> structure that defines the characteristics of the logical font.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The font can subsequently be selected as the current font for any device.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This font has the characteristics specified in the <bpt id="p1">[</bpt>LOGFONT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd145037)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>When the font is selected by using the <bpt id="p1">[</bpt>CDC::SelectObject<ept id="p1">](../../mfc/reference/cdc-class.md#cdc__selectobject)</ept> member function, the GDI font mapper attempts to match the logical font with an existing physical font.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>If the font mapper fails to find an exact match for the logical font, it provides an alternative font whose characteristics match as many of the requested characteristics as possible.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>When you no longer need the <ph id="ph1">`CFont`</ph> object created by the <ph id="ph2">`CreateFontIndirect`</ph> function, use <ph id="ph3">`CDC::SelectObject`</ph> to select a different font into the device context, then delete the <ph id="ph4">`CFont`</ph> object that is no longer needed.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>NVC_MFCDocView#72</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>CFont::CreatePointFont</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>This function provides a simple way to create a font of a specified typeface and point size.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Requested font height in tenths of a point.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>(For instance, pass 120 to request a 12-point font.)</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CString`</ph> or pointer to a null-terminated string that specifies the typeface name of the font.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The length of this string must not exceed 30 characters.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The Windows <bpt id="p1">**</bpt>EnumFontFamilies<ept id="p1">**</ept> function can be used to enumerate all currently available fonts.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`lpszFaceName`</ph> is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, the GDI uses a device-independent typeface.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>CDC<ept id="p1">](../../mfc/reference/cdc-class.md)</ept> object to be used to convert the height in <ph id="ph1">`nPointSize`</ph> to logical units.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, a screen device context is used for the conversion.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Nonzero if successful, otherwise 0.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>It automatically converts the height in <ph id="ph1">`nPointSize`</ph> to logical units using the <ph id="ph2">`CDC`</ph> object pointed to by <ph id="ph3">`pDC`</ph>.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>When you finish with the <ph id="ph1">`CFont`</ph> object created by the <ph id="ph2">`CreatePointFont`</ph> function, first select the font out of the device context, then delete the <ph id="ph3">`CFont`</ph> object.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>NVC_MFCDocView#73</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>CFont::CreatePointFontIndirect</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>This function is the same as <bpt id="p1">[</bpt>CreateFontIndirect<ept id="p1">](#cfont__createfontindirect)</ept> except that the <bpt id="p2">**</bpt>lfHeight<ept id="p2">**</ept> member of the <ph id="ph1">`LOGFONT`</ph> is interpreted in tenths of a point rather than device units.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Points to a <bpt id="p1">[</bpt>LOGFONT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd145037)</ept> structure that defines the characteristics of the logical font.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>lfHeight<ept id="p1">**</ept> member of the <ph id="ph1">`LOGFONT`</ph> structure is measured in tenths of a point rather than logical units.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>(For instance, set <bpt id="p1">**</bpt>lfHeight<ept id="p1">**</ept> to 120 to request a 12-point font.)</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>CDC<ept id="p1">](../../mfc/reference/cdc-class.md)</ept> object to be used to convert the height in <bpt id="p2">**</bpt>lfHeight<ept id="p2">**</ept> to logical units.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, a screen device context is used for the conversion.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Nonzero if successful, otherwise 0.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>This function automatically converts the height in <bpt id="p1">**</bpt>lfHeight<ept id="p1">**</ept> to logical units using the <ph id="ph1">`CDC`</ph> object pointed to by <ph id="ph2">`pDC`</ph> before passing the <ph id="ph3">`LOGFONT`</ph> structure on to Windows.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>When you finish with the <ph id="ph1">`CFont`</ph> object created by the <ph id="ph2">`CreatePointFontIndirect`</ph> function, first select the font out of the device context, then delete the <ph id="ph3">`CFont`</ph> object.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>NVC_MFCDocView#74</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>CFont::FromHandle</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Returns a pointer to a <ph id="ph1">`CFont`</ph> object when given an <bpt id="p1">**</bpt>HFONT<ept id="p1">**</ept> handle to a Windows GDI font object.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">**</bpt>HFONT<ept id="p1">**</ept> handle to a Windows font.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>A pointer to a <ph id="ph1">`CFont`</ph> object if successful; otherwise <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>If a <ph id="ph1">`CFont`</ph> object is not already attached to the handle, a temporary <ph id="ph2">`CFont`</ph> object is created and attached.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>This temporary <ph id="ph1">`CFont`</ph> object is valid only until the next time the application has idle time in its event loop, at which time all temporary graphic objects are deleted.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Another way of saying this is that the temporary object is valid only during the processing of one window message.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>NVC_MFCDocView#75</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>CFont::GetLogFont</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Call this function to retrieve a copy of the <ph id="ph1">`LOGFONT`</ph> structure for <ph id="ph2">`CFont`</ph>.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>pLogFont</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>LOGFONT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd145037)</ept> structure to receive the font information.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Nonzero if the function succeeds, otherwise 0.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>NVC_MFCDocView#76</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>CFont::operator HFONT</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Use this operator to get the Windows GDI handle of the font attached to the <ph id="ph1">`CFont`</ph> object.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The handle of the Windows GDI font object attached to <ph id="ph1">`CFont`</ph> if successful; otherwise <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Since this operator is automatically used for conversions from <ph id="ph1">`CFont`</ph> to <bpt id="p1">[</bpt>Fonts and Text<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd144819)</ept>, you can pass <ph id="ph2">`CFont`</ph> objects to functions that expect <bpt id="p2">**</bpt>HFONT<ept id="p2">**</ept>s.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>For more information about using graphic objects, see <bpt id="p1">[</bpt>Graphic Objects<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd144962)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>NVC_MFCDocView#77</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>MFC Sample HIERSVR</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>CGdiObject Class</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Hierarchy Chart</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>