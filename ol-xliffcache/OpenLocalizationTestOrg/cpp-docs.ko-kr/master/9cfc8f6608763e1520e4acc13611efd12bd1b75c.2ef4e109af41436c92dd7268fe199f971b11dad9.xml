{"nodes":[{"pos":[12,47],"content":"_com_ptr_t::Attach | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_com_ptr_t::Attach | Microsoft Docs","pos":[0,35]}]},{"content":"_com_ptr_t::Attach","pos":[680,698]},{"content":"Microsoft Specific","pos":[701,719]},{"content":"Encapsulates a raw interface pointer of this smart pointer's type.","pos":[728,794]},{"content":"Syntax","pos":[803,809]},{"content":"Parameters","pos":[977,987]},{"content":"A raw interface pointer.","pos":[1007,1031]},{"content":"If it is <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept>, then <ph id=\"ph1\">`AddRef`</ph> is called.","pos":[1051,1094],"source":" If it is **true**, then `AddRef` is called."},{"content":"If it is <bpt id=\"p1\">**</bpt>false<ept id=\"p1\">**</ept>, the <ph id=\"ph1\">`_com_ptr_t`</ph> object takes ownership of the raw interface pointer without calling <ph id=\"ph2\">`AddRef`</ph>.","pos":[1095,1209],"source":" If it is **false**, the `_com_ptr_t` object takes ownership of the raw interface pointer without calling `AddRef`."},{"content":"Remarks","pos":[1218,1225]},{"content":"<bpt id=\"p1\">**</bpt>Attach(<ept id=\"p1\">**</ept>  <ph id=\"ph1\">`pInterface`</ph>  <bpt id=\"p2\">**</bpt>)<ept id=\"p2\">**</ept> <ph id=\"ph2\">`AddRef`</ph> is not called.","pos":[1235,1291],"source":"**Attach(**  `pInterface`  **)** `AddRef` is not called."},{"content":"The ownership of the interface is passed to this <ph id=\"ph1\">`_com_ptr_t`</ph> object.","pos":[1292,1361],"source":" The ownership of the interface is passed to this `_com_ptr_t` object."},{"content":"<bpt id=\"p1\">**</bpt>Release<ept id=\"p1\">**</ept> is called to decrement the reference count for the previously encapsulated pointer.","pos":[1362,1457],"source":"**Release** is called to decrement the reference count for the previously encapsulated pointer."},{"content":"<bpt id=\"p1\">**</bpt>Attach(<ept id=\"p1\">**</ept>  <ph id=\"ph1\">`pInterface`</ph> <bpt id=\"p2\">**</bpt>,<ept id=\"p2\">**</ept>  <ph id=\"ph2\">`fAddRef`</ph>  <bpt id=\"p3\">**</bpt>)<ept id=\"p3\">**</ept> If <ph id=\"ph3\">`fAddRef`</ph> is <bpt id=\"p4\">**</bpt>true<ept id=\"p4\">**</ept>, <ph id=\"ph4\">`AddRef`</ph> is called to increment the reference count for the encapsulated interface pointer.","pos":[1467,1634],"source":"**Attach(**  `pInterface` **,**  `fAddRef`  **)** If `fAddRef` is **true**, `AddRef` is called to increment the reference count for the encapsulated interface pointer."},{"content":"If <ph id=\"ph1\">`fAddRef`</ph> is <bpt id=\"p1\">**</bpt>false<ept id=\"p1\">**</ept>, this <ph id=\"ph2\">`_com_ptr_t`</ph> object takes ownership of the raw interface pointer without calling <ph id=\"ph3\">`AddRef`</ph>.","pos":[1635,1757],"source":" If `fAddRef` is **false**, this `_com_ptr_t` object takes ownership of the raw interface pointer without calling `AddRef`."},{"content":"<bpt id=\"p1\">**</bpt>Release<ept id=\"p1\">**</ept> is called to decrement the reference count for the previously encapsulated pointer.","pos":[1758,1853],"source":"**Release** is called to decrement the reference count for the previously encapsulated pointer."},{"content":"END Microsoft Specific","pos":[1862,1884]},{"content":"See Also","pos":[1895,1903]},{"content":"_com_ptr_t Class","pos":[1908,1924]}],"content":"---\ntitle: \"_com_ptr_t::Attach | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"_com_ptr_t::Attach\"\n  - \"_com_ptr_t.Attach\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"COM interfaces, attach pointer\"\n  - \"Attach method\"\nms.assetid: 94c18e0a-06be-4ca7-bdaf-cd54ec0a645e\ncaps.latest.revision: 6\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _com_ptr_t::Attach\n**Microsoft Specific**  \n  \n Encapsulates a raw interface pointer of this smart pointer's type.  \n  \n## Syntax  \n  \n```  \n  \n      void Attach(  \n   Interface* pInterface   \n) throw( );  \nvoid Attach(  \n   Interface* pInterface,  \n   bool fAddRef   \n) throw( );  \n```  \n  \n#### Parameters  \n `pInterface`  \n A raw interface pointer.  \n  \n `fAddRef`  \n If it is **true**, then `AddRef` is called. If it is **false**, the `_com_ptr_t` object takes ownership of the raw interface pointer without calling `AddRef`.  \n  \n## Remarks  \n  \n-   **Attach(**  `pInterface`  **)** `AddRef` is not called. The ownership of the interface is passed to this `_com_ptr_t` object. **Release** is called to decrement the reference count for the previously encapsulated pointer.  \n  \n-   **Attach(**  `pInterface` **,**  `fAddRef`  **)** If `fAddRef` is **true**, `AddRef` is called to increment the reference count for the encapsulated interface pointer. If `fAddRef` is **false**, this `_com_ptr_t` object takes ownership of the raw interface pointer without calling `AddRef`. **Release** is called to decrement the reference count for the previously encapsulated pointer.  \n  \n **END Microsoft Specific**  \n  \n## See Also  \n [_com_ptr_t Class](../cpp/com-ptr-t-class.md)"}