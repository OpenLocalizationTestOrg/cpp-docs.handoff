{"nodes":[{"pos":[12,57],"content":"Microsoft-Specific Modifiers | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Microsoft-Specific Modifiers | Microsoft Docs","pos":[0,45]}]},{"content":"Microsoft-Specific Modifiers","pos":[549,577]},{"content":"This section describes Microsoft-specific extensions to C++ in the following areas:","pos":[578,661]},{"pos":[671,800],"content":"<bpt id=\"p1\">[</bpt>Based addressing<ept id=\"p1\">](../cpp/based-addressing.md)</ept>, the practice of using a pointer as a base from which other pointers can be offset","source":"[Based addressing](../cpp/based-addressing.md), the practice of using a pointer as a base from which other pointers can be offset"},{"content":"Function calling conventions","pos":[811,839]},{"pos":[881,973],"content":"Extended storage-class attributes declared with the <bpt id=\"p1\">[</bpt>__declspec<ept id=\"p1\">](../cpp/declspec.md)</ept> keyword","source":"Extended storage-class attributes declared with the [__declspec](../cpp/declspec.md) keyword"},{"pos":[983,1017],"content":"The <bpt id=\"p1\">[</bpt>__w64<ept id=\"p1\">](../cpp/w64.md)</ept> keyword","source":"The [__w64](../cpp/w64.md) keyword"},{"content":"Many of the Microsoft-specific keywords can be used to modify declarators to form derived types.","pos":[1024,1120]},{"content":"For more information about declarators, see <bpt id=\"p1\">[</bpt>Declarators<ept id=\"p1\">](http://msdn.microsoft.com/en-us/8a7b9b51-92bd-4ac0-b3fe-0c4abe771838)</ept>.","pos":[1121,1249],"source":" For more information about declarators, see [Declarators](http://msdn.microsoft.com/en-us/8a7b9b51-92bd-4ac0-b3fe-0c4abe771838)."},{"content":"Microsoft-Specific Keywords","pos":[1259,1286]},{"content":"Keyword","pos":[1293,1300]},{"content":"Meaning","pos":[1301,1308]},{"content":"Used to Form Derived Types?","pos":[1309,1336]},{"content":"__based","pos":[1408,1415]},{"content":"The name that follows declares a 32-bit offset to the 32-bit base contained in the declaration.","pos":[1442,1537]},{"content":"Yes","pos":[1538,1541]},{"content":"__cdecl","pos":[1547,1554]},{"content":"The name that follows uses the C naming and calling conventions.","pos":[1573,1637]},{"content":"Yes","pos":[1638,1641]},{"content":"__declspec","pos":[1647,1657]},{"content":"The name that follows specifies a Microsoft-specific storage-class attribute.","pos":[1679,1756]},{"content":"No","pos":[1757,1759]},{"content":"__fastcall","pos":[1765,1775]},{"content":"The name that follows declares a function that uses registers, when available, instead of the stack for argument passing.","pos":[1797,1918]},{"content":"Yes","pos":[1919,1922]},{"content":"__restrict","pos":[1928,1938]},{"pos":[1970,2050],"content":"Similar to __declspec(<bpt id=\"p1\">[</bpt>restrict<ept id=\"p1\">](../cpp/restrict.md)</ept>), but for use on variables.","source":"Similar to __declspec([restrict](../cpp/restrict.md)), but for use on variables."},{"content":"No","pos":[2051,2053]},{"content":"__stdcall","pos":[2059,2068]},{"content":"The name that follows specifies a function that observes the standard calling convention.","pos":[2089,2178]},{"content":"Yes","pos":[2179,2182]},{"content":"__w64","pos":[2188,2193]},{"content":"Marks a data type as being larger on a 64-bit compiler.","pos":[2210,2265]},{"content":"No","pos":[2266,2268]},{"content":"__unaligned","pos":[2274,2285]},{"content":"Specifies that a pointer to a type or other data is not aligned..","pos":[2308,2373]},{"content":"No","pos":[2374,2376]},{"content":"__vectorcall","pos":[2382,2394]},{"content":"The name that follows declares a function that uses registers, including SSE registers, when available, instead of the stack for argument passing.","pos":[2418,2564]},{"content":"Yes","pos":[2565,2568]},{"content":"See Also","pos":[2578,2586]},{"content":"C++ Language Reference","pos":[2591,2613]}],"content":"---\ntitle: \"Microsoft-Specific Modifiers | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\ndev_langs: \n  - \"C++\"\nms.assetid: 22c7178c-f854-47fa-9de6-07d23fda58e1\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Microsoft-Specific Modifiers\nThis section describes Microsoft-specific extensions to C++ in the following areas:  \n  \n-   [Based addressing](../cpp/based-addressing.md), the practice of using a pointer as a base from which other pointers can be offset  \n  \n-   [Function calling conventions](../cpp/calling-conventions.md)  \n  \n-   Extended storage-class attributes declared with the [__declspec](../cpp/declspec.md) keyword  \n  \n-   The [__w64](../cpp/w64.md) keyword  \n  \n Many of the Microsoft-specific keywords can be used to modify declarators to form derived types. For more information about declarators, see [Declarators](http://msdn.microsoft.com/en-us/8a7b9b51-92bd-4ac0-b3fe-0c4abe771838).  \n  \n### Microsoft-Specific Keywords  \n  \n|Keyword|Meaning|Used to Form Derived Types?|  \n|-------------|-------------|---------------------------------|  \n|[__based](../cpp/based-grammar.md)|The name that follows declares a 32-bit offset to the 32-bit base contained in the declaration.|Yes|  \n|[__cdecl](../cpp/cdecl.md)|The name that follows uses the C naming and calling conventions.|Yes|  \n|[__declspec](../cpp/declspec.md)|The name that follows specifies a Microsoft-specific storage-class attribute.|No|  \n|[__fastcall](../cpp/fastcall.md)|The name that follows declares a function that uses registers, when available, instead of the stack for argument passing.|Yes|  \n|[__restrict](../cpp/extension-restrict.md)|Similar to __declspec([restrict](../cpp/restrict.md)), but for use on variables.|No|  \n|[__stdcall](../cpp/stdcall.md)|The name that follows specifies a function that observes the standard calling convention.|Yes|  \n|[__w64](../cpp/w64.md)|Marks a data type as being larger on a 64-bit compiler.|No|  \n|[__unaligned](../cpp/unaligned.md)|Specifies that a pointer to a type or other data is not aligned..|No|  \n|[__vectorcall](../cpp/vectorcall.md)|The name that follows declares a function that uses registers, including SSE registers, when available, instead of the stack for argument passing.|Yes|  \n  \n## See Also  \n [C++ Language Reference](../cpp/cpp-language-reference.md)"}