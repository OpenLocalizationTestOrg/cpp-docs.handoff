{"nodes":[{"pos":[12,44],"content":"CLinkCtrl Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CLinkCtrl Class | Microsoft Docs","pos":[0,32]}]},{"pos":[713,728],"content":"CLinkCtrl Class","linkify":"CLinkCtrl Class","nodes":[{"content":"CLinkCtrl Class","pos":[0,15]}]},{"content":"Provides the functionality of the Windows common SysLink control.","pos":[729,794]},{"pos":[803,809],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[865,872],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[882,901],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[908,912]},{"content":"Description","pos":[913,924]},{"pos":[962,1007],"content":"<bpt id=\"p1\">[</bpt>CLinkCtrl::CLinkCtrl<ept id=\"p1\">](#clinkctrl__clinkctrl)</ept>","source":"[CLinkCtrl::CLinkCtrl](#clinkctrl__clinkctrl)"},{"pos":[1008,1040],"content":"Constructs a <ph id=\"ph1\">`CLinkCtrl`</ph> object.","source":"Constructs a `CLinkCtrl` object."},{"pos":[1051,1065],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1072,1076]},{"content":"Description","pos":[1077,1088]},{"pos":[1126,1165],"content":"<bpt id=\"p1\">[</bpt>CLinkCtrl::Create<ept id=\"p1\">](#clinkctrl__create)</ept>","source":"[CLinkCtrl::Create](#clinkctrl__create)"},{"pos":[1166,1229],"content":"Creates a link control and attaches it to a <ph id=\"ph1\">`CLinkCtrl`</ph> object.","source":"Creates a link control and attaches it to a `CLinkCtrl` object."},{"pos":[1234,1277],"content":"<bpt id=\"p1\">[</bpt>CLinkCtrl::CreateEx<ept id=\"p1\">](#clinkctrl__createex)</ept>","source":"[CLinkCtrl::CreateEx](#clinkctrl__createex)"},{"pos":[1278,1362],"content":"Creates a link control with extended styles and attaches it to a <ph id=\"ph1\">`CLinkCtrl`</ph> object.","source":"Creates a link control with extended styles and attaches it to a `CLinkCtrl` object."},{"pos":[1367,1422],"content":"<bpt id=\"p1\">[</bpt>CLinkCtrl::GetIdealHeight<ept id=\"p1\">](#clinkctrl__getidealheight)</ept>","source":"[CLinkCtrl::GetIdealHeight](#clinkctrl__getidealheight)"},{"content":"Retrieves the ideal height of the link control.","pos":[1423,1470]},{"pos":[1475,1526],"content":"<bpt id=\"p1\">[</bpt>CLinkCtrl::GetIdealSize<ept id=\"p1\">](#clinkctrl__getidealsize)</ept>","source":"[CLinkCtrl::GetIdealSize](#clinkctrl__getidealsize)"},{"content":"Calculates the preferred height of the link text for the current link control, depending on the specified width of the link.","pos":[1527,1651]},{"pos":[1656,1697],"content":"<bpt id=\"p1\">[</bpt>CLinkCtrl::GetItem<ept id=\"p1\">](#clinkctrl__getitem)</ept>","source":"[CLinkCtrl::GetItem](#clinkctrl__getitem)"},{"content":"Retrieves the states and attributes of a link control item.","pos":[1698,1757]},{"pos":[1762,1807],"content":"<bpt id=\"p1\">[</bpt>CLinkCtrl::GetItemID<ept id=\"p1\">](#clinkctrl__getitemid)</ept>","source":"[CLinkCtrl::GetItemID](#clinkctrl__getitemid)"},{"content":"Retrieves the ID of a link control item.","pos":[1808,1848]},{"pos":[1853,1904],"content":"<bpt id=\"p1\">[</bpt>CLinkCtrl::GetItemState<ept id=\"p1\">](#clinkctrl__getitemstate)</ept>","source":"[CLinkCtrl::GetItemState](#clinkctrl__getitemstate)"},{"content":"Retrieves the state of the link control item.","pos":[1905,1950]},{"pos":[1955,2002],"content":"<bpt id=\"p1\">[</bpt>CLinkCtrl::GetItemUrl<ept id=\"p1\">](#clinkctrl__getitemurl)</ept>","source":"[CLinkCtrl::GetItemUrl](#clinkctrl__getitemurl)"},{"content":"Retrieves the URL represented by the link control item.","pos":[2003,2058]},{"pos":[2063,2104],"content":"<bpt id=\"p1\">[</bpt>CLinkCtrl::HitTest<ept id=\"p1\">](#clinkctrl__hittest)</ept>","source":"[CLinkCtrl::HitTest](#clinkctrl__hittest)"},{"content":"Determines whether the user clicked the specified link.","pos":[2105,2160]},{"pos":[2165,2206],"content":"<bpt id=\"p1\">[</bpt>CLinkCtrl::SetItem<ept id=\"p1\">](#clinkctrl__setitem)</ept>","source":"[CLinkCtrl::SetItem](#clinkctrl__setitem)"},{"content":"Sets the states and attributes of a link control item.","pos":[2207,2261]},{"pos":[2266,2311],"content":"<bpt id=\"p1\">[</bpt>CLinkCtrl::SetItemID<ept id=\"p1\">](#clinkctrl__setitemid)</ept>","source":"[CLinkCtrl::SetItemID](#clinkctrl__setitemid)"},{"content":"Sets the ID of a link control item.","pos":[2312,2347]},{"pos":[2352,2403],"content":"<bpt id=\"p1\">[</bpt>CLinkCtrl::SetItemState<ept id=\"p1\">](#clinkctrl__setitemstate)</ept>","source":"[CLinkCtrl::SetItemState](#clinkctrl__setitemstate)"},{"content":"Sets the state of the link control item.","pos":[2404,2444]},{"pos":[2449,2496],"content":"<bpt id=\"p1\">[</bpt>CLinkCtrl::SetItemUrl<ept id=\"p1\">](#clinkctrl__setitemurl)</ept>","source":"[CLinkCtrl::SetItemUrl](#clinkctrl__setitemurl)"},{"content":"Sets the URL represented by the link control item.","pos":[2497,2547]},{"pos":[2557,2564],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A \"link control\" provides a convenient way to embed hypertext links in a window.","pos":[2568,2648]},{"content":"The actual control is a window that renders marked-up text and launches appropriate applications when the user clicks an embedded link.","pos":[2649,2784]},{"content":"Multiple links are supported within one control and can be accessed by a zero-based index.","pos":[2785,2875]},{"pos":[2882,2998],"content":"This control (and therefore the <ph id=\"ph1\">`CLinkCtrl`</ph> class) is available only to programs running under Windows XP and later.","source":"This control (and therefore the `CLinkCtrl` class) is available only to programs running under Windows XP and later."},{"pos":[3005,3168],"content":"For more information, see <bpt id=\"p1\">[</bpt>SysLink Control<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760706)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [SysLink Control](http://msdn.microsoft.com/library/windows/desktop/bb760706) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[3177,3198],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[3202,3249],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[3256,3309],"content":"<bpt id=\"p1\">[</bpt>CCmdTarget<ept id=\"p1\">](../../mfc/reference/ccmdtarget-class.md)</ept>","source":"[CCmdTarget](../../mfc/reference/ccmdtarget-class.md)"},{"pos":[3316,3357],"content":"<bpt id=\"p1\">[</bpt>CWnd<ept id=\"p1\">](../../mfc/reference/cwnd-class.md)</ept>","source":"[CWnd](../../mfc/reference/cwnd-class.md)"},{"pos":[3384,3396],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3400,3420],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxcmn.h","source":"**Header:** afxcmn.h"},{"pos":[3430,3487],"content":"<bpt id=\"p1\">&lt;a name=\"clinkctrl__clinkctrl\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CLinkCtrl::CLinkCtrl","linkify":"<a name=\"clinkctrl__clinkctrl\"></a>  CLinkCtrl::CLinkCtrl","source":"<a name=\"clinkctrl__clinkctrl\"></a>  CLinkCtrl::CLinkCtrl"},{"pos":[3491,3523],"content":"Constructs a <ph id=\"ph1\">`CLinkCtrl`</ph> object.","source":"Constructs a `CLinkCtrl` object."},{"pos":[3561,3612],"content":"<bpt id=\"p1\">&lt;a name=\"clinkctrl__create\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CLinkCtrl::Create","linkify":"<a name=\"clinkctrl__create\"></a>  CLinkCtrl::Create","source":"<a name=\"clinkctrl__create\"></a>  CLinkCtrl::Create"},{"pos":[3616,3679],"content":"Creates a link control and attaches it to a <ph id=\"ph1\">`CLinkCtrl`</ph> object.","source":"Creates a link control and attaches it to a `CLinkCtrl` object."},{"pos":[3940,3950],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to a zero-terminated string that contains the marked up text to display.","pos":[3974,4054]},{"content":"For more information, see the section \"Markup and Link Access\" in the topic <bpt id=\"p1\">[</bpt>Overview of SysLink Controls<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760706)</ept> in the <bpt id=\"p2\">[</bpt>MSDN Library<ept id=\"p2\">](http://go.microsoft.com/fwlink/linkid=556)</ept>.","pos":[4055,4287],"source":" For more information, see the section \"Markup and Link Access\" in the topic [Overview of SysLink Controls](http://msdn.microsoft.com/library/windows/desktop/bb760706) in the [MSDN Library](http://go.microsoft.com/fwlink/linkid=556)."},{"content":"Specifies the link control's style.","pos":[4307,4342]},{"content":"Apply any combination of control styles.","pos":[4343,4383]},{"content":"See <bpt id=\"p1\">[</bpt>Common Control Styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775498)</ept> in the <ph id=\"ph1\">`Windows SDK`</ph> for more information.","pos":[4384,4514],"source":" See [Common Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb775498) in the `Windows SDK` for more information."},{"content":"Specifies the link control's size and position.","pos":[4531,4578]},{"content":"It can be either a <bpt id=\"p1\">[</bpt>CRect<ept id=\"p1\">](../../atl-mfc-shared/reference/crect-class.md)</ept> object or a <bpt id=\"p2\">[</bpt>RECT<ept id=\"p2\">](../../mfc/reference/rect-structure1.md)</ept> structure.","pos":[4579,4722],"source":" It can be either a [CRect](../../atl-mfc-shared/reference/crect-class.md) object or a [RECT](../../mfc/reference/rect-structure1.md) structure."},{"content":"Specifies the link control's parent window.","pos":[4745,4788]},{"content":"It must not be <ph id=\"ph1\">`NULL`</ph>.","pos":[4789,4811],"source":" It must not be `NULL`."},{"content":"Specifies the link control's ID.","pos":[4827,4859]},{"pos":[4869,4881],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[4885,4944],"content":"<ph id=\"ph1\">`true`</ph> if initialization was successful; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if initialization was successful; otherwise `false`."},{"pos":[4954,4961],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You construct a <ph id=\"ph1\">`CLinkCtrl`</ph> object in two steps.","pos":[4965,5013],"source":"You construct a `CLinkCtrl` object in two steps."},{"content":"First, call the constructor and then call <ph id=\"ph1\">`Create`</ph>, which creates the link control and attaches it to the <ph id=\"ph2\">`CLinkCtrl`</ph> object.","pos":[5014,5139],"source":" First, call the constructor and then call `Create`, which creates the link control and attaches it to the `CLinkCtrl` object."},{"content":"If you want to use extended windows styles with your control, call <bpt id=\"p1\">[</bpt>CLinkCtrl::CreateEx<ept id=\"p1\">](#clinkctrl__createex)</ept> instead of <ph id=\"ph1\">`Create`</ph>.","pos":[5140,5271],"source":" If you want to use extended windows styles with your control, call [CLinkCtrl::CreateEx](#clinkctrl__createex) instead of `Create`."},{"content":"The second form of the <ph id=\"ph1\">`Create`</ph> method is deprecated.","pos":[5278,5331],"source":"The second form of the `Create` method is deprecated."},{"content":"Use the first form that specifies the <ph id=\"ph1\">`lpszLinkMarkup`</ph> parameter.","pos":[5332,5397],"source":" Use the first form that specifies the `lpszLinkMarkup` parameter."},{"pos":[5407,5414],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[5418,5541],"content":"The following code example defines two variables, named <ph id=\"ph1\">`m_Link1`</ph> and <ph id=\"ph2\">`m_Link2`</ph>, that are used to access two link controls.","source":"The following code example defines two variables, named `m_Link1` and `m_Link2`, that are used to access two link controls."},{"pos":[5548,5640],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CLinkCtrl_s1#2<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/clinkctrl-class_1.h)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CLinkCtrl_s1#2](../../mfc/reference/codesnippet/cpp/clinkctrl-class_1.h)]"},{"pos":[5650,5657],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example creates one link control based on the location of another link control.","pos":[5661,5759]},{"content":"The resource loader creates the first link control when your application starts.","pos":[5760,5840]},{"content":"When your application enters the OnInitDialog method, you create the second link control relative to the position of the first link control.","pos":[5841,5981]},{"content":"Then you resize the second link control to fit the text that it displays.","pos":[5982,6055]},{"pos":[6062,6156],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CLinkCtrl_s1#1<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/clinkctrl-class_2.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CLinkCtrl_s1#1](../../mfc/reference/codesnippet/cpp/clinkctrl-class_2.cpp)]"},{"pos":[6166,6221],"content":"<bpt id=\"p1\">&lt;a name=\"clinkctrl__createex\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CLinkCtrl::CreateEx","linkify":"<a name=\"clinkctrl__createex\"></a>  CLinkCtrl::CreateEx","source":"<a name=\"clinkctrl__createex\"></a>  CLinkCtrl::CreateEx"},{"pos":[6225,6309],"content":"Creates a link control with extended styles and attaches it to a <ph id=\"ph1\">`CLinkCtrl`</ph> object.","source":"Creates a link control with extended styles and attaches it to a `CLinkCtrl` object."},{"pos":[6621,6631],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to a zero-terminated string that contains the marked up text to display.","pos":[6655,6735]},{"content":"For more information, see the section \"Markup and Link Access\" in the topic <bpt id=\"p1\">[</bpt>Overview of SysLink Controls<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760706)</ept> in the <bpt id=\"p2\">[</bpt>MSDN Library<ept id=\"p2\">](http://go.microsoft.com/fwlink/linkid=556)</ept>.","pos":[6736,6968],"source":" For more information, see the section \"Markup and Link Access\" in the topic [Overview of SysLink Controls](http://msdn.microsoft.com/library/windows/desktop/bb760706) in the [MSDN Library](http://go.microsoft.com/fwlink/linkid=556)."},{"content":"Specifies the extended style of the link control.","pos":[6990,7039]},{"content":"For a list of extended Windows styles, see the <ph id=\"ph1\">`dwExStyle`</ph> parameter for <bpt id=\"p1\">[</bpt>CreateWindowEx<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms632680)</ept> in the <ph id=\"ph2\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[7040,7249],"source":" For a list of extended Windows styles, see the `dwExStyle` parameter for [CreateWindowEx](http://msdn.microsoft.com/library/windows/desktop/ms632680) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Specifies the link control's style.","pos":[7269,7304]},{"content":"Apply any combination of control styles.","pos":[7305,7345]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Common Control Styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775498)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[7346,7515],"source":" For more information, see [Common Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb775498) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Specifies the link control's size and position.","pos":[7532,7579]},{"content":"It can be either a <bpt id=\"p1\">[</bpt>CRect<ept id=\"p1\">](../../atl-mfc-shared/reference/crect-class.md)</ept> object or a <bpt id=\"p2\">[</bpt>RECT<ept id=\"p2\">](../../mfc/reference/rect-structure1.md)</ept> structure.","pos":[7580,7723],"source":" It can be either a [CRect](../../atl-mfc-shared/reference/crect-class.md) object or a [RECT](../../mfc/reference/rect-structure1.md) structure."},{"content":"Specifies the link control's parent window.","pos":[7746,7789]},{"content":"It must not be <ph id=\"ph1\">`NULL`</ph>.","pos":[7790,7812],"source":" It must not be `NULL`."},{"content":"Specifies the link control's ID.","pos":[7828,7860]},{"pos":[7870,7882],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7886,7945],"content":"<ph id=\"ph1\">`true`</ph> if initialization was successful; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if initialization was successful; otherwise `false`."},{"pos":[7955,7962],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7966,8063],"content":"Use <ph id=\"ph1\">`CreateEx`</ph> instead of <bpt id=\"p1\">[</bpt>Create<ept id=\"p1\">](#clinkctrl__create)</ept> to apply extended Windows style constants.","source":"Use `CreateEx` instead of [Create](#clinkctrl__create) to apply extended Windows style constants."},{"content":"The second form of the <ph id=\"ph1\">`CreateEx`</ph> method is deprecated.","pos":[8070,8125],"source":"The second form of the `CreateEx` method is deprecated."},{"content":"Use the first form that specifies the <ph id=\"ph1\">`lpszLinkMarkup`</ph> parameter.","pos":[8126,8191],"source":" Use the first form that specifies the `lpszLinkMarkup` parameter."},{"pos":[8201,8268],"content":"<bpt id=\"p1\">&lt;a name=\"clinkctrl__getidealheight\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CLinkCtrl::GetIdealHeight","linkify":"<a name=\"clinkctrl__getidealheight\"></a>  CLinkCtrl::GetIdealHeight","source":"<a name=\"clinkctrl__getidealheight\"></a>  CLinkCtrl::GetIdealHeight"},{"content":"Retrieves the ideal height of the link control.","pos":[8272,8319]},{"pos":[8375,8387],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ideal height of the control, in pixels.","pos":[8391,8434]},{"pos":[8444,8451],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[8455,8674],"content":"This member function implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>LM_GETIDEALHEIGHT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760716)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This member function implements the behavior of the Win32 message [LM_GETIDEALHEIGHT](http://msdn.microsoft.com/library/windows/desktop/bb760716), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[8684,8747],"content":"<bpt id=\"p1\">&lt;a name=\"clinkctrl__getidealsize\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CLinkCtrl::GetIdealSize","linkify":"<a name=\"clinkctrl__getidealsize\"></a>  CLinkCtrl::GetIdealSize","source":"<a name=\"clinkctrl__getidealsize\"></a>  CLinkCtrl::GetIdealSize"},{"content":"Calculates the preferred height of the link text for the current link control, depending on the specified width of the link.","pos":[8751,8875]},{"pos":[8968,8978],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[8985,8994]},{"content":"Description","pos":[8995,9006]},{"pos":[9049,9066],"content":"[in] <ph id=\"ph1\">`cxMaxWidth`</ph>","source":"[in] `cxMaxWidth`"},{"content":"The maximum width of the link, in pixels.","pos":[9067,9108]},{"pos":[9113,9128],"content":"[out] * <ph id=\"ph1\">`pSize`</ph>","source":"[out] * `pSize`"},{"content":"A pointer to a Windows <bpt id=\"p1\">[</bpt>SIZE<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd145106)</ept> structure.","pos":[9129,9229],"source":"A pointer to a Windows [SIZE](http://msdn.microsoft.com/library/windows/desktop/dd145106) structure."},{"content":"When this method returns, the <ph id=\"ph1\">`cy`</ph> member of the <ph id=\"ph2\">`SIZE`</ph> structure contains the ideal link text height for the link text width that is specified by <ph id=\"ph3\">`cxMaxWidth`</ph>.","pos":[9230,9390],"source":" When this method returns, the `cy` member of the `SIZE` structure contains the ideal link text height for the link text width that is specified by `cxMaxWidth`."},{"content":"The <ph id=\"ph1\">`cx`</ph> member of the structure contains the link text width that is actually needed.","pos":[9391,9477],"source":" The `cx` member of the structure contains the link text width that is actually needed."},{"pos":[9488,9500],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The preferred height of the link text, in pixels.","pos":[9504,9553]},{"content":"The return value is the same as the value of the <ph id=\"ph1\">`cy`</ph> member of the <ph id=\"ph2\">`SIZE`</ph> structure.","pos":[9554,9639],"source":" The return value is the same as the value of the `cy` member of the `SIZE` structure."},{"pos":[9649,9656],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9660,9764],"content":"For an example of the <ph id=\"ph1\">`GetIdealSize`</ph> method, see the example in <bpt id=\"p1\">[</bpt>CLinkCtrl::Create<ept id=\"p1\">](#clinkctrl__create)</ept>.","source":"For an example of the `GetIdealSize` method, see the example in [CLinkCtrl::Create](#clinkctrl__create)."},{"pos":[9771,9958],"content":"This method sends the <bpt id=\"p1\">[</bpt>LM_GETIDEALSIZE<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760718)</ept> message, which is described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This method sends the [LM_GETIDEALSIZE](http://msdn.microsoft.com/library/windows/desktop/bb760718) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[9968,10021],"content":"<bpt id=\"p1\">&lt;a name=\"clinkctrl__getitem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CLinkCtrl::GetItem","linkify":"<a name=\"clinkctrl__getitem\"></a>  CLinkCtrl::GetItem","source":"<a name=\"clinkctrl__getitem\"></a>  CLinkCtrl::GetItem"},{"content":"Retrieves the states and attributes of a link control item.","pos":[10025,10084]},{"pos":[10146,10156],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>LITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760710)</ept> structure to receive item information.","pos":[10171,10292],"source":" A pointer to a [LITEM](http://msdn.microsoft.com/library/windows/desktop/bb760710) structure to receive item information."},{"pos":[10302,10314],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[10318,10368],"content":"Returns <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> on success, <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept> on failure.","source":"Returns **TRUE** on success, **FALSE** on failure."},{"pos":[10378,10385],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10389,10601],"content":"This member function implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>LM_GETITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760720)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This member function implements the behavior of the Win32 message [LM_GETITEM](http://msdn.microsoft.com/library/windows/desktop/bb760720), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[10611,10668],"content":"<bpt id=\"p1\">&lt;a name=\"clinkctrl__getitemid\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CLinkCtrl::GetItemID","linkify":"<a name=\"clinkctrl__getitemid\"></a>  CLinkCtrl::GetItemID","source":"<a name=\"clinkctrl__getitemid\"></a>  CLinkCtrl::GetItemID"},{"content":"Retrieves the ID of a link control item.","pos":[10672,10712]},{"pos":[10880,10890],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The index of a link control item.","pos":[10905,10938]},{"content":"<bpt id=\"p1\">*</bpt>strID<ept id=\"p1\">*</ept>","pos":[10945,10952],"source":"*strID*"},{"content":"A <bpt id=\"p1\">[</bpt>CStringT<ept id=\"p1\">](../../atl-mfc-shared/reference/cstringt-class.md)</ept> object containing the ID of the specified item.","pos":[10956,11066],"source":" A [CStringT](../../atl-mfc-shared/reference/cstringt-class.md) object containing the ID of the specified item."},{"content":"<bpt id=\"p1\">*</bpt>szID<ept id=\"p1\">*</ept>","pos":[11073,11079],"source":"*szID*"},{"content":"A null-terminated string containing the ID of the specified item.","pos":[11083,11148]},{"content":"<bpt id=\"p1\">*</bpt>cchID<ept id=\"p1\">*</ept>","pos":[11155,11162],"source":"*cchID*"},{"content":"The size in characters of the <bpt id=\"p1\">*</bpt>szID<ept id=\"p1\">*</ept> buffer.","pos":[11166,11210],"source":" The size in characters of the *szID* buffer."},{"pos":[11220,11232],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[11236,11286],"content":"Returns <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> on success, <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept> on failure.","source":"Returns **TRUE** on success, **FALSE** on failure."},{"pos":[11294,11411],"content":"[!NOTE]\n This function also returns **FALSE** if the buffer of *szID or strID* is smaller than **MAX_LINKID_TEXT**.","leadings":["","> "],"nodes":[{"content":"This function also returns <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept> if the buffer of <bpt id=\"p2\">*</bpt>szID or strID<ept id=\"p2\">*</ept> is smaller than <bpt id=\"p3\">**</bpt>MAX_LINKID_TEXT<ept id=\"p3\">**</ept>.","pos":[9,115],"source":" This function also returns **FALSE** if the buffer of *szID or strID* is smaller than **MAX_LINKID_TEXT**."}]},{"pos":[11421,11428],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Retrieves the ID of a specific link control item.","pos":[11432,11481]},{"content":"For more information, see the Win32 message <bpt id=\"p1\">[</bpt>LM_GETITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760720)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[11482,11658],"source":" For more information, see the Win32 message [LM_GETITEM](http://msdn.microsoft.com/library/windows/desktop/bb760720) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[11668,11731],"content":"<bpt id=\"p1\">&lt;a name=\"clinkctrl__getitemstate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CLinkCtrl::GetItemState","linkify":"<a name=\"clinkctrl__getitemstate\"></a>  CLinkCtrl::GetItemState","source":"<a name=\"clinkctrl__getitemstate\"></a>  CLinkCtrl::GetItemState"},{"content":"Retrieves the state of the link control item.","pos":[11735,11780]},{"pos":[11934,11944],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The index of a link control item.","pos":[11959,11992]},{"content":"The value of the specified state item.","pos":[12012,12050]},{"content":"Combination of flags describing which state item to get.","pos":[12072,12128]},{"content":"For a list of values, see the description of the <bpt id=\"p1\">**</bpt>state<ept id=\"p1\">**</ept> member in the <bpt id=\"p2\">[</bpt>LITEM<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/bb760710)</ept> structure.","pos":[12129,12280],"source":" For a list of values, see the description of the **state** member in the [LITEM](http://msdn.microsoft.com/library/windows/desktop/bb760710) structure."},{"content":"Allowable items are identical to those allowed in <bpt id=\"p1\">**</bpt>state<ept id=\"p1\">**</ept>.","pos":[12281,12341],"source":" Allowable items are identical to those allowed in **state**."},{"pos":[12351,12363],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[12367,12417],"content":"Returns <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> on success, <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept> on failure.","source":"Returns **TRUE** on success, **FALSE** on failure."},{"pos":[12427,12434],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Retrieves the value of the specified state item of a specific link control item.","pos":[12438,12518]},{"content":"For more information, see the Win32 message <bpt id=\"p1\">[</bpt>LM_GETITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760720)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[12519,12695],"source":" For more information, see the Win32 message [LM_GETITEM](http://msdn.microsoft.com/library/windows/desktop/bb760720) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[12705,12764],"content":"<bpt id=\"p1\">&lt;a name=\"clinkctrl__getitemurl\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CLinkCtrl::GetItemUrl","linkify":"<a name=\"clinkctrl__getitemurl\"></a>  CLinkCtrl::GetItemUrl","source":"<a name=\"clinkctrl__getitemurl\"></a>  CLinkCtrl::GetItemUrl"},{"content":"Retrieves the URL represented by the link control item.","pos":[12768,12823]},{"pos":[12996,13006],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The index of a link control item.","pos":[13021,13054]},{"content":"A <bpt id=\"p1\">[</bpt>CStringT<ept id=\"p1\">](../../atl-mfc-shared/reference/cstringt-class.md)</ept> object containing the URL represented by the specified item","pos":[13073,13195],"source":" A [CStringT](../../atl-mfc-shared/reference/cstringt-class.md) object containing the URL represented by the specified item"},{"content":"A null-terminated string containing the URL represented by the specified item","pos":[13213,13290]},{"content":"<bpt id=\"p1\">*</bpt>cchUrl<ept id=\"p1\">*</ept>","pos":[13297,13305],"source":"*cchUrl*"},{"content":"The size in characters of the <bpt id=\"p1\">*</bpt>szURL<ept id=\"p1\">*</ept> buffer.","pos":[13309,13354],"source":" The size in characters of the *szURL* buffer."},{"pos":[13364,13376],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[13380,13430],"content":"Returns <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> on success, <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept> on failure.","source":"Returns **TRUE** on success, **FALSE** on failure."},{"pos":[13438,13557],"content":"[!NOTE]\n This function also returns **FALSE** if the buffer of *szUrl or strUrl* is smaller than **MAX_LINKID_TEXT**.","leadings":["","> "],"nodes":[{"content":"This function also returns <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept> if the buffer of <bpt id=\"p2\">*</bpt>szUrl or strUrl<ept id=\"p2\">*</ept> is smaller than <bpt id=\"p3\">**</bpt>MAX_LINKID_TEXT<ept id=\"p3\">**</ept>.","pos":[9,117],"source":" This function also returns **FALSE** if the buffer of *szUrl or strUrl* is smaller than **MAX_LINKID_TEXT**."}]},{"pos":[13567,13574],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Retrieves the URL represented by the specified link control item.","pos":[13578,13643]},{"content":"For more information, see the Win32 message <bpt id=\"p1\">[</bpt>LM_GETITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760720)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[13644,13820],"source":" For more information, see the Win32 message [LM_GETITEM](http://msdn.microsoft.com/library/windows/desktop/bb760720) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[13830,13883],"content":"<bpt id=\"p1\">&lt;a name=\"clinkctrl__hittest\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CLinkCtrl::HitTest","linkify":"<a name=\"clinkctrl__hittest\"></a>  CLinkCtrl::HitTest","source":"<a name=\"clinkctrl__hittest\"></a>  CLinkCtrl::HitTest"},{"content":"Determines if the user clicked the specified link.","pos":[13887,13937]},{"pos":[14005,14015],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>phti<ept id=\"p1\">*</ept>","pos":[14019,14025],"source":"*phti*"},{"content":"Pointer to a <bpt id=\"p1\">**</bpt>LHITTESTINFO<ept id=\"p1\">**</ept> structure containing any information about the link the user clicked.","pos":[14029,14128],"source":" Pointer to a **LHITTESTINFO** structure containing any information about the link the user clicked."},{"pos":[14138,14150],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[14154,14204],"content":"Returns <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> on success, <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept> on failure.","source":"Returns **TRUE** on success, **FALSE** on failure."},{"pos":[14214,14221],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[14225,14437],"content":"This member function implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>LM_HITTEST<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760722)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This member function implements the behavior of the Win32 message [LM_HITTEST](http://msdn.microsoft.com/library/windows/desktop/bb760722), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[14447,14500],"content":"<bpt id=\"p1\">&lt;a name=\"clinkctrl__setitem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CLinkCtrl::SetItem","linkify":"<a name=\"clinkctrl__setitem\"></a>  CLinkCtrl::SetItem","source":"<a name=\"clinkctrl__setitem\"></a>  CLinkCtrl::SetItem"},{"content":"Sets the states and attributes of a link control item.","pos":[14504,14558]},{"pos":[14611,14621],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>LITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760710)</ept> structure containing the information to set.","pos":[14636,14763],"source":" A pointer to a [LITEM](http://msdn.microsoft.com/library/windows/desktop/bb760710) structure containing the information to set."},{"pos":[14773,14785],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[14789,14839],"content":"Returns <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> on success, <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept> on failure.","source":"Returns **TRUE** on success, **FALSE** on failure."},{"pos":[14849,14856],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[14860,15072],"content":"This member function implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>LM_SETITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760724)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This member function implements the behavior of the Win32 message [LM_SETITEM](http://msdn.microsoft.com/library/windows/desktop/bb760724), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[15082,15139],"content":"<bpt id=\"p1\">&lt;a name=\"clinkctrl__setitemid\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CLinkCtrl::SetItemID","linkify":"<a name=\"clinkctrl__setitemid\"></a>  CLinkCtrl::SetItemID","source":"<a name=\"clinkctrl__setitemid\"></a>  CLinkCtrl::SetItemID"},{"content":"Retrieves the ID of a link control item.","pos":[15143,15183]},{"pos":[15260,15270],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The index of a link control item.","pos":[15285,15318]},{"content":"<bpt id=\"p1\">*</bpt>szID<ept id=\"p1\">*</ept>","pos":[15325,15331],"source":"*szID*"},{"content":"A null-terminated string containing the ID of the specified item.","pos":[15335,15400]},{"pos":[15410,15422],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15426,15476],"content":"Returns <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> on success, <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept> on failure.","source":"Returns **TRUE** on success, **FALSE** on failure."},{"pos":[15486,15493],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Sets the ID of a specific link control item.","pos":[15497,15541]},{"content":"For more information, see the Win32 message <bpt id=\"p1\">[</bpt>LM_SETITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760724)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[15542,15718],"source":" For more information, see the Win32 message [LM_SETITEM](http://msdn.microsoft.com/library/windows/desktop/bb760724) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[15728,15791],"content":"<bpt id=\"p1\">&lt;a name=\"clinkctrl__setitemstate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CLinkCtrl::SetItemState","linkify":"<a name=\"clinkctrl__setitemstate\"></a>  CLinkCtrl::SetItemState","source":"<a name=\"clinkctrl__setitemstate\"></a>  CLinkCtrl::SetItemState"},{"content":"Retrieves the state of the link control item.","pos":[15795,15840]},{"pos":[15982,15992],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The index of a link control item.","pos":[16007,16040]},{"content":"The value of the specified state item being set.","pos":[16060,16108]},{"content":"Combination of flags describing the state item being set.","pos":[16130,16187]},{"content":"For a list of values, see the description of the <bpt id=\"p1\">**</bpt>state<ept id=\"p1\">**</ept> member in the <bpt id=\"p2\">[</bpt>LITEM<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/bb760710)</ept> structure.","pos":[16188,16339],"source":" For a list of values, see the description of the **state** member in the [LITEM](http://msdn.microsoft.com/library/windows/desktop/bb760710) structure."},{"content":"Allowable items are identical to those allowed in <bpt id=\"p1\">**</bpt>state<ept id=\"p1\">**</ept>.","pos":[16340,16400],"source":" Allowable items are identical to those allowed in **state**."},{"pos":[16410,16422],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[16426,16476],"content":"Returns <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> on success, <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept> on failure.","source":"Returns **TRUE** on success, **FALSE** on failure."},{"pos":[16486,16493],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Sets the value of the specified state item of a specific link control item.","pos":[16497,16572]},{"content":"For more information, see the Win32 message <bpt id=\"p1\">[</bpt>LM_SETITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760724)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[16573,16749],"source":" For more information, see the Win32 message [LM_SETITEM](http://msdn.microsoft.com/library/windows/desktop/bb760724) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[16759,16818],"content":"<bpt id=\"p1\">&lt;a name=\"clinkctrl__setitemurl\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CLinkCtrl::SetItemUrl","linkify":"<a name=\"clinkctrl__setitemurl\"></a>  CLinkCtrl::SetItemUrl","source":"<a name=\"clinkctrl__setitemurl\"></a>  CLinkCtrl::SetItemUrl"},{"content":"Sets the URL represented by the link control item.","pos":[16822,16872]},{"pos":[16951,16961],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The index of a link control item.","pos":[16976,17009]},{"content":"A null-terminated string containing the URL represented by the specified item","pos":[17027,17104]},{"pos":[17114,17126],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[17130,17180],"content":"Returns <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> on success, <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept> on failure.","source":"Returns **TRUE** on success, **FALSE** on failure."},{"pos":[17190,17197],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Sets the URL represented by the specified link control item.","pos":[17201,17261]},{"content":"For more information, see the Win32 message <bpt id=\"p1\">[</bpt>LM_SETITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760724)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[17262,17438],"source":" For more information, see the Win32 message [LM_SETITEM](http://msdn.microsoft.com/library/windows/desktop/bb760724) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[17447,17455],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[17459,17507],"source":"[Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CWnd Class<ept id=\"p1\">](../../mfc/reference/cwnd-class.md)</ept>","pos":[17510,17558],"source":" [CWnd Class](../../mfc/reference/cwnd-class.md)"}],"content":"---\ntitle: \"CLinkCtrl Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CLinkCtrl\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CLinkCtrl class\"\n  - \"Web pages, link control\"\n  - \"controls [MFC], links\"\n  - \"links [C++], link control\"\n  - \"SysLink control\"\nms.assetid: d1cd876a-ecca-42db-8ac4-9cd327df0cd4\ncaps.latest.revision: 23\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CLinkCtrl Class\nProvides the functionality of the Windows common SysLink control.  \n  \n## Syntax  \n  \n```  \nclass CLinkCtrl : public CWnd  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CLinkCtrl::CLinkCtrl](#clinkctrl__clinkctrl)|Constructs a `CLinkCtrl` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CLinkCtrl::Create](#clinkctrl__create)|Creates a link control and attaches it to a `CLinkCtrl` object.|  \n|[CLinkCtrl::CreateEx](#clinkctrl__createex)|Creates a link control with extended styles and attaches it to a `CLinkCtrl` object.|  \n|[CLinkCtrl::GetIdealHeight](#clinkctrl__getidealheight)|Retrieves the ideal height of the link control.|  \n|[CLinkCtrl::GetIdealSize](#clinkctrl__getidealsize)|Calculates the preferred height of the link text for the current link control, depending on the specified width of the link.|  \n|[CLinkCtrl::GetItem](#clinkctrl__getitem)|Retrieves the states and attributes of a link control item.|  \n|[CLinkCtrl::GetItemID](#clinkctrl__getitemid)|Retrieves the ID of a link control item.|  \n|[CLinkCtrl::GetItemState](#clinkctrl__getitemstate)|Retrieves the state of the link control item.|  \n|[CLinkCtrl::GetItemUrl](#clinkctrl__getitemurl)|Retrieves the URL represented by the link control item.|  \n|[CLinkCtrl::HitTest](#clinkctrl__hittest)|Determines whether the user clicked the specified link.|  \n|[CLinkCtrl::SetItem](#clinkctrl__setitem)|Sets the states and attributes of a link control item.|  \n|[CLinkCtrl::SetItemID](#clinkctrl__setitemid)|Sets the ID of a link control item.|  \n|[CLinkCtrl::SetItemState](#clinkctrl__setitemstate)|Sets the state of the link control item.|  \n|[CLinkCtrl::SetItemUrl](#clinkctrl__setitemurl)|Sets the URL represented by the link control item.|  \n  \n## Remarks  \n A \"link control\" provides a convenient way to embed hypertext links in a window. The actual control is a window that renders marked-up text and launches appropriate applications when the user clicks an embedded link. Multiple links are supported within one control and can be accessed by a zero-based index.  \n  \n This control (and therefore the `CLinkCtrl` class) is available only to programs running under Windows XP and later.  \n  \n For more information, see [SysLink Control](http://msdn.microsoft.com/library/windows/desktop/bb760706) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n `CLinkCtrl`  \n  \n## Requirements  \n **Header:** afxcmn.h  \n  \n##  <a name=\"clinkctrl__clinkctrl\"></a>  CLinkCtrl::CLinkCtrl  \n Constructs a `CLinkCtrl` object.  \n  \n```  \nCLinkCtrl();\n```  \n  \n##  <a name=\"clinkctrl__create\"></a>  CLinkCtrl::Create  \n Creates a link control and attaches it to a `CLinkCtrl` object.  \n  \n```  \nvirtual BOOL Create(\n    LPCTSTR lpszLinkMarkup,   \n    DWORD dwStyle,   \n    const RECT& rect,   \n    CWnd* pParentWnd,   \n    UINT nID);\n\n \nvirtual BOOL Create(DWORD dwStyle,\n    const RECT& rect,\n    CWnd* pParentWnd,\n    UINT nID);\n```  \n  \n### Parameters  \n `lpszLinkMarkup`  \n Pointer to a zero-terminated string that contains the marked up text to display. For more information, see the section \"Markup and Link Access\" in the topic [Overview of SysLink Controls](http://msdn.microsoft.com/library/windows/desktop/bb760706) in the [MSDN Library](http://go.microsoft.com/fwlink/linkid=556).  \n  \n `dwStyle`  \n Specifies the link control's style. Apply any combination of control styles. See [Common Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb775498) in the `Windows SDK` for more information.  \n  \n `rect`  \n Specifies the link control's size and position. It can be either a [CRect](../../atl-mfc-shared/reference/crect-class.md) object or a [RECT](../../mfc/reference/rect-structure1.md) structure.  \n  \n `pParentWnd`  \n Specifies the link control's parent window. It must not be `NULL`.  \n  \n `nID`  \n Specifies the link control's ID.  \n  \n### Return Value  \n `true` if initialization was successful; otherwise `false`.  \n  \n### Remarks  \n You construct a `CLinkCtrl` object in two steps. First, call the constructor and then call `Create`, which creates the link control and attaches it to the `CLinkCtrl` object. If you want to use extended windows styles with your control, call [CLinkCtrl::CreateEx](#clinkctrl__createex) instead of `Create`.  \n  \n The second form of the `Create` method is deprecated. Use the first form that specifies the `lpszLinkMarkup` parameter.  \n  \n### Example  \n The following code example defines two variables, named `m_Link1` and `m_Link2`, that are used to access two link controls.  \n  \n [!code-cpp[NVC_MFC_CLinkCtrl_s1#2](../../mfc/reference/codesnippet/cpp/clinkctrl-class_1.h)]  \n  \n### Example  \n The following code example creates one link control based on the location of another link control. The resource loader creates the first link control when your application starts. When your application enters the OnInitDialog method, you create the second link control relative to the position of the first link control. Then you resize the second link control to fit the text that it displays.  \n  \n [!code-cpp[NVC_MFC_CLinkCtrl_s1#1](../../mfc/reference/codesnippet/cpp/clinkctrl-class_2.cpp)]  \n  \n##  <a name=\"clinkctrl__createex\"></a>  CLinkCtrl::CreateEx  \n Creates a link control with extended styles and attaches it to a `CLinkCtrl` object.  \n  \n```  \nvirtual BOOL CreateEx(\n    LPCTSTR lpszLinkMarkup,   \n    DWORD dwExStyle,  \n    DWORD dwStyle,   \n    const RECT& rect,   \n    CWnd* pParentWnd,   \n    UINT nID);\n\n \nvirtual BOOL CreateEx(DWORD  dwExStyle,\n    DWORD  dwStyle,\n    const RECT& rect,\n    CWnd* pParentWnd,\n    UINT  nID);\n```  \n  \n### Parameters  \n `lpszLinkMarkup`  \n Pointer to a zero-terminated string that contains the marked up text to display. For more information, see the section \"Markup and Link Access\" in the topic [Overview of SysLink Controls](http://msdn.microsoft.com/library/windows/desktop/bb760706) in the [MSDN Library](http://go.microsoft.com/fwlink/linkid=556).  \n  \n `dwExStyle`  \n Specifies the extended style of the link control. For a list of extended Windows styles, see the `dwExStyle` parameter for [CreateWindowEx](http://msdn.microsoft.com/library/windows/desktop/ms632680) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `dwStyle`  \n Specifies the link control's style. Apply any combination of control styles. For more information, see [Common Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb775498) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `rect`  \n Specifies the link control's size and position. It can be either a [CRect](../../atl-mfc-shared/reference/crect-class.md) object or a [RECT](../../mfc/reference/rect-structure1.md) structure.  \n  \n `pParentWnd`  \n Specifies the link control's parent window. It must not be `NULL`.  \n  \n `nID`  \n Specifies the link control's ID.  \n  \n### Return Value  \n `true` if initialization was successful; otherwise `false`.  \n  \n### Remarks  \n Use `CreateEx` instead of [Create](#clinkctrl__create) to apply extended Windows style constants.  \n  \n The second form of the `CreateEx` method is deprecated. Use the first form that specifies the `lpszLinkMarkup` parameter.  \n  \n##  <a name=\"clinkctrl__getidealheight\"></a>  CLinkCtrl::GetIdealHeight  \n Retrieves the ideal height of the link control.  \n  \n```  \nint GetIdealHeight() const;\n\n \n```  \n  \n### Return Value  \n The ideal height of the control, in pixels.  \n  \n### Remarks  \n This member function implements the behavior of the Win32 message [LM_GETIDEALHEIGHT](http://msdn.microsoft.com/library/windows/desktop/bb760716), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"clinkctrl__getidealsize\"></a>  CLinkCtrl::GetIdealSize  \n Calculates the preferred height of the link text for the current link control, depending on the specified width of the link.  \n  \n```  \nint GetIdealSize(\n    int cxMaxWidth,   \n    SIZE* pSize) const;\n\n \n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|[in] `cxMaxWidth`|The maximum width of the link, in pixels.|  \n|[out] * `pSize`|A pointer to a Windows [SIZE](http://msdn.microsoft.com/library/windows/desktop/dd145106) structure. When this method returns, the `cy` member of the `SIZE` structure contains the ideal link text height for the link text width that is specified by `cxMaxWidth`. The `cx` member of the structure contains the link text width that is actually needed.|  \n  \n### Return Value  \n The preferred height of the link text, in pixels. The return value is the same as the value of the `cy` member of the `SIZE` structure.  \n  \n### Remarks  \n For an example of the `GetIdealSize` method, see the example in [CLinkCtrl::Create](#clinkctrl__create).  \n  \n This method sends the [LM_GETIDEALSIZE](http://msdn.microsoft.com/library/windows/desktop/bb760718) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"clinkctrl__getitem\"></a>  CLinkCtrl::GetItem  \n Retrieves the states and attributes of a link control item.  \n  \n```  \nBOOL GetItem(PLITEM pItem) const;\n\n \n```  \n  \n### Parameters  \n `pItem`  \n A pointer to a [LITEM](http://msdn.microsoft.com/library/windows/desktop/bb760710) structure to receive item information.  \n  \n### Return Value  \n Returns **TRUE** on success, **FALSE** on failure.  \n  \n### Remarks  \n This member function implements the behavior of the Win32 message [LM_GETITEM](http://msdn.microsoft.com/library/windows/desktop/bb760720), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"clinkctrl__getitemid\"></a>  CLinkCtrl::GetItemID  \n Retrieves the ID of a link control item.  \n  \n```  \nBOOL GetItemID(\n    int iLink,  \n    CString& strID) const;\n\n \n \nBOOL GetItemID(\n    int iLink,  \n    LPWSTR szID,  \n    UINT cchID) const;\n\n \n```  \n  \n### Parameters  \n `iLink`  \n The index of a link control item.  \n  \n *strID*  \n A [CStringT](../../atl-mfc-shared/reference/cstringt-class.md) object containing the ID of the specified item.  \n  \n *szID*  \n A null-terminated string containing the ID of the specified item.  \n  \n *cchID*  \n The size in characters of the *szID* buffer.  \n  \n### Return Value  \n Returns **TRUE** on success, **FALSE** on failure.  \n  \n> [!NOTE]\n>  This function also returns **FALSE** if the buffer of *szID or strID* is smaller than **MAX_LINKID_TEXT**.  \n  \n### Remarks  \n Retrieves the ID of a specific link control item. For more information, see the Win32 message [LM_GETITEM](http://msdn.microsoft.com/library/windows/desktop/bb760720) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"clinkctrl__getitemstate\"></a>  CLinkCtrl::GetItemState  \n Retrieves the state of the link control item.  \n  \n```  \nBOOL GetItemState(\n    int iLink,  \n    UINT* pnState,  \n    UINT stateMask = LIS_FOCUSED | LIS_ENABLED | LIS_VISITED) const;\n\n \n```  \n  \n### Parameters  \n `iLink`  \n The index of a link control item.  \n  \n `pnState`  \n The value of the specified state item.  \n  \n `stateMask`  \n Combination of flags describing which state item to get. For a list of values, see the description of the **state** member in the [LITEM](http://msdn.microsoft.com/library/windows/desktop/bb760710) structure. Allowable items are identical to those allowed in **state**.  \n  \n### Return Value  \n Returns **TRUE** on success, **FALSE** on failure.  \n  \n### Remarks  \n Retrieves the value of the specified state item of a specific link control item. For more information, see the Win32 message [LM_GETITEM](http://msdn.microsoft.com/library/windows/desktop/bb760720) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"clinkctrl__getitemurl\"></a>  CLinkCtrl::GetItemUrl  \n Retrieves the URL represented by the link control item.  \n  \n```  \nBOOL GetItemUrl(\n    int iLink,  \n    CString& strUrl) const;\n\n \n \nBOOL GetItemUrl(\n    int iLink,  \n    LPWSTR szUrl,  \n    UINT cchUrl) const;\n\n \n```  \n  \n### Parameters  \n `iLink`  \n The index of a link control item.  \n  \n `strUrl`  \n A [CStringT](../../atl-mfc-shared/reference/cstringt-class.md) object containing the URL represented by the specified item  \n  \n `szUrl`  \n A null-terminated string containing the URL represented by the specified item  \n  \n *cchUrl*  \n The size in characters of the *szURL* buffer.  \n  \n### Return Value  \n Returns **TRUE** on success, **FALSE** on failure.  \n  \n> [!NOTE]\n>  This function also returns **FALSE** if the buffer of *szUrl or strUrl* is smaller than **MAX_LINKID_TEXT**.  \n  \n### Remarks  \n Retrieves the URL represented by the specified link control item. For more information, see the Win32 message [LM_GETITEM](http://msdn.microsoft.com/library/windows/desktop/bb760720) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"clinkctrl__hittest\"></a>  CLinkCtrl::HitTest  \n Determines if the user clicked the specified link.  \n  \n```  \nBOOL HitTest(PLHITTESTINFO phti) const;\n\n \n```  \n  \n### Parameters  \n *phti*  \n Pointer to a **LHITTESTINFO** structure containing any information about the link the user clicked.  \n  \n### Return Value  \n Returns **TRUE** on success, **FALSE** on failure.  \n  \n### Remarks  \n This member function implements the behavior of the Win32 message [LM_HITTEST](http://msdn.microsoft.com/library/windows/desktop/bb760722), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"clinkctrl__setitem\"></a>  CLinkCtrl::SetItem  \n Sets the states and attributes of a link control item.  \n  \n```  \nBOOL SetItem(PLITEM pItem);\n```  \n  \n### Parameters  \n `pItem`  \n A pointer to a [LITEM](http://msdn.microsoft.com/library/windows/desktop/bb760710) structure containing the information to set.  \n  \n### Return Value  \n Returns **TRUE** on success, **FALSE** on failure.  \n  \n### Remarks  \n This member function implements the behavior of the Win32 message [LM_SETITEM](http://msdn.microsoft.com/library/windows/desktop/bb760724), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"clinkctrl__setitemid\"></a>  CLinkCtrl::SetItemID  \n Retrieves the ID of a link control item.  \n  \n```  \nBOOL SetItemID(\n    int iLink,  \n    LPCWSTR szID);\n```  \n  \n### Parameters  \n `iLink`  \n The index of a link control item.  \n  \n *szID*  \n A null-terminated string containing the ID of the specified item.  \n  \n### Return Value  \n Returns **TRUE** on success, **FALSE** on failure.  \n  \n### Remarks  \n Sets the ID of a specific link control item. For more information, see the Win32 message [LM_SETITEM](http://msdn.microsoft.com/library/windows/desktop/bb760724) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"clinkctrl__setitemstate\"></a>  CLinkCtrl::SetItemState  \n Retrieves the state of the link control item.  \n  \n```  \nBOOL SetItemState(\n    int iLink,  \n    UINT state,  \n    UINT stateMask = LIS_FOCUSED | LIS_ENABLED | LIS_VISITED);\n```  \n  \n### Parameters  \n `iLink`  \n The index of a link control item.  \n  \n `pnState`  \n The value of the specified state item being set.  \n  \n `stateMask`  \n Combination of flags describing the state item being set. For a list of values, see the description of the **state** member in the [LITEM](http://msdn.microsoft.com/library/windows/desktop/bb760710) structure. Allowable items are identical to those allowed in **state**.  \n  \n### Return Value  \n Returns **TRUE** on success, **FALSE** on failure.  \n  \n### Remarks  \n Sets the value of the specified state item of a specific link control item. For more information, see the Win32 message [LM_SETITEM](http://msdn.microsoft.com/library/windows/desktop/bb760724) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"clinkctrl__setitemurl\"></a>  CLinkCtrl::SetItemUrl  \n Sets the URL represented by the link control item.  \n  \n```  \nBOOL SetItemUrl(\n    int iLink,  \n    LPCWSTR szUrl);\n```  \n  \n### Parameters  \n `iLink`  \n The index of a link control item.  \n  \n `szUrl`  \n A null-terminated string containing the URL represented by the specified item  \n  \n### Return Value  \n Returns **TRUE** on success, **FALSE** on failure.  \n  \n### Remarks  \n Sets the URL represented by the specified link control item. For more information, see the Win32 message [LM_SETITEM](http://msdn.microsoft.com/library/windows/desktop/bb760724) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [CWnd Class](../../mfc/reference/cwnd-class.md)\n"}