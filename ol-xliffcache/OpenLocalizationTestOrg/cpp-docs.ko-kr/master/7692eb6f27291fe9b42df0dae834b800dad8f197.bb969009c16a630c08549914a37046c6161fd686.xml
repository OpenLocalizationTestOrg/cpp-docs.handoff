{"nodes":[{"pos":[12,46],"content":"_execle, _wexecle | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_execle, _wexecle | Microsoft Docs","pos":[0,34]}]},{"pos":[1030,1047],"content":"_execle, _wexecle","linkify":"_execle, _wexecle","nodes":[{"content":"_execle, _wexecle","pos":[0,17]}]},{"content":"Loads and executes new child processes.","pos":[1048,1087]},{"pos":[1095,1355],"content":"[!IMPORTANT]\n This API cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":" This API cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","pos":[13,258],"nodes":[{"content":"This API cannot be used in applications that execute in the <ph id=\"ph1\">[!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]</ph>.","pos":[1,117],"source":" This API cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.","pos":[118,245],"source":" For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)."}]}]},{"pos":[1364,1370],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1692,1702],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Path of the file to execute.","pos":[1719,1747]},{"content":"<ph id=\"ph1\">`arg0`</ph>, <ph id=\"ph2\">`...``argn`</ph>","pos":[1754,1773],"source":"`arg0`, `...``argn`"},{"content":"List of pointers to parameters.","pos":[1777,1808]},{"content":"Array of pointers to environment settings.","pos":[1825,1867]},{"pos":[1876,1888],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"If successful, these functions do not return to the calling process.","pos":[1892,1960]},{"content":"A return value of –1 indicates an error, in which case the <ph id=\"ph1\">`errno`</ph> global variable is set.","pos":[1961,2051],"source":" A return value of –1 indicates an error, in which case the `errno` global variable is set."},{"pos":[2058,2071],"content":"<ph id=\"ph1\">`errno`</ph> value","source":"`errno` value"},{"content":"Description","pos":[2072,2083]},{"content":"The space that's required for the arguments and the environment settings exceeds 32 KB.","pos":[2138,2225]},{"content":"The specified file has a locking or sharing violation.","pos":[2239,2293]},{"content":"Invalid parameter.","pos":[2307,2325]},{"content":"Too many files are open.","pos":[2339,2363]},{"content":"(The specified file must be opened to determine whether it is executable.)","pos":[2364,2438]},{"content":"The file or path is not found.","pos":[2452,2482]},{"content":"The specified file is not executable or has an invalid executable-file format.","pos":[2497,2575]},{"content":"Not enough memory is available to execute the new process; the available memory has been corrupted; or an invalid block exists, which indicates that the calling process was not allocated correctly.","pos":[2589,2786]},{"pos":[2794,2961],"content":"For more information about these return codes, see <bpt id=\"p1\">[</bpt>_doserrno, errno, _sys_errlist, and _sys_nerr<ept id=\"p1\">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept>.","source":"For more information about these return codes, see [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)."},{"pos":[2970,2977],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Each of these functions loads and executes a new process, and passes each command-line argument as a separate parameter and passes an array of pointers to environment settings.","pos":[2981,3157]},{"content":"The <ph id=\"ph1\">`_execle`</ph> functions validate their parameters.","pos":[3164,3214],"source":"The `_execle` functions validate their parameters."},{"content":"If <ph id=\"ph1\">`cmdname`</ph> or <ph id=\"ph2\">`arg0`</ph> is a null pointer or an empty string, these functions invoke the invalid parameter handler, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[3215,3418],"source":" If `cmdname` or `arg0` is a null pointer or an empty string, these functions invoke the invalid parameter handler, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, these functions set <ph id=\"ph1\">`errno`</ph> to <ph id=\"ph2\">`EINVAL`</ph> and return -1.","pos":[3419,3510],"source":" If execution is allowed to continue, these functions set `errno` to `EINVAL` and return -1."},{"content":"No new process is launched.","pos":[3511,3538]},{"pos":[3547,3559],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Function","pos":[3566,3574]},{"content":"Required header","pos":[3575,3590]},{"content":"Optional header","pos":[3591,3606]},{"content":"<ph id=\"ph1\">\\&lt;</ph>process.h&gt;","pos":[3684,3696],"source":"\\<process.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>errno.h&gt;","pos":[3697,3707],"source":"\\<errno.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>process.h&gt; or <ph id=\"ph2\">\\&lt;</ph>wchar.h&gt;","pos":[3723,3749],"source":"\\<process.h> or \\<wchar.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>errno.h&gt;","pos":[3750,3760],"source":"\\<errno.h>"},{"pos":[3768,3852],"content":"For more information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For more information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[3861,3868],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3872,3966],"content":"See the example in <bpt id=\"p1\">[</bpt>_exec, _wexec Functions<ept id=\"p1\">](../../c-runtime-library/exec-wexec-functions.md)</ept>.","source":"See the example in [_exec, _wexec Functions](../../c-runtime-library/exec-wexec-functions.md)."},{"pos":[3975,4000],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"pos":[4010,4120],"content":"<bpt id=\"p1\">[</bpt>System::Diagnostics::Process Class<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.diagnostics.process.aspx)</ept>","source":"[System::Diagnostics::Process Class](https://msdn.microsoft.com/en-us/library/system.diagnostics.process.aspx)"},{"pos":[4130,4258],"content":"<bpt id=\"p1\">[</bpt>System::Diagnostics::ProcessStartInfo Class<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.diagnostics.processstartinfo.aspx)</ept>","source":"[System::Diagnostics::ProcessStartInfo Class](https://msdn.microsoft.com/en-us/library/system.diagnostics.processstartinfo.aspx)"},{"pos":[4267,4275],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Process and Environment Control<ept id=\"p1\">](../../c-runtime-library/process-and-environment-control.md)</ept><ph id=\"ph1\"> </ph>","pos":[4279,4373],"source":"[Process and Environment Control](../../c-runtime-library/process-and-environment-control.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_exec, _wexec Functions<ept id=\"p1\">](../../c-runtime-library/exec-wexec-functions.md)</ept><ph id=\"ph1\"> </ph>","pos":[4376,4452],"source":" [_exec, _wexec Functions](../../c-runtime-library/exec-wexec-functions.md) "},{"content":"<bpt id=\"p1\"> [</bpt>abort<ept id=\"p1\">](../../c-runtime-library/reference/abort.md)</ept><ph id=\"ph1\"> </ph>","pos":[4455,4508],"source":" [abort](../../c-runtime-library/reference/abort.md) "},{"content":"<bpt id=\"p1\"> [</bpt>atexit<ept id=\"p1\">](../../c-runtime-library/reference/atexit.md)</ept><ph id=\"ph1\"> </ph>","pos":[4511,4566],"source":" [atexit](../../c-runtime-library/reference/atexit.md) "},{"content":"<bpt id=\"p1\"> [</bpt>exit, _Exit, _exit<ept id=\"p1\">](../../c-runtime-library/reference/exit-exit-exit.md)</ept><ph id=\"ph1\"> </ph>","pos":[4569,4644],"source":" [exit, _Exit, _exit](../../c-runtime-library/reference/exit-exit-exit.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_onexit, _onexit_m<ept id=\"p1\">](../../c-runtime-library/reference/onexit-onexit-m.md)</ept><ph id=\"ph1\"> </ph>","pos":[4647,4723],"source":" [_onexit, _onexit_m](../../c-runtime-library/reference/onexit-onexit-m.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_spawn, _wspawn Functions<ept id=\"p1\">](../../c-runtime-library/spawn-wspawn-functions.md)</ept><ph id=\"ph1\"> </ph>","pos":[4726,4806],"source":" [_spawn, _wspawn Functions](../../c-runtime-library/spawn-wspawn-functions.md) "},{"content":"<bpt id=\"p1\"> [</bpt>system, _wsystem<ept id=\"p1\">](../../c-runtime-library/reference/system-wsystem.md)</ept>","pos":[4809,4881],"source":" [system, _wsystem](../../c-runtime-library/reference/system-wsystem.md)"}],"content":"---\ntitle: \"_execle, _wexecle | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_execle\"\n  - \"_wexecle\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-process-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"wexecle\"\n  - \"_execle\"\n  - \"_wexecle\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"wexecle function\"\n  - \"execle function\"\n  - \"_wexecle function\"\n  - \"_execle function\"\nms.assetid: 75efa9c5-96b7-4e23-acab-06258901f63a\ncaps.latest.revision: 22\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _execle, _wexecle\nLoads and executes new child processes.  \n  \n> [!IMPORTANT]\n>  This API cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \nintptr_t _execle(   \n   const char *cmdname,  \n   const char *arg0,  \n   ... const char *argn,  \n   NULL,  \n   const char *const *envp   \n);  \nintptr_t _wexecle(   \n   const wchar_t *cmdname,  \n   const wchar_t *arg0,  \n   ... const wchar_t *argn,  \n   NULL,  \n   const char *const *envp   \n);  \n```  \n  \n#### Parameters  \n `cmdname`  \n Path of the file to execute.  \n  \n `arg0`, `...``argn`  \n List of pointers to parameters.  \n  \n `envp`  \n Array of pointers to environment settings.  \n  \n## Return Value  \n If successful, these functions do not return to the calling process. A return value of –1 indicates an error, in which case the `errno` global variable is set.  \n  \n|`errno` value|Description|  \n|-------------------|-----------------|  \n|`E2BIG`|The space that's required for the arguments and the environment settings exceeds 32 KB.|  \n|`EACCES`|The specified file has a locking or sharing violation.|  \n|`EINVAL`|Invalid parameter.|  \n|`EMFILE`|Too many files are open. (The specified file must be opened to determine whether it is executable.)|  \n|`ENOENT`|The file or path is not found.|  \n|`ENOEXEC`|The specified file is not executable or has an invalid executable-file format.|  \n|`ENOMEM`|Not enough memory is available to execute the new process; the available memory has been corrupted; or an invalid block exists, which indicates that the calling process was not allocated correctly.|  \n  \n For more information about these return codes, see [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md).  \n  \n## Remarks  \n Each of these functions loads and executes a new process, and passes each command-line argument as a separate parameter and passes an array of pointers to environment settings.  \n  \n The `_execle` functions validate their parameters. If `cmdname` or `arg0` is a null pointer or an empty string, these functions invoke the invalid parameter handler, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, these functions set `errno` to `EINVAL` and return -1. No new process is launched.  \n  \n## Requirements  \n  \n|Function|Required header|Optional header|  \n|--------------|---------------------|---------------------|  \n|`_execle`|\\<process.h>|\\<errno.h>|  \n|`_wexecle`|\\<process.h> or \\<wchar.h>|\\<errno.h>|  \n  \n For more information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n See the example in [_exec, _wexec Functions](../../c-runtime-library/exec-wexec-functions.md).  \n  \n## .NET Framework Equivalent  \n  \n-   [System::Diagnostics::Process Class](https://msdn.microsoft.com/en-us/library/system.diagnostics.process.aspx)  \n  \n-   [System::Diagnostics::ProcessStartInfo Class](https://msdn.microsoft.com/en-us/library/system.diagnostics.processstartinfo.aspx)  \n  \n## See Also  \n [Process and Environment Control](../../c-runtime-library/process-and-environment-control.md)   \n [_exec, _wexec Functions](../../c-runtime-library/exec-wexec-functions.md)   \n [abort](../../c-runtime-library/reference/abort.md)   \n [atexit](../../c-runtime-library/reference/atexit.md)   \n [exit, _Exit, _exit](../../c-runtime-library/reference/exit-exit-exit.md)   \n [_onexit, _onexit_m](../../c-runtime-library/reference/onexit-onexit-m.md)   \n [_spawn, _wspawn Functions](../../c-runtime-library/spawn-wspawn-functions.md)   \n [system, _wsystem](../../c-runtime-library/reference/system-wsystem.md)"}