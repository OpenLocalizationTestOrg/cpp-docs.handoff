{"nodes":[{"pos":[12,50],"content":"deque::swap (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"deque::swap (STL-CLR) | Microsoft Docs","pos":[0,38]}]},{"content":"deque::swap (STL/CLR)","pos":[623,644]},{"content":"Swaps the contents of two containers.","pos":[645,682]},{"content":"Syntax","pos":[691,697]},{"content":"Parameters","pos":[757,767]},{"content":"right","pos":[771,776]},{"content":"Container to swap contents with.","pos":[780,812]},{"content":"Remarks","pos":[821,828]},{"content":"The member function swaps the controlled sequences between <ph id=\"ph1\">`*this`</ph> and <ph id=\"ph2\">`right`</ph>.","pos":[832,911],"source":"The member function swaps the controlled sequences between `*this` and `right`."},{"content":"It does so in constant time and it throws no exceptions.","pos":[912,968]},{"content":"You use it as a quick way to exchange the contents of two containers.","pos":[969,1038]},{"content":"Example","pos":[1047,1054]},{"content":"Requirements","pos":[2082,2094]},{"pos":[2098,2125],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/deque&gt;","source":"**Header:** \\<cliext/deque>"},{"pos":[2132,2153],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2162,2170]},{"content":"deque (STL/CLR)","pos":[2175,2190]},{"content":"deque::assign (STL/CLR)","pos":[2225,2248]},{"content":"operator= (deque) (STL/CLR)","pos":[2290,2317]}],"content":"---\ntitle: \"deque::swap (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::deque::swap\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"swap member [STL/CLR]\"\nms.assetid: 511e1aa8-3069-43f3-aa77-150f1de1e195\ncaps.latest.revision: 17\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# deque::swap (STL/CLR)\nSwaps the contents of two containers.  \n  \n## Syntax  \n  \n```  \nvoid swap(deque<Value>% right);  \n```  \n  \n#### Parameters  \n right  \n Container to swap contents with.  \n  \n## Remarks  \n The member function swaps the controlled sequences between `*this` and `right`. It does so in constant time and it throws no exceptions. You use it as a quick way to exchange the contents of two containers.  \n  \n## Example  \n  \n```  \n// cliext_deque_swap.cpp   \n// compile with: /clr   \n#include <cliext/deque>   \n  \nint main()   \n    {   \n    cliext::deque<wchar_t> c1;   \n    c1.push_back(L'a');   \n    c1.push_back(L'b');   \n    c1.push_back(L'c');   \n  \n// display initial contents \" a b c\"   \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// construct another container with repetition of values   \n    cliext::deque<wchar_t> c2(5, L'x');   \n    for each (wchar_t elem in c2)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// swap and redisplay   \n    c1.swap(c2);   \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n    for each (wchar_t elem in c2)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \na b c  \nx x x x x  \nx x x x x  \na b c  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/deque>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [deque (STL/CLR)](../dotnet/deque-stl-clr.md)   \n [deque::assign (STL/CLR)](../dotnet/deque-assign-stl-clr.md)   \n [operator= (deque) (STL/CLR)](../dotnet/operator-assign-deque-stl-clr.md)"}