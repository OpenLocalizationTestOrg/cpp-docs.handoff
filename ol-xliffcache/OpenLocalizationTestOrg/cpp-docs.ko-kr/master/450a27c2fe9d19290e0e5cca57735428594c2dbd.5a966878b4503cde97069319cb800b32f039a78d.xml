{"nodes":[{"pos":[12,62],"content":"tuple_element Class &lt;array&gt; | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"tuple_element Class <ph id=\"ph1\">&amp;lt;</ph>array<ph id=\"ph2\">&amp;gt;</ph> | Microsoft Docs","pos":[0,50],"source":"tuple_element Class &lt;array&gt; | Microsoft Docs"}]},{"pos":[697,730],"content":"tuple_element Class &lt;array&gt;","linkify":"tuple_element Class &lt;array&gt;","nodes":[{"content":"tuple_element Class <ph id=\"ph1\">&amp;lt;</ph>array<ph id=\"ph2\">&amp;gt;</ph>","pos":[0,33],"source":"tuple_element Class &lt;array&gt;"}]},{"content":"Wraps the type of an array element.","pos":[731,766]},{"pos":[775,781],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1488,1498],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The element position.","pos":[1513,1534]},{"content":"The type of an element.","pos":[1548,1571]},{"content":"The size of the array.","pos":[1585,1607]},{"pos":[1616,1623],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This template class is a specialization of the template class <bpt id=\"p1\">[</bpt>tuple_element Class<ept id=\"p1\">](../standard-library/tuple-element-class-tuple.md)</ept> for arrays.","pos":[1627,1772],"source":"This template class is a specialization of the template class [tuple_element Class](../standard-library/tuple-element-class-tuple.md) for arrays."},{"content":"This class provides an interface to an array as a tuple of N elements, each of which has the same type.","pos":[1773,1876]},{"content":"Each specialization has a nested typedef <ph id=\"ph1\">`type`</ph> that is a synonym for the type of the <ph id=\"ph2\">`Index`</ph> element of the <ph id=\"ph3\">`array`</ph>, with any const-volatile qualifications preserved.","pos":[1877,2044],"source":" Each specialization has a nested typedef `type` that is a synonym for the type of the `Index` element of the `array`, with any const-volatile qualifications preserved."},{"pos":[2053,2060],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2517,2529],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2533,2553],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>array&gt;","source":"**Header:** \\<array>"},{"pos":[2560,2578],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"pos":[2587,2595],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>array&gt;<ept id=\"p1\">](../standard-library/array.md)</ept><ph id=\"ph2\"> </ph>","pos":[2599,2640],"source":"[\\<array>](../standard-library/array.md) "},{"content":"<bpt id=\"p1\"> [</bpt><ph id=\"ph1\">\\&lt;</ph>tuple&gt;<ept id=\"p1\">](../standard-library/tuple.md)</ept><ph id=\"ph2\"> </ph>","pos":[2643,2685],"source":" [\\<tuple>](../standard-library/tuple.md) "},{"content":"<bpt id=\"p1\"> [</bpt>tuple_element Class<ept id=\"p1\">](../standard-library/tuple-element-class-tuple.md)</ept>","pos":[2688,2760],"source":" [tuple_element Class](../standard-library/tuple-element-class-tuple.md)"}],"content":"---\ntitle: \"tuple_element Class &lt;array&gt; | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std.tr1.tuple_element\"\n  - \"tuple_element\"\n  - \"std::tr1::tuple_element\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"tuple_element Class <array> (TR1)\"\nms.assetid: 99201ca4-190a-4d9e-9013-de95ddfe5901\ncaps.latest.revision: 21\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# tuple_element Class &lt;array&gt;\nWraps the type of an array element.  \n  \n## Syntax  \n  \n```  \n// CLASS tuple_element (find element by index)  \ntemplate <size_t Index, class Tuple>  \nstruct tuple_element;  \n \ntemplate <size_t Index, class T, size_t Size>  \nstruct tuple_element<Index, array<T, Size>>  \n\n// tuple_element for const \ntemplate <size_t Index, class Tuple>  \nstruct tuple_element<Index, const Tuple>;  \n \n// tuple_element for volatile  \ntemplate <size_t Index, class Tuple>  \nstruct tuple_element<Index, volatile Tuple>;  \n \n// tuple_element for const volatile  \ntemplate <size_t Index, class Tuple>  \nstruct tuple_element<Index, const volatile Tuple>;  \n \ntemplate <size_t Index, class Tuple>  \nusing tuple_element_t = typename tuple_element<Index, Tuple>::type;  \n```  \n  \n## Parameters  \n `Index`  \n The element position.  \n  \n `T`  \n The type of an element.  \n  \n `N`  \n The size of the array.  \n  \n## Remarks  \n This template class is a specialization of the template class [tuple_element Class](../standard-library/tuple-element-class-tuple.md) for arrays. This class provides an interface to an array as a tuple of N elements, each of which has the same type. Each specialization has a nested typedef `type` that is a synonym for the type of the `Index` element of the `array`, with any const-volatile qualifications preserved.  \n  \n## Example  \n  \n```cpp  \n  \n#include <array>   \n#include <iostream>   \n  \nusing namespace std;  \ntypedef array<int, 4> MyArray;  \n  \nint main()  \n{  \n    MyArray c0 { 0, 1, 2, 3 };  \n  \n    for (const auto& e : c0)  \n    {  \n        cout << \" \" << e;  \n    }  \n    cout << endl;  \n  \n    // display first element \" 0\"   \n    tuple_element<0, MyArray>::type val = c0.front();  \n    cout << \" \" << val << endl;  \n}  \n  \n/*  \nOutput:  \n0 1 2 3  \n0  \n*/  \n  \n```  \n  \n## Requirements  \n **Header:** \\<array>  \n  \n **Namespace:** std  \n  \n## See Also  \n [\\<array>](../standard-library/array.md)   \n [\\<tuple>](../standard-library/tuple.md)   \n [tuple_element Class](../standard-library/tuple-element-class-tuple.md)\n"}