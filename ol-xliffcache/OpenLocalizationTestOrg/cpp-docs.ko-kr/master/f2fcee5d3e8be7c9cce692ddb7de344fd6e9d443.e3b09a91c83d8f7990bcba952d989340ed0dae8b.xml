{"nodes":[{"pos":[12,51],"content":"deque::empty (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"deque::empty (STL-CLR) | Microsoft Docs","pos":[0,39]}]},{"content":"deque::empty (STL/CLR)","pos":[626,648]},{"content":"Tests whether no elements are present.","pos":[649,687]},{"content":"Syntax","pos":[696,702]},{"content":"Remarks","pos":[742,749]},{"content":"The member function returns true for an empty controlled sequence.","pos":[753,819]},{"content":"It is equivalent to <bpt id=\"p1\">[</bpt>deque::size (STL/CLR)<ept id=\"p1\">](../dotnet/deque-size-stl-clr.md)</ept><ph id=\"ph1\">`() == 0`</ph>.","pos":[820,906],"source":" It is equivalent to [deque::size (STL/CLR)](../dotnet/deque-size-stl-clr.md)`() == 0`."},{"content":"You use it to test whether the deque is empty.","pos":[907,953]},{"content":"Example","pos":[962,969]},{"content":"Requirements","pos":[1816,1828]},{"pos":[1832,1859],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/deque&gt;","source":"**Header:** \\<cliext/deque>"},{"pos":[1866,1887],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1896,1904]},{"content":"deque (STL/CLR)","pos":[1909,1924]},{"content":"deque::size (STL/CLR)","pos":[1959,1980]}],"content":"---\ntitle: \"deque::empty (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::deque::empty\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"empty member [STL/CLR]\"\nms.assetid: 6ff3dd07-ebdf-47f9-b0d2-8a3229390d3b\ncaps.latest.revision: 15\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# deque::empty (STL/CLR)\nTests whether no elements are present.  \n  \n## Syntax  \n  \n```  \nbool empty();  \n```  \n  \n## Remarks  \n The member function returns true for an empty controlled sequence. It is equivalent to [deque::size (STL/CLR)](../dotnet/deque-size-stl-clr.md)`() == 0`. You use it to test whether the deque is empty.  \n  \n## Example  \n  \n```  \n// cliext_deque_empty.cpp   \n// compile with: /clr   \n#include <cliext/deque>   \n  \nint main()   \n    {   \n    cliext::deque<wchar_t> c1;   \n    c1.push_back(L'a');   \n    c1.push_back(L'b');   \n    c1.push_back(L'c');   \n  \n// display initial contents \" a b c\"   \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n    System::Console::WriteLine(\"size() = {0}\", c1.size());   \n    System::Console::WriteLine(\"empty() = {0}\", c1.empty());   \n  \n// clear the container and reinspect   \n    c1.clear();   \n    System::Console::WriteLine(\"size() = {0}\", c1.size());   \n    System::Console::WriteLine(\"empty() = {0}\", c1.empty());   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n a b c  \nsize() = 3  \nempty() = False  \nsize() = 0  \nempty() = True  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/deque>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [deque (STL/CLR)](../dotnet/deque-stl-clr.md)   \n [deque::size (STL/CLR)](../dotnet/deque-size-stl-clr.md)"}