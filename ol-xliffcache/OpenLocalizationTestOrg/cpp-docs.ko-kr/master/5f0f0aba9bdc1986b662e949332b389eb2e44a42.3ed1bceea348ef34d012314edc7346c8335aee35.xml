{"nodes":[{"pos":[12,43],"content":"_fwrite_nolock | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_fwrite_nolock | Microsoft Docs","pos":[0,31]}]},{"pos":[1013,1027],"content":"_fwrite_nolock","linkify":"_fwrite_nolock","nodes":[{"content":"_fwrite_nolock","pos":[0,14]}]},{"content":"Writes data to a stream, without locking the thread.","pos":[1028,1080]},{"pos":[1089,1095],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1232,1242],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to the data to be written.","pos":[1258,1292]},{"content":"Item size in bytes.","pos":[1309,1328]},{"content":"Maximum number of items to be written.","pos":[1346,1384]},{"content":"Pointer to the <ph id=\"ph1\">`FILE`</ph> structure.","pos":[1403,1435],"source":" Pointer to the `FILE` structure."},{"pos":[1444,1456],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[1460,1522],"content":"Same as <bpt id=\"p1\">[</bpt>fwrite<ept id=\"p1\">](../../c-runtime-library/reference/fwrite.md)</ept>.","source":"Same as [fwrite](../../c-runtime-library/reference/fwrite.md)."},{"pos":[1531,1538],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function is a non-locking version of <ph id=\"ph1\">`fwrite`</ph>.","pos":[1542,1593],"source":"This function is a non-locking version of `fwrite`."},{"content":"It is identical to <ph id=\"ph1\">`fwrite`</ph> except that it is not protected from interference by other threads.","pos":[1594,1689],"source":" It is identical to `fwrite` except that it is not protected from interference by other threads."},{"content":"It might be faster because it does not incur the overhead of locking out other threads.","pos":[1690,1777]},{"content":"Use this function only in thread-safe contexts such as single-threaded applications or where the calling scope already handles thread isolation.","pos":[1778,1922]},{"pos":[1931,1943],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Function","pos":[1950,1958]},{"content":"Required header","pos":[1959,1974]},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdio.h&gt;","pos":[2037,2047],"source":"\\<stdio.h>"},{"pos":[2055,2173],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"pos":[2182,2189],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2193,2265],"content":"See the example for <bpt id=\"p1\">[</bpt>fread<ept id=\"p1\">](../../c-runtime-library/reference/fread.md)</ept>.","source":"See the example for [fread](../../c-runtime-library/reference/fread.md)."},{"pos":[2274,2299],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"pos":[2303,2408],"content":"<bpt id=\"p1\">[</bpt>System::IO::FileStream::Write<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.io.filestream.write.aspx)</ept>","source":"[System::IO::FileStream::Write](https://msdn.microsoft.com/en-us/library/system.io.filestream.write.aspx)"},{"pos":[2417,2425],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Stream I/O<ept id=\"p1\">](../../c-runtime-library/stream-i-o.md)</ept><ph id=\"ph1\"> </ph>","pos":[2429,2481],"source":"[Stream I/O](../../c-runtime-library/stream-i-o.md) "},{"content":"<bpt id=\"p1\"> [</bpt>fread<ept id=\"p1\">](../../c-runtime-library/reference/fread.md)</ept><ph id=\"ph1\"> </ph>","pos":[2484,2537],"source":" [fread](../../c-runtime-library/reference/fread.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_write<ept id=\"p1\">](../../c-runtime-library/reference/write.md)</ept>","pos":[2540,2593],"source":" [_write](../../c-runtime-library/reference/write.md)"}],"content":"---\ntitle: \"_fwrite_nolock | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_fwrite_nolock\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-stdio-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_fwrite_nolock\"\n  - \"fwrite_nolock\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"fwrite_nolock function\"\n  - \"streams, writing data to\"\n  - \"_fwrite_nolock function\"\nms.assetid: 2b4ec6ce-742e-4615-8407-44a0a18ec1d7\ncaps.latest.revision: 11\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _fwrite_nolock\nWrites data to a stream, without locking the thread.  \n  \n## Syntax  \n  \n```  \nsize_t _fwrite_nolock(  \n   const void *buffer,  \n   size_t size,  \n   size_t count,  \n   FILE *stream   \n);  \n```  \n  \n#### Parameters  \n `buffer`  \n Pointer to the data to be written.  \n  \n `size`  \n Item size in bytes.  \n  \n `count`  \n Maximum number of items to be written.  \n  \n `stream`  \n Pointer to the `FILE` structure.  \n  \n## Return Value  \n Same as [fwrite](../../c-runtime-library/reference/fwrite.md).  \n  \n## Remarks  \n This function is a non-locking version of `fwrite`. It is identical to `fwrite` except that it is not protected from interference by other threads. It might be faster because it does not incur the overhead of locking out other threads. Use this function only in thread-safe contexts such as single-threaded applications or where the calling scope already handles thread isolation.  \n  \n## Requirements  \n  \n|Function|Required header|  \n|--------------|---------------------|  \n|`_fwrite_nolock`|\\<stdio.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Example  \n See the example for [fread](../../c-runtime-library/reference/fread.md).  \n  \n## .NET Framework Equivalent  \n [System::IO::FileStream::Write](https://msdn.microsoft.com/en-us/library/system.io.filestream.write.aspx)  \n  \n## See Also  \n [Stream I/O](../../c-runtime-library/stream-i-o.md)   \n [fread](../../c-runtime-library/reference/fread.md)   \n [_write](../../c-runtime-library/reference/write.md)"}