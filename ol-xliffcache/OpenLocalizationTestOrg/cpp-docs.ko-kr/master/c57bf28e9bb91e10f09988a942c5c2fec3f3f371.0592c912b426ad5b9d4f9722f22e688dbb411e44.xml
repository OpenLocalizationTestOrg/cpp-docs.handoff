{"nodes":[{"pos":[12,46],"content":"_CrtSetReportFile | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_CrtSetReportFile | Microsoft Docs","pos":[0,34]}]},{"content":"_CrtSetReportFile","pos":[988,1005]},{"content":"After you use <bpt id=\"p1\">[</bpt>_CrtSetReportMode<ept id=\"p1\">](../../c-runtime-library/reference/crtsetreportmode.md)</ept> to specify <ph id=\"ph1\">`_CRTDBG_MODE_FILE`</ph>, you can specify the file handle to receive the message text.","pos":[1006,1187],"source":"After you use [_CrtSetReportMode](../../c-runtime-library/reference/crtsetreportmode.md) to specify `_CRTDBG_MODE_FILE`, you can specify the file handle to receive the message text."},{"content":"is also used by <bpt id=\"p1\">[</bpt>_CrtDbgReport, _CrtDbgReportW<ept id=\"p1\">](../../c-runtime-library/reference/crtdbgreport-crtdbgreportw.md)</ept> to specify the destination of text (debug version only).","pos":[1208,1377],"source":" is also used by [_CrtDbgReport, _CrtDbgReportW](../../c-runtime-library/reference/crtdbgreport-crtdbgreportw.md) to specify the destination of text (debug version only)."},{"content":"Syntax","pos":[1386,1392]},{"content":"Parameters","pos":[1497,1507]},{"content":"Report type: <ph id=\"ph1\">`_CRT_WARN`</ph>, <ph id=\"ph2\">`_CRT_ERROR`</ph>, and <ph id=\"ph3\">`_CRT_ASSERT`</ph>.","pos":[1527,1585],"source":" Report type: `_CRT_WARN`, `_CRT_ERROR`, and `_CRT_ASSERT`."},{"content":"New report file for <ph id=\"ph1\">`reportType`</ph>.","pos":[1608,1641],"source":" New report file for `reportType`."},{"content":"Return Value","pos":[1650,1662]},{"content":"On successful completion, <ph id=\"ph1\">`_CrtSetReportFile`</ph> returns the previous report file defined for the report type specified in <ph id=\"ph2\">`reportType`</ph>.","pos":[1666,1799],"source":"On successful completion, `_CrtSetReportFile` returns the previous report file defined for the report type specified in `reportType`."},{"content":"If an invalid value is passed in for <ph id=\"ph1\">`reportType`</ph>, this function invokes the invalid parameter handler, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[1800,1992],"source":" If an invalid value is passed in for `reportType`, this function invokes the invalid parameter handler, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, <ph id=\"ph1\">`errno`</ph> is set to <ph id=\"ph2\">`EINVAL`</ph> and the function returns <ph id=\"ph3\">`_CRTDBG_HFILE_ERROR`</ph>.","pos":[1993,2104],"source":" If execution is allowed to continue, `errno` is set to `EINVAL` and the function returns `_CRTDBG_HFILE_ERROR`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>errno, _doserrno, _sys_errlist, and _sys_nerr<ept id=\"p1\">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept>.","pos":[2105,2247],"source":" For more information, see [errno, _doserrno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)."},{"content":"Remarks","pos":[2256,2263]},{"content":"is used with the <bpt id=\"p1\">[</bpt>_CrtSetReportMode<ept id=\"p1\">](../../c-runtime-library/reference/crtsetreportmode.md)</ept> function to define the destination or destinations for a specific report type generated by <ph id=\"ph1\">`_CrtDbgReport`</ph>.","pos":[2287,2486],"source":" is used with the [_CrtSetReportMode](../../c-runtime-library/reference/crtsetreportmode.md) function to define the destination or destinations for a specific report type generated by `_CrtDbgReport`."},{"content":"When <ph id=\"ph1\">`_CrtSetReportMode`</ph> has been called to assign the <ph id=\"ph2\">`_CRTDBG_MODE_FILE`</ph> reporting mode for a specific report type, <ph id=\"ph3\">`_CrtSetReportFile`</ph> should then be called to define the specific file or stream to use as the destination.","pos":[2487,2711],"source":" When `_CrtSetReportMode` has been called to assign the `_CRTDBG_MODE_FILE` reporting mode for a specific report type, `_CrtSetReportFile` should then be called to define the specific file or stream to use as the destination."},{"content":"When <bpt id=\"p1\">[</bpt>_DEBUG<ept id=\"p1\">](../../c-runtime-library/debug.md)</ept> is not defined, calls to <ph id=\"ph1\">`_CrtSetReportFile`</ph> are removed during preprocessing.","pos":[2712,2838],"source":" When [_DEBUG](../../c-runtime-library/debug.md) is not defined, calls to `_CrtSetReportFile` are removed during preprocessing."},{"content":"The following table shows a list of the available choices for <ph id=\"ph1\">`reportFile`</ph> and the resulting behavior of <ph id=\"ph2\">`_CrtDbgReport`</ph>.","pos":[2845,2966],"source":"The following table shows a list of the available choices for `reportFile` and the resulting behavior of `_CrtDbgReport`."},{"content":"These options are defined as bit flags in Crtdbg.h.","pos":[2967,3018]},{"content":"A handle to the file that will be the destination for messages.","pos":[3042,3105]},{"content":"No attempt is made to verify the validity of the handle.","pos":[3106,3162]},{"content":"You must open and close the handle to the file.","pos":[3163,3210]},{"content":"For example:","pos":[3211,3223]},{"content":"Writes message to <ph id=\"ph1\">`stderr`</ph>, which can be redirected as follows:","pos":[3582,3645],"source":" Writes message to `stderr`, which can be redirected as follows:"},{"content":"Writes message to <ph id=\"ph1\">`stdout`</ph>, which you can redirect.","pos":[3879,3930],"source":" Writes message to `stdout`, which you can redirect."},{"content":"Returns the current report mode.","pos":[3962,3994]},{"content":"The report file used by each report type can be separately controlled.","pos":[4001,4071]},{"content":"For example, it is possible to specify that a <ph id=\"ph1\">`reportType`</ph> of <ph id=\"ph2\">`_CRT_ERROR`</ph> be reported to <ph id=\"ph3\">`stderr`</ph>, while a <ph id=\"ph4\">`reportType`</ph> of <ph id=\"ph5\">`_CRT_ASSERT`</ph> be reported to a user-defined file handle or stream.","pos":[4072,4262],"source":" For example, it is possible to specify that a `reportType` of `_CRT_ERROR` be reported to `stderr`, while a `reportType` of `_CRT_ASSERT` be reported to a user-defined file handle or stream."},{"content":"Requirements","pos":[4271,4283]},{"content":"Routine","pos":[4290,4297]},{"content":"Required header","pos":[4298,4313]},{"content":"Optional header","pos":[4314,4329]},{"content":"crtdbg.h&gt;","pos":[4418,4427],"source":"crtdbg.h>"},{"content":"errno.h&gt;","pos":[4430,4438],"source":"errno.h>"},{"content":"The console is not supported in <ph id=\"ph1\">[!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)]</ph> apps.","pos":[4446,4559],"source":"The console is not supported in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps."},{"content":"The standard stream handles that are associated with the console—<ph id=\"ph1\">`stdin`</ph>, <ph id=\"ph2\">`stdout`</ph>, and <ph id=\"ph3\">`stderr`</ph>—must be redirected before C run-time functions can use them in <ph id=\"ph4\">[!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)]</ph> apps.","pos":[4560,4801],"source":" The standard stream handles that are associated with the console—`stdin`, `stdout`, and `stderr`—must be redirected before C run-time functions can use them in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps."},{"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","pos":[4802,4900],"source":" For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[4907,5017],"content":"<bpt id=\"p1\">**</bpt>Libraries:<ept id=\"p1\">**</ept> Debug versions of <bpt id=\"p2\">[</bpt>CRT Library Features<ept id=\"p2\">](../../c-runtime-library/crt-library-features.md)</ept> only.","source":"**Libraries:** Debug versions of [CRT Library Features](../../c-runtime-library/crt-library-features.md) only."},{"content":".NET Framework Equivalent","pos":[5026,5051]},{"content":"Not applicable.","pos":[5055,5070]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[5071,5118],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[5119,5244],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"content":"See Also","pos":[5253,5261]},{"content":"Debug Routines","pos":[5266,5280]}],"content":"---\ntitle: \"_CrtSetReportFile | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_CrtSetReportFile\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"CrtSetReportFile\"\n  - \"_CrtSetReportFile\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"CrtSetReportFile function\"\n  - \"_CrtSetReportFile function\"\nms.assetid: 3126537e-511b-44af-9c1c-0605265eabc4\ncaps.latest.revision: 16\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# _CrtSetReportFile\nAfter you use [_CrtSetReportMode](../../c-runtime-library/reference/crtsetreportmode.md) to specify `_CRTDBG_MODE_FILE`, you can specify the file handle to receive the message text. `_CrtSetReportFile` is also used by [_CrtDbgReport, _CrtDbgReportW](../../c-runtime-library/reference/crtdbgreport-crtdbgreportw.md) to specify the destination of text (debug version only).  \n  \n## Syntax  \n  \n```  \n_HFILE _CrtSetReportFile(   \n   int reportType,  \n   _HFILE reportFile   \n);  \n```  \n  \n#### Parameters  \n `reportType`  \n Report type: `_CRT_WARN`, `_CRT_ERROR`, and `_CRT_ASSERT`.  \n  \n `reportFile`  \n New report file for `reportType`.  \n  \n## Return Value  \n On successful completion, `_CrtSetReportFile` returns the previous report file defined for the report type specified in `reportType`. If an invalid value is passed in for `reportType`, this function invokes the invalid parameter handler, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, `errno` is set to `EINVAL` and the function returns `_CRTDBG_HFILE_ERROR`. For more information, see [errno, _doserrno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md).  \n  \n## Remarks  \n `_CrtSetReportFile` is used with the [_CrtSetReportMode](../../c-runtime-library/reference/crtsetreportmode.md) function to define the destination or destinations for a specific report type generated by `_CrtDbgReport`. When `_CrtSetReportMode` has been called to assign the `_CRTDBG_MODE_FILE` reporting mode for a specific report type, `_CrtSetReportFile` should then be called to define the specific file or stream to use as the destination. When [_DEBUG](../../c-runtime-library/debug.md) is not defined, calls to `_CrtSetReportFile` are removed during preprocessing.  \n  \n The following table shows a list of the available choices for `reportFile` and the resulting behavior of `_CrtDbgReport`. These options are defined as bit flags in Crtdbg.h.  \n  \n `file handle`  \n A handle to the file that will be the destination for messages. No attempt is made to verify the validity of the handle. You must open and close the handle to the file. For example:  \n  \n```  \nHANDLE hLogFile;  \nhLogFile = CreateFile(\"c:\\\\log.txt\", GENERIC_WRITE,   \n   FILE_SHARE_WRITE, NULL, CREATE_ALWAYS,   \n   FILE_ATTRIBUTE_NORMAL, NULL);  \n_CrtSetReportMode(_CRT_WARN, _CRTDBG_MODE_FILE);  \n_CrtSetReportFile(_CRT_WARN, hLogFile);  \n  \n_RPT0(_CRT_WARN,\"file message\\n\");  \nCloseHandle(hLogFile);  \n```  \n  \n `_CRTDBG_FILE_STDERR`  \n Writes message to `stderr`, which can be redirected as follows:  \n  \n```  \nfreopen( \"c:\\\\log2.txt\", \"w\", stderr);  \n_CrtSetReportMode(_CRT_ERROR, _CRTDBG_MODE_FILE);  \n_CrtSetReportFile(_CRT_ERROR, _CRTDBG_FILE_STDERR);  \n  \n_RPT0(_CRT_ERROR,\"1st message\\n\");  \n```  \n  \n `_CRTDBG_FILE_STDOUT`  \n Writes message to `stdout`, which you can redirect.  \n  \n `_CRTDBG_REPORT_FILE`  \n Returns the current report mode.  \n  \n The report file used by each report type can be separately controlled. For example, it is possible to specify that a `reportType` of `_CRT_ERROR` be reported to `stderr`, while a `reportType` of `_CRT_ASSERT` be reported to a user-defined file handle or stream.  \n  \n## Requirements  \n  \n|Routine|Required header|Optional header|  \n|-------------|---------------------|---------------------|  \n|`_CrtSetReportFile`|\\<crtdbg.h>|\\<errno.h>|  \n  \n The console is not supported in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps. The standard stream handles that are associated with the console—`stdin`, `stdout`, and `stderr`—must be redirected before C run-time functions can use them in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps. For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n **Libraries:** Debug versions of [CRT Library Features](../../c-runtime-library/crt-library-features.md) only.  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [Debug Routines](../../c-runtime-library/debug-routines.md)"}