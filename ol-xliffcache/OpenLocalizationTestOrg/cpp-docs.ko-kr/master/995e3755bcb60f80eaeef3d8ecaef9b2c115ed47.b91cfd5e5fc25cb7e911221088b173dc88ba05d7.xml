{"nodes":[{"pos":[12,54],"content":"multi_link_registry Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"multi_link_registry Class | Microsoft Docs","pos":[0,42]}]},{"content":"multi_link_registry Class","pos":[649,674]},{"pos":[675,799],"content":"The <ph id=\"ph1\">`multi_link_registry`</ph> object is a <ph id=\"ph2\">`network_link_registry`</ph> that manages multiple source blocks or multiple target blocks.","source":"The `multi_link_registry` object is a `network_link_registry` that manages multiple source blocks or multiple target blocks."},{"content":"Syntax","pos":[808,814]},{"content":"Parameters","pos":[927,937]},{"content":"The block data type being stored in the <ph id=\"ph1\">`multi_link_registry`</ph> object.","pos":[953,1022],"source":" The block data type being stored in the `multi_link_registry` object."},{"content":"Members","pos":[1031,1038]},{"content":"Public Constructors","pos":[1048,1067]},{"content":"Name","pos":[1074,1078]},{"content":"Description","pos":[1079,1090]},{"content":"multi_link_registry::multi_link_registry Constructor","pos":[1129,1181]},{"pos":[1190,1232],"content":"Constructs a <ph id=\"ph1\">`multi_link_registry`</ph> object.","source":"Constructs a `multi_link_registry` object."},{"content":"multi_link_registry::~multi_link_registry Destructor","pos":[1238,1290]},{"pos":[1299,1341],"content":"Destroys the <ph id=\"ph1\">`multi_link_registry`</ph> object.","source":"Destroys the `multi_link_registry` object."},{"content":"Public Methods","pos":[1352,1366]},{"content":"Name","pos":[1373,1377]},{"content":"Description","pos":[1378,1389]},{"content":"multi_link_registry::add Method","pos":[1428,1459]},{"content":"Adds a link to the <ph id=\"ph1\">`multi_link_registry`</ph> object.","pos":[1467,1515],"source":"Adds a link to the `multi_link_registry` object."},{"content":"(Overrides <bpt id=\"p1\">[</bpt>network_link_registry::add<ept id=\"p1\">](network-link-registry-class.md#add)</ept>.)","pos":[1516,1593],"source":" (Overrides [network_link_registry::add](network-link-registry-class.md#add).)"},{"content":"multi_link_registry::begin Method","pos":[1599,1632]},{"content":"Returns an iterator to the first element in the <ph id=\"ph1\">`multi_link_registry`</ph> object.","pos":[1642,1719],"source":"Returns an iterator to the first element in the `multi_link_registry` object."},{"content":"(Overrides <bpt id=\"p1\">[</bpt>network_link_registry::begin<ept id=\"p1\">](network-link-registry-class.md#begin)</ept>.)","pos":[1720,1801],"source":" (Overrides [network_link_registry::begin](network-link-registry-class.md#begin).)"},{"content":"multi_link_registry::contains Method","pos":[1807,1843]},{"content":"Searches the <ph id=\"ph1\">`multi_link_registry`</ph> object for a specified block.","pos":[1856,1920],"source":"Searches the `multi_link_registry` object for a specified block."},{"content":"(Overrides <bpt id=\"p1\">[</bpt>network_link_registry::contains<ept id=\"p1\">](network-link-registry-class.md#contains)</ept>.)","pos":[1921,2008],"source":" (Overrides [network_link_registry::contains](network-link-registry-class.md#contains).)"},{"content":"multi_link_registry::count Method","pos":[2014,2047]},{"content":"Counts the number of items in the <ph id=\"ph1\">`multi_link_registry`</ph> object.","pos":[2057,2120],"source":"Counts the number of items in the `multi_link_registry` object."},{"content":"(Overrides <bpt id=\"p1\">[</bpt>network_link_registry::count<ept id=\"p1\">](network-link-registry-class.md#count)</ept>.)","pos":[2121,2202],"source":" (Overrides [network_link_registry::count](network-link-registry-class.md#count).)"},{"content":"multi_link_registry::remove Method","pos":[2208,2242]},{"content":"Removes a link from the <ph id=\"ph1\">`multi_link_registry`</ph> object.","pos":[2253,2306],"source":"Removes a link from the `multi_link_registry` object."},{"content":"(Overrides <bpt id=\"p1\">[</bpt>network_link_registry::remove<ept id=\"p1\">](network-link-registry-class.md#remove)</ept>.)","pos":[2307,2390],"source":" (Overrides [network_link_registry::remove](network-link-registry-class.md#remove).)"},{"content":"multi_link_registry::set_bound Method","pos":[2396,2433]},{"pos":[2447,2537],"content":"Sets an upper bound on the number of links that the <ph id=\"ph1\">`multi_link_registry`</ph> object can hold.","source":"Sets an upper bound on the number of links that the `multi_link_registry` object can hold."},{"content":"Inheritance Hierarchy","pos":[2547,2568]},{"content":"network_link_registry","pos":[2573,2594]},{"content":"Requirements","pos":[2664,2676]},{"pos":[2680,2700],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> agents.h","source":"**Header:** agents.h"},{"pos":[2707,2733],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> concurrency","source":"**Namespace:** concurrency"},{"pos":[2763,2794],"content":"multi_link_registry::add Method"},{"pos":[2798,2846],"content":"Adds a link to the <ph id=\"ph1\">`multi_link_registry`</ph> object.","source":"Adds a link to the `multi_link_registry` object."},{"content":"Parameters","pos":[2901,2911]},{"content":"A pointer to a block to be added.","pos":[2926,2959]},{"content":"Remarks","pos":[2969,2976]},{"pos":[2980,3210],"content":"The method throws an <bpt id=\"p1\">[</bpt>invalid_link_target<ept id=\"p1\">](invalid-link-target-class.md)</ept> exception if the link is already present in the registry, or if a bound has already been set with the <ph id=\"ph1\">`set_bound`</ph> function and a link has since been removed.","source":"The method throws an [invalid_link_target](invalid-link-target-class.md) exception if the link is already present in the registry, or if a bound has already been set with the `set_bound` function and a link has since been removed."},{"pos":[3242,3275],"content":"multi_link_registry::begin Method"},{"pos":[3279,3356],"content":"Returns an iterator to the first element in the <ph id=\"ph1\">`multi_link_registry`</ph> object.","source":"Returns an iterator to the first element in the `multi_link_registry` object."},{"content":"Return Value","pos":[3405,3417]},{"pos":[3421,3498],"content":"An iterator addressing the first element in the <ph id=\"ph1\">`multi_link_registry`</ph> object.","source":"An iterator addressing the first element in the `multi_link_registry` object."},{"content":"Remarks","pos":[3508,3515]},{"pos":[3519,3563],"content":"The end state is indicated by a <ph id=\"ph1\">`NULL`</ph> link.","source":"The end state is indicated by a `NULL` link."},{"pos":[3598,3634],"content":"multi_link_registry::contains Method"},{"pos":[3638,3702],"content":"Searches the <ph id=\"ph1\">`multi_link_registry`</ph> object for a specified block.","source":"Searches the `multi_link_registry` object for a specified block."},{"content":"Parameters","pos":[3762,3772]},{"content":"A pointer to a block that is to be searched for in the <ph id=\"ph1\">`multi_link_registry`</ph> object.","pos":[3787,3871],"source":" A pointer to a block that is to be searched for in the `multi_link_registry` object."},{"content":"Return Value","pos":[3881,3893]},{"pos":[3904,3956],"content":"if the specified block was found, <ph id=\"ph1\">`false`</ph> otherwise.","source":" if the specified block was found, `false` otherwise."},{"pos":[3988,4021],"content":"multi_link_registry::count Method"},{"pos":[4025,4088],"content":"Counts the number of items in the <ph id=\"ph1\">`multi_link_registry`</ph> object.","source":"Counts the number of items in the `multi_link_registry` object."},{"content":"Return Value","pos":[4135,4147]},{"pos":[4151,4207],"content":"The number of items in the <ph id=\"ph1\">`multi_link_registry`</ph> object.","source":"The number of items in the `multi_link_registry` object."},{"pos":[4238,4290],"content":"multi_link_registry::multi_link_registry Constructor"},{"pos":[4294,4336],"content":"Constructs a <ph id=\"ph1\">`multi_link_registry`</ph> object.","source":"Constructs a `multi_link_registry` object."},{"pos":[4403,4455],"content":"multi_link_registry::~multi_link_registry Destructor"},{"pos":[4459,4501],"content":"Destroys the <ph id=\"ph1\">`multi_link_registry`</ph> object.","source":"Destroys the `multi_link_registry` object."},{"content":"Remarks","pos":[4556,4563]},{"pos":[4567,4685],"content":"The method throws an <bpt id=\"p1\">[</bpt>invalid_operation<ept id=\"p1\">](invalid-operation-class.md)</ept> exception if called before all links are removed.","source":"The method throws an [invalid_operation](invalid-operation-class.md) exception if called before all links are removed."},{"pos":[4718,4752],"content":"multi_link_registry::remove Method"},{"pos":[4756,4809],"content":"Removes a link from the <ph id=\"ph1\">`multi_link_registry`</ph> object.","source":"Removes a link from the `multi_link_registry` object."},{"content":"Parameters","pos":[4867,4877]},{"content":"A pointer to a block to be removed, if found.","pos":[4892,4937]},{"content":"Return Value","pos":[4947,4959]},{"pos":[4970,5023],"content":"if the link was found and removed, <ph id=\"ph1\">`false`</ph> otherwise.","source":" if the link was found and removed, `false` otherwise."},{"pos":[5059,5096],"content":"multi_link_registry::set_bound Method"},{"pos":[5100,5190],"content":"Sets an upper bound on the number of links that the <ph id=\"ph1\">`multi_link_registry`</ph> object can hold.","source":"Sets an upper bound on the number of links that the `multi_link_registry` object can hold."},{"content":"Parameters","pos":[5247,5257]},{"content":"The maximum number of links that the <ph id=\"ph1\">`multi_link_registry`</ph> object can hold.","pos":[5276,5351],"source":" The maximum number of links that the `multi_link_registry` object can hold."},{"content":"Remarks","pos":[5361,5368]},{"pos":[5372,5560],"content":"After a bound is set, unlinking an entry will cause the <ph id=\"ph1\">`multi_link_registry`</ph> object to enter an immutable state where further calls to <ph id=\"ph2\">`add`</ph> will throw an <ph id=\"ph3\">`invalid_link_target`</ph> exception.","source":"After a bound is set, unlinking an entry will cause the `multi_link_registry` object to enter an immutable state where further calls to `add` will throw an `invalid_link_target` exception."},{"content":"See Also","pos":[5569,5577]},{"content":"concurrency Namespace","pos":[5582,5603]},{"content":"single_link_registry Class","pos":[5636,5662]}],"content":"---\ntitle: \"multi_link_registry Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"agents/concurrency::multi_link_registry\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"multi_link_registry class\"\nms.assetid: b2aa73a8-e8a6-4255-b117-d07530c328b2\ncaps.latest.revision: 19\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# multi_link_registry Class\nThe `multi_link_registry` object is a `network_link_registry` that manages multiple source blocks or multiple target blocks.  \n  \n## Syntax  \n  \n```\ntemplate<class _Block>\nclass multi_link_registry : public network_link_registry<_Block>;\n```  \n  \n#### Parameters  \n `_Block`  \n The block data type being stored in the `multi_link_registry` object.  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[multi_link_registry::multi_link_registry Constructor](#ctor)|Constructs a `multi_link_registry` object.|  \n|[multi_link_registry::~multi_link_registry Destructor](#dtor)|Destroys the `multi_link_registry` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[multi_link_registry::add Method](#add)|Adds a link to the `multi_link_registry` object. (Overrides [network_link_registry::add](network-link-registry-class.md#add).)|  \n|[multi_link_registry::begin Method](#begin)|Returns an iterator to the first element in the `multi_link_registry` object. (Overrides [network_link_registry::begin](network-link-registry-class.md#begin).)|  \n|[multi_link_registry::contains Method](#contains)|Searches the `multi_link_registry` object for a specified block. (Overrides [network_link_registry::contains](network-link-registry-class.md#contains).)|  \n|[multi_link_registry::count Method](#count)|Counts the number of items in the `multi_link_registry` object. (Overrides [network_link_registry::count](network-link-registry-class.md#count).)|  \n|[multi_link_registry::remove Method](#remove)|Removes a link from the `multi_link_registry` object. (Overrides [network_link_registry::remove](network-link-registry-class.md#remove).)|  \n|[multi_link_registry::set_bound Method](#set_bound)|Sets an upper bound on the number of links that the `multi_link_registry` object can hold.|  \n  \n## Inheritance Hierarchy  \n [network_link_registry](network-link-registry-class.md)  \n  \n `multi_link_registry`  \n  \n## Requirements  \n **Header:** agents.h  \n  \n **Namespace:** concurrency  \n  \n##  <a name=\"add\"></a>  multi_link_registry::add Method  \n Adds a link to the `multi_link_registry` object.  \n  \n```\nvirtual void add(_EType _Link);\n```  \n  \n### Parameters  \n `_Link`  \n A pointer to a block to be added.  \n  \n### Remarks  \n The method throws an [invalid_link_target](invalid-link-target-class.md) exception if the link is already present in the registry, or if a bound has already been set with the `set_bound` function and a link has since been removed.  \n  \n##  <a name=\"begin\"></a>  multi_link_registry::begin Method  \n Returns an iterator to the first element in the `multi_link_registry` object.  \n  \n```\nvirtual iterator begin();\n```  \n  \n### Return Value  \n An iterator addressing the first element in the `multi_link_registry` object.  \n  \n### Remarks  \n The end state is indicated by a `NULL` link.  \n  \n##  <a name=\"contains\"></a>  multi_link_registry::contains Method  \n Searches the `multi_link_registry` object for a specified block.  \n  \n```\nvirtual bool contains(_EType _Link);\n```  \n  \n### Parameters  \n `_Link`  \n A pointer to a block that is to be searched for in the `multi_link_registry` object.  \n  \n### Return Value  \n `true` if the specified block was found, `false` otherwise.  \n  \n##  <a name=\"count\"></a>  multi_link_registry::count Method  \n Counts the number of items in the `multi_link_registry` object.  \n  \n```\nvirtual size_t count();\n```  \n  \n### Return Value  \n The number of items in the `multi_link_registry` object.  \n  \n##  <a name=\"ctor\"></a>  multi_link_registry::multi_link_registry Constructor  \n Constructs a `multi_link_registry` object.  \n  \n```\nmulti_link_registry();\n```  \n  \n##  <a name=\"dtor\"></a>  multi_link_registry::~multi_link_registry Destructor  \n Destroys the `multi_link_registry` object.  \n  \n```\nvirtual ~multi_link_registry();\n```  \n  \n### Remarks  \n The method throws an [invalid_operation](invalid-operation-class.md) exception if called before all links are removed.  \n  \n##  <a name=\"remove\"></a>  multi_link_registry::remove Method  \n Removes a link from the `multi_link_registry` object.  \n  \n```\nvirtual bool remove(_EType _Link);\n```  \n  \n### Parameters  \n `_Link`  \n A pointer to a block to be removed, if found.  \n  \n### Return Value  \n `true` if the link was found and removed, `false` otherwise.  \n  \n##  <a name=\"set_bound\"></a>  multi_link_registry::set_bound Method  \n Sets an upper bound on the number of links that the `multi_link_registry` object can hold.  \n  \n```\nvoid set_bound(size_t _MaxLinks);\n```  \n  \n### Parameters  \n `_MaxLinks`  \n The maximum number of links that the `multi_link_registry` object can hold.  \n  \n### Remarks  \n After a bound is set, unlinking an entry will cause the `multi_link_registry` object to enter an immutable state where further calls to `add` will throw an `invalid_link_target` exception.  \n  \n## See Also  \n [concurrency Namespace](concurrency-namespace.md)   \n [single_link_registry Class](single-link-registry-class.md)\n"}