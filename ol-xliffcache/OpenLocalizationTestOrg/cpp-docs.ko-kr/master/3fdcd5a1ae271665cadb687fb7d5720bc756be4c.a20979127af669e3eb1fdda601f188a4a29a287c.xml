{"nodes":[{"pos":[12,54],"content":"Schema  (MFC Data Access) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Schema  (MFC Data Access) | Microsoft Docs","pos":[0,42]}]},{"content":"Schema  (MFC Data Access)","pos":[752,777]},{"content":"A database schema describes the current structure of the tables and database views in the database.","pos":[778,877]},{"content":"In general, wizard-generated code assumes that the schema for the table or tables accessed by a recordset will not change, but the database classes can deal with some schema changes, such as adding, reordering, or deleting unbound columns.","pos":[878,1117]},{"content":"If a table changes, you must manually update the recordset for the table, then recompile your application.","pos":[1118,1224]},{"content":"You can also supplement the wizard-generated code to deal with a database whose schema is not entirely known at compile time.","pos":[1231,1356]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Recordset: Dynamically Binding Data Columns (ODBC)<ept id=\"p1\">](../data/odbc/recordset-dynamically-binding-data-columns-odbc.md)</ept>.","pos":[1357,1501],"source":" For more information, see [Recordset: Dynamically Binding Data Columns (ODBC)](../data/odbc/recordset-dynamically-binding-data-columns-odbc.md)."},{"content":"See Also","pos":[1510,1518]},{"content":"Data Access Programming (MFC/ATL)","pos":[1523,1556]},{"content":"SQL","pos":[1607,1610]},{"content":"Recordset (ODBC)","pos":[1638,1654]}],"content":"---\ntitle: \"Schema  (MFC Data Access) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"structures [C++], database\"\n  - \"databases [C++], schema\"\n  - \"database schema [C++], about database schemas\"\n  - \"database schema [C++]\"\n  - \"schemas [C++], database\"\n  - \"structures [C++]\"\nms.assetid: 7d17e35f-1ccf-4853-b915-5b8c7a45b9ee\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Schema  (MFC Data Access)\nA database schema describes the current structure of the tables and database views in the database. In general, wizard-generated code assumes that the schema for the table or tables accessed by a recordset will not change, but the database classes can deal with some schema changes, such as adding, reordering, or deleting unbound columns. If a table changes, you must manually update the recordset for the table, then recompile your application.  \n  \n You can also supplement the wizard-generated code to deal with a database whose schema is not entirely known at compile time. For more information, see [Recordset: Dynamically Binding Data Columns (ODBC)](../data/odbc/recordset-dynamically-binding-data-columns-odbc.md).  \n  \n## See Also  \n [Data Access Programming (MFC/ATL)](../data/data-access-programming-mfc-atl.md)   \n [SQL](../data/odbc/sql.md)   \n [Recordset (ODBC)](../data/odbc/recordset-odbc.md)"}