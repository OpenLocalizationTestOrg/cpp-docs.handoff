{"nodes":[{"pos":[12,69],"content":"Recordset: Adding Records in Bulk (ODBC) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Recordset: Adding Records in Bulk (ODBC) | Microsoft Docs","pos":[0,57]}]},{"content":"Recordset: Adding Records in Bulk (ODBC)","pos":[684,724]},{"content":"This topic applies to the MFC ODBC classes.","pos":[725,768]},{"pos":[775,942],"content":"The MFC <bpt id=\"p1\">[</bpt>CRecordset<ept id=\"p1\">](../../mfc/reference/crecordset-class.md)</ept> class has a new optimization that improves efficiency when you are adding new records in bulk to a table.","source":"The MFC [CRecordset](../../mfc/reference/crecordset-class.md) class has a new optimization that improves efficiency when you are adding new records in bulk to a table."},{"pos":[950,1215],"content":"[!NOTE]\n This topic applies to objects derived from `CRecordset` in which bulk row fetching has not been implemented. If you are using bulk row fetching, see [Recordset: Fetching Records in Bulk (ODBC)](../../data/odbc/recordset-fetching-records-in-bulk-odbc.md).","leadings":["","> "],"nodes":[{"content":" This topic applies to objects derived from `CRecordset` in which bulk row fetching has not been implemented. If you are using bulk row fetching, see [Recordset: Fetching Records in Bulk (ODBC)](../../data/odbc/recordset-fetching-records-in-bulk-odbc.md).","pos":[8,263],"nodes":[{"content":"This topic applies to objects derived from <ph id=\"ph1\">`CRecordset`</ph> in which bulk row fetching has not been implemented.","pos":[1,109],"source":" This topic applies to objects derived from `CRecordset` in which bulk row fetching has not been implemented."},{"content":"If you are using bulk row fetching, see <bpt id=\"p1\">[</bpt>Recordset: Fetching Records in Bulk (ODBC)<ept id=\"p1\">](../../data/odbc/recordset-fetching-records-in-bulk-odbc.md)</ept>.","pos":[110,255],"source":" If you are using bulk row fetching, see [Recordset: Fetching Records in Bulk (ODBC)](../../data/odbc/recordset-fetching-records-in-bulk-odbc.md)."}]}]},{"content":"A new option for the <bpt id=\"p1\">**</bpt>dwOptions<ept id=\"p1\">**</ept> parameter to the <bpt id=\"p2\">[</bpt>CRecordset::Open<ept id=\"p2\">](../../mfc/reference/crecordset-class.md#crecordset__open)</ept> member function, <bpt id=\"p3\">**</bpt>optimizeBulkAdd<ept id=\"p3\">**</ept>, improves performance when you are adding multiple records consecutively without calling <bpt id=\"p4\">**</bpt>Requery<ept id=\"p4\">**</ept> or <bpt id=\"p5\">**</bpt>Close<ept id=\"p5\">**</ept>.","pos":[1222,1502],"source":"A new option for the **dwOptions** parameter to the [CRecordset::Open](../../mfc/reference/crecordset-class.md#crecordset__open) member function, **optimizeBulkAdd**, improves performance when you are adding multiple records consecutively without calling **Requery** or **Close**."},{"content":"Only those fields that are dirty before the first <bpt id=\"p1\">**</bpt>Update<ept id=\"p1\">**</ept> call are marked as dirty for subsequent <ph id=\"ph1\">`AddNew`/</ph><bpt id=\"p2\">**</bpt>Update<ept id=\"p2\">**</ept> calls.","pos":[1503,1630],"source":" Only those fields that are dirty before the first **Update** call are marked as dirty for subsequent `AddNew`/**Update** calls."},{"pos":[1637,1810],"content":"If you are using the database classes to take advantage of the <bpt id=\"p1\">**</bpt>::SQLSetPos<ept id=\"p1\">**</ept> ODBC API function for adding, editing, and deleting records, this optimization is unnecessary.","source":"If you are using the database classes to take advantage of the **::SQLSetPos** ODBC API function for adding, editing, and deleting records, this optimization is unnecessary."},{"content":"If the ODBC Cursor Library is loaded or the ODBC driver does not support adding, editing, and deleting through <bpt id=\"p1\">**</bpt>::SQLSetPos<ept id=\"p1\">**</ept>, this optimization should improve bulk add performance.","pos":[1817,1999],"source":"If the ODBC Cursor Library is loaded or the ODBC driver does not support adding, editing, and deleting through **::SQLSetPos**, this optimization should improve bulk add performance."},{"content":"To turn on this optimization, set the <bpt id=\"p1\">**</bpt>dwOptions<ept id=\"p1\">**</ept> parameter in the <bpt id=\"p2\">**</bpt>Open<ept id=\"p2\">**</ept> call for your recordset to the following:","pos":[2000,2119],"source":" To turn on this optimization, set the **dwOptions** parameter in the **Open** call for your recordset to the following:"},{"content":"See Also","pos":[2174,2182]},{"content":"Recordset (ODBC)","pos":[2187,2203]},{"content":"Recordset: Adding, Updating, and Deleting Records (ODBC)","pos":[2245,2301]},{"content":"Recordset: Locking Records (ODBC)","pos":[2380,2413]}],"content":"---\ntitle: \"Recordset: Adding Records in Bulk (ODBC) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ODBC recordsets, adding records\"\n  - \"recordsets, adding records\"\n  - \"bulk record additions to recordsets\"\nms.assetid: 4685f656-14b9-4f10-a1c5-147b2b89a0b4\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Recordset: Adding Records in Bulk (ODBC)\nThis topic applies to the MFC ODBC classes.  \n  \n The MFC [CRecordset](../../mfc/reference/crecordset-class.md) class has a new optimization that improves efficiency when you are adding new records in bulk to a table.  \n  \n> [!NOTE]\n>  This topic applies to objects derived from `CRecordset` in which bulk row fetching has not been implemented. If you are using bulk row fetching, see [Recordset: Fetching Records in Bulk (ODBC)](../../data/odbc/recordset-fetching-records-in-bulk-odbc.md).  \n  \n A new option for the **dwOptions** parameter to the [CRecordset::Open](../../mfc/reference/crecordset-class.md#crecordset__open) member function, **optimizeBulkAdd**, improves performance when you are adding multiple records consecutively without calling **Requery** or **Close**. Only those fields that are dirty before the first **Update** call are marked as dirty for subsequent `AddNew`/**Update** calls.  \n  \n If you are using the database classes to take advantage of the **::SQLSetPos** ODBC API function for adding, editing, and deleting records, this optimization is unnecessary.  \n  \n If the ODBC Cursor Library is loaded or the ODBC driver does not support adding, editing, and deleting through **::SQLSetPos**, this optimization should improve bulk add performance. To turn on this optimization, set the **dwOptions** parameter in the **Open** call for your recordset to the following:  \n  \n```  \nappendOnly | optimizeBulkAdd  \n```  \n  \n## See Also  \n [Recordset (ODBC)](../../data/odbc/recordset-odbc.md)   \n [Recordset: Adding, Updating, and Deleting Records (ODBC)](../../data/odbc/recordset-adding-updating-and-deleting-records-odbc.md)   \n [Recordset: Locking Records (ODBC)](../../data/odbc/recordset-locking-records-odbc.md)"}