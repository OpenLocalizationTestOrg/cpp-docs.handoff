{"nodes":[{"pos":[12,51],"content":"log1p, log1pf, log1pl2 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"log1p, log1pf, log1pl2 | Microsoft Docs","pos":[0,39]}]},{"content":"log1p, log1pf, log1pl","pos":[1041,1062]},{"content":"Computes the natural logarithm of 1 plus the specified value.","pos":[1063,1124]},{"content":"Syntax","pos":[1133,1139]},{"content":"Parameters","pos":[1395,1405]},{"content":"The floating-point argument.","pos":[1416,1444]},{"content":"Return Value","pos":[1453,1465]},{"pos":[1469,1528],"content":"If successful, returns the natural (base-e) log of (<ph id=\"ph1\">`x`</ph>+1).","source":"If successful, returns the natural (base-e) log of (`x`+1)."},{"content":"Otherwise, may return one of the following values:","pos":[1535,1585]},{"content":"Input","pos":[1592,1597]},{"content":"Result","pos":[1598,1604]},{"content":"SEH exception","pos":[1605,1618]},{"content":"errno","pos":[1619,1624]},{"content":"+inf","pos":[1690,1694]},{"content":"+inf","pos":[1695,1699]},{"content":"Denormals","pos":[1706,1715]},{"content":"Same as input","pos":[1716,1729]},{"content":"UNDERFLOW","pos":[1730,1739]},{"content":"±0","pos":[1745,1747]},{"content":"Same as input","pos":[1748,1761]},{"content":"-1","pos":[1768,1770]},{"content":"-inf","pos":[1771,1775]},{"content":"DIVBYZERO","pos":[1776,1785]},{"content":"ERANGE","pos":[1786,1792]},{"content":"&lt; -1","pos":[1797,1801],"source":"< -1"},{"content":"nan","pos":[1802,1805]},{"content":"INVALID","pos":[1806,1813]},{"content":"EDOM","pos":[1814,1818]},{"content":"-inf","pos":[1823,1827]},{"content":"nan","pos":[1828,1831]},{"content":"INVALID","pos":[1832,1839]},{"content":"EDOM","pos":[1840,1844]},{"content":"±SNaN","pos":[1849,1854]},{"content":"Same as input","pos":[1855,1868]},{"content":"INVALID","pos":[1869,1876]},{"content":"±QNaN, indefinite","pos":[1882,1899]},{"content":"Same as input","pos":[1900,1913]},{"content":"The <ph id=\"ph1\">`errno`</ph> value is set to ERANGE if <ph id=\"ph2\">`x`</ph> = -1.","pos":[1923,1970],"source":"The `errno` value is set to ERANGE if `x` = -1."},{"content":"The <ph id=\"ph1\">`errno`</ph> value is set to EDOM if <ph id=\"ph2\">`x`</ph> &lt; −1.","pos":[1971,2016],"source":" The `errno` value is set to EDOM if `x` < −1."},{"content":"Remarks","pos":[2025,2032]},{"pos":[2036,2118],"content":"The <ph id=\"ph1\">`log1p`</ph> functions may be more accurate than using log(<ph id=\"ph2\">`x`</ph>+1) when x is near 0.","source":"The `log1p` functions may be more accurate than using log(`x`+1) when x is near 0."},{"content":"Because C++ allows overloading, you can call overloads of <ph id=\"ph1\">`log1p`</ph> that take and return float and long double types.","pos":[2125,2240],"source":"Because C++ allows overloading, you can call overloads of `log1p` that take and return float and long double types."},{"content":"In a C program, <ph id=\"ph1\">`log1p`</ph> always takes and returns a double.","pos":[2241,2299],"source":" In a C program, `log1p` always takes and returns a double."},{"pos":[2306,2398],"content":"If <ph id=\"ph1\">`x`</ph> is a natural number, this function returns the logarithm of the factorial of (<ph id=\"ph2\">`x`</ph>-1).","source":"If `x` is a natural number, this function returns the logarithm of the factorial of (`x`-1)."},{"content":"Requirements","pos":[2407,2419]},{"content":"Function","pos":[2426,2434]},{"content":"C header","pos":[2435,2443]},{"content":"C++ header","pos":[2444,2454]},{"pos":[2519,2545],"content":",                <ph id=\"ph1\">`log1pf`</ph>,","source":",                `log1pf`,  "},{"content":"math.h&gt;","pos":[2558,2565],"source":"math.h>"},{"content":"cmath&gt;","pos":[2568,2574],"source":"cmath>"},{"pos":[2582,2686],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":"See Also","pos":[2695,2703]},{"content":"Alphabetical Function Reference","pos":[2708,2739]},{"content":"log2, log2f, log2l","pos":[2820,2838]},{"content":"log, logf, log10, log10f","pos":[2900,2924]}],"content":"---\ntitle: \"log1p, log1pf, log1pl2 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"cpp\"\n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"log1p\"\n  - \"log1pf\"\n  - \"log1pl\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-math-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"log1p\"\n  - \"log1pf\"\n  - \"log1pl\"\n  - \"math/log1p\"\n  - \"math/log1pf\"\n  - \"math/log1pl\"\nhelpviewer_keywords: \n  - \"log1p function\"\n  - \"log1pf function\"\n  - \"log1pl function\"\nms.assetid: a40d965d-b4f6-42f4-ba27-2395546f7c12\ncaps.latest.revision: 7\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# log1p, log1pf, log1pl\nComputes the natural logarithm of 1 plus the specified value.  \n  \n## Syntax  \n  \n```  \ndouble log1p(  \n   double x  \n);  \n  \nfloat log1p(  \n   float x  \n); //C++ only  \n  \nlong double log1p(  \n   long double x  \n); //C++ only  \n  \nfloat log1pf(  \n   float x  \n);  \n  \nlong double log1pl(  \n   long double x  \n);  \n  \n```  \n  \n#### Parameters  \n `x`  \n The floating-point argument.  \n  \n## Return Value  \n If successful, returns the natural (base-e) log of (`x`+1).  \n  \n Otherwise, may return one of the following values:  \n  \n|Input|Result|SEH exception|errno|  \n|-----------|------------|-------------------|-----------|  \n|+inf|+inf|||  \n|Denormals|Same as input|UNDERFLOW||  \n|±0|Same as input|||  \n|-1|-inf|DIVBYZERO|ERANGE|  \n|< -1|nan|INVALID|EDOM|  \n|-inf|nan|INVALID|EDOM|  \n|±SNaN|Same as input|INVALID||  \n|±QNaN, indefinite|Same as input|||  \n  \n The `errno` value is set to ERANGE if `x` = -1. The `errno` value is set to EDOM if `x` < −1.  \n  \n## Remarks  \n The `log1p` functions may be more accurate than using log(`x`+1) when x is near 0.  \n  \n Because C++ allows overloading, you can call overloads of `log1p` that take and return float and long double types. In a C program, `log1p` always takes and returns a double.  \n  \n If `x` is a natural number, this function returns the logarithm of the factorial of (`x`-1).  \n  \n## Requirements  \n  \n|Function|C header|C++ header|  \n|--------------|--------------|------------------|  \n|`log1p`,                `log1pf`,  `log1pl`|\\<math.h>|\\<cmath>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## See Also  \n [Alphabetical Function Reference](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)   \n [log2, log2f, log2l](../../c-runtime-library/reference/log2-log2f-log2l.md)   \n [log, logf, log10, log10f](../../c-runtime-library/reference/log-logf-log10-log10f.md)"}