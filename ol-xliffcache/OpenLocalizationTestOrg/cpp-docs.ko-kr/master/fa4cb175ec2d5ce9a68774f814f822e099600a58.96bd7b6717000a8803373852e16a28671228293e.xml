{"nodes":[{"pos":[12,48],"content":"is_assignable Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"is_assignable Class | Microsoft Docs","pos":[0,36]}]},{"pos":[691,710],"content":"is_assignable Class","linkify":"is_assignable Class","nodes":[{"content":"is_assignable Class","pos":[0,19]}]},{"pos":[711,779],"content":"Tests whether a value of <ph id=\"ph1\">`From`</ph> type can be assigned to a <ph id=\"ph2\">`To`</ph> type.","source":"Tests whether a value of `From` type can be assigned to a `To` type."},{"pos":[788,794],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[874,884],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"To","pos":[888,890]},{"content":"The type of the object that receives the assignment.","pos":[894,946]},{"content":"From","pos":[953,957]},{"content":"The type of the object that provides the value.","pos":[961,1008]},{"pos":[1017,1024],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The unevaluated expression <ph id=\"ph1\">`declval&lt;To&gt;() = declval&lt;From&gt;()`</ph> must be well-formed.","pos":[1028,1109],"source":"The unevaluated expression `declval<To>() = declval<From>()` must be well-formed."},{"content":"Both <ph id=\"ph1\">`From`</ph> and <ph id=\"ph2\">`To`</ph> must be complete types, <ph id=\"ph3\">`void`</ph>, or arrays of unknown bound.","pos":[1110,1190],"source":" Both `From` and `To` must be complete types, `void`, or arrays of unknown bound."},{"pos":[1199,1211],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1215,1240],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> &lt;type_traits&gt;","source":"**Header:** <type_traits>"},{"pos":[1247,1265],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"pos":[1274,1282],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1286,1337],"content":"<bpt id=\"p1\">[</bpt>&lt;type_traits&gt;<ept id=\"p1\">](../standard-library/type-traits.md)</ept>","source":"[<type_traits>](../standard-library/type-traits.md)"}],"content":"---\ntitle: \"is_assignable Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"is_assignable\"\n  - \"std.is_assignable\"\n  - \"std::is_assignable\"\n  - \"type_traits/std::is_assignable\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"is_assignable\"\nms.assetid: 53444287-c8be-4ad2-9487-a85c066a4f84\ncaps.latest.revision: 14\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# is_assignable Class\nTests whether a value of `From` type can be assigned to a `To` type.  \n  \n## Syntax  \n  \n```\ntemplate <class To, class From>  \nstruct is_assignable;\n```  \n  \n#### Parameters  \n To  \n The type of the object that receives the assignment.  \n  \n From  \n The type of the object that provides the value.  \n  \n## Remarks  \n The unevaluated expression `declval<To>() = declval<From>()` must be well-formed. Both `From` and `To` must be complete types, `void`, or arrays of unknown bound.  \n  \n## Requirements  \n **Header:** <type_traits>  \n  \n **Namespace:** std  \n  \n## See Also  \n [<type_traits>](../standard-library/type-traits.md)\n\n\n\n"}