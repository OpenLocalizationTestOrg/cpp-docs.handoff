{"nodes":[{"pos":[12,85],"content":"Callback Function (Windows Runtime C++ Template Library) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Callback Function (Windows Runtime C++ Template Library) | Microsoft Docs","pos":[0,73]}]},{"content":"Callback Function (Windows Runtime C++ Template Library)","pos":[644,700]},{"content":"Creates an object whose member function is a callback method.","pos":[701,762]},{"content":"Syntax","pos":[771,777]},{"content":"Parameters","pos":[4436,4446]},{"content":"A template parameter that specifies the interface of the delegate to call when an event occurs.","pos":[4474,4569]},{"content":"A template parameter that specifies the type of an object that represents an object and its callback member function.","pos":[4591,4708]},{"content":"A template parameter that specifies the object whose member function is the method to call when an event occurs.","pos":[4736,4848]},{"content":"A template parameter that specifies the type of the first callback method argument.","pos":[4866,4949]},{"content":"A template parameter that specifies the type of the second callback method argument.","pos":[4967,5051]},{"content":"A template parameter that specifies the type of the third callback method argument.","pos":[5069,5152]},{"content":"A template parameter that specifies the type of the fourth callback method argument.","pos":[5170,5254]},{"content":"A template parameter that specifies the type of the fifth callback method argument.","pos":[5272,5355]},{"content":"A template parameter that specifies the type of the sixth callback method argument.","pos":[5373,5456]},{"content":"A template parameter that specifies the type of the seventh callback method argument.","pos":[5474,5559]},{"content":"A template parameter that specifies the type of the eigth callback method argument.","pos":[5577,5660]},{"content":"A template parameter that specifies the type of the ninth callback method argument.","pos":[5678,5761]},{"content":"An object that represents the callback object and its member function.","pos":[5782,5852]},{"content":"The object whose member function is called when an event occurs.","pos":[5871,5935]},{"content":"The member function to call when an event occurs.","pos":[5954,6003]},{"content":"Return Value","pos":[6012,6024]},{"content":"An object whose member function is the specified callback method.","pos":[6028,6093]},{"content":"Remarks","pos":[6102,6109]},{"content":"The base of a delegate object must be IUnknown, not IInspectable.","pos":[6113,6178]},{"content":"Requirements","pos":[6187,6199]},{"pos":[6203,6222],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> event.h","source":"**Header:** event.h"},{"pos":[6229,6258],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> Microsoft::WRL","source":"**Namespace:** Microsoft::WRL"},{"content":"See Also","pos":[6267,6275]},{"content":"Microsoft::WRL Namespace","pos":[6280,6304]}],"content":"---\ntitle: \"Callback Function (Windows Runtime C++ Template Library) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"event/Microsoft::WRL::Callback\"\ndev_langs: \n  - \"C++\"\nms.assetid: afb15d25-3230-44f7-b321-e17c54872943\ncaps.latest.revision: 4\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Callback Function (Windows Runtime C++ Template Library)\nCreates an object whose member function is a callback method.  \n  \n## Syntax  \n  \n```  \ntemplate<  \n   typename TDelegateInterface,  \n   typename TCallback  \n>  \nComPtr<TDelegateInterface> Callback(  \n   TCallbackcallback  \n);  \ntemplate<  \n   typename TDelegateInterface,  \n   typename TCallbackObject  \n>  \nComPtr<TDelegateInterface> Callback(  \n   _In_ TCallbackObject *object,  \n   _In_ HRESULT (TCallbackObject::* method)()  \n);  \ntemplate<  \n   typename TDelegateInterface,  \n   typename TCallbackObject,  \n   typename TArg1  \n>  \nComPtr<TDelegateInterface> Callback(  \n   _In_ TCallbackObject *object,  \n   _In_ HRESULT (TCallbackObject::* method)(TArg1)  \n);  \ntemplate<  \n   typename TDelegateInterface,  \n   typename TCallbackObject,  \n   typename TArg1,  \n   typename TArg2  \n>  \nComPtr<TDelegateInterface> Callback(  \n   _In_ TCallbackObject *object,  \n   _In_ HRESULT (TCallbackObject::* method)(TArg1,  \n   TArg2)  \n);  \ntemplate<  \n   typename TDelegateInterface,  \n   typename TCallbackObject,  \n   typename TArg1,  \n   typename TArg2,  \n   typename TArg3  \n>  \nComPtr<TDelegateInterface> Callback(  \n   _In_ TCallbackObject *object,  \n   _In_ HRESULT (TCallbackObject::* method)(TArg1,  \n   TArg2,  \n   TArg3)  \n);  \ntemplate<  \n   typename TDelegateInterface,  \n   typename TCallbackObject,  \n   typename TArg1,  \n   typename TArg2,  \n   typename TArg3,  \n   typename TArg4  \n>  \nComPtr<TDelegateInterface> Callback(  \n   _In_ TCallbackObject *object,  \n   _In_ HRESULT (TCallbackObject::* method)(TArg1,  \n   TArg2,  \n   TArg3,  \n   TArg4)  \n);  \ntemplate<  \n   typename TDelegateInterface,  \n   typename TCallbackObject,  \n   typename TArg1,  \n   typename TArg2,  \n   typename TArg3,  \n   typename TArg4,  \n   typename TArg5  \n>  \nComPtr<TDelegateInterface> Callback(  \n   _In_ TCallbackObject *object,  \n   _In_ HRESULT (TCallbackObject::* method)(TArg1,  \n   TArg2,  \n   TArg3,  \n   TArg4,  \n   TArg5)  \n);  \ntemplate<  \n   typename TDelegateInterface,  \n   typename TCallbackObject,  \n   typename TArg1,  \n   typename TArg2,  \n   typename TArg3,  \n   typename TArg4,  \n   typename TArg5,  \n   typename TArg6  \n>  \nComPtr<TDelegateInterface> Callback(  \n   _In_ TCallbackObject *object,  \n   _In_ HRESULT (TCallbackObject::* method)(TArg1,  \n   TArg2,  \n   TArg3,  \n   TArg4,  \n   TArg5,  \n   TArg6)  \n);  \ntemplate<  \n   typename TDelegateInterface,  \n   typename TCallbackObject,  \n   typename TArg1,  \n   typename TArg2,  \n   typename TArg3,  \n   typename TArg4,  \n   typename TArg5,  \n   typename TArg6,  \n   typename TArg7  \n>  \nComPtr<TDelegateInterface> Callback(  \n   _In_ TCallbackObject *object,  \n   _In_ HRESULT (TCallbackObject::* method)(TArg1,  \n   TArg2,  \n   TArg3,  \n   TArg4,  \n   TArg5,  \n   TArg6,  \n   TArg7)  \n);  \ntemplate<  \n   typename TDelegateInterface,  \n   typename TCallbackObject,  \n   typename TArg1,  \n   typename TArg2,  \n   typename TArg3,  \n   typename TArg4,  \n   typename TArg5,  \n   typename TArg6,  \n   typename TArg7,  \n   typename TArg8  \n>  \nComPtr<TDelegateInterface> Callback(  \n   _In_ TCallbackObject *object,  \n   _In_ HRESULT (TCallbackObject::* method)(TArg1,  \n   TArg2,  \n   TArg3,  \n   TArg4,  \n   TArg5,  \n   TArg6,  \n   TArg7,  \n   TArg8)  \n);  \ntemplate<  \n   typename TDelegateInterface,  \n   typename TCallbackObject,  \n   typename TArg1,  \n   typename TArg2,  \n   typename TArg3,  \n   typename TArg4,  \n   typename TArg5,  \n   typename TArg6,  \n   typename TArg7,  \n   typename TArg8,  \n   typename TArg9  \n>  \nComPtr<TDelegateInterface> Callback(  \n   _In_ TCallbackObject *object,  \n   _In_ HRESULT (TCallbackObject::* method)(TArg1,  \n   TArg2,  \n   TArg3,  \n   TArg4,  \n   TArg5,  \n   TArg6,  \n   TArg7,  \n   TArg8,  \n   TArg9)  \n);  \n```  \n  \n#### Parameters  \n `TDelegateInterface`  \n A template parameter that specifies the interface of the delegate to call when an event occurs.  \n  \n `TCallback`  \n A template parameter that specifies the type of an object that represents an object and its callback member function.  \n  \n `TCallbackObject`  \n A template parameter that specifies the object whose member function is the method to call when an event occurs.  \n  \n `TArg1`  \n A template parameter that specifies the type of the first callback method argument.  \n  \n `TArg2`  \n A template parameter that specifies the type of the second callback method argument.  \n  \n `TArg3`  \n A template parameter that specifies the type of the third callback method argument.  \n  \n `TArg4`  \n A template parameter that specifies the type of the fourth callback method argument.  \n  \n `TArg5`  \n A template parameter that specifies the type of the fifth callback method argument.  \n  \n `TArg6`  \n A template parameter that specifies the type of the sixth callback method argument.  \n  \n `TArg7`  \n A template parameter that specifies the type of the seventh callback method argument.  \n  \n `TArg8`  \n A template parameter that specifies the type of the eigth callback method argument.  \n  \n `TArg9`  \n A template parameter that specifies the type of the ninth callback method argument.  \n  \n `callback`  \n An object that represents the callback object and its member function.  \n  \n `object`  \n The object whose member function is called when an event occurs.  \n  \n `method`  \n The member function to call when an event occurs.  \n  \n## Return Value  \n An object whose member function is the specified callback method.  \n  \n## Remarks  \n The base of a delegate object must be IUnknown, not IInspectable.  \n  \n## Requirements  \n **Header:** event.h  \n  \n **Namespace:** Microsoft::WRL  \n  \n## See Also  \n [Microsoft::WRL Namespace](../windows/microsoft-wrl-namespace.md)"}