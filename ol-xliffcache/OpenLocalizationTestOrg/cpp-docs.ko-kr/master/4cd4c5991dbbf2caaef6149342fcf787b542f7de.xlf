<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4cd4c5991dbbf2caaef6149342fcf787b542f7de</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\cwinformscontrol-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9a5d580b69275fddbb83a400101b7f2f2ac0dddc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5dd82d233919a4b43a07f9e7830b7695e86e3aad</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CWinFormsControl Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CWinFormsControl Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Provides the basic functionality for hosting of a Windows Forms control.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A .NET Framework Windows Forms control to be displayed in the MFC application.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>CWinFormsControl::CWinFormsControl</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Constructs an MFC Windows Forms control wrapper object.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>CWinFormsControl::CreateManagedControl</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Creates a Windows Forms control in an MFC container.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>CWinFormsControl::GetControl</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the Windows Forms control.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>CWinFormsControl::GetControlHandle</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Retrieves a handle to the Windows Forms control.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Public Operators</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>CWinFormsControl::operator -</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Replaces <bpt id="p1">[</bpt>CWinFormsControl::GetControl<ept id="p1">](#cwinformscontrol__getcontrol)</ept> in expressions.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>CWinFormsControl::operator TManagedControl^</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Casts a type as a pointer to a Windows Forms control.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CWinFormsControl`</ph> class provides the basic functionality for hosting of a Windows Forms control.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information on using Windows Forms, see <bpt id="p1">[</bpt>Using a Windows Form User Control in MFC<ept id="p1">](../../dotnet/using-a-windows-form-user-control-in-mfc.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Your MFC code should not cache Window handles (usually stored in <ph id="ph1">`m_hWnd`</ph>).</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Some Windows Forms control properties require that the underlying Win32 <ph id="ph1">`Window`</ph> be destroyed and recreated using <ph id="ph2">`DestroyWindow`</ph> and <ph id="ph3">`CreateWindow`</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The MFC Windows Forms implementation handles the <ph id="ph1">`Destroy`</ph> and <ph id="ph2">`Create`</ph> events of the controls to update the <ph id="ph3">`m_hWnd`</ph> member.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>MFC Windows Forms integration works only in projects which link dynamically with MFC (in which AFXDLL is defined).</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxwinforms.h</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>CWinFormsControl::CreateManagedControl</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Creates a Windows Forms control in an MFC container.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The data type of the control to be created.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Must be a <bpt id="p1">[</bpt>Type<ept id="p1">](https://msdn.microsoft.com/en-us/library/system.type)</ept> data type.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The window style to apply to the control.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Specify a combination of <bpt id="p1">[</bpt>Window Styles<ept id="p1">](../../mfc/reference/window-styles.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Currently, only the following styles are supported: WS_TABSTOP, WS_VISIBLE, WS_DISABLED and WS_GROUP.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>RECT Structure<ept id="p1">](../../mfc/reference/rect-structure1.md)</ept> that defines the coordinates of the upper-left and lower-right corners of the control (first overload only).</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The handle of the static place holder control placed in the Resource Editor.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The newly created Windows Forms control replaces the static control, assuming its position, z-order, and styles (second overload only).</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A pointer to the parent window.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The resource ID number to be assigned to the newly created control.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>An instance of a Windows Forms control to be associated with the <bpt id="p1">[</bpt>CWinFormsControl<ept id="p1">](../../mfc/reference/cwinformscontrol-class.md)</ept> object (fourth overload only).</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If successful, returns a nonzero value.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If unsuccessful, returns zero.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This method instantiates a .NET Framework Windows Forms control in an MFC container.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The first overload of the method accepts a .NET Framework data type <ph id="ph1">`pType`</ph> so that MFC can instantiate a new object of this type.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>must be a <bpt id="p1">[</bpt>Type<ept id="p1">](https://msdn.microsoft.com/en-us/library/system.type)</ept> data type.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The second overload of the method creates a Windows Forms control based on the <ph id="ph1">`TManagedControl`</ph> template parameter of the <ph id="ph2">`CWinFormsControl`</ph> class.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The size and position of the control is based on the <ph id="ph1">`RECT`</ph> structure passed to the method.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Only <ph id="ph1">`dwStyle`</ph> matters for the styles.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The third overload of the method creates a Windows Forms control that replaces a static control, destroying it and assuming its position, z-order, and styles.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The static control serves only as a placeholder for the Windows Forms control.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>When creating the control, this overload combines the styles from <ph id="ph1">`dwStyle`</ph> with the static control's resource styles.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The fourth overload of the method allows you to pass in an already instantiated Windows Forms control <ph id="ph1">`pControl`</ph> that MFC will wrap.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>It must be of the same type as the <ph id="ph1">`TManagedControl`</ph> template parameter of the <ph id="ph2">`CWinFormsControl`</ph> class.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Using a Windows Form User Control in MFC<ept id="p1">](../../dotnet/using-a-windows-form-user-control-in-mfc.md)</ept> for samples on using Windows Form controls.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>CWinFormsControl::CWinFormsControl</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Constructs an MFC Windows Forms control wrapper object.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The Windows Forms control is instantiated when you call <bpt id="p1">[</bpt>CWinFormsControl::CreateManagedControl<ept id="p1">](#cwinformscontrol__createmanagedcontrol)</ept>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>CWinFormsControl::GetControl</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the Windows Forms control.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the Windows Forms control.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CWinFormsControl::CreateManagedControl<ept id="p1">](#cwinformscontrol__createmanagedcontrol)</ept>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>CWinFormsControl::GetControlHandle</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Retrieves a handle to the Windows Forms control.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Returns a handle to the Windows Forms control.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>is a helper method that returns the window handle stored in the .NET Framework control properties.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The window handle value is copied to <bpt id="p1">[</bpt>CWnd::m_hWnd<ept id="p1">](../../mfc/reference/cwnd-class.md#cwnd__m_hwnd)</ept> during the call to <bpt id="p2">[</bpt>CWnd::Attach<ept id="p2">](../../mfc/reference/cwnd-class.md#cwnd__attach)</ept>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>CWinFormsControl::operator -</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Replaces <bpt id="p1">[</bpt>CWinFormsControl::GetControl<ept id="p1">](#cwinformscontrol__getcontrol)</ept> in expressions.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>This operator provides a convenient syntax that replaces <ph id="ph1">`GetControl`</ph> in expressions.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>For more information on Windows Forms, see <bpt id="p1">[</bpt>Using a Windows Form User Control in MFC<ept id="p1">](../../dotnet/using-a-windows-form-user-control-in-mfc.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>CWinFormsControl::operator TManagedControl^</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Casts a type as a pointer to a Windows Forms control.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This operator passes <ph id="ph1">`CWinFormsControl&lt;``TManagedControl``&gt;`</ph> to functions that accept a pointer to a Windows Forms control.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>CWinFormsDialog Class</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>CWinFormsView Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>