{"nodes":[{"pos":[12,43],"content":"CPtrList Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CPtrList Class | Microsoft Docs","pos":[0,31]}]},{"pos":[639,653],"content":"CPtrList Class","linkify":"CPtrList Class","nodes":[{"content":"CPtrList Class","pos":[0,14]}]},{"content":"Supports lists of void pointers.","pos":[654,686]},{"pos":[695,701],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[759,766],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"content":"The member functions of <ph id=\"ph1\">`CPtrList`</ph> are similar to the member functions of class <bpt id=\"p1\">[</bpt>CObList<ept id=\"p1\">](../../mfc/reference/coblist-class.md)</ept>.","pos":[770,898],"source":"The member functions of `CPtrList` are similar to the member functions of class [CObList](../../mfc/reference/coblist-class.md)."},{"content":"Because of this similarity, you can use the <ph id=\"ph1\">`CObList`</ph> reference documentation for member function specifics.","pos":[899,1007],"source":" Because of this similarity, you can use the `CObList` reference documentation for member function specifics."},{"content":"Wherever you see a <ph id=\"ph1\">`CObject`</ph> pointer as a function parameter or return value, substitute a pointer to <ph id=\"ph2\">`void`</ph>.","pos":[1008,1117],"source":" Wherever you see a `CObject` pointer as a function parameter or return value, substitute a pointer to `void`."},{"content":"for example, translates to","pos":[1168,1194]},{"pos":[1245,1252],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"<ph id=\"ph1\">`CPtrList`</ph> incorporates the <ph id=\"ph2\">`IMPLEMENT_DYNAMIC`</ph> macro to support run-time type access and dumping to a <ph id=\"ph3\">`CDumpContext`</ph> object.","pos":[1256,1381],"source":"`CPtrList` incorporates the `IMPLEMENT_DYNAMIC` macro to support run-time type access and dumping to a `CDumpContext` object."},{"content":"If you need a dump of individual pointer list elements, you must set the depth of the dump context to 1 or greater.","pos":[1382,1497]},{"content":"Pointer lists cannot be serialized.","pos":[1504,1539]},{"pos":[1546,1680],"content":"When a <ph id=\"ph1\">`CPtrList`</ph> object is deleted, or when its elements are removed, only the pointers are removed, not the entities they reference.","source":"When a `CPtrList` object is deleted, or when its elements are removed, only the pointers are removed, not the entities they reference."},{"pos":[1687,1785],"content":"For more information on using <ph id=\"ph1\">`CPtrList`</ph>, see the article <bpt id=\"p1\">[</bpt>Collections<ept id=\"p1\">](../../mfc/collections.md)</ept>.","source":"For more information on using `CPtrList`, see the article [Collections](../../mfc/collections.md)."},{"pos":[1794,1815],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[1819,1866],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[1892,1904],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1908,1929],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxcoll.h","source":"**Header:** afxcoll.h"},{"pos":[1938,1946],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>CObject Class<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[1950,2004],"source":"[CObject Class](../../mfc/reference/cobject-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[2007,2056],"source":" [Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CObList Class<ept id=\"p1\">](../../mfc/reference/coblist-class.md)</ept>","pos":[2059,2113],"source":" [CObList Class](../../mfc/reference/coblist-class.md)"}],"content":"---\ntitle: \"CPtrList Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CPtrList\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"lists, generic\"\n  - \"CPtrList class\"\n  - \"generic lists\"\nms.assetid: 4139a09c-4338-4f42-9eea-51336120b43c\ncaps.latest.revision: 23\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CPtrList Class\nSupports lists of void pointers.  \n  \n## Syntax  \n  \n```  \nclass CPtrList : public CObject  \n```  \n  \n## Members  \n The member functions of `CPtrList` are similar to the member functions of class [CObList](../../mfc/reference/coblist-class.md). Because of this similarity, you can use the `CObList` reference documentation for member function specifics. Wherever you see a `CObject` pointer as a function parameter or return value, substitute a pointer to `void`.  \n  \n `CObject*& CObList::GetHead() const;`  \n  \n for example, translates to  \n  \n `void*& CPtrList::GetHead() const;`  \n  \n## Remarks  \n `CPtrList` incorporates the `IMPLEMENT_DYNAMIC` macro to support run-time type access and dumping to a `CDumpContext` object. If you need a dump of individual pointer list elements, you must set the depth of the dump context to 1 or greater.  \n  \n Pointer lists cannot be serialized.  \n  \n When a `CPtrList` object is deleted, or when its elements are removed, only the pointers are removed, not the entities they reference.  \n  \n For more information on using `CPtrList`, see the article [Collections](../../mfc/collections.md).  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n `CPtrList`  \n  \n## Requirements  \n **Header:** afxcoll.h  \n  \n## See Also  \n [CObject Class](../../mfc/reference/cobject-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [CObList Class](../../mfc/reference/coblist-class.md)\n"}