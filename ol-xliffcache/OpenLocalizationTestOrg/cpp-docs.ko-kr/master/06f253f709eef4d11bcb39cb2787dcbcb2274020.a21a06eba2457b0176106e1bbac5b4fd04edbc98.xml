{"nodes":[{"pos":[12,37],"content":"db_param | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"db_param | Microsoft Docs","pos":[0,25]}]},{"content":"db_param","pos":[613,621]},{"content":"Associates the specified member variable with an input or output parameter and delimits the variable.","pos":[622,723]},{"content":"Syntax","pos":[732,738]},{"content":"Parameters","pos":[914,924]},{"content":"The column number (<bpt id=\"p1\">**</bpt>DBCOLUMNINFO<ept id=\"p1\">**</ept> ordinal) corresponding to a field in the rowset to which to bind data.","pos":[941,1047],"source":" The column number (**DBCOLUMNINFO** ordinal) corresponding to a field in the rowset to which to bind data."},{"content":"<bpt id=\"p1\">*</bpt>paramtype<ept id=\"p1\">*</ept> (optional)","pos":[1054,1076],"source":"*paramtype* (optional)"},{"content":"The type to set for the parameter.","pos":[1080,1114]},{"content":"Providers support only parameter I/O types that are supported by the underlying data source.","pos":[1115,1207]},{"content":"The type is a combination of one or more <bpt id=\"p1\">**</bpt>DBPARAMIOENUM<ept id=\"p1\">**</ept> values:","pos":[1208,1274],"source":" The type is a combination of one or more **DBPARAMIOENUM** values:"},{"pos":[1284,1323],"content":"<bpt id=\"p1\">**</bpt>DBPARAMIO_INPUT<ept id=\"p1\">**</ept> An input parameter.","source":"**DBPARAMIO_INPUT** An input parameter."},{"pos":[1333,1374],"content":"<bpt id=\"p1\">**</bpt>DBPARAMIO_OUTPUT<ept id=\"p1\">**</ept> An output parameter.","source":"**DBPARAMIO_OUTPUT** An output parameter."},{"content":"<bpt id=\"p1\">**</bpt>DBPARAMIO_NOTPARAM<ept id=\"p1\">**</ept> The accessor has no parameters.","pos":[1384,1438],"source":"**DBPARAMIO_NOTPARAM** The accessor has no parameters."},{"content":"Setting <bpt id=\"p1\">**</bpt>eParamIO<ept id=\"p1\">**</ept> to this value in row accessors reminds the user that parameters are ignored.","pos":[1439,1536],"source":" Setting **eParamIO** to this value in row accessors reminds the user that parameters are ignored."},{"pos":[1543,1670],"content":"*dbtype* (optional)  \nAn OLE DB [Type Indicator](https://msdn.microsoft.com/en-us/library/ms711251.aspx) for the column entry.","leadings":[""," "],"nodes":[{"content":"<bpt id=\"p1\">*</bpt>dbtype<ept id=\"p1\">*</ept> (optional)","pos":[0,19],"source":"*dbtype* (optional)"},{"content":"An OLE DB <bpt id=\"p1\">[</bpt>Type Indicator<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/ms711251.aspx)</ept> for the column entry.","pos":[22,126],"source":"An OLE DB [Type Indicator](https://msdn.microsoft.com/en-us/library/ms711251.aspx) for the column entry."}]},{"pos":[1677,1893],"content":"*precision* (optional)  \nThe precision to be used for the column entry. For details, see the description of **bPrecision** element of the [DBBINDING structure](https://msdn.microsoft.com/en-us/library/ms716845.aspx)","leadings":[""," "],"nodes":[{"content":"<bpt id=\"p1\">*</bpt>precision<ept id=\"p1\">*</ept> (optional)","pos":[0,22],"source":"*precision* (optional)"},{"content":"The precision to be used for the column entry. For details, see the description of **bPrecision** element of the [DBBINDING structure](https://msdn.microsoft.com/en-us/library/ms716845.aspx)","pos":[25,215],"nodes":[{"content":"The precision to be used for the column entry.","pos":[0,46]},{"content":"For details, see the description of <bpt id=\"p1\">**</bpt>bPrecision<ept id=\"p1\">**</ept> element of the <bpt id=\"p2\">[</bpt>DBBINDING structure<ept id=\"p2\">](https://msdn.microsoft.com/en-us/library/ms716845.aspx)</ept>","pos":[47,190],"source":" For details, see the description of **bPrecision** element of the [DBBINDING structure](https://msdn.microsoft.com/en-us/library/ms716845.aspx)"}]}]},{"pos":[1900,2104],"content":"*scale* (optional)  \nThe scale to be used for the column entry. For details, see the description of **bScale** element of the [DBBINDING structure](https://msdn.microsoft.com/en-us/library/ms716845.aspx)","leadings":[""," "],"nodes":[{"content":"<bpt id=\"p1\">*</bpt>scale<ept id=\"p1\">*</ept> (optional)","pos":[0,18],"source":"*scale* (optional)"},{"content":"The scale to be used for the column entry. For details, see the description of **bScale** element of the [DBBINDING structure](https://msdn.microsoft.com/en-us/library/ms716845.aspx)","pos":[21,203],"nodes":[{"content":"The scale to be used for the column entry.","pos":[0,42]},{"content":"For details, see the description of <bpt id=\"p1\">**</bpt>bScale<ept id=\"p1\">**</ept> element of the <bpt id=\"p2\">[</bpt>DBBINDING structure<ept id=\"p2\">](https://msdn.microsoft.com/en-us/library/ms716845.aspx)</ept>","pos":[43,182],"source":" For details, see the description of **bScale** element of the [DBBINDING structure](https://msdn.microsoft.com/en-us/library/ms716845.aspx)"}]}]},{"pos":[2111,2422],"content":"*status* (optional)  \nA member variable used to hold the status of this column. The status indicates whether the column value is a data value or some other value, such as **NULL**. For possible values, see [Status](https://msdn.microsoft.com/en-us/library/ms722617.aspx) in the *OLE DB Programmer's Reference*.","leadings":[""," "],"nodes":[{"content":"<bpt id=\"p1\">*</bpt>status<ept id=\"p1\">*</ept> (optional)","pos":[0,19],"source":"*status* (optional)"},{"content":"A member variable used to hold the status of this column. The status indicates whether the column value is a data value or some other value, such as **NULL**. For possible values, see [Status](https://msdn.microsoft.com/en-us/library/ms722617.aspx) in the *OLE DB Programmer's Reference*.","pos":[22,310],"nodes":[{"content":"A member variable used to hold the status of this column.","pos":[0,57]},{"content":"The status indicates whether the column value is a data value or some other value, such as <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[58,158],"source":" The status indicates whether the column value is a data value or some other value, such as **NULL**."},{"content":"For possible values, see <bpt id=\"p1\">[</bpt>Status<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/ms722617.aspx)</ept> in the <bpt id=\"p2\">*</bpt>OLE DB Programmer's Reference<ept id=\"p2\">*</ept>.","pos":[159,288],"source":" For possible values, see [Status](https://msdn.microsoft.com/en-us/library/ms722617.aspx) in the *OLE DB Programmer's Reference*."}]}]},{"pos":[2429,2515],"content":"*length* (optional)  \nA member variable used to hold the size of the column in bytes.","leadings":[""," "],"nodes":[{"content":"<bpt id=\"p1\">*</bpt>length<ept id=\"p1\">*</ept> (optional)","pos":[0,19],"source":"*length* (optional)"},{"content":"A member variable used to hold the size of the column in bytes.","pos":[22,85]}]},{"content":"Remarks","pos":[2524,2531]},{"content":"<bpt id=\"p1\">**</bpt>db_param<ept id=\"p1\">**</ept> defines parameters that you use in commands; therefore you use it with <bpt id=\"p2\">**</bpt>db_command<ept id=\"p2\">**</ept>.","pos":[2535,2634],"source":"**db_param** defines parameters that you use in commands; therefore you use it with **db_command**."},{"content":"For example, you can use <bpt id=\"p1\">**</bpt>db_param<ept id=\"p1\">**</ept> to bind parameters in SQL queries or stored procedures.","pos":[2635,2728],"source":" For example, you can use **db_param** to bind parameters in SQL queries or stored procedures."},{"content":"Parameters in a stored procedure are denoted by question marks (?), and you should bind the data members in the order in which the parameters appear.","pos":[2729,2878]},{"content":"<bpt id=\"p1\">**</bpt>db_param<ept id=\"p1\">**</ept> delimits member data that can participate in OLE DB <ph id=\"ph1\">`ICommandWithParameters`</ph>-based binding.","pos":[2885,2989],"source":"**db_param** delimits member data that can participate in OLE DB `ICommandWithParameters`-based binding."},{"content":"It sets the parameter type (input or output), OLE DB type, precision, scale, status, and length for the specified parameter.","pos":[2990,3114]},{"content":"This attribute inserts the OLE DB consumer macros BEGIN_PARAM_MAP ... END_PARAM_MAP.","pos":[3115,3199]},{"content":"Each member you mark with the <bpt id=\"p1\">**</bpt>db_param<ept id=\"p1\">**</ept> attribute will occupy one entry in the map in the form of a COLUMN_ENTRY.","pos":[3200,3316],"source":" Each member you mark with the **db_param** attribute will occupy one entry in the map in the form of a COLUMN_ENTRY."},{"pos":[3323,3463],"content":"<bpt id=\"p1\">**</bpt>db_param<ept id=\"p1\">**</ept> is used in conjunction with either the <bpt id=\"p2\">[</bpt>db_table<ept id=\"p2\">](../windows/db-table.md)</ept> or <bpt id=\"p3\">[</bpt>db_command<ept id=\"p3\">](../windows/db-command.md)</ept> attributes.","source":"**db_param** is used in conjunction with either the [db_table](../windows/db-table.md) or [db_command](../windows/db-command.md) attributes."},{"content":"When the consumer attribute provider applies this attribute to a class, the compiler will rename the class to _<bpt id=\"p1\">*</bpt>YourClassName<ept id=\"p1\">*</ept>Accessor, where <bpt id=\"p2\">*</bpt>YourClassName<ept id=\"p2\">*</ept> is the name you gave the class, and the compiler will also create a class called <bpt id=\"p3\">*</bpt>YourClassName,<ept id=\"p3\">*</ept> which derives from <ph id=\"ph1\">\\_</ph><bpt id=\"p4\">*</bpt>YourClassName<ept id=\"p4\">*</ept>Accessor.","pos":[3470,3771],"source":"When the consumer attribute provider applies this attribute to a class, the compiler will rename the class to _*YourClassName*Accessor, where *YourClassName* is the name you gave the class, and the compiler will also create a class called *YourClassName,* which derives from \\_*YourClassName*Accessor."},{"content":"In Class View, you will see both classes.","pos":[3773,3814]},{"content":"Example","pos":[3823,3830]},{"content":"The following example creates a command class based on the SalesbyYear stored procedure in the Northwind database.","pos":[3834,3948]},{"content":"It associates the first parameter in the stored procedure with the <ph id=\"ph1\">`m_RETURN_VALUE`</ph> variable, and defines it as an output parameter.","pos":[3949,4081],"source":" It associates the first parameter in the stored procedure with the `m_RETURN_VALUE` variable, and defines it as an output parameter."},{"content":"It associates the last two (input) parameters with <ph id=\"ph1\">`m_Beginning_Date`</ph> and <ph id=\"ph2\">`m_Ending_Date`</ph>.","pos":[4082,4172],"source":" It associates the last two (input) parameters with `m_Beginning_Date` and `m_Ending_Date`."},{"pos":[4179,4260],"content":"The following example associates the <ph id=\"ph1\">`nOutput`</ph> variable with an output parameter.","source":"The following example associates the `nOutput` variable with an output parameter."},{"content":"Requirements","pos":[5495,5507]},{"content":"Attribute Context","pos":[5517,5534]},{"content":"Applies to","pos":[5557,5567]},{"pos":[5570,5612],"content":"<bpt id=\"p1\">**</bpt>class<ept id=\"p1\">**</ept>, <ph id=\"ph1\">`struct`</ph>, member, method, local","source":"**class**, `struct`, member, method, local"},{"content":"Repeatable","pos":[5619,5629]},{"content":"No","pos":[5632,5634]},{"content":"Required attributes","pos":[5641,5660]},{"content":"None","pos":[5663,5667]},{"content":"Invalid attributes","pos":[5674,5692]},{"content":"None","pos":[5695,5699]},{"pos":[5707,5817],"content":"For more information about the attribute contexts, see <bpt id=\"p1\">[</bpt>Attribute Contexts<ept id=\"p1\">](../windows/attribute-contexts.md)</ept>.","source":"For more information about the attribute contexts, see [Attribute Contexts](../windows/attribute-contexts.md)."},{"content":"See Also","pos":[5826,5834]},{"content":"OLE DB Consumer Attributes","pos":[5839,5865]},{"content":"Attributes Samples","pos":[5914,5932]}],"content":"---\ntitle: \"db_param | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"vc-attr.db_param\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"db_param attribute\"\nms.assetid: a28315f5-4722-459e-92ef-32e83c0b205a\ncaps.latest.revision: 11\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# db_param\nAssociates the specified member variable with an input or output parameter and delimits the variable.  \n  \n## Syntax  \n  \n```  \n  \n      [ db_param(   \n   ordinal,   \n   paramtype=\"DBPARAMIO_INPUT\",   \n   dbtype,   \n   precision,   \n   scale,   \n   status,   \n   length  \n) ]  \n```  \n  \n#### Parameters  \n `ordinal`  \n The column number (**DBCOLUMNINFO** ordinal) corresponding to a field in the rowset to which to bind data.  \n  \n *paramtype* (optional)  \n The type to set for the parameter. Providers support only parameter I/O types that are supported by the underlying data source. The type is a combination of one or more **DBPARAMIOENUM** values:  \n  \n-   **DBPARAMIO_INPUT** An input parameter.  \n  \n-   **DBPARAMIO_OUTPUT** An output parameter.  \n  \n-   **DBPARAMIO_NOTPARAM** The accessor has no parameters. Setting **eParamIO** to this value in row accessors reminds the user that parameters are ignored.  \n  \n *dbtype* (optional)  \n An OLE DB [Type Indicator](https://msdn.microsoft.com/en-us/library/ms711251.aspx) for the column entry.  \n  \n *precision* (optional)  \n The precision to be used for the column entry. For details, see the description of **bPrecision** element of the [DBBINDING structure](https://msdn.microsoft.com/en-us/library/ms716845.aspx)  \n  \n *scale* (optional)  \n The scale to be used for the column entry. For details, see the description of **bScale** element of the [DBBINDING structure](https://msdn.microsoft.com/en-us/library/ms716845.aspx)  \n  \n *status* (optional)  \n A member variable used to hold the status of this column. The status indicates whether the column value is a data value or some other value, such as **NULL**. For possible values, see [Status](https://msdn.microsoft.com/en-us/library/ms722617.aspx) in the *OLE DB Programmer's Reference*.  \n  \n *length* (optional)  \n A member variable used to hold the size of the column in bytes.  \n  \n## Remarks  \n **db_param** defines parameters that you use in commands; therefore you use it with **db_command**. For example, you can use **db_param** to bind parameters in SQL queries or stored procedures. Parameters in a stored procedure are denoted by question marks (?), and you should bind the data members in the order in which the parameters appear.  \n  \n **db_param** delimits member data that can participate in OLE DB `ICommandWithParameters`-based binding. It sets the parameter type (input or output), OLE DB type, precision, scale, status, and length for the specified parameter. This attribute inserts the OLE DB consumer macros BEGIN_PARAM_MAP ... END_PARAM_MAP. Each member you mark with the **db_param** attribute will occupy one entry in the map in the form of a COLUMN_ENTRY.  \n  \n **db_param** is used in conjunction with either the [db_table](../windows/db-table.md) or [db_command](../windows/db-command.md) attributes.  \n  \n When the consumer attribute provider applies this attribute to a class, the compiler will rename the class to _*YourClassName*Accessor, where *YourClassName* is the name you gave the class, and the compiler will also create a class called *YourClassName,* which derives from \\_*YourClassName*Accessor.  In Class View, you will see both classes.  \n  \n## Example  \n The following example creates a command class based on the SalesbyYear stored procedure in the Northwind database. It associates the first parameter in the stored procedure with the `m_RETURN_VALUE` variable, and defines it as an output parameter. It associates the last two (input) parameters with `m_Beginning_Date` and `m_Ending_Date`.  \n  \n The following example associates the `nOutput` variable with an output parameter.  \n  \n```  \n// db_param.cpp  \n// compile with: /LD  \n#include <atlbase.h>  \n#include <atlplus.h>  \n#include <atldbcli.h>  \n  \n[ db_source(L\"my_connection_string\"),   \n  db_command(L\"{ ? = CALL dbo.\\\"Sales by Year\\\"(?,?) }\")   \n]  \nstruct CSalesbyYear {  \n   DBSTATUS m_dwShippedDateStatus;  \n   DBSTATUS m_dwOrderIDStatus;  \n   DBSTATUS m_dwSubtotalStatus;  \n   DBSTATUS m_dwYearStatus;  \n  \n   DBLENGTH m_dwShippedDateLength;  \n   DBLENGTH m_dwOrderIDLength;  \n   DBLENGTH m_dwSubtotalLength;  \n   DBLENGTH m_dwYearLength;  \n  \n   // Bind columns  \n   [ db_column(\"1\", status=\"m_dwShippedDateStatus\", length=\"m_dwShippedDateLength\") ] DBTIMESTAMP m_ShippedDate;  \n   [ db_column(\"2\", status=\"m_dwOrderIDStatus\", length=\"m_dwOrderIDLength\") ] LONG m_OrderID;  \n   [ db_column(\"3\", status=\"m_dwSubtotalStatus\", length=\"m_dwSubtotalLength\") ] CURRENCY m_Subtotal;  \n   [ db_column(\"4\", status=\"m_dwYearStatus\", length=\"m_dwYearLength\") ] TCHAR m_Year[31];  \n  \n   // Bind parameters  \n   [ db_param(\"1\", paramtype=\"DBPARAMIO_OUTPUT\") ] LONG m_RETURN_VALUE;  \n   [ db_param(\"2\", paramtype=\"DBPARAMIO_INPUT\") ] DBTIMESTAMP m_Beginning_Date;  \n   [ db_param(\"3\", paramtype=\"DBPARAMIO_INPUT\") ] DBTIMESTAMP m_Ending_Date;  \n};  \n```  \n  \n## Requirements  \n  \n### Attribute Context  \n  \n|||  \n|-|-|  \n|**Applies to**|**class**, `struct`, member, method, local|  \n|**Repeatable**|No|  \n|**Required attributes**|None|  \n|**Invalid attributes**|None|  \n  \n For more information about the attribute contexts, see [Attribute Contexts](../windows/attribute-contexts.md).  \n  \n## See Also  \n [OLE DB Consumer Attributes](../windows/ole-db-consumer-attributes.md)   \n [Attributes Samples](http://msdn.microsoft.com/en-us/558ebdb2-082f-44dc-b442-d8d33bf7bdb8)"}