{"nodes":[{"pos":[12,61],"content":"Compiler Warning (level 4) C4221 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Warning (level 4) C4221 | Microsoft Docs","pos":[0,49]}]},{"pos":[609,641],"content":"Compiler Warning (level 4) C4221","linkify":"Compiler Warning (level 4) C4221","nodes":[{"content":"Compiler Warning (level 4) C4221","pos":[0,32]}]},{"content":"nonstandard extension used : 'identifier' : cannot be initialized using address of automatic variable","pos":[642,743]},{"pos":[750,917],"content":"With the default Microsoft extensions (/Ze), you can initialize an aggregate type (<bpt id=\"p1\">**</bpt>array<ept id=\"p1\">**</ept>, <ph id=\"ph1\">`struct`</ph>, or <bpt id=\"p2\">**</bpt>union<ept id=\"p2\">**</ept>) with the address of a local (automatic) variable.","source":"With the default Microsoft extensions (/Ze), you can initialize an aggregate type (**array**, `struct`, or **union**) with the address of a local (automatic) variable."},{"pos":[926,933],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1123,1249],"content":"Such initializations are invalid under ANSI compatibility (<bpt id=\"p1\">[</bpt>/Za<ept id=\"p1\">](../../build/reference/za-ze-disable-language-extensions.md)</ept>).","source":"Such initializations are invalid under ANSI compatibility ([/Za](../../build/reference/za-ze-disable-language-extensions.md))."}],"content":"---\ntitle: \"Compiler Warning (level 4) C4221 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C4221\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C4221\"\nms.assetid: 8532bd68-54dc-4526-8597-f61dcb0a0129\ncaps.latest.revision: 7\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Warning (level 4) C4221\nnonstandard extension used : 'identifier' : cannot be initialized using address of automatic variable  \n  \n With the default Microsoft extensions (/Ze), you can initialize an aggregate type (**array**, `struct`, or **union**) with the address of a local (automatic) variable.  \n  \n## Example  \n  \n```  \n// C4221.c  \n// compile with: /W4  \nstruct S  \n{  \n   int *i;  \n};  \n  \nvoid func()  \n{  \n   int j;  \n   struct S s1 = { &j };   // C4221  \n}  \n  \nint main()  \n{  \n}  \n```  \n  \n Such initializations are invalid under ANSI compatibility ([/Za](../../build/reference/za-ze-disable-language-extensions.md))."}