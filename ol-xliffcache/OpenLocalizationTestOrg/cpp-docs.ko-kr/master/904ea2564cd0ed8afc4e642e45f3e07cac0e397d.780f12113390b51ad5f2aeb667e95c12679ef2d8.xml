{"nodes":[{"pos":[12,79],"content":"Multithreading Support for Older Code (Visual C++) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Multithreading Support for Older Code (Visual C++) | Microsoft Docs","pos":[0,67]}]},{"content":"Multithreading Support for Older Code (Visual C++)","pos":[811,861]},{"content":"Visual C++ allows you to have multiple concurrent threads of execution running simultaneously.","pos":[862,956]},{"content":"With multithreading, you can spin off background tasks, manage simultaneous streams of input, manage a user interface, and much more.","pos":[957,1090]},{"content":"In This Section","pos":[1099,1114]},{"content":"Multithreading with C and Win32","pos":[1119,1150]},{"content":"Provides support for creating multithread applications with Microsoft Windows","pos":[1203,1280]},{"content":"Multithreading with C++ and MFC","pos":[1288,1319]},{"content":"Describes what processes and threads are and what the MFC approach to multithreading is.","pos":[1372,1460]},{"content":"Multithreading and Locales","pos":[1468,1494]},{"content":"Discusses issues that arise when using the locale functionality of both the C Runtime Library and the Standard C++ Library in a multithreaded application.","pos":[1542,1696]},{"content":"Related Sections","pos":[1705,1721]},{"content":"CWinThread","pos":[1726,1736]},{"content":"Represents a thread of execution within an application.","pos":[1779,1834]},{"content":"CSyncObject","pos":[1842,1853]},{"content":"Describes a pure virtual class that provides functionality common to the synchronization objects in Win32.","pos":[1897,2003]},{"content":"CSemaphore","pos":[2011,2021]},{"content":"Represents a semaphore, which is a synchronization object that allows a limited number of threads in one or more processes to access a resource.","pos":[2064,2208]},{"content":"CMutex","pos":[2216,2222]},{"content":"Represents a mutex, which is a synchronization object that allows one thread mutually exclusive access to a resource.","pos":[2261,2378]},{"content":"CCriticalSection","pos":[2386,2402]},{"content":"Represents a critical section, which is a synchronization object that allows one thread at a time to access a resource or section of code.","pos":[2451,2589]},{"content":"CEvent","pos":[2597,2603]},{"content":"Represents an event, which is a synchronization object that allows one thread to notify another that an event has occurred.","pos":[2642,2765]},{"content":"CMultiLock","pos":[2773,2783]},{"content":"Represents the access-control mechanism used in controlling access to resources in a multithreaded program.","pos":[2826,2933]},{"content":"CSingleLock","pos":[2941,2952]},{"content":"Represents the access-control mechanism used in controlling access to a resource in a multithreaded program.","pos":[2996,3104]},{"content":"(NOTINBUILD)Visual C++ Programming Methodologies","pos":[3112,3160]},{"content":"Provides links to topics describing conceptual information about the Visual C++ libraries and topics discussing various coding technologies and techniques.","pos":[3235,3390]}],"content":"---\ntitle: \"Multithreading Support for Older Code (Visual C++) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"threading [C++]\"\n  - \"multiple threads\"\n  - \"concurrent programming [C++]\"\n  - \"programming [C++], multithreaded\"\n  - \"multithreading [C++], about multithreading\"\n  - \"multiple concurrent threads\"\n  - \"multithreading [C++]\"\nms.assetid: 24425b1f-5031-4c6b-aac7-017115a40e7c\ncaps.latest.revision: 13\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Multithreading Support for Older Code (Visual C++)\nVisual C++ allows you to have multiple concurrent threads of execution running simultaneously. With multithreading, you can spin off background tasks, manage simultaneous streams of input, manage a user interface, and much more.  \n  \n## In This Section  \n [Multithreading with C and Win32](../parallel/multithreading-with-c-and-win32.md)  \n Provides support for creating multithread applications with Microsoft Windows  \n  \n [Multithreading with C++ and MFC](../parallel/multithreading-with-cpp-and-mfc.md)  \n Describes what processes and threads are and what the MFC approach to multithreading is.  \n  \n [Multithreading and Locales](../parallel/multithreading-and-locales.md)  \n Discusses issues that arise when using the locale functionality of both the C Runtime Library and the Standard C++ Library in a multithreaded application.  \n  \n## Related Sections  \n [CWinThread](../mfc/reference/cwinthread-class.md)  \n Represents a thread of execution within an application.  \n  \n [CSyncObject](../mfc/reference/csyncobject-class.md)  \n Describes a pure virtual class that provides functionality common to the synchronization objects in Win32.  \n  \n [CSemaphore](../mfc/reference/csemaphore-class.md)  \n Represents a semaphore, which is a synchronization object that allows a limited number of threads in one or more processes to access a resource.  \n  \n [CMutex](../mfc/reference/cmutex-class.md)  \n Represents a mutex, which is a synchronization object that allows one thread mutually exclusive access to a resource.  \n  \n [CCriticalSection](../mfc/reference/ccriticalsection-class.md)  \n Represents a critical section, which is a synchronization object that allows one thread at a time to access a resource or section of code.  \n  \n [CEvent](../mfc/reference/cevent-class.md)  \n Represents an event, which is a synchronization object that allows one thread to notify another that an event has occurred.  \n  \n [CMultiLock](../mfc/reference/cmultilock-class.md)  \n Represents the access-control mechanism used in controlling access to resources in a multithreaded program.  \n  \n [CSingleLock](../mfc/reference/csinglelock-class.md)  \n Represents the access-control mechanism used in controlling access to a resource in a multithreaded program.  \n  \n [(NOTINBUILD)Visual C++ Programming Methodologies](http://msdn.microsoft.com/en-us/0822f806-fa81-4b65-bf0f-1e2921f30c95)  \n Provides links to topics describing conceptual information about the Visual C++ libraries and topics discussing various coding technologies and techniques."}