{"nodes":[{"pos":[12,47],"content":"clog, clogf, clogl | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"clog, clogf, clogl | Microsoft Docs","pos":[0,35]}]},{"pos":[1064,1082],"content":"clog, clogf, clogl","linkify":"clog, clogf, clogl","nodes":[{"content":"clog, clogf, clogl","pos":[0,18]}]},{"content":"Retrieves the natural logarithm of a complex number, with a branch cut along the negative real axis.","pos":[1083,1183]},{"pos":[1192,1198],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1462,1472],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The base of the logarithm.","pos":[1483,1509]},{"pos":[1518,1530],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The natural logarithm of <ph id=\"ph1\">`z`</ph>.","pos":[1534,1563],"source":"The natural logarithm of `z`."},{"content":"The result is unbounded along the real axis and in the interval [−iπ, +iπ] along the imaginary axis.","pos":[1564,1664]},{"content":"The possible return values are:","pos":[1671,1702]},{"content":"z parameter","pos":[1709,1720]},{"content":"Return value","pos":[1721,1733]},{"content":"Positive","pos":[1779,1787]},{"content":"The base 10 logarithm of z","pos":[1788,1814]},{"content":"Zero","pos":[1819,1823]},{"content":"- ∞","pos":[1824,1827]},{"content":"Negative","pos":[1832,1840]},{"content":"NaN","pos":[1841,1844]},{"content":"NaN","pos":[1849,1852]},{"content":"NaN","pos":[1853,1856]},{"content":"+ ∞","pos":[1861,1864]},{"content":"+ ∞","pos":[1865,1868]},{"pos":[1878,1885],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Because C++ allows overloading, you can call overloads of <ph id=\"ph1\">`clog`</ph> that take and return <ph id=\"ph2\">`_Fcomplex`</ph> and <ph id=\"ph3\">`_Lcomplex`</ph> values.","pos":[1889,2010],"source":"Because C++ allows overloading, you can call overloads of `clog` that take and return `_Fcomplex` and `_Lcomplex` values."},{"content":"In a C program, <ph id=\"ph1\">`clog`</ph> always takes and returns a <ph id=\"ph2\">`_Dcomplex`</ph> value.","pos":[2011,2079],"source":" In a C program, `clog` always takes and returns a `_Dcomplex` value."},{"pos":[2088,2100],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[2107,2114]},{"content":"C header","pos":[2115,2123]},{"content":"C++ header","pos":[2124,2134]},{"pos":[2191,2229],"content":"<ph id=\"ph1\">`clog`</ph>,               <ph id=\"ph2\">`clogf`</ph>, <ph id=\"ph3\">`clogl`</ph>","source":"`clog`,               `clogf`, `clogl`"},{"content":"<ph id=\"ph1\">\\&lt;</ph>complex.h&gt;","pos":[2230,2242],"source":"\\<complex.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>ccomplex&gt;","pos":[2243,2254],"source":"\\<ccomplex>"},{"pos":[2262,2380],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"pos":[2389,2397],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Alphabetical Function Reference<ept id=\"p1\">](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)</ept><ph id=\"ph1\"> </ph>","pos":[2401,2509],"source":"[Alphabetical Function Reference](../../c-runtime-library/reference/crt-alphabetical-function-reference.md) "},{"content":"<bpt id=\"p1\"> [</bpt>cexp, cexpf, cexpl<ept id=\"p1\">](../../c-runtime-library/reference/cexp-cexpf-cexpl.md)</ept><ph id=\"ph1\"> </ph>","pos":[2512,2589],"source":" [cexp, cexpf, cexpl](../../c-runtime-library/reference/cexp-cexpf-cexpl.md) "},{"content":"<bpt id=\"p1\"> [</bpt>cpow, cpowf, cpowl<ept id=\"p1\">](../../c-runtime-library/reference/cpow-cpowf-cpowl.md)</ept><ph id=\"ph1\"> </ph>","pos":[2592,2669],"source":" [cpow, cpowf, cpowl](../../c-runtime-library/reference/cpow-cpowf-cpowl.md) "},{"content":"<bpt id=\"p1\"> [</bpt>clog10, clog10f, clog10l<ept id=\"p1\">](../../c-runtime-library/reference/clog10-clog10f-clog10l.md)</ept>","pos":[2672,2760],"source":" [clog10, clog10f, clog10l](../../c-runtime-library/reference/clog10-clog10f-clog10l.md)"}],"content":"---\ntitle: \"clog, clogf, clogl | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"cpp\"\n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"clog\"\n  - \"clogf\"\n  - \"clogl\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-math-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"clog\"\n  - \"clogf\"\n  - \"clogl\"\n  - \"complex/clog\"\n  - \"complex/clogf\"\n  - \"complex/clogl\"\ndev_langs: \n  - \"C\"\n  - \"C++\"\nhelpviewer_keywords: \n  - \"clog function\"\n  - \"clogf function\"\n  - \"clogl function\"\nms.assetid: 870b9b0b-6618-46f3-bfcf-da595cbd5e18\ncaps.latest.revision: 9\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# clog, clogf, clogl\nRetrieves the natural logarithm of a complex number, with a branch cut along the negative real axis.  \n  \n## Syntax  \n  \n```  \n_Dcomplex clog(   \n   _Dcomplex z   \n);  \n_Fcomplex clog(   \n   _Fcomplex z   \n);  // C++ only  \n_Lcomplex clog(   \n   _Lcomplex z   \n);  // C++ only  \n_Fcomplex clogf(   \n   _Fcomplex z   \n);  \n_Lcomplex clogl(   \n   _Lcomplex z   \n);  \n```  \n  \n#### Parameters  \n `z`  \n The base of the logarithm.  \n  \n## Return Value  \n The natural logarithm of `z`. The result is unbounded along the real axis and in the interval [−iπ, +iπ] along the imaginary axis.  \n  \n The possible return values are:  \n  \n|z parameter|Return value|  \n|-----------------|------------------|  \n|Positive|The base 10 logarithm of z|  \n|Zero|- ∞|  \n|Negative|NaN|  \n|NaN|NaN|  \n|+ ∞|+ ∞|  \n  \n## Remarks  \n Because C++ allows overloading, you can call overloads of `clog` that take and return `_Fcomplex` and `_Lcomplex` values. In a C program, `clog` always takes and returns a `_Dcomplex` value.  \n  \n## Requirements  \n  \n|Routine|C header|C++ header|  \n|-------------|--------------|------------------|  \n|`clog`,               `clogf`, `clogl`|\\<complex.h>|\\<ccomplex>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## See Also  \n [Alphabetical Function Reference](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)   \n [cexp, cexpf, cexpl](../../c-runtime-library/reference/cexp-cexpf-cexpl.md)   \n [cpow, cpowf, cpowl](../../c-runtime-library/reference/cpow-cpowf-cpowl.md)   \n [clog10, clog10f, clog10l](../../c-runtime-library/reference/clog10-clog10f-clog10l.md)"}