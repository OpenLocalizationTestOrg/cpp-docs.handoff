{"nodes":[{"pos":[12,50],"content":"CNetAddressCtrl Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CNetAddressCtrl Class | Microsoft Docs","pos":[0,38]}]},{"content":"CNetAddressCtrl Class","pos":[583,604]},{"pos":[605,763],"content":"The <ph id=\"ph1\">`CNetAddressCtrl`</ph> class represents the network address control, which you can use to input and validate the format of IPv4, IPv6, and named DNS addresses.","source":"The `CNetAddressCtrl` class represents the network address control, which you can use to input and validate the format of IPv4, IPv6, and named DNS addresses."},{"content":"Syntax","pos":[772,778]},{"content":"Members","pos":[841,848]},{"content":"Public Constructors","pos":[858,877]},{"content":"Name","pos":[884,888]},{"content":"Description","pos":[889,900]},{"content":"CNetAddressCtrl::CNetAddressCtrl","pos":[939,971]},{"pos":[1008,1046],"content":"Constructs a <ph id=\"ph1\">`CNetAddressCtrl`</ph> object.","source":"Constructs a `CNetAddressCtrl` object."},{"content":"Public Methods","pos":[1057,1071]},{"content":"Name","pos":[1078,1082]},{"content":"Description","pos":[1083,1094]},{"content":"CNetAddressCtrl::Create","pos":[1133,1156]},{"pos":[1184,1296],"content":"Creates a network address control with specified styles and attaches it to the current <ph id=\"ph1\">`CNetAddressCtrl`</ph> object.","source":"Creates a network address control with specified styles and attaches it to the current `CNetAddressCtrl` object."},{"content":"CNetAddressCtrl::CreateEx","pos":[1302,1327]},{"pos":[1357,1478],"content":"Creates a network address control with specified extended styles and attaches it to the current <ph id=\"ph1\">`CNetAddressCtrl`</ph> object.","source":"Creates a network address control with specified extended styles and attaches it to the current `CNetAddressCtrl` object."},{"content":"CNetAddressCtrl::DisplayErrorTip","pos":[1484,1516]},{"content":"Displays an error balloon tip when the user enters an unsupported network address in the current network address control.","pos":[1553,1674]},{"content":"CNetAddressCtrl::GetAddress","pos":[1680,1707]},{"content":"Retrieves a validated and parsed representation of the network address associated with the current network address control.","pos":[1739,1862]},{"content":"CNetAddressCtrl::GetAllowType","pos":[1868,1897]},{"content":"Retrieves the type of network address that the current network address control can support.","pos":[1931,2022]},{"content":"CNetAddressCtrl::SetAllowType","pos":[2028,2057]},{"content":"Sets the type of network address that the current network address control can support.","pos":[2091,2177]},{"content":"Remarks","pos":[2187,2194]},{"content":"The network address control verifies that the format of the address the user enters is correct.","pos":[2198,2293]},{"content":"The control does not actually connect to the network address.","pos":[2294,2355]},{"content":"The <bpt id=\"p1\">[</bpt>CNetAddressCtrl::SetAllowType<ept id=\"p1\">](#cnetaddressctrl__setallowtype)</ept> method specifies one or more types of address that the <bpt id=\"p2\">[</bpt>CNetAddressCtrl::GetAddress<ept id=\"p2\">](#cnetaddressctrl__getaddress)</ept> method can parse and verify.","pos":[2356,2567],"source":" The [CNetAddressCtrl::SetAllowType](#cnetaddressctrl__setallowtype) method specifies one or more types of address that the [CNetAddressCtrl::GetAddress](#cnetaddressctrl__getaddress) method can parse and verify."},{"content":"An address can be in the form of an IPv4, IPv6, or named address for a server, network, host, or broadcast message destination.","pos":[2568,2695]},{"content":"If the format of the address is incorrect, you can use the <bpt id=\"p1\">[</bpt>CNetAddressCtrl::DisplayErrorTip<ept id=\"p1\">](#cnetaddressctrl__displayerrortip)</ept> method to display an infotip message box that graphically points to the text box of the network address control and displays a predefined error message.","pos":[2696,2977],"source":" If the format of the address is incorrect, you can use the [CNetAddressCtrl::DisplayErrorTip](#cnetaddressctrl__displayerrortip) method to display an infotip message box that graphically points to the text box of the network address control and displays a predefined error message."},{"content":"The <ph id=\"ph1\">`CNetAddressCtrl`</ph> class is derived from the <bpt id=\"p1\">[</bpt>CEdit<ept id=\"p1\">](../../mfc/reference/cedit-class.md)</ept> class.","pos":[2984,3082],"source":"The `CNetAddressCtrl` class is derived from the [CEdit](../../mfc/reference/cedit-class.md) class."},{"content":"Consequently, the network address control provides access to all Windows edit control messages.","pos":[3083,3178]},{"content":"The following figure depicts a dialog that contains a network address control.","pos":[3185,3263]},{"content":"The text box (1) for the network address control contains an invalid network address.","pos":[3264,3349]},{"content":"The infotip message (2) is displayed if the network address is invalid.","pos":[3350,3421]},{"content":"Dialog with a network address control and infotip.","pos":[3430,3480]},{"content":"Example","pos":[3547,3554]},{"content":"The following code example is a portion of a dialog that validates a network address.","pos":[3558,3643]},{"content":"The event handlers for three radio buttons specify that the network address can be one of three address types.","pos":[3644,3754]},{"content":"The user enters an address in the text box of the network control, then presses a button to validate the address.","pos":[3755,3868]},{"content":"If the address is valid, a success message is displayed; otherwise, the predefined infotip error message is displayed.","pos":[3869,3987]},{"pos":[4005,4033],"content":"NVC_MFC_CNetAddressCtrl_s1#1"},{"content":"Example","pos":[4109,4116]},{"pos":[4120,4445],"content":"The following code example from the dialog header file defines the <bpt id=\"p1\">[</bpt>NC_ADDRESS<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb773345)</ept> and <bpt id=\"p2\">[</bpt>NET_ADDRESS_INFO<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/bb773346)</ept> variables that are required by the <bpt id=\"p3\">[</bpt>CNetAddressCtrl::GetAddress<ept id=\"p3\">](#cnetaddressctrl__getaddress)</ept> method.","source":"The following code example from the dialog header file defines the [NC_ADDRESS](http://msdn.microsoft.com/library/windows/desktop/bb773345) and [NET_ADDRESS_INFO](http://msdn.microsoft.com/library/windows/desktop/bb773346) variables that are required by the [CNetAddressCtrl::GetAddress](#cnetaddressctrl__getaddress) method."},{"pos":[4463,4491],"content":"NVC_MFC_CNetAddressCtrl_s1#2"},{"content":"Inheritance Hierarchy","pos":[4565,4586]},{"content":"CObject","pos":[4591,4598]},{"content":"CCmdTarget","pos":[4645,4655]},{"content":"CWnd","pos":[4705,4709]},{"content":"CEdit","pos":[4753,4758]},{"content":"Requirements","pos":[4828,4840]},{"pos":[4844,4864],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxcmn.h","source":"**Header:** afxcmn.h"},{"pos":[4871,4980],"content":"This class is supported in <ph id=\"ph1\">[!INCLUDE[windowsver](../../build/reference/includes/windowsver_md.md)]</ph> and later.","source":"This class is supported in [!INCLUDE[windowsver](../../build/reference/includes/windowsver_md.md)] and later."},{"pos":[4987,5165],"content":"Additional requirements for this class are described in <bpt id=\"p1\">[</bpt>Build Requirements for Windows Vista Common Controls<ept id=\"p1\">](../../mfc/build-requirements-for-windows-vista-common-controls.md)</ept>.","source":"Additional requirements for this class are described in [Build Requirements for Windows Vista Common Controls](../../mfc/build-requirements-for-windows-vista-common-controls.md)."},{"pos":[5224,5256],"content":"CNetAddressCtrl::CNetAddressCtrl"},{"pos":[5260,5298],"content":"Constructs a <ph id=\"ph1\">`CNetAddressCtrl`</ph> object.","source":"Constructs a `CNetAddressCtrl` object."},{"content":"Remarks","pos":[5342,5349]},{"pos":[5353,5553],"content":"Use the <bpt id=\"p1\">[</bpt>CNetAddressCtrl::Create<ept id=\"p1\">](#cnetaddressctrl__create)</ept> or <bpt id=\"p2\">[</bpt>CNetAddressCtrl::CreateEx<ept id=\"p2\">](#cnetaddressctrl__createex)</ept> method to create a network control and attach it to the <ph id=\"ph1\">`CNetAddressCtrl`</ph> object.","source":"Use the [CNetAddressCtrl::Create](#cnetaddressctrl__create) or [CNetAddressCtrl::CreateEx](#cnetaddressctrl__createex) method to create a network control and attach it to the `CNetAddressCtrl` object."},{"pos":[5603,5626],"content":"CNetAddressCtrl::Create"},{"pos":[5630,5742],"content":"Creates a network address control with specified styles and attaches it to the current <ph id=\"ph1\">`CNetAddressCtrl`</ph> object.","source":"Creates a network address control with specified styles and attaches it to the current `CNetAddressCtrl` object."},{"content":"Parameters","pos":[5875,5885]},{"content":"Parameter","pos":[5892,5901]},{"content":"Description","pos":[5902,5913]},{"pos":[5956,5960],"content":"[in]"},{"content":"A bitwise combination of styles to be applied to the control.","pos":[5971,6032]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Edit Styles<ept id=\"p1\">](../../mfc/reference/edit-styles.md)</ept>.","pos":[6033,6109],"source":" For more information, see [Edit Styles](../../mfc/reference/edit-styles.md)."},{"pos":[6114,6118],"content":"[in]"},{"pos":[6126,6271],"content":"A reference to a <bpt id=\"p1\">[</bpt>RECT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure that contains the position and size of the control.","source":"A reference to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure that contains the position and size of the control."},{"pos":[6276,6280],"content":"[in]"},{"pos":[6294,6408],"content":"A non-null pointer to a <bpt id=\"p1\">[</bpt>CWnd<ept id=\"p1\">](../../mfc/reference/cwnd-class.md)</ept> object that is the parent window of the control.","source":"A non-null pointer to a [CWnd](../../mfc/reference/cwnd-class.md) object that is the parent window of the control."},{"pos":[6413,6417],"content":"[in]"},{"content":"The ID of the control.","pos":[6424,6446]},{"content":"Return Value","pos":[6457,6469]},{"pos":[6480,6529],"content":"if this method is successful; otherwise, <ph id=\"ph1\">`false`</ph>.","source":" if this method is successful; otherwise, `false`."},{"pos":[6581,6606],"content":"CNetAddressCtrl::CreateEx"},{"pos":[6610,6731],"content":"Creates a network address control with specified extended styles and attaches it to the current <ph id=\"ph1\">`CNetAddressCtrl`</ph> object.","source":"Creates a network address control with specified extended styles and attaches it to the current `CNetAddressCtrl` object."},{"content":"Parameters","pos":[6890,6900]},{"content":"Parameter","pos":[6907,6916]},{"content":"Description","pos":[6917,6928]},{"pos":[6971,6975],"content":"[in]"},{"content":"A bitwise combination (OR) of extended styles to be applied to the control.","pos":[6988,7063]},{"content":"For more information, see the <ph id=\"ph1\">`dwExStyle`</ph> parameter of the <bpt id=\"p1\">[</bpt>CreateWindowEx<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms632680)</ept> function.","pos":[7064,7209],"source":" For more information, see the `dwExStyle` parameter of the [CreateWindowEx](http://msdn.microsoft.com/library/windows/desktop/ms632680) function."},{"pos":[7214,7218],"content":"[in]"},{"content":"A bitwise combination (OR) of styles to be applied to the control.","pos":[7229,7295]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Edit Styles<ept id=\"p1\">](../../mfc/reference/edit-styles.md)</ept>.","pos":[7296,7372],"source":" For more information, see [Edit Styles](../../mfc/reference/edit-styles.md)."},{"pos":[7377,7381],"content":"[in]"},{"pos":[7389,7534],"content":"A reference to a <bpt id=\"p1\">[</bpt>RECT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure that contains the position and size of the control.","source":"A reference to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure that contains the position and size of the control."},{"pos":[7539,7543],"content":"[in]"},{"pos":[7557,7671],"content":"A non-null pointer to a <bpt id=\"p1\">[</bpt>CWnd<ept id=\"p1\">](../../mfc/reference/cwnd-class.md)</ept> object that is the parent window of the control.","source":"A non-null pointer to a [CWnd](../../mfc/reference/cwnd-class.md) object that is the parent window of the control."},{"pos":[7676,7680],"content":"[in]"},{"content":"The ID of the control.","pos":[7687,7709]},{"content":"Return Value","pos":[7720,7732]},{"pos":[7743,7792],"content":"if this method is successful; otherwise, <ph id=\"ph1\">`false`</ph>.","source":" if this method is successful; otherwise, `false`."},{"pos":[7851,7883],"content":"CNetAddressCtrl::DisplayErrorTip"},{"content":"Displays an error message in the balloon tip that is associated with the current network address control.","pos":[7887,7992]},{"content":"Return Value","pos":[8044,8056]},{"pos":[8060,8132],"content":"The value <ph id=\"ph1\">`S_OK`</ph> if this method is successful; otherwise, an error code.","source":"The value `S_OK` if this method is successful; otherwise, an error code."},{"content":"Remarks","pos":[8142,8149]},{"content":"Use the <bpt id=\"p1\">[</bpt>CNetAddressCtrl::SetAllowType<ept id=\"p1\">](#cnetaddressctrl__setallowtype)</ept> method to specify the types of addresses that the current network address control can support.","pos":[8153,8319],"source":"Use the [CNetAddressCtrl::SetAllowType](#cnetaddressctrl__setallowtype) method to specify the types of addresses that the current network address control can support."},{"content":"Use the <bpt id=\"p1\">[</bpt>CNetAddressCtrl::GetAddress<ept id=\"p1\">](#cnetaddressctrl__getaddress)</ept> method to validate and parse the network address that the user enters.","pos":[8320,8458],"source":" Use the [CNetAddressCtrl::GetAddress](#cnetaddressctrl__getaddress) method to validate and parse the network address that the user enters."},{"content":"Use the <bpt id=\"p1\">[</bpt>CNetAddressCtrl::DisplayErrorTip<ept id=\"p1\">](#cnetaddressctrl__displayerrortip)</ept> method to display an error message infotip if the <bpt id=\"p2\">[</bpt>CNetAddressCtrl::GetAddress<ept id=\"p2\">](#cnetaddressctrl__getaddress)</ept> method is unsuccessful.","pos":[8459,8670],"source":" Use the [CNetAddressCtrl::DisplayErrorTip](#cnetaddressctrl__displayerrortip) method to display an error message infotip if the [CNetAddressCtrl::GetAddress](#cnetaddressctrl__getaddress) method is unsuccessful."},{"content":"This message invokes the <bpt id=\"p1\">[</bpt>NetAddr_DisplayErrorTip<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774314)</ept> macro, which is described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[8677,8873],"source":"This message invokes the [NetAddr_DisplayErrorTip](http://msdn.microsoft.com/library/windows/desktop/bb774314) macro, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"That macro sends the <ph id=\"ph1\">`NCM_DISPLAYERRORTIP`</ph> message.","pos":[8874,8925],"source":" That macro sends the `NCM_DISPLAYERRORTIP` message."},{"pos":[8979,9006],"content":"CNetAddressCtrl::GetAddress"},{"content":"Retrieves a validated and parsed representation of the network address that is associated with the current network address control.","pos":[9010,9141]},{"content":"Parameters","pos":[9217,9227]},{"content":"Parameter","pos":[9234,9243]},{"content":"Description","pos":[9244,9255]},{"pos":[9298,9307],"content":"[in, out]"},{"content":"Pointer to an <bpt id=\"p1\">[</bpt>NC_ADDRESS<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb773345)</ept> structure.","pos":[9319,9416],"source":"Pointer to an [NC_ADDRESS](http://msdn.microsoft.com/library/windows/desktop/bb773345) structure."},{"content":"Set the <ph id=\"ph1\">`pAddrInfo`</ph> member of this structure to the address of a <bpt id=\"p1\">[</bpt>NET_ADDRESS_INFO<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb773346)</ept> structure before you call the GetAddress method.","pos":[9418,9610],"source":"  Set the `pAddrInfo` member of this structure to the address of a [NET_ADDRESS_INFO](http://msdn.microsoft.com/library/windows/desktop/bb773346) structure before you call the GetAddress method."},{"content":"Return Value","pos":[9621,9633]},{"content":"The value <ph id=\"ph1\">`S_OK`</ph> if this method is successful; otherwise, a COM error code.","pos":[9637,9712],"source":"The value `S_OK` if this method is successful; otherwise, a COM error code."},{"content":"For more information about the possible error codes, see the Return Value section of the <bpt id=\"p1\">[</bpt>NetAddr_GetAddress<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774316)</ept> macro.","pos":[9713,9889],"source":" For more information about the possible error codes, see the Return Value section of the [NetAddr_GetAddress](http://msdn.microsoft.com/library/windows/desktop/bb774316) macro."},{"content":"Remarks","pos":[9899,9906]},{"pos":[9910,10091],"content":"If this method is successful, the <bpt id=\"p1\">[</bpt>NET_ADDRESS_INFO<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb773346)</ept> structure contains additional information about the network address.","source":"If this method is successful, the [NET_ADDRESS_INFO](http://msdn.microsoft.com/library/windows/desktop/bb773346) structure contains additional information about the network address."},{"content":"Use the <bpt id=\"p1\">[</bpt>CNetAddressCtrl::SetAllowType<ept id=\"p1\">](#cnetaddressctrl__setallowtype)</ept> method to specify the types of addresses the current network address control can support.","pos":[10098,10259],"source":"Use the [CNetAddressCtrl::SetAllowType](#cnetaddressctrl__setallowtype) method to specify the types of addresses the current network address control can support."},{"content":"Use the <bpt id=\"p1\">[</bpt>CNetAddressCtrl::GetAddress<ept id=\"p1\">](#cnetaddressctrl__getaddress)</ept> method to validate and parse the network address that the user enters.","pos":[10260,10398],"source":" Use the [CNetAddressCtrl::GetAddress](#cnetaddressctrl__getaddress) method to validate and parse the network address that the user enters."},{"content":"Use the <bpt id=\"p1\">[</bpt>CNetAddressCtrl::DisplayErrorTip<ept id=\"p1\">](#cnetaddressctrl__displayerrortip)</ept> method to display an error message infotip if the <bpt id=\"p2\">[</bpt>CNetAddressCtrl::GetAddress<ept id=\"p2\">](#cnetaddressctrl__getaddress)</ept> method is unsuccessful.","pos":[10399,10610],"source":" Use the [CNetAddressCtrl::DisplayErrorTip](#cnetaddressctrl__displayerrortip) method to display an error message infotip if the [CNetAddressCtrl::GetAddress](#cnetaddressctrl__getaddress) method is unsuccessful."},{"content":"This method invokes the <bpt id=\"p1\">[</bpt>NetAddr_GetAddress<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774316)</ept> macro, which is described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[10617,10807],"source":"This method invokes the [NetAddr_GetAddress](http://msdn.microsoft.com/library/windows/desktop/bb774316) macro, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"That macro sends the <ph id=\"ph1\">`NCM_GETADDRESS`</ph> message.","pos":[10808,10854],"source":" That macro sends the `NCM_GETADDRESS` message."},{"pos":[10910,10939],"content":"CNetAddressCtrl::GetAllowType"},{"content":"Retrieves the type of network address that the current network address control can support.","pos":[10943,11034]},{"content":"Return Value","pos":[11090,11102]},{"content":"A bitwise combination (OR) of flags that specifies the types of addresses the network address control can support.","pos":[11106,11220]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NET_STRING<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb762586)</ept>.","pos":[11221,11320],"source":" For more information, see [NET_STRING](http://msdn.microsoft.com/library/windows/desktop/bb762586)."},{"content":"Remarks","pos":[11330,11337]},{"content":"This message invokes the <bpt id=\"p1\">[</bpt>NetAddr_GetAllowType<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774318)</ept> macro, which is described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[11341,11534],"source":"This message invokes the [NetAddr_GetAllowType](http://msdn.microsoft.com/library/windows/desktop/bb774318) macro, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"That macro sends the <ph id=\"ph1\">`NCM_GETALLOWTYPE`</ph> message.","pos":[11535,11583],"source":" That macro sends the `NCM_GETALLOWTYPE` message."},{"pos":[11639,11668],"content":"CNetAddressCtrl::SetAllowType"},{"content":"Sets the type of network address that the current network address control can support.","pos":[11672,11758]},{"content":"Parameters","pos":[11823,11833]},{"content":"Parameter","pos":[11840,11849]},{"content":"Description","pos":[11850,11861]},{"pos":[11904,11908],"content":"[in]"},{"content":"A bitwise combination (OR) of flags that specifies the types of addresses the network address control can support.","pos":[11922,12036]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NET_STRING<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb762586)</ept>.","pos":[12037,12136],"source":" For more information, see [NET_STRING](http://msdn.microsoft.com/library/windows/desktop/bb762586)."},{"content":"Return Value","pos":[12147,12159]},{"pos":[12170,12228],"content":"if this method is successful; otherwise, a COM error code."},{"content":"Remarks","pos":[12238,12245]},{"content":"Use the <bpt id=\"p1\">[</bpt>CNetAddressCtrl::SetAllowType<ept id=\"p1\">](#cnetaddressctrl__setallowtype)</ept> method to specify the types of addresses that the current network address control can support.","pos":[12249,12415],"source":"Use the [CNetAddressCtrl::SetAllowType](#cnetaddressctrl__setallowtype) method to specify the types of addresses that the current network address control can support."},{"content":"Use the <bpt id=\"p1\">[</bpt>CNetAddressCtrl::GetAddress<ept id=\"p1\">](#cnetaddressctrl__getaddress)</ept> method to validate and parse the network address that the user enters.","pos":[12416,12554],"source":" Use the [CNetAddressCtrl::GetAddress](#cnetaddressctrl__getaddress) method to validate and parse the network address that the user enters."},{"content":"Use the <bpt id=\"p1\">[</bpt>CNetAddressCtrl::DisplayErrorTip<ept id=\"p1\">](#cnetaddressctrl__displayerrortip)</ept> method to display an error message infotip if the <bpt id=\"p2\">[</bpt>CNetAddressCtrl::GetAddress<ept id=\"p2\">](#cnetaddressctrl__getaddress)</ept> method is unsuccessful.","pos":[12555,12766],"source":" Use the [CNetAddressCtrl::DisplayErrorTip](#cnetaddressctrl__displayerrortip) method to display an error message infotip if the [CNetAddressCtrl::GetAddress](#cnetaddressctrl__getaddress) method is unsuccessful."},{"content":"This message invokes the <bpt id=\"p1\">[</bpt>NetAddr_SetAllowType<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774320)</ept> macro, which is described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[12773,12966],"source":"This message invokes the [NetAddr_SetAllowType](http://msdn.microsoft.com/library/windows/desktop/bb774320) macro, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"That macro sends the <ph id=\"ph1\">`NCM_SETALLOWTYPE`</ph> message.","pos":[12967,13015],"source":" That macro sends the `NCM_SETALLOWTYPE` message."},{"content":"See Also","pos":[13024,13032]},{"content":"CNetAddressCtrl Class","pos":[13037,13058]},{"content":"Hierarchy Chart","pos":[13111,13126]},{"content":"CEdit Class","pos":[13163,13174]}],"content":"---\ntitle: \"CNetAddressCtrl Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CNetAddressCtrl class\"\nms.assetid: cb4c6aca-3f49-4b52-b76c-65f57096155b\ncaps.latest.revision: 32\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CNetAddressCtrl Class\nThe `CNetAddressCtrl` class represents the network address control, which you can use to input and validate the format of IPv4, IPv6, and named DNS addresses.  \n  \n## Syntax  \n  \n```  \nclass CNetAddressCtrl : public CEdit  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CNetAddressCtrl::CNetAddressCtrl](#cnetaddressctrl__cnetaddressctrl)|Constructs a `CNetAddressCtrl` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CNetAddressCtrl::Create](#cnetaddressctrl__create)|Creates a network address control with specified styles and attaches it to the current `CNetAddressCtrl` object.|  \n|[CNetAddressCtrl::CreateEx](#cnetaddressctrl__createex)|Creates a network address control with specified extended styles and attaches it to the current `CNetAddressCtrl` object.|  \n|[CNetAddressCtrl::DisplayErrorTip](#cnetaddressctrl__displayerrortip)|Displays an error balloon tip when the user enters an unsupported network address in the current network address control.|  \n|[CNetAddressCtrl::GetAddress](#cnetaddressctrl__getaddress)|Retrieves a validated and parsed representation of the network address associated with the current network address control.|  \n|[CNetAddressCtrl::GetAllowType](#cnetaddressctrl__getallowtype)|Retrieves the type of network address that the current network address control can support.|  \n|[CNetAddressCtrl::SetAllowType](#cnetaddressctrl__setallowtype)|Sets the type of network address that the current network address control can support.|  \n  \n## Remarks  \n The network address control verifies that the format of the address the user enters is correct. The control does not actually connect to the network address. The [CNetAddressCtrl::SetAllowType](#cnetaddressctrl__setallowtype) method specifies one or more types of address that the [CNetAddressCtrl::GetAddress](#cnetaddressctrl__getaddress) method can parse and verify. An address can be in the form of an IPv4, IPv6, or named address for a server, network, host, or broadcast message destination. If the format of the address is incorrect, you can use the [CNetAddressCtrl::DisplayErrorTip](#cnetaddressctrl__displayerrortip) method to display an infotip message box that graphically points to the text box of the network address control and displays a predefined error message.  \n  \n The `CNetAddressCtrl` class is derived from the [CEdit](../../mfc/reference/cedit-class.md) class. Consequently, the network address control provides access to all Windows edit control messages.  \n  \n The following figure depicts a dialog that contains a network address control. The text box (1) for the network address control contains an invalid network address. The infotip message (2) is displayed if the network address is invalid.  \n  \n ![Dialog with a network address control and infotip.](../../mfc/reference/media/cnetaddctrl.png \"cnetaddctrl\")  \n  \n## Example  \n The following code example is a portion of a dialog that validates a network address. The event handlers for three radio buttons specify that the network address can be one of three address types. The user enters an address in the text box of the network control, then presses a button to validate the address. If the address is valid, a success message is displayed; otherwise, the predefined infotip error message is displayed.  \n  \n [!code-cpp[NVC_MFC_CNetAddressCtrl_s1#1](../../mfc/reference/codesnippet/cpp/cnetaddressctrl-class_1.cpp)]  \n  \n## Example  \n The following code example from the dialog header file defines the [NC_ADDRESS](http://msdn.microsoft.com/library/windows/desktop/bb773345) and [NET_ADDRESS_INFO](http://msdn.microsoft.com/library/windows/desktop/bb773346) variables that are required by the [CNetAddressCtrl::GetAddress](#cnetaddressctrl__getaddress) method.  \n  \n [!code-cpp[NVC_MFC_CNetAddressCtrl_s1#2](../../mfc/reference/codesnippet/cpp/cnetaddressctrl-class_2.h)]  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n [CEdit](../../mfc/reference/cedit-class.md)  \n  \n `CNetAddressCtrl`  \n  \n## Requirements  \n **Header:** afxcmn.h  \n  \n This class is supported in [!INCLUDE[windowsver](../../build/reference/includes/windowsver_md.md)] and later.  \n  \n Additional requirements for this class are described in [Build Requirements for Windows Vista Common Controls](../../mfc/build-requirements-for-windows-vista-common-controls.md).  \n  \n##  <a name=\"cnetaddressctrl__cnetaddressctrl\"></a>  CNetAddressCtrl::CNetAddressCtrl  \n Constructs a `CNetAddressCtrl` object.  \n  \n```  \nCNetAddressCtrl();\n```  \n  \n### Remarks  \n Use the [CNetAddressCtrl::Create](#cnetaddressctrl__create) or [CNetAddressCtrl::CreateEx](#cnetaddressctrl__createex) method to create a network control and attach it to the `CNetAddressCtrl` object.  \n  \n##  <a name=\"cnetaddressctrl__create\"></a>  CNetAddressCtrl::Create  \n Creates a network address control with specified styles and attaches it to the current `CNetAddressCtrl` object.  \n  \n```  \nvirtual BOOL Create(\n    DWORD dwStyle,   \n    const RECT& rect,   \n    CWnd* pParentWnd,   \n    UINT nID);\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|[in] `dwStyle`|A bitwise combination of styles to be applied to the control. For more information, see [Edit Styles](../../mfc/reference/edit-styles.md).|  \n|[in] `rect`|A reference to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure that contains the position and size of the control.|  \n|[in] `pParentWnd`|A non-null pointer to a [CWnd](../../mfc/reference/cwnd-class.md) object that is the parent window of the control.|  \n|[in] `nID`|The ID of the control.|  \n  \n### Return Value  \n `true` if this method is successful; otherwise, `false`.  \n  \n##  <a name=\"cnetaddressctrl__createex\"></a>  CNetAddressCtrl::CreateEx  \n Creates a network address control with specified extended styles and attaches it to the current `CNetAddressCtrl` object.  \n  \n```  \nvirtual BOOL CreateEx(\n    DWORD dwExStyle,   \n    DWORD dwStyle,   \n    const RECT& rect,   \n    CWnd* pParentWnd,   \n    UINT nID);\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|[in] `dwExStyle`|A bitwise combination (OR) of extended styles to be applied to the control. For more information, see the `dwExStyle` parameter of the [CreateWindowEx](http://msdn.microsoft.com/library/windows/desktop/ms632680) function.|  \n|[in] `dwStyle`|A bitwise combination (OR) of styles to be applied to the control. For more information, see [Edit Styles](../../mfc/reference/edit-styles.md).|  \n|[in] `rect`|A reference to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure that contains the position and size of the control.|  \n|[in] `pParentWnd`|A non-null pointer to a [CWnd](../../mfc/reference/cwnd-class.md) object that is the parent window of the control.|  \n|[in] `nID`|The ID of the control.|  \n  \n### Return Value  \n `true` if this method is successful; otherwise, `false`.  \n  \n##  <a name=\"cnetaddressctrl__displayerrortip\"></a>  CNetAddressCtrl::DisplayErrorTip  \n Displays an error message in the balloon tip that is associated with the current network address control.  \n  \n```  \nHRESULT DisplayErrorTip();\n```  \n  \n### Return Value  \n The value `S_OK` if this method is successful; otherwise, an error code.  \n  \n### Remarks  \n Use the [CNetAddressCtrl::SetAllowType](#cnetaddressctrl__setallowtype) method to specify the types of addresses that the current network address control can support. Use the [CNetAddressCtrl::GetAddress](#cnetaddressctrl__getaddress) method to validate and parse the network address that the user enters. Use the [CNetAddressCtrl::DisplayErrorTip](#cnetaddressctrl__displayerrortip) method to display an error message infotip if the [CNetAddressCtrl::GetAddress](#cnetaddressctrl__getaddress) method is unsuccessful.  \n  \n This message invokes the [NetAddr_DisplayErrorTip](http://msdn.microsoft.com/library/windows/desktop/bb774314) macro, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]. That macro sends the `NCM_DISPLAYERRORTIP` message.  \n  \n##  <a name=\"cnetaddressctrl__getaddress\"></a>  CNetAddressCtrl::GetAddress  \n Retrieves a validated and parsed representation of the network address that is associated with the current network address control.  \n  \n```  \nHRESULT GetAddress(PNC_ADDRESS pAddress) const;\n\n \n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|[in, out] `pAddress`|Pointer to an [NC_ADDRESS](http://msdn.microsoft.com/library/windows/desktop/bb773345) structure.  Set the `pAddrInfo` member of this structure to the address of a [NET_ADDRESS_INFO](http://msdn.microsoft.com/library/windows/desktop/bb773346) structure before you call the GetAddress method.|  \n  \n### Return Value  \n The value `S_OK` if this method is successful; otherwise, a COM error code. For more information about the possible error codes, see the Return Value section of the [NetAddr_GetAddress](http://msdn.microsoft.com/library/windows/desktop/bb774316) macro.  \n  \n### Remarks  \n If this method is successful, the [NET_ADDRESS_INFO](http://msdn.microsoft.com/library/windows/desktop/bb773346) structure contains additional information about the network address.  \n  \n Use the [CNetAddressCtrl::SetAllowType](#cnetaddressctrl__setallowtype) method to specify the types of addresses the current network address control can support. Use the [CNetAddressCtrl::GetAddress](#cnetaddressctrl__getaddress) method to validate and parse the network address that the user enters. Use the [CNetAddressCtrl::DisplayErrorTip](#cnetaddressctrl__displayerrortip) method to display an error message infotip if the [CNetAddressCtrl::GetAddress](#cnetaddressctrl__getaddress) method is unsuccessful.  \n  \n This method invokes the [NetAddr_GetAddress](http://msdn.microsoft.com/library/windows/desktop/bb774316) macro, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]. That macro sends the `NCM_GETADDRESS` message.  \n  \n##  <a name=\"cnetaddressctrl__getallowtype\"></a>  CNetAddressCtrl::GetAllowType  \n Retrieves the type of network address that the current network address control can support.  \n  \n```  \nDWORD GetAllowType() const;\n\n \n```  \n  \n### Return Value  \n A bitwise combination (OR) of flags that specifies the types of addresses the network address control can support. For more information, see [NET_STRING](http://msdn.microsoft.com/library/windows/desktop/bb762586).  \n  \n### Remarks  \n This message invokes the [NetAddr_GetAllowType](http://msdn.microsoft.com/library/windows/desktop/bb774318) macro, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]. That macro sends the `NCM_GETALLOWTYPE` message.  \n  \n##  <a name=\"cnetaddressctrl__setallowtype\"></a>  CNetAddressCtrl::SetAllowType  \n Sets the type of network address that the current network address control can support.  \n  \n```  \nHRESULT SetAllowType(DWORD dwAddrMask);\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|[in] `dwAddrMask`|A bitwise combination (OR) of flags that specifies the types of addresses the network address control can support. For more information, see [NET_STRING](http://msdn.microsoft.com/library/windows/desktop/bb762586).|  \n  \n### Return Value  \n `S_OK` if this method is successful; otherwise, a COM error code.  \n  \n### Remarks  \n Use the [CNetAddressCtrl::SetAllowType](#cnetaddressctrl__setallowtype) method to specify the types of addresses that the current network address control can support. Use the [CNetAddressCtrl::GetAddress](#cnetaddressctrl__getaddress) method to validate and parse the network address that the user enters. Use the [CNetAddressCtrl::DisplayErrorTip](#cnetaddressctrl__displayerrortip) method to display an error message infotip if the [CNetAddressCtrl::GetAddress](#cnetaddressctrl__getaddress) method is unsuccessful.  \n  \n This message invokes the [NetAddr_SetAllowType](http://msdn.microsoft.com/library/windows/desktop/bb774320) macro, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]. That macro sends the `NCM_SETALLOWTYPE` message.  \n  \n## See Also  \n [CNetAddressCtrl Class](../../mfc/reference/cnetaddressctrl-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [CEdit Class](../../mfc/reference/cedit-class.md)\n"}