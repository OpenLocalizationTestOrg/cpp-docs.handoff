{"nodes":[{"pos":[12,64],"content":"Concurrency::precise_math Namespace | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Concurrency::precise_math Namespace | Microsoft Docs","pos":[0,52]}]},{"content":"Concurrency::precise_math Namespace","pos":[625,660]},{"content":"Functions in the <ph id=\"ph1\">`precise_math`</ph> namespace are C99 compliant.","pos":[661,721],"source":"Functions in the `precise_math` namespace are C99 compliant."},{"content":"Both single precision and double precision versions of each function are included.","pos":[722,804]},{"content":"For example, <ph id=\"ph1\">`acos`</ph> is the double-precision version and <ph id=\"ph2\">`acosf`</ph> is the single-precision version.","pos":[805,901],"source":" For example, `acos` is the double-precision version and `acosf` is the single-precision version."},{"content":"These functions, including the single-precision functions, require extended double-precision support on the accelerator.","pos":[902,1022]},{"content":"You can use the <bpt id=\"p1\">[</bpt>accelerator::supports_double_precision Data Member<ept id=\"p1\">](accelerator-class.md#supports_double_precision)</ept> to determine if you can run these functions on a specific accelerator.","pos":[1023,1210],"source":" You can use the [accelerator::supports_double_precision Data Member](accelerator-class.md#supports_double_precision) to determine if you can run these functions on a specific accelerator."},{"content":"Syntax","pos":[1219,1225]},{"content":"Parameters","pos":[1280,1290]},{"content":"Members","pos":[1299,1306]},{"content":"Functions","pos":[1316,1325]},{"content":"Name","pos":[1332,1336]},{"content":"Description","pos":[1337,1348]},{"content":"acos Function","pos":[1387,1400]},{"content":"Overloaded.","pos":[1465,1476]},{"content":"Calculates the arccosine of the argument","pos":[1477,1517]},{"content":"acosf Function","pos":[1523,1537]},{"content":"Calculates the arccosine of the argument","pos":[1603,1643]},{"content":"acosh Function","pos":[1649,1663]},{"content":"Overloaded.","pos":[1729,1740]},{"content":"Calculates the inverse hyperbolic cosine of the argument","pos":[1741,1797]},{"content":"acoshf Function","pos":[1803,1818]},{"content":"Calculates the inverse hyperbolic cosine of the argument","pos":[1885,1941]},{"content":"asin Function","pos":[1947,1960]},{"content":"Overloaded.","pos":[2025,2036]},{"content":"Calculates the arcsine of the argument","pos":[2037,2075]},{"content":"asinf Function","pos":[2081,2095]},{"content":"Calculates the arcsine of the argument","pos":[2161,2199]},{"content":"asinh Function","pos":[2205,2219]},{"content":"Overloaded.","pos":[2285,2296]},{"content":"Calculates the inverse hyperbolic sine of the argument","pos":[2297,2351]},{"content":"asinhf Function","pos":[2357,2372]},{"content":"Calculates the inverse hyperbolic sine of the argument","pos":[2439,2493]},{"content":"atan Function","pos":[2499,2512]},{"content":"Overloaded.","pos":[2577,2588]},{"content":"Calculates the arctangent of the argument","pos":[2589,2630]},{"content":"atan2 Function","pos":[2636,2650]},{"content":"Overloaded.","pos":[2716,2727]},{"content":"Calculates the arctangent of _Y/_X","pos":[2728,2762]},{"content":"atan2f Function","pos":[2768,2783]},{"content":"Calculates the arctangent of _Y/_X","pos":[2850,2884]},{"content":"atanf Function","pos":[2890,2904]},{"content":"Calculates the arctangent of the argument","pos":[2970,3011]},{"content":"atanh Function","pos":[3017,3031]},{"content":"Overloaded.","pos":[3097,3108]},{"content":"Calculates the inverse hyperbolic tangent of the argument","pos":[3109,3166]},{"content":"atanhf Function","pos":[3172,3187]},{"content":"Calculates the inverse hyperbolic tangent of the argument","pos":[3254,3311]},{"content":"cbrt Function","pos":[3317,3330]},{"content":"Overloaded.","pos":[3395,3406]},{"content":"Computes the real cube root of the argument","pos":[3407,3450]},{"content":"cbrtf Function","pos":[3456,3470]},{"content":"Computes the real cube root of the argument","pos":[3536,3579]},{"content":"ceil Function","pos":[3585,3598]},{"content":"Overloaded.","pos":[3663,3674]},{"content":"Calculates the ceiling of the argument","pos":[3675,3713]},{"content":"ceilf Function","pos":[3719,3733]},{"content":"Calculates the ceiling of the argument","pos":[3799,3837]},{"content":"copysign Function","pos":[3843,3860]},{"content":"Overloaded.","pos":[3929,3940]},{"content":"Produces a value with the magnitude of _X and the sign of _Y","pos":[3941,4001]},{"content":"copysignf Function","pos":[4007,4025]},{"content":"Produces a value with the magnitude of _X and the sign of _Y","pos":[4095,4155]},{"content":"cos Function","pos":[4161,4173]},{"content":"Overloaded.","pos":[4237,4248]},{"content":"Calculates the cosine of the argument","pos":[4249,4286]},{"content":"cosf Function","pos":[4292,4305]},{"content":"Calculates the cosine of the argument","pos":[4370,4407]},{"content":"cosh Function","pos":[4413,4426]},{"content":"Overloaded.","pos":[4491,4502]},{"content":"Calculates the hyperbolic cosine value of the argument","pos":[4503,4557]},{"content":"coshf Function","pos":[4563,4577]},{"content":"Calculates the hyperbolic cosine value of the argument","pos":[4643,4697]},{"content":"cospi Function","pos":[4703,4717]},{"content":"Overloaded.","pos":[4783,4794]},{"content":"Calculates the cosine value of pi * _X","pos":[4795,4833]},{"content":"cospif Function","pos":[4839,4854]},{"content":"Calculates the cosine value of pi * _X","pos":[4921,4959]},{"content":"erf Function","pos":[4965,4977]},{"content":"Overloaded.","pos":[5041,5052]},{"content":"Computes the error function of _X","pos":[5053,5086]},{"content":"erfc Function","pos":[5092,5105]},{"content":"Overloaded.","pos":[5170,5181]},{"content":"Computes the complementary error function of _X","pos":[5182,5229]},{"content":"erfcf Function","pos":[5235,5249]},{"content":"Computes the complementary error function of _X","pos":[5315,5362]},{"content":"erfcinv Function","pos":[5368,5384]},{"content":"Overloaded.","pos":[5452,5463]},{"content":"Computes the inverse complementary error function of _X","pos":[5464,5519]},{"content":"erfcinvf Function","pos":[5525,5542]},{"content":"Computes the inverse complementary error function of _X","pos":[5611,5666]},{"content":"erff Function","pos":[5672,5685]},{"content":"Computes the error function of _X","pos":[5750,5783]},{"content":"erfinv Function","pos":[5789,5804]},{"content":"Overloaded.","pos":[5871,5882]},{"content":"Computes the inverse error function of _X","pos":[5883,5924]},{"content":"erfinvf Function","pos":[5930,5946]},{"content":"Computes the inverse error function of _X","pos":[6014,6055]},{"content":"exp Function","pos":[6061,6073]},{"content":"Overloaded.","pos":[6137,6148]},{"content":"Calculates the base-e exponential of the argument","pos":[6149,6198]},{"content":"exp10 Function","pos":[6204,6218]},{"content":"Overloaded.","pos":[6284,6295]},{"content":"Calculates the base-10 exponential of the argument","pos":[6296,6346]},{"content":"exp10f Function","pos":[6352,6367]},{"content":"Calculates the base-10 exponential of the argument","pos":[6434,6484]},{"content":"exp2 Function","pos":[6490,6503]},{"content":"Overloaded.","pos":[6568,6579]},{"content":"Calculates the base-2 exponential of the argument","pos":[6580,6629]},{"content":"exp2f Function","pos":[6635,6649]},{"content":"Calculates the base-2 exponential of the argument","pos":[6715,6764]},{"content":"expf Function","pos":[6770,6783]},{"content":"Calculates the base-e exponential of the argument","pos":[6848,6897]},{"content":"expm1 Function","pos":[6903,6917]},{"content":"Overloaded.","pos":[6983,6994]},{"content":"Calculates the base-e exponential of the argument, minus 1","pos":[6995,7053]},{"content":"expm1f Function","pos":[7059,7074]},{"content":"Calculates the base-e exponential of the argument, minus 1","pos":[7141,7199]},{"content":"fabs Function","pos":[7205,7218]},{"content":"Overloaded.","pos":[7283,7294]},{"content":"Returns the absolute value of the argument","pos":[7295,7337]},{"content":"fabsf Function","pos":[7343,7357]},{"content":"Returns the absolute value of the argument","pos":[7423,7465]},{"content":"fdim Function","pos":[7471,7484]},{"content":"Overloaded.","pos":[7549,7560]},{"content":"Determines the positive difference between the arguments","pos":[7561,7617]},{"content":"fdimf Function","pos":[7623,7637]},{"content":"Determines the positive difference between the arguments","pos":[7703,7759]},{"content":"floor Function","pos":[7765,7779]},{"content":"Overloaded.","pos":[7845,7856]},{"content":"Calculates the floor of the argument","pos":[7857,7893]},{"content":"floorf Function","pos":[7899,7914]},{"content":"Calculates the floor of the argument","pos":[7981,8017]},{"content":"fma Function","pos":[8023,8035]},{"content":"Overloaded.","pos":[8099,8110]},{"content":"Compute (_X * _Y) + _Z, rounded as one ternary operation","pos":[8111,8167]},{"content":"fmaf Function","pos":[8173,8186]},{"content":"Compute (_X * _Y) + _Z, rounded as one ternary operation","pos":[8251,8307]},{"content":"fmax Function","pos":[8313,8326]},{"content":"Overloaded.","pos":[8391,8402]},{"content":"Determine the maximum numeric value of the arguments","pos":[8403,8455]},{"content":"fmaxf Function","pos":[8461,8475]},{"content":"Determine the maximum numeric value of the arguments","pos":[8541,8593]},{"content":"fmin Function","pos":[8599,8612]},{"content":"Overloaded.","pos":[8677,8688]},{"content":"Determine the minimum numeric value of the arguments","pos":[8689,8741]},{"content":"fminf Function","pos":[8747,8761]},{"content":"Determine the minimum numeric value of the arguments","pos":[8827,8879]},{"content":"fmod Function (C++ AMP)","pos":[8885,8908]},{"content":"Overloaded.","pos":[8973,8984]},{"content":"Calculates the floating-point remainder of _X/_Y","pos":[8985,9033]},{"content":"fmodf Function","pos":[9039,9053]},{"content":"Calculates the floating-point remainder of _X/_Y","pos":[9119,9167]},{"content":"fpclassify Function","pos":[9173,9192]},{"content":"Overloaded.","pos":[9263,9274]},{"content":"Classifies the argument value as NaN, infinite, normal, subnormal, zero","pos":[9275,9346]},{"content":"frexp Function","pos":[9352,9366]},{"content":"Overloaded.","pos":[9432,9443]},{"content":"Gets the mantissa and exponent of _X","pos":[9444,9480]},{"content":"frexpf Function","pos":[9486,9501]},{"content":"Gets the mantissa and exponent of _X","pos":[9568,9604]},{"content":"hypot Function","pos":[9610,9624]},{"content":"Overloaded.","pos":[9690,9701]},{"content":"Computes the square root of the sum of the squares of _X and _Y","pos":[9702,9765]},{"content":"hypotf Function","pos":[9771,9786]},{"content":"Computes the square root of the sum of the squares of _X and _Y","pos":[9853,9916]},{"content":"ilogb Function","pos":[9922,9936]},{"content":"Overloaded.","pos":[10002,10013]},{"content":"Extract the exponent of _X as a signed int value","pos":[10014,10062]},{"content":"ilogbf Function","pos":[10068,10083]},{"content":"Extract the exponent of _X as a signed int value","pos":[10150,10198]},{"content":"isfinite Function","pos":[10204,10221]},{"content":"Overloaded.","pos":[10290,10301]},{"content":"Determines whether the argument has a finite value","pos":[10302,10352]},{"content":"isinf Function","pos":[10358,10372]},{"content":"Overloaded.","pos":[10438,10449]},{"content":"Determines whether the argument is an infinity","pos":[10450,10496]},{"content":"isnan Function","pos":[10502,10516]},{"content":"Overloaded.","pos":[10582,10593]},{"content":"Determines whether the argument is a NaN","pos":[10594,10634]},{"content":"isnormal Function","pos":[10640,10657]},{"content":"Overloaded.","pos":[10726,10737]},{"content":"Determines whether the argument is a normal","pos":[10738,10781]},{"content":"ldexp Function","pos":[10787,10801]},{"content":"Overloaded.","pos":[10867,10878]},{"content":"Computes a real number from the mantissa and exponent","pos":[10879,10932]},{"content":"ldexpf Function","pos":[10938,10953]},{"content":"Computes a real number from the mantissa and exponent","pos":[11020,11073]},{"content":"lgamma Function","pos":[11079,11094]},{"content":"Overloaded.","pos":[11161,11172]},{"content":"Computes the natural logarithm of the absolute value of gamma of the argument","pos":[11173,11250]},{"content":"lgammaf Function","pos":[11256,11272]},{"content":"Computes the natural logarithm of the absolute value of gamma of the argument","pos":[11340,11417]},{"content":"log Function","pos":[11423,11435]},{"content":"Overloaded.","pos":[11499,11510]},{"content":"Calculates the base-e logarithm of the argument","pos":[11511,11558]},{"content":"log10 Function","pos":[11564,11578]},{"content":"Overloaded.","pos":[11644,11655]},{"content":"Calculates the base-10 logarithm of the argument","pos":[11656,11704]},{"content":"log10f Function","pos":[11710,11725]},{"content":"Calculates the base-10 logarithm of the argument","pos":[11792,11840]},{"content":"log1p Function","pos":[11846,11860]},{"content":"Overloaded.","pos":[11926,11937]},{"content":"Calculates the base-e logarithm of 1 plus the argument","pos":[11938,11992]},{"content":"log1pf Function","pos":[11998,12013]},{"content":"Calculates the base-e logarithm of 1 plus the argument","pos":[12080,12134]},{"content":"log2 Function","pos":[12140,12153]},{"content":"Overloaded.","pos":[12218,12229]},{"content":"Calculates the base-2 logarithm of the argument","pos":[12230,12277]},{"content":"log2f Function","pos":[12283,12297]},{"content":"Calculates the base-2 logarithm of the argument","pos":[12363,12410]},{"content":"logb Function","pos":[12416,12429]},{"content":"Overloaded.","pos":[12494,12505]},{"content":"Extracts the exponent of _X, as a signed integer value in floating-point format","pos":[12506,12585]},{"content":"logbf Function","pos":[12591,12605]},{"content":"Extracts the exponent of _X, as a signed integer value in floating-point format","pos":[12671,12750]},{"content":"logf Function","pos":[12756,12769]},{"content":"Calculates the base-e logarithm of the argument","pos":[12834,12881]},{"content":"modf Function","pos":[12887,12900]},{"content":"Overloaded.","pos":[12965,12976]},{"content":"Splits _X into fractional and integer parts.","pos":[12977,13021]},{"content":"modff Function","pos":[13027,13041]},{"content":"Splits _X into fractional and integer parts.","pos":[13107,13151]},{"content":"nan Function","pos":[13157,13169]},{"content":"Returns a quiet NaN","pos":[13233,13252]},{"content":"nanf Function","pos":[13258,13271]},{"content":"Returns a quiet NaN","pos":[13336,13355]},{"content":"nearbyint Function","pos":[13361,13379]},{"content":"Overloaded.","pos":[13449,13460]},{"content":"Rounds the argument to an integer value in floating-point format, using the current rounding direction.","pos":[13461,13564]},{"content":"nearbyintf Function","pos":[13570,13589]},{"content":"Rounds the argument to an integer value in floating-point format, using the current rounding direction.","pos":[13660,13763]},{"content":"nextafter Function","pos":[13769,13787]},{"content":"Overloaded.","pos":[13857,13868]},{"content":"Determine the next representable value, in the type of the function, after _X in the direction of _Y","pos":[13869,13969]},{"content":"nextafterf Function","pos":[13975,13994]},{"content":"Determine the next representable value, in the type of the function, after _X in the direction of _Y","pos":[14065,14165]},{"content":"phi Function","pos":[14171,14183]},{"content":"Overloaded.","pos":[14247,14258]},{"content":"Returns the cumulative distribution function of the argument","pos":[14259,14319]},{"content":"phif Function","pos":[14325,14338]},{"content":"Returns the cumulative distribution function of the argument","pos":[14403,14463]},{"content":"pow Function","pos":[14469,14481]},{"content":"Overloaded.","pos":[14545,14556]},{"content":"Calculates _X raised to the power of _Y","pos":[14557,14596]},{"content":"powf Function","pos":[14602,14615]},{"content":"Calculates _X raised to the power of _Y","pos":[14680,14719]},{"content":"probit Function","pos":[14725,14740]},{"content":"Overloaded.","pos":[14807,14818]},{"content":"Returns the inverse cumulative distribution function of the argument","pos":[14819,14887]},{"content":"probitf Function","pos":[14893,14909]},{"content":"Returns the inverse cumulative distribution function of the argument","pos":[14977,15045]},{"content":"rcbrt Function","pos":[15051,15065]},{"content":"Overloaded.","pos":[15131,15142]},{"content":"Returns the reciprocal of the cube root of the argument","pos":[15143,15198]},{"content":"rcbrtf Function","pos":[15204,15219]},{"content":"Returns the reciprocal of the cube root of the argument","pos":[15286,15341]},{"content":"remainder Function","pos":[15347,15365]},{"content":"Overloaded.","pos":[15435,15446]},{"content":"Computes the remainder: _X REM _Y","pos":[15447,15480]},{"content":"remainderf Function","pos":[15486,15505]},{"content":"Computes the remainder: _X REM _Y","pos":[15576,15609]},{"content":"remquo Function","pos":[15615,15630]},{"content":"Overloaded.","pos":[15697,15708]},{"content":"Computes the same remainder as _X REM _Y.","pos":[15709,15750]},{"content":"Also calculates the lower 23 bits of the integral quotient _X/_Y, and gives that value the same sign as _X/_Y.","pos":[15751,15861]},{"content":"It stores this signed value in the integer pointed to by _Quo.","pos":[15862,15924]},{"content":"remquof Function","pos":[15930,15946]},{"content":"Computes the same remainder as _X REM _Y.","pos":[16014,16055]},{"content":"Also calculates the lower 23 bits of the integral quotient _X/_Y, and gives that value the same sign as _X/_Y.","pos":[16056,16166]},{"content":"It stores this signed value in the integer pointed to by _Quo.","pos":[16167,16229]},{"content":"round Function","pos":[16235,16249]},{"content":"Overloaded.","pos":[16315,16326]},{"content":"Rounds _X to the nearest integer","pos":[16327,16359]},{"content":"roundf Function","pos":[16365,16380]},{"content":"Rounds _X to the nearest integer","pos":[16447,16479]},{"content":"rsqrt Function","pos":[16485,16499]},{"content":"Overloaded.","pos":[16565,16576]},{"content":"Returns the reciprocal of the square root of the argument","pos":[16577,16634]},{"content":"rsqrtf Function","pos":[16640,16655]},{"content":"Returns the reciprocal of the square root of the argument","pos":[16722,16779]},{"content":"scalb Function","pos":[16785,16799]},{"content":"Overloaded.","pos":[16865,16876]},{"content":"Multiplies _X by FLT_RADIX to the power _Y","pos":[16877,16919]},{"content":"scalbf Function","pos":[16925,16940]},{"content":"Multiplies _X by FLT_RADIX to the power _Y","pos":[17007,17049]},{"content":"scalbn Function","pos":[17055,17070]},{"content":"Overloaded.","pos":[17137,17148]},{"content":"Multiplies _X by FLT_RADIX to the power _Y","pos":[17149,17191]},{"content":"scalbnf Function","pos":[17197,17213]},{"content":"Multiplies _X by FLT_RADIX to the power _Y","pos":[17281,17323]},{"content":"signbit Function","pos":[17329,17345]},{"content":"Overloaded.","pos":[17413,17424]},{"content":"Determines whether the sign of _X is negative","pos":[17425,17470]},{"content":"signbitf Function","pos":[17476,17493]},{"content":"Determines whether the sign of _X is negative","pos":[17562,17607]},{"content":"sin Function","pos":[17613,17625]},{"content":"Overloaded.","pos":[17689,17700]},{"content":"Calculates the sine value of the argument","pos":[17701,17742]},{"content":"sincos Function","pos":[17748,17763]},{"content":"Overloaded.","pos":[17830,17841]},{"content":"Calculates sine and cosine value of _X","pos":[17842,17880]},{"content":"sincosf Function","pos":[17886,17902]},{"content":"Calculates sine and cosine value of _X","pos":[17970,18008]},{"content":"sinf Function","pos":[18014,18027]},{"content":"Calculates the sine value of the argument","pos":[18092,18133]},{"content":"sinh Function","pos":[18139,18152]},{"content":"Overloaded.","pos":[18217,18228]},{"content":"Calculates the hyperbolic sine value of the argument","pos":[18229,18281]},{"content":"sinhf Function","pos":[18287,18301]},{"content":"Calculates the hyperbolic sine value of the argument","pos":[18367,18419]},{"content":"sinpi Function","pos":[18425,18439]},{"content":"Overloaded.","pos":[18505,18516]},{"content":"Calculates the sine value of pi * _X","pos":[18517,18553]},{"content":"sinpif Function","pos":[18559,18574]},{"content":"Calculates the sine value of pi * _X","pos":[18641,18677]},{"content":"sqrt Function","pos":[18683,18696]},{"content":"Overloaded.","pos":[18761,18772]},{"content":"Calculates the squre root of the argument","pos":[18773,18814]},{"content":"sqrtf Function","pos":[18820,18834]},{"content":"Calculates the squre root of the argument","pos":[18900,18941]},{"content":"tan Function","pos":[18947,18959]},{"content":"Overloaded.","pos":[19023,19034]},{"content":"Calculates the tangent value of the argument","pos":[19035,19079]},{"content":"tanf Function","pos":[19085,19098]},{"content":"Calculates the tangent value of the argument","pos":[19163,19207]},{"content":"tanh Function","pos":[19213,19226]},{"content":"Overloaded.","pos":[19291,19302]},{"content":"Calculates the hyperbolic tangent value of the argument","pos":[19303,19358]},{"content":"tanhf Function","pos":[19364,19378]},{"content":"Calculates the hyperbolic tangent value of the argument","pos":[19444,19499]},{"content":"tanpi Function","pos":[19505,19519]},{"content":"Overloaded.","pos":[19585,19596]},{"content":"Calculates the tangent value of pi * _X","pos":[19597,19636]},{"content":"tanpif Function","pos":[19642,19657]},{"content":"Calculates the tangent value of pi * _X","pos":[19724,19763]},{"content":"tgamma Function","pos":[19769,19784]},{"content":"Overloaded.","pos":[19851,19862]},{"content":"Computes the gamma function of _X","pos":[19863,19896]},{"content":"tgammaf Function","pos":[19902,19918]},{"content":"Computes the gamma function of _X","pos":[19986,20019]},{"content":"trunc Function","pos":[20025,20039]},{"content":"Overloaded.","pos":[20105,20116]},{"content":"Truncates the argument to the integer component","pos":[20117,20164]},{"content":"truncf Function","pos":[20170,20185]},{"content":"Truncates the argument to the integer component","pos":[20252,20299]},{"content":"Requirements","pos":[20309,20321]},{"pos":[20325,20347],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> amp_math.h","source":"**Header:** amp_math.h"},{"pos":[20354,20380],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> Concurrency","source":"**Namespace:** Concurrency"},{"content":"See Also","pos":[20389,20397]},{"content":"Concurrency Namespace (C++ AMP)","pos":[20402,20433]}],"content":"---\ntitle: \"Concurrency::precise_math Namespace | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"amp_math/Concurrency::precise_math\"\ndev_langs: \n  - \"C++\"\nms.assetid: ba653308-dc28-4384-b2fd-6cd718a72f91\ncaps.latest.revision: 6\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Concurrency::precise_math Namespace\nFunctions in the `precise_math` namespace are C99 compliant. Both single precision and double precision versions of each function are included. For example, `acos` is the double-precision version and `acosf` is the single-precision version. These functions, including the single-precision functions, require extended double-precision support on the accelerator. You can use the [accelerator::supports_double_precision Data Member](accelerator-class.md#supports_double_precision) to determine if you can run these functions on a specific accelerator. \n\n  \n## Syntax  \n  \n```cpp  \nnamespace precise_math;  \n```  \n  \n#### Parameters  \n  \n## Members  \n  \n### Functions  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[acos Function](concurrency-precise-math-namespace-functions.md#acos_function)|Overloaded. Calculates the arccosine of the argument|  \n|[acosf Function](concurrency-precise-math-namespace-functions.md#acosf_function)|Calculates the arccosine of the argument|  \n|[acosh Function](concurrency-precise-math-namespace-functions.md#acosh_function)|Overloaded. Calculates the inverse hyperbolic cosine of the argument|  \n|[acoshf Function](concurrency-precise-math-namespace-functions.md#acoshf_function)|Calculates the inverse hyperbolic cosine of the argument|  \n|[asin Function](concurrency-precise-math-namespace-functions.md#asin_function)|Overloaded. Calculates the arcsine of the argument|  \n|[asinf Function](concurrency-precise-math-namespace-functions.md#asinf_function)|Calculates the arcsine of the argument|  \n|[asinh Function](concurrency-precise-math-namespace-functions.md#asinh_function)|Overloaded. Calculates the inverse hyperbolic sine of the argument|  \n|[asinhf Function](concurrency-precise-math-namespace-functions.md#asinhf_function)|Calculates the inverse hyperbolic sine of the argument|  \n|[atan Function](concurrency-precise-math-namespace-functions.md#atan_function)|Overloaded. Calculates the arctangent of the argument|  \n|[atan2 Function](concurrency-precise-math-namespace-functions.md#atan2_function)|Overloaded. Calculates the arctangent of _Y/_X|  \n|[atan2f Function](concurrency-precise-math-namespace-functions.md#atan2f_function)|Calculates the arctangent of _Y/_X|  \n|[atanf Function](concurrency-precise-math-namespace-functions.md#atanf_function)|Calculates the arctangent of the argument|  \n|[atanh Function](concurrency-precise-math-namespace-functions.md#atanh_function)|Overloaded. Calculates the inverse hyperbolic tangent of the argument|  \n|[atanhf Function](concurrency-precise-math-namespace-functions.md#atanhf_function)|Calculates the inverse hyperbolic tangent of the argument|  \n|[cbrt Function](concurrency-precise-math-namespace-functions.md#cbrt_function)|Overloaded. Computes the real cube root of the argument|  \n|[cbrtf Function](concurrency-precise-math-namespace-functions.md#cbrtf_function)|Computes the real cube root of the argument|  \n|[ceil Function](concurrency-precise-math-namespace-functions.md#ceil_function)|Overloaded. Calculates the ceiling of the argument|  \n|[ceilf Function](concurrency-precise-math-namespace-functions.md#ceilf_function)|Calculates the ceiling of the argument|  \n|[copysign Function](concurrency-precise-math-namespace-functions.md#copysign_function)|Overloaded. Produces a value with the magnitude of _X and the sign of _Y|  \n|[copysignf Function](concurrency-precise-math-namespace-functions.md#copysignf_function)|Produces a value with the magnitude of _X and the sign of _Y|  \n|[cos Function](concurrency-precise-math-namespace-functions.md#cos_function)|Overloaded. Calculates the cosine of the argument|  \n|[cosf Function](concurrency-precise-math-namespace-functions.md#cosf_function)|Calculates the cosine of the argument|  \n|[cosh Function](concurrency-precise-math-namespace-functions.md#cosh_function)|Overloaded. Calculates the hyperbolic cosine value of the argument|  \n|[coshf Function](concurrency-precise-math-namespace-functions.md#coshf_function)|Calculates the hyperbolic cosine value of the argument|  \n|[cospi Function](concurrency-precise-math-namespace-functions.md#cospi_function)|Overloaded. Calculates the cosine value of pi * _X|  \n|[cospif Function](concurrency-precise-math-namespace-functions.md#cospif_function)|Calculates the cosine value of pi * _X|  \n|[erf Function](concurrency-precise-math-namespace-functions.md#erf_function)|Overloaded. Computes the error function of _X|  \n|[erfc Function](concurrency-precise-math-namespace-functions.md#erfc_function)|Overloaded. Computes the complementary error function of _X|  \n|[erfcf Function](concurrency-precise-math-namespace-functions.md#erfcf_function)|Computes the complementary error function of _X|  \n|[erfcinv Function](concurrency-precise-math-namespace-functions.md#erfcinv_function)|Overloaded. Computes the inverse complementary error function of _X|  \n|[erfcinvf Function](concurrency-precise-math-namespace-functions.md#erfcinvf_function)|Computes the inverse complementary error function of _X|  \n|[erff Function](concurrency-precise-math-namespace-functions.md#erff_function)|Computes the error function of _X|  \n|[erfinv Function](concurrency-precise-math-namespace-functions.md#erfinv_function)|Overloaded. Computes the inverse error function of _X|  \n|[erfinvf Function](concurrency-precise-math-namespace-functions.md#erfinvf_function)|Computes the inverse error function of _X|  \n|[exp Function](concurrency-precise-math-namespace-functions.md#exp_function)|Overloaded. Calculates the base-e exponential of the argument|  \n|[exp10 Function](concurrency-precise-math-namespace-functions.md#exp10_function)|Overloaded. Calculates the base-10 exponential of the argument|  \n|[exp10f Function](concurrency-precise-math-namespace-functions.md#exp10f_function)|Calculates the base-10 exponential of the argument|  \n|[exp2 Function](concurrency-precise-math-namespace-functions.md#exp2_function)|Overloaded. Calculates the base-2 exponential of the argument|  \n|[exp2f Function](concurrency-precise-math-namespace-functions.md#exp2f_function)|Calculates the base-2 exponential of the argument|  \n|[expf Function](concurrency-precise-math-namespace-functions.md#expf_function)|Calculates the base-e exponential of the argument|  \n|[expm1 Function](concurrency-precise-math-namespace-functions.md#expm1_function)|Overloaded. Calculates the base-e exponential of the argument, minus 1|  \n|[expm1f Function](concurrency-precise-math-namespace-functions.md#expm1f_function)|Calculates the base-e exponential of the argument, minus 1|  \n|[fabs Function](concurrency-precise-math-namespace-functions.md#fabs_function)|Overloaded. Returns the absolute value of the argument|  \n|[fabsf Function](concurrency-precise-math-namespace-functions.md#fabsf_function)|Returns the absolute value of the argument|  \n|[fdim Function](concurrency-precise-math-namespace-functions.md#fdim_function)|Overloaded. Determines the positive difference between the arguments|  \n|[fdimf Function](concurrency-precise-math-namespace-functions.md#fdimf_function)|Determines the positive difference between the arguments|  \n|[floor Function](concurrency-precise-math-namespace-functions.md#floor_function)|Overloaded. Calculates the floor of the argument|  \n|[floorf Function](concurrency-precise-math-namespace-functions.md#floorf_function)|Calculates the floor of the argument|  \n|[fma Function](concurrency-precise-math-namespace-functions.md#fma_function)|Overloaded. Compute (_X * _Y) + _Z, rounded as one ternary operation|  \n|[fmaf Function](concurrency-precise-math-namespace-functions.md#fmaf_function)|Compute (_X * _Y) + _Z, rounded as one ternary operation|  \n|[fmax Function](concurrency-precise-math-namespace-functions.md#fmax_function)|Overloaded. Determine the maximum numeric value of the arguments|  \n|[fmaxf Function](concurrency-precise-math-namespace-functions.md#fmaxf_function)|Determine the maximum numeric value of the arguments|  \n|[fmin Function](concurrency-precise-math-namespace-functions.md#fmin_function)|Overloaded. Determine the minimum numeric value of the arguments|  \n|[fminf Function](concurrency-precise-math-namespace-functions.md#fminf_function)|Determine the minimum numeric value of the arguments|  \n|[fmod Function (C++ AMP)](concurrency-precise-math-namespace-functions.md#fmod_function)|Overloaded. Calculates the floating-point remainder of _X/_Y|  \n|[fmodf Function](concurrency-precise-math-namespace-functions.md#fmodf_function)|Calculates the floating-point remainder of _X/_Y|  \n|[fpclassify Function](concurrency-precise-math-namespace-functions.md#fpclassify_function)|Overloaded. Classifies the argument value as NaN, infinite, normal, subnormal, zero|  \n|[frexp Function](concurrency-precise-math-namespace-functions.md#frexp_function)|Overloaded. Gets the mantissa and exponent of _X|  \n|[frexpf Function](concurrency-precise-math-namespace-functions.md#frexpf_function)|Gets the mantissa and exponent of _X|  \n|[hypot Function](concurrency-precise-math-namespace-functions.md#hypot_function)|Overloaded. Computes the square root of the sum of the squares of _X and _Y|  \n|[hypotf Function](concurrency-precise-math-namespace-functions.md#hypotf_function)|Computes the square root of the sum of the squares of _X and _Y|  \n|[ilogb Function](concurrency-precise-math-namespace-functions.md#ilogb_function)|Overloaded. Extract the exponent of _X as a signed int value|  \n|[ilogbf Function](concurrency-precise-math-namespace-functions.md#ilogbf_function)|Extract the exponent of _X as a signed int value|  \n|[isfinite Function](concurrency-precise-math-namespace-functions.md#isfinite_function)|Overloaded. Determines whether the argument has a finite value|  \n|[isinf Function](concurrency-precise-math-namespace-functions.md#isinf_function)|Overloaded. Determines whether the argument is an infinity|  \n|[isnan Function](concurrency-precise-math-namespace-functions.md#isnan_function)|Overloaded. Determines whether the argument is a NaN|  \n|[isnormal Function](concurrency-precise-math-namespace-functions.md#isnormal_function)|Overloaded. Determines whether the argument is a normal|  \n|[ldexp Function](concurrency-precise-math-namespace-functions.md#ldexp_function)|Overloaded. Computes a real number from the mantissa and exponent|  \n|[ldexpf Function](concurrency-precise-math-namespace-functions.md#ldexpf_function)|Computes a real number from the mantissa and exponent|  \n|[lgamma Function](concurrency-precise-math-namespace-functions.md#lgamma_function)|Overloaded. Computes the natural logarithm of the absolute value of gamma of the argument|  \n|[lgammaf Function](concurrency-precise-math-namespace-functions.md#lgammaf_function)|Computes the natural logarithm of the absolute value of gamma of the argument|  \n|[log Function](concurrency-precise-math-namespace-functions.md#log_function)|Overloaded. Calculates the base-e logarithm of the argument|  \n|[log10 Function](concurrency-precise-math-namespace-functions.md#log10_function)|Overloaded. Calculates the base-10 logarithm of the argument|  \n|[log10f Function](concurrency-precise-math-namespace-functions.md#log10f_function)|Calculates the base-10 logarithm of the argument|  \n|[log1p Function](concurrency-precise-math-namespace-functions.md#log1p_function)|Overloaded. Calculates the base-e logarithm of 1 plus the argument|  \n|[log1pf Function](concurrency-precise-math-namespace-functions.md#log1pf_function)|Calculates the base-e logarithm of 1 plus the argument|  \n|[log2 Function](concurrency-precise-math-namespace-functions.md#log2_function)|Overloaded. Calculates the base-2 logarithm of the argument|  \n|[log2f Function](concurrency-precise-math-namespace-functions.md#log2f_function)|Calculates the base-2 logarithm of the argument|  \n|[logb Function](concurrency-precise-math-namespace-functions.md#logb_function)|Overloaded. Extracts the exponent of _X, as a signed integer value in floating-point format|  \n|[logbf Function](concurrency-precise-math-namespace-functions.md#logbf_function)|Extracts the exponent of _X, as a signed integer value in floating-point format|  \n|[logf Function](concurrency-precise-math-namespace-functions.md#logf_function)|Calculates the base-e logarithm of the argument|  \n|[modf Function](concurrency-precise-math-namespace-functions.md#modf_function)|Overloaded. Splits _X into fractional and integer parts.|  \n|[modff Function](concurrency-precise-math-namespace-functions.md#modff_function)|Splits _X into fractional and integer parts.|  \n|[nan Function](concurrency-precise-math-namespace-functions.md#nan_function)|Returns a quiet NaN|  \n|[nanf Function](concurrency-precise-math-namespace-functions.md#nanf_function)|Returns a quiet NaN|  \n|[nearbyint Function](concurrency-precise-math-namespace-functions.md#nearbyint_function)|Overloaded. Rounds the argument to an integer value in floating-point format, using the current rounding direction.|  \n|[nearbyintf Function](concurrency-precise-math-namespace-functions.md#nearbyintf_function)|Rounds the argument to an integer value in floating-point format, using the current rounding direction.|  \n|[nextafter Function](concurrency-precise-math-namespace-functions.md#nextafter_function)|Overloaded. Determine the next representable value, in the type of the function, after _X in the direction of _Y|  \n|[nextafterf Function](concurrency-precise-math-namespace-functions.md#nextafterf_function)|Determine the next representable value, in the type of the function, after _X in the direction of _Y|  \n|[phi Function](concurrency-precise-math-namespace-functions.md#phi_function)|Overloaded. Returns the cumulative distribution function of the argument|  \n|[phif Function](concurrency-precise-math-namespace-functions.md#phif_function)|Returns the cumulative distribution function of the argument|  \n|[pow Function](concurrency-precise-math-namespace-functions.md#pow_function)|Overloaded. Calculates _X raised to the power of _Y|  \n|[powf Function](concurrency-precise-math-namespace-functions.md#powf_function)|Calculates _X raised to the power of _Y|  \n|[probit Function](concurrency-precise-math-namespace-functions.md#probit_function)|Overloaded. Returns the inverse cumulative distribution function of the argument|  \n|[probitf Function](concurrency-precise-math-namespace-functions.md#probitf_function)|Returns the inverse cumulative distribution function of the argument|  \n|[rcbrt Function](concurrency-precise-math-namespace-functions.md#rcbrt_function)|Overloaded. Returns the reciprocal of the cube root of the argument|  \n|[rcbrtf Function](concurrency-precise-math-namespace-functions.md#rcbrtf_function)|Returns the reciprocal of the cube root of the argument|  \n|[remainder Function](concurrency-precise-math-namespace-functions.md#remainder_function)|Overloaded. Computes the remainder: _X REM _Y|  \n|[remainderf Function](concurrency-precise-math-namespace-functions.md#remainderf_function)|Computes the remainder: _X REM _Y|  \n|[remquo Function](concurrency-precise-math-namespace-functions.md#remquo_function)|Overloaded. Computes the same remainder as _X REM _Y. Also calculates the lower 23 bits of the integral quotient _X/_Y, and gives that value the same sign as _X/_Y. It stores this signed value in the integer pointed to by _Quo.|  \n|[remquof Function](concurrency-precise-math-namespace-functions.md#remquof_function)|Computes the same remainder as _X REM _Y. Also calculates the lower 23 bits of the integral quotient _X/_Y, and gives that value the same sign as _X/_Y. It stores this signed value in the integer pointed to by _Quo.|  \n|[round Function](concurrency-precise-math-namespace-functions.md#round_function)|Overloaded. Rounds _X to the nearest integer|  \n|[roundf Function](concurrency-precise-math-namespace-functions.md#roundf_function)|Rounds _X to the nearest integer|  \n|[rsqrt Function](concurrency-precise-math-namespace-functions.md#rsqrt_function)|Overloaded. Returns the reciprocal of the square root of the argument|  \n|[rsqrtf Function](concurrency-precise-math-namespace-functions.md#rsqrtf_function)|Returns the reciprocal of the square root of the argument|  \n|[scalb Function](concurrency-precise-math-namespace-functions.md#scalb_function)|Overloaded. Multiplies _X by FLT_RADIX to the power _Y|  \n|[scalbf Function](concurrency-precise-math-namespace-functions.md#scalbf_function)|Multiplies _X by FLT_RADIX to the power _Y|  \n|[scalbn Function](concurrency-precise-math-namespace-functions.md#scalbn_function)|Overloaded. Multiplies _X by FLT_RADIX to the power _Y|  \n|[scalbnf Function](concurrency-precise-math-namespace-functions.md#scalbnf_function)|Multiplies _X by FLT_RADIX to the power _Y|  \n|[signbit Function](concurrency-precise-math-namespace-functions.md#signbit_function)|Overloaded. Determines whether the sign of _X is negative|  \n|[signbitf Function](concurrency-precise-math-namespace-functions.md#signbitf_function)|Determines whether the sign of _X is negative|  \n|[sin Function](concurrency-precise-math-namespace-functions.md#sin_function)|Overloaded. Calculates the sine value of the argument|  \n|[sincos Function](concurrency-precise-math-namespace-functions.md#sincos_function)|Overloaded. Calculates sine and cosine value of _X|  \n|[sincosf Function](concurrency-precise-math-namespace-functions.md#sincosf_function)|Calculates sine and cosine value of _X|  \n|[sinf Function](concurrency-precise-math-namespace-functions.md#sinf_function)|Calculates the sine value of the argument|  \n|[sinh Function](concurrency-precise-math-namespace-functions.md#sinh_function)|Overloaded. Calculates the hyperbolic sine value of the argument|  \n|[sinhf Function](concurrency-precise-math-namespace-functions.md#sinhf_function)|Calculates the hyperbolic sine value of the argument|  \n|[sinpi Function](concurrency-precise-math-namespace-functions.md#sinpi_function)|Overloaded. Calculates the sine value of pi * _X|  \n|[sinpif Function](concurrency-precise-math-namespace-functions.md#sinpif_function)|Calculates the sine value of pi * _X|  \n|[sqrt Function](concurrency-precise-math-namespace-functions.md#sqrt_function)|Overloaded. Calculates the squre root of the argument|  \n|[sqrtf Function](concurrency-precise-math-namespace-functions.md#sqrtf_function)|Calculates the squre root of the argument|  \n|[tan Function](concurrency-precise-math-namespace-functions.md#tan_function)|Overloaded. Calculates the tangent value of the argument|  \n|[tanf Function](concurrency-precise-math-namespace-functions.md#tanf_function)|Calculates the tangent value of the argument|  \n|[tanh Function](concurrency-precise-math-namespace-functions.md#tanh_function)|Overloaded. Calculates the hyperbolic tangent value of the argument|  \n|[tanhf Function](concurrency-precise-math-namespace-functions.md#tanhf_function)|Calculates the hyperbolic tangent value of the argument|  \n|[tanpi Function](concurrency-precise-math-namespace-functions.md#tanpi_function)|Overloaded. Calculates the tangent value of pi * _X|  \n|[tanpif Function](concurrency-precise-math-namespace-functions.md#tanpif_function)|Calculates the tangent value of pi * _X|  \n|[tgamma Function](concurrency-precise-math-namespace-functions.md#tgamma_function)|Overloaded. Computes the gamma function of _X|  \n|[tgammaf Function](concurrency-precise-math-namespace-functions.md#tgammaf_function)|Computes the gamma function of _X|  \n|[trunc Function](concurrency-precise-math-namespace-functions.md#trunc_function)|Overloaded. Truncates the argument to the integer component|  \n|[truncf Function](concurrency-precise-math-namespace-functions.md#truncf_function)|Truncates the argument to the integer component|  \n  \n## Requirements  \n **Header:** amp_math.h  \n  \n **Namespace:** Concurrency  \n  \n## See Also  \n [Concurrency Namespace (C++ AMP)](concurrency-namespace-cpp-amp.md)\n"}