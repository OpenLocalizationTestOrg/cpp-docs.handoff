{"nodes":[{"pos":[12,55],"content":"affinity_partitioner Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"affinity_partitioner Class | Microsoft Docs","pos":[0,43]}]},{"content":"affinity_partitioner Class","pos":[648,674]},{"content":"The <ph id=\"ph1\">`affinity_partitioner`</ph> class is similar to the <ph id=\"ph2\">`static_partitioner`</ph> class, but it improves cache affinity by its choice of mapping subranges to worker threads.","pos":[675,838],"source":"The `affinity_partitioner` class is similar to the `static_partitioner` class, but it improves cache affinity by its choice of mapping subranges to worker threads."},{"content":"It can improve performance significantly when a loop is re-executed over the same data set, and the data fits in cache.","pos":[839,958]},{"content":"Note that the same <ph id=\"ph1\">`affinity_partitioner`</ph> object must be used with subsequent iterations of a parallel loop that is executed over a particular data set, to benefit from data locality.","pos":[959,1142],"source":" Note that the same `affinity_partitioner` object must be used with subsequent iterations of a parallel loop that is executed over a particular data set, to benefit from data locality."},{"content":"Syntax","pos":[1151,1157]},{"content":"Members","pos":[1207,1214]},{"content":"Public Constructors","pos":[1224,1243]},{"content":"Name","pos":[1250,1254]},{"content":"Description","pos":[1255,1266]},{"content":"affinity_partitioner::affinity_partitioner Constructor","pos":[1305,1359]},{"pos":[1368,1412],"content":"Constructs an <ph id=\"ph1\">`affinity_partitioner`</ph> object.","source":"Constructs an `affinity_partitioner` object."},{"content":"affinity_partitioner::~affinity_partitioner Destructor","pos":[1418,1472]},{"pos":[1481,1523],"content":"Destroys an <ph id=\"ph1\">`affinity_partitioner`</ph> object.","source":"Destroys an `affinity_partitioner` object."},{"content":"Inheritance Hierarchy","pos":[1533,1554]},{"content":"Requirements","pos":[1589,1601]},{"pos":[1605,1622],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> ppl.h","source":"**Header:** ppl.h"},{"pos":[1629,1655],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> concurrency","source":"**Namespace:** concurrency"},{"pos":[1686,1740],"content":"affinity_partitioner::~affinity_partitioner Destructor"},{"pos":[1744,1786],"content":"Destroys an <ph id=\"ph1\">`affinity_partitioner`</ph> object.","source":"Destroys an `affinity_partitioner` object."},{"pos":[1855,1909],"content":"affinity_partitioner::affinity_partitioner Constructor"},{"pos":[1913,1957],"content":"Constructs an <ph id=\"ph1\">`affinity_partitioner`</ph> object.","source":"Constructs an `affinity_partitioner` object."},{"content":"See Also","pos":[2003,2011]},{"content":"concurrency Namespace","pos":[2016,2037]}],"content":"---\ntitle: \"affinity_partitioner Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"ppl/concurrency::affinity_partitioner\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"affinity_partitioner class\"\nms.assetid: 31bf7bb1-bd01-491c-9760-d9d60edfccad\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# affinity_partitioner Class\nThe `affinity_partitioner` class is similar to the `static_partitioner` class, but it improves cache affinity by its choice of mapping subranges to worker threads. It can improve performance significantly when a loop is re-executed over the same data set, and the data fits in cache. Note that the same `affinity_partitioner` object must be used with subsequent iterations of a parallel loop that is executed over a particular data set, to benefit from data locality.  \n  \n## Syntax  \n  \n```\nclass affinity_partitioner;\n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[affinity_partitioner::affinity_partitioner Constructor](#ctor)|Constructs an `affinity_partitioner` object.|  \n|[affinity_partitioner::~affinity_partitioner Destructor](#dtor)|Destroys an `affinity_partitioner` object.|  \n  \n## Inheritance Hierarchy  \n `affinity_partitioner`  \n  \n## Requirements  \n **Header:** ppl.h  \n  \n **Namespace:** concurrency  \n  \n##  <a name=\"dtor\"></a>  affinity_partitioner::~affinity_partitioner Destructor  \n Destroys an `affinity_partitioner` object.  \n  \n```\n~affinity_partitioner();\n```  \n  \n##  <a name=\"ctor\"></a>  affinity_partitioner::affinity_partitioner Constructor  \n Constructs an `affinity_partitioner` object.  \n  \n```\naffinity_partitioner();\n```  \n  \n## See Also  \n [concurrency Namespace](concurrency-namespace.md)\n"}