{"nodes":[{"pos":[12,47],"content":"exp2, exp2f, exp2l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"exp2, exp2f, exp2l | Microsoft Docs","pos":[0,35]}]},{"pos":[1056,1074],"content":"exp2, exp2f, exp2l","linkify":"exp2, exp2f, exp2l","nodes":[{"content":"exp2, exp2f, exp2l","pos":[0,18]}]},{"content":"Computes 2 raised to the specified value (ie, 2ˣ ).","pos":[1075,1126]},{"pos":[1135,1141],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1395,1405],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`x`</ph>","pos":[1409,1417],"source":"[in] `x`"},{"content":"The value of the exponent.","pos":[1421,1447]},{"pos":[1456,1468],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"If successful, returns the base-2 exponent of <ph id=\"ph1\">`x`</ph> (2ˣ) .","pos":[1472,1528],"source":"If successful, returns the base-2 exponent of `x` (2ˣ) ."},{"content":"Otherwise, may return one of the following values:","pos":[1529,1579]},{"content":"Issue","pos":[1586,1591]},{"content":"Return","pos":[1592,1598]},{"pos":[1632,1640],"content":"<ph id=\"ph1\">`x`</ph> = ±0","source":"`x` = ±0"},{"content":"1","pos":[1641,1642]},{"pos":[1647,1662],"content":"<ph id=\"ph1\">`x`</ph> = -INFINITY","source":"`x` = -INFINITY"},{"content":"+0","pos":[1663,1665]},{"pos":[1670,1685],"content":"<ph id=\"ph1\">`x`</ph> = +INFINITY","source":"`x` = +INFINITY"},{"content":"+INFINITY","pos":[1686,1695]},{"pos":[1700,1709],"content":"<ph id=\"ph1\">`x`</ph> = NaN","source":"`x` = NaN"},{"content":"NaN","pos":[1710,1713]},{"content":"Overflow range error","pos":[1718,1738]},{"content":"+HUGE_VAL, +HUGE_VALF, or +HUGE_VALL","pos":[1739,1775]},{"content":"Underflow range error","pos":[1780,1801]},{"content":"correct result, after rounding","pos":[1802,1832]},{"pos":[1840,1933],"content":"Errors are reported as specified in <bpt id=\"p1\">[</bpt>_matherr<ept id=\"p1\">](../../c-runtime-library/reference/matherr.md)</ept>.","source":"Errors are reported as specified in [_matherr](../../c-runtime-library/reference/matherr.md)."},{"pos":[1942,1949],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Because C++ allows overloading, you can call overloads of <ph id=\"ph1\">`exp2`</ph> that take and return float and long double types.","pos":[1953,2067],"source":"Because C++ allows overloading, you can call overloads of `exp2` that take and return float and long double types."},{"content":"In a C program, <ph id=\"ph1\">`exp2`</ph> always takes and returns a double.","pos":[2068,2125],"source":" In a C program, `exp2` always takes and returns a double."},{"pos":[2134,2146],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[2153,2160]},{"content":"C header","pos":[2161,2169]},{"content":"C++ header","pos":[2170,2180]},{"pos":[2237,2273],"content":"<ph id=\"ph1\">`exp`</ph>,                <ph id=\"ph2\">`expf`</ph>, <ph id=\"ph3\">`expl`</ph>","source":"`exp`,                `expf`, `expl`"},{"content":"<ph id=\"ph1\">\\&lt;</ph>math.h&gt;","pos":[2274,2283],"source":"\\<math.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>cmath&gt;","pos":[2284,2292],"source":"\\<cmath>"},{"pos":[2300,2404],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[2413,2421],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Alphabetical Function Reference<ept id=\"p1\">](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)</ept><ph id=\"ph1\"> </ph>","pos":[2425,2533],"source":"[Alphabetical Function Reference](../../c-runtime-library/reference/crt-alphabetical-function-reference.md) "},{"content":"<bpt id=\"p1\"> [</bpt>exp, expf<ept id=\"p1\">](../../c-runtime-library/reference/exp-expf.md)</ept><ph id=\"ph1\"> </ph>","pos":[2536,2596],"source":" [exp, expf](../../c-runtime-library/reference/exp-expf.md) "},{"content":"<bpt id=\"p1\"> [</bpt>log2, log2f, log2l<ept id=\"p1\">](../../c-runtime-library/reference/log2-log2f-log2l.md)</ept>","pos":[2599,2675],"source":" [log2, log2f, log2l](../../c-runtime-library/reference/log2-log2f-log2l.md)"}],"content":"---\ntitle: \"exp2, exp2f, exp2l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"cpp\"\n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"exp2\"\n  - \"exp2f\"\n  - \"exp2l\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-math-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"exp2\"\n  - \"math/exp2\"\n  - \"exp2f\"\n  - \"math/exp2f\"\n  - \"exp2l\"\n  - \"math/exp2l\"\ndev_langs: \n  - \"C\"\n  - \"C++\"\nhelpviewer_keywords: \n  - \"exp2 function\"\n  - \"exp2f function\"\n  - \"exp2l function\"\nms.assetid: 526e3e10-201a-4610-a886-533f44ece344\ncaps.latest.revision: 13\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# exp2, exp2f, exp2l\nComputes 2 raised to the specified value (ie, 2ˣ ).  \n  \n## Syntax  \n  \n```  \ndouble exp2(  \n   double x  \n);  \n  \nfloat exp2(  \n   float x  \n);  // C++ only  \n  \nlong double exp2(  \n   long double x  \n); // C++ only  \n  \nfloat exp2f(  \n   float x  \n);  \n  \nlong double exp2l(  \n   long double x  \n);  \n  \n```  \n  \n#### Parameters  \n [in] `x`  \n The value of the exponent.  \n  \n## Return Value  \n If successful, returns the base-2 exponent of `x` (2ˣ) . Otherwise, may return one of the following values:  \n  \n|Issue|Return|  \n|-----------|------------|  \n|`x` = ±0|1|  \n|`x` = -INFINITY|+0|  \n|`x` = +INFINITY|+INFINITY|  \n|`x` = NaN|NaN|  \n|Overflow range error|+HUGE_VAL, +HUGE_VALF, or +HUGE_VALL|  \n|Underflow range error|correct result, after rounding|  \n  \n Errors are reported as specified in [_matherr](../../c-runtime-library/reference/matherr.md).  \n  \n## Remarks  \n Because C++ allows overloading, you can call overloads of `exp2` that take and return float and long double types. In a C program, `exp2` always takes and returns a double.  \n  \n## Requirements  \n  \n|Routine|C header|C++ header|  \n|-------------|--------------|------------------|  \n|`exp`,                `expf`, `expl`|\\<math.h>|\\<cmath>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## See Also  \n [Alphabetical Function Reference](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)   \n [exp, expf](../../c-runtime-library/reference/exp-expf.md)   \n [log2, log2f, log2l](../../c-runtime-library/reference/log2-log2f-log2l.md)"}