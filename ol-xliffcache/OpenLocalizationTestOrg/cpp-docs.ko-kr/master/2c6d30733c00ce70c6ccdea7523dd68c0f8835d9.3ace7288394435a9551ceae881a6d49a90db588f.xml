{"nodes":[{"pos":[12,71],"content":"Adding Multiple Views to a Single Document | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Adding Multiple Views to a Single Document | Microsoft Docs","pos":[0,59]}]},{"content":"Adding Multiple Views to a Single Document","pos":[727,769]},{"content":"In a single-document interface (SDI) application created with the Microsoft Foundation Class (MFC) Library, each document type is associated with a single view type.","pos":[770,935]},{"content":"In some cases, it is desirable to have the ability to switch the current view of a document with a new view.","pos":[936,1044]},{"pos":[1052,1278],"content":"[!TIP]\n For additional procedures on implementing multiple views for a single document, see [CDocument::AddView](../mfc/reference/cdocument-class.md#cdocument__addview) and the [COLLECT](../visual-cpp-samples.md) MFC sample.","leadings":["","> "],"nodes":[{"content":"For additional procedures on implementing multiple views for a single document, see <bpt id=\"p1\">[</bpt>CDocument::AddView<ept id=\"p1\">](../mfc/reference/cdocument-class.md#cdocument__addview)</ept> and the <bpt id=\"p2\">[</bpt>COLLECT<ept id=\"p2\">](../visual-cpp-samples.md)</ept> MFC sample.","pos":[8,224],"source":" For additional procedures on implementing multiple views for a single document, see [CDocument::AddView](../mfc/reference/cdocument-class.md#cdocument__addview) and the [COLLECT](../visual-cpp-samples.md) MFC sample."}]},{"pos":[1285,1447],"content":"You can implement this functionality by adding a new <ph id=\"ph1\">`CView`</ph>-derived class and additional code for switching the views dynamically to an existing MFC application.","source":"You can implement this functionality by adding a new `CView`-derived class and additional code for switching the views dynamically to an existing MFC application."},{"content":"The steps are as follows:","pos":[1454,1479]},{"content":"Modify the Existing Application Class","pos":[1490,1527]},{"content":"Create and Modify the New View Class","pos":[1574,1610]},{"content":"Create and Attach the New View","pos":[1644,1674]},{"content":"Implement the Switching Function","pos":[1709,1741]},{"content":"Add Support for Switching the View","pos":[1780,1814]},{"content":"The remainder of this topic assumes the following:","pos":[1848,1898]},{"pos":[1908,2036],"content":"The name of the <ph id=\"ph1\">`CWinApp`</ph>-derived object is <ph id=\"ph2\">`CMyWinApp`</ph>, and <ph id=\"ph3\">`CMyWinApp`</ph> is declared and defined in MYWINAPP.H and MYWINAPP.CPP.","source":"The name of the `CWinApp`-derived object is `CMyWinApp`, and `CMyWinApp` is declared and defined in MYWINAPP.H and MYWINAPP.CPP."},{"pos":[2057,2172],"content":"is the name of the new <ph id=\"ph1\">`CView`</ph>-derived object, and <ph id=\"ph2\">`CNewView`</ph> is declared and defined in NEWVIEW.H and NEWVIEW.CPP.","source":" is the name of the new `CView`-derived object, and `CNewView` is declared and defined in NEWVIEW.H and NEWVIEW.CPP."},{"pos":[2230,2267],"content":"Modify the Existing Application Class"},{"content":"For the application to switch between views, you need to modify the application class by adding member variables to store the views and a method to switch them.","pos":[2271,2431]},{"pos":[2438,2509],"content":"Add the following code to the declaration of <ph id=\"ph1\">`CMyWinApp`</ph> in MYWINAPP.H:","source":"Add the following code to the declaration of `CMyWinApp` in MYWINAPP.H:"},{"pos":[2527,2546],"content":"NVC_MFCDocViewSDI#1"},{"content":"The new member variables, <ph id=\"ph1\">`m_pOldView`</ph> and <ph id=\"ph2\">`m_pNewView`</ph>, point to the current view and the newly created one.","pos":[2626,2735],"source":"The new member variables, `m_pOldView` and `m_pNewView`, point to the current view and the newly created one."},{"content":"The new method (<ph id=\"ph1\">`SwitchView`</ph>) switches the views when requested by the user.","pos":[2736,2812],"source":" The new method (`SwitchView`) switches the views when requested by the user."},{"content":"The body of the method is discussed later in this topic in <bpt id=\"p1\">[</bpt>Implement the Switching Function<ept id=\"p1\">](#vcconswitchingfunctiona4)</ept>.","pos":[2813,2934],"source":" The body of the method is discussed later in this topic in [Implement the Switching Function](#vcconswitchingfunctiona4)."},{"pos":[2941,3118],"content":"The last modification to the application class requires including a new header file that defines a Windows message (<bpt id=\"p1\">**</bpt>WM_INITIALUPDATE<ept id=\"p1\">**</ept>) that is used in the switching function.","source":"The last modification to the application class requires including a new header file that defines a Windows message (**WM_INITIALUPDATE**) that is used in the switching function."},{"content":"Insert the following line in the include section of MYWINAPP.CPP:","pos":[3125,3190]},{"pos":[3208,3227],"content":"NVC_MFCDocViewSDI#2"},{"content":"Save your changes and continue to the next step.","pos":[3309,3357]},{"pos":[3402,3438],"content":"Create and Modify the New View Class"},{"content":"Creating the new view class is made easy by using the <bpt id=\"p1\">**</bpt>New Class<ept id=\"p1\">**</ept> command available from Class View.","pos":[3442,3544],"source":"Creating the new view class is made easy by using the **New Class** command available from Class View."},{"content":"The only requirement for this class is that it derives from <ph id=\"ph1\">`CView`</ph>.","pos":[3545,3613],"source":" The only requirement for this class is that it derives from `CView`."},{"content":"Add this new class to the application.","pos":[3614,3652]},{"content":"For specific information on adding a new class to the project, see <bpt id=\"p1\">[</bpt>Adding a Class<ept id=\"p1\">](../ide/adding-a-class-visual-cpp.md)</ept>.","pos":[3653,3774],"source":" For specific information on adding a new class to the project, see [Adding a Class](../ide/adding-a-class-visual-cpp.md)."},{"content":"Once you have added the class to the project, you need to change the accessibility of some view class members.","pos":[3781,3891]},{"content":"Modify NEWVIEW.H by changing the access specifier from <ph id=\"ph1\">`protected`</ph> to <bpt id=\"p1\">**</bpt>public<ept id=\"p1\">**</ept> for the constructor and destructor.","pos":[3898,4014],"source":"Modify NEWVIEW.H by changing the access specifier from `protected` to **public** for the constructor and destructor."},{"content":"This allows the class to be created and destroyed dynamically and to modify the view appearance before it is visible.","pos":[4015,4132]},{"content":"Save your changes and continue to the next step.","pos":[4139,4187]},{"pos":[4233,4263],"content":"Create and Attach the New View"},{"content":"To create and attach the new view, you need to modify the <ph id=\"ph1\">`InitInstance`</ph> function of your application class.","pos":[4267,4375],"source":"To create and attach the new view, you need to modify the `InitInstance` function of your application class."},{"content":"The modification adds new code that creates a new view object and then initializes both <ph id=\"ph1\">`m_pOldView`</ph> and <ph id=\"ph2\">`m_pNewView`</ph> with the two existing view objects.","pos":[4376,4529],"source":" The modification adds new code that creates a new view object and then initializes both `m_pOldView` and `m_pNewView` with the two existing view objects."},{"content":"Because the new view is created within the <ph id=\"ph1\">`InitInstance`</ph> function, both the new and existing views persist for the lifetime of the application.","pos":[4536,4680],"source":"Because the new view is created within the `InitInstance` function, both the new and existing views persist for the lifetime of the application."},{"content":"However, the application could just as easily create the new view dynamically.","pos":[4681,4759]},{"pos":[4766,4823],"content":"Insert this code after the call to <ph id=\"ph1\">`ProcessShellCommand`</ph>:","source":"Insert this code after the call to `ProcessShellCommand`:"},{"pos":[4841,4860],"content":"NVC_MFCDocViewSDI#3"},{"content":"Save your changes and continue to the next step.","pos":[4942,4990]},{"pos":[5040,5072],"content":"Implement the Switching Function"},{"content":"In the previous step, you added code that created and initialized a new view object.","pos":[5076,5160]},{"content":"The last major piece is to implement the switching method, <ph id=\"ph1\">`SwitchView`</ph>.","pos":[5161,5233],"source":" The last major piece is to implement the switching method, `SwitchView`."},{"content":"At the end of the implementation file for your application class (MYWINAPP.CPP), add the following method definition:","pos":[5240,5357]},{"pos":[5375,5394],"content":"NVC_MFCDocViewSDI#4"},{"content":"Save your changes and continue to the next step.","pos":[5476,5524]},{"pos":[5573,5607],"content":"Add Support for Switching the View"},{"content":"The final step involves adding code that calls the <ph id=\"ph1\">`SwitchView`</ph> method when the application needs to switch between views.","pos":[5611,5733],"source":"The final step involves adding code that calls the `SwitchView` method when the application needs to switch between views."},{"content":"This can be done in several ways: by either adding a new menu item for the user to choose or switching the views internally when certain conditions are met.","pos":[5734,5890]},{"pos":[5897,6087],"content":"For more information on adding new menu items and command handler functions, see <bpt id=\"p1\">[</bpt>Handlers for Commands and Control Notifications<ept id=\"p1\">](../mfc/handlers-for-commands-and-control-notifications.md)</ept>.","source":"For more information on adding new menu items and command handler functions, see [Handlers for Commands and Control Notifications](../mfc/handlers-for-commands-and-control-notifications.md)."},{"content":"See Also","pos":[6096,6104]},{"content":"Document/View Architecture","pos":[6109,6135]}],"content":"---\ntitle: \"Adding Multiple Views to a Single Document | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"multiple views, SDI applications\"\n  - \"documents, multiple views\"\n  - \"single document interface (SDI), adding views\"\n  - \"views, SDI applications\"\nms.assetid: 86d0c134-01d5-429c-b672-36cfb956dc01\ncaps.latest.revision: 13\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Adding Multiple Views to a Single Document\nIn a single-document interface (SDI) application created with the Microsoft Foundation Class (MFC) Library, each document type is associated with a single view type. In some cases, it is desirable to have the ability to switch the current view of a document with a new view.  \n  \n> [!TIP]\n>  For additional procedures on implementing multiple views for a single document, see [CDocument::AddView](../mfc/reference/cdocument-class.md#cdocument__addview) and the [COLLECT](../visual-cpp-samples.md) MFC sample.  \n  \n You can implement this functionality by adding a new `CView`-derived class and additional code for switching the views dynamically to an existing MFC application.  \n  \n The steps are as follows:  \n  \n-   [Modify the Existing Application Class](#vcconmodifyexistingapplicationa1)  \n  \n-   [Create and Modify the New View Class](#vcconnewviewclassa2)  \n  \n-   [Create and Attach the New View](#vcconattachnewviewa3)  \n  \n-   [Implement the Switching Function](#vcconswitchingfunctiona4)  \n  \n-   [Add Support for Switching the View](#vcconswitchingtheviewa5)  \n  \n The remainder of this topic assumes the following:  \n  \n-   The name of the `CWinApp`-derived object is `CMyWinApp`, and `CMyWinApp` is declared and defined in MYWINAPP.H and MYWINAPP.CPP.  \n  \n-   `CNewView` is the name of the new `CView`-derived object, and `CNewView` is declared and defined in NEWVIEW.H and NEWVIEW.CPP.  \n  \n##  <a name=\"vcconmodifyexistingapplicationa1\"></a> Modify the Existing Application Class  \n For the application to switch between views, you need to modify the application class by adding member variables to store the views and a method to switch them.  \n  \n Add the following code to the declaration of `CMyWinApp` in MYWINAPP.H:  \n  \n [!code-cpp[NVC_MFCDocViewSDI#1](../mfc/codesnippet/cpp/adding-multiple-views-to-a-single-document_1.h)]  \n  \n The new member variables, `m_pOldView` and `m_pNewView`, point to the current view and the newly created one. The new method (`SwitchView`) switches the views when requested by the user. The body of the method is discussed later in this topic in [Implement the Switching Function](#vcconswitchingfunctiona4).  \n  \n The last modification to the application class requires including a new header file that defines a Windows message (**WM_INITIALUPDATE**) that is used in the switching function.  \n  \n Insert the following line in the include section of MYWINAPP.CPP:  \n  \n [!code-cpp[NVC_MFCDocViewSDI#2](../mfc/codesnippet/cpp/adding-multiple-views-to-a-single-document_2.cpp)]  \n  \n Save your changes and continue to the next step.  \n  \n##  <a name=\"vcconnewviewclassa2\"></a> Create and Modify the New View Class  \n Creating the new view class is made easy by using the **New Class** command available from Class View. The only requirement for this class is that it derives from `CView`. Add this new class to the application. For specific information on adding a new class to the project, see [Adding a Class](../ide/adding-a-class-visual-cpp.md).  \n  \n Once you have added the class to the project, you need to change the accessibility of some view class members.  \n  \n Modify NEWVIEW.H by changing the access specifier from `protected` to **public** for the constructor and destructor. This allows the class to be created and destroyed dynamically and to modify the view appearance before it is visible.  \n  \n Save your changes and continue to the next step.  \n  \n##  <a name=\"vcconattachnewviewa3\"></a> Create and Attach the New View  \n To create and attach the new view, you need to modify the `InitInstance` function of your application class. The modification adds new code that creates a new view object and then initializes both `m_pOldView` and `m_pNewView` with the two existing view objects.  \n  \n Because the new view is created within the `InitInstance` function, both the new and existing views persist for the lifetime of the application. However, the application could just as easily create the new view dynamically.  \n  \n Insert this code after the call to `ProcessShellCommand`:  \n  \n [!code-cpp[NVC_MFCDocViewSDI#3](../mfc/codesnippet/cpp/adding-multiple-views-to-a-single-document_3.cpp)]  \n  \n Save your changes and continue to the next step.  \n  \n##  <a name=\"vcconswitchingfunctiona4\"></a> Implement the Switching Function  \n In the previous step, you added code that created and initialized a new view object. The last major piece is to implement the switching method, `SwitchView`.  \n  \n At the end of the implementation file for your application class (MYWINAPP.CPP), add the following method definition:  \n  \n [!code-cpp[NVC_MFCDocViewSDI#4](../mfc/codesnippet/cpp/adding-multiple-views-to-a-single-document_4.cpp)]  \n  \n Save your changes and continue to the next step.  \n  \n##  <a name=\"vcconswitchingtheviewa5\"></a> Add Support for Switching the View  \n The final step involves adding code that calls the `SwitchView` method when the application needs to switch between views. This can be done in several ways: by either adding a new menu item for the user to choose or switching the views internally when certain conditions are met.  \n  \n For more information on adding new menu items and command handler functions, see [Handlers for Commands and Control Notifications](../mfc/handlers-for-commands-and-control-notifications.md).  \n  \n## See Also  \n [Document/View Architecture](../mfc/document-view-architecture.md)\n\n"}