{"nodes":[{"pos":[12,36],"content":"_pclose | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_pclose | Microsoft Docs","pos":[0,24]}]},{"pos":[961,968],"content":"_pclose","linkify":"_pclose","nodes":[{"content":"_pclose","pos":[0,7]}]},{"content":"Waits for a new command processor and closes the stream on the associated pipe.","pos":[969,1048]},{"pos":[1056,1276],"content":"[!IMPORTANT]\n This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":" This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","pos":[13,218],"nodes":[{"content":"This API cannot be used in applications that execute in the Windows Runtime.","pos":[1,77]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.","pos":[78,205],"source":" For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)."}]}]},{"pos":[1285,1291],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1362,1372],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Return value from the previous call to <ph id=\"ph1\">`_popen`</ph>.","pos":[1388,1436],"source":" Return value from the previous call to `_popen`."},{"pos":[1445,1457],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns the exit status of the terminating command processor, or –1 if an error occurs.","pos":[1461,1548]},{"content":"The format of the return value is the same as that for <ph id=\"ph1\">`_cwait`</ph>, except the low-order and high-order bytes are swapped.","pos":[1549,1668],"source":" The format of the return value is the same as that for `_cwait`, except the low-order and high-order bytes are swapped."},{"content":"If stream is <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>, <ph id=\"ph1\">`_pclose`</ph> sets <ph id=\"ph2\">`errno`</ph> to <ph id=\"ph3\">`EINVAL`</ph> and returns -1.","pos":[1669,1742],"source":" If stream is **NULL**, `_pclose` sets `errno` to `EINVAL` and returns -1."},{"pos":[1749,1920],"content":"For information about these and other error codes, see <bpt id=\"p1\">[</bpt>_doserrno, errno, _sys_errlist, and _sys_nerr<ept id=\"p1\">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept>.","source":"For information about these and other error codes, see [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)."},{"pos":[1929,1936],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1940,2207],"content":"The <ph id=\"ph1\">`_pclose`</ph> function looks up the process ID of the command processor (Cmd.exe) started by the associated <ph id=\"ph2\">`_popen`</ph> call, executes a <bpt id=\"p1\">[</bpt>_cwait<ept id=\"p1\">](../../c-runtime-library/reference/cwait.md)</ept> call on the new command processor, and closes the stream on the associated pipe.","source":"The `_pclose` function looks up the process ID of the command processor (Cmd.exe) started by the associated `_popen` call, executes a [_cwait](../../c-runtime-library/reference/cwait.md) call on the new command processor, and closes the stream on the associated pipe."},{"pos":[2216,2228],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[2235,2242]},{"content":"Required header","pos":[2243,2258]},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdio.h&gt;","pos":[2313,2323],"source":"\\<stdio.h>"},{"pos":[2331,2429],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[2438,2447],"content":"Libraries","linkify":"Libraries","nodes":[{"content":"Libraries","pos":[0,9]}]},{"pos":[2451,2543],"content":"All versions of the <bpt id=\"p1\">[</bpt>C run-time libraries<ept id=\"p1\">](../../c-runtime-library/crt-library-features.md)</ept>.","source":"All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md)."},{"pos":[2552,2577],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"content":"Not applicable.","pos":[2581,2596]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[2597,2644],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[2645,2770],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"pos":[2779,2787],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Process and Environment Control<ept id=\"p1\">](../../c-runtime-library/process-and-environment-control.md)</ept><ph id=\"ph1\"> </ph>","pos":[2791,2885],"source":"[Process and Environment Control](../../c-runtime-library/process-and-environment-control.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_pipe<ept id=\"p1\">](../../c-runtime-library/reference/pipe.md)</ept><ph id=\"ph1\"> </ph>","pos":[2888,2940],"source":" [_pipe](../../c-runtime-library/reference/pipe.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_popen, _wpopen<ept id=\"p1\">](../../c-runtime-library/reference/popen-wpopen.md)</ept>","pos":[2943,3012],"source":" [_popen, _wpopen](../../c-runtime-library/reference/popen-wpopen.md)"}],"content":"---\ntitle: \"_pclose | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_pclose\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-stdio-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_pclose\"\n  - \"pclose\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"_pclose function\"\n  - \"pclose function\"\n  - \"pipes, closing\"\nms.assetid: e2e31a9e-ba3a-4124-bcbb-c4040110b3d3\ncaps.latest.revision: 14\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _pclose\nWaits for a new command processor and closes the stream on the associated pipe.  \n  \n> [!IMPORTANT]\n>  This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \n  \n      int _pclose(  \nFILE *stream   \n);  \n```  \n  \n#### Parameters  \n `stream`  \n Return value from the previous call to `_popen`.  \n  \n## Return Value  \n Returns the exit status of the terminating command processor, or –1 if an error occurs. The format of the return value is the same as that for `_cwait`, except the low-order and high-order bytes are swapped. If stream is **NULL**, `_pclose` sets `errno` to `EINVAL` and returns -1.  \n  \n For information about these and other error codes, see [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md).  \n  \n## Remarks  \n The `_pclose` function looks up the process ID of the command processor (Cmd.exe) started by the associated `_popen` call, executes a [_cwait](../../c-runtime-library/reference/cwait.md) call on the new command processor, and closes the stream on the associated pipe.  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_pclose`|\\<stdio.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Libraries  \n All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md).  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [Process and Environment Control](../../c-runtime-library/process-and-environment-control.md)   \n [_pipe](../../c-runtime-library/reference/pipe.md)   \n [_popen, _wpopen](../../c-runtime-library/reference/popen-wpopen.md)"}