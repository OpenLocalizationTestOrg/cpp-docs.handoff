{"nodes":[{"pos":[12,45],"content":"remove, _wremove | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"remove, _wremove | Microsoft Docs","pos":[0,33]}]},{"pos":[1111,1127],"content":"remove, _wremove","linkify":"remove, _wremove","nodes":[{"content":"remove, _wremove","pos":[0,16]}]},{"content":"Delete a file.","pos":[1128,1142]},{"pos":[1151,1157],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1281,1291],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>path<ept id=\"p1\">*</ept>","pos":[1295,1301],"source":"*path*"},{"content":"Path of file to be removed.","pos":[1305,1332]},{"pos":[1341,1353],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Each of these functions returns 0 if the file is successfully deleted.","pos":[1357,1427]},{"content":"Otherwise, it returns -1 and sets <ph id=\"ph1\">`errno`</ph> either to <ph id=\"ph2\">`EACCES`</ph> to indicate that the path specifies a read-only file or the file is open, or to <bpt id=\"p1\">**</bpt>ENOENT<ept id=\"p1\">**</ept> to indicate that the filename or path was not found or that the path specifies a directory.","pos":[1428,1671],"source":" Otherwise, it returns -1 and sets `errno` either to `EACCES` to indicate that the path specifies a read-only file or the file is open, or to **ENOENT** to indicate that the filename or path was not found or that the path specifies a directory."},{"pos":[1678,1851],"content":"See <bpt id=\"p1\">[</bpt>_doserrno, errno, _sys_errlist, and _sys_nerr<ept id=\"p1\">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept> for more information on these and other return codes.","source":"See [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md) for more information on these and other return codes."},{"pos":[1860,1867],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <bpt id=\"p1\">**</bpt>remove<ept id=\"p1\">**</ept> function deletes the file specified by <bpt id=\"p2\">*</bpt>path.<ept id=\"p2\">*</ept>","pos":[1871,1932],"source":"The **remove** function deletes the file specified by *path.*"},{"content":"<ph id=\"ph1\">`_wremove`</ph> is a wide-character version of <bpt id=\"p1\">**</bpt>_remove<ept id=\"p1\">**</ept>; the <bpt id=\"p2\">*</bpt>path<ept id=\"p2\">*</ept> argument to <ph id=\"ph2\">`_wremove`</ph> is a wide-character string.","pos":[1933,2049],"source":"`_wremove` is a wide-character version of **_remove**; the *path* argument to `_wremove` is a wide-character string."},{"content":"<ph id=\"ph1\">`_wremove`</ph> and <bpt id=\"p1\">**</bpt>_remove<ept id=\"p1\">**</ept> behave identically otherwise.","pos":[2050,2106],"source":"`_wremove` and **_remove** behave identically otherwise."},{"content":"All handles to a file must be closed before it can be deleted.","pos":[2107,2169]},{"pos":[2179,2208],"content":"Generic-Text Routine Mappings","linkify":"Generic-Text Routine Mappings","nodes":[{"content":"Generic-Text Routine Mappings","pos":[0,29]}]},{"content":"TCHAR.H routine","pos":[2215,2230]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[2231,2259],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[2260,2273]},{"content":"_UNICODE defined","pos":[2274,2290]},{"pos":[2414,2424],"content":"<bpt id=\"p1\">**</bpt>remove<ept id=\"p1\">**</ept>","source":"**remove**"},{"pos":[2425,2435],"content":"<bpt id=\"p1\">**</bpt>remove<ept id=\"p1\">**</ept>","source":"**remove**"},{"pos":[2456,2468],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[2475,2482]},{"content":"Required header","pos":[2483,2498]},{"pos":[2543,2553],"content":"<bpt id=\"p1\">**</bpt>remove<ept id=\"p1\">**</ept>","source":"**remove**"},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdio.h&gt; or <ph id=\"ph2\">\\&lt;</ph>io.h&gt;","pos":[2554,2575],"source":"\\<stdio.h> or \\<io.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdio.h&gt; or <ph id=\"ph2\">\\&lt;</ph>wchar.h&gt;","pos":[2591,2615],"source":"\\<stdio.h> or \\<wchar.h>"},{"pos":[2623,2747],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"pos":[2756,2765],"content":"Libraries","linkify":"Libraries","nodes":[{"content":"Libraries","pos":[0,9]}]},{"pos":[2769,2861],"content":"All versions of the <bpt id=\"p1\">[</bpt>C run-time libraries<ept id=\"p1\">](../../c-runtime-library/crt-library-features.md)</ept>.","source":"All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md)."},{"pos":[2870,2877],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3188,3209],"content":"Input: crt_remove.txt","linkify":"Input: crt_remove.txt","nodes":[{"content":"Input: crt_remove.txt","pos":[0,21]}]},{"pos":[3262,3275],"content":"Sample Output","linkify":"Sample Output","nodes":[{"content":"Sample Output","pos":[0,13]}]},{"pos":[3326,3351],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"pos":[3355,3450],"content":"<bpt id=\"p1\">[</bpt>System::IO::File::Delete<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.io.file.delete.aspx)</ept>","source":"[System::IO::File::Delete](https://msdn.microsoft.com/en-us/library/system.io.file.delete.aspx)"},{"pos":[3459,3467],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>File Handling<ept id=\"p1\">](../../c-runtime-library/file-handling.md)</ept><ph id=\"ph1\"> </ph>","pos":[3471,3529],"source":"[File Handling](../../c-runtime-library/file-handling.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_unlink, _wunlink<ept id=\"p1\">](../../c-runtime-library/reference/unlink-wunlink.md)</ept>","pos":[3532,3605],"source":" [_unlink, _wunlink](../../c-runtime-library/reference/unlink-wunlink.md)"}],"content":"---\ntitle: \"remove, _wremove | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_wremove\"\n  - \"remove\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-filesystem-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"remove\"\n  - \"_wremove\"\n  - \"_tremove\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"tremove function\"\n  - \"_wremove function\"\n  - \"files [C++], deleting\"\n  - \"_tremove function\"\n  - \"files [C++], removing\"\n  - \"wremove function\"\n  - \"remove function\"\nms.assetid: b6345ec3-3289-4645-93a4-28b9e478cc19\ncaps.latest.revision: 10\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# remove, _wremove\nDelete a file.  \n  \n## Syntax  \n  \n```  \n  \n      int remove(  \n   const char *path   \n);  \nint _wremove(  \n   const wchar_t *path   \n);  \n```  \n  \n#### Parameters  \n *path*  \n Path of file to be removed.  \n  \n## Return Value  \n Each of these functions returns 0 if the file is successfully deleted. Otherwise, it returns -1 and sets `errno` either to `EACCES` to indicate that the path specifies a read-only file or the file is open, or to **ENOENT** to indicate that the filename or path was not found or that the path specifies a directory.  \n  \n See [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md) for more information on these and other return codes.  \n  \n## Remarks  \n The **remove** function deletes the file specified by *path.* `_wremove` is a wide-character version of **_remove**; the *path* argument to `_wremove` is a wide-character string. `_wremove` and **_remove** behave identically otherwise. All handles to a file must be closed before it can be deleted.  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_tremove`|**remove**|**remove**|`_wremove`|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|**remove**|\\<stdio.h> or \\<io.h>|  \n|`_wremove`|\\<stdio.h> or \\<wchar.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Libraries  \n All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md).  \n  \n## Example  \n  \n```  \n// crt_remove.c  \n/* This program uses remove to delete crt_remove.txt */  \n  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n   if( remove( \"crt_remove.txt\" ) == -1 )  \n      perror( \"Could not delete 'CRT_REMOVE.TXT'\" );  \n   else  \n      printf( \"Deleted 'CRT_REMOVE.TXT'\\n\" );  \n}  \n```  \n  \n## Input: crt_remove.txt  \n  \n```  \nThis file will be deleted.  \n```  \n  \n## Sample Output  \n  \n```  \nDeleted 'CRT_REMOVE.TXT'  \n```  \n  \n## .NET Framework Equivalent  \n [System::IO::File::Delete](https://msdn.microsoft.com/en-us/library/system.io.file.delete.aspx)  \n  \n## See Also  \n [File Handling](../../c-runtime-library/file-handling.md)   \n [_unlink, _wunlink](../../c-runtime-library/reference/unlink-wunlink.md)"}