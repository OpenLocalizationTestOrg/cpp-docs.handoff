{"nodes":[{"pos":[12,53],"content":"hash_map::rend (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"hash_map::rend (STL-CLR) | Microsoft Docs","pos":[0,41]}]},{"content":"hash_map::rend (STL/CLR)","pos":[629,653]},{"content":"Designates the end of the reversed controlled sequence.","pos":[654,709]},{"content":"Syntax","pos":[718,724]},{"content":"Remarks","pos":[775,782]},{"content":"The member function returns a reverse iterator that points just beyond the beginning of the controlled sequence.","pos":[786,898]},{"content":"Hence, it designates the <ph id=\"ph1\">`end`</ph> of the reverse sequence.","pos":[899,954],"source":" Hence, it designates the `end` of the reverse sequence."},{"content":"You use it to obtain an iterator that designates the <ph id=\"ph1\">`current`</ph> end of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes.","pos":[955,1147],"source":" You use it to obtain an iterator that designates the `current` end of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes."},{"content":"Example","pos":[1156,1163]},{"content":"Requirements","pos":[2199,2211]},{"pos":[2215,2245],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/hash_map&gt;","source":"**Header:** \\<cliext/hash_map>"},{"pos":[2252,2273],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2282,2290]},{"content":"hash_map (STL/CLR)","pos":[2295,2313]},{"content":"hash_map::begin (STL/CLR)","pos":[2351,2376]},{"content":"hash_map::end (STL/CLR)","pos":[2420,2443]},{"content":"hash_map::rbegin (STL/CLR)","pos":[2485,2511]}],"content":"---\ntitle: \"hash_map::rend (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::hash_map::rend\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"rend member [STL/CLR]\"\nms.assetid: 87fb2a06-c92b-4d86-855d-22f5c04aabdb\ncaps.latest.revision: 16\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# hash_map::rend (STL/CLR)\nDesignates the end of the reversed controlled sequence.  \n  \n## Syntax  \n  \n```  \nreverse_iterator rend();  \n```  \n  \n## Remarks  \n The member function returns a reverse iterator that points just beyond the beginning of the controlled sequence. Hence, it designates the `end` of the reverse sequence. You use it to obtain an iterator that designates the `current` end of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes.  \n  \n## Example  \n  \n```  \n// cliext_hash_map_rend.cpp   \n// compile with: /clr   \n#include <cliext/hash_map>   \n  \ntypedef cliext::hash_map<wchar_t, int> Myhash_map;   \nint main()   \n    {   \n    Myhash_map c1;   \n    c1.insert(Myhash_map::make_value(L'a', 1));   \n    c1.insert(Myhash_map::make_value(L'b', 2));   \n    c1.insert(Myhash_map::make_value(L'c', 3));   \n  \n// display contents \" [a 1] [b 2] [c 3]\"   \n    for each (Myhash_map::value_type elem in c1)   \n        System::Console::Write(\" [{0} {1}]\", elem->first, elem->second);   \n    System::Console::WriteLine();   \n  \n// inspect first two items in reversed sequence   \n    Myhash_map::reverse_iterator rit = c1.rend();   \n    --rit;   \n    --rit;   \n    System::Console::WriteLine(\"*-- --rend() = [{0} {1}]\",   \n        rit->first, rit->second);   \n    ++rit;   \n    System::Console::WriteLine(\"*--rend() = [{0} {1}]\",   \n        rit->first, rit->second);   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n [a 1] [b 2] [c 3]  \n*-- --rend() = [b 2]  \n*--rend() = [a 1]  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/hash_map>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [hash_map (STL/CLR)](../dotnet/hash-map-stl-clr.md)   \n [hash_map::begin (STL/CLR)](../dotnet/hash-map-begin-stl-clr.md)   \n [hash_map::end (STL/CLR)](../dotnet/hash-map-end-stl-clr.md)   \n [hash_map::rbegin (STL/CLR)](../dotnet/hash-map-rbegin-stl-clr.md)"}