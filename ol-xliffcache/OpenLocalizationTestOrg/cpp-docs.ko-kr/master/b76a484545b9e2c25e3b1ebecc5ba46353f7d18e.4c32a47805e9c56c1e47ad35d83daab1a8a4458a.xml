{"nodes":[{"pos":[12,57],"content":"is_error_code_enum Structure | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"is_error_code_enum Structure | Microsoft Docs","pos":[0,45]}]},{"content":"is_error_code_enum Structure","pos":[615,643]},{"pos":[644,835],"content":"Specialization that indicates that <bpt id=\"p1\">[</bpt>future_errc<ept id=\"p1\">](../standard-library/future-enums.md#future_errc_enumeration)</ept> is suitable for storing an <bpt id=\"p2\">[</bpt>error_code<ept id=\"p2\">](../standard-library/error-code-class.md)</ept>.","source":"Specialization that indicates that [future_errc](../standard-library/future-enums.md#future_errc_enumeration) is suitable for storing an [error_code](../standard-library/error-code-class.md)."},{"content":"Syntax","pos":[844,850]},{"content":"Requirements","pos":[943,955]},{"pos":[959,977],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> future","source":"**Header:** future"},{"pos":[984,1002],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"content":"See Also","pos":[1011,1019]},{"content":"Header Files Reference","pos":[1024,1046]},{"content":"future&gt;","pos":[1113,1120],"source":"future>"}],"content":"---\ntitle: \"is_error_code_enum Structure | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"future/std::is_error_code_enum\"\ndev_langs: \n  - \"C++\"\nms.assetid: 84ae4b99-66d2-41ba-9b50-645fcbe14630\ncaps.latest.revision: 13\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# is_error_code_enum Structure\nSpecialization that indicates that [future_errc](../standard-library/future-enums.md#future_errc_enumeration) is suitable for storing an [error_code](../standard-library/error-code-class.md).  \n  \n## Syntax  \n  \n```\ntemplate <>\nstruct is_error_code_enum<Future_errc> : public true_type;\n```  \n  \n## Requirements  \n **Header:** future  \n  \n **Namespace:** std  \n  \n## See Also  \n [Header Files Reference](../standard-library/cpp-standard-library-header-files.md)   \n [\\<future>](../standard-library/future.md)\n\n\n\n"}