{"nodes":[{"pos":[12,65],"content":"Linker Support for Delay-Loaded DLLs | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Linker Support for Delay-Loaded DLLs | Microsoft Docs","pos":[0,53]}]},{"content":"Linker Support for Delay-Loaded DLLs","pos":[613,649]},{"content":"The Visual C++ linker now supports the delayed loading of DLLs.","pos":[650,713]},{"content":"This relieves you of the need to use the <ph id=\"ph1\">[!INCLUDE[winsdkshort](../../atl-mfc-shared/reference/includes/winsdkshort_md.md)]</ph> functions <bpt id=\"p1\">**</bpt>LoadLibrary<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>GetProcAddress<ept id=\"p2\">**</ept> to implement DLL delayed loading.","pos":[714,920],"source":" This relieves you of the need to use the [!INCLUDE[winsdkshort](../../atl-mfc-shared/reference/includes/winsdkshort_md.md)] functions **LoadLibrary** and **GetProcAddress** to implement DLL delayed loading."},{"pos":[927,1129],"content":"Before Visual C++ 6.0, the only way to load a DLL at run time was by using <bpt id=\"p1\">**</bpt>LoadLibrary<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>GetProcAddress<ept id=\"p2\">**</ept>; the operating system would load the DLL when the executable or DLL using it was loaded.","source":"Before Visual C++ 6.0, the only way to load a DLL at run time was by using **LoadLibrary** and **GetProcAddress**; the operating system would load the DLL when the executable or DLL using it was loaded."},{"content":"Beginning with Visual C++ 6.0, when statically linking with a DLL, the linker provides options to delay load the DLL until the program calls a function in that DLL.","pos":[1136,1300]},{"content":"An application can delay load a DLL using the <bpt id=\"p1\">[</bpt>/DELAYLOAD (Delay Load Import)<ept id=\"p1\">](../../build/reference/delayload-delay-load-import.md)</ept> linker option with a helper function (default implementation provided by Visual C++).","pos":[1307,1525],"source":"An application can delay load a DLL using the [/DELAYLOAD (Delay Load Import)](../../build/reference/delayload-delay-load-import.md) linker option with a helper function (default implementation provided by Visual C++)."},{"content":"The helper function will load the DLL at run time by calling <bpt id=\"p1\">**</bpt>LoadLibrary<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>GetProcAddress<ept id=\"p2\">**</ept> for you.","pos":[1526,1634],"source":" The helper function will load the DLL at run time by calling **LoadLibrary** and **GetProcAddress** for you."},{"content":"You should consider delay loading a DLL if:","pos":[1641,1684]},{"content":"Your program may not call a function in the DLL.","pos":[1694,1742]},{"content":"A function in the DLL may not get called until late in your program's execution.","pos":[1752,1832]},{"content":"The delayed loading of a DLL can be specified during the build of either a .EXE or .DLL project.","pos":[1839,1935]},{"content":"A .DLL project that delays the loading of one or more DLLs should not itself call a delay-loaded entry point in Dllmain.","pos":[1936,2056]},{"content":"The following topics describe delay loading DLLs:","pos":[2063,2112]},{"content":"Specifying DLLs to Delay Load","pos":[2123,2152]},{"content":"Explicitly Unloading a Delay-Loaded DLL","pos":[2220,2259]},{"content":"Loading All Imports for a Delay-Loaded DLL","pos":[2337,2379]},{"content":"Binding Imports","pos":[2460,2475]},{"content":"Error Handling and Notification","pos":[2529,2560]},{"content":"Dumping Delay-Loaded Imports","pos":[2630,2658]},{"content":"Constraints of Delay Loading DLLs","pos":[2725,2758]},{"content":"Understanding the Helper Function","pos":[2830,2863]},{"content":"Developing Your Own Helper Function","pos":[2945,2980]},{"content":"See Also","pos":[3052,3060]},{"content":"DLLs in Visual C++","pos":[3065,3083]},{"content":"Linking","pos":[3125,3132]}],"content":"---\ntitle: \"Linker Support for Delay-Loaded DLLs | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"delayed loading of DLLs, linker support\"\nms.assetid: b2d7e449-2809-42b1-9c90-2c0ca5e31a14\ncaps.latest.revision: 9\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Linker Support for Delay-Loaded DLLs\nThe Visual C++ linker now supports the delayed loading of DLLs. This relieves you of the need to use the [!INCLUDE[winsdkshort](../../atl-mfc-shared/reference/includes/winsdkshort_md.md)] functions **LoadLibrary** and **GetProcAddress** to implement DLL delayed loading.  \n  \n Before Visual C++ 6.0, the only way to load a DLL at run time was by using **LoadLibrary** and **GetProcAddress**; the operating system would load the DLL when the executable or DLL using it was loaded.  \n  \n Beginning with Visual C++ 6.0, when statically linking with a DLL, the linker provides options to delay load the DLL until the program calls a function in that DLL.  \n  \n An application can delay load a DLL using the [/DELAYLOAD (Delay Load Import)](../../build/reference/delayload-delay-load-import.md) linker option with a helper function (default implementation provided by Visual C++). The helper function will load the DLL at run time by calling **LoadLibrary** and **GetProcAddress** for you.  \n  \n You should consider delay loading a DLL if:  \n  \n-   Your program may not call a function in the DLL.  \n  \n-   A function in the DLL may not get called until late in your program's execution.  \n  \n The delayed loading of a DLL can be specified during the build of either a .EXE or .DLL project. A .DLL project that delays the loading of one or more DLLs should not itself call a delay-loaded entry point in Dllmain.  \n  \n The following topics describe delay loading DLLs:  \n  \n-   [Specifying DLLs to Delay Load](../../build/reference/specifying-dlls-to-delay-load.md)  \n  \n-   [Explicitly Unloading a Delay-Loaded DLL](../../build/reference/explicitly-unloading-a-delay-loaded-dll.md)  \n  \n-   [Loading All Imports for a Delay-Loaded DLL](../../build/reference/loading-all-imports-for-a-delay-loaded-dll.md)  \n  \n-   [Binding Imports](../../build/reference/binding-imports.md)  \n  \n-   [Error Handling and Notification](../../build/reference/error-handling-and-notification.md)  \n  \n-   [Dumping Delay-Loaded Imports](../../build/reference/dumping-delay-loaded-imports.md)  \n  \n-   [Constraints of Delay Loading DLLs](../../build/reference/constraints-of-delay-loading-dlls.md)  \n  \n-   [Understanding the Helper Function](http://msdn.microsoft.com/en-us/6279c12c-d908-4967-b0b3-cabfc3e91d3d)  \n  \n-   [Developing Your Own Helper Function](../../build/reference/developing-your-own-helper-function.md)  \n  \n## See Also  \n [DLLs in Visual C++](../../build/dlls-in-visual-cpp.md)   \n [Linking](../../build/reference/linking.md)"}