{"nodes":[{"pos":[12,54],"content":"com_interface_entry (C++) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"com_interface_entry (C++) | Microsoft Docs","pos":[0,42]}]},{"content":"com_interface_entry (C++)","pos":[651,676]},{"content":"Adds an interface entry into the COM map of the target class.","pos":[677,738]},{"content":"Syntax","pos":[747,753]},{"content":"Parameters","pos":[843,853]},{"content":"com_interface_entry","pos":[858,877]},{"content":"A string containing the actual text of the entry.","pos":[882,931]},{"content":"For a list of possible values, see <bpt id=\"p1\">[</bpt>COM_INTERFACE_ENTRY Macros<ept id=\"p1\">](http://msdn.microsoft.com/Library/19dcb768-2e1f-4b8d-a618-453a01a4bd00)</ept>.","pos":[932,1068],"source":" For a list of possible values, see [COM_INTERFACE_ENTRY Macros](http://msdn.microsoft.com/Library/19dcb768-2e1f-4b8d-a618-453a01a4bd00)."},{"content":"Remarks","pos":[1077,1084]},{"content":"The <ph id=\"ph1\">`com_interface_entry`</ph> C++ attribute inserts the unabridged contents of a character string into the COM interface map of the target object.","pos":[1088,1230],"source":"The `com_interface_entry` C++ attribute inserts the unabridged contents of a character string into the COM interface map of the target object."},{"content":"If the attribute is applied once to the target object, the entry is inserted into the beginning of the existing interface map.","pos":[1231,1357]},{"content":"If the attribute is applied repeatedly to the same target object, the entries are inserted at the beginning of the interface map in the order they are received.","pos":[1358,1518]},{"content":"This attribute requires that the <bpt id=\"p1\">[</bpt>coclass<ept id=\"p1\">](../windows/coclass.md)</ept>, <bpt id=\"p2\">[</bpt>progid<ept id=\"p2\">](../windows/progid.md)</ept>, or <bpt id=\"p3\">[</bpt>vi_progid<ept id=\"p3\">](../windows/vi-progid.md)</ept> attribute (or another attribute that implies one of these) also be applied to the same element.","pos":[1525,1759],"source":"This attribute requires that the [coclass](../windows/coclass.md), [progid](../windows/progid.md), or [vi_progid](../windows/vi-progid.md) attribute (or another attribute that implies one of these) also be applied to the same element."},{"content":"If any single attribute is used, the other two are automatically applied.","pos":[1760,1833]},{"content":"For example, if <bpt id=\"p1\">**</bpt>progid<ept id=\"p1\">**</ept> is applied, <bpt id=\"p2\">**</bpt>vi_progid<ept id=\"p2\">**</ept> and <bpt id=\"p3\">**</bpt>coclass<ept id=\"p3\">**</ept> are also applied.","pos":[1834,1920],"source":" For example, if **progid** is applied, **vi_progid** and **coclass** are also applied."},{"pos":[1927,2113],"content":"Because the first usage of <ph id=\"ph1\">`com_interface_entry`</ph> causes the new interface to be inserted at the beginning of the interface map, it must be one of the following COM_INTERFACE_ENTRY types:","source":"Because the first usage of `com_interface_entry` causes the new interface to be inserted at the beginning of the interface map, it must be one of the following COM_INTERFACE_ENTRY types:"},{"content":"COM_INTERFACE_ENTRY","pos":[2123,2142]},{"content":"COM_INTERFACE_ENTRY_IID","pos":[2152,2175]},{"content":"COM_INTERFACE_ENTRY2","pos":[2185,2205]},{"content":"COM_INTERFACE_ENTRY2_IID","pos":[2215,2239]},{"pos":[2246,2351],"content":"Additional usages of the <ph id=\"ph1\">`com_interface_entry`</ph> attribute can use all supported COM_INTERFACE_ENTRY types.","source":"Additional usages of the `com_interface_entry` attribute can use all supported COM_INTERFACE_ENTRY types."},{"content":"This restriction is necessary because ATL uses the first entry in the interface map as the identity <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept>; therefore, the entry must be a valid interface.","pos":[2358,2519],"source":"This restriction is necessary because ATL uses the first entry in the interface map as the identity **IUnknown**; therefore, the entry must be a valid interface."},{"content":"For example, the following code sample is invalid because the first entry in the interface map does not specify an actual COM interface.","pos":[2520,2656]},{"content":"Example","pos":[2806,2813]},{"content":"The following code adds two entries to the existing COM interface map of <bpt id=\"p1\">**</bpt>CMyBaseClass<ept id=\"p1\">**</ept>.","pos":[2817,2907],"source":"The following code adds two entries to the existing COM interface map of **CMyBaseClass**."},{"content":"The first is a standard interface, and the second hides the <bpt id=\"p1\">**</bpt>IDebugTest<ept id=\"p1\">**</ept> interface.","pos":[2908,2993],"source":" The first is a standard interface, and the second hides the **IDebugTest** interface."},{"pos":[3632,3696],"content":"The resulting COM object map for <bpt id=\"p1\">**</bpt>CMyBaseClass<ept id=\"p1\">**</ept> is as follows:","source":"The resulting COM object map for **CMyBaseClass** is as follows:"},{"content":"Requirements","pos":[4016,4028]},{"content":"Attribute Context","pos":[4038,4055]},{"content":"Applies to","pos":[4078,4088]},{"pos":[4091,4101],"content":"<bpt id=\"p1\">**</bpt>class<ept id=\"p1\">**</ept>,","source":"**class**, "},{"content":"Repeatable","pos":[4117,4127]},{"content":"Yes","pos":[4130,4133]},{"content":"Required attributes","pos":[4140,4159]},{"pos":[4162,4234],"content":"One or more of the following: <bpt id=\"p1\">**</bpt>coclass<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>progid<ept id=\"p2\">**</ept>, or <bpt id=\"p3\">**</bpt>vi_progid<ept id=\"p3\">**</ept>.","source":"One or more of the following: **coclass**, **progid**, or **vi_progid**."},{"content":"Invalid attributes","pos":[4241,4259]},{"content":"None","pos":[4262,4266]},{"pos":[4274,4384],"content":"For more information about the attribute contexts, see <bpt id=\"p1\">[</bpt>Attribute Contexts<ept id=\"p1\">](../windows/attribute-contexts.md)</ept>.","source":"For more information about the attribute contexts, see [Attribute Contexts](../windows/attribute-contexts.md)."},{"content":"See Also","pos":[4393,4401]},{"content":"COM Attributes","pos":[4406,4420]},{"content":"Class Attributes","pos":[4457,4473]},{"content":"Typedef, Enum, Union, and Struct Attributes","pos":[4512,4555]},{"content":"Attributes Samples","pos":[4618,4636]}],"content":"---\ntitle: \"com_interface_entry (C++) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"vc-attr.com_interface_entry\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"com_interface_entry attribute\"\nms.assetid: 10368f81-b99b-4a0f-ba4f-a142e6911a5c\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# com_interface_entry (C++)\nAdds an interface entry into the COM map of the target class.  \n  \n## Syntax  \n  \n```  \n  \n     [ com_interface_entry(   \n  com_interface_entry  \n) ]  \n```  \n  \n#### Parameters  \n *com_interface_entry*  \n A string containing the actual text of the entry. For a list of possible values, see [COM_INTERFACE_ENTRY Macros](http://msdn.microsoft.com/Library/19dcb768-2e1f-4b8d-a618-453a01a4bd00).  \n  \n## Remarks  \n The `com_interface_entry` C++ attribute inserts the unabridged contents of a character string into the COM interface map of the target object. If the attribute is applied once to the target object, the entry is inserted into the beginning of the existing interface map. If the attribute is applied repeatedly to the same target object, the entries are inserted at the beginning of the interface map in the order they are received.  \n  \n This attribute requires that the [coclass](../windows/coclass.md), [progid](../windows/progid.md), or [vi_progid](../windows/vi-progid.md) attribute (or another attribute that implies one of these) also be applied to the same element. If any single attribute is used, the other two are automatically applied. For example, if **progid** is applied, **vi_progid** and **coclass** are also applied.  \n  \n Because the first usage of `com_interface_entry` causes the new interface to be inserted at the beginning of the interface map, it must be one of the following COM_INTERFACE_ENTRY types:  \n  \n-   COM_INTERFACE_ENTRY  \n  \n-   COM_INTERFACE_ENTRY_IID  \n  \n-   COM_INTERFACE_ENTRY2  \n  \n-   COM_INTERFACE_ENTRY2_IID  \n  \n Additional usages of the `com_interface_entry` attribute can use all supported COM_INTERFACE_ENTRY types.  \n  \n This restriction is necessary because ATL uses the first entry in the interface map as the identity **IUnknown**; therefore, the entry must be a valid interface. For example, the following code sample is invalid because the first entry in the interface map does not specify an actual COM interface.  \n  \n```  \n[ coclass, com_interface_entry =  \n    \"COM_INTERFACE_ENTRY_NOINTERFACE(IDebugTest)\"  \n]  \n   class CMyClass  \n   {  \n   };  \n```  \n  \n## Example  \n The following code adds two entries to the existing COM interface map of **CMyBaseClass**. The first is a standard interface, and the second hides the **IDebugTest** interface.  \n  \n```  \n// cpp_attr_ref_com_interface_entry.cpp  \n// compile with: /LD  \n#define _ATL_ATTRIBUTES  \n#include \"atlbase.h\"  \n#include \"atlcom.h\"  \n  \n[module (name =\"ldld\")];  \n  \n[ object,  \n  uuid(\"7dbebed3-d636-4917-af62-c767a720a5b9\")]  \n__interface IDebugTest{};  \n  \n[ object,  \n  uuid(\"2875ceac-f94b-4087-8e13-d13dc167fcfc\")]  \n__interface IMyClass{};  \n  \n[ coclass,  \n  com_interface_entry (\"COM_INTERFACE_ENTRY (IMyClass)\"),  \n  com_interface_entry (\"COM_INTERFACE_ENTRY_NOINTERFACE(IDebugTest)\"),  \n  uuid(\"b85f8626-e76e-4775-b6a0-4826a9e94af2\")  \n]  \n  \nclass CMyClass: public IMyClass, public IDebugTest  \n{  \n};  \n```  \n  \n The resulting COM object map for **CMyBaseClass** is as follows:  \n  \n```  \nBEGIN_COM_MAP(CMyClass)  \n    COM_INTERFACE_ENTRY (IMyClass)  \n    COM_INTERFACE_ENTRY_NOINTERFACE(IDebugTest)  \n    COM_INTERFACE_ENTRY(IMyClass)  \n    COM_INTERFACE_ENTRY2(IDispatch, IMyClass)  \n    COM_INTERFACE_ENTRY(IDebugTest)  \n    COM_INTERFACE_ENTRY(IProvideClassInfo)  \nEND_COM_MAP()  \n```  \n  \n## Requirements  \n  \n### Attribute Context  \n  \n|||  \n|-|-|  \n|**Applies to**|**class**, `struct`|  \n|**Repeatable**|Yes|  \n|**Required attributes**|One or more of the following: **coclass**, **progid**, or **vi_progid**.|  \n|**Invalid attributes**|None|  \n  \n For more information about the attribute contexts, see [Attribute Contexts](../windows/attribute-contexts.md).  \n  \n## See Also  \n [COM Attributes](../windows/com-attributes.md)   \n [Class Attributes](../windows/class-attributes.md)   \n [Typedef, Enum, Union, and Struct Attributes](../windows/typedef-enum-union-and-struct-attributes.md)   \n [Attributes Samples](http://msdn.microsoft.com/en-us/558ebdb2-082f-44dc-b442-d8d33bf7bdb8)"}