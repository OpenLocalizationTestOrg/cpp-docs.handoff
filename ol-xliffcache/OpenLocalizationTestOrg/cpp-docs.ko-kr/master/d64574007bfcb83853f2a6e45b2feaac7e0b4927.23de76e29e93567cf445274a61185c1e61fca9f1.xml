{"nodes":[{"pos":[12,51],"content":"auto_partitioner Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"auto_partitioner Class | Microsoft Docs","pos":[0,39]}]},{"pos":[636,658],"content":"auto_partitioner Class","linkify":"auto_partitioner Class","nodes":[{"content":"auto_partitioner Class","pos":[0,22]}]},{"content":"The <ph id=\"ph1\">`auto_partitioner`</ph> class represents the default method <ph id=\"ph2\">`parallel_for`</ph>, <ph id=\"ph3\">`parallel_for_each`</ph> and <ph id=\"ph4\">`parallel_transform`</ph> use to partition the range they iterates over.","pos":[659,825],"source":"The `auto_partitioner` class represents the default method `parallel_for`, `parallel_for_each` and `parallel_transform` use to partition the range they iterates over."},{"content":"This method of partitioning employes range stealing for load balancing as well as per-iterate cancellation.","pos":[826,933]},{"pos":[942,948],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[994,1001],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[1011,1030],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[1037,1041]},{"content":"Description","pos":[1042,1053]},{"pos":[1091,1146],"content":"<bpt id=\"p1\">[</bpt>auto_partitioner::auto_partitioner Constructor<ept id=\"p1\">](#ctor)</ept>","source":"[auto_partitioner::auto_partitioner Constructor](#ctor)"},{"pos":[1147,1186],"content":"Constructs a <ph id=\"ph1\">`auto_partitioner`</ph> object.","source":"Constructs a `auto_partitioner` object."},{"pos":[1191,1246],"content":"<bpt id=\"p1\">[</bpt>auto_partitioner::~auto_partitioner Destructor<ept id=\"p1\">](#dtor)</ept>","source":"[auto_partitioner::~auto_partitioner Destructor](#dtor)"},{"pos":[1247,1284],"content":"Destroys a <ph id=\"ph1\">`auto_partitioner`</ph> object.","source":"Destroys a `auto_partitioner` object."},{"pos":[1294,1315],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[1346,1358],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1362,1379],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> ppl.h","source":"**Header:** ppl.h"},{"pos":[1386,1412],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> concurrency","source":"**Namespace:** concurrency"},{"pos":[1422,1489],"content":"<bpt id=\"p1\">&lt;a name=\"dtor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  auto_partitioner::~auto_partitioner Destructor","linkify":"<a name=\"dtor\"></a>  auto_partitioner::~auto_partitioner Destructor","source":"<a name=\"dtor\"></a>  auto_partitioner::~auto_partitioner Destructor"},{"pos":[1493,1530],"content":"Destroys a <ph id=\"ph1\">`auto_partitioner`</ph> object.","source":"Destroys a `auto_partitioner` object."},{"pos":[1574,1641],"content":"<bpt id=\"p1\">&lt;a name=\"ctor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  auto_partitioner::auto_partitioner Constructor","linkify":"<a name=\"ctor\"></a>  auto_partitioner::auto_partitioner Constructor","source":"<a name=\"ctor\"></a>  auto_partitioner::auto_partitioner Constructor"},{"pos":[1645,1684],"content":"Constructs a <ph id=\"ph1\">`auto_partitioner`</ph> object.","source":"Constructs a `auto_partitioner` object."},{"pos":[1726,1734],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1738,1787],"content":"<bpt id=\"p1\">[</bpt>concurrency Namespace<ept id=\"p1\">](concurrency-namespace.md)</ept>","source":"[concurrency Namespace](concurrency-namespace.md)"}],"content":"---\ntitle: \"auto_partitioner Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"ppl/concurrency::auto_partitioner\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"auto_partitioner class\"\nms.assetid: 7cc08e5d-20b4-47a4-b4b5-c214a78f5a9e\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# auto_partitioner Class\nThe `auto_partitioner` class represents the default method `parallel_for`, `parallel_for_each` and `parallel_transform` use to partition the range they iterates over. This method of partitioning employes range stealing for load balancing as well as per-iterate cancellation.  \n  \n## Syntax  \n  \n```\nclass auto_partitioner;\n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[auto_partitioner::auto_partitioner Constructor](#ctor)|Constructs a `auto_partitioner` object.|  \n|[auto_partitioner::~auto_partitioner Destructor](#dtor)|Destroys a `auto_partitioner` object.|  \n  \n## Inheritance Hierarchy  \n `auto_partitioner`  \n  \n## Requirements  \n **Header:** ppl.h  \n  \n **Namespace:** concurrency  \n  \n##  <a name=\"dtor\"></a>  auto_partitioner::~auto_partitioner Destructor  \n Destroys a `auto_partitioner` object.  \n  \n```\n~auto_partitioner();\n```  \n  \n##  <a name=\"ctor\"></a>  auto_partitioner::auto_partitioner Constructor  \n Constructs a `auto_partitioner` object.  \n  \n```\nauto_partitioner();\n```  \n  \n## See Also  \n [concurrency Namespace](concurrency-namespace.md)\n"}