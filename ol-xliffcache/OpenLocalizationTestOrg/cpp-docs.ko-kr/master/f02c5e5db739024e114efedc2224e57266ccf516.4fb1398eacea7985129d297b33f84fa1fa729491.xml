{"nodes":[{"pos":[12,60],"content":"-Zc:auto (Deduce Variable Type) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"-Zc:auto (Deduce Variable Type) | Microsoft Docs","pos":[0,48]}]},{"content":"/Zc:auto (Deduce Variable Type)","pos":[722,753]},{"content":"The <bpt id=\"p1\">**</bpt>/Zc:auto[-]<ept id=\"p1\">**</ept> compiler option tells the compiler how to use the <bpt id=\"p2\">[</bpt>auto keyword<ept id=\"p2\">](../../cpp/auto-keyword.md)</ept> to declare variables.","pos":[754,887],"source":"The **/Zc:auto[-]** compiler option tells the compiler how to use the [auto keyword](../../cpp/auto-keyword.md) to declare variables."},{"content":"If you specify the default option, <bpt id=\"p1\">**</bpt>/Zc:auto<ept id=\"p1\">**</ept>, the compiler deduces the type of the declared variable from its initialization expression.","pos":[888,1027],"source":" If you specify the default option, **/Zc:auto**, the compiler deduces the type of the declared variable from its initialization expression."},{"content":"If you specify <bpt id=\"p1\">**</bpt>/Zc:auto-<ept id=\"p1\">**</ept>, the compiler allocates the variable to the automatic storage class.","pos":[1028,1125],"source":" If you specify **/Zc:auto-**, the compiler allocates the variable to the automatic storage class."},{"content":"Syntax","pos":[1134,1140]},{"content":"Remarks","pos":[1178,1185]},{"content":"The C++ standard defines an original and a revised meaning for the <ph id=\"ph1\">`auto`</ph> keyword.","pos":[1189,1271],"source":"The C++ standard defines an original and a revised meaning for the `auto` keyword."},{"content":"Before <ph id=\"ph1\">[!INCLUDE[cpp_dev10_long](../../build/includes/cpp_dev10_long_md.md)]</ph>, the keyword declares a variable in the automatic storage class; that is, a variable that has a local lifetime.","pos":[1272,1460],"source":" Before [!INCLUDE[cpp_dev10_long](../../build/includes/cpp_dev10_long_md.md)], the keyword declares a variable in the automatic storage class; that is, a variable that has a local lifetime."},{"content":"Starting with <ph id=\"ph1\">[!INCLUDE[cpp_dev10_long](../../build/includes/cpp_dev10_long_md.md)]</ph>, the keyword deduces the type of a variable from the declaration's initialization expression.","pos":[1461,1638],"source":" Starting with [!INCLUDE[cpp_dev10_long](../../build/includes/cpp_dev10_long_md.md)], the keyword deduces the type of a variable from the declaration's initialization expression."},{"content":"Use the <bpt id=\"p1\">**</bpt>/Zc:auto[-]<ept id=\"p1\">**</ept> compiler option to tell the compiler to use the original or revised meaning of the <ph id=\"ph1\">`auto`</ph> keyword.","pos":[1639,1761],"source":" Use the **/Zc:auto[-]** compiler option to tell the compiler to use the original or revised meaning of the `auto` keyword."},{"content":"The compiler issues an appropriate diagnostic message if your use of the <ph id=\"ph1\">`auto`</ph> keyword contradicts the current compiler option.","pos":[1768,1896],"source":"The compiler issues an appropriate diagnostic message if your use of the `auto` keyword contradicts the current compiler option."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>auto Keyword<ept id=\"p1\">](../../cpp/auto-keyword.md)</ept>.","pos":[1897,1965],"source":" For more information, see [auto Keyword](../../cpp/auto-keyword.md)."},{"content":"For more information about conformance issues with Visual C++, see <bpt id=\"p1\">[</bpt>Nonstandard Behavior<ept id=\"p1\">](../../cpp/nonstandard-behavior.md)</ept>.","pos":[1966,2091],"source":" For more information about conformance issues with Visual C++, see [Nonstandard Behavior](../../cpp/nonstandard-behavior.md)."},{"content":"To set this compiler option in Visual Studio","pos":[2101,2145]},{"content":"Open the project's <bpt id=\"p1\">**</bpt>Property Pages<ept id=\"p1\">**</ept> dialog box.","pos":[2155,2204],"source":"Open the project's **Property Pages** dialog box."},{"content":"For details, see <bpt id=\"p1\">[</bpt>Working with Project Properties<ept id=\"p1\">](../../ide/working-with-project-properties.md)</ept>.","pos":[2205,2302],"source":" For details, see [Working with Project Properties](../../ide/working-with-project-properties.md)."},{"pos":[2312,2356],"content":"Click the <bpt id=\"p1\">**</bpt>Configuration Properties<ept id=\"p1\">**</ept> node.","source":"Click the **Configuration Properties** node."},{"pos":[2366,2391],"content":"Click the <bpt id=\"p1\">**</bpt>C/C++<ept id=\"p1\">**</ept> node.","source":"Click the **C/C++** node."},{"pos":[2401,2433],"content":"Click the <bpt id=\"p1\">**</bpt>Command Line<ept id=\"p1\">**</ept> node.","source":"Click the **Command Line** node."},{"pos":[2443,2513],"content":"Add <bpt id=\"p1\">**</bpt>/Zc:auto<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>/Zc:auto-<ept id=\"p2\">**</ept> to the <bpt id=\"p3\">**</bpt>Additional options:<ept id=\"p3\">**</ept> pane.","source":"Add **/Zc:auto** or **/Zc:auto-** to the **Additional options:** pane."},{"content":"See Also","pos":[2522,2530]},{"content":"/Zc (Conformance)","pos":[2535,2552]},{"content":"auto Keyword","pos":[2600,2612]}],"content":"---\ntitle: \"-Zc:auto (Deduce Variable Type) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"/Zc:auto\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"-Zc compiler options (C++)\"\n  - \"Deduce variable type (C++)\"\n  - \"/Zc compiler options (C++)\"\n  - \"Zc compiler options (C++)\"\nms.assetid: 5f5bc102-44c3-4688-bbe1-080594dcee5c\ncaps.latest.revision: 9\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# /Zc:auto (Deduce Variable Type)\nThe **/Zc:auto[-]** compiler option tells the compiler how to use the [auto keyword](../../cpp/auto-keyword.md) to declare variables. If you specify the default option, **/Zc:auto**, the compiler deduces the type of the declared variable from its initialization expression. If you specify **/Zc:auto-**, the compiler allocates the variable to the automatic storage class.  \n  \n## Syntax  \n  \n```  \n/Zc:auto[-]  \n```  \n  \n## Remarks  \n The C++ standard defines an original and a revised meaning for the `auto` keyword. Before [!INCLUDE[cpp_dev10_long](../../build/includes/cpp_dev10_long_md.md)], the keyword declares a variable in the automatic storage class; that is, a variable that has a local lifetime. Starting with [!INCLUDE[cpp_dev10_long](../../build/includes/cpp_dev10_long_md.md)], the keyword deduces the type of a variable from the declaration's initialization expression. Use the **/Zc:auto[-]** compiler option to tell the compiler to use the original or revised meaning of the `auto` keyword.  \n  \n The compiler issues an appropriate diagnostic message if your use of the `auto` keyword contradicts the current compiler option. For more information, see [auto Keyword](../../cpp/auto-keyword.md). For more information about conformance issues with Visual C++, see [Nonstandard Behavior](../../cpp/nonstandard-behavior.md).  \n  \n### To set this compiler option in Visual Studio  \n  \n1.  Open the project's **Property Pages** dialog box. For details, see [Working with Project Properties](../../ide/working-with-project-properties.md).  \n  \n2.  Click the **Configuration Properties** node.  \n  \n3.  Click the **C/C++** node.  \n  \n4.  Click the **Command Line** node.  \n  \n5.  Add **/Zc:auto** or **/Zc:auto-** to the **Additional options:** pane.  \n  \n## See Also  \n [/Zc (Conformance)](../../build/reference/zc-conformance.md)   \n [auto Keyword](../../cpp/auto-keyword.md)"}