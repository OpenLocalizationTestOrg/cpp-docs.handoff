{"nodes":[{"pos":[12,79],"content":"Using Image Lists in an Extended Combo Box Control | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Using Image Lists in an Extended Combo Box Control | Microsoft Docs","pos":[0,67]}]},{"content":"Using Image Lists in an Extended Combo Box Control","pos":[690,740]},{"content":"The main feature of extended combo box controls is the ability to associate images from an image list with individual items in a combo box control.","pos":[741,888]},{"content":"Each item is able to display three different images: one for its selected state, one for its nonselected state, and a third for an overlay image.","pos":[889,1034]},{"content":"The following procedure associates an image list with an extended combo box control:","pos":[1041,1125]},{"content":"To associate an image list with an extended combo box control","pos":[1135,1196]},{"pos":[1206,1380],"content":"Construct a new image list (or use an existing image list object), using the <bpt id=\"p1\">[</bpt>CImageList<ept id=\"p1\">](../mfc/reference/cimagelist-class.md)</ept> constructor and storing the resultant pointer.","source":"Construct a new image list (or use an existing image list object), using the [CImageList](../mfc/reference/cimagelist-class.md) constructor and storing the resultant pointer."},{"content":"Initialize the new image list object by calling <bpt id=\"p1\">[</bpt>CImageList::Create<ept id=\"p1\">](../mfc/reference/cimagelist-class.md#cimagelist__create)</ept>.","pos":[1390,1516],"source":"Initialize the new image list object by calling [CImageList::Create](../mfc/reference/cimagelist-class.md#cimagelist__create)."},{"content":"The following code is one example of this call.","pos":[1517,1564]},{"pos":[1586,1614],"content":"NVC_MFCControlLadenDialog#10"},{"content":"Add optional images for each possible state: selected or nonselected, and an overlay.","pos":[1707,1792]},{"content":"The following code adds three predefined images.","pos":[1793,1841]},{"pos":[1863,1891],"content":"NVC_MFCControlLadenDialog#11"},{"pos":[1984,2134],"content":"Associate the image list with the control with a call to <bpt id=\"p1\">[</bpt>CComboBoxEx::SetImageList<ept id=\"p1\">](../mfc/reference/ccomboboxex-class.md#ccomboboxex__setimagelist)</ept>.","source":"Associate the image list with the control with a call to [CComboBoxEx::SetImageList](../mfc/reference/ccomboboxex-class.md#ccomboboxex__setimagelist)."},{"content":"Once the image list has been associated with the control, you can individually specify the images each item will use for the three possible states.","pos":[2141,2288]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Setting the Images for an Individual Item<ept id=\"p1\">](../mfc/setting-the-images-for-an-individual-item.md)</ept>.","pos":[2289,2412],"source":" For more information, see [Setting the Images for an Individual Item](../mfc/setting-the-images-for-an-individual-item.md)."},{"content":"See Also","pos":[2421,2429]},{"content":"Using CComboBoxEx","pos":[2434,2451]},{"content":"Controls","pos":[2487,2495]}],"content":"---\ntitle: \"Using Image Lists in an Extended Combo Box Control | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"image lists [C++], combo boxes\"\n  - \"extended combo boxes, images\"\n  - \"images [C++], combo box items\"\nms.assetid: dfff25fe-af70-47a2-8032-3901d1e6842d\ncaps.latest.revision: 11\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Using Image Lists in an Extended Combo Box Control\nThe main feature of extended combo box controls is the ability to associate images from an image list with individual items in a combo box control. Each item is able to display three different images: one for its selected state, one for its nonselected state, and a third for an overlay image.  \n  \n The following procedure associates an image list with an extended combo box control:  \n  \n### To associate an image list with an extended combo box control  \n  \n1.  Construct a new image list (or use an existing image list object), using the [CImageList](../mfc/reference/cimagelist-class.md) constructor and storing the resultant pointer.  \n  \n2.  Initialize the new image list object by calling [CImageList::Create](../mfc/reference/cimagelist-class.md#cimagelist__create). The following code is one example of this call.  \n  \n     [!code-cpp[NVC_MFCControlLadenDialog#10](../mfc/codesnippet/cpp/using-image-lists-in-an-extended-combo-box-control_1.cpp)]  \n  \n3.  Add optional images for each possible state: selected or nonselected, and an overlay. The following code adds three predefined images.  \n  \n     [!code-cpp[NVC_MFCControlLadenDialog#11](../mfc/codesnippet/cpp/using-image-lists-in-an-extended-combo-box-control_2.cpp)]  \n  \n4.  Associate the image list with the control with a call to [CComboBoxEx::SetImageList](../mfc/reference/ccomboboxex-class.md#ccomboboxex__setimagelist).  \n  \n Once the image list has been associated with the control, you can individually specify the images each item will use for the three possible states. For more information, see [Setting the Images for an Individual Item](../mfc/setting-the-images-for-an-individual-item.md).  \n  \n## See Also  \n [Using CComboBoxEx](../mfc/using-ccomboboxex.md)   \n [Controls](../mfc/controls-mfc.md)\n\n"}