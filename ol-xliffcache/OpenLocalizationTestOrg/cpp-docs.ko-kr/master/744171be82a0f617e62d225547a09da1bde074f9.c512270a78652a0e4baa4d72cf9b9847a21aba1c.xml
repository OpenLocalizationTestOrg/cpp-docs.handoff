{"nodes":[{"pos":[12,60],"content":"CComSimpleThreadAllocator Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CComSimpleThreadAllocator Class | Microsoft Docs","pos":[0,48]}]},{"pos":[811,842],"content":"CComSimpleThreadAllocator Class","linkify":"CComSimpleThreadAllocator Class","nodes":[{"content":"CComSimpleThreadAllocator Class","pos":[0,31]}]},{"pos":[843,916],"content":"This class manages thread selection for the class <ph id=\"ph1\">`CComAutoThreadModule`</ph>.","source":"This class manages thread selection for the class `CComAutoThreadModule`."},{"pos":[925,931],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[985,992],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[1002,1016],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1023,1027]},{"content":"Description","pos":[1028,1039]},{"pos":[1077,1154],"content":"<bpt id=\"p1\">[</bpt>CComSimpleThreadAllocator::GetThread<ept id=\"p1\">](#ccomsimplethreadallocator__getthread)</ept>","source":"[CComSimpleThreadAllocator::GetThread](#ccomsimplethreadallocator__getthread)"},{"content":"Selects a thread.","pos":[1155,1172]},{"pos":[1182,1189],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"<ph id=\"ph1\">`CComSimpleThreadAllocator`</ph> manages thread selection for <bpt id=\"p1\">[</bpt>CComAutoThreadModule<ept id=\"p1\">](../../atl/reference/ccomautothreadmodule-class.md)</ept>.","pos":[1193,1324],"source":"`CComSimpleThreadAllocator` manages thread selection for [CComAutoThreadModule](../../atl/reference/ccomautothreadmodule-class.md)."},{"content":"<ph id=\"ph1\">`CComSimpleThreadAllocator::GetThread`</ph> simply cycles through each thread and returns the next one in the sequence.","pos":[1325,1439],"source":"`CComSimpleThreadAllocator::GetThread` simply cycles through each thread and returns the next one in the sequence."},{"pos":[1448,1460],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1464,1485],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlbase.h","source":"**Header:** atlbase.h"},{"pos":[1495,1584],"content":"<bpt id=\"p1\">&lt;a name=\"ccomsimplethreadallocator__getthread\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CComSimpleThreadAllocator::GetThread","linkify":"<a name=\"ccomsimplethreadallocator__getthread\"></a>  CComSimpleThreadAllocator::GetThread","source":"<a name=\"ccomsimplethreadallocator__getthread\"></a>  CComSimpleThreadAllocator::GetThread"},{"content":"Selects a thread by specifying the next thread in the sequence.","pos":[1588,1651]},{"pos":[1736,1746],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Not used in ATL's default implementation.","pos":[1760,1801]},{"content":"The maximum number of threads in the EXE module.","pos":[1822,1870]},{"pos":[1880,1892],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer between zero and ( <ph id=\"ph1\">`nThreads`</ph> – 1).","pos":[1896,1942],"source":"An integer between zero and ( `nThreads` – 1)."},{"content":"Identifies one of the threads in the EXE module.","pos":[1943,1991]},{"pos":[2001,2008],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2012,2123],"content":"You can override <ph id=\"ph1\">`GetThread`</ph> to provide a different method of selection or to make use of the <ph id=\"ph2\">`pApt`</ph> parameter.","source":"You can override `GetThread` to provide a different method of selection or to make use of the `pApt` parameter."},{"pos":[2130,2282],"content":"<ph id=\"ph1\">`GetThread`</ph> is called by <bpt id=\"p1\">[</bpt>CComAutoThreadModule::CreateInstance<ept id=\"p1\">](../../atl/reference/ccomautothreadmodule-class.md#ccomautothreadmodule__createinstance)</ept>.","source":"`GetThread` is called by [CComAutoThreadModule::CreateInstance](../../atl/reference/ccomautothreadmodule-class.md#ccomautothreadmodule__createinstance)."},{"pos":[2291,2299],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>CComApartment Class<ept id=\"p1\">](../../atl/reference/ccomapartment-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[2303,2369],"source":"[CComApartment Class](../../atl/reference/ccomapartment-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Class Overview<ept id=\"p1\">](../../atl/atl-class-overview.md)</ept>","pos":[2372,2422],"source":" [Class Overview](../../atl/atl-class-overview.md)"}],"content":"---\ntitle: \"CComSimpleThreadAllocator Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CComSimpleThreadAllocator\"\n  - \"ATL::CComSimpleThreadAllocator\"\n  - \"ATL.CComSimpleThreadAllocator\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"threading [ATL], selecting threads\"\n  - \"ATL threads\"\n  - \"CComSimpleThreadAllocator class\"\n  - \"ATL threads, allocating\"\nms.assetid: 66b2166a-8c50-49fd-b8e4-7f293470327d\ncaps.latest.revision: 19\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CComSimpleThreadAllocator Class\nThis class manages thread selection for the class `CComAutoThreadModule`.  \n  \n## Syntax  \n  \n```\nclass CComSimpleThreadAllocator\n```  \n  \n## Members  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CComSimpleThreadAllocator::GetThread](#ccomsimplethreadallocator__getthread)|Selects a thread.|  \n  \n## Remarks  \n `CComSimpleThreadAllocator` manages thread selection for [CComAutoThreadModule](../../atl/reference/ccomautothreadmodule-class.md). `CComSimpleThreadAllocator::GetThread` simply cycles through each thread and returns the next one in the sequence.  \n  \n## Requirements  \n **Header:** atlbase.h  \n  \n##  <a name=\"ccomsimplethreadallocator__getthread\"></a>  CComSimpleThreadAllocator::GetThread  \n Selects a thread by specifying the next thread in the sequence.  \n  \n```\nint GetThread(\n    CComApartment* /* pApt */,  int nThreads);\n```  \n  \n### Parameters  \n `pApt`  \n Not used in ATL's default implementation.  \n  \n `nThreads`  \n The maximum number of threads in the EXE module.  \n  \n### Return Value  \n An integer between zero and ( `nThreads` – 1). Identifies one of the threads in the EXE module.  \n  \n### Remarks  \n You can override `GetThread` to provide a different method of selection or to make use of the `pApt` parameter.  \n  \n `GetThread` is called by [CComAutoThreadModule::CreateInstance](../../atl/reference/ccomautothreadmodule-class.md#ccomautothreadmodule__createinstance).  \n  \n## See Also  \n [CComApartment Class](../../atl/reference/ccomapartment-class.md)   \n [Class Overview](../../atl/atl-class-overview.md)\n"}