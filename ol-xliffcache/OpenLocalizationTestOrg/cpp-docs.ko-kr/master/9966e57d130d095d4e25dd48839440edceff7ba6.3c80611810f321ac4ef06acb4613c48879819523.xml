{"nodes":[{"pos":[12,65],"content":"_strdec, _wcsdec, _mbsdec, _mbsdec_l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_strdec, _wcsdec, _mbsdec, _mbsdec_l | Microsoft Docs","pos":[0,53]}]},{"content":"_strdec, _wcsdec, _mbsdec, _mbsdec_l","pos":[1286,1322]},{"content":"Moves a string pointer back one character.","pos":[1323,1365]},{"pos":[1373,1648],"content":"[!IMPORTANT]\n `mbsdec` and `mbsdec_l` cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":" and `mbsdec_l` cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","pos":[22,273],"nodes":[{"content":"and <ph id=\"ph1\">`mbsdec_l`</ph> cannot be used in applications that execute in the <ph id=\"ph2\">[!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]</ph>.","pos":[1,123],"source":" and `mbsdec_l` cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.","pos":[124,251],"source":" For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)."}]}]},{"content":"Syntax","pos":[1657,1663]},{"content":"Parameters","pos":[2118,2128]},{"content":"Pointer to any character (or for <ph id=\"ph1\">`_mbsdec`</ph> and _<ph id=\"ph2\">`mbsdec_l`</ph>, the first byte of any multibyte character) in the source string; <ph id=\"ph3\">`start`</ph> must precede <ph id=\"ph4\">`current`</ph> in the source string.","pos":[2143,2320],"source":" Pointer to any character (or for `_mbsdec` and _`mbsdec_l`, the first byte of any multibyte character) in the source string; `start` must precede `current` in the source string."},{"content":"Pointer to any character (or for <ph id=\"ph1\">`_mbsdec`</ph> and _<ph id=\"ph2\">`mbsdec_l`</ph>, the first byte of any multibyte character) in the source string; <ph id=\"ph3\">`current`</ph> must follow <ph id=\"ph4\">`start`</ph> in the source string.","pos":[2340,2516],"source":" Pointer to any character (or for `_mbsdec` and _`mbsdec_l`, the first byte of any multibyte character) in the source string; `current` must follow `start` in the source string."},{"content":"Locale to use.","pos":[2535,2549]},{"content":"Return Value","pos":[2558,2570]},{"content":", _<ph id=\"ph1\">`mbsdec_l`</ph>, <ph id=\"ph2\">`_strdec`</ph>, and <ph id=\"ph3\">`_wcsdec`</ph> each return a pointer to the character that immediately precedes <ph id=\"ph4\">`current`</ph>; <ph id=\"ph5\">`_mbsdec`</ph> returns <ph id=\"ph6\">`NULL`</ph> if the value of <ph id=\"ph7\">`start`</ph> is greater than or equal to that of <ph id=\"ph8\">`current`</ph>.","pos":[2583,2794],"source":", _`mbsdec_l`, `_strdec`, and `_wcsdec` each return a pointer to the character that immediately precedes `current`; `_mbsdec` returns `NULL` if the value of `start` is greater than or equal to that of `current`."},{"content":"maps to one of these functions and its return value depends on the mapping.","pos":[2805,2880]},{"content":"Remarks","pos":[2889,2896]},{"pos":[2900,3074],"content":"The <ph id=\"ph1\">`_mbsdec`</ph> and <ph id=\"ph2\">`_mbsdec_l`</ph> functions return a pointer to the first byte of the multibyte character that immediately precedes <ph id=\"ph3\">`current`</ph> in the string that contains <ph id=\"ph4\">`start`</ph>.","source":"The `_mbsdec` and `_mbsdec_l` functions return a pointer to the first byte of the multibyte character that immediately precedes `current` in the string that contains `start`."},{"content":"The output value is affected by the setting of the <ph id=\"ph1\">`LC_CTYPE`</ph> category setting of the locale; see <bpt id=\"p1\">[</bpt>setlocale, _wsetlocale<ept id=\"p1\">](../../c-runtime-library/reference/setlocale-wsetlocale.md)</ept> for more information.","pos":[3081,3284],"source":"The output value is affected by the setting of the `LC_CTYPE` category setting of the locale; see [setlocale, _wsetlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md) for more information."},{"content":"recognizes multibyte-character sequences according to the locale that's currently in use, while <ph id=\"ph1\">`_mbsdec_l`</ph> is identical except that it instead uses the locale parameter that's passed in.","pos":[3296,3483],"source":" recognizes multibyte-character sequences according to the locale that's currently in use, while `_mbsdec_l` is identical except that it instead uses the locale parameter that's passed in."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Locale<ept id=\"p1\">](../../c-runtime-library/locale.md)</ept>.","pos":[3484,3554],"source":" For more information, see [Locale](../../c-runtime-library/locale.md)."},{"content":"If <ph id=\"ph1\">`start`</ph> or <ph id=\"ph2\">`current`</ph> is <ph id=\"ph3\">`NULL`</ph>, the invalid parameter handler is invoked, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[3561,3726],"source":"If `start` or `current` is `NULL`, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, this function returns <ph id=\"ph1\">`EINVAL`</ph> and sets <ph id=\"ph2\">`errno`</ph> to <ph id=\"ph3\">`EINVAL`</ph>.","pos":[3727,3824],"source":" If execution is allowed to continue, this function returns `EINVAL` and sets `errno` to `EINVAL`."},{"pos":[3832,4133],"content":"[!IMPORTANT]\n These functions might be vulnerable to buffer overrun threats. Buffer overruns can be used for system attacks because they can cause an unwarranted elevation of privilege. For more information, see [Avoiding Buffer Overruns](http://msdn.microsoft.com/library/windows/desktop/ms717795).","leadings":["","> "],"nodes":[{"content":" These functions might be vulnerable to buffer overrun threats. Buffer overruns can be used for system attacks because they can cause an unwarranted elevation of privilege. For more information, see [Avoiding Buffer Overruns](http://msdn.microsoft.com/library/windows/desktop/ms717795).","pos":[13,299],"nodes":[{"content":"These functions might be vulnerable to buffer overrun threats.","pos":[1,63]},{"content":"Buffer overruns can be used for system attacks because they can cause an unwarranted elevation of privilege.","pos":[64,172]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Avoiding Buffer Overruns<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms717795)</ept>.","pos":[173,286],"source":" For more information, see [Avoiding Buffer Overruns](http://msdn.microsoft.com/library/windows/desktop/ms717795)."}]}]},{"content":"Generic-Text Routine Mappings","pos":[4143,4172]},{"content":"Tchar.h routine","pos":[4179,4194]},{"content":"_UNICODE and _MBCS not defined","pos":[4195,4225]},{"content":"_MBCS defined","pos":[4226,4239]},{"content":"_UNICODE defined","pos":[4240,4256]},{"content":"and <ph id=\"ph1\">`_wcsdec`</ph> are single-byte-character and wide-character versions of <ph id=\"ph2\">`_mbsdec`</ph> and <ph id=\"ph3\">`_mbsdec_l`</ph>.","pos":[4428,4525],"source":" and `_wcsdec` are single-byte-character and wide-character versions of `_mbsdec` and `_mbsdec_l`."},{"content":"and <ph id=\"ph1\">`_wcsdec`</ph> are provided only for this mapping and should not be used otherwise.","pos":[4536,4618],"source":" and `_wcsdec` are provided only for this mapping and should not be used otherwise."},{"pos":[4625,4815],"content":"For more information, see <bpt id=\"p1\">[</bpt>Using Generic-Text Mappings<ept id=\"p1\">](../../c-runtime-library/using-generic-text-mappings.md)</ept> and <bpt id=\"p2\">[</bpt>Generic-Text Mappings<ept id=\"p2\">](../../c-runtime-library/generic-text-mappings.md)</ept>.","source":"For more information, see [Using Generic-Text Mappings](../../c-runtime-library/using-generic-text-mappings.md) and [Generic-Text Mappings](../../c-runtime-library/generic-text-mappings.md)."},{"content":"Requirements","pos":[4824,4836]},{"content":"Routine","pos":[4843,4850]},{"content":"Required header","pos":[4851,4866]},{"content":"Optional header","pos":[4867,4882]},{"content":"mbstring.h&gt;","pos":[4961,4972],"source":"mbstring.h>"},{"content":"mbctype.h&gt;","pos":[4975,4985],"source":"mbctype.h>"},{"content":"mbstring.h&gt;","pos":[5004,5015],"source":"mbstring.h>"},{"content":"mbctype.h&gt;","pos":[5018,5028],"source":"mbctype.h>"},{"content":"tchar.h&gt;","pos":[5045,5053],"source":"tchar.h>"},{"content":"tchar.h&gt;","pos":[5071,5079],"source":"tchar.h>"},{"pos":[5088,5186],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":"Example","pos":[5195,5202]},{"pos":[5206,5253],"content":"The following example shows a use of <ph id=\"ph1\">`_tcsdec`</ph>.","source":"The following example shows a use of `_tcsdec`."},{"pos":[5661,5708],"content":"The following example shows a use of <ph id=\"ph1\">`_mbsdec`</ph>.","source":"The following example shows a use of `_mbsdec`."},{"content":".NET Framework Equivalent","pos":[6181,6206]},{"content":"Not applicable.","pos":[6210,6225]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[6226,6273],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[6274,6399],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"content":"See Also","pos":[6408,6416]},{"content":"String Manipulation","pos":[6421,6440]},{"content":"_strinc, _wcsinc, _mbsinc, _mbsinc_l","pos":[6499,6535]},{"content":"_strnextc, _wcsnextc, _mbsnextc, _mbsnextc_l","pos":[6610,6654]},{"content":"_strninc, _wcsninc, _mbsninc, _mbsninc_l","pos":[6737,6777]}],"content":"---\ntitle: \"_strdec, _wcsdec, _mbsdec, _mbsdec_l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_wcsdec\"\n  - \"_strdec\"\n  - \"_mbsdec\"\n  - \"_mbsdec_l\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-multibyte-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_strdec\"\n  - \"mbsdec_l\"\n  - \"strdec\"\n  - \"_mbsdec\"\n  - \"_mbsdec_l\"\n  - \"mbsdec\"\n  - \"wcsdec\"\n  - \"_wcsdec\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"mbsdec_l function\"\n  - \"mbsdec function\"\n  - \"tcsdec function\"\n  - \"_tcsdec function\"\n  - \"_strdec function\"\n  - \"_wcsdec function\"\n  - \"_mbsdec_l function\"\n  - \"strdec function\"\n  - \"wcsdec function\"\n  - \"_mbsdec function\"\nms.assetid: ae37c223-800f-48a9-ae8e-38c8d20af2dd\ncaps.latest.revision: 24\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _strdec, _wcsdec, _mbsdec, _mbsdec_l\nMoves a string pointer back one character.  \n  \n> [!IMPORTANT]\n>  `mbsdec` and `mbsdec_l` cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \nunsigned char *_strdec(  \n   const unsigned char *start,  \n   const unsigned char *current   \n);  \nunsigned wchar_t *_wcsdec(  \n   const unsigned wchar_t *start,  \n   const unsigned wchar_t *current   \n);  \nunsigned char *_mbsdec(  \n   const unsigned char *start,  \n   const unsigned char *current   \n);  \nunsigned char *_mbsdec_l(  \n   const unsigned char *start,  \n   const unsigned char *current,  \n   _locale_t locale  \n);  \n```  \n  \n#### Parameters  \n `start`  \n Pointer to any character (or for `_mbsdec` and _`mbsdec_l`, the first byte of any multibyte character) in the source string; `start` must precede `current` in the source string.  \n  \n `current`  \n Pointer to any character (or for `_mbsdec` and _`mbsdec_l`, the first byte of any multibyte character) in the source string; `current` must follow `start` in the source string.  \n  \n `locale`  \n Locale to use.  \n  \n## Return Value  \n `_mbsdec`, _`mbsdec_l`, `_strdec`, and `_wcsdec` each return a pointer to the character that immediately precedes `current`; `_mbsdec` returns `NULL` if the value of `start` is greater than or equal to that of `current`. `_tcsdec` maps to one of these functions and its return value depends on the mapping.  \n  \n## Remarks  \n The `_mbsdec` and `_mbsdec_l` functions return a pointer to the first byte of the multibyte character that immediately precedes `current` in the string that contains `start`.  \n  \n The output value is affected by the setting of the `LC_CTYPE` category setting of the locale; see [setlocale, _wsetlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md) for more information.  `_mbsdec` recognizes multibyte-character sequences according to the locale that's currently in use, while `_mbsdec_l` is identical except that it instead uses the locale parameter that's passed in. For more information, see [Locale](../../c-runtime-library/locale.md).  \n  \n If `start` or `current` is `NULL`, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, this function returns `EINVAL` and sets `errno` to `EINVAL`.  \n  \n> [!IMPORTANT]\n>  These functions might be vulnerable to buffer overrun threats. Buffer overruns can be used for system attacks because they can cause an unwarranted elevation of privilege. For more information, see [Avoiding Buffer Overruns](http://msdn.microsoft.com/library/windows/desktop/ms717795).  \n  \n### Generic-Text Routine Mappings  \n  \n|Tchar.h routine|_UNICODE and _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|--------------------------------------|--------------------|-----------------------|  \n|`_tcsdec`|`_strdec`|`_mbsdec`|`_wcsdec`|  \n  \n `_strdec` and `_wcsdec` are single-byte-character and wide-character versions of `_mbsdec` and `_mbsdec_l`. `_strdec` and `_wcsdec` are provided only for this mapping and should not be used otherwise.  \n  \n For more information, see [Using Generic-Text Mappings](../../c-runtime-library/using-generic-text-mappings.md) and [Generic-Text Mappings](../../c-runtime-library/generic-text-mappings.md).  \n  \n## Requirements  \n  \n|Routine|Required header|Optional header|  \n|-------------|---------------------|---------------------|  \n|`_mbsdec`|\\<mbstring.h>|\\<mbctype.h>|  \n|`_mbsdec_l`|\\<mbstring.h>|\\<mbctype.h>|  \n|`_strdec`|\\<tchar.h>||  \n|`_wcsdec`|\\<tchar.h>||  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n The following example shows a use of `_tcsdec`.  \n  \n```  \n  \n      #include <iostream>  \n#include <tchar.h>  \nusing namespace std;  \n  \nint main()  \n{  \n   const TCHAR *str = _T(\"12345\");  \n   cout << \"str: \" << str << endl;  \n  \n   const TCHAR *str2;  \n   str2 = str + 2;  \n   cout << \"str2: \" << str2 << endl;  \n  \n   TCHAR *answer;  \n   answer = _tcsdec( str, str2 );  \n   cout << \"answer: \" << answer << endl;  \n  \n   return (0);   \n}  \n  \n```  \n  \n The following example shows a use of `_mbsdec`.  \n  \n```  \n#include <iostream>  \n#include <mbstring.h>  \nusing namespace std;  \n  \nint main()   \n{   \n   char *str = \"12345\";  \n   cout << \"str: \" << str << endl;  \n  \n   char *str2;  \n   str2 = str + 2;   \n   cout << \"str2: \" << str2 << endl;  \n  \n   unsigned char *answer;  \n   answer = _mbsdec( reinterpret_cast<unsigned char *>( str ), reinterpret_cast<unsigned char *>( str2 ));  \n  \n   cout << \"answer: \" << answer << endl;  \n  \n   return (0);   \n}  \n  \n```  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [String Manipulation](../../c-runtime-library/string-manipulation-crt.md)   \n [_strinc, _wcsinc, _mbsinc, _mbsinc_l](../../c-runtime-library/reference/strinc-wcsinc-mbsinc-mbsinc-l.md)   \n [_strnextc, _wcsnextc, _mbsnextc, _mbsnextc_l](../../c-runtime-library/reference/strnextc-wcsnextc-mbsnextc-mbsnextc-l.md)   \n [_strninc, _wcsninc, _mbsninc, _mbsninc_l](../../c-runtime-library/reference/strninc-wcsninc-mbsninc-mbsninc-l.md)"}