{"nodes":[{"pos":[12,55],"content":"auto_gcroot::operator bool | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"auto_gcroot::operator bool | Microsoft Docs","pos":[0,43]}]},{"content":"auto_gcroot::operator bool","pos":[757,783]},{"pos":[784,845],"content":"Operator for using <ph id=\"ph1\">`auto_gcroot`</ph> in a conditional expression.","source":"Operator for using `auto_gcroot` in a conditional expression."},{"content":"Syntax","pos":[854,860]},{"content":"Return Value","pos":[909,921]},{"pos":[932,982],"content":"if the wrapped object is valid; <ph id=\"ph1\">`false`</ph> otherwise.","source":" if the wrapped object is valid; `false` otherwise."},{"content":"Remarks","pos":[991,998]},{"pos":[1002,1143],"content":"This operator actually converts to <ph id=\"ph1\">`_detail_class::_safe_bool`</ph> which is safer than <ph id=\"ph2\">`bool`</ph> because it cannot be converted to an integral type.","source":"This operator actually converts to `_detail_class::_safe_bool` which is safer than `bool` because it cannot be converted to an integral type."},{"content":"Example","pos":[1152,1159]},{"content":"Requirements","pos":[1819,1831]},{"pos":[1835,1873],"content":"<bpt id=\"p1\">**</bpt>Header file<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>msclr\\auto_gcroot.h&gt;","source":"**Header file** \\<msclr\\auto_gcroot.h>"},{"pos":[1880,1899],"content":"<bpt id=\"p1\">**</bpt>Namespace<ept id=\"p1\">**</ept> msclr","source":"**Namespace** msclr"},{"content":"See Also","pos":[1908,1916]},{"content":"auto_gcroot Members","pos":[1921,1940]},{"content":"auto_gcroot::operator!","pos":[1981,2003]}],"content":"---\ntitle: \"auto_gcroot::operator bool | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"auto_gcroot.operator bool\"\n  - \"auto_gcroot::operator bool\"\n  - \"msclr.auto_gcroot.operator bool\"\n  - \"msclr::auto_gcroot::operator bool\"\n  - \"operator bool\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"bool operator\"\nms.assetid: 87d38498-4221-4de8-8d02-c2dd2e6274ec\ncaps.latest.revision: 15\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# auto_gcroot::operator bool\nOperator for using `auto_gcroot` in a conditional expression.  \n  \n## Syntax  \n  \n```  \noperator bool() const;  \n```  \n  \n## Return Value  \n `true` if the wrapped object is valid; `false` otherwise.  \n  \n## Remarks  \n This operator actually converts to `_detail_class::_safe_bool` which is safer than `bool` because it cannot be converted to an integral type.  \n  \n## Example  \n  \n```  \n// msl_auto_gcroot_operator_bool.cpp  \n// compile with: /clr  \n#include <msclr\\auto_gcroot.h>  \n  \nusing namespace System;  \nusing namespace msclr;  \n  \nint main() {  \n   auto_gcroot<String^> s;  \n   if ( s ) Console::WriteLine( \"s is valid\" );  \n   if ( !s ) Console::WriteLine( \"s is invalid\" );  \n   s = \"something\";  \n   if ( s ) Console::WriteLine( \"now s is valid\" );  \n   if ( !s ) Console::WriteLine( \"now s is invalid\" );  \n   s.reset();  \n   if ( s ) Console::WriteLine( \"now s is valid\" );  \n   if ( !s ) Console::WriteLine( \"now s is invalid\" );  \n}  \n```  \n  \n```Output  \ns is invalid  \nnow s is valid  \nnow s is invalid  \n```  \n  \n## Requirements  \n **Header file** \\<msclr\\auto_gcroot.h>  \n  \n **Namespace** msclr  \n  \n## See Also  \n [auto_gcroot Members](../dotnet/auto-gcroot-members.md)   \n [auto_gcroot::operator!](../dotnet/auto-gcroot-operator-logical-not.md)"}