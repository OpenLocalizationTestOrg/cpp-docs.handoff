{"nodes":[{"pos":[12,49],"content":"CFieldExchange Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CFieldExchange Class | Microsoft Docs","pos":[0,37]}]},{"pos":[826,846],"content":"CFieldExchange Class","linkify":"CFieldExchange Class","nodes":[{"content":"CFieldExchange Class","pos":[0,20]}]},{"content":"Supports the record field exchange (RFX) and bulk record field exchange (Bulk RFX) routines used by the database classes.","pos":[847,968]},{"pos":[977,983],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1030,1037],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[1047,1061],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1068,1072]},{"content":"Description","pos":[1073,1084]},{"pos":[1122,1181],"content":"<bpt id=\"p1\">[</bpt>CFieldExchange::IsFieldType<ept id=\"p1\">](#cfieldexchange__isfieldtype)</ept>","source":"[CFieldExchange::IsFieldType](#cfieldexchange__isfieldtype)"},{"content":"Returns nonzero if the current operation is appropriate for the type of field being updated.","pos":[1182,1274]},{"pos":[1279,1340],"content":"<bpt id=\"p1\">[</bpt>CFieldExchange::SetFieldType<ept id=\"p1\">](#cfieldexchange__setfieldtype)</ept>","source":"[CFieldExchange::SetFieldType](#cfieldexchange__setfieldtype)"},{"pos":[1341,1499],"content":"Specifies the type of recordset data member — column or parameter — represented by all following calls to RFX functions until the next call to <ph id=\"ph1\">`SetFieldType`</ph>.","source":"Specifies the type of recordset data member — column or parameter — represented by all following calls to RFX functions until the next call to `SetFieldType`."},{"pos":[1509,1516],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1520,1564],"content":"<ph id=\"ph1\">`CFieldExchange`</ph> does not have a base class.","source":"`CFieldExchange` does not have a base class."},{"content":"Use this class if you are writing data exchange routines for custom data types or when you are implementing bulk row fetching; otherwise, you will not directly use this class.","pos":[1571,1746]},{"content":"RFX and Bulk RFX exchanges data between the field data members of your recordset object and the corresponding fields of the current record on the data source.","pos":[1747,1905]},{"pos":[1913,2249],"content":"[!NOTE]\n If you are working with the Data Access Objects (DAO) classes rather than the Open Database Connectivity (ODBC) classes, use class [CDaoFieldExchange](../../mfc/reference/cdaofieldexchange-class.md) instead. For more information, see the article [Overview:Database Programming](../../data/data-access-programming-mfc-atl.md).","leadings":["","> "],"nodes":[{"content":" If you are working with the Data Access Objects (DAO) classes rather than the Open Database Connectivity (ODBC) classes, use class [CDaoFieldExchange](../../mfc/reference/cdaofieldexchange-class.md) instead. For more information, see the article [Overview:Database Programming](../../data/data-access-programming-mfc-atl.md).","pos":[8,334],"nodes":[{"content":"If you are working with the Data Access Objects (DAO) classes rather than the Open Database Connectivity (ODBC) classes, use class <bpt id=\"p1\">[</bpt>CDaoFieldExchange<ept id=\"p1\">](../../mfc/reference/cdaofieldexchange-class.md)</ept> instead.","pos":[1,208],"source":" If you are working with the Data Access Objects (DAO) classes rather than the Open Database Connectivity (ODBC) classes, use class [CDaoFieldExchange](../../mfc/reference/cdaofieldexchange-class.md) instead."},{"content":"For more information, see the article <bpt id=\"p1\">[</bpt>Overview:Database Programming<ept id=\"p1\">](../../data/data-access-programming-mfc-atl.md)</ept>.","pos":[209,326],"source":" For more information, see the article [Overview:Database Programming](../../data/data-access-programming-mfc-atl.md)."}]}]},{"content":"A <ph id=\"ph1\">`CFieldExchange`</ph> object provides the context information needed for record field exchange or bulk record field exchange to take place.","pos":[2256,2392],"source":"A `CFieldExchange` object provides the context information needed for record field exchange or bulk record field exchange to take place."},{"content":"<ph id=\"ph1\">`CFieldExchange`</ph> objects support a number of operations, including binding parameters and field data members and setting various flags on the fields of the current record.","pos":[2393,2564],"source":"`CFieldExchange` objects support a number of operations, including binding parameters and field data members and setting various flags on the fields of the current record."},{"content":"RFX and Bulk RFX operations are performed on recordset-class data members of types defined by the <ph id=\"ph1\">`enum`</ph><bpt id=\"p1\">**</bpt>FieldType<ept id=\"p1\">**</ept> in <ph id=\"ph2\">`CFieldExchange`</ph>.","pos":[2565,2703],"source":" RFX and Bulk RFX operations are performed on recordset-class data members of types defined by the `enum`**FieldType** in `CFieldExchange`."},{"content":"Possible <bpt id=\"p1\">**</bpt>FieldType<ept id=\"p1\">**</ept> values are:","pos":[2704,2738],"source":" Possible **FieldType** values are:"},{"pos":[2746,2802],"content":"<bpt id=\"p1\">**</bpt>CFieldExchange::outputColumn<ept id=\"p1\">**</ept> for field data members.","source":"**CFieldExchange::outputColumn** for field data members."},{"pos":[2810,2903],"content":"<bpt id=\"p1\">**</bpt>CFieldExchange::inputParam<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>CFieldExchange::param<ept id=\"p2\">**</ept> for input parameter data members.","source":"**CFieldExchange::inputParam** or **CFieldExchange::param** for input parameter data members."},{"pos":[2911,2977],"content":"<bpt id=\"p1\">**</bpt>CFieldExchange::outputParam<ept id=\"p1\">**</ept> for output parameter data members.","source":"**CFieldExchange::outputParam** for output parameter data members."},{"pos":[2985,3056],"content":"<bpt id=\"p1\">**</bpt>CFieldExchange::inoutParam<ept id=\"p1\">**</ept> for input/output parameter data members.","source":"**CFieldExchange::inoutParam** for input/output parameter data members."},{"content":"Most of the class's member functions and data members are provided for writing your own custom RFX routines.","pos":[3063,3171]},{"content":"You will use <ph id=\"ph1\">`SetFieldType`</ph> frequently.","pos":[3172,3211],"source":" You will use `SetFieldType` frequently."},{"content":"For more information, see the articles <bpt id=\"p1\">[</bpt>Record Field Exchange (RFX)<ept id=\"p1\">](../../data/odbc/record-field-exchange-rfx.md)</ept> and <bpt id=\"p2\">[</bpt>Recordset (ODBC)<ept id=\"p2\">](../../data/odbc/recordset-odbc.md)</ept>.","pos":[3212,3385],"source":" For more information, see the articles [Record Field Exchange (RFX)](../../data/odbc/record-field-exchange-rfx.md) and [Recordset (ODBC)](../../data/odbc/recordset-odbc.md)."},{"content":"For information about bulk row fetching, see the article <bpt id=\"p1\">[</bpt>Recordset: Fetching Records in Bulk (ODBC)<ept id=\"p1\">](../../data/odbc/recordset-fetching-records-in-bulk-odbc.md)</ept>.","pos":[3386,3548],"source":" For information about bulk row fetching, see the article [Recordset: Fetching Records in Bulk (ODBC)](../../data/odbc/recordset-fetching-records-in-bulk-odbc.md)."},{"content":"For details about the RFX and Bulk RFX global functions, see <bpt id=\"p1\">[</bpt>Record Field Exchange Functions<ept id=\"p1\">](../../mfc/reference/record-field-exchange-functions.md)</ept> in the MFC Macros and Globals section of this reference.","pos":[3549,3756],"source":" For details about the RFX and Bulk RFX global functions, see [Record Field Exchange Functions](../../mfc/reference/record-field-exchange-functions.md) in the MFC Macros and Globals section of this reference."},{"pos":[3765,3786],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[3815,3827],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3831,3850],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxdb.h","source":"**Header:** afxdb.h"},{"pos":[3860,3931],"content":"<bpt id=\"p1\">&lt;a name=\"cfieldexchange__isfieldtype\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CFieldExchange::IsFieldType","linkify":"<a name=\"cfieldexchange__isfieldtype\"></a>  CFieldExchange::IsFieldType","source":"<a name=\"cfieldexchange__isfieldtype\"></a>  CFieldExchange::IsFieldType"},{"pos":[3935,4300],"content":"If you write your own RFX function, call <ph id=\"ph1\">`IsFieldType`</ph> at the beginning of your function to determine whether the current operation can be performed on a particular field or parameter data member type (a <bpt id=\"p1\">**</bpt>CFieldExchange::outputColumn<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>CFieldExchange::inputParam<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>CFieldExchange::param<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>CFieldExchange::outputParam<ept id=\"p4\">**</ept>, or <bpt id=\"p5\">**</bpt>CFieldExchange::inoutParam<ept id=\"p5\">**</ept>).","source":"If you write your own RFX function, call `IsFieldType` at the beginning of your function to determine whether the current operation can be performed on a particular field or parameter data member type (a **CFieldExchange::outputColumn**, **CFieldExchange::inputParam**, **CFieldExchange::param**, **CFieldExchange::outputParam**, or **CFieldExchange::inoutParam**)."},{"pos":[4358,4368],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>pnField<ept id=\"p1\">*</ept>","pos":[4372,4381],"source":"*pnField*"},{"content":"The sequential number of the field or parameter data member is returned in this parameter.","pos":[4385,4475]},{"content":"This number corresponds to the data member's order in the <bpt id=\"p1\">[</bpt>CRecordset::DoFieldExchange<ept id=\"p1\">](../../mfc/reference/crecordset-class.md#crecordset__dofieldexchange)</ept> or <bpt id=\"p2\">[</bpt>CRecordset::DoBulkFieldExchange<ept id=\"p2\">](../../mfc/reference/crecordset-class.md#crecordset__dobulkfieldexchange)</ept> function.","pos":[4476,4752],"source":" This number corresponds to the data member's order in the [CRecordset::DoFieldExchange](../../mfc/reference/crecordset-class.md#crecordset__dofieldexchange) or [CRecordset::DoBulkFieldExchange](../../mfc/reference/crecordset-class.md#crecordset__dobulkfieldexchange) function."},{"pos":[4762,4774],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if the current operation can be performed on the current field or parameter type.","pos":[4778,4867]},{"pos":[4877,4884],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Follow the model of the existing RFX functions.","pos":[4888,4935]},{"pos":[4945,5018],"content":"<bpt id=\"p1\">&lt;a name=\"cfieldexchange__setfieldtype\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CFieldExchange::SetFieldType","linkify":"<a name=\"cfieldexchange__setfieldtype\"></a>  CFieldExchange::SetFieldType","source":"<a name=\"cfieldexchange__setfieldtype\"></a>  CFieldExchange::SetFieldType"},{"pos":[5022,5276],"content":"You need a call to <ph id=\"ph1\">`SetFieldType`</ph> in your recordset class's <bpt id=\"p1\">[</bpt>DoFieldExchange<ept id=\"p1\">](../../mfc/reference/crecordset-class.md#crecordset__dofieldexchange)</ept> or <bpt id=\"p2\">[</bpt>DoBulkFieldExchange<ept id=\"p2\">](../../mfc/reference/crecordset-class.md#crecordset__dobulkfieldexchange)</ept> override.","source":"You need a call to `SetFieldType` in your recordset class's [DoFieldExchange](../../mfc/reference/crecordset-class.md#crecordset__dofieldexchange) or [DoBulkFieldExchange](../../mfc/reference/crecordset-class.md#crecordset__dobulkfieldexchange) override."},{"pos":[5337,5347],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A value of the <bpt id=\"p1\">**</bpt>enum FieldType<ept id=\"p1\">**</ept>, declared in <ph id=\"ph1\">`CFieldExchange`</ph>, which can be one of the following:","pos":[5367,5466],"source":" A value of the **enum FieldType**, declared in `CFieldExchange`, which can be one of the following:"},{"pos":[5474,5506],"content":"<bpt id=\"p1\">**</bpt>CFieldExchange::outputColumn<ept id=\"p1\">**</ept>","source":"**CFieldExchange::outputColumn**"},{"pos":[5514,5544],"content":"<bpt id=\"p1\">**</bpt>CFieldExchange::inputParam<ept id=\"p1\">**</ept>","source":"**CFieldExchange::inputParam**"},{"pos":[5552,5577],"content":"<bpt id=\"p1\">**</bpt>CFieldExchange::param<ept id=\"p1\">**</ept>","source":"**CFieldExchange::param**"},{"pos":[5585,5616],"content":"<bpt id=\"p1\">**</bpt>CFieldExchange::outputParam<ept id=\"p1\">**</ept>","source":"**CFieldExchange::outputParam**"},{"pos":[5624,5654],"content":"<bpt id=\"p1\">**</bpt>CFieldExchange::inoutParam<ept id=\"p1\">**</ept>","source":"**CFieldExchange::inoutParam**"},{"pos":[5664,5671],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"For field data members, you must call <ph id=\"ph1\">`SetFieldType`</ph> with a parameter of <bpt id=\"p1\">**</bpt>CFieldExchange::outputColumn<ept id=\"p1\">**</ept>, followed by calls to the RFX or Bulk RFX functions.","pos":[5675,5833],"source":"For field data members, you must call `SetFieldType` with a parameter of **CFieldExchange::outputColumn**, followed by calls to the RFX or Bulk RFX functions."},{"content":"If you have not implemented bulk row fetching, then ClassWizard places this <ph id=\"ph1\">`SetFieldType`</ph> call for you in the field map section of <ph id=\"ph2\">`DoFieldExchange`</ph>.","pos":[5834,5984],"source":" If you have not implemented bulk row fetching, then ClassWizard places this `SetFieldType` call for you in the field map section of `DoFieldExchange`."},{"content":"If you parameterize your recordset class, you must call <ph id=\"ph1\">`SetFieldType`</ph> again, outside any field map section, followed by RFX calls for all the parameter data members.","pos":[5991,6157],"source":"If you parameterize your recordset class, you must call `SetFieldType` again, outside any field map section, followed by RFX calls for all the parameter data members."},{"content":"Each type of parameter data member must have its own <ph id=\"ph1\">`SetFieldType`</ph> call.","pos":[6158,6231],"source":" Each type of parameter data member must have its own `SetFieldType` call."},{"content":"The following table distinguishes the different values you can pass to <ph id=\"ph1\">`SetFieldType`</ph> to represent the parameter data members of your class:","pos":[6232,6372],"source":" The following table distinguishes the different values you can pass to `SetFieldType` to represent the parameter data members of your class:"},{"content":"SetFieldType parameter value","pos":[6379,6407]},{"content":"Type of parameter data member","pos":[6408,6437]},{"pos":[6517,6547],"content":"<bpt id=\"p1\">**</bpt>CFieldExchange::inputParam<ept id=\"p1\">**</ept>","source":"**CFieldExchange::inputParam**"},{"content":"Input parameter.","pos":[6548,6564]},{"content":"A value that is passed into the recordset's query or stored procedure.","pos":[6565,6635]},{"pos":[6640,6665],"content":"<bpt id=\"p1\">**</bpt>CFieldExchange::param<ept id=\"p1\">**</ept>","source":"**CFieldExchange::param**"},{"pos":[6666,6705],"content":"Same as <bpt id=\"p1\">**</bpt>CFieldExchange::inputParam<ept id=\"p1\">**</ept>.","source":"Same as **CFieldExchange::inputParam**."},{"pos":[6710,6741],"content":"<bpt id=\"p1\">**</bpt>CFieldExchange::outputParam<ept id=\"p1\">**</ept>","source":"**CFieldExchange::outputParam**"},{"content":"Output parameter.","pos":[6742,6759]},{"content":"A return value of the recordset's stored procedure.","pos":[6760,6811]},{"pos":[6816,6846],"content":"<bpt id=\"p1\">**</bpt>CFieldExchange::inoutParam<ept id=\"p1\">**</ept>","source":"**CFieldExchange::inoutParam**"},{"content":"Input/output parameter.","pos":[6847,6870]},{"content":"A value that is passed into and returned from the recordset's stored procedure.","pos":[6871,6950]},{"content":"In general, each group of RFX function calls associated with field data members or parameter data members must be preceded by a call to <ph id=\"ph1\">`SetFieldType`</ph>.","pos":[6958,7109],"source":"In general, each group of RFX function calls associated with field data members or parameter data members must be preceded by a call to `SetFieldType`."},{"content":"The <ph id=\"ph1\">`nFieldType`</ph> parameter of each <ph id=\"ph2\">`SetFieldType`</ph> call identifies the type of the data members represented by the RFX function calls that follow the <ph id=\"ph3\">`SetFieldType`</ph> call.","pos":[7110,7279],"source":" The `nFieldType` parameter of each `SetFieldType` call identifies the type of the data members represented by the RFX function calls that follow the `SetFieldType` call."},{"content":"For more information about handling output and input/output parameters, see the <ph id=\"ph1\">`CRecordset`</ph> member function <bpt id=\"p1\">[</bpt>FlushResultSet<ept id=\"p1\">](../../mfc/reference/crecordset-class.md#crecordset__flushresultset)</ept>.","pos":[7286,7480],"source":"For more information about handling output and input/output parameters, see the `CRecordset` member function [FlushResultSet](../../mfc/reference/crecordset-class.md#crecordset__flushresultset)."},{"content":"For more information about the RFX and Bulk RFX functions, see the topic <bpt id=\"p1\">[</bpt>Record Field Exchange Functions<ept id=\"p1\">](../../mfc/reference/record-field-exchange-functions.md)</ept>.","pos":[7481,7644],"source":" For more information about the RFX and Bulk RFX functions, see the topic [Record Field Exchange Functions](../../mfc/reference/record-field-exchange-functions.md)."},{"content":"For related information about bulk row fetching, see the article <bpt id=\"p1\">[</bpt>Recordset: Fetching Records in Bulk (ODBC)<ept id=\"p1\">](../../data/odbc/recordset-fetching-records-in-bulk-odbc.md)</ept>.","pos":[7645,7815],"source":" For related information about bulk row fetching, see the article [Recordset: Fetching Records in Bulk (ODBC)](../../data/odbc/recordset-fetching-records-in-bulk-odbc.md)."},{"pos":[7825,7832],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This example shows several calls to RFX functions with accompanying calls to <ph id=\"ph1\">`SetFieldType`</ph>.","pos":[7836,7928],"source":"This example shows several calls to RFX functions with accompanying calls to `SetFieldType`."},{"content":"Note that <ph id=\"ph1\">`SetFieldType`</ph> is called through the <ph id=\"ph2\">`pFX`</ph> pointer to a <ph id=\"ph3\">`CFieldExchange`</ph> object.","pos":[7929,8019],"source":" Note that `SetFieldType` is called through the `pFX` pointer to a `CFieldExchange` object."},{"pos":[8026,8111],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDatabase#33<ept id=\"p2\">](../../mfc/codesnippet/cpp/cfieldexchange-class_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDatabase#33](../../mfc/codesnippet/cpp/cfieldexchange-class_1.cpp)]"},{"pos":[8120,8128],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[8132,8180],"source":"[Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CRecordset Class<ept id=\"p1\">](../../mfc/reference/crecordset-class.md)</ept>","pos":[8183,8243],"source":" [CRecordset Class](../../mfc/reference/crecordset-class.md)"}],"content":"---\ntitle: \"CFieldExchange Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CFieldExchange\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"enum FieldType, CFieldExchange\"\n  - \"RFX (record field exchange) [C++]\"\n  - \"RFX (record field exchange) [C++], classes for\"\n  - \"CFieldExchange class\"\n  - \"FieldType enumeration\"\n  - \"data types [C++], custom\"\n  - \"enum FieldType\"\nms.assetid: 24c5c0b3-06a6-430e-9b6f-005a2c65e29f\ncaps.latest.revision: 24\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CFieldExchange Class\nSupports the record field exchange (RFX) and bulk record field exchange (Bulk RFX) routines used by the database classes.  \n  \n## Syntax  \n  \n```  \nclass CFieldExchange  \n```  \n  \n## Members  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CFieldExchange::IsFieldType](#cfieldexchange__isfieldtype)|Returns nonzero if the current operation is appropriate for the type of field being updated.|  \n|[CFieldExchange::SetFieldType](#cfieldexchange__setfieldtype)|Specifies the type of recordset data member — column or parameter — represented by all following calls to RFX functions until the next call to `SetFieldType`.|  \n  \n## Remarks  \n `CFieldExchange` does not have a base class.  \n  \n Use this class if you are writing data exchange routines for custom data types or when you are implementing bulk row fetching; otherwise, you will not directly use this class. RFX and Bulk RFX exchanges data between the field data members of your recordset object and the corresponding fields of the current record on the data source.  \n  \n> [!NOTE]\n>  If you are working with the Data Access Objects (DAO) classes rather than the Open Database Connectivity (ODBC) classes, use class [CDaoFieldExchange](../../mfc/reference/cdaofieldexchange-class.md) instead. For more information, see the article [Overview:Database Programming](../../data/data-access-programming-mfc-atl.md).  \n  \n A `CFieldExchange` object provides the context information needed for record field exchange or bulk record field exchange to take place. `CFieldExchange` objects support a number of operations, including binding parameters and field data members and setting various flags on the fields of the current record. RFX and Bulk RFX operations are performed on recordset-class data members of types defined by the `enum`**FieldType** in `CFieldExchange`. Possible **FieldType** values are:  \n  \n- **CFieldExchange::outputColumn** for field data members.  \n  \n- **CFieldExchange::inputParam** or **CFieldExchange::param** for input parameter data members.  \n  \n- **CFieldExchange::outputParam** for output parameter data members.  \n  \n- **CFieldExchange::inoutParam** for input/output parameter data members.  \n  \n Most of the class's member functions and data members are provided for writing your own custom RFX routines. You will use `SetFieldType` frequently. For more information, see the articles [Record Field Exchange (RFX)](../../data/odbc/record-field-exchange-rfx.md) and [Recordset (ODBC)](../../data/odbc/recordset-odbc.md). For information about bulk row fetching, see the article [Recordset: Fetching Records in Bulk (ODBC)](../../data/odbc/recordset-fetching-records-in-bulk-odbc.md). For details about the RFX and Bulk RFX global functions, see [Record Field Exchange Functions](../../mfc/reference/record-field-exchange-functions.md) in the MFC Macros and Globals section of this reference.  \n  \n## Inheritance Hierarchy  \n `CFieldExchange`  \n  \n## Requirements  \n **Header:** afxdb.h  \n  \n##  <a name=\"cfieldexchange__isfieldtype\"></a>  CFieldExchange::IsFieldType  \n If you write your own RFX function, call `IsFieldType` at the beginning of your function to determine whether the current operation can be performed on a particular field or parameter data member type (a **CFieldExchange::outputColumn**, **CFieldExchange::inputParam**, **CFieldExchange::param**, **CFieldExchange::outputParam**, or **CFieldExchange::inoutParam**).  \n  \n```  \nBOOL IsFieldType(UINT* pnField);\n```  \n  \n### Parameters  \n *pnField*  \n The sequential number of the field or parameter data member is returned in this parameter. This number corresponds to the data member's order in the [CRecordset::DoFieldExchange](../../mfc/reference/crecordset-class.md#crecordset__dofieldexchange) or [CRecordset::DoBulkFieldExchange](../../mfc/reference/crecordset-class.md#crecordset__dobulkfieldexchange) function.  \n  \n### Return Value  \n Nonzero if the current operation can be performed on the current field or parameter type.  \n  \n### Remarks  \n Follow the model of the existing RFX functions.  \n  \n##  <a name=\"cfieldexchange__setfieldtype\"></a>  CFieldExchange::SetFieldType  \n You need a call to `SetFieldType` in your recordset class's [DoFieldExchange](../../mfc/reference/crecordset-class.md#crecordset__dofieldexchange) or [DoBulkFieldExchange](../../mfc/reference/crecordset-class.md#crecordset__dobulkfieldexchange) override.  \n  \n```  \nvoid SetFieldType(UINT nFieldType);\n```  \n  \n### Parameters  \n `nFieldType`  \n A value of the **enum FieldType**, declared in `CFieldExchange`, which can be one of the following:  \n  \n- **CFieldExchange::outputColumn**  \n  \n- **CFieldExchange::inputParam**  \n  \n- **CFieldExchange::param**  \n  \n- **CFieldExchange::outputParam**  \n  \n- **CFieldExchange::inoutParam**  \n  \n### Remarks  \n For field data members, you must call `SetFieldType` with a parameter of **CFieldExchange::outputColumn**, followed by calls to the RFX or Bulk RFX functions. If you have not implemented bulk row fetching, then ClassWizard places this `SetFieldType` call for you in the field map section of `DoFieldExchange`.  \n  \n If you parameterize your recordset class, you must call `SetFieldType` again, outside any field map section, followed by RFX calls for all the parameter data members. Each type of parameter data member must have its own `SetFieldType` call. The following table distinguishes the different values you can pass to `SetFieldType` to represent the parameter data members of your class:  \n  \n|SetFieldType parameter value|Type of parameter data member|  \n|----------------------------------|-----------------------------------|  \n|**CFieldExchange::inputParam**|Input parameter. A value that is passed into the recordset's query or stored procedure.|  \n|**CFieldExchange::param**|Same as **CFieldExchange::inputParam**.|  \n|**CFieldExchange::outputParam**|Output parameter. A return value of the recordset's stored procedure.|  \n|**CFieldExchange::inoutParam**|Input/output parameter. A value that is passed into and returned from the recordset's stored procedure.|  \n  \n In general, each group of RFX function calls associated with field data members or parameter data members must be preceded by a call to `SetFieldType`. The `nFieldType` parameter of each `SetFieldType` call identifies the type of the data members represented by the RFX function calls that follow the `SetFieldType` call.  \n  \n For more information about handling output and input/output parameters, see the `CRecordset` member function [FlushResultSet](../../mfc/reference/crecordset-class.md#crecordset__flushresultset). For more information about the RFX and Bulk RFX functions, see the topic [Record Field Exchange Functions](../../mfc/reference/record-field-exchange-functions.md). For related information about bulk row fetching, see the article [Recordset: Fetching Records in Bulk (ODBC)](../../data/odbc/recordset-fetching-records-in-bulk-odbc.md).  \n  \n### Example  \n This example shows several calls to RFX functions with accompanying calls to `SetFieldType`. Note that `SetFieldType` is called through the `pFX` pointer to a `CFieldExchange` object.  \n  \n [!code-cpp[NVC_MFCDatabase#33](../../mfc/codesnippet/cpp/cfieldexchange-class_1.cpp)]  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [CRecordset Class](../../mfc/reference/crecordset-class.md)\n"}