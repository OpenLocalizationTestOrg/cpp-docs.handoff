{"nodes":[{"pos":[12,37],"content":"Contents | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Contents | Microsoft Docs","pos":[0,25]}]},{"content":"Contents","pos":[517,525]},{"content":"1. Introduction","pos":[527,542]},{"content":"1.1 Scope","pos":[592,601]},{"content":"1.2 Definition of Terms","pos":[646,669]},{"content":"1.3 Execution Model","pos":[728,747]},{"content":"1.4 Compliance","pos":[802,816]},{"content":"1.5 Normative References","pos":[866,890]},{"content":"1.6 Organization","pos":[950,966]},{"content":"2. Directives","pos":[1018,1031]},{"content":"2.1 Directive Format","pos":[1079,1099]},{"content":"2.2 Conditional Compilation","pos":[1155,1182]},{"content":"2.3 parallel Construct","pos":[1245,1267]},{"content":"2.4 Work-sharing Constructs","pos":[1325,1352]},{"content":"2.4.1 for Construct","pos":[1415,1434]},{"content":"2.4.2 sections Construct","pos":[1489,1513]},{"content":"2.4.3 single Construct","pos":[1573,1595]},{"content":"2.5 Combined Parallel Work-sharing Constructs","pos":[1653,1698]},{"content":"2.5.1 parallel for Construct","pos":[1779,1807]},{"content":"2.5.2 parallel sections Construct","pos":[1871,1904]},{"content":"2.6 Master and Synchronization Directives","pos":[1973,2014]},{"content":"2.6.1 master Construct","pos":[2091,2113]},{"content":"2.6.2 critical Construct","pos":[2171,2195]},{"content":"2.6.3 barrier Directive","pos":[2255,2278]},{"content":"2.6.4 atomic Construct","pos":[2337,2359]},{"content":"2.6.5 flush Directive","pos":[2417,2438]},{"content":"2.6.6 ordered Construct","pos":[2495,2518]},{"content":"2.7 Data Environment","pos":[2577,2597]},{"content":"2.7.1 threadprivate Directive","pos":[2653,2682]},{"content":"2.7.2 Data-Sharing Attribute Clauses","pos":[2747,2783]},{"content":"2.7.2.1 private","pos":[2855,2870]},{"content":"2.7.2.2 firstprivate","pos":[2921,2941]},{"content":"2.7.2.3 lastprivate","pos":[2997,3016]},{"content":"2.7.2.4 shared","pos":[3071,3085]},{"content":"2.7.2.5 default","pos":[3135,3150]},{"content":"2.7.2.6 reduction","pos":[3201,3218]},{"content":"2.7.2.7 copyin","pos":[3271,3285]},{"content":"2.7.2.8 copyprivate","pos":[3335,3354]},{"content":"2.8 Directive Binding","pos":[3409,3430]},{"content":"2.9 Directive Nesting","pos":[3487,3508]},{"content":"3. Run-time Library Functions","pos":[3565,3594]},{"content":"3.1 Execution Environment Functions","pos":[3658,3693]},{"content":"3.1.1 omp_set_num_threads Function","pos":[3764,3798]},{"content":"3.1.2 omp_get_num_threads Function","pos":[3868,3902]},{"content":"3.1.3 omp_get_max_threads Function","pos":[3972,4006]},{"content":"3.1.4 omp_get_thread_num Function","pos":[4076,4109]},{"content":"3.1.5 omp_get_num_procs Function","pos":[4178,4210]},{"content":"3.1.6 omp_in_parallel Function","pos":[4278,4308]},{"content":"3.1.7 omp_set_dynamic Function","pos":[4374,4404]},{"content":"3.1.8 omp_get_dynamic Function","pos":[4470,4500]},{"content":"3.1.9 omp_set_nested Function","pos":[4566,4595]},{"content":"3.1.10 omp_get_nested Function","pos":[4660,4690]},{"content":"3.2 Lock Functions","pos":[4756,4774]},{"content":"3.2.1 omp_init_lock and omp_init_nest_lock Functions","pos":[4828,4880]},{"content":"3.2.2 omp_destroy_lock and omp_destroy_nest_lock Functions","pos":[4968,5026]},{"content":"3.2.3 omp_set_lock and omp_set_nest_lock Functions","pos":[5120,5170]},{"content":"3.2.4 omp_unset_lock and omp_unset_nest_lock Functions","pos":[5256,5310]},{"content":"3.2.5 omp_test_lock and omp_test_nest_lock Functions","pos":[5400,5452]},{"content":"3.3 Timing Routines","pos":[5540,5559]},{"content":"3.3.1 omp_get_wtime Function","pos":[5614,5642]},{"content":"3.3.2 omp_get_wtick Function","pos":[5706,5734]},{"content":"4. Environment Variables","pos":[5798,5822]},{"content":"4.1 OMP_SCHEDULE","pos":[5881,5897]},{"content":"4.2 OMP_NUM_THREADS","pos":[5949,5968]},{"content":"4.3 OMP_DYNAMIC","pos":[6023,6038]},{"content":"4.4 OMP_NESTED","pos":[6089,6103]},{"content":"A.","pos":[6153,6155]},{"content":"Examples","pos":[6156,6164]},{"content":"A.1 Executing a Simple Loop in Parallel","pos":[6210,6249]},{"content":"A.2 Specifying Conditional Compilation","pos":[6324,6362]},{"content":"A.3 Using Parallel Regions","pos":[6436,6462]},{"content":"A.4 Using the nowait Clause","pos":[6524,6551]},{"content":"A.5 Using the critical Directive","pos":[6614,6646]},{"content":"A.6 Using the lastprivate Clause","pos":[6714,6746]},{"content":"A.7 Using the reduction Clause","pos":[6814,6844]},{"content":"A.8 Specifying Parallel Sections","pos":[6910,6942]},{"content":"A.9 Using single Directives","pos":[7010,7037]},{"content":"A.10 Specifying Sequential Ordering","pos":[7100,7135]},{"content":"A.11 Specifying a Fixed Number of Threads","pos":[7206,7247]},{"content":"A.12 Using the atomic Directive","pos":[7324,7355]},{"content":"A.13 Using the flush Directive with a List","pos":[7422,7464]},{"content":"A.14 Using the flush Directive without a List","pos":[7542,7587]},{"content":"A.15 Determining the Number of Threads Used","pos":[7668,7711]},{"content":"A.16 Using Locks","pos":[7790,7806]},{"content":"A.17 Using Nestable Locks","pos":[7858,7883]},{"content":"A.18 Nested for Directives","pos":[7944,7970]},{"content":"A.19 Examples Showing Incorrect Nesting of Work-sharing Directives","pos":[8032,8098]},{"content":"A.20 Binding of barrier Directives","pos":[8200,8234]},{"content":"A.21 Scoping Variables with the private Clause","pos":[8304,8350]},{"content":"A.22 Using the default(none) Clause","pos":[8432,8467]},{"content":"A.23 Examples of the ordered Directive","pos":[8537,8575]},{"content":"A.24 Example of the private Clause","pos":[8649,8683]},{"content":"A.25 Examples of the copyprivate Data Attribute Clause","pos":[8753,8807]},{"content":"A.26 Using the threadprivate Directive","pos":[8897,8935]},{"content":"A.27 Use of C99 Variable Length Arrays","pos":[9009,9047]},{"content":"A.28 Use of num_threads Clause","pos":[9121,9151]},{"content":"A.29 Use of Work-Sharing Constructs Inside a critical Construct","pos":[9217,9280]},{"content":"A.30 Use of Reprivatization","pos":[9379,9406]},{"content":"A.31 Thread-Safe Lock Functions","pos":[9469,9500]},{"content":"B.","pos":[9567,9569]},{"content":"Stubs for Run-time Library Functions","pos":[9570,9606]},{"content":"C.","pos":[9680,9682]},{"content":"OpenMP C and C++ Grammar","pos":[9683,9707]},{"content":"C.1 Notation","pos":[9769,9781]},{"content":"C.2 Rules","pos":[9829,9838]},{"content":"D.","pos":[9883,9885]},{"content":"Using the schedule Clause","pos":[9886,9911]},{"content":"E.","pos":[9974,9976]},{"content":"Implementation-Defined Behaviors in OpenMP C/C++","pos":[9977,10025]},{"content":"F.","pos":[10111,10113]},{"content":"New Features and Clarifications in Version 2.0","pos":[10114,10160]},{"content":"See Also","pos":[10245,10253]},{"content":"C and C++ Application Program Interface","pos":[10258,10297]}],"content":"---\ntitle: \"Contents | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nms.assetid: b7858099-7d7f-4cd9-9fa0-fba4832f2dd2\ncaps.latest.revision: 5\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Contents\n[1. Introduction](../../parallel/openmp/1-introduction.md)  \n  \n [1.1 Scope](../../parallel/openmp/1-1-scope.md)  \n  \n [1.2 Definition of Terms](../../parallel/openmp/1-2-definition-of-terms.md)  \n  \n [1.3 Execution Model](../../parallel/openmp/1-3-execution-model.md)  \n  \n [1.4 Compliance](../../parallel/openmp/1-4-compliance.md)  \n  \n [1.5 Normative References](../../parallel/openmp/1-5-normative-references.md)  \n  \n [1.6 Organization](../../parallel/openmp/1-6-organization.md)  \n  \n [2. Directives](../../parallel/openmp/2-directives.md)  \n  \n [2.1 Directive Format](../../parallel/openmp/2-1-directive-format.md)  \n  \n [2.2 Conditional Compilation](../../parallel/openmp/2-2-conditional-compilation.md)  \n  \n [2.3 parallel Construct](../../parallel/openmp/2-3-parallel-construct.md)  \n  \n [2.4 Work-sharing Constructs](../../parallel/openmp/2-4-work-sharing-constructs.md)  \n  \n [2.4.1 for Construct](../../parallel/openmp/2-4-1-for-construct.md)  \n  \n [2.4.2 sections Construct](../../parallel/openmp/2-4-2-sections-construct.md)  \n  \n [2.4.3 single Construct](../../parallel/openmp/2-4-3-single-construct.md)  \n  \n [2.5 Combined Parallel Work-sharing Constructs](../../parallel/openmp/2-5-combined-parallel-work-sharing-constructs.md)  \n  \n [2.5.1 parallel for Construct](../../parallel/openmp/2-5-1-parallel-for-construct.md)  \n  \n [2.5.2 parallel sections Construct](../../parallel/openmp/2-5-2-parallel-sections-construct.md)  \n  \n [2.6 Master and Synchronization Directives](../../parallel/openmp/2-6-master-and-synchronization-directives.md)  \n  \n [2.6.1 master Construct](../../parallel/openmp/2-6-1-master-construct.md)  \n  \n [2.6.2 critical Construct](../../parallel/openmp/2-6-2-critical-construct.md)  \n  \n [2.6.3 barrier Directive](../../parallel/openmp/2-6-3-barrier-directive.md)  \n  \n [2.6.4 atomic Construct](../../parallel/openmp/2-6-4-atomic-construct.md)  \n  \n [2.6.5 flush Directive](../../parallel/openmp/2-6-5-flush-directive.md)  \n  \n [2.6.6 ordered Construct](../../parallel/openmp/2-6-6-ordered-construct.md)  \n  \n [2.7 Data Environment](../../parallel/openmp/2-7-data-environment.md)  \n  \n [2.7.1 threadprivate Directive](../../parallel/openmp/2-7-1-threadprivate-directive.md)  \n  \n [2.7.2 Data-Sharing Attribute Clauses](../../parallel/openmp/2-7-2-data-sharing-attribute-clauses.md)  \n  \n [2.7.2.1 private](../../parallel/openmp/2-7-2-1-private.md)  \n  \n [2.7.2.2 firstprivate](../../parallel/openmp/2-7-2-2-firstprivate.md)  \n  \n [2.7.2.3 lastprivate](../../parallel/openmp/2-7-2-3-lastprivate.md)  \n  \n [2.7.2.4 shared](../../parallel/openmp/2-7-2-4-shared.md)  \n  \n [2.7.2.5 default](../../parallel/openmp/2-7-2-5-default.md)  \n  \n [2.7.2.6 reduction](../../parallel/openmp/2-7-2-6-reduction.md)  \n  \n [2.7.2.7 copyin](../../parallel/openmp/2-7-2-7-copyin.md)  \n  \n [2.7.2.8 copyprivate](../../parallel/openmp/2-7-2-8-copyprivate.md)  \n  \n [2.8 Directive Binding](../../parallel/openmp/2-8-directive-binding.md)  \n  \n [2.9 Directive Nesting](../../parallel/openmp/2-9-directive-nesting.md)  \n  \n [3. Run-time Library Functions](../../parallel/openmp/3-run-time-library-functions.md)  \n  \n [3.1 Execution Environment Functions](../../parallel/openmp/3-1-execution-environment-functions.md)  \n  \n [3.1.1 omp_set_num_threads Function](../../parallel/openmp/3-1-1-omp-set-num-threads-function.md)  \n  \n [3.1.2 omp_get_num_threads Function](../../parallel/openmp/3-1-2-omp-get-num-threads-function.md)  \n  \n [3.1.3 omp_get_max_threads Function](../../parallel/openmp/3-1-3-omp-get-max-threads-function.md)  \n  \n [3.1.4 omp_get_thread_num Function](../../parallel/openmp/3-1-4-omp-get-thread-num-function.md)  \n  \n [3.1.5 omp_get_num_procs Function](../../parallel/openmp/3-1-5-omp-get-num-procs-function.md)  \n  \n [3.1.6 omp_in_parallel Function](../../parallel/openmp/3-1-6-omp-in-parallel-function.md)  \n  \n [3.1.7 omp_set_dynamic Function](../../parallel/openmp/3-1-7-omp-set-dynamic-function.md)  \n  \n [3.1.8 omp_get_dynamic Function](../../parallel/openmp/3-1-8-omp-get-dynamic-function.md)  \n  \n [3.1.9 omp_set_nested Function](../../parallel/openmp/3-1-9-omp-set-nested-function.md)  \n  \n [3.1.10 omp_get_nested Function](../../parallel/openmp/3-1-10-omp-get-nested-function.md)  \n  \n [3.2 Lock Functions](../../parallel/openmp/3-2-lock-functions.md)  \n  \n [3.2.1 omp_init_lock and omp_init_nest_lock Functions](../../parallel/openmp/3-2-1-omp-init-lock-and-omp-init-nest-lock-functions.md)  \n  \n [3.2.2 omp_destroy_lock and omp_destroy_nest_lock Functions](../../parallel/openmp/3-2-2-omp-destroy-lock-and-omp-destroy-nest-lock-functions.md)  \n  \n [3.2.3 omp_set_lock and omp_set_nest_lock Functions](../../parallel/openmp/3-2-3-omp-set-lock-and-omp-set-nest-lock-functions.md)  \n  \n [3.2.4 omp_unset_lock and omp_unset_nest_lock Functions](../../parallel/openmp/3-2-4-omp-unset-lock-and-omp-unset-nest-lock-functions.md)  \n  \n [3.2.5 omp_test_lock and omp_test_nest_lock Functions](../../parallel/openmp/3-2-5-omp-test-lock-and-omp-test-nest-lock-functions.md)  \n  \n [3.3 Timing Routines](../../parallel/openmp/3-3-timing-routines.md)  \n  \n [3.3.1 omp_get_wtime Function](../../parallel/openmp/3-3-1-omp-get-wtime-function.md)  \n  \n [3.3.2 omp_get_wtick Function](../../parallel/openmp/3-3-2-omp-get-wtick-function.md)  \n  \n [4. Environment Variables](../../parallel/openmp/4-environment-variables.md)  \n  \n [4.1 OMP_SCHEDULE](../../parallel/openmp/4-1-omp-schedule.md)  \n  \n [4.2 OMP_NUM_THREADS](../../parallel/openmp/4-2-omp-num-threads.md)  \n  \n [4.3 OMP_DYNAMIC](../../parallel/openmp/4-3-omp-dynamic.md)  \n  \n [4.4 OMP_NESTED](../../parallel/openmp/4-4-omp-nested.md)  \n  \n [A. Examples](../../parallel/openmp/a-examples.md)  \n  \n [A.1 Executing a Simple Loop in Parallel](../../parallel/openmp/a-1-executing-a-simple-loop-in-parallel.md)  \n  \n [A.2 Specifying Conditional Compilation](../../parallel/openmp/a-2-specifying-conditional-compilation.md)  \n  \n [A.3 Using Parallel Regions](../../parallel/openmp/a-3-using-parallel-regions.md)  \n  \n [A.4 Using the nowait Clause](../../parallel/openmp/a-4-using-the-nowait-clause.md)  \n  \n [A.5 Using the critical Directive](../../parallel/openmp/a-5-using-the-critical-directive.md)  \n  \n [A.6 Using the lastprivate Clause](../../parallel/openmp/a-6-using-the-lastprivate-clause.md)  \n  \n [A.7 Using the reduction Clause](../../parallel/openmp/a-7-using-the-reduction-clause.md)  \n  \n [A.8 Specifying Parallel Sections](../../parallel/openmp/a-8-specifying-parallel-sections.md)  \n  \n [A.9 Using single Directives](../../parallel/openmp/a-9-using-single-directives.md)  \n  \n [A.10 Specifying Sequential Ordering](../../parallel/openmp/a-10-specifying-sequential-ordering.md)  \n  \n [A.11 Specifying a Fixed Number of Threads](../../parallel/openmp/a-11-specifying-a-fixed-number-of-threads.md)  \n  \n [A.12 Using the atomic Directive](../../parallel/openmp/a-12-using-the-atomic-directive.md)  \n  \n [A.13 Using the flush Directive with a List](../../parallel/openmp/a-13-using-the-flush-directive-with-a-list.md)  \n  \n [A.14 Using the flush Directive without a List](../../parallel/openmp/a-14-using-the-flush-directive-without-a-list.md)  \n  \n [A.15 Determining the Number of Threads Used](../../parallel/openmp/a-15-determining-the-number-of-threads-used.md)  \n  \n [A.16 Using Locks](../../parallel/openmp/a-16-using-locks.md)  \n  \n [A.17 Using Nestable Locks](../../parallel/openmp/a-17-using-nestable-locks.md)  \n  \n [A.18 Nested for Directives](../../parallel/openmp/a-18-nested-for-directives.md)  \n  \n [A.19 Examples Showing Incorrect Nesting of Work-sharing Directives](../../parallel/openmp/a-19-examples-showing-incorrect-nesting-of-work-sharing-directives.md)  \n  \n [A.20 Binding of barrier Directives](../../parallel/openmp/a-20-binding-of-barrier-directives.md)  \n  \n [A.21 Scoping Variables with the private Clause](../../parallel/openmp/a-21-scoping-variables-with-the-private-clause.md)  \n  \n [A.22 Using the default(none) Clause](../../parallel/openmp/a-22-using-the-default-none-clause.md)  \n  \n [A.23 Examples of the ordered Directive](../../parallel/openmp/a-23-examples-of-the-ordered-directive.md)  \n  \n [A.24 Example of the private Clause](../../parallel/openmp/a-24-example-of-the-private-clause.md)  \n  \n [A.25 Examples of the copyprivate Data Attribute Clause](../../parallel/openmp/a-25-examples-of-the-copyprivate-data-attribute-clause.md)  \n  \n [A.26 Using the threadprivate Directive](../../parallel/openmp/a-26-using-the-threadprivate-directive.md)  \n  \n [A.27 Use of C99 Variable Length Arrays](../../parallel/openmp/a-27-use-of-c99-variable-length-arrays.md)  \n  \n [A.28 Use of num_threads Clause](../../parallel/openmp/a-28-use-of-num-threads-clause.md)  \n  \n [A.29 Use of Work-Sharing Constructs Inside a critical Construct](../../parallel/openmp/a-29-use-of-work-sharing-constructs-inside-a-critical-construct.md)  \n  \n [A.30 Use of Reprivatization](../../parallel/openmp/a-30-use-of-reprivatization.md)  \n  \n [A.31 Thread-Safe Lock Functions](../../parallel/openmp/a-31-thread-safe-lock-functions.md)  \n  \n [B. Stubs for Run-time Library Functions](../../parallel/openmp/b-stubs-for-run-time-library-functions.md)  \n  \n [C. OpenMP C and C++ Grammar](../../parallel/openmp/c-openmp-c-and-cpp-grammar.md)  \n  \n [C.1 Notation](../../parallel/openmp/c-1-notation.md)  \n  \n [C.2 Rules](../../parallel/openmp/c-2-rules.md)  \n  \n [D. Using the schedule Clause](../../parallel/openmp/d-using-the-schedule-clause.md)  \n  \n [E. Implementation-Defined Behaviors in OpenMP C/C++](../../parallel/openmp/e-implementation-defined-behaviors-in-openmp-c-cpp.md)  \n  \n [F. New Features and Clarifications in Version 2.0](../../parallel/openmp/f-new-features-and-clarifications-in-version-2-0.md)  \n  \n## See Also  \n [C and C++ Application Program Interface](../../parallel/openmp/openmp-c-and-cpp-application-program-interface.md)"}