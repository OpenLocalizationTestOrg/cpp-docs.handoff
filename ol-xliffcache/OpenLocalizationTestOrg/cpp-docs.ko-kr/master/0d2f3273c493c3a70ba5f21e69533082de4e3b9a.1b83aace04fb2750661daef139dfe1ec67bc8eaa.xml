{"nodes":[{"pos":[12,53],"content":"COleTemplateServer Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"COleTemplateServer Class | Microsoft Docs","pos":[0,41]}]},{"pos":[889,913],"content":"COleTemplateServer Class","linkify":"COleTemplateServer Class","nodes":[{"content":"COleTemplateServer Class","pos":[0,24]}]},{"content":"Used for OLE visual editing servers, automation servers, and link containers (applications that support links to embeddings).","pos":[914,1039]},{"pos":[1048,1054],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1132,1139],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[1149,1168],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[1175,1179]},{"content":"Description","pos":[1180,1191]},{"pos":[1229,1310],"content":"<bpt id=\"p1\">[</bpt>COleTemplateServer::COleTemplateServer<ept id=\"p1\">](#coletemplateserver__coletemplateserver)</ept>","source":"[COleTemplateServer::COleTemplateServer](#coletemplateserver__coletemplateserver)"},{"pos":[1311,1352],"content":"Constructs a <ph id=\"ph1\">`COleTemplateServer`</ph> object.","source":"Constructs a `COleTemplateServer` object."},{"pos":[1363,1377],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1384,1388]},{"content":"Description","pos":[1389,1400]},{"pos":[1438,1513],"content":"<bpt id=\"p1\">[</bpt>COleTemplateServer::ConnectTemplate<ept id=\"p1\">](#coletemplateserver__connecttemplate)</ept>","source":"[COleTemplateServer::ConnectTemplate](#coletemplateserver__connecttemplate)"},{"pos":[1514,1588],"content":"Connects a document template to the underlying <ph id=\"ph1\">`COleObjectFactory`</ph> object.","source":"Connects a document template to the underlying `COleObjectFactory` object."},{"pos":[1593,1658],"content":"<bpt id=\"p1\">[</bpt>COleTemplateServer::Unregister<ept id=\"p1\">](#coletemplateserver__unregister)</ept>","source":"[COleTemplateServer::Unregister](#coletemplateserver__unregister)"},{"content":"Unregisters the associated document template.","pos":[1659,1704]},{"pos":[1709,1782],"content":"<bpt id=\"p1\">[</bpt>COleTemplateServer::UpdateRegistry<ept id=\"p1\">](#coletemplateserver__updateregistry)</ept>","source":"[COleTemplateServer::UpdateRegistry](#coletemplateserver__updateregistry)"},{"content":"Registers the document type with the OLE system registry.","pos":[1783,1840]},{"pos":[1850,1857],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This class is derived from the class <bpt id=\"p1\">[</bpt>COleObjectFactory<ept id=\"p1\">](../../mfc/reference/coleobjectfactory-class.md)</ept>; usually, you can use <ph id=\"ph1\">`COleTemplateServer`</ph> directly rather than deriving your own class.","pos":[1861,2054],"source":"This class is derived from the class [COleObjectFactory](../../mfc/reference/coleobjectfactory-class.md); usually, you can use `COleTemplateServer` directly rather than deriving your own class."},{"content":"<ph id=\"ph1\">`COleTemplateServer`</ph> uses a <bpt id=\"p1\">[</bpt>CDocTemplate<ept id=\"p1\">](../../mfc/reference/cdoctemplate-class.md)</ept> object to manage the server documents.","pos":[2055,2179],"source":"`COleTemplateServer` uses a [CDocTemplate](../../mfc/reference/cdoctemplate-class.md) object to manage the server documents."},{"content":"Use <ph id=\"ph1\">`COleTemplateServer`</ph> when implementing a full server, that is, a server that can be run as a standalone application.","pos":[2180,2300],"source":" Use `COleTemplateServer` when implementing a full server, that is, a server that can be run as a standalone application."},{"content":"Full servers are typically multiple document interface (MDI) applications, although single document interface (SDI) applications are supported.","pos":[2301,2444]},{"content":"One <ph id=\"ph1\">`COleTemplateServer`</ph> object is needed for each type of server document an application supports; that is, if your server application supports both worksheets and charts, you must have two <ph id=\"ph2\">`COleTemplateServer`</ph> objects.","pos":[2445,2665],"source":" One `COleTemplateServer` object is needed for each type of server document an application supports; that is, if your server application supports both worksheets and charts, you must have two `COleTemplateServer` objects."},{"content":"<ph id=\"ph1\">`COleTemplateServer`</ph> overrides the <ph id=\"ph2\">`OnCreateInstance`</ph> member function defined by <ph id=\"ph3\">`COleObjectFactory`</ph>.","pos":[2672,2773],"source":"`COleTemplateServer` overrides the `OnCreateInstance` member function defined by `COleObjectFactory`."},{"content":"This member function is called by the framework to create a C++ object of the proper type.","pos":[2774,2864]},{"pos":[2871,3000],"content":"For more information about servers, see the article <bpt id=\"p1\">[</bpt>Servers: Implementing a Server<ept id=\"p1\">](../../mfc/servers-implementing-a-server.md)</ept>.","source":"For more information about servers, see the article [Servers: Implementing a Server](../../mfc/servers-implementing-a-server.md)."},{"pos":[3009,3030],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[3034,3081],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[3088,3141],"content":"<bpt id=\"p1\">[</bpt>CCmdTarget<ept id=\"p1\">](../../mfc/reference/ccmdtarget-class.md)</ept>","source":"[CCmdTarget](../../mfc/reference/ccmdtarget-class.md)"},{"pos":[3148,3215],"content":"<bpt id=\"p1\">[</bpt>COleObjectFactory<ept id=\"p1\">](../../mfc/reference/coleobjectfactory-class.md)</ept>","source":"[COleObjectFactory](../../mfc/reference/coleobjectfactory-class.md)"},{"pos":[3251,3263],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3267,3288],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxdisp.h","source":"**Header:** afxdisp.h"},{"pos":[3298,3391],"content":"<bpt id=\"p1\">&lt;a name=\"coletemplateserver__coletemplateserver\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleTemplateServer::COleTemplateServer","linkify":"<a name=\"coletemplateserver__coletemplateserver\"></a>  COleTemplateServer::COleTemplateServer","source":"<a name=\"coletemplateserver__coletemplateserver\"></a>  COleTemplateServer::COleTemplateServer"},{"pos":[3395,3436],"content":"Constructs a <ph id=\"ph1\">`COleTemplateServer`</ph> object.","source":"Constructs a `COleTemplateServer` object."},{"pos":[3483,3490],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3494,3649],"content":"For a brief description of the use of the <ph id=\"ph1\">`COleTemplateServer`</ph> class, see the <bpt id=\"p1\">[</bpt>COleLinkingDoc<ept id=\"p1\">](../../mfc/reference/colelinkingdoc-class.md)</ept> class overview.","source":"For a brief description of the use of the `COleTemplateServer` class, see the [COleLinkingDoc](../../mfc/reference/colelinkingdoc-class.md) class overview."},{"pos":[3659,3746],"content":"<bpt id=\"p1\">&lt;a name=\"coletemplateserver__connecttemplate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleTemplateServer::ConnectTemplate","linkify":"<a name=\"coletemplateserver__connecttemplate\"></a>  COleTemplateServer::ConnectTemplate","source":"<a name=\"coletemplateserver__connecttemplate\"></a>  COleTemplateServer::ConnectTemplate"},{"pos":[3750,3903],"content":"Connects the document template pointed to by <ph id=\"ph1\">`pDocTemplate`</ph> to the underlying <bpt id=\"p1\">[</bpt>COleObjectFactory<ept id=\"p1\">](../../mfc/reference/coleobjectfactory-class.md)</ept> object.","source":"Connects the document template pointed to by `pDocTemplate` to the underlying [COleObjectFactory](../../mfc/reference/coleobjectfactory-class.md) object."},{"pos":[4032,4042],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Reference to the OLE class ID that the template requests.","pos":[4057,4114]},{"content":"Pointer to the document template.","pos":[4139,4172]},{"content":"Indicates whether a single instance of the application can support multiple instantiations.","pos":[4199,4290]},{"content":"If <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, multiple instances of the application are launched for each request to create an object.","pos":[4291,4392],"source":" If **TRUE**, multiple instances of the application are launched for each request to create an object."},{"pos":[4402,4409],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4413,4570],"content":"For more information, see <bpt id=\"p1\">[</bpt>CLSID Key<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms691424)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [CLSID Key](http://msdn.microsoft.com/library/windows/desktop/ms691424) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[4580,4657],"content":"<bpt id=\"p1\">&lt;a name=\"coletemplateserver__unregister\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleTemplateServer::Unregister","linkify":"<a name=\"coletemplateserver__unregister\"></a>  COleTemplateServer::Unregister","source":"<a name=\"coletemplateserver__unregister\"></a>  COleTemplateServer::Unregister"},{"content":"Unregisters the associated document template.","pos":[4661,4706]},{"pos":[4750,4762],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"TRUE if successful; otherwise FALSE.","pos":[4766,4802]},{"pos":[4812,4819],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"EnterRemarks","pos":[4823,4835]},{"pos":[4845,4930],"content":"<bpt id=\"p1\">&lt;a name=\"coletemplateserver__updateregistry\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleTemplateServer::UpdateRegistry","linkify":"<a name=\"coletemplateserver__updateregistry\"></a>  COleTemplateServer::UpdateRegistry","source":"<a name=\"coletemplateserver__updateregistry\"></a>  COleTemplateServer::UpdateRegistry"},{"content":"Loads file-type information from the document-template string and places that information in the OLE system registry.","pos":[4934,5051]},{"pos":[5251,5261],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A value from the <bpt id=\"p1\">**</bpt>OLE_APPTYPE<ept id=\"p1\">**</ept> enumeration, which is defined in AFXDISP.H.","pos":[5279,5355],"source":" A value from the **OLE_APPTYPE** enumeration, which is defined in AFXDISP.H."},{"content":"It can have any one of the following values:","pos":[5356,5400]},{"pos":[5408,5467],"content":"<ph id=\"ph1\">`OAT_INPLACE_SERVER`</ph> Server has full server user-interface.","source":"`OAT_INPLACE_SERVER` Server has full server user-interface."},{"pos":[5475,5519],"content":"<ph id=\"ph1\">`OAT_SERVER`</ph> Server supports only embedding.","source":"`OAT_SERVER` Server supports only embedding."},{"pos":[5527,5588],"content":"<ph id=\"ph1\">`OAT_CONTAINER`</ph> Container supports links to embedded objects.","source":"`OAT_CONTAINER` Container supports links to embedded objects."},{"pos":[5596,5648],"content":"<ph id=\"ph1\">`OAT_DISPATCH_OBJECT`</ph> Object is <ph id=\"ph2\">`IDispatch`</ph>-capable.","source":"`OAT_DISPATCH_OBJECT` Object is `IDispatch`-capable."},{"pos":[5656,5753],"content":"<bpt id=\"p1\">**</bpt>OAT_DOC_OBJECT_SERVER<ept id=\"p1\">**</ept> Server supports both embedding and the Document Object component model.","source":"**OAT_DOC_OBJECT_SERVER** Server supports both embedding and the Document Object component model."},{"pos":[5760,5857],"content":"`rglpszRegister`  \nA list of entries that is written into the registry only if no entries exist.","leadings":[""," "],"nodes":[{"content":"A list of entries that is written into the registry only if no entries exist.","pos":[19,96]}]},{"pos":[5864,5987],"content":"`rglpszOverwrite`  \nA list of entries that is written into the registry regardless of whether any preceding entries exist.","leadings":[""," "],"nodes":[{"content":"A list of entries that is written into the registry regardless of whether any preceding entries exist.","pos":[20,122]}]},{"pos":[5994,6173],"content":"`bRegister`  \nDetermines whether the class is to be registered. If `bRegister` is **TRUE**, the class is registered with the system registry. Otherwise, it unregisters the class.","leadings":[""," "],"nodes":[{"content":"Determines whether the class is to be registered. If `bRegister` is **TRUE**, the class is registered with the system registry. Otherwise, it unregisters the class.","pos":[14,178],"nodes":[{"content":"Determines whether the class is to be registered.","pos":[0,49]},{"content":"If <ph id=\"ph1\">`bRegister`</ph> is <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, the class is registered with the system registry.","pos":[50,127],"source":" If `bRegister` is **TRUE**, the class is registered with the system registry."},{"content":"Otherwise, it unregisters the class.","pos":[128,164]}]}]},{"pos":[6183,6190],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The registration information is loaded by means of a call to <bpt id=\"p1\">[</bpt>CDocTemplate::GetDocString<ept id=\"p1\">](../../mfc/reference/cdoctemplate-class.md#cdoctemplate__getdocstring)</ept>.","pos":[6194,6354],"source":"The registration information is loaded by means of a call to [CDocTemplate::GetDocString](../../mfc/reference/cdoctemplate-class.md#cdoctemplate__getdocstring)."},{"content":"The substrings retrieved are those identified by the indexes <bpt id=\"p1\">**</bpt>regFileTypeId<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>regFileTypeName<ept id=\"p2\">**</ept>, and <bpt id=\"p3\">**</bpt>fileNewName<ept id=\"p3\">**</ept>, as described in the <ph id=\"ph1\">`GetDocString`</ph> reference pages.","pos":[6355,6528],"source":" The substrings retrieved are those identified by the indexes **regFileTypeId**, **regFileTypeName**, and **fileNewName**, as described in the `GetDocString` reference pages."},{"pos":[6535,6716],"content":"If the <bpt id=\"p1\">**</bpt>regFileTypeId<ept id=\"p1\">**</ept> substring is empty or if the call to <ph id=\"ph1\">`GetDocString`</ph> fails for any other reason, this function fails and the file information is not entered in the registry.","source":"If the **regFileTypeId** substring is empty or if the call to `GetDocString` fails for any other reason, this function fails and the file information is not entered in the registry."},{"content":"The information in the arguments <ph id=\"ph1\">`rglpszRegister`</ph> and <ph id=\"ph2\">`rglpszOverwrite`</ph> is written to the registry through a call to <bpt id=\"p1\">[</bpt>AfxOleRegisterServerClass<ept id=\"p1\">](application-control.md#afxoleregisterserverclass)</ept>.","pos":[6723,6918],"source":"The information in the arguments `rglpszRegister` and `rglpszOverwrite` is written to the registry through a call to [AfxOleRegisterServerClass](application-control.md#afxoleregisterserverclass)."},{"content":"The default information, which is registered when the two arguments are <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>, is suitable for most applications.","pos":[6919,7035],"source":" The default information, which is registered when the two arguments are **NULL**, is suitable for most applications."},{"content":"For information on the structure of the information in these arguments, see <ph id=\"ph1\">`AfxOleRegisterServerClass`</ph>.","pos":[7036,7140],"source":" For information on the structure of the information in these arguments, see `AfxOleRegisterServerClass`."},{"pos":[7147,7282],"content":"For more information, see <bpt id=\"p1\">[</bpt>Implementing the IDispatch Interface<ept id=\"p1\">](http://msdn.microsoft.com/en-us/0e171f7f-0022-4e9b-ac8e-98192828e945)</ept>.","source":"For more information, see [Implementing the IDispatch Interface](http://msdn.microsoft.com/en-us/0e171f7f-0022-4e9b-ac8e-98192828e945)."},{"pos":[7291,7299],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>MFC Sample HIERSVR<ept id=\"p1\">](../../visual-cpp-samples.md)</ept><ph id=\"ph1\"> </ph>","pos":[7303,7353],"source":"[MFC Sample HIERSVR](../../visual-cpp-samples.md) "},{"content":"<bpt id=\"p1\"> [</bpt>COleObjectFactory Class<ept id=\"p1\">](../../mfc/reference/coleobjectfactory-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[7356,7431],"source":" [COleObjectFactory Class](../../mfc/reference/coleobjectfactory-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[7434,7483],"source":" [Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>COleServerDoc Class<ept id=\"p1\">](../../mfc/reference/coleserverdoc-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[7486,7553],"source":" [COleServerDoc Class](../../mfc/reference/coleserverdoc-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>COleServerItem Class<ept id=\"p1\">](../../mfc/reference/coleserveritem-class.md)</ept>","pos":[7556,7624],"source":" [COleServerItem Class](../../mfc/reference/coleserveritem-class.md)"}],"content":"---\ntitle: \"COleTemplateServer Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"COleTemplateServer\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"Automation servers [C++], implementing\"\n  - \"servers, OLE\"\n  - \"OLE server applications, managing server documents\"\n  - \"link containers [C++]\"\n  - \"visual editing, servers\"\n  - \"OLE link containers\"\n  - \"COleTemplateServer class\"\n  - \"OLE server applications, COleTemplateServer class\"\nms.assetid: 47a2887d-8162-4993-a842-a784177c7f5c\ncaps.latest.revision: 23\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# COleTemplateServer Class\nUsed for OLE visual editing servers, automation servers, and link containers (applications that support links to embeddings).  \n  \n## Syntax  \n  \n```  \nclass COleTemplateServer : public COleObjectFactory  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[COleTemplateServer::COleTemplateServer](#coletemplateserver__coletemplateserver)|Constructs a `COleTemplateServer` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[COleTemplateServer::ConnectTemplate](#coletemplateserver__connecttemplate)|Connects a document template to the underlying `COleObjectFactory` object.|  \n|[COleTemplateServer::Unregister](#coletemplateserver__unregister)|Unregisters the associated document template.|  \n|[COleTemplateServer::UpdateRegistry](#coletemplateserver__updateregistry)|Registers the document type with the OLE system registry.|  \n  \n## Remarks  \n This class is derived from the class [COleObjectFactory](../../mfc/reference/coleobjectfactory-class.md); usually, you can use `COleTemplateServer` directly rather than deriving your own class. `COleTemplateServer` uses a [CDocTemplate](../../mfc/reference/cdoctemplate-class.md) object to manage the server documents. Use `COleTemplateServer` when implementing a full server, that is, a server that can be run as a standalone application. Full servers are typically multiple document interface (MDI) applications, although single document interface (SDI) applications are supported. One `COleTemplateServer` object is needed for each type of server document an application supports; that is, if your server application supports both worksheets and charts, you must have two `COleTemplateServer` objects.  \n  \n `COleTemplateServer` overrides the `OnCreateInstance` member function defined by `COleObjectFactory`. This member function is called by the framework to create a C++ object of the proper type.  \n  \n For more information about servers, see the article [Servers: Implementing a Server](../../mfc/servers-implementing-a-server.md).  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [COleObjectFactory](../../mfc/reference/coleobjectfactory-class.md)  \n  \n `COleTemplateServer`  \n  \n## Requirements  \n **Header:** afxdisp.h  \n  \n##  <a name=\"coletemplateserver__coletemplateserver\"></a>  COleTemplateServer::COleTemplateServer  \n Constructs a `COleTemplateServer` object.  \n  \n```  \nCOleTemplateServer();\n```  \n  \n### Remarks  \n For a brief description of the use of the `COleTemplateServer` class, see the [COleLinkingDoc](../../mfc/reference/colelinkingdoc-class.md) class overview.  \n  \n##  <a name=\"coletemplateserver__connecttemplate\"></a>  COleTemplateServer::ConnectTemplate  \n Connects the document template pointed to by `pDocTemplate` to the underlying [COleObjectFactory](../../mfc/reference/coleobjectfactory-class.md) object.  \n  \n```  \nvoid ConnectTemplate(\n    REFCLSID clsid,  \n    CDocTemplate* pDocTemplate,  \n    BOOL bMultiInstance);\n```  \n  \n### Parameters  \n `clsid`  \n Reference to the OLE class ID that the template requests.  \n  \n `pDocTemplate`  \n Pointer to the document template.  \n  \n `bMultiInstance`  \n Indicates whether a single instance of the application can support multiple instantiations. If **TRUE**, multiple instances of the application are launched for each request to create an object.  \n  \n### Remarks  \n For more information, see [CLSID Key](http://msdn.microsoft.com/library/windows/desktop/ms691424) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coletemplateserver__unregister\"></a>  COleTemplateServer::Unregister  \n Unregisters the associated document template.  \n  \n```  \nBOOL Unregister();\n```  \n  \n### Return Value  \n TRUE if successful; otherwise FALSE.  \n  \n### Remarks  \n EnterRemarks  \n  \n##  <a name=\"coletemplateserver__updateregistry\"></a>  COleTemplateServer::UpdateRegistry  \n Loads file-type information from the document-template string and places that information in the OLE system registry.  \n  \n```  \nvoid UpdateRegistry(\n    OLE_APPTYPE nAppType = OAT_INPLACE_SERVER,  \n    LPCTSTR* rglpszRegister = NULL,  \n    LPCTSTR* rglpszOverwrite = NULL,  \n    BOOL bRegister = TRUE);\n```  \n  \n### Parameters  \n `nAppType`  \n A value from the **OLE_APPTYPE** enumeration, which is defined in AFXDISP.H. It can have any one of the following values:  \n  \n- `OAT_INPLACE_SERVER` Server has full server user-interface.  \n  \n- `OAT_SERVER` Server supports only embedding.  \n  \n- `OAT_CONTAINER` Container supports links to embedded objects.  \n  \n- `OAT_DISPATCH_OBJECT` Object is `IDispatch`-capable.  \n  \n- **OAT_DOC_OBJECT_SERVER** Server supports both embedding and the Document Object component model.  \n  \n `rglpszRegister`  \n A list of entries that is written into the registry only if no entries exist.  \n  \n `rglpszOverwrite`  \n A list of entries that is written into the registry regardless of whether any preceding entries exist.  \n  \n `bRegister`  \n Determines whether the class is to be registered. If `bRegister` is **TRUE**, the class is registered with the system registry. Otherwise, it unregisters the class.  \n  \n### Remarks  \n The registration information is loaded by means of a call to [CDocTemplate::GetDocString](../../mfc/reference/cdoctemplate-class.md#cdoctemplate__getdocstring). The substrings retrieved are those identified by the indexes **regFileTypeId**, **regFileTypeName**, and **fileNewName**, as described in the `GetDocString` reference pages.  \n  \n If the **regFileTypeId** substring is empty or if the call to `GetDocString` fails for any other reason, this function fails and the file information is not entered in the registry.  \n  \n The information in the arguments `rglpszRegister` and `rglpszOverwrite` is written to the registry through a call to [AfxOleRegisterServerClass](application-control.md#afxoleregisterserverclass). The default information, which is registered when the two arguments are **NULL**, is suitable for most applications. For information on the structure of the information in these arguments, see `AfxOleRegisterServerClass`.  \n  \n For more information, see [Implementing the IDispatch Interface](http://msdn.microsoft.com/en-us/0e171f7f-0022-4e9b-ac8e-98192828e945).  \n  \n## See Also  \n [MFC Sample HIERSVR](../../visual-cpp-samples.md)   \n [COleObjectFactory Class](../../mfc/reference/coleobjectfactory-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [COleServerDoc Class](../../mfc/reference/coleserverdoc-class.md)   \n [COleServerItem Class](../../mfc/reference/coleserveritem-class.md)\n"}