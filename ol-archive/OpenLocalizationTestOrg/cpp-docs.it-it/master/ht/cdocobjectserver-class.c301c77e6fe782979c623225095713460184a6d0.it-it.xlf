<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6168285447960db5b139cc5d27b5a0925bd02aec</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\cdocobjectserver-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a2d51bb572631ec97a239adce83575724769297a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dc1011285483de183ebe2966958145b9fe80a06b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CDocObjectServer Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CDocObjectServer Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Implements the additional OLE interfaces needed to make a normal <ph id="ph1">`COleDocument`</ph> server into a full DocObject server: <ph id="ph2">`IOleDocument`</ph>, <ph id="ph3">`IOleDocumentView`</ph>, <ph id="ph4">`IOleCommandTarget`</ph>, and <ph id="ph5">`IPrint`</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>CDocObjectServer::CDocObjectServer</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CDocObjectServer`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>CDocObjectServer::ActivateDocObject</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Activates the document object server, but does not show it.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Protected Methods</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>CDocObjectServer::OnActivateView</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Displays the DocObject view.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>CDocObjectServer::OnApplyViewState</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Restores the state of the DocObject view.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>CDocObjectServer::OnSaveViewState</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Saves the state of the DocObject view.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>is derived from <ph id="ph1">`CCmdTarget`</ph> and works closely with <ph id="ph2">`COleServerDoc`</ph> to expose the interfaces.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A DocObject server document can contain <bpt id="p1">[</bpt>CDocObjectServerItem<ept id="p1">](../../mfc/reference/cdocobjectserveritem-class.md)</ept> objects, which represent the server interface to DocObject items.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To customize your DocObject server, derive your own class from <ph id="ph1">`CDocObjectServer`</ph> and override its view setup functions, <bpt id="p1">[</bpt>OnActivateView<ept id="p1">](#cdocobjectserver__onactivateview)</ept>, <bpt id="p2">[</bpt>OnApplyViewState<ept id="p2">](#cdocobjectserver__onapplyviewstate)</ept>, and <bpt id="p3">[</bpt>OnSaveViewState<ept id="p3">](#cdocobjectserver__onsaveviewstate)</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You will need to provide a new instance of your class in response to framework calls.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For further information on DocObjects, see <bpt id="p1">[</bpt>CDocObjectServerItem<ept id="p1">](../../mfc/reference/cdocobjectserveritem-class.md)</ept> and <bpt id="p2">[</bpt>COleCmdUI<ept id="p2">](../../mfc/reference/colecmdui-class.md)</ept> in the <bpt id="p3">*</bpt>MFC Reference<ept id="p3">*</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Also see <bpt id="p1">[</bpt>Internet First Steps: Active Documents<ept id="p1">](../../mfc/active-documents-on-the-internet.md)</ept> and <bpt id="p2">[</bpt>Active Documents<ept id="p2">](../../mfc/active-documents-on-the-internet.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Also see the following Knowledge Base article:</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Q247382 : PRB: ToolTips for Controls in ActiveX Document Server Are Hidden by the ActiveX Document Container</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>CObject</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>CCmdTarget</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxdocob.h</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>CDocObjectServer::ActivateDocObject</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Call this function to activate (but not show) the document object server.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>calls <ph id="ph1">`IOleDocumentSite`</ph>'s <bpt id="p1">**</bpt>ActivateMe<ept id="p1">**</ept> method, but does not show the view because it waits for specific instructions on how to set up and display the view, given in the call to <bpt id="p2">[</bpt>CDocObjectServer::OnActivateView<ept id="p2">](#cdocobjectserver__onactivateview)</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Together, <ph id="ph1">`ActivateDocObject`</ph> and <ph id="ph2">`OnActivateView`</ph> activate and display the DocObject view.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>DocObject activation differs from other kinds of OLE in-place activation.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>DocObject activation bypasses displaying in-place hatch borders and object adornments (such as sizing handles), ignores object extent functions, and draws scroll bars within the view rectangle as opposed to drawing them outside that rectangle (as in normal in-place activation).</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>CDocObjectServer::CDocObjectServer</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Constructs and initializes a <ph id="ph1">`CDocObjectServer`</ph> object.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>pOwner</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A pointer to the client site document that is the client for the DocObject server.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A pointer to the <ph id="ph1">`IOleDocumentSite`</ph> interface implemented by the container.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>When a DocObject is active, the client site OLE interface ( <ph id="ph1">`IOleDocumentSite`</ph>) is what allows the DocObject server to communicate with its client (the container).</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>When a DocObject server is activated, it first checks that the container implements the <ph id="ph1">`IOleDocumentSite`</ph> interface.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If so, <bpt id="p1">[</bpt>COleServerDoc::GetDocObjectServer<ept id="p1">](../../mfc/reference/coleserverdoc-class.md#coleserverdoc__getdocobjectserver)</ept> is called to see if the container supports DocObjects.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>By default, <ph id="ph1">`GetDocObjectServer`</ph> returns <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>You must override <ph id="ph1">`COleServerDoc::GetDocObjectServer`</ph> to construct a new <ph id="ph2">`CDocObjectServer`</ph> object or a derived object of your own, with pointers to the <ph id="ph3">`COleServerDoc`</ph> container and its <ph id="ph4">`IOleDocumentSite`</ph> interface as arguments to the constructor.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>CDocObjectServer::OnActivateView</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Call this function to display the DocObject view.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Returns an error or warning value.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>By default, returns <bpt id="p1">**</bpt>NOERROR<ept id="p1">**</ept> if successful; otherwise, <bpt id="p2">**</bpt>E_FAIL<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This function creates an in-place frame window, draws scrollbars within the view, sets up the menus the server shares with its container, adds frame controls, sets the active object, then finally shows the in-place frame window and sets the focus.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>CDocObjectServer::OnApplyViewState</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Override this function to restore the state of the DocObject view.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CArchive`</ph> object from which to serialize the view state.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This function is called when the view is being displayed for the first time after its instantiation.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>instructs a view to reinitialize itself according to the data in the <ph id="ph1">`CArchive`</ph> object previously saved with <bpt id="p1">[</bpt>OnSaveViewState<ept id="p1">](#cdocobjectserver__onsaveviewstate)</ept>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The view must validate the data in the <ph id="ph1">`CArchive`</ph> object because the container does not attempt to interpret the view state data in any way.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>You can use <ph id="ph1">`OnSaveViewState`</ph> to store persistent information specific to your view's state.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If you override <ph id="ph1">`OnSaveViewState`</ph> to store information, you will want to override <ph id="ph2">`OnApplyViewState`</ph> to read that information and apply it to your view when it is newly activated.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>CDocObjectServer::OnSaveViewState</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Override this function to save extra state information about your DocObject view.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CArchive`</ph> object to which the view state is serialized.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Your state might include properties like the view type, zoom factor, insertion and selection point, and so on.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The container typically calls this function before deactivating the view.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The saved state can later be restored through <bpt id="p1">[</bpt>OnApplyViewState<ept id="p1">](#cdocobjectserver__onapplyviewstate)</ept>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>You can use <ph id="ph1">`OnSaveViewState`</ph> to store persistent information specific to your view's state.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>If you override <ph id="ph1">`OnSaveViewState`</ph> to store information, you will want to override <ph id="ph2">`OnApplyViewState`</ph> to read that information and apply it to your view when it is newly activated.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>CCmdTarget Class</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Hierarchy Chart</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>CDocObjectServerItem Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>