<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">656788094c0871c0b32bc4e891d9c5cc356f41c7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\build\setting-the-path-and-environment-variables-for-command-line-builds.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c163edb36baa5116b04e230988ccc61fffc0746d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">39dba7b081b9cef0e92c83a6c4170df6b924c4a7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Setting the Path and Environment Variables for Command-Line Builds | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Setting the Path and Environment Variables for Command-Line Builds</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[vcprvc](../build/includes/vcprvc_md.md)]</ph> command-line build tools require several environment variables that are customized for your installation.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">[!INCLUDE[vsprvs](../assembler/masm/includes/vsprvs_md.md)]</ph> is installed, it creates command files that set the required environment variables, and then creates shortcuts that start a Command Prompt window that already has these variables set.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When you want to use the command-line tools, you can run one of these shortcuts, or you can open a plain Command Prompt window and then run the vcvarsall.bat command file.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[vcprvc](../build/includes/vcprvc_md.md)]</ph> command-line tools use the PATH, TMP, INCLUDE, LIB, and LIBPATH environment variables, and may also use tool-specific environment variables.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Because the values of these environment variables are specific to your installation, and can be changed by product updates or upgrades, we recommend that you use vcvarsall.bat or a Developer Command Prompt shortcut instead of setting them yourself.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For information about the specific environment variables used by the compiler and linker, see <bpt id="p1">[</bpt>CL Environment Variables<ept id="p1">](../build/reference/cl-environment-variables.md)</ept> and <bpt id="p2">[</bpt>LINK Environment Variables<ept id="p2">](../build/reference/link-environment-variables.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Several command-line tools or tool options require Administrator permission.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To use them, we recommend that you open a Command Prompt window by using the <bpt id="p1">**</bpt>Run as Administrator<ept id="p1">**</ept> option.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>On Windows 10, right-click to open the shortcut menu for the Command Prompt window, then choose <bpt id="p1">**</bpt>More<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Run as administrator<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Using the Command Prompt shortcuts</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Visual Studio installs a Developer Command Prompt shortcut  that opens a Command Prompt window and sets the environment to use the 32-bit x86-native toolset to target x86 processors.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If you have installed the Visual C++ Build Tools edition, a Developer Command Prompt shortcut is not installed, but the x86 Native Tools Command Prompt does the same thing.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Command prompts for 32-bit cross-compilers that target x64 and ARM platforms are also available.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>On 64-bit platforms, Command Prompt shortcuts for a 64-bit x64-native toolset that targets x64 processors, and for 64-bit cross-compilers that target ARM and x86 processors are installed.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>These versions of the command-line toolset are available in all editions of Visual Studio:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>x86 Native Tools Command Prompt</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Use this toolset to create output files for x86 machines.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>It runs as a 32-bit process, native on an x86 machine and under WOW64 on a 64-bit Windows operating system.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>x86 x64 Cross Tools Command Prompt</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Use this toolset to create output files for <ph id="ph1">[!INCLUDE[vcprx64](../assembler/inline/includes/vcprx64_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It runs as a 32-bit process, native on an x86 machine and under WOW64 on a 64-bit Windows operating system.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>x86 ARM Cross Tools Command Prompt</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Use this toolset to create output files for ARM machines.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>It runs as a 32-bit process, native on an x86 machine and under WOW64 on a 64-bit Windows operating system.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>These versions of the command-line toolset are available on 64-bit platforms:</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>x64 x86 Cross Tools Command Prompt</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Use this toolset to create output files for x86 machines.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>It runs as a native process on a 64-bit Windows operating system.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>x64 Native Tools Command Prompt</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Use this toolset to create output files for <ph id="ph1">[!INCLUDE[vcprx64](../assembler/inline/includes/vcprx64_md.md)]</ph> machines.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>It runs as a native process on a 64-bit Windows operating system.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>x64 ARM Cross Tools Command Prompt</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Use this toolset to create output files for ARM machines.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>It runs as a native 64-bit process on a 64-bit Windows operating system.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The x86 Native Tools Command Prompt has the same effect as the Developer Command Prompt shortcut.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To open a Developer Command Prompt window</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In the Windows 10 <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> menu, open <bpt id="p2">**</bpt>All apps<ept id="p2">**</ept> and then open the <bpt id="p3">**</bpt>Visual Studio<ept id="p3">**</ept> folder for your version of Visual Studio.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>In some earlier versions of Visual Studio, the folder is called  <bpt id="p1">**</bpt>Visual Studio Tools<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">**</bpt>Developer Command Prompt<ept id="p1">**</ept> shortcut for your version of <ph id="ph1">[!INCLUDE[vsprvs](../assembler/masm/includes/vsprvs_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If you have installed the Visual C++ Build Tools edition, use the <bpt id="p1">**</bpt>x86 Native Tools Command Prompt<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Optionally, to run as administrator, right-click to open the shortcut menu for the Developer Command Prompt and choose <bpt id="p1">**</bpt>More<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Run as Administrator<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The Developer Command Prompt shortcut sets the environment to use the 32-bit native toolset to target x86 processors.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In the same folder, there are other command prompt shortcuts that specify different native platforms and cross-compiler targets.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For example, choose the <bpt id="p1">**</bpt>x64 Cross Tools Command Prompt<ept id="p1">**</ept> to use the 32-bit native toolset to target x64 processors.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Choose the <bpt id="p1">**</bpt>ARM Cross Tools Command Prompt<ept id="p1">**</ept> to use the 32-bit native toolset to target ARM processors.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Choose the <bpt id="p1">**</bpt>x64 Native Tools Command Prompt<ept id="p1">**</ept> to use the 64-bit native toolset to target x64 processors.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Using vcvarsall.bat in a Command Prompt window</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>By running vcvarsall.bat in a plain Command Prompt window, you can set environment variables to configure the command line for native 32-bit or 64-bit compilation, or for cross-compilation to x86, x64, or ARM processors.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If no arguments are provided, vcvarsall.bat configures the environment variables for using the 32-bit native compiler for x86 targets.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>However, you can use it to configure any of the compilers.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If you specify a compiler configuration that is not installed or is not available on your build computer architecture, a message is displayed.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The following table shows the supported arguments.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Vcvarsall.bat argument</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Compiler</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Build-computer architecture</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Build output architecture</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>x86</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>x86 32-bit native</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>x86,</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>x86</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>x86_amd64</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>on x86 cross</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>x86,</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>x86_arm</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>ARM on x86 cross</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>x86,</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>ARM</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>amd64</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>64-bit native</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>amd64_x86</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>x86 on <ph id="ph1">[!INCLUDE[vcprx64](../assembler/inline/includes/vcprx64_md.md)]</ph> cross</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>x86</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>amd64_arm</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>ARM on <ph id="ph1">[!INCLUDE[vcprx64](../assembler/inline/includes/vcprx64_md.md)]</ph> cross</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>ARM</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The following steps show how to configure a Command Prompt to use the 32-bit native toolset to target x86 platforms.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>To run vcvarsall.bat</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>At the command prompt, change to the <ph id="ph1">[!INCLUDE[vcprvc](../build/includes/vcprvc_md.md)]</ph> installation directory.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>(The location depends on the system and the <ph id="ph1">[!INCLUDE[vsprvs](../assembler/masm/includes/vsprvs_md.md)]</ph> installation, but a typical location is C:\Program Files (x86)\Microsoft Visual Studio <bpt id="p1">*</bpt>version<ept id="p1">*</ept>\VC<ph id="ph2">\\</ph>.) For example, enter:</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>cd "Program Files (x86)Microsoft Visual Studio 14.0VC"</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>To configure this Command Prompt window for 32-bit x86 command-line builds, at the command prompt, enter:</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The command file sets the required environment variables for the paths to the build tools, libraries, and headers.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>You can now use this command prompt window to run the command-line compiler and tools.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>also provides vcvars32.bat to set up a command-line environment.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The vcvars32.bat file is found in the bin directory under the VC installation directory.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>It's limited to setting the appropriate environment variables to enable 32-bit x86 command-line builds.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>It's the equivalent of the <ph id="ph1">`vcvarsall x86`</ph> command.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>If you are using <bpt id="p1">[</bpt>DEVENV<ept id="p1">](/visualstudio/ide/reference/devenv-command-line-switches)</ept> for command-line builds, the environment set by vcvarsall.bat or vcvars32.bat does not affect your builds, unless you also specify the <bpt id="p2">**</bpt>/useenv<ept id="p2">**</ept> option.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The vcvarsall.bat file can vary from computer to computer.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Do not replace a missing or damaged vcvarsall.bat file by using a file from another computer.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Rerun <ph id="ph1">[!INCLUDE[vsprvs](../assembler/masm/includes/vsprvs_md.md)]</ph> Setup to replace the missing file.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The vcvarsall.bat file also varies from version to version.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>If the current version of <ph id="ph1">[!INCLUDE[vcprvc](../build/includes/vcprvc_md.md)]</ph> is installed on a computer that also has an earlier version of <ph id="ph2">[!INCLUDE[vcprvc](../build/includes/vcprvc_md.md)]</ph>, do not run vcvarsall.bat or vcvars32.bat from the different versions in the same Command Prompt window.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Building on the Command Line</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Linking</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Linker Options</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Compiling a C/C++ Program</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Compiler Options</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>