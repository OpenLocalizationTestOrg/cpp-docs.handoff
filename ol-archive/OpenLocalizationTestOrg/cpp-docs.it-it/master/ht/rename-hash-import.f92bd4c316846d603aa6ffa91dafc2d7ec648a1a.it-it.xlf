<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">da2e846172526b488716651ab7ca08c6bbb8f32c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\preprocessor\rename-hash-import.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fadd70da8375c8f7633c9daa1378aaa2a768ad53</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6b12c016bcd9953db95d4174d04e63b1342a9be</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>rename (#import) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>rename (#import)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>C++ Specific</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Works around name collision problems.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Old name in the type library.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Name to be used instead of the old name.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If this attribute is specified, the compiler replaces all occurrences of <bpt id="p1">*</bpt>OldName<ept id="p1">*</ept> in a type library with the user-supplied <bpt id="p2">*</bpt>NewName<ept id="p2">*</ept> in the resulting header files.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This attribute can be used when a name in the type library coincides with a macro definition in the system header files.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If this situation is not resolved, then various syntax errors will be generated, such as <bpt id="p1">[</bpt>Compiler Error C2059<ept id="p1">](../error-messages/compiler-errors-1/compiler-error-c2059.md)</ept> and <bpt id="p2">[</bpt>Compiler Error C2061<ept id="p2">](../error-messages/compiler-errors-1/compiler-error-c2061.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The replacement is for a name used in the type library, not for a name used in the resulting header file.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For example, suppose a property named <ph id="ph1">`MyParent`</ph> exists in a type library, and a macro <ph id="ph2">`GetMyParent`</ph> is defined in a header file and used before <ph id="ph3">`#import`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Since <ph id="ph1">`GetMyParent`</ph> is the default name of a wrapper function for the error-handling <bpt id="p1">**</bpt>get<ept id="p1">**</ept> property, a name collision will occur.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To work around the problem, use the following attribute in the <ph id="ph1">`#import`</ph> statement:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>which renames the name <ph id="ph1">`MyParent`</ph> in the type library.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An attempt to rename the <ph id="ph1">`GetMyParent`</ph> wrapper name will fail:</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This is because the name <ph id="ph1">`GetMyParent`</ph> only occurs in the resulting type library header file.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>END C++ Specific</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>import Attributes</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>import Directive</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>