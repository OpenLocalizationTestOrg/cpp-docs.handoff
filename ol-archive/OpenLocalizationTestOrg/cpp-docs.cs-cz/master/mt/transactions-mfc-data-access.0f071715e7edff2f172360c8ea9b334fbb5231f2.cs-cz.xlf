<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e14a4bec8a2801356f7f26878014a3e9a7fe5c2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\data\transactions-mfc-data-access.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b30664fc1446497afed81b7600eff9b79f6486f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f6bf9f5dd6512c3a6a2170fbacd291f3b36c2402</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Transactions  (MFC Data Access) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Transactions  (MFC Data Access)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The concept of a transaction was developed to handle cases in which the resulting state of the database depends on the total success of a series of operations.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This could come about because successive operations might modify the results of previous operations.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In such cases, if any one operation fails, the resulting state could be indeterminate.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To solve this problem, transactions group a series of operations in such a way that the integrity of the final result can be assured.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Either all the operations must succeed and then be committed (written to the database) or the entire transaction fails.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The cancellation of the transaction is called a rollback.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Rollback allows a recovery from the changes and returns the database to the pretransaction state.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For example, in an automated banking transaction, if you transfer money from account A to account B, both the withdrawal from A and the deposit to B must succeed to process the funds correctly, or the whole transaction must fail.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A transaction must have ACID properties, which stand for the following:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Atomicity<ept id="p1">**</ept> A transaction is an atomic unit of work and executes exactly once; either all the work is done or none of it is.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Consistency<ept id="p1">**</ept> A transaction preserves the consistency of data, transforming one consistent state of data into another consistent state of data.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Data bound by a transaction must be semantically preserved.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Isolation<ept id="p1">**</ept> A transaction is a unit of isolation and each occurs separately and independently of concurrent transactions.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A transaction should never see the intermediate stages of another transaction.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Durability<ept id="p1">**</ept> A transaction is a unit of recovery.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If a transaction succeeds, its updates persist, even if the system crashes or is shut down.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If a transaction fails, the system remains in the state previous to committing the transaction.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can support transactions in OLE DB (see <bpt id="p1">[</bpt>Supporting Transactions in OLE DB<ept id="p1">](../data/oledb/supporting-transactions-in-ole-db.md)</ept>) or ODBC (see <bpt id="p2">[</bpt>Transaction (ODBC)<ept id="p2">](../data/odbc/transaction-odbc.md)</ept>).</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A distributed transaction is a transaction that updates distributed data, that is, data on more than one networked computer system.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you want to support transactions over a distributed system, you should use the Microsoft .NET Framework rather than the OLE DB transaction support.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Data Access Programming (MFC/ATL)</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>