<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">21495b87b9eb47ded152d28b2bb40af613926e8d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\cloud\cloud-and-web-programming-in-visual-cpp.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">414e76f9fe497b10be0e7a8ad901b967a1eae56d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c86a0a544ee0a253e223fcbc930181d369ab839b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Cloud and Web Programming in Visual C++ | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Cloud and Web Programming in Visual C++</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In C++, you have several options for connecting to the web and the cloud.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Windows Azure Mobile Services</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Provides native APIs that you can use in Windows Store apps or Windows desktop apps to connect to Windows Azure Mobile Services.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Although most of the examples on the website are in C#, you can also use C++.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Quickstart: Adding a mobile service using C++<ept id="p1">](http://msdn.microsoft.com/library/windows/apps/dn263181.aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Live REST Interface</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Provides REST endpoints that you can use in Windows Store apps, Windows desktop apps, or C++ Linux applications to connect to <bpt id="p1">[</bpt>Live<ept id="p1">](http://msdn.microsoft.com/live/ff519582)</ept> services such as SkyDrive, Outlook.com, and Skype.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>C++ apps use these endpoints directly rather than going through the Live SDK, which is for .NET apps only.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>C++ REST SDK (Codename "Casablanca")</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Provides convenient asynchronous HTTP wrapper methods that are designed for cross-platform compatibility and for use in desktop apps on operating systems back to Windows 7 and Windows Server 2012.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can also use these in Universal Windows Platform apps; however, for apps that target only Universal Windows Platform, we recommend that you use the <ph id="ph1">`Windows::Web:HttpClient`</ph> class.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The C++ REST SDK (codename "Casablanca") also provides helper classes that support REST calls and convert JSON data into C++ types.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The SDK is available on <bpt id="p1">[</bpt>CodePlex<ept id="p1">](http://casablanca.codeplex.com/)</ept> and it contains sample files such as <bpt id="p2">[</bpt>live_connect.h<ept id="p2">](http://casablanca.codeplex.com/SourceControl/latest#Release/collateral/Samples/WindowsLiveAuth/live_connect.h)</ept>, which provides helper methods for connecting to <bpt id="p3">[</bpt>Live<ept id="p3">](http://msdn.microsoft.com/live/ff519582)</ept> services.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Windows::Web::Http::HttpClient</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A Windows Runtime HTTP client class modeled on the .NET Framework class of the same name in the System.Web namespace.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>fully supports asynchronous upload and download over HTTP, and pipeline filters that enable the insertion of custom HTTP handlers into the pipeline.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The Windows SDK includes sample filters for metered networks, OAuth authentication, and more.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>IXMLHTTPRequest2 interface</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Provides a native COM interface that you can use in Windows Store apps or Windows desktop apps to connect to the Internet over HTTP and issue GET, PUT, and other HTTP commands.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Connecting Using Tasks and XML HTTP Requests<ept id="p1">](../parallel/concrt/walkthrough-connecting-using-tasks-and-xml-http-requests.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Windows Internet (WinInet)</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Windows API that you can use in Windows desktop apps to connect to the Internet.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Visual C++</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Connecting to networks and web services (Windows Store apps using C#/VB/C++ and XAML)</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>