<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">be3ab0b0a2d294e9c3fc838813c9b2dfe9179d64</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\build\reference\ltcg-link-time-code-generation.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">20fc0cdd947da806df04606a65bc72e02b55bd01</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3d5bc839cbed4dcce8443903ec9b1687c335cbb2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>-LTCG (Link-time Code Generation) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>/LTCG (Link-time Code Generation)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>:INCREMENTAL (optional)</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Specifies that the linker only applies whole program optimization or link-time code generation (LTCG) to the set of files affected by an edit, instead of the entire project.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>By default, this flag is not set when /LTCG is specified, and the entire project is linked by using whole program optimization.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>:NOSTATUS &amp;#124; :STATUS (optional)</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Specifies whether the linker displays a progress indicator that shows what percentage of the link is complete.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>By default, this status information is not displayed.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>:OFF (optional)</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Disables link-time code generation.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This behavior is the same as when /LTCG is not specified on the command line.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>:PGINSTRUMENT (optional)</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This option is deprecated.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Instead, use <bpt id="p1">**</bpt>/LTCG<ept id="p1">**</ept> and  <bpt id="p2">**</bpt>/GENPROFILE<ept id="p2">**</ept> or <bpt id="p3">**</bpt>/FASTGENPROFILE<ept id="p3">**</ept> to generate an instrumented build for profile-guided optimization.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The data that is collected from instrumented runs is used to create an optimized image.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Profile Guided Optimization<ept id="p1">](../../build/reference/profile-guided-optimizations.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The short form of this option is /LTCG:PGI.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>:PGOPTIMIZE (optional)</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This option is deprecated.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Instead, use <bpt id="p1">**</bpt>/LTCG<ept id="p1">**</ept> and  <bpt id="p2">**</bpt>/USEPROFILE<ept id="p2">**</ept> to build an optimized image.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Profile Guided Optimization<ept id="p1">](../../build/reference/profile-guided-optimizations.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The short form of this option is /LTCG:PGO.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>:PGUPDATE (optional)</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This option is deprecated.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Instead, use <bpt id="p1">**</bpt>/LTCG<ept id="p1">**</ept> and  <bpt id="p2">**</bpt>/USEPROFILE<ept id="p2">**</ept> to build an optimized image.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Profile Guided Optimization<ept id="p1">](../../build/reference/profile-guided-optimizations.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The short form of this option is /LTCG:PGU.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The /LTCG option tells the linker to call the compiler and perform whole-program optimization.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can also do profile guided optimization.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Profile Guided Optimization<ept id="p1">](../../build/reference/profile-guided-optimizations.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>With the following exceptions, you cannot add linker options to the PGO combination of /LTCG and /USEPROFILE that were not specified in the previous PGO initialization combination of  /LTCG and /GENPROFILE options:</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>/BASE</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>/FIXED</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>/LTCG</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>/MAP</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>/MAPINFO</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>/NOLOGO</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>/OUT</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>/PGD</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>/PDB</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>/PDBSTRIPPED</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>/STUB</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>/VERBOSE</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Any linker options that are specified together with the /LTCG and /GENPROFILE options to initialize PGO do not have to be specified when you build by using /LTCG and /USEPROFILE; they are implied.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The rest of this topic discusses /LTCG in terms of link-time code generation.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>/LTCG is implied with <bpt id="p1">[</bpt>/GL<ept id="p1">](../../build/reference/gl-whole-program-optimization.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The linker invokes link-time code generation if it is passed a module that was compiled by using <bpt id="p1">**</bpt>/GL<ept id="p1">**</ept> or an MSIL module (see <bpt id="p2">[</bpt>.netmodule Files as Linker Input<ept id="p2">](../../build/reference/netmodule-files-as-linker-input.md)</ept>).</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If you do not explicitly specify <bpt id="p1">**</bpt>/LTCG<ept id="p1">**</ept> when you pass <bpt id="p2">**</bpt>/GL<ept id="p2">**</ept> or MSIL modules to the linker, the linker eventually detects this and restarts the link by using <bpt id="p3">**</bpt>/LTCG<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Explicitly specify <bpt id="p1">**</bpt>/LTCG<ept id="p1">**</ept> when you pass <bpt id="p2">**</bpt>/GL<ept id="p2">**</ept> and MSIL modules to the linker for the fastest possible build performance.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For even faster performance, use <bpt id="p1">**</bpt>/LTCG:INCREMENTAL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This option tells the linker to only re-optimize the set of files that is affected by a source file change, instead of the entire project.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This can significantly reduce the link time required.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This is not the same option as incremental linking.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/LTCG<ept id="p1">**</ept> is not valid for use with <bpt id="p2">[</bpt>/INCREMENTAL<ept id="p2">](../../build/reference/incremental-link-incrementally.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>When <bpt id="p1">**</bpt>/LTCG<ept id="p1">**</ept> is used to link modules compiled by using <bpt id="p2">[</bpt>/Og<ept id="p2">](../../build/reference/og-global-optimizations.md)</ept>, <bpt id="p3">[</bpt>/O1<ept id="p3">](../../build/reference/o1-o2-minimize-size-maximize-speed.md)</ept>, <bpt id="p4">[</bpt>/O2<ept id="p4">](../../build/reference/o1-o2-minimize-size-maximize-speed.md)</ept>, or <bpt id="p5">[</bpt>/Ox<ept id="p5">](../../build/reference/ox-full-optimization.md)</ept>, the following optimizations are performed:</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Cross-module inlining</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Interprocedural register allocation (64-bit operating systems only)</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Custom calling convention (x86 only)</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Small TLS displacement (x86 only)</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Stack double alignment (x86 only)</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Improved memory disambiguation (better interference information for global variables and input parameters)</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The linker determines which optimizations were used to compile each function and applies the same optimizations at link time.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Using <bpt id="p1">**</bpt>/LTCG<ept id="p1">**</ept> and <bpt id="p2">**</bpt>/Ogt<ept id="p2">**</ept> causes double-alignment optimization.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>/LTCG<ept id="p1">**</ept> and <bpt id="p2">**</bpt>/Ogs<ept id="p2">**</ept> are specified, double alignment is not performed.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If most of the functions in an application are compiled for speed, with a few functions compiled for size (for example, by using the <bpt id="p1">[</bpt>optimize<ept id="p1">](../../preprocessor/optimize.md)</ept> pragma), the compiler double-aligns the functions that are optimized for size if they call functions that require double alignment.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>If the compiler can identify all of the call sites of a function, the compiler ignores explicit calling-convention modifiers on a function and tries to optimize the function's calling convention:</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>pass parameters in registers</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>reorder parameters for alignment</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>remove unused parameters</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If a function is called through a function pointer, or if a function is called from outside a module that is compiled by using <bpt id="p1">**</bpt>/GL<ept id="p1">**</ept>, the compiler does not attempt to optimize the function's calling convention.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If you use <bpt id="p1">**</bpt>/LTCG<ept id="p1">**</ept> and redefine mainCRTStartup, your application can have unpredictable behavior that relates to user code that executes before global objects are initialized.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>There are three ways to address this issue: do not redefine mainCRTStartup, do not compile the file that contains mainCRTStartup by using <bpt id="p1">**</bpt>/LTCG<ept id="p1">**</ept>, or initialize global variables and objects statically.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>/LTCG and MSIL Modules</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Modules that are compiled by using <bpt id="p1">[</bpt>/GL<ept id="p1">](../../build/reference/gl-whole-program-optimization.md)</ept> and <bpt id="p2">[</bpt>/clr<ept id="p2">](../../build/reference/clr-common-language-runtime-compilation.md)</ept> can be used as input to the linker when <bpt id="p3">**</bpt>/LTCG<ept id="p3">**</ept> is specified.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/LTCG<ept id="p1">**</ept> can accept native object files, mixed native/managed object files (compiled by using <bpt id="p2">**</bpt>/clr<ept id="p2">**</ept>), and pure object files (compiled by using <bpt id="p3">**</bpt>/clr:pure<ept id="p3">**</ept>), and safe object files (compiled by using <bpt id="p4">**</bpt>/clr:safe<ept id="p4">**</ept>)</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/LTCG<ept id="p1">**</ept> can accept safe .netmodules, which can be created by using <bpt id="p2">**</bpt>/clr:safe /LN<ept id="p2">**</ept> in Visual C++ and <bpt id="p3">**</bpt>/target:module<ept id="p3">**</ept> in any other Visual Studio compiler.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>.Netmodules produced by using<bpt id="p1">**</bpt>/clr<ept id="p1">**</ept> or <bpt id="p2">**</bpt>/clr:pure<ept id="p2">**</ept> are not accepted by <bpt id="p3">**</bpt>/LTCG<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>/LTCG:PGI does not accept native modules compiled by using <bpt id="p1">**</bpt>/GL<ept id="p1">**</ept> and <bpt id="p2">**</bpt>/clr<ept id="p2">**</ept>, or pure modules (produced by using <bpt id="p3">**</bpt>/clr:pure<ept id="p3">**</ept>)</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>To set this compiler option in the Visual Studio development environment</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Open the project <bpt id="p1">**</bpt>Property Pages<ept id="p1">**</ept> dialog box.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Working with Project Properties<ept id="p1">](../../ide/working-with-project-properties.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Configuration Properties<ept id="p1">**</ept> folder.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>General<ept id="p1">**</ept> property page.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Modify the <bpt id="p1">**</bpt>Whole Program Optimization<ept id="p1">**</ept> property.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>You can also apply <bpt id="p1">**</bpt>/LTCG<ept id="p1">**</ept> to specific builds by choosing <bpt id="p2">**</bpt>Build<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Profile Guided Optimization<ept id="p3">**</ept> on the menu bar, or by choosing one of the Profile Guided Optimization options on the shortcut menu for the project.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>To set this compiler option programmatically</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>See &lt;xref:Microsoft.VisualStudio.VCProjectEngine.VCLinkerTool.LinkTimeCodeGeneration%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Setting Linker Options</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Linker Options</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>