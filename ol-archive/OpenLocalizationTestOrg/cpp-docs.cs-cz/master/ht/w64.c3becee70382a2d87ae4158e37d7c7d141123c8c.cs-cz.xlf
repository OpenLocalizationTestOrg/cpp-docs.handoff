<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3718ee5c875638c12e72caa3fc5828f50967bc9e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\cpp\w64.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">22cc3f09e06cefeaa69043c52b9e14794d6aa1a1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4ea371fb4fbbbce401b0e15bf3f077897efcae28</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>__w64 | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>__w64</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>(Microsoft Specific) This keyword is obsolete.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In versions of Visual Studio earlier than Visual Studio 2013, this lets you mark variables, so that when you compile with <bpt id="p1">[</bpt>/Wp64<ept id="p1">](../build/reference/wp64-detect-64-bit-portability-issues.md)</ept> the compiler will report any warnings that would be reported if you were compiling with a 64-bit compiler.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>One of the three types that could cause problems in code being ported from a 32-bit to a 64-bit compiler: <ph id="ph1">`int`</ph>, <ph id="ph2">`long`</ph>, or a pointer.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The identifier for the variable you are creating.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>/Wp64<ept id="p1">](../build/reference/wp64-detect-64-bit-portability-issues.md)</ept> compiler option and <ph id="ph1">`__w64`</ph> keyword are deprecated in Visual Studio 2010 and Visual Studio 2013 and removed starting in Visual Studio 2013.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If you use the <ph id="ph1">`/Wp64`</ph> compiler option on the command line, the compiler issues <bpt id="p1">[</bpt>Command-Line Warning D9002<ept id="p1">](http://msdn.microsoft.com/en-us/c58b405b-0f26-434e-b57f-4f05e1ca81e6)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`__w64`</ph> keyword is silently ignored.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Instead of using this option and keyword to detect 64-bit portability issues, use a Visual C++ compiler that targets a 64-bit platform.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Configuring Programs for 64-Bit<ept id="p1">](../build/configuring-programs-for-64-bit-visual-cpp.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Any typedef that has <ph id="ph1">`__w64`</ph> on it must be 32 bits on x86 and 64 bits on x64.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To detect portability issues by using versions of the Visual C++ compiler earlier than Visual Studio 2010, the <ph id="ph1">`__w64`</ph> keyword should be specified on any typedefs that change size between 32 bit and 64 bit platforms.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For any such type, <ph id="ph1">`__w64`</ph> must appear only on the 32-bit definition of the typedef.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`__w64`</ph> keyword is ignored if the compilation does not use <ph id="ph2">`/Wp64`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more information about porting to 64-bit, see the following topics:</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Compiler Options</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Porting 32-Bit Code to 64-Bit Code</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Configuring Programs for 64-Bit</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Keywords</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>