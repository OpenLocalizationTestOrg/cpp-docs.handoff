<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4a1a7141107632951496d5b2a411c59ec9c9cc9a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\when-update-handlers-are-called.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b36dcf0522700f3de596c9ce19f71b230961c4f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2a761868ee4026d86506db3c5b26ad99703b2e6e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>When Update Handlers Are Called | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>When Update Handlers Are Called</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Suppose the user clicks the mouse in the File menu, which generates a <ph id="ph1">`WM_INITMENUPOPUP`</ph> message.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The framework's update mechanism collectively updates all items on the File menu before the menu drops down so the user can see it.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To do this, the framework routes update commands for all menu items in the pop-up menu along the standard command routing.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Command targets on the routing have an opportunity to update any menu items by matching the update command with an appropriate message-map entry (of the form <ph id="ph1">`ON_UPDATE_COMMAND_UI`</ph>) and calling an "update handler" function.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Thus, for a menu with six menu items, six update commands are sent out.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>If an update handler exists for the command ID of the menu item, it is called to do the updating.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If not, the framework checks for the existence of a handler for that command ID and enables or disables the menu item as appropriate.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If the framework does not find an <ph id="ph1">`ON_UPDATE_COMMAND_UI`</ph> entry during command routing, it automatically enables the user-interface object if there is an <ph id="ph2">`ON_COMMAND`</ph> entry somewhere with the same command ID.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Otherwise, it disables the user-interface object.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Therefore, to ensure that a user-interface object is enabled, supply a handler for the command the object generates or supply an update handler for it.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>See the figure in the topic <bpt id="p1">[</bpt>User-Interface Objects and Command IDs<ept id="p1">](../mfc/user-interface-objects-and-command-ids.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>It is possible to disable the default disabling of user-interface objects.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>m_bAutoMenuEnable<ept id="p1">](../mfc/reference/cframewnd-class.md#cframewnd__m_bautomenuenable)</ept> member of class <ph id="ph1">`CFrameWnd`</ph> in the <bpt id="p2">*</bpt>MFC Reference<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Menu initialization is automatic in the framework, occurring when the application receives a <ph id="ph1">`WM_INITMENUPOPUP`</ph> message.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>During the idle loop, the framework searches the command routing for button update handlers in much the same way as it does for menus.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>How to: Update User-Interface Objects</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>