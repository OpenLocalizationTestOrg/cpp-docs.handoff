<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0242e78c6b9951d43c613b97215208dcf4bbe570</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\decrement-overridables-comment.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">82f0b73a327ce40aa96dfb6c719f8d082cf5a0bc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a920d33505b499cc3bd80313d986c0d61f9f7f53</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>-- Overridables Comment | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>// Overridables Comment</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`// Overridables`</ph> section of an MFC class declaration contains virtual functions that you can override in a derived class when you need to modify the base class behavior.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>They are usually named starting with "On", although it is not strictly necessary.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Functions here are designed to be overridden, and often implement or provide some sort of "callback" or "hook."</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Typically, these members are protected.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In MFC itself, pure virtual functions are always placed in this section.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A pure virtual function in C++ is one of the form:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In the sample listing from class <ph id="ph1">`CStdioFile`</ph>, in <bpt id="p1">[</bpt>An Example of the Comments<ept id="p1">](../mfc/an-example-of-the-comments.md)</ept>, the list includes no overridables section.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Class <bpt id="p1">**</bpt>CDocument<ept id="p1">**</ept>, on the other hand, lists approximately 10 overridable member functions.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In some classes, you may also see the comment <ph id="ph1">`// Advanced Overridables`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>These are functions that only advanced programmers should attempt to override.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You will probably never need to override them.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The conventions described in this article also work well, in general, for Automation (formerly known as OLE Automation) methods and properties.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Automation methods are similar to MFC operations.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Automation properties are similar to MFC attributes.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Automation events (supported for ActiveX controls, formerly known as OLE controls) are similar to MFC overridable member functions.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Using the MFC Source Files</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An Example of the Comments</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>// Implementation Comment</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>// Constructors Comment</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>// Attributes Comment</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>// Operations Comment</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>