<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3533dfe1936a9829c9fc34835d1ef305643fc37b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\clipboard-adding-other-formats.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c74545b68d7097ec076f85edf1467008186e6925</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6f6a151cc0519434b9954bf301f24b7a1ce158e8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Clipboard: Adding Other Formats | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Clipboard: Adding Other Formats</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic explains how to expand the list of supported formats, particularly for OLE support.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The topic <bpt id="p1">[</bpt>Clipboard: Copying and Pasting Data<ept id="p1">](../mfc/clipboard-copying-and-pasting-data.md)</ept> describes the minimum implementation necessary to support copying and pasting from the Clipboard.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If this is all you implement, the only formats placed on the Clipboard are <ph id="ph1">`CF_METAFILEPICT`</ph>, <bpt id="p1">**</bpt>CF_EMBEDSOURCE<ept id="p1">**</ept>, <bpt id="p2">**</bpt>CF_OBJECTDESCRIPTOR<ept id="p2">**</ept>, and possibly <ph id="ph2">`CF_LINKSOURCE`</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Most applications will need more formats on the Clipboard than these three.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Registering Custom Formats</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To create your own custom formats, follow the same procedure you would use when registering any custom Clipboard format: pass the name of the format to the <bpt id="p1">**</bpt>RegisterClipboardFormat<ept id="p1">**</ept> function and use its return value as the format ID.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Placing Formats on the Clipboard</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To add more formats to those placed on the Clipboard, you must override the <ph id="ph1">`OnGetClipboardData`</ph> function in the class you derived from either <ph id="ph2">`COleClientItem`</ph> or <ph id="ph3">`COleServerItem`</ph> (depending on whether the data to be copied is native).</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In this function, you should use the following procedure.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To place formats on the Clipboard</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Create a <ph id="ph1">`COleDataSource`</ph> object.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Pass this data source to a function that adds your native data formats to the list of supported formats by calling <ph id="ph1">`COleDataSource::CacheGlobalData`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Add standard formats by calling <ph id="ph1">`COleDataSource::CacheGlobalData`</ph> for each standard format you want to support.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This technique is used in the MFC OLE sample program <bpt id="p1">[</bpt>HIERSVR<ept id="p1">](../visual-cpp-samples.md)</ept> (examine the <ph id="ph1">`OnGetClipboardData`</ph> member function of the <bpt id="p2">**</bpt>CServerItem<ept id="p2">**</ept> class).</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The only difference in this sample is that step three is not implemented because HIERSVR supports no other standard formats.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>What do you want to know more about</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>OLE data objects and data sources and uniform data transfer</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>OLE drag and drop</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>OLE</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Clipboard: Using the OLE Clipboard Mechanism</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>