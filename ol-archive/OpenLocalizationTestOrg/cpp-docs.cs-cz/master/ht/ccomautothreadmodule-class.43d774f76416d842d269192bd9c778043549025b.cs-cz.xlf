<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c48c2bb11e6cb57abb825750c8b78f137833ec59</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\ccomautothreadmodule-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">91283ab69104f43793608d6b8fc8c90925380cdc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">68059cd5b2fedd1ed2da05ee50ecdb71153c2902</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CComAutoThreadModule Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CComAutoThreadModule Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>As of ATL 7.0, <ph id="ph1">`CComAutoThreadModule`</ph> is obsolete: see <bpt id="p1">[</bpt>ATL Module Classes<ept id="p1">](../../atl/atl-module-classes.md)</ept> for more details.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This class and its members cannot be used in applications that execute in the Windows Runtime.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>[in] The class managing thread selection.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">[</bpt>CComSimpleThreadAllocator<ept id="p1">](../../atl/reference/ccomsimplethreadallocator-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Methods</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>CreateInstance</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Selects a thread and then creates an object in the associated apartment.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>GetDefaultThreads</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>(Static) Dynamically calculates the number of threads for the module based on the number of processors.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Init</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Creates the module's threads.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Lock</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Increments the lock count on the module and on the current thread.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Unlock</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Decrements the lock count on the module and on the current thread.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Data Members</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Data Members</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>dwThreadID</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Contains the identifier of the current thread.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>m_Allocator</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Manages thread selection.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>m_nThreads</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Contains the number of threads in the module.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>m_pApartments</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Manages the module's apartments.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This class is obsolete, having been replaced by the <bpt id="p1">[</bpt>CAtlAutoThreadModule<ept id="p1">](../../atl/reference/catlautothreadmodule-class.md)</ept> and <bpt id="p2">[</bpt>CAtlModule<ept id="p2">](../../atl/reference/catlmodule-class.md)</ept> derived classes.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The information that follows is for use with older releases of ATL.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>derives from <bpt id="p1">[</bpt>CComModule<ept id="p1">](../../atl/reference/ccommodule-class.md)</ept> to implement a thread-pooled, apartment-model COM server for EXEs and Windows services.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>uses <bpt id="p1">[</bpt>CComApartment<ept id="p1">](../../atl/reference/ccomapartment-class.md)</ept> to manage an apartment for each thread in the module.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Derive your module from <ph id="ph1">`CComAutoThreadModule`</ph> when you want to create objects in multiple apartments.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You must also include the <bpt id="p1">[</bpt>DECLARE_CLASSFACTORY_AUTO_THREAD<ept id="p1">](http://msdn.microsoft.com/library/19d7105e-03e8-4412-9f5e-5384c8a5e18f)</ept> macro in your object's class definition to specify <bpt id="p2">[</bpt>CComClassFactoryAutoThread<ept id="p2">](../../atl/reference/ccomclassfactoryautothread-class.md)</ept> as the class factory.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>By default, the ATL COM AppWizard (the ATL Project Wizard in Visual Studio .NET) will derive your module from <ph id="ph1">`CComModule`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To use <ph id="ph1">`CComAutoThreadModule`</ph>, modify the class definition.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>NVC_ATL_AxHost#2</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>_ATL_MODULE</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>CAtlModule</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>CAtlModuleT</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>CAtlAutoThreadModuleT</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>CComModule</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> atlbase.h</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>CComAutoThreadModule::CreateInstance</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>As of ATL 7.0, <ph id="ph1">`CComAutoThreadModule`</ph> is obsolete: see <bpt id="p1">[</bpt>ATL Module Classes<ept id="p1">](../../atl/atl-module-classes.md)</ept> for more details.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>pfnCreateInstance</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>[in] A pointer to a creator function.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>[in] The IID of the requested interface.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>[out] A pointer to the interface pointer identified by <ph id="ph1">`riid`</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If the object does not support this interface, <ph id="ph1">`ppvObj`</ph> is set to NULL.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A standard HRESULT value.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Selects a thread and then creates an object in the associated apartment.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>CComAutoThreadModule::dwThreadID</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>As of ATL 7.0, <ph id="ph1">`CComAutoThreadModule`</ph> is obsolete: see <bpt id="p1">[</bpt>ATL Module Classes<ept id="p1">](../../atl/atl-module-classes.md)</ept> for more details.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Contains the identifier of the current thread.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>CComAutoThreadModule::GetDefaultThreads</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>As of ATL 7.0, <ph id="ph1">`CComAutoThreadModule`</ph> is obsolete: see <bpt id="p1">[</bpt>ATL Module Classes<ept id="p1">](../../atl/atl-module-classes.md)</ept> for more details.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The number of threads to be created in the EXE module.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This static function dynamically calculates the maximum number of threads for the EXE module, based on the number of processors.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>By default, this return value is passed to the <bpt id="p1">[</bpt>Init<ept id="p1">](#ccomautothreadmodule__init)</ept> method to create the threads.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>CComAutoThreadModule::Init</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>As of ATL 7.0, <ph id="ph1">`CComAutoThreadModule`</ph> is obsolete: see <bpt id="p1">[</bpt>ATL Module Classes<ept id="p1">](../../atl/atl-module-classes.md)</ept> for more details.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>[in] A pointer to an array of object map entries.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>[in] The <ph id="ph1">`HINSTANCE`</ph> passed to <bpt id="p1">**</bpt>DLLMain<ept id="p1">**</ept> or <ph id="ph2">`WinMain`</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>[in] A pointer to the LIBID of the type library associated with the project.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>[in] The number of threads to be created.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>By default, <ph id="ph1">`nThreads`</ph> is the value returned by <bpt id="p1">[</bpt>GetDefaultThreads<ept id="p1">](#ccomautothreadmodule__getdefaultthreads)</ept>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Initializes data members and creates the number of threads specified by <ph id="ph1">`nThreads`</ph>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>CComAutoThreadModule::Lock</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>As of ATL 7.0, <ph id="ph1">`CComAutoThreadModule`</ph> is obsolete: see <bpt id="p1">[</bpt>ATL Module Classes<ept id="p1">](../../atl/atl-module-classes.md)</ept> for more details.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A value that may be useful for diagnostics or testing.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Performs an atomic increment on the lock count for the module and for the current thread.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>uses the module lock count to determine whether any clients are accessing the module.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The lock count on the current thread is used for statistical purposes.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>CComAutoThreadModule::m_Allocator</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>As of ATL 7.0, <ph id="ph1">`CComAutoThreadModule`</ph> is obsolete: see <bpt id="p1">[</bpt>ATL Module Classes<ept id="p1">](../../atl/atl-module-classes.md)</ept> for more details.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The object managing thread selection.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>By default, the <ph id="ph1">`ThreadAllocator`</ph> class template parameter is <bpt id="p1">[</bpt>CComSimpleThreadAllocator<ept id="p1">](../../atl/reference/ccomsimplethreadallocator-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>CComAutoThreadModule::m_nThreads</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>As of ATL 7.0, <ph id="ph1">`CComAutoThreadModule`</ph> is obsolete: see <bpt id="p1">[</bpt>ATL Module Classes<ept id="p1">](../../atl/atl-module-classes.md)</ept> for more details.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Contains the number of threads in the EXE module.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>When <bpt id="p1">[</bpt>Init<ept id="p1">](#ccomautothreadmodule__init)</ept> is called, <ph id="ph1">`m_nThreads`</ph> is set to the <ph id="ph2">`nThreads`</ph> parameter value.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Each thread's associated apartment is managed by a <bpt id="p1">[</bpt>CComApartment<ept id="p1">](../../atl/reference/ccomapartment-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>CComAutoThreadModule::m_pApartments</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>As of ATL 7.0, <ph id="ph1">`CComAutoThreadModule`</ph> is obsolete: see <bpt id="p1">[</bpt>ATL Module Classes<ept id="p1">](../../atl/atl-module-classes.md)</ept> for more details.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Points to an array of <bpt id="p1">[</bpt>CComApartment<ept id="p1">](../../atl/reference/ccomapartment-class.md)</ept> objects, each of which manages an apartment in the module.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The number of elements in the array is based on the <bpt id="p1">[</bpt>m_nThreads<ept id="p1">](#ccomautothreadmodule__m_nthreads)</ept> member.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>CComAutoThreadModule::Unlock</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>As of ATL 7.0, <ph id="ph1">`CComAutoThreadModule`</ph> is obsolete: see <bpt id="p1">[</bpt>ATL Module Classes<ept id="p1">](../../atl/atl-module-classes.md)</ept> for more details.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>A value that may be useful for diagnostics or testing.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Performs an atomic decrement on the lock count for the module and for the current thread.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>uses the module lock count to determine whether any clients are accessing the module.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The lock count on the current thread is used for statistical purposes.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>When the module lock count reaches zero, the module can be unloaded.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Class Overview</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Module Classes</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>