<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="tr-tr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cf40336803459941e5fda753bc4e130fe0203dc0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\iaxwinhostwindow-interface.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8be6d25142fe5a69f31d4dccb66ffce3c275cd75</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6f6c2e92cd6b022518b1fc3d4896ac269f98de1c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>IAxWinHostWindow Interface | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>IAxWinHostWindow Interface</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This interface provides methods for manipulating a control and its host object.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This class and its members cannot be used in applications that execute in the <ph id="ph1">[!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Methods</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>AttachControl</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Attaches an existing control to the host object.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>CreateControl</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Creates a control and attaches it to the host object.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>CreateControlEx</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Creates a control, attaches it to the host object, and optionally sets up an event handler.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>QueryControl</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Returns an interface pointer to the hosted control.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>SetExternalDispatch</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Sets the external <ph id="ph1">`IDispatch`</ph> interface.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>SetExternalUIHandler</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Sets the external <ph id="ph1">`IDocHostUIHandlerDispatch`</ph> interface.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This interface is exposed by ATL's ActiveX control hosting objects.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Call the methods on this interface to create and/or attach a control to the host object, to get an interface from a hosted control, or to set the external dispinterface or UI handler for use when hosting the Web browser.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The definition of this interface is available as IDL or C++, as shown below.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Definition type</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>File</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>IDL</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>ATLIFace.idl</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>C++</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>ATLIFace.h (also included in ATLBase.h)</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>IAxWinHostWindow::AttachControl</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Attaches an existing (and previously initialized) control to the host object using the window identified by <ph id="ph1">`hWnd`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>pUnkControl</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>[in] A pointer to the <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> interface of the control to be attached to the host object.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>[in] A handle to the window to be used for hosting.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>IAxWinHostWindow::CreateControl</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Creates a control, initializes it, and hosts it in the window identified by <ph id="ph1">`hWnd`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>[in] A string identifying the control to create.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Can be a CLSID (must include the braces), ProgID, URL, or raw HTML (prefixed by <bpt id="p1">**</bpt>MSHTML:<ept id="p1">**</ept>).</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>[in] A handle to the window to be used for hosting.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>[in] An interface pointer for a stream containing initialization data for the control.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This window will be subclassed by the host object exposing this interface so that messages can be reflected to the control and other container features will work.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Calling this method is equivalent to calling <bpt id="p1">[</bpt>IAxWinHostWindow::CreateControlEx<ept id="p1">](#iaxwinhostwindow__createcontrolex)</ept>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To create a licensed ActiveX control, see <bpt id="p1">[</bpt>IAxWinHostWindowLic::CreateControlLic<ept id="p1">](../../atl/reference/iaxwinhostwindowlic-interface.md#iaxwinhostwindowlic__createcontrollicex)</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>IAxWinHostWindow::CreateControlEx</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Creates an ActiveX control, initializes it, and hosts it in the specified window, similar to <bpt id="p1">[</bpt>IAxWinHostWindow::CreateControl<ept id="p1">](#iaxwinhostwindow__createcontrol)</ept>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>[in] A string identifying the control to create.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Can be a CLSID (must include the braces), ProgID, URL, or raw HTML (prefixed with <bpt id="p1">**</bpt>MSHTML:<ept id="p1">**</ept>).</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>[in] A handle to the window to be used for hosting.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>[in] An interface pointer for a stream containing initialization data for the control.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>[out] The address of a pointer that will receive the <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> interface of the created control.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>riidAdvise</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>[in] The interface identifier of an outgoing interface on the contained object.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">**</bpt>IID_NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>punkAdvise</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>[in] A pointer to the <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> interface of the sink object to be connected to the connection point on the contained object specified by <ph id="ph1">`iidSink`</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Unlike the <ph id="ph1">`CreateControl`</ph> method, <ph id="ph2">`CreateControlEx`</ph> also allows you to receive an interface pointer to the newly created control and set up an event sink to receive events fired by the control.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To create a licensed ActiveX control, see <bpt id="p1">[</bpt>IAxWinHostWindowLic::CreateControlLicEx<ept id="p1">](../../atl/reference/iaxwinhostwindowlic-interface.md#iaxwinhostwindowlic__createcontrollicex)</ept>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>IAxWinHostWindow::QueryControl</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Returns the specified interface pointer provided by the hosted control.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>[in] The ID of an interface on the control being requested.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>[out] The address of a pointer that will receive the specified interface of the created control.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>IAxWinHostWindow::SetExternalDispatch</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Sets the external dispinterface, which is available to contained controls through the <bpt id="p1">[</bpt>IDocHostUIHandlerDispatch::GetExternal<ept id="p1">](../../atl/reference/idochostuihandlerdispatch-interface.md)</ept> method.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>[in] A pointer to an <ph id="ph1">`IDispatch`</ph> interface.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>IAxWinHostWindow::SetExternalUIHandler</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Call this function to set the external <bpt id="p1">[</bpt>IDocHostUIHandlerDispatch<ept id="p1">](../../atl/reference/idochostuihandlerdispatch-interface.md)</ept> interface for the <ph id="ph1">`CAxWindow`</ph> object.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>[in] A pointer to an <bpt id="p1">**</bpt>IDocHostUIHandlerDispatch<ept id="p1">**</ept> interface.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This function is used by controls (such as the Web browser control) that query the host's site for the <ph id="ph1">`IDocHostUIHandlerDispatch`</ph> interface.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>IAxWinAmbientDispatch Interface</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>CAxWindow::QueryHost</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>AtlAxGetHost</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>