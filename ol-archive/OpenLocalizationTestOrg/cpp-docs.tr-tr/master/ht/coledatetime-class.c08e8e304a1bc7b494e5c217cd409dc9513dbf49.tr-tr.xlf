<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="tr-tr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cf250b8f1994548344ef35396ff21d458119f2d3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl-mfc-shared\reference\coledatetime-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fbe8c317dfd51883f0f0ea3dbce782f81276ec00</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8c3d28ef328749ea178dff6dfa11e346ad399173</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>COleDateTime Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>COleDateTime Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Encapsulates the <ph id="ph1">`DATE`</ph> data type that is used in OLE automation.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>COleDateTime::COleDateTime</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>COleDateTime::Format</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Generates a formatted string representation of a <ph id="ph1">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>COleDateTime::GetAsDBTIMESTAMP</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Call this method to obtain the time in the <ph id="ph1">`COleDateTime`</ph> object as a <bpt id="p1">**</bpt>DBTIMESTAMP<ept id="p1">**</ept> data structure.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>COleDateTime::GetAsSystemTime</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Call this method to obtain the time in the <ph id="ph1">`COleDateTime`</ph> object as a <bpt id="p1">[</bpt>SYSTEMTIME<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms724950)</ept> data structure.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>COleDateTime::GetAsUDATE</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Call this method to obtain the time in the <ph id="ph1">`COleDateTime`</ph> as a <bpt id="p1">**</bpt>UDATE<ept id="p1">**</ept> data structure.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>COleDateTime::GetCurrentTime</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">`COleDateTime`</ph> object that represents the current time (static member function).</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>COleDateTime::GetDay</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Returns the day this <ph id="ph1">`COleDateTime`</ph> object represents (1 – 31).</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>COleDateTime::GetDayOfWeek</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Returns the day of the week this <ph id="ph1">`COleDateTime`</ph> object represents (Sunday = 1).</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>COleDateTime::GetDayOfYear</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Returns the day of the year this <ph id="ph1">`COleDateTime`</ph> object represents (Jan 1 = 1).</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>COleDateTime::GetHour</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Returns the hour this <ph id="ph1">`COleDateTime`</ph> object represents (0 – 23).</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>COleDateTime::GetMinute</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Returns the minute this <ph id="ph1">`COleDateTime`</ph> object represents (0 – 59).</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>COleDateTime::GetMonth</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Returns the month this <ph id="ph1">`COleDateTime`</ph> object represents (1 – 12).</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>COleDateTime::GetSecond</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Returns the second this <ph id="ph1">`COleDateTime`</ph> object represents (0 – 59).</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>COleDateTime::GetStatus</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets the status (validity) of this <ph id="ph1">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>COleDateTime::GetYear</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Returns the year this <ph id="ph1">`COleDateTime`</ph> object represents.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>COleDateTime::ParseDateTime</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Reads a date/time value from a string and sets the value of <ph id="ph1">`COleDateTime`</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>COleDateTime::SetDate</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Sets the value of this <ph id="ph1">`COleDateTime`</ph> object to the specified date-only value.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>COleDateTime::SetDateTime</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Sets the value of this <ph id="ph1">`COleDateTime`</ph> object to the specified date/time value.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>COleDateTime::SetStatus</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Sets the status (validity) of this <ph id="ph1">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>COleDateTime::SetTime</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Sets the value of this <ph id="ph1">`COleDateTime`</ph> object to the specified time-only value.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Public Operators</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>COleDateTime::operator ==, COleDateTime::operator &lt;, etc.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Compare two <ph id="ph1">`COleDateTime`</ph> values.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>COleDateTime::operator +, COleDateTime::operator -</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Add and subtract <ph id="ph1">`COleDateTime`</ph> values.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>COleDateTime::operator +=, COleDateTime::operator -=</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Add and subtract a <ph id="ph1">`COleDateTime`</ph> value from this <ph id="ph2">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>COleDateTime::operator =</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Copies a <ph id="ph1">`COleDateTime`</ph> value.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>COleDateTime::operator DATE, COleDateTime::operator Date*</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Converts a <ph id="ph1">`COleDateTime`</ph> value into a <ph id="ph2">`DATE`</ph> or a <ph id="ph3">`DATE*`</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Public Data Members</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>COleDateTime::m_dt</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Contains the underlying <bpt id="p1">**</bpt>DATE<ept id="p1">**</ept> for this <ph id="ph1">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>COleDateTime::m_status</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Contains the status of this <ph id="ph1">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>does not have a base class.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>It is one of the possible types for the <bpt id="p1">[</bpt>VARIANT<ept id="p1">](http://msdn.microsoft.com/en-us/e305240e-9e11-4006-98cc-26f4932d2118)</ept> data type of OLE automation.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`COleDateTime`</ph> value represents an absolute date and time value.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DATE`</ph> type is implemented as a floating-point value.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Days are measured from December 30, 1899, at midnight.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The following table shows some dates and their associated values:</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Date</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>December 29, 1899, midnight</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>-1.0</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>December 29, 1899, 6 A.M</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>-1.25</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>December 30, 1899, midnight</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>0.0</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>December 31, 1899, midnight</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>1.0</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>January 1, 1900, 6 A.M.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>2.25</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Note in the table above that although day values become negative before midnight on December 30, 1899, time-of-day values do not.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For example, 6:00 AM is always represented by a fractional value 0.25 regardless of whether the integer representing the day is positive (after December 30, 1899) or negative (before December 30, 1899).</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This means that a simple floating point comparison would erroneously sort a <ph id="ph1">`COleDateTime`</ph> representing 6:00 AM on 12/29/1899 as <bpt id="p1">**</bpt>later<ept id="p1">**</ept> than one representing 7:00 AM on the same day.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`COleDateTime`</ph> class handles dates from January 1, 100, through December 31, 9999.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`COleDateTime`</ph> class uses the Gregorian calendar; it does not support Julian dates.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>ignores Daylight Saving Time.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>(See <bpt id="p1">[</bpt>Date and Time: Automation Support<ept id="p1">](../../atl-mfc-shared/date-and-time-automation-support.md)</ept>.)</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">`%y`</ph> format to retrieve a two-digit year only for dates starting at 1900.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If you use the <ph id="ph1">`%y`</ph> format on a date before 1900, the code generates an ASSERT failure.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This type is also used to represent date-only or time-only values.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>By convention, the date 0 (December 30, 1899) is used for time-only values and the time 00:00 (midnight) is used for date-only values.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>If you create a <ph id="ph1">`COleDateTime`</ph> object by using a date less than 100, the date is accepted, but subsequent calls to <ph id="ph2">`GetYear`</ph>, <ph id="ph3">`GetMonth`</ph>, <ph id="ph4">`GetDay`</ph>, <ph id="ph5">`GetHour`</ph>, <ph id="ph6">`GetMinute`</ph>, and <ph id="ph7">`GetSecond`</ph> fail and return -1.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Previously, you could use two-digit dates, but dates must be 100 or larger in MFC 4.2 and later.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>To avoid problems, specify a four-digit date.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>NVC_ATLMFC_Utilities#1</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Basic arithmetic operations for the <ph id="ph1">`COleDateTime`</ph> values use the companion class <bpt id="p1">[</bpt>COleDateTimeSpan<ept id="p1">](../../atl-mfc-shared/reference/coledatetimespan-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>values define a time interval.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The relationship between these classes is similar to the one between <bpt id="p1">[</bpt>CTime<ept id="p1">](../../atl-mfc-shared/reference/ctime-class.md)</ept> and <bpt id="p2">[</bpt>CTimeSpan<ept id="p2">](../../atl-mfc-shared/reference/ctimespan-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>For more information about the <ph id="ph1">`COleDateTime`</ph> and <ph id="ph2">`COleDateTimeSpan`</ph> classes, see the article <bpt id="p1">[</bpt>Date and Time: Automation Support<ept id="p1">](../../atl-mfc-shared/date-and-time-automation-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> ATLComTime.h</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>COleDateTime Relational Operators</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Comparison operators.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>COleDateTime<ept id="p1">**</ept> object to be compared.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>An ATLASSERT will occur if either of the two operands is invalid.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>NVC_ATLMFC_Utilities#13</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The operators <bpt id="p1">**</bpt><ph id="ph1">&gt;=</ph><ept id="p1">**</ept>, <bpt id="p2">**</bpt><ph id="ph2">\&lt;=</ph><ept id="p2">**</ept>, <bpt id="p3">**</bpt><ph id="ph3">&gt;</ph><ept id="p3">**</ept>, and <bpt id="p4">**</bpt><ph id="ph4">&lt;</ph><ept id="p4">**</ept>, will assert if the <ph id="ph5">`COleDateTime`</ph> object is set to null.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>NVC_ATLMFC_Utilities#170</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>COleDateTime::COleDateTime</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>An existing <ph id="ph1">`COleDateTime`</ph> object to be copied into the new <ph id="ph2">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>varSrc</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>An existing <bpt id="p1">**</bpt>VARIANT<ept id="p1">**</ept> data structure (possibly a <ph id="ph1">`COleVariant`</ph> object) to be converted to a date/time value ( <ph id="ph2">`VT_DATE`</ph>) and copied into the new <ph id="ph3">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>A date/time ( <bpt id="p1">**</bpt>DATE<ept id="p1">**</ept>) value to be copied into the new <ph id="ph1">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`time_t`</ph> or <bpt id="p1">**</bpt>__time64_t<ept id="p1">**</ept> value to be converted to a date/time value and copied into the new <ph id="ph2">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>systimeSrc</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`SYSTEMTIME`</ph> structure to be converted to a date/time value and copied into the new <ph id="ph2">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`FILETIME`</ph> structure to be converted to a date/time value and copied into the new <ph id="ph2">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Note that <ph id="ph1">`FILETIME`</ph> uses Universal Coordinated Time (UTC), so if you pass a local time in the structure, your results will be incorrect.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>File Times<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms724290)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> for more information.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>, <ph id="ph1">`nMonth`</ph>, <ph id="ph2">`nDay`</ph>, <ph id="ph3">`nHour`</ph>, <ph id="ph4">`nMin`</ph>,</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Indicate the date and time values to be copied into the new <ph id="ph1">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>,</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>MS-DOS date and time values to be converted to a date/time value and copied into the new <ph id="ph1">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">[</bpt>DBTimeStamp<ept id="p1">](https://msdn.microsoft.com/library/system.data.oledb.oledbtype)</ept> structure containing the current local time.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>All these constructors create new <ph id="ph1">`COleDateTime`</ph> objects initialized to the specified value.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The following table shows valid ranges for each date and time component:</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Date/time component</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Valid range</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>year</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>100 – 9999</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>month</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>0 – 12</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>day</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>0 – 31</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>hour</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>0 – 23</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>minute</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>0 – 59</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>second</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>0 – 59</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Note that the actual upper bound for the day component varies based on the month and year components.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>For details, see the <bpt id="p1">**</bpt>SetDate<ept id="p1">**</ept> or <ph id="ph1">`SetDateTime`</ph> member functions.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Following is a brief description of each constructor:</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>)<ept id="p1">**</ept> Constructs a <ph id="ph1">`COleDateTime`</ph> object initialized to 0 (midnight, 30 December 1899).</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>)<ept id="p1">**</ept> Constructs a <ph id="ph1">`COleDateTime`</ph> object from an existing <ph id="ph2">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>varSrc<ept id="p1">*</ept> <bpt id="p2">**</bpt>)<ept id="p2">**</ept> Constructs a <ph id="ph1">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Attempts to convert a <ph id="ph1">`VARIANT`</ph> structure or <bpt id="p1">[</bpt>COleVariant<ept id="p1">](../../mfc/reference/colevariant-class.md)</ept> object to a date/time ( <ph id="ph2">`VT_DATE`</ph>) value.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>If this conversion is successful, the converted value is copied into the new <ph id="ph1">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>If it is not, the value of the <ph id="ph1">`COleDateTime`</ph> object is set to 0 (midnight, 30 December 1899) and its status to invalid.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>)<ept id="p1">**</ept> Constructs a <ph id="ph1">`COleDateTime`</ph> object from a <bpt id="p2">**</bpt>DATE<ept id="p2">**</ept> value.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>)<ept id="p1">**</ept> Constructs a <ph id="ph1">`COleDateTime`</ph> object from a <ph id="ph2">`time_t`</ph> value.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>systimeSrc<ept id="p1">*</ept> <bpt id="p2">**</bpt>)<ept id="p2">**</ept> Constructs a <ph id="ph1">`COleDateTime`</ph> object from a <ph id="ph2">`SYSTEMTIME`</ph> value.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>)<ept id="p1">**</ept> Constructs a <ph id="ph1">`COleDateTime`</ph> object from a <ph id="ph2">`FILETIME`</ph> value.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Note that <ph id="ph1">`FILETIME`</ph> uses Universal Coordinated Time (UTC), so if you pass a local time in the structure, your results will be incorrect.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>File Times<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms724290)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> for more information.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>, <ph id="ph1">`nMonth`</ph>, <ph id="ph2">`nDay`</ph>, <ph id="ph3">`nHour`</ph>, <ph id="ph4">`nMin`</ph>, <ph id="ph5">`nSec`</ph> <bpt id="p1">**</bpt>)<ept id="p1">**</ept> Constructs a <ph id="ph6">`COleDateTime`</ph> object from the specified numerical values.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>, <ph id="ph1">`wDosTime`</ph> <bpt id="p1">**</bpt>)<ept id="p1">**</ept> Constructs a <ph id="ph2">`COleDateTime`</ph> object from the specified MS-DOS date and time values.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>For more information on the <ph id="ph1">`time_t`</ph> data type, see the <bpt id="p1">[</bpt>time<ept id="p1">](../../c-runtime-library/reference/time-time32-time64.md)</ept> function in the <bpt id="p2">*</bpt>Run-Time Library Reference<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>SYSTEMTIME<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms724950)</ept> and <bpt id="p2">[</bpt>FILETIME<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms724284)</ept> structures in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>For more information about the bounds for <ph id="ph1">`COleDateTime`</ph> values, see the article <bpt id="p1">[</bpt>Date and Time: Automation Support<ept id="p1">](../../atl-mfc-shared/date-and-time-automation-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The constructor using <bpt id="p1">**</bpt>DBTIMESTAMP<ept id="p1">**</ept> parameter is only available when OLEDB.h is included.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>NVC_ATLMFC_Utilities#2</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>COleDateTime::Format</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Creates a formatted representation of the date/time value.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Indicates one of the following locale flags:</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Use the system default locale settings, instead of custom user settings.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Ignore the date portion during parsing.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Ignore the time portion during parsing.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Indicates locale ID to use for the conversion.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>For more information about language identifiers, see <bpt id="p1">[</bpt>Language Identifiers<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd318691)</ept>.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>A formatting string similar to the <ph id="ph1">`printf`</ph> formatting string.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Each formatting code, preceded by a percent ( <ph id="ph1">`%`</ph>) sign, is replaced by the corresponding <ph id="ph2">`COleDateTime`</ph> component.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Other characters in the formatting string are copied unchanged to the returned string.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>See the run-time function <bpt id="p1">[</bpt>strftime<ept id="p1">](../../c-runtime-library/reference/strftime-wcsftime-strftime-l-wcsftime-l.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The value and meaning of the formatting codes for <ph id="ph1">`Format`</ph> are:</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Hours in the current day</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Minutes in the current hour</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Seconds in the current minute</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Percent sign</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The resource ID for the format-control string.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CString`</ph> that contains the formatted date/time value.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>If the status of this <ph id="ph1">`COleDateTime`</ph> object is null, the return value is an empty string.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>If the status is invalid, the return string is specified by the string resource <ph id="ph1">`ATL_IDS_DATETIME_INVALID`</ph>.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>A brief description of the three forms for this function follows:</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>( <ph id="ph1">`dwFlags`</ph>, <ph id="ph2">`lcid`</ph>)</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>This form formats the value by using the language specifications (locale IDs) for date and time.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Using the default parameters, this form will print the date and the time, unless the time portion is 0 (midnight), in which case it will print just the date, or the date portion is 0 (30 December 1899), in which case it will print just the time.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>If the date/time value is 0 (30 December 1899, midnight), this form with the default parameters will print midnight.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>( <ph id="ph1">`lpszFormat`</ph>)</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>This form formats the value by using the format string which contains special formatting codes that are preceded by a percent sign (%), as in <ph id="ph1">`printf`</ph>.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The formatting string is passed as a parameter to the function.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>For more information about the formatting codes, see <bpt id="p1">[</bpt>strftime, wcsftime<ept id="p1">](../../c-runtime-library/reference/strftime-wcsftime-strftime-l-wcsftime-l.md)</ept> in the Run-Time Library Reference.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>( <ph id="ph1">`nFormatID`</ph>)</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>This form formats the value by using the format string which contains special formatting codes that are preceded by a percent sign (%), as in <ph id="ph1">`printf`</ph>.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The formatting string is a resource.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>The ID of this string resource is passed as the parameter.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>For more information about the formatting codes, see <bpt id="p1">[</bpt>strftime, wcsftime<ept id="p1">](../../c-runtime-library/reference/strftime-wcsftime-strftime-l-wcsftime-l.md)</ept> in the <bpt id="p2">*</bpt>Run-Time Library Reference<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>NVC_ATLMFC_Utilities#3</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>COleDateTime::GetAsDBTIMESTAMP</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Call this method to obtain the time in the <ph id="ph1">`COleDateTime`</ph> object as a <bpt id="p1">**</bpt>DBTIMESTAMP<ept id="p1">**</ept> data structure.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">[</bpt>DBTimeStamp<ept id="p1">](https://msdn.microsoft.com/library/system.data.oledb.oledbtype)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Stores the resulting time in the referenced <ph id="ph1">`dbts`</ph> structure.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>DBTIMESTAMP<ept id="p1">**</ept> data structure initialized by this function will have its <bpt id="p2">**</bpt>fraction<ept id="p2">**</ept> member set to zero.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>NVC_ATLMFC_Utilities#4</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>COleDateTime::GetAsSystemTime</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Call this method to obtain the time in the <ph id="ph1">`COleDateTime`</ph> object as a <ph id="ph2">`SYSTEMTIME`</ph> data structure.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>sysTime</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">[</bpt>SYSTEMTIME<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms724950)</ept> structure to receive the converted date/time value from the <ph id="ph1">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">**</bpt>true<ept id="p1">**</ept> if successful; <bpt id="p2">**</bpt>false<ept id="p2">**</ept> if the conversion fails, or if the <ph id="ph1">`COleDateTime`</ph> object is <bpt id="p3">**</bpt>NULL<ept id="p3">**</ept> or invalid.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>stores the resulting time in the referenced <bpt id="p1">*</bpt>sysTime<ept id="p1">*</ept> object.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`SYSTEMTIME`</ph> data structure initialized by this function will have its <bpt id="p1">**</bpt>wMilliseconds<ept id="p1">**</ept> member set to zero.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetStatus<ept id="p1">](#coledatetime__getstatus)</ept> for more information on the status information held in a <ph id="ph1">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>COleDateTime::GetAsUDATE</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Call this method to obtain the time in the <ph id="ph1">`COleDateTime`</ph> object as a <bpt id="p1">**</bpt>UDATE<ept id="p1">**</ept> data structure.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">**</bpt>UDATE<ept id="p1">**</ept> structure to receive the converted date/time value from the <ph id="ph1">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">**</bpt>true<ept id="p1">**</ept> if successful; <bpt id="p2">**</bpt>false<ept id="p2">**</ept> if the conversion fails, or if the <ph id="ph1">`COleDateTime`</ph> object is <bpt id="p3">**</bpt>NULL<ept id="p3">**</ept> or invalid.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>UDATE<ept id="p1">**</ept> structure represents an "unpacked" date.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>COleDateTime::GetCurrentTime</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Call this static member function to return the current date/time value.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>NVC_ATLMFC_Utilities#5</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>COleDateTime::GetDay</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Gets the day of the month represented by this date/time value.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>The day of the month represented by the value of this <ph id="ph1">`COleDateTime`</ph> object or <ph id="ph2">`COleDateTime::error`</ph> if the day could not be obtained.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Valid return values range between 1 and 31.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>For information on other member functions that query the value of this <ph id="ph1">`COleDateTime`</ph> object, see the following member functions:</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>GetMonth</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>GetYear</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>GetHour</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>GetMinute</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>GetSecond</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>GetDayOfWeek</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>GetDayOfYear</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>NVC_ATLMFC_Utilities#6</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>COleDateTime::GetDayOfWeek</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Gets the day of the month represented by this date/time value.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>The day of the week represented by the value of this <ph id="ph1">`COleDateTime`</ph> object or <ph id="ph2">`COleDateTime::error`</ph> if the day of the week could not be obtained.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Valid return values range between 1 and 7, where 1=Sunday, 2=Monday, and so on.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>For information on other member functions that query the value of this <ph id="ph1">`COleDateTime`</ph> object, see the following member functions:</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>GetDay</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>GetMonth</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>GetYear</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>GetHour</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>GetMinute</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>GetSecond</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>GetDayOfYear</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>NVC_ATLMFC_Utilities#7</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>COleDateTime::GetDayOfYear</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Gets the day of the year represented by this date/time value.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>The day of the year represented by the value of this <ph id="ph1">`COleDateTime`</ph> object or <ph id="ph2">`COleDateTime::error`</ph> if the day of the year could not be obtained.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Valid return values range between 1 and 366, where January 1 = 1.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>For information on other member functions that query the value of this <ph id="ph1">`COleDateTime`</ph> object, see the following member functions:</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>GetDay</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>GetMonth</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>GetYear</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>GetHour</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>GetMinute</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>GetSecond</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>GetDayOfWeek</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>NVC_ATLMFC_Utilities#8</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>COleDateTime::GetHour</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Gets the hour represented by this date/time value.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>The hour represented by the value of this <ph id="ph1">`COleDateTime`</ph> object or <ph id="ph2">`COleDateTime::error`</ph> if the hour could not be obtained.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Valid return values range between 0 and 23.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>For information on other member functions that query the value of this <ph id="ph1">`COleDateTime`</ph> object, see the following member functions:</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>GetDay</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>GetMonth</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>GetYear</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>GetMinute</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>GetSecond</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>GetDayOfWeek</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>GetDayOfYear</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>NVC_ATLMFC_Utilities#9</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>COleDateTime::GetMinute</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Gets the minute represented by this date/time value.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The minute represented by the value of this <ph id="ph1">`COleDateTime`</ph> object or <ph id="ph2">`COleDateTime::error`</ph> if the minute could not be obtained.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Valid return values range between 0 and 59.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>For information on other member functions that query the value of this <ph id="ph1">`COleDateTime`</ph> object, see the following member functions:</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>GetDay</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>GetMonth</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>GetYear</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>GetHour</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>GetSecond</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>GetDayOfWeek</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>GetDayOfYear</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>GetHour<ept id="p1">](#coledatetime__gethour)</ept>.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>COleDateTime::GetMonth</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>Gets the month represented by this date/time value.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>The month represented by the value of this <ph id="ph1">`COleDateTime`</ph> object or <ph id="ph2">`COleDateTime::error`</ph> if the month could not be obtained.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Valid return values range between 1 and 12.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>For information on other member functions that query the value of this <ph id="ph1">`COleDateTime`</ph> object, see the following member functions:</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>GetDay</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>GetYear</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>GetHour</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>GetMinute</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>GetSecond</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>GetDayOfWeek</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>GetDayOfYear</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>GetDay<ept id="p1">](#coledatetime__getday)</ept>.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>COleDateTime::GetSecond</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>Gets the second represented by this date/time value.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>The second represented by the value of this <ph id="ph1">`COleDateTime`</ph> object or <ph id="ph2">`COleDateTime::error`</ph> if the second could not be obtained.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Valid return values range between 0 and 59.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`COleDateTime`</ph> class does not support leap seconds.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>For more information about the implementation for <ph id="ph1">`COleDateTime`</ph>, see the article <bpt id="p1">[</bpt>Date and Time: Automation Support<ept id="p1">](../../atl-mfc-shared/date-and-time-automation-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>For information on other member functions that query the value of this <ph id="ph1">`COleDateTime`</ph> object, see the following member functions:</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>GetDay</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>GetMonth</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>GetYear</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>GetHour</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>GetMinute</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>GetDayOfWeek</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>GetDayOfYear</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>GetHour<ept id="p1">](#coledatetime__gethour)</ept>.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>COleDateTime::GetStatus</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>Gets the status (validity) of a given <ph id="ph1">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>Returns the status of this <ph id="ph1">`COleDateTime`</ph> value.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>If you call <bpt id="p1">**</bpt>GetStatus<ept id="p1">**</ept> on a <ph id="ph1">`COleDateTime`</ph> object constructed with the default, it will return valid.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>If you call <bpt id="p1">**</bpt>GetStatus<ept id="p1">**</ept> on a <ph id="ph1">`COleDateTime`</ph> object initialized with the constructor set to null, <bpt id="p2">**</bpt>GetStatus<ept id="p2">**</ept> will return null.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">**</bpt>Remarks<ept id="p1">**</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>The return value is defined by the <bpt id="p1">**</bpt>DateTimeStatus<ept id="p1">**</ept> enumerated type, which is defined within the <ph id="ph1">`COleDateTime`</ph> class.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>For a brief description of these status values, see the following list:</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Indicates that an error occurred while attempting to obtain part of the date/time value.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>COleDateTime::valid<ept id="p1">**</ept> Indicates that this <ph id="ph1">`COleDateTime`</ph> object is valid.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>COleDateTime::invalid<ept id="p1">**</ept> Indicates that this <ph id="ph1">`COleDateTime`</ph> object is invalid; that is, its value may be incorrect.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>COleDateTime::null<ept id="p1">**</ept> Indicates that this <ph id="ph1">`COleDateTime`</ph> object is null, that is, that no value has been supplied for this object.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>(This is "null" in the database sense of "having no value," as opposed to the C++ <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.)</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>The status of a <ph id="ph1">`COleDateTime`</ph> object is invalid in the following cases:</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>If its value is set from a <bpt id="p1">**</bpt>VARIANT<ept id="p1">**</ept> or <ph id="ph1">`COleVariant`</ph> value that could not be converted to a date/time value.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>If its value is set from a <ph id="ph1">`time_t`</ph>, <ph id="ph2">`SYSTEMTIME`</ph>, or <ph id="ph3">`FILETIME`</ph> value that could not be converted to a valid date/time value.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>If its value is set by <ph id="ph1">`SetDateTime`</ph> with invalid parameter values.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>If this object has experienced an overflow or underflow during an arithmetic assignment operation, namely, <ph id="ph1">`+=`</ph> or <ph id="ph2">`-=`</ph>.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>If an invalid value was assigned to this object.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>If the status of this object was explicitly set to invalid using <ph id="ph1">`SetStatus`</ph>.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>For more information about the operations that may set the status to invalid, see the following member functions:</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>COleDateTime</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>SetDateTime</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>operator +, -</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>operator +=, -=</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>For more information about the bounds for <ph id="ph1">`COleDateTime`</ph> values, see the article <bpt id="p1">[</bpt>Date and Time: Automation Support<ept id="p1">](../../atl-mfc-shared/date-and-time-automation-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>NVC_ATLMFC_Utilities#10</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>COleDateTime::GetYear</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>Gets the year represented by this date/time value.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>The year represented by the value of this <ph id="ph1">`COleDateTime`</ph> object or <ph id="ph2">`COleDateTime::error`</ph> if the year could not be obtained.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>Valid return values range between 100 and 9999, which includes the century.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>For information on other member functions that query the value of this <ph id="ph1">`COleDateTime`</ph> object, see the following member functions:</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>GetDay</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>GetMonth</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>GetHour</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>GetMinute</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>GetSecond</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>GetDayOfWeek</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>GetDayOfYear</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>For more information about the bounds for <ph id="ph1">`COleDateTime`</ph> values, see the article <bpt id="p1">[</bpt>Date and Time: Automation Support<ept id="p1">](../../atl-mfc-shared/date-and-time-automation-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>GetDay<ept id="p1">](#coledatetime__getday)</ept>.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>COleDateTime::m_dt</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>The underlying <bpt id="p1">**</bpt>DATE<ept id="p1">**</ept> structure for this <ph id="ph1">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>Changing the value in the <bpt id="p1">**</bpt>DATE<ept id="p1">**</ept> object accessed by the pointer returned by this function will change the value of this <ph id="ph1">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>It does not change the status of this <ph id="ph1">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>For more information about the implementation of the <bpt id="p1">**</bpt>DATE<ept id="p1">**</ept> object, see the article <bpt id="p2">[</bpt>Date and Time: Automation Support<ept id="p2">](../../atl-mfc-shared/date-and-time-automation-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>COleDateTime::m_status</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>Contains the status of this <ph id="ph1">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>The type of this data member is the enumerated type <bpt id="p1">**</bpt>DateTimeStatus<ept id="p1">**</ept>, which is defined within the <ph id="ph1">`COleDateTime`</ph> class.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>COleDateTime::GetStatus<ept id="p1">](#coledatetime__getstatus)</ept> for details.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>This data member is for advanced programming situations.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>You should use the inline member functions <bpt id="p1">[</bpt>GetStatus<ept id="p1">](#coledatetime__getstatus)</ept> and <bpt id="p2">[</bpt>SetStatus<ept id="p2">](#coledatetime__setstatus)</ept>.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>See <ph id="ph1">`SetStatus`</ph> for further cautions regarding explicitly setting this data member.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>COleDateTime::operator =</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>Copies a <ph id="ph1">`COleDateTime`</ph> value.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>These overloaded assignment operators copy the source date/time value into this <ph id="ph1">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>A brief description of each these overloaded assignment operators follows:</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>operator =(<ept id="p1">**</ept> <ph id="ph1">`dateSrc`</ph> <bpt id="p2">**</bpt>)<ept id="p2">**</ept> The value and status of the operand are copied into this <ph id="ph2">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>operator =(<ept id="p1">**</ept> <bpt id="p2">*</bpt>varSrc<ept id="p2">*</ept> <bpt id="p3">**</bpt>)<ept id="p3">**</ept> If the conversion of the <bpt id="p4">[</bpt>VARIANT<ept id="p4">](http://msdn.microsoft.com/en-us/e305240e-9e11-4006-98cc-26f4932d2118)</ept> value (or <bpt id="p5">[</bpt>COleVariant<ept id="p5">](../../mfc/reference/colevariant-class.md)</ept> object) to a date/time ( <ph id="ph1">`VT_DATE`</ph>) is successful, the converted value is copied into this <ph id="ph2">`COleDateTime`</ph> object and its status is set to valid.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>If the conversion is not successful, the value of this object is set to zero (30 December 1899, midnight) and its status to invalid.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>operator =(<ept id="p1">**</ept> <ph id="ph1">`dtSrc`</ph> <bpt id="p2">**</bpt>)<ept id="p2">**</ept> The <bpt id="p3">**</bpt>DATE<ept id="p3">**</ept> value is copied into this <ph id="ph2">`COleDateTime`</ph> object and its status is set to valid.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>operator =(<ept id="p1">**</ept> <ph id="ph1">`timeSrc`</ph> <bpt id="p2">**</bpt>)<ept id="p2">**</ept> The <ph id="ph2">`time_t`</ph> or <bpt id="p3">**</bpt>__time64_t<ept id="p3">**</ept> value is converted and copied into this <ph id="ph3">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>If the conversion is successful, the status of this object is set to valid; if unsuccessful, it is set to invalid.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>operator =(<ept id="p1">**</ept> <bpt id="p2">*</bpt>systimeSrc<ept id="p2">*</ept> <bpt id="p3">**</bpt>)<ept id="p3">**</ept> The <bpt id="p4">[</bpt>SYSTEMTIME<ept id="p4">](http://msdn.microsoft.com/library/windows/desktop/ms724950)</ept> value is converted and copied into this <ph id="ph1">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>If the conversion is successful, the status of this object is set to valid; if unsuccessful, it is set to invalid.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>operator =(<ept id="p1">**</ept> <ph id="ph1">`udate`</ph> <bpt id="p2">**</bpt>)<ept id="p2">**</ept> The <bpt id="p3">**</bpt>UDATE<ept id="p3">**</ept> value is converted and copied into this <ph id="ph2">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>If the conversion is successful, the status of this object is set to valid; if unsuccessful, it is set to invalid.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>UDATE<ept id="p1">**</ept> structure represents an "unpacked" date.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>See the function <bpt id="p1">[</bpt>VarDateFromUdate<ept id="p1">](http://msdn.microsoft.com/en-us/1c924ac5-b896-49e1-9ccf-825ac7a030c8)</ept> for more details.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>operator =(<ept id="p1">**</ept> <ph id="ph1">`filetimeSrc`</ph> <bpt id="p2">**</bpt>)<ept id="p2">**</ept> The <bpt id="p3">[</bpt>FILETIME<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms724284)</ept> value is converted and copied into this <ph id="ph2">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>If the conversion is successful, the status of this object is set to valid; otherwise it is set to invalid.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>uses Universal Coordinated Time (UTC), so if you pass a UTC time in the structure, your results will be converted from UTC time to local time, and will be stored as variant time.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>This behavior is the same as in Visual C++ 6.0 and Visual C++.NET 2003 SP2.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>File Times<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms724290)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> for more information.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>VARIANT<ept id="p1">](http://msdn.microsoft.com/en-us/e305240e-9e11-4006-98cc-26f4932d2118)</ept> entry in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>For more information on the <ph id="ph1">`time_t`</ph> data type, see the <bpt id="p1">[</bpt>time<ept id="p1">](../../c-runtime-library/reference/time-time32-time64.md)</ept> function in the <bpt id="p2">*</bpt>Run-Time Library Reference<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>SYSTEMTIME<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms724950)</ept> and <bpt id="p2">[</bpt>FILETIME<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms724284)</ept> structures in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>For more information about the bounds for <ph id="ph1">`COleDateTime`</ph> values, see the article <bpt id="p1">[</bpt>Date and Time: Automation Support<ept id="p1">](../../atl-mfc-shared/date-and-time-automation-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>COleDateTime::operator +, -</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>Add and subtract <bpt id="p1">**</bpt>ColeDateTime<ept id="p1">**</ept> values.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>objects represent absolute times.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COleDateTimeSpan<ept id="p1">](../../atl-mfc-shared/reference/coledatetimespan-class.md)</ept> objects represent relative times.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>The first two operators allow you to add and subtract a <ph id="ph1">`COleDateTimeSpan`</ph> value from a <ph id="ph2">`COleDateTime`</ph> value.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>The third operator allows you to subtract one <ph id="ph1">`COleDateTime`</ph> value from another to yield a <ph id="ph2">`COleDateTimeSpan`</ph> value.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>If either of the operands is null, the status of the resulting <ph id="ph1">`COleDateTime`</ph> value is null.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>If the resulting <ph id="ph1">`COleDateTime`</ph> value falls outside the bounds of acceptable values, the status of that <ph id="ph2">`COleDateTime`</ph> value is invalid.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>If either of the operands is invalid and the other is not null, the status of the resulting <ph id="ph1">`COleDateTime`</ph> value is invalid.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt><ph id="ph1">+</ph><ept id="p1">**</ept> and <bpt id="p2">**</bpt><ph id="ph2">-</ph><ept id="p2">**</ept> operators will assert if the <ph id="ph3">`COleDateTime`</ph> object is set to null.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>COleDateTime Relational Operators<ept id="p1">](#coledatetime_relational_operators)</ept> for an example.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>For more information on the valid, invalid, and null status values, see the <bpt id="p1">[</bpt>m_status<ept id="p1">](#coledatetime__m_status)</ept> member variable.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>For more information about the bounds for <ph id="ph1">`COleDateTime`</ph> values, see the article <bpt id="p1">[</bpt>Date and Time: Automation Support<ept id="p1">](../../atl-mfc-shared/date-and-time-automation-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>NVC_ATLMFC_Utilities#12</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>COleDateTime::operator +=, -=</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>Add and subtract a <bpt id="p1">**</bpt>ColeDateTime<ept id="p1">**</ept> value from this <ph id="ph1">`COleDateTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>These operators allow you to add and subtract a <ph id="ph1">`COleDateTimeSpan`</ph> value to and from this <ph id="ph2">`COleDateTime`</ph>.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>If either of the operands is null, the status of the resulting <ph id="ph1">`COleDateTime`</ph> value is null.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>If the resulting <ph id="ph1">`COleDateTime`</ph> value falls outside the bounds of acceptable values, the status of this <ph id="ph2">`COleDateTime`</ph> value is set to invalid.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>If either of the operands is invalid and other is not null, the status of the resulting <ph id="ph1">`COleDateTime`</ph> value is invalid.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>For more information on the valid, invalid, and null status values, see the <bpt id="p1">[</bpt>m_status<ept id="p1">](#coledatetime__m_status)</ept> member variable.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt><ph id="ph1">+=</ph><ept id="p1">**</ept> and <bpt id="p2">**</bpt><ph id="ph2">-=</ph><ept id="p2">**</ept> operators will assert if the <ph id="ph3">`COleDateTime`</ph> object is set to null.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>COleDateTime Relational Operators<ept id="p1">](#coledatetime_relational_operators)</ept> for an example.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>For more information about the bounds for <ph id="ph1">`COleDateTime`</ph> values, see the article <bpt id="p1">[</bpt>Date and Time: Automation Support<ept id="p1">](../../atl-mfc-shared/date-and-time-automation-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>COleDateTime::operator DATE</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>Converts a <bpt id="p1">**</bpt>ColeDateTime<ept id="p1">**</ept> value into a <bpt id="p2">**</bpt>DATE<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>```operator DATE() const throw();</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>bool ParseDateTime(LPCTSTR lpszDate, DWORD dwFlags = 0, LCID lcid = LANG_USER_DEFAULT) throw();</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>int SetDate(int nYear, int nMonth, int nDay) throw();</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>int SetDateTime(int nYear, int nMonth, int nDay, int nHour, int nMin, int nSec) throw();</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>void SetStatus(DateTimeStatus status) throw();</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>int SetTime(int nHour, int nMin, int nSec) throw();</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>