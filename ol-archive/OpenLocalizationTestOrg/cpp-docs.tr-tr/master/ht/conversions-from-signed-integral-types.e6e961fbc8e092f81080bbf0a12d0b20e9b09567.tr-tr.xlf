<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="tr-tr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b65ed1f21f28978d05909258972549051a7ed9a3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-language\conversions-from-signed-integral-types.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">85984757d99afb6e0cc9b3e17ae81452f4c8a300</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e4daef5d7bcf23d138974aa969e23650e16b7896</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Conversions from Signed Integral Types | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Conversions from Signed Integral Types</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When a signed integer is converted to an unsigned integer with equal or greater size and the value of the signed integer is not negative, the value is unchanged.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The conversion is made by sign-extending the signed integer.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A signed integer is converted to a shorter signed integer by truncating the high-order bits.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The result is interpreted as an unsigned value, as shown in this example.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>No information is lost when a signed integer is converted to a floating value, except that some precision may be lost when a <bpt id="p1">**</bpt>long int<ept id="p1">**</ept> or <bpt id="p2">**</bpt>unsigned long int<ept id="p2">**</ept> value is converted to a <bpt id="p3">**</bpt>float<ept id="p3">**</ept> value.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following table summarizes conversions from signed integral types.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This table assumes that the <ph id="ph1">`char`</ph> type is signed by default.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If you use a compile-time option to change the default for the <ph id="ph1">`char`</ph> type to unsigned, the conversions given in the <bpt id="p1">[</bpt>Conversions from Unsigned Integral Types<ept id="p1">](../c-language/conversions-from-unsigned-integral-types.md)</ept> table for the <ph id="ph2">`unsigned char`</ph> type apply instead of the conversions in the following table, Conversions from Signed Integral Types.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Conversions from Signed Integral Types</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>From</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Method</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>short</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Sign-extend</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>long</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Sign-extend</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Preserve pattern; high-order bit loses function as sign bit</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>unsigned short</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Sign-extend to <bpt id="p1">**</bpt>short<ept id="p1">**</ept>; convert <bpt id="p2">**</bpt>short<ept id="p2">**</ept> to <bpt id="p3">**</bpt>unsigned short<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Sign-extend to <bpt id="p1">**</bpt>long<ept id="p1">**</ept>; convert <bpt id="p2">**</bpt>long<ept id="p2">**</ept> to</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>float</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Sign-extend to <bpt id="p1">**</bpt>long<ept id="p1">**</ept>; convert <bpt id="p2">**</bpt>long<ept id="p2">**</ept> to <bpt id="p3">**</bpt>float<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>double</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Sign-extend to <bpt id="p1">**</bpt>long<ept id="p1">**</ept>; convert <bpt id="p2">**</bpt>long<ept id="p2">**</ept> to <bpt id="p3">**</bpt>double<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Sign-extend to <bpt id="p1">**</bpt>long<ept id="p1">**</ept>; convert <bpt id="p2">**</bpt>long<ept id="p2">**</ept> to <bpt id="p3">**</bpt>double<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>short</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Preserve low-order byte</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>short</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>long</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Sign-extend</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>short</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Preserve low-order byte</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>short</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>unsigned short</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Preserve bit pattern; high-order bit loses function as sign bit</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>short</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Sign-extend to <bpt id="p1">**</bpt>long<ept id="p1">**</ept>; convert <bpt id="p2">**</bpt>long<ept id="p2">**</ept> to</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>short</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>float</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Sign-extend to <bpt id="p1">**</bpt>long<ept id="p1">**</ept>; convert <bpt id="p2">**</bpt>long<ept id="p2">**</ept> to <bpt id="p3">**</bpt>float<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>short</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>double</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Sign-extend to <bpt id="p1">**</bpt>long<ept id="p1">**</ept>; convert <bpt id="p2">**</bpt>long<ept id="p2">**</ept> to <bpt id="p3">**</bpt>double<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>short</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Sign-extend to <bpt id="p1">**</bpt>long<ept id="p1">**</ept>; convert <bpt id="p2">**</bpt>long<ept id="p2">**</ept> to <bpt id="p3">**</bpt>double<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>long</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Preserve low-order byte</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>long</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>short</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Preserve low-order word</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>long</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Preserve low-order byte</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>long</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>unsigned short</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Preserve low-order word</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>long</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Preserve bit pattern; high-order bit loses function as sign bit</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>long</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>float</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Represent as <bpt id="p1">**</bpt>float<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>long<ept id="p1">**</ept> cannot be represented exactly, some precision is lost.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>long</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>double</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Represent as <bpt id="p1">**</bpt>double<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>long<ept id="p1">**</ept> cannot be represented exactly as a <bpt id="p2">**</bpt>double<ept id="p2">**</ept>, some precision is lost.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>long</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Represent as <bpt id="p1">**</bpt>double<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>long<ept id="p1">**</ept> cannot be represented exactly as a <bpt id="p2">**</bpt>double<ept id="p2">**</ept>, some precision is lost.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>All <ph id="ph1">`char`</ph> entries assume that the <ph id="ph2">`char`</ph> type is signed by default.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Microsoft Specific</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>For the Microsoft 32-bit C compiler, an integer is equivalent to a <bpt id="p1">**</bpt>long<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Conversion of an <ph id="ph1">`int`</ph> value proceeds the same as for a <bpt id="p1">**</bpt>long<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>END Microsoft Specific</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Assignment Conversions</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>