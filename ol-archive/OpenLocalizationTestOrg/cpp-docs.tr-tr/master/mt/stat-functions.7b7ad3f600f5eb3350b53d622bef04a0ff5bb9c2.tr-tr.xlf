<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="tr-tr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">82c1d00fd244960f4de900f9da99cb0a22a1e968</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\reference\stat-functions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2c1b71000d26463edf7a821421337eacd47de44d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">055e53268add0701edcfadd34e889512e3127486</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>_stat, _stat32, _stat64, _stati64, _stat32i64, _stat64i32, _wstat, _wstat32, _wstat64, _wstati64, _wstat32i64, _wstat64i32 | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>_stat, _stat32, _stat64, _stati64, _stat32i64, _stat64i32, _wstat, _wstat32, _wstat64, _wstati64, _wstat32i64, _wstat64i32</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get status information on a file.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Pointer to a string containing the path of existing file or directory.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Pointer to structure that stores results.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Each of these functions returns 0 if the file-status information is obtained.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A return value of â€“1 indicates an error, in which case <ph id="ph1">`errno`</ph> is set to <ph id="ph2">`ENOENT`</ph>, indicating that the filename or path could not be found.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A return value of <ph id="ph1">`EINVAL`</ph> indicates an invalid parameter; <ph id="ph2">`errno`</ph> is also set to <ph id="ph3">`EINVAL`</ph> in this case.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>_doserrno, errno, _sys_errlist, and _sys_nerr<ept id="p1">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept> for more information on this, and other, return codes.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The date stamp on a file can be represented if it is later than midnight, January 1, 1970, and before 23:59:59, December 31, 3000, UTC, unless you use <ph id="ph1">`_stat32`</ph> or <ph id="ph2">`_wstat32`</ph>, or have defined <ph id="ph3">`_USE_32BIT_TIME_T`</ph>, in which case the date can be represented only until 23:59:59 January 18, 2038, UTC.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`_stat`</ph> function obtains information about the file or directory specified by <ph id="ph2">`path`</ph> and stores it in the structure pointed to by <ph id="ph3">`buffer`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>automatically handles multibyte-character string arguments as appropriate, recognizing multibyte-character sequences according to the multibyte code page currently in use.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>is a wide-character version of <ph id="ph1">`_stat`</ph>; the <ph id="ph2">`path`</ph> argument to <ph id="ph3">`_wstat`</ph> is a wide-character string.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>and <ph id="ph1">`_stat`</ph> behave identically except that <ph id="ph2">`_wstat`</ph> does not handle multibyte-character strings.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Variations of these functions support 32- or 64-bit time types, and 32- or 64-bit file lengths.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The first numerical suffix (<ph id="ph1">`32`</ph> or <ph id="ph2">`64`</ph>) indicates the size of the time type used; the second suffix is either <ph id="ph3">`i32`</ph> or <ph id="ph4">`i64`</ph>, indicating whether the file size is represented as a 32-bit or 64-bit integer.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>is equivalent to <ph id="ph1">`_stat64i32`</ph>, and <ph id="ph2">`struct``_stat`</ph> contains a 64-bit time.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This is true unless <ph id="ph1">`_USE_32BIT_TIME_T`</ph> is defined, in which case the old behavior is in effect; <ph id="ph2">`_stat`</ph> uses a 32-bit time, and <ph id="ph3">`struct``_stat`</ph> contains a 32-bit time.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The same is true for <ph id="ph1">`_stati64`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>does not work with <ph id="ph1">[!INCLUDE[wiprlhext](../../c-runtime-library/reference/includes/wiprlhext_md.md)]</ph> symbolic links.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In these cases, <ph id="ph1">`_wstat`</ph> will always report a file size of 0.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>does work correctly with symbolic links.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This function validates its parameters.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If either <ph id="ph1">`path`</ph> or <ph id="ph2">`buffer`</ph> is <ph id="ph3">`NULL`</ph>, the invalid parameter handler is invoked, as described in <bpt id="p1">[</bpt>Parameter Validation<ept id="p1">](../../c-runtime-library/parameter-validation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Time Type and File Length Type Variations of _stat</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Functions</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>_USE_32BIT_TIME_T defined?</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Time type</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>File length type</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>,</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Not defined</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>64-bit</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>32-bit</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>,</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Defined</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>32-bit</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>32-bit</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>,</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Not affected by the macro definition</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>32-bit</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>32-bit</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>,</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Not affected by the macro definition</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>64-bit</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>64-bit</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>,</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Not defined</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>64-bit</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>64-bit</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>,</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Defined</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>32-bit</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>64-bit</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>,</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Not affected by the macro definition</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>32-bit</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>64-bit</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>,</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Not affected by the macro definition</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>64-bit</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>32-bit</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Generic-Text Routine Mappings</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>TCHAR.H routine</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>_UNICODE &amp; _MBCS not defined</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>_MBCS defined</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>_UNICODE defined</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`_stat`</ph> structure, defined in SYS\STAT.H, includes the following fields.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Numeric identifier of group that owns the file (UNIX-specific) This field will always be zero on Windows systems.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A redirected file is classified as a Windows file.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Time of last access of file.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Valid on NTFS but not on FAT formatted disk drives.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Time of creation of file.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Valid on NTFS but not on FAT formatted disk drives.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Drive number of the disk containing the file (same as <ph id="ph1">`st_rdev`</ph>).</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Number of the information node (the <ph id="ph1">`inode`</ph>) for the file (UNIX-specific).</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>On UNIX file systems, the <ph id="ph1">`inode`</ph> describes the file date and time stamps, permissions, and content.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>When files are hard-linked to one another, they share the same <ph id="ph1">`inode`</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`inode`</ph>, and therefore <ph id="ph2">`st_ino`</ph>, has no meaning in the FAT, HPFS, or NTFS file systems.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Bit mask for file-mode information.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`_S_IFDIR`</ph> bit is set if <ph id="ph2">`path`</ph> specifies a directory; the <ph id="ph3">`_S_IFREG`</ph> bit is set if <ph id="ph4">`path`</ph> specifies an ordinary file or a device.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>User read/write bits are set according to the file's permission mode; user execute bits are set according to the filename extension.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Time of last modification of file.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Always 1 on non-NTFS file systems.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Drive number of the disk containing the file (same as <ph id="ph1">`st_dev`</ph>).</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Size of the file in bytes; a 64-bit integer for variations with the <ph id="ph1">`i64`</ph> suffix<bpt id="p1">**</bpt>.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Numeric identifier of user who owns file (UNIX-specific).</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This field will always be zero on Windows systems.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>A redirected file is classified as a Windows file.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`path`</ph> refers to a device, the <ph id="ph2">`st_size`</ph>, various time fields, <ph id="ph3">`st_dev`</ph>, and <ph id="ph4">`st_rdev`</ph> fields in the <ph id="ph5">`_stat`</ph> structure are meaningless.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Because STAT.H uses the <bpt id="p1">[</bpt>_dev_t<ept id="p1">](../../c-runtime-library/standard-types.md)</ept> type that is defined in TYPES.H, you must include TYPES.H before STAT.H in your code.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Routine</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Required header</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Optional headers</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>, <ph id="ph1">`_stat32`</ph>, <ph id="ph2">`_stat64`</ph>, <ph id="ph3">`_stati64`</ph>, <ph id="ph4">`_stat32i64`</ph>,</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>sys/types.h&gt; followed by <ph id="ph1">\&lt;</ph>sys/stat.h&gt;</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>errno.h&gt;</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>, <ph id="ph1">`_wstat32`</ph>, <ph id="ph2">`_wstat64`</ph>, <ph id="ph3">`_wstati64`</ph>, <ph id="ph4">`_wstat32i64`</ph>,</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>sys/types.h&gt; followed by <ph id="ph1">\&lt;</ph>sys/stat.h&gt; or <ph id="ph2">\&lt;</ph>wchar.h&gt;</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>errno.h&gt;</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>For additional compatibility information, see <bpt id="p1">[</bpt>Compatibility<ept id="p1">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>.NET Framework Equivalent</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>System::IO::File::GetAttributes</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>System::IO::File::GetCreationTime</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>System::IO::File::GetLastAccessTime</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>System::IO::File::GetLastWriteTime</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>File Handling</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>_access, _waccess</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>_fstat, _fstat32, _fstat64, _fstati64, _fstat32i64, _fstat64i32</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>_getmbcp</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>_setmbcp</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>