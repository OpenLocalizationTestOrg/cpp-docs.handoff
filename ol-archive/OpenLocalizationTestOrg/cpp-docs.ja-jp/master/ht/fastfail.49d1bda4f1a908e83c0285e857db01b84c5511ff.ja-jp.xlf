<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d67f962e8d8956de49192a69bf796a8219cc458c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\intrinsics\fastfail.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fa8e1d14844051a457e4d6376b2db7041b40100a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1ebb7075f303bab90510c85ffb3b5056d79ca734</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>__fastfail | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>__fastfail</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Microsoft Specific</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Immediately terminates the calling process with minimum overhead.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`FAST_FAIL_&lt;description&gt;`</ph> symbolic constant from winnt.h or wdm.h that indicates the reason for process termination.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`__fastfail`</ph> intrinsic does not return.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`__fastfail`</ph> intrinsic provides a mechanism for a <bpt id="p1">*</bpt>fast fail<ept id="p1">*</ept> request—a way for a potentially corrupted process to request immediate process termination.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Critical failures that may have corrupted program state and stack beyond recovery cannot be handled by the regular exception handling facility.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`__fastfail`</ph> to terminate the process using minimal overhead.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Internally, <ph id="ph1">`__fastfail`</ph> is implemented by using several architecture-specific mechanisms:</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Architecture</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Instruction</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Location of code argument</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>x86</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>int 0x29</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>ecx</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>int 0x29</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>rcx</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>ARM</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Opcode 0xDEFB</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>r0</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A fast fail request is self-contained and typically requires just two instructions to execute.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Once a fast fail request has been executed the kernel then takes the appropriate action.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In user-mode code, there are no memory dependencies beyond the instruction pointer itself when a fast fail event is raised.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This maximizes its reliability even if there is severe memory corruption.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`code`</ph> argument—one of the <ph id="ph2">`FAST_FAIL_&lt;description&gt;`</ph> symbolic constants from winnt.h or wdm.h—describes the type of failure condition and is incorporated into failure reports in an environment-specific manner.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>User-mode fast fail requests appear as a second chance non-continuable exception with exception code 0xC0000409 and with at least one exception parameter.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The first exception parameter is the <ph id="ph1">`code`</ph> value.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This exception code indicates to the Windows Error Reporting (WER) and debugging infrastructure that the process is corrupted and that minimal in-process actions should be taken in response to the failure.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Kernel-mode fast fail requests are implemented by using a dedicated bugcheck code, <ph id="ph1">`KERNEL_SECURITY_CHECK_FAILURE`</ph> (0x139).</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In both cases, no exception handlers are invoked because the program is expected to be in a corrupted state.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If a debugger is present, it is given an opportunity to examine the state of the program before termination.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Support for the native fast fail mechanism began in Windows 8.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Windows operating systems that do not support the fast fail instruction natively will typically treat a fast fail request as an access violation, or as an <ph id="ph1">`UNEXPECTED_KERNEL_MODE_TRAP`</ph> bugcheck.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>In these cases, the program is still terminated, but not necessarily as quickly.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>is only available as an intrinsic.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Intrinsic</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Architecture</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>x86, <ph id="ph1">[!INCLUDE[vcprx64](../assembler/inline/includes/vcprx64_md.md)]</ph>, ARM</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header file<ept id="p1">**</ept> <ph id="ph1">\&lt;</ph>intrin.h&gt;</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>END Microsoft Specific</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Compiler Intrinsics</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>