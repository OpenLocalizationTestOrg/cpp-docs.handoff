<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">71e2f3b6257cf38b1a2d800588c53fae7588ddca</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\linking-to-the-crt-in-your-atl-project.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bad96131319b772690e08ea20ac6fb8365270648</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f2d496642c4fe401054bb5e723dd06680e5a6a5f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Linking to the CRT in Your ATL Project | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Linking to the CRT in Your ATL Project</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>C Run-Time Libraries<ept id="p1">](../c-runtime-library/crt-library-features.md)</ept> (CRT) provide many useful functions that can make programming much easier during ATL development.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>All ATL projects link to the CRT library.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can see the advantages and disadvantages of linking method in <bpt id="p1">[</bpt>Benefits and Tradeoffs of the Method Used to Link to the CRT<ept id="p1">](../atl/benefits-and-tradeoffs-of-the-method-used-to-link-to-the-crt.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Effects of Linking to the CRT on Your Program Image</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If you statically link to the CRT, code from the CRT is placed in your executable image and you do not need to have the CRT DLL present on a system to run your image.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>If you dynamically link to the CRT, references to the code in the CRT DLL are placed in your image, but not the code itself.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In order for your image to run on a given system, the CRT DLL must be present on that system.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Even when you dynamically link to the CRT, you may find that some code can be statically linked (for example, <bpt id="p1">**</bpt>DllMainCRTStartup<ept id="p1">**</ept>).</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When you link your image, you either explicitly or implicitly specify an entry point that the operating system will call into after loading the image.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For a DLL, the default entry point is <bpt id="p1">**</bpt>DllMainCRTStartup<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For an EXE, it is <bpt id="p1">**</bpt>WinMainCRTStartup<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can override the default with the /ENTRY linker option.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The CRT provides an implementation for <bpt id="p1">**</bpt>DllMainCRTStartup<ept id="p1">**</ept>, <bpt id="p2">**</bpt>WinMainCRTStartup<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>wWinMainCRTStartup<ept id="p3">**</ept> (the Unicode entry point for an EXE).</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>These CRT-provided entry points call constructors on global objects and initialize other data structures that are used by some CRT functions.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This startup code adds about 25K to your image if it is linked statically.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If it is linked dynamically, most of the code is in the DLL, so your image size stays small.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more information, see the linker topic <bpt id="p1">[</bpt>/ENTRY (Entry-Point Symbol)<ept id="p1">](../build/reference/entry-entry-point-symbol.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Optimization Options</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Using the linker option /OPT:NOWIN98 can further reduce a default ATL control by 10K, at the expense of increased loading time on Windows 98 systems.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For more information on linking options, see <bpt id="p1">[</bpt>/OPT (Optimizations)<ept id="p1">](../build/reference/opt-optimizations.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Programming with ATL and C Run-Time Code</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Run-Time Library Behavior</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>