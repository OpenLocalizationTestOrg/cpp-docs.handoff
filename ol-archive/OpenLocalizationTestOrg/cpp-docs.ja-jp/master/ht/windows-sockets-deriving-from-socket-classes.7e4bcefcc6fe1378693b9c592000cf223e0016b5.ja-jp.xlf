<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e14e1aa88d8064d1f3f08e1c36668dec94b887a2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\windows-sockets-deriving-from-socket-classes.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d8bebd796050d0358437e6d2a206436999e1993d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">644b211f811a4b92ac2522f38aaf6cac8a8d26ae</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Windows Sockets: Deriving from Socket Classes | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Windows Sockets: Deriving from Socket Classes</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This article describes some of the functionality you can gain by deriving your own class from one of the socket classes.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can derive your own socket classes from either <bpt id="p1">[</bpt>CAsyncSocket<ept id="p1">](../mfc/reference/casyncsocket-class.md)</ept> or <bpt id="p2">[</bpt>CSocket<ept id="p2">](../mfc/reference/csocket-class.md)</ept> to add your own functionality.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In particular, these classes supply a number of virtual member functions that you can override.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>These functions include <bpt id="p1">[</bpt>OnReceive<ept id="p1">](../mfc/reference/casyncsocket-class.md#casyncsocket__onreceive)</ept>, <bpt id="p2">[</bpt>OnSend<ept id="p2">](../mfc/reference/casyncsocket-class.md#casyncsocket__onsend)</ept>, <bpt id="p3">[</bpt>OnAccept<ept id="p3">](../mfc/reference/casyncsocket-class.md#casyncsocket__onaccept)</ept>, <bpt id="p4">[</bpt>OnConnect<ept id="p4">](../mfc/reference/casyncsocket-class.md#casyncsocket__onconnect)</ept>, and <bpt id="p5">[</bpt>OnClose<ept id="p5">](../mfc/reference/casyncsocket-class.md#casyncsocket__onclose)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can override the functions in your derived socket class to take advantage of the notifications they provide when network events occur.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The framework calls these notification callback functions to notify you of important socket events, such as the receipt of data that you can begin reading.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For more information about notification functions, see <bpt id="p1">[</bpt>Windows Sockets: Socket Notifications<ept id="p1">](../mfc/windows-sockets-socket-notifications.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Additionally, class <ph id="ph1">`CSocket`</ph> supplies the <bpt id="p1">[</bpt>OnMessagePending<ept id="p1">](../mfc/reference/csocket-class.md#csocket__onmessagepending)</ept> member function (an advanced overridable).</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>MFC calls this function while the socket is pumping Windows-based messages.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can override <ph id="ph1">`OnMessagePending`</ph> to look for particular messages from Windows and respond to them.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The default version of <ph id="ph1">`OnMessagePending`</ph> supplied in class <ph id="ph2">`CSocket`</ph> examines the message queue for <ph id="ph3">`WM_PAINT`</ph> messages while waiting for a blocking call to complete.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>It dispatches paint messages to improve display quality.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Aside from doing something useful, this illustrates one way you might override the function yourself.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>As another example, consider using <ph id="ph1">`OnMessagePending`</ph> for the following task.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Suppose you display a modeless dialog box while waiting for a network transaction to complete.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The dialog box contains a Cancel button that the user can use to cancel blocking transactions that take too long.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Your <ph id="ph1">`OnMessagePending`</ph> override might pump messages related to this modeless dialog box.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In your <ph id="ph1">`OnMessagePending`</ph> override, return either <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> or the return from a call to the base-class version of <ph id="ph2">`OnMessagePending`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Call the base-class version if it performs work that you still want done.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For more information, see:</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Windows Sockets: Using Sockets with Archives</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Windows Sockets: Using Class CAsyncSocket</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Windows Sockets: Blocking</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Windows Sockets: Byte Ordering</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Windows Sockets: Converting Strings</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Windows Sockets in MFC</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>