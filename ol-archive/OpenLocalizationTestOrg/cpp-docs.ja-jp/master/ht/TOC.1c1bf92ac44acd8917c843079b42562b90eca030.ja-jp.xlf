<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8d48e078fc0459263ffe37a61dc3a2bedd91899e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\build\TOC.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f2500490d287a5f592360a2d13487339119b549b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">177886397831b01da386d7f0c2f404e61725544d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Building C-C++ Programs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Building C-C++ Isolated Applications and Side-by-side Assemblies</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Concepts of Isolated Applications and Side-by-side Assemblies</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Building C-C++ Isolated Applications</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Building C-C++ Side-by-side Assemblies</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>How to: Build Registration-Free COM Components</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>How to: Build Isolated Applications to Consume COM Components</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Understanding Manifest Generation for C-C++ Programs</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Manifest Generation in Visual Studio</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Manifest Generation at the Command Line</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>How to: Embed a Manifest Inside a C-C++ Application</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Troubleshooting C-C++ Isolated Applications and Side-by-side Assemblies</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Configuring Programs for 64-Bit (Visual C++)</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>How to: Configure Visual C++ Projects to Target 64-Bit Platforms</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>How to: Enable a 64-Bit Visual C++ Toolset on the Command Line</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Common Visual C++ 64-bit Migration Issues</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>x64 Software Conventions</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Overview of x64 Calling Conventions</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Types and Storage</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Scalar Types</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Aggregates and Unions</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Examples of Structure Alignment</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Bitfields</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Conflicts with the x86 Compiler</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Register Usage</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Calling Convention</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Parameter Passing</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Varargs</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Unprototyped Functions</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Return Values (C++)</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Caller-Callee Saved Registers</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Function Pointers</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Floating-Point Support for Older Code (Visual C++)</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>FpCsr</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>MxCsr</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>setjmp-longjump</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Stack Usage</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Stack Allocation</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Dynamic Parameter Stack Area Construction</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Function Types</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>malloc Alignment</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>alloca</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Prolog and Epilog</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Exception Handling (x64)</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Unwind Data for Exception Handling, Debugger Support</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>struct RUNTIME_FUNCTION</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>struct UNWIND_INFO</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>struct UNWIND_CODE</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Chained Unwind Info Structures</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Unwind Procedure</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Language Specific Handler</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Unwind Helpers for MASM</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Raw Pseudo Operations</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>MASM Macros</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Unwind Data Definitions in C</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Intrinsics and Inline Assembly</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Image Format</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Configuring Programs for ARM Processors (Visual C++)</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Common Visual C++ ARM Migration Issues</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Overview of ARM ABI Conventions</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>ARM Exception Handling</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>DLLs in Visual C++</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Walkthrough: Creating and Using a Dynamic Link Library (C++)</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Differences Between Applications and DLLs</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Advantages of Using DLLs</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Kinds of DLLs</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Non-MFC DLLs: Overview</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Regular DLLs Statically Linked to MFC</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Regular DLLs Dynamically Linked to MFC</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Extension DLLs: Overview</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>DLL Frequently Asked Questions</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Can a multithreaded application access an MFC DLL in different threads?</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Can an MFC DLL create multiple threads?</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Are there any MFC classes or functions that cannot be used in an MFC DLL?</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>What optimization techniques should I use to improve the client application's performance when loading?</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>There's a memory leak in my regular DLL, but my code looks fine.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>How can I find the memory leak?</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Linking an Executable to a DLL</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Determining Which Linking Method to Use</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Linking Implicitly</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Linking Explicitly</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Initializing a DLL</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Initializing Regular DLLs</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Initializing Extension DLLs</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Initializing Non-MFC DLLs</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Run-Time Library Behavior</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>LoadLibrary and AfxLoadLibrary</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>GetProcAddress</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>FreeLibrary and AfxFreeLibrary</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Search Path Used by Windows to Locate a DLL</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Module States of a Regular DLL Dynamically Linked to MFC</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Extension DLLs</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Using Database, OLE, and Sockets Extension DLLs in Regular DLLs</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Creating a Resource-Only DLL</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Localized Resources in MFC Applications: Satellite DLLs</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Importing and Exporting</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Importing into an Application</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Importing into an Application Using __declspec(dllimport)</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Importing Function Calls Using __declspec(dllimport)</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Importing Data Using __declspec(dllimport)</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Importing Using DEF Files</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Exporting from a DLL</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Exporting from a DLL Using DEF Files</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Exporting from a DLL Using __declspec(dllexport)</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Exporting and Importing Using AFX_EXT_CLASS</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Exporting C++ Functions for Use in C-Language Executables</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Exporting C Functions for Use in C or C++ Language Executables</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Determining Which Exporting Method to Use</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Exporting Functions from a DLL by Ordinal Rather Than by Name</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Mutual Imports</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Importing and Exporting Inline Functions</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Active Technology and DLLs</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Automation in a DLL</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Naming Conventions for MFC DLLs</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Calling DLL Functions from Visual Basic Applications</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Compiler Intrinsics and Assembly Language</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Building on the Command Line</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Walkthrough: Compiling a Native C++ Program on the Command Line</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Walkthrough: Compile a C program on the command line</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Walkthrough: Compiling a C++-CLI Program on the Command Line</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Walkthrough: Compiling a C++-CX Program on the Command Line</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Setting the Path and Environment Variables for Command-Line Builds</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>NMAKE Reference</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Running NMAKE</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>NMAKE Options</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Tools.ini and NMAKE</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Exit Codes from NMAKE</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Contents of a Makefile</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Wildcards and NMAKE</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Long Filenames in a Makefile</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Comments in a Makefile</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Special Characters in a Makefile</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Sample Makefile</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Description Blocks</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Targets</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Pseudotargets</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Multiple Targets</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Cumulative Dependencies</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Targets in Multiple Description Blocks</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Dependency Side Effects</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Dependents</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Inferred Dependents</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Search Paths for Dependents</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Commands in a Makefile</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Command Modifiers</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Filename-Parts Syntax</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Inline Files in a Makefile</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Specifying an Inline File</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Creating Inline File Text</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Reusing Inline Files</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Multiple Inline Files</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Macros and NMAKE</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Defining an NMAKE Macro</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Special Characters in Macros</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Null and Undefined Macros</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Where to Define Macros</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Precedence in Macro Definitions</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Using an NMAKE Macro</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Macro Substitution</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Special NMAKE Macros</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Filename Macros</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Recursion Macros</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Command Macros and Options Macros</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Environment-Variable Macros</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Inference Rules</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Defining a Rule</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Search Paths in Rules</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Batch-Mode Rules</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Predefined Rules</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Inferred Dependents and Rules</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Precedence in Inference Rules</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Dot Directives</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Makefile Preprocessing</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Makefile Preprocessing Directives</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Expressions in Makefile Preprocessing</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Makefile Preprocessing Operators</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Executing a Program in Preprocessing</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>MSBuild (Visual C++)</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>MSBuild (Visual C++) Overview</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Build System Changes</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Walkthrough: Using MSBuild to Create a Visual C++ Project</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>How to: Use Build Events in MSBuild Projects</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>How to: Add a Custom Build Step to MSBuild Projects</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>How to: Add Custom Build Tools to MSBuild Projects</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>How to: Integrate Custom Tools into the Project Properties</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>How to: Modify the Target Framework and Platform Toolset</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Configuring Programs for Windows XP</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>C/C++ Building Reference</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>