<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9333741b6304034c92b1b84ca76032803f987add</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\general-window-creation-sequence.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a805254379dcb06af05c6e8c6c1a57e07697920c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">030e89dc91ccf6253653a5dd7207e232a13c7955</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>General Window Creation Sequence | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>General Window Creation Sequence</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When you create a window of your own, such as a child window, the framework uses much the same process as that described in <bpt id="p1">[</bpt>Document/View Creation<ept id="p1">](../mfc/document-view-creation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>All the window classes provided by MFC employ <bpt id="p1">[</bpt>two-stage construction<ept id="p1">](../mfc/one-stage-and-two-stage-construction-of-objects.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>That is, during an invocation of the C++ <bpt id="p1">**</bpt>new<ept id="p1">**</ept> operator, the constructor allocates and initializes a C++ object but does not create a corresponding Windows window.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>That is done afterward by calling the <bpt id="p1">[</bpt>Create<ept id="p1">](../mfc/reference/cwnd-class.md#cwnd__create)</ept> member function of the window object.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> member function makes the Windows window and stores its <ph id="ph1">`HWND`</ph> in the C++ object's public data member <bpt id="p2">[</bpt>m_hWnd<ept id="p2">](../mfc/reference/cwnd-class.md#cwnd__m_hwnd)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Create<ept id="p1">**</ept> gives complete flexibility over the creation parameters.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Before calling <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>, you may want to register a window class with the global function <bpt id="p2">[</bpt>AfxRegisterWndClass<ept id="p2">](../mfc/reference/application-information-and-management.md#afxregisterwndclass)</ept> in order to set the icon and class styles for the frame.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For frame windows, you can use the <bpt id="p1">[</bpt>LoadFrame<ept id="p1">](../mfc/reference/cframewnd-class.md#cframewnd__loadframe)</ept> member function instead of <bpt id="p2">**</bpt>Create<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>makes the Windows window using fewer parameters.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>It gets many default values from resources, including the frame's caption, icon, accelerator table, and menu.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Your icon, accelerator table, and menu resources must have a common resource ID, such as <bpt id="p1">**</bpt>IDR_MAINFRAME<ept id="p1">**</ept>, for them to be loaded by LoadFrame.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>What do you want to know more about</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Window objects</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Registering window "classes"</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Destroying window objects</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Creating document frame windows</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Creating Windows</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>