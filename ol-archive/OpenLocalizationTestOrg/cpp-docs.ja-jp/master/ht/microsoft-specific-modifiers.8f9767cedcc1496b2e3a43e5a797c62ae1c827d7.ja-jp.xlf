<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">98c2484685c5c1f40a9b68878c82c5acabe910fb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\cpp\microsoft-specific-modifiers.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">35d646439ec22797d14d95c9943db6154cc9ae17</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fa44ec7d32748f22131c19850e5c78f36b70fdb2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Microsoft-Specific Modifiers | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Microsoft-Specific Modifiers</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This section describes Microsoft-specific extensions to C++ in the following areas:</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Based addressing<ept id="p1">](../cpp/based-addressing.md)</ept>, the practice of using a pointer as a base from which other pointers can be offset</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Function calling conventions</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Extended storage-class attributes declared with the <bpt id="p1">[</bpt>__declspec<ept id="p1">](../cpp/declspec.md)</ept> keyword</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>__w64<ept id="p1">](../cpp/w64.md)</ept> keyword</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Many of the Microsoft-specific keywords can be used to modify declarators to form derived types.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For more information about declarators, see <bpt id="p1">[</bpt>Declarators<ept id="p1">](http://msdn.microsoft.com/en-us/8a7b9b51-92bd-4ac0-b3fe-0c4abe771838)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Microsoft-Specific Keywords</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Keyword</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Meaning</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Used to Form Derived Types?</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>__based</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The name that follows declares a 32-bit offset to the 32-bit base contained in the declaration.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>__cdecl</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The name that follows uses the C naming and calling conventions.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>__declspec</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The name that follows specifies a Microsoft-specific storage-class attribute.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>No</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>__fastcall</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The name that follows declares a function that uses registers, when available, instead of the stack for argument passing.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>__restrict</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Similar to __declspec(<bpt id="p1">[</bpt>restrict<ept id="p1">](../cpp/restrict.md)</ept>), but for use on variables.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>No</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>__stdcall</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The name that follows specifies a function that observes the standard calling convention.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>__w64</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Marks a data type as being larger on a 64-bit compiler.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>No</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>__unaligned</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Specifies that a pointer to a type or other data is not aligned..</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>No</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>__vectorcall</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The name that follows declares a function that uses registers, including SSE registers, when available, instead of the stack for argument passing.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>C++ Language Reference</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>