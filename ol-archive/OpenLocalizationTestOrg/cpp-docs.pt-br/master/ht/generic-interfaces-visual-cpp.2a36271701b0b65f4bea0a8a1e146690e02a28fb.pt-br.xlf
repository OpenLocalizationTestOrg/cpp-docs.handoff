<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d5b4b05fbab9cd8261ba04d40d55afe10f5e7e44</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\windows\generic-interfaces-visual-cpp.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a93aad063a5bcc40da1b028819bb1bb934e295f1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2db1eee970bb164b2604abde6ea105d53dac52f4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Generic Interfaces (Visual C++) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Generic Interfaces (Visual C++)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The restrictions that apply to type parameters on classes are the same as those that apply to type parameters on interfaces (see <bpt id="p1">[</bpt>Generic Classes (C++/CLI)<ept id="p1">](../windows/generic-classes-cpp-cli.md)</ept>).</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The rules that control function overloading are the same for functions within generic classes or generic interfaces.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Explicit interface member implementations work with constructed interface types in the same way as with simple interface types (see the following examples).</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For more information on interfaces, see <bpt id="p1">[</bpt>interface class<ept id="p1">](../windows/interface-class-cpp-component-extensions.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>attributes<ept id="p1">*</ept> (optional)</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Additional declarative information.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information on attributes and attribute classes, see Attributes.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>class-key</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt>class<ept id="p1">**</ept> or <bpt id="p2">**</bpt>typename<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Comma-separated identifiers list.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Takes the form specified in <bpt id="p1">[</bpt>Constraints on Generic Type Parameters (C++/CLI)<ept id="p1">](../windows/constraints-on-generic-type-parameters-cpp-cli.md)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>accessibility-modifiers<ept id="p1">*</ept> (optional)</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Accessibility modifiers (e.g. <bpt id="p1">**</bpt>public, private<ept id="p1">**</ept>).</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>identifier</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The interface name.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>base-list<ept id="p1">*</ept> (optional)</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A list that contains one or more explicit base interfaces separated by commas.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>interface-body</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Declarations of the interface members.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>declarators<ept id="p1">*</ept> (optional)</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Declarations of variables based on this type.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to declare and instantiate a generic interface.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In the example, the generic interface <ph id="ph1">`IList&lt;ItemType&gt;`</ph> is declared.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>It is then implemented by two generic classes, <ph id="ph1">`List1&lt;ItemType&gt;`</ph> and <ph id="ph2">`List2&lt;ItemType&gt;`</ph>, with different implementations.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This example declares a generic interface, <ph id="ph1">`IMyGenIface`</ph>, and two non-generic interfaces, <ph id="ph2">`IMySpecializedInt`</ph> and <ph id="ph3">`ImySpecializedString`</ph>, that specialize <ph id="ph4">`IMyGenIface`</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The two specialized interfaces are then implemented by two classes, <ph id="ph1">`MyIntClass`</ph> and <ph id="ph2">`MyStringClass`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The example shows how to specialize generic interfaces, instantiate generic and non-generic interfaces, and call the explicitly implemented members on the interfaces.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Generics</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>