<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e8553168cbc6ae806f6259b8d8812352ebe995e8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\cmetafiledc-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">580b22888a940637796f4dbbc55f23c03ad0a9ee</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7cbb1e9c34fac3fc25f7dc66f7e3f5fcb1acece0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CMetaFileDC Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CMetaFileDC Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Implements a Windows metafile, which contains a sequence of graphics device interface (GDI) commands that you can replay to create a desired image or text.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>CMetaFileDC::CMetaFileDC</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CMetaFileDC`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>CMetaFileDC::Close</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Closes the device context and creates a metafile handle.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>CMetaFileDC::CloseEnhanced</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Closes an enhanced-metafile device context and creates an enhanced-metafile handle.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>CMetaFileDC::Create</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Creates the Windows metafile device context and attaches it to the <ph id="ph1">`CMetaFileDC`</ph> object.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>CMetaFileDC::CreateEnhanced</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Creates a metafile device context for an enhanced-format metafile.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To implement a Windows metafile, first create a <ph id="ph1">`CMetaFileDC`</ph> object.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Invoke the <ph id="ph1">`CMetaFileDC`</ph> constructor, then call the <bpt id="p1">[</bpt>Create<ept id="p1">](#cmetafiledc__create)</ept> member function, which creates a Windows metafile device context and attaches it to the <ph id="ph2">`CMetaFileDC`</ph> object.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Next send the <ph id="ph1">`CMetaFileDC`</ph> object the sequence of <ph id="ph2">`CDC`</ph> GDI commands that you intend for it to replay.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Only those GDI commands that create output, such as <ph id="ph1">`MoveTo`</ph> and <ph id="ph2">`LineTo`</ph>, can be used.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>After you have sent the desired commands to the metafile, call the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> member function, which closes the metafile device contexts and returns a metafile handle.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Then dispose of the <ph id="ph1">`CMetaFileDC`</ph> object.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CDC::PlayMetaFile<ept id="p1">](../../mfc/reference/cdc-class.md#cdc__playmetafile)</ept> can then use the metafile handle to play the metafile repeatedly.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The metafile can also be manipulated by Windows functions such as <bpt id="p1">[</bpt>CopyMetaFile<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd183480)</ept>, which copies a metafile to disk.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>When the metafile is no longer needed, delete it from memory with the <bpt id="p1">[</bpt>DeleteMetaFile<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd183537)</ept> Windows function.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You can also implement the <ph id="ph1">`CMetaFileDC`</ph> object so that it can handle both output calls and attribute GDI calls such as <ph id="ph2">`GetTextExtent`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Such a metafile is more flexible and can more easily reuse general GDI code, which often consists of a mix of output and attribute calls.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CMetaFileDC`</ph> class inherits two device contexts, <ph id="ph2">`m_hDC`</ph> and <ph id="ph3">`m_hAttribDC`</ph>, from <ph id="ph4">`CDC`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`m_hDC`</ph> device context handles all <bpt id="p1">[</bpt>CDC<ept id="p1">](../../mfc/reference/cdc-class.md)</ept> GDI output calls and the <ph id="ph2">`m_hAttribDC`</ph> device context handles all <ph id="ph3">`CDC`</ph> GDI attribute calls.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Normally, these two device contexts refer to the same device.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In the case of <ph id="ph1">`CMetaFileDC`</ph>, the attribute DC is set to <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> by default.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Create a second device context that points to the screen, a printer, or device other than a metafile, then call the <ph id="ph1">`SetAttribDC`</ph> member function to associate the new device context with <ph id="ph2">`m_hAttribDC`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>GDI calls for information will now be directed to the new <ph id="ph1">`m_hAttribDC`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Output GDI calls will go to <ph id="ph1">`m_hDC`</ph>, which represents the metafile.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For more information on <ph id="ph1">`CMetaFileDC`</ph>, see <bpt id="p1">[</bpt>Device Contexts<ept id="p1">](../../mfc/device-contexts.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>CObject</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>CDC</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxext.h</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>CMetaFileDC::Close</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Closes the metafile device context and creates a Windows metafile handle that can be used to play the metafile by using the <bpt id="p1">[</bpt>CDC::PlayMetaFile<ept id="p1">](../../mfc/reference/cdc-class.md#cdc__playmetafile)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A valid <bpt id="p1">**</bpt>HMETAFILE<ept id="p1">**</ept> if the function is successful; otherwise <bpt id="p2">**</bpt>NULL<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The Windows metafile handle can also be used to manipulate the metafile with Windows functions such as <bpt id="p1">[</bpt>CopyMetaFile<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd183480)</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Delete the metafile after use by calling the Windows <bpt id="p1">[</bpt>DeleteMetaFile<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd183537)</ept> function.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>CMetaFileDC::CloseEnhanced</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Closes an enhanced-metafile device context and returns a handle that identifies an enhanced-format metafile.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A handle of an enhanced metafile, if successful; otherwise <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>An application can use the enhanced-metafile handle returned by this function to perform the following tasks:</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Display a picture stored in an enhanced metafile</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Create copies of the enhanced metafile</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Enumerate, edit, or copy individual records in the enhanced metafile</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Retrieve an optional description of the metafile contents from the enhanced-metafile header</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Retrieve a copy of the enhanced-metafile header</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Retrieve a binary copy of the enhanced metafile</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Enumerate the colors in the optional palette</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Convert an enhanced-format metafile into a Windows-format metafile</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>When the application no longer needs the enhanced metafile handle, it should release the handle by calling the Win32 <bpt id="p1">**</bpt>DeleteEnhMetaFile<ept id="p1">**</ept> function.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>CMetaFileDC::CMetaFileDC</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Construct a <ph id="ph1">`CMetaFileDC`</ph> object in two steps.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>First, call <ph id="ph1">`CMetaFileDC`</ph>, then call <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>, which creates the Windows metafile device context and attaches it to the <ph id="ph2">`CMetaFileDC`</ph> object.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>CMetaFileDC::Create</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Construct a <ph id="ph1">`CMetaFileDC`</ph> object in two steps.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>lpszFilename</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Points to a null-terminated character string.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Specifies the filename of the metafile to create.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">*</bpt>lpszFilename<ept id="p1">*</ept> is <bpt id="p2">**</bpt>NULL<ept id="p2">**</ept>, a new in-memory metafile is created.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Nonzero if the function is successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>First, call the constructor <ph id="ph1">`CMetaFileDC`</ph>, then call <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>, which creates the Windows metafile device context and attaches it to the <ph id="ph2">`CMetaFileDC`</ph> object.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>CMetaFileDC::CreateEnhanced</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Creates a device context for an enhanced-format metafile.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Identifies a reference device for the enhanced metafile.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Points to a null-terminated character string.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Specifies the filename for the enhanced metafile to be created.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>If this parameter is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, the enhanced metafile is memory based and its contents lost when the object is destroyed or when the Win32 <bpt id="p2">**</bpt>DeleteEnhMetaFile<ept id="p2">**</ept> function is called.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Points to a <bpt id="p1">[</bpt>RECT<ept id="p1">](../../mfc/reference/rect-structure1.md)</ept> data structure or a <bpt id="p2">[</bpt>CRect<ept id="p2">](../../atl-mfc-shared/reference/crect-class.md)</ept> object that specifies the dimensions in <bpt id="p3">**</bpt>HIMETRIC<ept id="p3">**</ept> units (in .01-millimeter increments) of the picture to be stored in the enhanced metafile.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Points to a zero-terminated string that specifies the name of the application that created the picture, as well as the picture's title.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>A handle of the device context for the enhanced metafile, if successful; otherwise <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>This DC can be used to store a device-independent picture.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Windows uses the reference device identified by the <ph id="ph1">`pDCRef`</ph> parameter to record the resolution and units of the device on which a picture originally appeared.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`pDCRef`</ph> parameter is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, it uses the current display device for reference.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The left and top members of the <ph id="ph1">`RECT`</ph> data structure pointed to by the <ph id="ph2">`lpBounds`</ph> parameter must be smaller than the right and bottom members, respectively.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Points along the edges of the rectangle are included in the picture.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`lpBounds`</ph> is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, the graphics device interface (GDI) computes the dimensions of the smallest rectangle that can enclose the picture drawn by the application.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`lpBounds`</ph> parameter should be supplied where possible.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The string pointed to by the <ph id="ph1">`lpszDescription`</ph> parameter must contain a null character between the application name and the picture name and must terminate with two null characters —for example, "XYZ Graphics Editor\0Bald Eagle\0\0," where \0 represents the null character.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`lpszDescription`</ph> is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, there is no corresponding entry in the enhanced-metafile header.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Applications use the DC created by this function to store a graphics picture in an enhanced metafile.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The handle identifying this DC can be passed to any GDI function.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>After an application stores a picture in an enhanced metafile, it can display the picture on any output device by calling the <ph id="ph1">`CDC::PlayMetaFile`</ph> function.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>When displaying the picture, Windows uses the rectangle pointed to by the <ph id="ph1">`lpBounds`</ph> parameter and the resolution data from the reference device to position and scale the picture.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The device context returned by this function contains the same default attributes associated with any new DC.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Applications must use the Win32 <bpt id="p1">**</bpt>GetWinMetaFileBits<ept id="p1">**</ept> function to convert an enhanced metafile to the older Windows metafile format.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The filename for the enhanced metafile should use the .EMF extension.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>CDC Class</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Hierarchy Chart</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>