<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7529d1fe22a332fff2c504b5a147e1a67c9efde9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\ole-background.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b0fd341018c7925052f53a134331d6fe7238619</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f1c2556d9922e4a69c108cbd61aad0dd11b8d475</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>OLE Background | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>OLE Background</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>OLE is a mechanism that allows users to create and edit documents containing items or "objects" created by multiple applications.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>OLE was originally an acronym for Object Linking and Embedding.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>However, it is now referred to as OLE.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Parts of OLE not related to linking and embedding are now part of Active technology.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>OLE documents, historically called compound documents, seamlessly integrate various types of data, or components.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Sound clips, spreadsheets, and bitmaps are typical examples of components found in OLE documents.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Supporting OLE in your application allows your users to use OLE documents without worrying about switching between the different applications; OLE does the switching for you.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You use a container application to create compound documents and a server application or component application to create the items within the container document.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Any application you write can be a container, a server, or both.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>OLE incorporates many different concepts that all work toward the goal of seamless interaction between applications.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>These areas include the following:</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Linking and Embedding</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Linking and embedding are the two methods for storing items created inside an OLE document that were created in another application.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For general information on the differences between the two, see the article <bpt id="p1">[</bpt>OLE Background: Linking and Embedding<ept id="p1">](../mfc/ole-background-linking-and-embedding.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more detailed information, see the articles <bpt id="p1">[</bpt>Containers<ept id="p1">](../mfc/containers.md)</ept> and <bpt id="p2">[</bpt>Servers<ept id="p2">](../mfc/servers.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In-Place Activation (Visual Editing)</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Activating an embedded item in the context of the container document is called in-place activation or visual editing.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The container application's interface changes to incorporate the features of the component application that created the embedded item.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Linked items are never activated in place because the actual data for the item is contained in a separate file, out of the context of the application containing the link.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For more information on in-place activation, see the article <bpt id="p1">[</bpt>Activation<ept id="p1">](../mfc/activation-cpp.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Linking and embedding and in-place activation provide the main features of OLE visual editing.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Automation</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Automation allows one application to drive another application.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The driving application is known as an automation client, and the application being driven is known as an automation server or automation component.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more information on automation, see the articles <bpt id="p1">[</bpt>Automation Clients<ept id="p1">](../mfc/automation-clients.md)</ept> and <bpt id="p2">[</bpt>Automation Servers<ept id="p2">](../mfc/automation-servers.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Automation works in both OLE and Active technology contexts.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can automate any object based on COM.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Compound Files</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Compound files provide a standard file format that simplifies structured storing of compound documents for OLE applications.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Within a compound file, storages have many features of directories and streams have many features of files.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This technology is also called structured storage.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information on compound files, see the article <bpt id="p1">[</bpt>Containers: Compound Files<ept id="p1">](../mfc/containers-compound-files.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Uniform Data Transfer</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Uniform Data Transfer (UDT) is a set of interfaces that allow data to be sent and received in a standard fashion, regardless of the actual method chosen to transfer the data.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>UDT forms the basis for data transfers by drag and drop.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>UDT now serves as the basis for existing Windows data transfer, such as the Clipboard and dynamic data exchange (DDE).</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For more information on UDT, see the article <bpt id="p1">[</bpt>Data Objects and Data Sources (OLE)<ept id="p1">](../mfc/data-objects-and-data-sources-ole.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Drag and Drop</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Drag and drop is an easy-to-use, direct-manipulation technique to transfer data among applications, among windows within an application, or even within a single window in an application.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The data to be transferred is selected and dragged to the desired destination.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Drag and drop is based on uniform data transfer.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For more information on drag and drop, see the article <bpt id="p1">[</bpt>Drag and Drop<ept id="p1">](../mfc/drag-and-drop-ole.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Component Object Model</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The Component Object Model (COM) provides the infrastructure used when OLE objects communicate with each other.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The MFC OLE classes simplify COM for the programmer.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>COM is part of Active technology, because COM objects underlie both OLE and Active technology.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For more information about COM, see the <bpt id="p1">[</bpt>Active Template Library (ATL)<ept id="p1">](../atl/active-template-library-atl-concepts.md)</ept> topics.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Some of the more important OLE topics are covered in the following articles:</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>OLE Background: Linking and Embedding</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>OLE Background: Containers and Servers</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>OLE Background: Implementation Strategies</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>OLE Background: MFC Implementation</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For general OLE information not found in the above articles, search for OLE in MSDN.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>OLE</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>