<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eee26a7544836ce678edfa32f32973a512a550dd</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\dotnet\create-a-partially-trusted-application.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f5e970644f93e3aaeac26d824ff054ce4b21f4fc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3bec3e360842ae99fcfa96e846e900e076666620</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Create a Partially Trusted Application by Removing Dependency on the CRT Library DLL | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Create a Partially Trusted Application by Removing Dependency on the CRT Library DLL</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic discusses how to create a partially trusted Common Language Runtime application using <ph id="ph1">[!INCLUDE[vcprvc](../build/includes/vcprvc_md.md)]</ph> by removing dependency on msvcm90.dll.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A Visual C++ application built with <bpt id="p1">**</bpt>/clr<ept id="p1">**</ept> will have a dependency on msvcm90.dll, which is part of the C-Runtime Library.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When you want your application to be used in a partial trust environment, the CLR will enforce certain code access security rules on your DLL.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Therefore, it will be necessary to remove this dependency because msvcm90.dll contains native code and code access security policy cannot be enforced on it.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If your application does not use any functionality of the C-Runtime Library and you would like to remove the dependency on this library from your code, you will have to use the <bpt id="p1">**</bpt>/NODEFAULTLIB:msvcmrt.lib<ept id="p1">**</ept> linker option and link with either ptrustm.lib or ptrustmd.lib.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>These libraries contain object files for initialization and uninitialization of an application, exception classes used by the initialization code, and managed exception handling code.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Linking in one of these libraries will remove any dependency on msvcm90.dll.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The order of assembly uninitialization might differ for applications that use the ptrust libraries.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For normal applications, assemblies are usually unloaded in the reverse order that they are loaded, but this is not guaranteed.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For partial trust applications, assemblies are usually unloaded in the same order that they are loaded.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This, also, is not guaranteed.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To create a partially trusted mixed (/clr) application</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To remove the dependency on msvcm90.dll, you must specify to the linker not to include this library by using the <bpt id="p1">**</bpt>/NODEFAULTLIB:msvcmrt.lib<ept id="p1">**</ept> linker option.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For information on how to do this using the Visual Studio development environment or programmatically, see <bpt id="p1">[</bpt>/NODEFAULTLIB (Ignore Libraries)<ept id="p1">](../build/reference/nodefaultlib-ignore-libraries.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Add one of the ptrustm libraries to the linker input dependencies.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Use ptrustm.lib if you are building your application in release mode.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For debug mode, use ptrustmd.lib.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For information on how to do this using the Visual Studio development environment or programmatically, see <bpt id="p1">[</bpt>.Lib Files as Linker Input<ept id="p1">](../build/reference/dot-lib-files-as-linker-input.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Mixed (Native and Managed) Assemblies</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initialization of Mixed Assemblies</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Library Support for Mixed Assemblies</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>/link (Pass Options to Linker)</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>PAVE Security in Native and .NET Framework Code</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>