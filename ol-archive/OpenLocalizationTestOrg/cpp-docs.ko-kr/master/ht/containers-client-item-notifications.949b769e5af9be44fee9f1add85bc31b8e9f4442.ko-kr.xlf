<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5f2b7fa0f540ff9002e569bf3c561fda3328ebd9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\containers-client-item-notifications.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">10802678c74c3b577a38b84bb60e95d30e49a716</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b4f2826119e932e15584d722589641ad5fadc0f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Containers: Client-Item Notifications | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Containers: Client-Item Notifications</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This article discusses the overridable functions that the MFC framework calls when server applications modify items in your client application's document.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COleClientItem<ept id="p1">](../mfc/reference/coleclientitem-class.md)</ept> defines several overridable functions that are called in response to requests from the component application, which is also called the server application.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>These overridables usually act as notifications.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>They inform the container application of various events, such as scrolling, activation, or a change of position, and of changes that the user makes when editing or otherwise manipulating the item.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The framework notifies your container application of changes through a call to <ph id="ph1">`COleClientItem::OnChange`</ph>, an overridable function whose implementation is required.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This protected function receives two arguments.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The first specifies the reason the server changed the item:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Notification</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Meaning</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The OLE item's appearance has changed.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The OLE item has been saved.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The OLE item has been closed.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>OLE_RENAMED</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The server document containing the OLE item has been renamed.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The OLE item has changed from one state to another.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>OLE_CHANGED_ASPECT</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The OLE item's draw aspect has been changed by the framework.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>These values are from the <bpt id="p1">**</bpt>OLE_NOTIFICATION<ept id="p1">**</ept> enumeration, which is defined in AFXOLE.H.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The second argument to this function specifies how the item has changed or what state it has entered:</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When first argument is</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Second argument</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>or</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Is not used.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Specifies the aspect of the OLE item that has changed.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Describes the state being entered (<ph id="ph1">`emptyState`</ph>, <bpt id="p1">**</bpt>loadedState<ept id="p1">**</ept>, <ph id="ph2">`openState`</ph>, <ph id="ph3">`activeState`</ph>, or <ph id="ph4">`activeUIState`</ph>).</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information about the states a client item can assume, see <bpt id="p1">[</bpt>Containers: Client-Item States<ept id="p1">](../mfc/containers-client-item-states.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The framework calls <ph id="ph1">`COleClientItem::OnGetItemPosition`</ph> when an item is being activated for in-place editing.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Implementation is required for applications that support in-place editing.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The MFC Application Wizard provides a basic implementation, which assigns the item's coordinates to the <ph id="ph1">`CRect`</ph> object that is passed as an argument to <ph id="ph2">`OnGetItemPosition`</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If an OLE item's position or size changes during in-place editing, the container's information about the item's position and clipping rectangles must be updated and the server must receive information about the changes.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The framework calls <ph id="ph1">`COleClientItem::OnChangeItemPosition`</ph> for this purpose.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The MFC Application Wizard provides an override that calls the base class's function.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You should edit the function that the application wizard writes for your <ph id="ph1">`COleClientItem`</ph>-derived class so that the function updates any information retained by your client-item object.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Containers</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Containers: Client-Item States</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnChangeItemPosition</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>