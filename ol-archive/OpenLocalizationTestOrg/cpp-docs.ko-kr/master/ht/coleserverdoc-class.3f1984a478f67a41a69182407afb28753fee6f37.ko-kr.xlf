<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ac6e8726063283692bc209bab7511b8ffce993aa</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\coleserverdoc-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">be9fdba798b0eae33ad46db8f5b82a08e4c6cc5a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">894074dc5f782403c7e0893f190cd75facd3a0d1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>COleServerDoc Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>COleServerDoc Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The base class for OLE server documents.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>COleServerDoc::COleServerDoc</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`COleServerDoc`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>COleServerDoc::ActivateDocObject</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Activates the associated DocObject document.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>COleServerDoc::ActivateInPlace</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Activates the document for in-place editing.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>COleServerDoc::DeactivateAndUndo</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Deactivates the server's user interface.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>COleServerDoc::DiscardUndoState</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Discards undo-state information.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>COleServerDoc::GetClientSite</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the underlying <ph id="ph1">`IOleClientSite`</ph> interface.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>COleServerDoc::GetEmbeddedItem</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Returns a pointer to an item representing the entire document.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>COleServerDoc::GetItemClipRect</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Returns the current clipping rectangle for in-place editing.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>COleServerDoc::GetItemPosition</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Returns the current position rectangle, relative to the container application's client area, for in-place editing.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>COleServerDoc::GetZoomFactor</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Returns the zoom factor in pixels.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>COleServerDoc::IsDocObject</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Determines if the document is a DocObject.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>COleServerDoc::IsEmbedded</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Indicates whether the document is embedded in a container document or running stand-alone.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>COleServerDoc::IsInPlaceActive</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`TRUE`</ph> if the item is currently activated in place.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>COleServerDoc::NotifyChanged</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Notifies containers that the user has changed the document.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>COleServerDoc::NotifyClosed</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Notifies containers that the user has closed the document.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>COleServerDoc::NotifyRename</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Notifies containers that the user has renamed the document.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>COleServerDoc::NotifySaved</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Notifies containers that the user has saved the document.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>COleServerDoc::OnDeactivate</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Called by the framework when the user deactivates an item that was activated in place.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>COleServerDoc::OnDeactivateUI</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Called by the framework to destroy controls and other user-interface elements created for in-place activation.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>COleServerDoc::OnDocWindowActivate</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Called by the framework when the container's document frame window is activated or deactivated.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>COleServerDoc::OnResizeBorder</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Called by the framework when the container application's frame window or document window is resized.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>COleServerDoc::OnShowControlBars</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Called by the framework to show or hide control bars for in-place editing.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>COleServerDoc::OnUpdateDocument</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Called by the framework when a server document that is an embedded item is saved, updating the container's copy of the item.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>COleServerDoc::RequestPositionChange</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Changes the position of the in-place editing frame.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>COleServerDoc::SaveEmbedding</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Tells the container application to save the document.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>COleServerDoc::ScrollContainerBy</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Scrolls the container document.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>COleServerDoc::UpdateAllItems</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Notifies containers that the user has changed the document.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Protected Methods</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>COleServerDoc::CreateInPlaceFrame</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Called by the framework to create a frame window for in-place editing.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>COleServerDoc::DestroyInPlaceFrame</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Called by the framework to destroy a frame window for in-place editing.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>COleServerDoc::GetDocObjectServer</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Override this function to create a new <ph id="ph1">`CDocObjectServer`</ph> object and indicate that this document is a DocObject container.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>COleServerDoc::OnClose</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Called by the framework when a container requests to close the document.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>COleServerDoc::OnExecOleCmd</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Executes a specified command or displays help for the command.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>COleServerDoc::OnFrameWindowActivate</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Called by the framework when the container's frame window is activated or deactivated.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>COleServerDoc::OnGetEmbeddedItem</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Called to get a <ph id="ph1">`COleServerItem`</ph> that represents the entire document; used to get an embedded item.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Implementation required.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>COleServerDoc::OnReactivateAndUndo</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Called by the framework to undo changes made during in-place editing.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>COleServerDoc::OnSetHostNames</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Called by the framework when a container sets the window title for an embedded object.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>COleServerDoc::OnSetItemRects</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Called by the framework to position the in-place editing frame window within the container application's window.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>COleServerDoc::OnShowDocument</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Called by the framework to show or hide the document.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>A server document can contain <bpt id="p1">[</bpt>COleServerItem<ept id="p1">](../../mfc/reference/coleserveritem-class.md)</ept> objects, which represent the server interface to embedded or linked items.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>When a server application is launched by a container to edit an embedded item, the item is loaded as its own server document; the <ph id="ph1">`COleServerDoc`</ph> object contains just one <ph id="ph2">`COleServerItem`</ph> object, consisting of the entire document.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>When a server application is launched by a container to edit a linked item, an existing document is loaded from disk; a portion of the document's contents is highlighted to indicate the linked item.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>objects can also contain items of the <bpt id="p1">[</bpt>COleClientItem<ept id="p1">](../../mfc/reference/coleclientitem-class.md)</ept> class.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This allows you to create container-server applications.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The framework provides functions to properly store the <ph id="ph1">`COleClientItem`</ph> items while servicing the <ph id="ph2">`COleServerItem`</ph> objects.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If your server application does not support links, a server document will always contain only one server item, which represents the entire embedded object as a document.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>If your server application does support links, it must create a server item each time a selection is copied to the Clipboard.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>To use <ph id="ph1">`COleServerDoc`</ph>, derive a class from it and implement the <bpt id="p1">[</bpt>OnGetEmbeddedItem<ept id="p1">](#coleserverdoc__ongetembeddeditem)</ept> member function, which allows your server to support embedded items.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Derive a class from <ph id="ph1">`COleServerItem`</ph> to implement the items in your documents, and return objects of that class from <ph id="ph2">`OnGetEmbeddedItem`</ph>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>To support linked items, <ph id="ph1">`COleServerDoc`</ph> provides the <bpt id="p1">[</bpt>OnGetLinkedItem<ept id="p1">](../../mfc/reference/colelinkingdoc-class.md#colelinkingdoc__ongetlinkeditem)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>You can use the default implementation or override it if you have your own way of managing document items.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You need one <ph id="ph1">`COleServerDoc`</ph>-derived class for each type of server document your application supports.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>For example, if your server application supports worksheets and charts, you need two <ph id="ph1">`COleServerDoc`</ph>-derived classes.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>For more information on servers, see the article <bpt id="p1">[</bpt>Servers: Implementing a Server<ept id="p1">](../../mfc/servers-implementing-a-server.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>CObject</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>CCmdTarget</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>CDocument</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>COleDocument</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>COleLinkingDoc</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxole.h</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>COleServerDoc::ActivateDocObject</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Activates the associated DocObject document.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>By default, <ph id="ph1">`COleServerDoc`</ph> does not support Active documents (also referred to as DocObjects).</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>To enable this support, see <bpt id="p1">[</bpt>GetDocObjectServer<ept id="p1">](#coleserverdoc__getdocobjectserver)</ept> and class <bpt id="p2">[</bpt>CDocObjectServer<ept id="p2">](../../mfc/reference/cdocobjectserver-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>COleServerDoc::ActivateInPlace</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Activates the item for in-place editing.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0, which indicates that the item is fully open.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>This function performs all operations necessary for in-place activation.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>It creates an in-place frame window, activates it and sizes it to the item, sets up shared menus and other controls, scrolls the item into view, and sets the focus to the in-place frame window.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>This function is called by the default implementation of <bpt id="p1">[</bpt>COleServerItem::OnShow<ept id="p1">](../../mfc/reference/coleserveritem-class.md#coleserveritem__onshow)</ept>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Call this function if your application supports another verb for in-place activation (such as Play).</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>COleServerDoc::COleServerDoc</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`COleServerDoc`</ph> object without connecting with the OLE system DLLs.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>You must call <bpt id="p1">[</bpt>COleLinkingDoc::Register<ept id="p1">](../../mfc/reference/colelinkingdoc-class.md#colelinkingdoc__register)</ept> to open communications with OLE.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>If you are using <bpt id="p1">[</bpt>COleTemplateServer<ept id="p1">](../../mfc/reference/coletemplateserver-class.md)</ept> in your application, <ph id="ph1">`COleLinkingDoc::Register`</ph> is called for you by <ph id="ph2">`COleLinkingDoc`</ph>'s implementation of <ph id="ph3">`OnNewDocument`</ph>, <ph id="ph4">`OnOpenDocument`</ph>, and <ph id="ph5">`OnSaveDocument`</ph>.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>COleServerDoc::CreateInPlaceFrame</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The framework calls this function to create a frame window for in-place editing.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Pointer to the container application's parent window.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>A pointer to the in-place frame window, or <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> if unsuccessful.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The default implementation uses information specified in the document template to create the frame.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The view used is the first view created for the document.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>This view is temporarily detached from the original frame and attached to the newly created frame.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>This is an advanced overridable.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>COleServerDoc::DeactivateAndUndo</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Call this function if your application supports Undo and the user chooses Undo after activating an item but before editing it.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Nonzero on success; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>If the container application is written using the Microsoft Foundation Class Library, calling this function causes <bpt id="p1">[</bpt>COleClientItem::OnDeactivateAndUndo<ept id="p1">](../../mfc/reference/coleclientitem-class.md#coleclientitem__ondeactivateandundo)</ept> to be called, which deactivates the server's user interface.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>COleServerDoc::DestroyInPlaceFrame</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The framework calls this function to destroy an in-place frame window and return the server application's document window to its state before in-place activation.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Pointer to the in-place frame window to be destroyed.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>This is an advanced overridable.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>COleServerDoc::DiscardUndoState</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>If the user performs an editing operation that cannot be undone, call this function to force the container application to discard its undo-state information.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Nonzero on success; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>This function is provided so that servers that support Undo can free resources that would otherwise be consumed by undo-state information that cannot be used.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>COleServerDoc::GetClientSite</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the underlying <ph id="ph1">`IOleClientSite`</ph> interface.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the underlying <bpt id="p1">[</bpt>IOleClientSite<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms693706)</ept> interface.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>COleServerDoc::GetDocObjectServer</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Override this function to create a new <ph id="ph1">`CDocObjectServer`</ph> item and return a pointer to it.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Pointer to the <ph id="ph1">`IOleDocumentSite`</ph> interface that will connect this document to the server.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>A pointer to a <ph id="ph1">`CDocObjectServer`</ph>; <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> if the operation failed.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>When a DocObject server is activated, the return of a non- <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> pointer shows that the client can support DocObjects.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The default implementation returns <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>A typical implementation for a document that supports DocObjects will simply allocate a new <ph id="ph1">`CDocObjectServer`</ph> object and return it to the caller.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>NVC_MFCOleServer#3</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>COleServerDoc::GetEmbeddedItem</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Call this function to get a pointer to an item representing the entire document.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>A pointer to an item representing the entire document; <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> if the operation failed.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>It calls <bpt id="p1">[</bpt>COleServerDoc::OnGetEmbeddedItem<ept id="p1">](#coleserverdoc__ongetembeddeditem)</ept>, a virtual function with no default implementation.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>COleServerDoc::GetItemClipRect</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Call the <ph id="ph1">`GetItemClipRect`</ph> member function to get the clipping-rectangle coordinates of the item that is being edited in place.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Pointer to a <ph id="ph1">`RECT`</ph> structure or a <ph id="ph2">`CRect`</ph> object to receive the clipping-rectangle coordinates of the item.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Coordinates are in pixels relative to the container application window's client area.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Drawing should not occur outside the clipping rectangle.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Usually, drawing is automatically restricted.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Use this function to determine whether the user has scrolled outside the visible portion of the document; if so, scroll the container document as needed by means of a call to <bpt id="p1">[</bpt>ScrollContainerBy<ept id="p1">](#coleserverdoc__scrollcontainerby)</ept>.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>COleServerDoc::GetItemPosition</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Call the <ph id="ph1">`GetItemPosition`</ph> member function to get the coordinates of the item being edited in place.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Pointer to a <ph id="ph1">`RECT`</ph> structure or a <ph id="ph2">`CRect`</ph> object to receive the coordinates of the item.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Coordinates are in pixels relative to the container application window's client area.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The item's position can be compared with the current clipping rectangle to determine the extent to which the item is visible (or not visible) on the screen.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>COleServerDoc::GetZoomFactor</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`GetZoomFactor`</ph> member function determines the "zoom factor" of an item that has been activated for in-place editing.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>lpSizeNum</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Pointer to an object of class <ph id="ph1">`CSize`</ph> that will hold the zoom factor's numerator.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>lpSizeDenom</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Pointer to an object of class <ph id="ph1">`CSize`</ph> that will hold the zoom factor's denominator.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Pointer to an object of class <ph id="ph1">`CRect`</ph> that describes the item's new position.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>If this argument is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, the function uses the item's current position.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Nonzero if the item is activated for in-place editing and its zoom factor is other than 100% (1:1); otherwise 0.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The zoom factor, in pixels, is the proportion of the item's size to its current extent.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>If the container application has not set the item's extent, its natural extent (as determined by <bpt id="p1">[</bpt>COleServerItem::OnGetExtent<ept id="p1">](../../mfc/reference/coleserveritem-class.md#coleserveritem__ongetextent)</ept>) is used.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The function sets its first two arguments to the numerator and denominator of the item's "zoom factor."</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>If the item is not being edited in place, the function sets these arguments to a default value of 100% (or 1:1) and returns zero.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>For further information, see Technical Note 40, <bpt id="p1">[</bpt>MFC/OLE In-Place Resizing and Zooming<ept id="p1">](../../mfc/tn040-mfc-ole-in-place-resizing-and-zooming.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>COleServerDoc::IsDocObject</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Determines if the document is a DocObject.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> if the document is a DocObject; otherwise <bpt id="p2">**</bpt>FALSE<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>COleServerDoc::IsEmbedded</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Call the <ph id="ph1">`IsEmbedded`</ph> member function to determine whether the document represents an object embedded in a container.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Nonzero if the <ph id="ph1">`COleServerDoc`</ph> object is a document that represents an object embedded in a container; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>A document loaded from a file is not embedded although it may be manipulated by a container application as a link.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>A document that is embedded in a container document is considered to be embedded.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>COleServerDoc::IsInPlaceActive</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Call the <ph id="ph1">`IsInPlaceActive`</ph> member function to determine whether the item is currently in the in-place active state.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Nonzero if the <ph id="ph1">`COleServerDoc`</ph> object is active in place; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>COleServerDoc::NotifyChanged</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Call this function to notify all linked items connected to the document that the document has changed.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Typically, you call this function after the user changes some global attribute such as the dimensions of the server document.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>If an OLE item is linked to the document with an automatic link, the item is updated to reflect the changes.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>In container applications written with the Microsoft Foundation Class Library, the <bpt id="p1">[</bpt>OnChange<ept id="p1">](../../mfc/reference/coleclientitem-class.md#coleclientitem__onchange)</ept> member function of <ph id="ph1">`COleClientItem`</ph> is called.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>This function is included for compatibility with OLE 1.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>New applications should use <bpt id="p1">[</bpt>UpdateAllItems<ept id="p1">](#coleserverdoc__updateallitems)</ept>.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>COleServerDoc::NotifyClosed</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Call this function to notify the container(s) that the document has been closed.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>When the user chooses the Close command from the File menu, <ph id="ph1">`NotifyClosed`</ph> is called by <ph id="ph2">`COleServerDoc`</ph>'s implementation of the <bpt id="p1">[</bpt>OnCloseDocument<ept id="p1">](../../mfc/reference/cdocument-class.md#cdocument__onclosedocument)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>In container applications written with the Microsoft Foundation Class Library, the <bpt id="p1">[</bpt>OnChange<ept id="p1">](../../mfc/reference/coleclientitem-class.md#coleclientitem__onchange)</ept> member function of <ph id="ph1">`COleClientItem`</ph> is called.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>COleServerDoc::NotifyRename</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Call this function after the user renames the server document.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Pointer to a string specifying the new name of the server document; this is typically a fully qualified path.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>When the user chooses the Save As command from the File menu, <ph id="ph1">`NotifyRename`</ph> is called by <ph id="ph2">`COleServerDoc`</ph>'s implementation of the <bpt id="p1">[</bpt>OnSaveDocument<ept id="p1">](../../mfc/reference/cdocument-class.md#cdocument__onsavedocument)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>This function notifies the OLE system DLLs, which in turn notify the containers.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>In container applications written with the Microsoft Foundation Class Library, the <bpt id="p1">[</bpt>OnChange<ept id="p1">](../../mfc/reference/coleclientitem-class.md#coleclientitem__onchange)</ept> member function of <ph id="ph1">`COleClientItem`</ph> is called.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>COleServerDoc::NotifySaved</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Call this function after the user saves the server document.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>When the user chooses the Save command from the File menu, <ph id="ph1">`NotifySaved`</ph> is called for you by <ph id="ph2">`COleServerDoc`</ph>'s implementation of <bpt id="p1">[</bpt>OnSaveDocument<ept id="p1">](../../mfc/reference/cdocument-class.md#cdocument__onsavedocument)</ept>.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>This function notifies the OLE system DLLs, which in turn notify the containers.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>In container applications written with the Microsoft Foundation Class Library, the <bpt id="p1">[</bpt>OnChange<ept id="p1">](../../mfc/reference/coleclientitem-class.md#coleclientitem__onchange)</ept> member function of <ph id="ph1">`COleClientItem`</ph> is called.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>COleServerDoc::OnClose</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Called by the framework when a container requests that the server document be closed.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>A value from the enumeration <ph id="ph1">`OLECLOSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>This parameter can have one of the following values:</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The file is saved if it has been modified.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The file is closed without being saved.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>If the file has been modified, the user is prompted about saving it.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>The default implementation calls <ph id="ph1">`CDocument::OnCloseDocument`</ph>.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>For more information and additional values, see <bpt id="p1">[</bpt>OLECLOSE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms680623)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>COleServerDoc::OnDeactivate</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Called by the framework when the user deactivates an embedded or linked item that is currently in-place active.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>This function restores the container application's user interface to its original state and destroys any menus and other controls that were created for in-place activation.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The undo state information should be unconditionally released at this point.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>For more information, see the article <bpt id="p1">[</bpt>Activation<ept id="p1">](../../mfc/activation-cpp.md)</ept>..</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>COleServerDoc::OnDeactivateUI</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Called when the user deactivates an item that was activated in place.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Specifies whether the editing changes can be undone.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>This function restores the container application's user interface to its original state, hiding any menus and other controls that were created for in-place activation.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>The framework always sets <ph id="ph1">`bUndoable`</ph> to <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>If the server supports undo and there is an operation that can be undone, call the base-class implementation with <ph id="ph1">`bUndoable`</ph> set to <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>COleServerDoc::OnDocWindowActivate</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>The framework calls this function to activate or deactivate a document window for in-place editing.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Specifies whether the document window is to be activated or deactivated.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>The default implementation removes or adds the frame-level user interface elements as appropriate.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Override this function if you want to perform additional actions when the document containing your item is activated or deactivated.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>For more information, see the article <bpt id="p1">[</bpt>Activation<ept id="p1">](../../mfc/activation-cpp.md)</ept>..</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>COleServerDoc::OnExecOleCmd</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>The framework calls this function to execute a specified command or display help for the command.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>A pointer to a GUID that identifies a set of commands.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> to indicate the default command group.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>The command to execute.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>Must be in the group identified by <ph id="ph1">`pguidCmdGroup`</ph>.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>nCmdExecOut</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>The way the object should execute the command, one or more of the following values from the <bpt id="p1">**</bpt>OLECMDEXECOPT<ept id="p1">**</ept> enumeration:</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>OLECMDEXECOPT_DODEFAULT</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>OLECMDEXECOPT_PROMPTUSER</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>OLECMDEXECOPT_DONTPROMPTUSER</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>OLECMDEXECOPT_SHOWHELP</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">**</bpt>VARIANTARG<ept id="p1">**</ept> containing input arguments for the command.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">**</bpt>VARIANTARG<ept id="p1">**</ept> to receive the output return values from the command.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`S_OK`</ph> if successful; otherwise, one of the following error codes:</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>E_UNEXPECTED</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>Unexpected error occurred</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>E_FAIL</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Error occurred</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>E_NOTIMPL</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Indicates MFC itself should attempt to translate and dispatch the command</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>OLECMDERR_E_UNKNOWNGROUP</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>is non- <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> but does not specify a recognized command group</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>OLECMDERR_E_NOTSUPPORTED</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>is not recognized as a valid command in the group</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>OLECMDERR_DISABLED</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>The command identified by <ph id="ph1">`nCmdID`</ph> is disabled and cannot be executed</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>OLECMDERR_NOHELP</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>Caller asked for help on the command identified by <ph id="ph1">`nCmdID`</ph> but no help is available</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>OLECMDERR_CANCELED</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>User canceled the execution</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>can be used to enable, update, and set other properties of DocObject user interface commands.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>After the commands are initialized, you can execute them with <ph id="ph1">`OnExecOleCmd`</ph>.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>The framework calls the function before attempting to translate and dispatch an OLE document command.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>You don't need to override this function to handle standard OLE document commands, but you must supply an override to this function if you want to handle your own custom commands or handle commands that accept parameters or return results.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>Most of the commands do not take arguments or return values.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>For a majority of commands the caller can pass <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>s for <ph id="ph1">`pvarargIn`</ph> and <ph id="ph2">`pvarargOut`</ph>.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>For commands that expect input values, the caller can declare and initialize a <bpt id="p1">**</bpt>VARIANTARG<ept id="p1">**</ept> variable and pass a pointer to the variable in <ph id="ph1">`pvarargIn`</ph>.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>For commands that require a single value, the argument can be stored directly in the <bpt id="p1">**</bpt>VARIANTARG<ept id="p1">**</ept> and passed to the function.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Multiple arguments must be packaged within the <bpt id="p1">**</bpt>VARIANTARG<ept id="p1">**</ept> using one of the supported types (such as <ph id="ph1">`IDispatch`</ph> and <bpt id="p2">**</bpt>SAFEARRAY<ept id="p2">**</ept> ).</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>Similarly, if a command returns arguments the caller is expected to declare a <bpt id="p1">**</bpt>VARIANTARG<ept id="p1">**</ept>, initialize it to <ph id="ph1">`VT_EMPTY`</ph>, and pass its address in <ph id="ph2">`pvarargOut`</ph>.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>If a command returns a single value, the object can store that value directly in <ph id="ph1">`pvarargOut`</ph>.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Multiple output values must be packaged in some way appropriate for the <bpt id="p1">**</bpt>VARIANTARG<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>The base-class implementation of this function will walk the <bpt id="p1">**</bpt>OLE_COMMAND_MAP<ept id="p1">**</ept> structures associated with the command target and try to dispatch the command to an appropriate handler.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>The base-class implementation works only with commands that do not accept arguments or return values.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>If you need to handle commands that do accept arguments or return values, you must override this function and work with the <ph id="ph1">`pvarargIn`</ph> and <ph id="ph2">`pvarargOut`</ph> parameters yourself.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>COleServerDoc::OnFrameWindowActivate</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>The framework calls this function when the container application's frame window is activated or deactivated.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>Specifies whether the frame window is to be activated or deactivated.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>The default implementation cancels any help modes the frame window might be in.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>Override this function if you want to perform special processing when the frame window is activated or deactivated.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>For more information, see the article <bpt id="p1">[</bpt>Activation<ept id="p1">](../../mfc/activation-cpp.md)</ept>..</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>COleServerDoc::OnGetEmbeddedItem</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Called by the framework when a container application calls the server application to create or edit an embedded item.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>A pointer to an item representing the entire document; <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> if the operation failed.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>There is no default implementation.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>You must override this function to return an item that represents the entire document.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>This return value should be an object of a <ph id="ph1">`COleServerItem`</ph>-derived class.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>COleServerDoc::OnReactivateAndUndo</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>The framework calls this function when the user chooses to undo changes made to an item that has been activated in place, changed, and subsequently deactivated.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>The default implementation does nothing except return <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept> to indicate failure.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>Override this function if your application supports undo.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>Usually you would perform the undo operation, then activate the item by calling <ph id="ph1">`ActivateInPlace`</ph>.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>If the container application is written with the Microsoft Foundation Class Library, calling <ph id="ph1">`COleClientItem::ReactivateAndUndo`</ph> causes this function to be called.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>COleServerDoc::OnResizeBorder</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>The framework calls this function when the container application's frame windows change size.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Pointer to a <ph id="ph1">`RECT`</ph> structure or a <ph id="ph2">`CRect`</ph> object that specifies the coordinates of the border.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Pointer to an object of class <bpt id="p1">**</bpt>IOleInPlaceUIWindow<ept id="p1">**</ept> that owns the current in-place editing session.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>bFrame</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt>TRUE<ept id="p1">**</ept> if <ph id="ph1">`lpUIWindow`</ph> points to the container application's top-level frame window, or <bpt id="p2">**</bpt>FALSE<ept id="p2">**</ept> if <ph id="ph2">`lpUIWindow`</ph> points to the container application's document-level frame window.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>This function resizes and adjusts toolbars and other user-interface elements in accordance with the new window size.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IOleInPlaceUIWindow<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms680716)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>This is an advanced overridable.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>COleServerDoc::OnSetHostNames</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>Called by the framework when the container sets or changes the host names for this document.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Pointer to a string that specifies the name of the container application.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>Pointer to a string that specifies the container's name for the document.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>The default implementation changes the document title for all views referring to this document.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>Override this function if your application sets the titles through a different mechanism.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>COleServerDoc::OnSetItemRects</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>The framework calls this function to position the in-place editing frame window within the container application's frame window.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>Pointer to a <ph id="ph1">`RECT`</ph> structure or a <ph id="ph2">`CRect`</ph> object that specifies the in-place frame window's position relative to the container application's client area.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>Pointer to a <ph id="ph1">`RECT`</ph> structure or a <ph id="ph2">`CRect`</ph> object that specifies the in-place frame window's clipping rectangle relative to the container application's client area.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Override this function to update the view's zoom factor, if necessary.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>This function is usually called in response to a <ph id="ph1">`RequestPositionChange`</ph> call, although it can be called at any time by the container to request a position change for the in-place item.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>COleServerDoc::OnShowControlBars</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>The framework calls this function to show or hide the server application's control bars associated with the frame window identified by <ph id="ph1">`pFrameWnd`</ph>.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>Pointer to the frame window whose control bars should be hidden or shown.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>Determines whether control bars are shown or hidden.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>The default implementation enumerates all control bars owned by that frame window and hides or shows them.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>COleServerDoc::OnShowDocument</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>The framework calls the <ph id="ph1">`OnShowDocument`</ph> function when the server document must be hidden or shown.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>Specifies whether the user interface to the document is to be shown or hidden.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`bShow`</ph> is <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>, the default implementation activates the server application, if necessary, and causes the container application to scroll its window so that the item is visible.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`bShow`</ph> is <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>, the default implementation deactivates the item through a call to <ph id="ph2">`OnDeactivate`</ph>, then destroys or hides all frame windows that have been created for the document, except the first one.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>If no visible documents remain, the default implementation hides the server application.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>COleServerDoc::OnUpdateDocument</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>Called by the framework when saving a document that is an embedded item in a compound document.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>Nonzero if the document was successfully updated; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>The default implementation calls the <bpt id="p1">[</bpt>COleServerDoc::NotifySaved<ept id="p1">](#coleserverdoc__notifysaved)</ept> and <bpt id="p2">[</bpt>COleServerDoc::SaveEmbedding<ept id="p2">](#coleserverdoc__saveembedding)</ept> member functions and then marks the document as clean.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>Override this function if you want to perform special processing when updating an embedded item.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>COleServerDoc::RequestPositionChange</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>Call this member function to have the container application change the item's position.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>Pointer to a <ph id="ph1">`RECT`</ph> structure or a <ph id="ph2">`CRect`</ph> object containing the item's new position.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>This function is usually called (in conjunction with <ph id="ph1">`UpdateAllItems`</ph>) when the data in an in-place active item has changed.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>Following this call, the container might or might not perform the change by calling <ph id="ph1">`OnSetItemRects`</ph>.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>The resulting position might be different from the one requested.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>COleServerDoc::SaveEmbedding</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>Call this function to tell the container application to save the embedded object.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>This function is called automatically from <ph id="ph1">`OnUpdateDocument`</ph>.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>Note that this function causes the item to be updated on disk, so it is usually called only as a result of a specific user action.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>COleServerDoc::ScrollContainerBy</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>Call the <ph id="ph1">`ScrollContainerBy`</ph> member function to scroll the container document by the amount, in pixels, indicated by <ph id="ph2">`sizeScroll`</ph>.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>Indicates how far the container document is to scroll.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>Positive values indicate scrolling down and to the right; negative values indicate scrolling up and to the left.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>COleServerDoc::UpdateAllItems</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>Call this function to notify all linked items connected to the document that the document has changed.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>Pointer to the item that modified the document, or <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> if all items are to be updated.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>Contains information about the modification.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>Pointer to an object storing information about the modification.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>Determines how the item is to be drawn.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>This is a value from the <ph id="ph1">`DVASPECT`</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>This parameter can have one of the following values:</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>Item is represented in such a way that it can be displayed as an embedded object inside its container.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>Item is rendered in a "thumbnail" representation so that it can be displayed in a browsing tool.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>Item is represented by an icon.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>Item is represented as if it were printed using the Print command from the File menu.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>You typically call this function after the user changes the server document.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>If an OLE item is linked to the document with an automatic link, the item is updated to reflect the changes.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>In container applications written with the Microsoft Foundation Class Library, the <bpt id="p1">[</bpt>OnChange<ept id="p1">](../../mfc/reference/coleclientitem-class.md#coleclientitem__onchange)</ept> member function of <ph id="ph1">`COleClientItem`</ph> is called.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>This function calls the <ph id="ph1">`OnUpdate`</ph> member function for each of the document's items except the sending item, passing <ph id="ph2">`pHint`</ph>, <ph id="ph3">`lHint`</ph>, and <ph id="ph4">`nDrawAspect`</ph>.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>Use these parameters to pass information to the items about the modifications made to the document.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>You can encode information using <ph id="ph1">`lHint`</ph> or you can define a <ph id="ph2">`CObject`</ph>-derived class to store information about the modifications and pass an object of that class using <ph id="ph3">`pHint`</ph>.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>Override the <ph id="ph1">`OnUpdate`</ph> member function in your <ph id="ph2">`COleServerItem`</ph>-derived class to optimize the updating of each item depending on whether its presentation has changed.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>MFC Sample HIERSVR</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>COleLinkingDoc Class</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>Hierarchy Chart</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>COleDocument Class</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>COleLinkingDoc Class</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>COleTemplateServer Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>