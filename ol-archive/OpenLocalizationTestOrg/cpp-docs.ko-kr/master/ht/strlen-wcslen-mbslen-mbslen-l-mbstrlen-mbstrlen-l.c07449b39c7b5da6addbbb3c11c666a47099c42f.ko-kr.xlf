<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cd9810983e0e9ab7eb69dcf53e9da4b898d12d12</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\reference\strlen-wcslen-mbslen-mbslen-l-mbstrlen-mbstrlen-l.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a39f1d230df760410502bbd17b342eb204da6feb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2a0ee5f1fae0cc9488c378887227fe182d8e5292</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>strlen, wcslen, _mbslen, _mbslen_l, _mbstrlen, _mbstrlen_l | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>strlen, wcslen, _mbslen, _mbslen_l, _mbstrlen, _mbstrlen_l</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Gets the length of a string, by using the current locale or a specified locale.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>More secure versions of these functions are available; see <bpt id="p1">[</bpt>strnlen, strnlen_s, wcsnlen, wcsnlen_s, _mbsnlen, _mbsnlen_l, _mbstrnlen, _mbstrnlen_l<ept id="p1">](../../c-runtime-library/reference/strnlen-strnlen-s.md)</ept></source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>, <ph id="ph1">`_mbslen_l`</ph>, <ph id="ph2">`_mbstrlen`</ph>, and <ph id="ph3">`_mbstrlen_l`</ph> cannot be used in applications that execute in the Windows Runtime.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>CRT functions not supported with /ZW<ept id="p1">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Null-terminated string.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Locale to use.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Each of these functions returns the number of characters in <ph id="ph1">`str`</ph>, excluding the terminal <ph id="ph2">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>No return value is reserved to indicate an error, except for <ph id="ph1">`_mbstrlen`</ph> and <ph id="ph2">`_mbstrlen_l`</ph>, which return <ph id="ph3">`((size_t)(-1))`</ph> if the string contains an invalid multibyte character.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>interprets the string as a single-byte character string, so its return value is always equal to the number of bytes, even if the string contains multibyte characters.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>is a wide-character version of <ph id="ph1">`strlen`</ph>; the argument of <ph id="ph2">`wcslen`</ph> is a wide-character string and the count of characters is in wide (two-byte) characters.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>and <ph id="ph1">`strlen`</ph> behave identically otherwise.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Security Note<ept id="p1">**</ept> These functions incur a potential threat brought about by a buffer overrun problem.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Buffer overrun problems are a frequent method of system attack, resulting in an unwarranted elevation of privilege.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Avoiding Buffer Overruns<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms717795)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Generic-Text Routine Mappings</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>TCHAR.H routine</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>_UNICODE &amp; _MBCS not defined</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>_MBCS defined</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>_UNICODE defined</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>and <ph id="ph1">`_mbslen_l`</ph> return the number of multibyte characters in a multibyte-character string but they do not test for multibyte-character validity.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>and <ph id="ph1">`_mbstrlen_l`</ph> test for multibyte-character validity and recognize multibyte-character sequences.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If the string passed to <ph id="ph1">`_mbstrlen`</ph> or <ph id="ph2">`_mbstrlen_l`</ph> contains an invalid multibyte character for the code page, the function returns -1 and sets <ph id="ph3">`errno`</ph> to <ph id="ph4">`EILSEQ`</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The output value is affected by the setting of the <ph id="ph1">`LC_CTYPE`</ph> category setting of the locale; see <bpt id="p1">[</bpt>setlocale<ept id="p1">](../../c-runtime-library/reference/setlocale-wsetlocale.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The versions of these functions without the <ph id="ph1">`_l`</ph> suffix use the current locale for this locale-dependent behavior; the versions with the <ph id="ph2">`_l`</ph> suffix are identical except that they use the locale parameter passed in instead.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Locale<ept id="p1">](../../c-runtime-library/locale.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Routine</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Required header</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>string.h&gt;</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>string.h&gt; or <ph id="ph1">\&lt;</ph>wchar.h&gt;</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>,</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>mbstring.h&gt;</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>,</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>stdlib.h&gt;</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For additional compatibility information, see <bpt id="p1">[</bpt>Compatibility<ept id="p1">](../../c-runtime-library/compatibility.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>.NET Framework Equivalent</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>System::String::Length</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>String Manipulation</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Interpretation of Multibyte-Character Sequences</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Locale</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>setlocale, _wsetlocale</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>strcat, wcscat, _mbscat</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>strcmp, wcscmp, _mbscmp</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>strcoll Functions</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>strcpy, wcscpy, _mbscpy</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>strrchr, wcsrchr, _mbsrchr, _mbsrchr_l</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>_strset, _strset_l, _wcsset, _wcsset_l, _mbsset, _mbsset_l</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>strspn, wcsspn, _mbsspn, _mbsspn_l</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>