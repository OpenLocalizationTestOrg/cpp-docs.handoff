<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae94c1d967101a7740de5c030e4e5bbd1ce864ac</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\error-messages\compiler-warnings\compiler-warning-level-2-c4275.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4d0f23fa3440f300eca4751711bb4d0d7c8f1130</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">77062a51b67214469e85a30477e06350c291fb0b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 2) C4275 | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 2) C4275</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>non â€“ DLL-interface classkey 'identifier' used as base for DLL-interface classkey 'identifier'</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>An exported class was derived from a class that was not exported.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To minimize the possibility of data corruption when exporting a class with <bpt id="p1">[</bpt>__declspec(dllexport)<ept id="p1">](../../cpp/dllexport-dllimport.md)</ept>, ensure that:</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>All your static data is accessed through functions that are exported from the DLL.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>No inlined methods of your class can modify static data.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>No inlined methods of your class use CRT functions or other library functions use static data.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>No inlined class functions use CRT functions, or other library functions, where, for example, you access static data.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>No methods of your class (regardless of inlining) can use types where the instantiation in the EXE and DLL have static data differences.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can avoid exporting classes by defining a DLL that defines a class with virtual functions, and functions you can call to instantiate and delete objects of the type.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can then just call virtual functions on the type.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For more information on exporting templates, see <bpt id="p1">[</bpt>http://support.microsoft.com/default.aspx?scid=KB;EN-US;168958<ept id="p1">](http://support.microsoft.com/default.aspx?scid=KB;EN-US;168958)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>C4275 can be ignored in Visual C++ if you are deriving from a type in the Standard C++ Library, compiling a debug release (<bpt id="p1">**</bpt>/MTd<ept id="p1">**</ept>) and where the compiler error message refers to _Container_base.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>