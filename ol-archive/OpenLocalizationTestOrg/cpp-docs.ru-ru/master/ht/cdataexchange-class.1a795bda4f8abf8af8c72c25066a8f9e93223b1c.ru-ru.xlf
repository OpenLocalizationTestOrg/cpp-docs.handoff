<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4635cd6457afc3429ab6383fc04d8975eb303c06</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\cdataexchange-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8b1927bd2a2dc8b13c84ade6e486f2784c685f6d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc2271bb47c0bd9266a87d13b323557a0572091a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CDataExchange Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CDataExchange Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Supports the dialog data exchange (DDX) and dialog data validation (DDV) routines used by the Microsoft Foundation classes.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>CDataExchange::CDataExchange</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CDataExchange`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>CDataExchange::Fail</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Called when validation fails.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Resets focus to the previous control and throws an exception.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>CDataExchange::PrepareCtrl</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Prepares the specified control for data exchange or validation.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Use for nonedit controls.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>CDataExchange::PrepareEditCtrl</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Prepares the specified edit control for data exchange or validation.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>CDataExchange::PrepareOleCtrl</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Prepares the specified OLE control for data exchange or validation.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Use for nonedit controls.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Public Data Members</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>CDataExchange::m_bSaveAndValidate</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Flag for the direction of DDX and DDV.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>CDataExchange::m_pDlgWnd</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The dialog box or window where the data exchange takes place.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>does not have a base class.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Use this class if you are writing data exchange routines for custom data types or controls, or if you are writing your own data validation routines.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For more information on writing your own DDX and DDV routines, see <bpt id="p1">[</bpt>Technical Note 26<ept id="p1">](../../mfc/tn026-ddx-and-ddv-routines.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For an overview of DDX and DDV, see <bpt id="p1">[</bpt>Dialog Data Exchange and Validation<ept id="p1">](../../mfc/dialog-data-exchange-and-validation.md)</ept> and <bpt id="p2">[</bpt>Dialog Boxes<ept id="p2">](../../mfc/dialog-boxes.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CDataExchange`</ph> object provides the context information needed for DDX and DDV to take place.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The flag <ph id="ph1">`m_bSaveAndValidate`</ph> is <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept> when DDX is used to fill the initial values of dialog controls from data members.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The flag <ph id="ph1">`m_bSaveAndValidate`</ph> is <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> when DDX is used to set the current values of dialog controls into data members and when DDV is used to validate the data values.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If the DDV validation fails, the DDV procedure will display a message box explaining the input error.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The DDV procedure will then call <bpt id="p1">**</bpt>Fail<ept id="p1">**</ept> to reset the focus to the offending control and throw an exception to stop the validation process.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxwin.h</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>CDataExchange::CDataExchange</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Call this member function to construct a <ph id="ph1">`CDataExchange`</ph> object.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>pDlgWnd</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A pointer to the parent window that contains the control.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Usually this is a <bpt id="p1">[</bpt>CDialog<ept id="p1">](../../mfc/reference/cdialog-class.md)</ept>-derived object.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>, this object validates data, then writes data from the controls to the members.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>, this object will move data from members to controls.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Construct a <ph id="ph1">`CDataExchange`</ph> object yourself to store extra information in the data exchange object to pass to your window's <bpt id="p1">[</bpt>CWnd::DoDataExchange<ept id="p1">](../../mfc/reference/cwnd-class.md#cwnd__dodataexchange)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>NVC_MFCControlLadenDialog#70</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>CDataExchange::Fail</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The framework calls this member function when a dialog data validation (DDV) operation fails.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Fail<ept id="p1">**</ept> restores the focus and selection to the control whose validation failed (if there is a control to restore).</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Fail<ept id="p1">**</ept> then throws an exception of type <bpt id="p2">[</bpt>CUserException<ept id="p2">](../../mfc/reference/cuserexception-class.md)</ept> to stop the validation process.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The exception causes a message box explaining the error to be displayed.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>After DDV validation fails, the user can reenter data in the offending control.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Implementors of custom DDV routines can call <bpt id="p1">**</bpt>Fail<ept id="p1">**</ept> from their routines when a validation fails.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>For more information on writing your own DDX and DDV routines, see <bpt id="p1">[</bpt>Technical Note 26<ept id="p1">](../../mfc/tn026-ddx-and-ddv-routines.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For an overview of DDX and DDV, see <bpt id="p1">[</bpt>Dialog Data Exchange and Validation<ept id="p1">](../../mfc/dialog-data-exchange-and-validation.md)</ept> and <bpt id="p2">[</bpt>Dialog Box Topics<ept id="p2">](../../mfc/dialog-boxes.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>CDataExchange::m_bSaveAndValidate</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This flag indicates the direction of a dialog data exchange (DDX) operation.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The flag is nonzero if the <ph id="ph1">`CDataExchange`</ph> object is being used to move data from the dialog controls to dialog-class data members after the user edits the controls.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The flag is zero if the object is being used to initialize dialog controls from dialog-class data members.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The flag is also nonzero during dialog data validation (DDV).</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For more information on writing your own DDX and DDV routines, see <bpt id="p1">[</bpt>Technical Note 26<ept id="p1">](../../mfc/tn026-ddx-and-ddv-routines.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>For an overview of DDX and DDV, see <bpt id="p1">[</bpt>Dialog Data Exchange and Validation<ept id="p1">](../../mfc/dialog-data-exchange-and-validation.md)</ept> and <bpt id="p2">[</bpt>Dialog Box Topics<ept id="p2">](../../mfc/dialog-boxes.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>CDataExchange::m_pDlgWnd</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Contains a pointer to the <bpt id="p1">[</bpt>CWnd<ept id="p1">](../../mfc/reference/cwnd-class.md)</ept> object for which dialog data exchange (DDX) or validation (DDV) is taking place.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>This object is usually a <bpt id="p1">[</bpt>CDialog<ept id="p1">](../../mfc/reference/cdialog-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Implementors of custom DDX or DDV routines can use this pointer to obtain access to the dialog window that contains the controls they are operating on.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For more information on writing your own DDX and DDV routines, see <bpt id="p1">[</bpt>Technical Note 26<ept id="p1">](../../mfc/tn026-ddx-and-ddv-routines.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>For an overview of DDX and DDV, see <bpt id="p1">[</bpt>Dialog Data Exchange and Validation<ept id="p1">](../../mfc/dialog-data-exchange-and-validation.md)</ept> and <bpt id="p2">[</bpt>Dialog Box Topics<ept id="p2">](../../mfc/dialog-boxes.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>CDataExchange::PrepareCtrl</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The framework calls this member function to prepare the specified control for dialog data exchange (DDX) and validation (DDV).</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The ID of the control to be prepared for DDX or DDV.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`HWND`</ph> of the control being prepared for DDX or DDV.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>PrepareEditCtrl<ept id="p1">](#cdataexchange__prepareeditctrl)</ept> instead for edit controls; use this member function for all other controls.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Preparation consists of storing the control's <ph id="ph1">`HWND`</ph> in the <ph id="ph2">`CDataExchange`</ph> class.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The framework uses this handle to restore the focus to the previously focused control in the event of a DDX or DDV failure.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Implementors of custom DDX or DDV routines should call <ph id="ph1">`PrepareCtrl`</ph> for all non-edit controls for which they are exchanging data via DDX or validating data via DDV.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>For more information on writing your own DDX and DDV routines, see <bpt id="p1">[</bpt>Technical Note 26<ept id="p1">](../../mfc/tn026-ddx-and-ddv-routines.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For an overview of DDX and DDV, see <bpt id="p1">[</bpt>Dialog Data Exchange and Validation<ept id="p1">](../../mfc/dialog-data-exchange-and-validation.md)</ept> and <bpt id="p2">[</bpt>Dialog Box Topics<ept id="p2">](../../mfc/dialog-boxes.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>CDataExchange::PrepareEditCtrl</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The framework calls this member function to prepare the specified edit control for dialog data exchange (DDX) and validation (DDV).</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The ID of the edit control to be prepared for DDX or DDV.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`HWND`</ph> of the edit control being prepared for DDX or DDV.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>PrepareCtrl<ept id="p1">](#cdataexchange__preparectrl)</ept> instead for all non-edit controls.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Preparation consists of two things.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>First, <ph id="ph1">`PrepareEditCtrl`</ph> stores the control's <ph id="ph2">`HWND`</ph> in the <ph id="ph3">`CDataExchange`</ph> class.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The framework uses this handle to restore the focus to the previously focused control in the event of a DDX or DDV failure.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Second, <ph id="ph1">`PrepareEditCtrl`</ph> sets a flag in the <ph id="ph2">`CDataExchange`</ph> class to indicate that the control whose data is being exchanged or validated is an edit control.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Implementors of custom DDX or DDV routines should call <ph id="ph1">`PrepareEditCtrl`</ph> for all edit controls for which they are exchanging data via DDX or validating data via DDV.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>For more information on writing your own DDX and DDV routines, see <bpt id="p1">[</bpt>Technical Note 26<ept id="p1">](../../mfc/tn026-ddx-and-ddv-routines.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>For an overview of DDX and DDV, see <bpt id="p1">[</bpt>Dialog Data Exchange and Validation<ept id="p1">](../../mfc/dialog-data-exchange-and-validation.md)</ept> and <bpt id="p2">[</bpt>Dialog Box Topics<ept id="p2">](../../mfc/dialog-boxes.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>CDataExchange::PrepareOleCtrl</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The framework calls this member function to prepare the specified OLE control for dialog data exchange (DDX) and validation (DDV).</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The ID of the OLE control to be prepared for DDX or DDV.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>A pointer to the OLE control site.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>PrepareEditCtrl<ept id="p1">](#cdataexchange__prepareeditctrl)</ept> instead for edit controls or <bpt id="p2">[</bpt>PrepareCtrl<ept id="p2">](#cdataexchange__preparectrl)</ept> for all other non-OLE controls.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Implementors of custom DDX or DDV routines should call <ph id="ph1">`PrepareOleCtrl`</ph> for all OLE controls for which they are exchanging data via DDX or validating data via DDV.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>For more information on writing your own DDX and DDV routines, see <bpt id="p1">[</bpt>Technical Note 26<ept id="p1">](../../mfc/tn026-ddx-and-ddv-routines.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>For an overview of DDX and DDV, see <bpt id="p1">[</bpt>Dialog Data Exchange and Validation<ept id="p1">](../../mfc/dialog-data-exchange-and-validation.md)</ept> and <bpt id="p2">[</bpt>Dialog Box Topics<ept id="p2">](../../mfc/dialog-boxes.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>MFC Sample VIEWEX</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Hierarchy Chart</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>CWnd::DoDataExchange</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>CWnd::UpdateData</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>