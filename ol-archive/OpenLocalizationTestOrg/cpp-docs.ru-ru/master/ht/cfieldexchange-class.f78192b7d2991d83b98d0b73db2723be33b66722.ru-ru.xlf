<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">560fb1fdafe7149a2bb5fbc9b9b163325cdfeb3b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\cfieldexchange-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d7ed0c05f068d83d10da296f23eaf09aceae93b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">93ce699f24f9b25dbf40b91d17dd193c22a5d890</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CFieldExchange Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CFieldExchange Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Supports the record field exchange (RFX) and bulk record field exchange (Bulk RFX) routines used by the database classes.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>CFieldExchange::IsFieldType</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Returns nonzero if the current operation is appropriate for the type of field being updated.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>CFieldExchange::SetFieldType</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Specifies the type of recordset data member — column or parameter — represented by all following calls to RFX functions until the next call to <ph id="ph1">`SetFieldType`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>does not have a base class.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Use this class if you are writing data exchange routines for custom data types or when you are implementing bulk row fetching; otherwise, you will not directly use this class.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>RFX and Bulk RFX exchanges data between the field data members of your recordset object and the corresponding fields of the current record on the data source.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If you are working with the Data Access Objects (DAO) classes rather than the Open Database Connectivity (ODBC) classes, use class <bpt id="p1">[</bpt>CDaoFieldExchange<ept id="p1">](../../mfc/reference/cdaofieldexchange-class.md)</ept> instead.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For more information, see the article <bpt id="p1">[</bpt>Overview:Database Programming<ept id="p1">](../../data/data-access-programming-mfc-atl.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CFieldExchange`</ph> object provides the context information needed for record field exchange or bulk record field exchange to take place.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>objects support a number of operations, including binding parameters and field data members and setting various flags on the fields of the current record.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>RFX and Bulk RFX operations are performed on recordset-class data members of types defined by the <ph id="ph1">`enum`</ph><bpt id="p1">**</bpt>FieldType<ept id="p1">**</ept> in <ph id="ph2">`CFieldExchange`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Possible <bpt id="p1">**</bpt>FieldType<ept id="p1">**</ept> values are:</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CFieldExchange::outputColumn<ept id="p1">**</ept> for field data members.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CFieldExchange::inputParam<ept id="p1">**</ept> or <bpt id="p2">**</bpt>CFieldExchange::param<ept id="p2">**</ept> for input parameter data members.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CFieldExchange::outputParam<ept id="p1">**</ept> for output parameter data members.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CFieldExchange::inoutParam<ept id="p1">**</ept> for input/output parameter data members.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Most of the class's member functions and data members are provided for writing your own custom RFX routines.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You will use <ph id="ph1">`SetFieldType`</ph> frequently.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more information, see the articles <bpt id="p1">[</bpt>Record Field Exchange (RFX)<ept id="p1">](../../data/odbc/record-field-exchange-rfx.md)</ept> and <bpt id="p2">[</bpt>Recordset (ODBC)<ept id="p2">](../../data/odbc/recordset-odbc.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For information about bulk row fetching, see the article <bpt id="p1">[</bpt>Recordset: Fetching Records in Bulk (ODBC)<ept id="p1">](../../data/odbc/recordset-fetching-records-in-bulk-odbc.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For details about the RFX and Bulk RFX global functions, see <bpt id="p1">[</bpt>Record Field Exchange Functions<ept id="p1">](../../mfc/reference/record-field-exchange-functions.md)</ept> in the MFC Macros and Globals section of this reference.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxdb.h</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>CFieldExchange::IsFieldType</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If you write your own RFX function, call <ph id="ph1">`IsFieldType`</ph> at the beginning of your function to determine whether the current operation can be performed on a particular field or parameter data member type (a <bpt id="p1">**</bpt>CFieldExchange::outputColumn<ept id="p1">**</ept>, <bpt id="p2">**</bpt>CFieldExchange::inputParam<ept id="p2">**</ept>, <bpt id="p3">**</bpt>CFieldExchange::param<ept id="p3">**</ept>, <bpt id="p4">**</bpt>CFieldExchange::outputParam<ept id="p4">**</ept>, or <bpt id="p5">**</bpt>CFieldExchange::inoutParam<ept id="p5">**</ept>).</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>pnField</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The sequential number of the field or parameter data member is returned in this parameter.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This number corresponds to the data member's order in the <bpt id="p1">[</bpt>CRecordset::DoFieldExchange<ept id="p1">](../../mfc/reference/crecordset-class.md#crecordset__dofieldexchange)</ept> or <bpt id="p2">[</bpt>CRecordset::DoBulkFieldExchange<ept id="p2">](../../mfc/reference/crecordset-class.md#crecordset__dobulkfieldexchange)</ept> function.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Nonzero if the current operation can be performed on the current field or parameter type.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Follow the model of the existing RFX functions.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>CFieldExchange::SetFieldType</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You need a call to <ph id="ph1">`SetFieldType`</ph> in your recordset class's <bpt id="p1">[</bpt>DoFieldExchange<ept id="p1">](../../mfc/reference/crecordset-class.md#crecordset__dofieldexchange)</ept> or <bpt id="p2">[</bpt>DoBulkFieldExchange<ept id="p2">](../../mfc/reference/crecordset-class.md#crecordset__dobulkfieldexchange)</ept> override.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A value of the <bpt id="p1">**</bpt>enum FieldType<ept id="p1">**</ept>, declared in <ph id="ph1">`CFieldExchange`</ph>, which can be one of the following:</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>CFieldExchange::outputColumn</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>CFieldExchange::inputParam</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>CFieldExchange::param</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>CFieldExchange::outputParam</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>CFieldExchange::inoutParam</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For field data members, you must call <ph id="ph1">`SetFieldType`</ph> with a parameter of <bpt id="p1">**</bpt>CFieldExchange::outputColumn<ept id="p1">**</ept>, followed by calls to the RFX or Bulk RFX functions.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If you have not implemented bulk row fetching, then ClassWizard places this <ph id="ph1">`SetFieldType`</ph> call for you in the field map section of <ph id="ph2">`DoFieldExchange`</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If you parameterize your recordset class, you must call <ph id="ph1">`SetFieldType`</ph> again, outside any field map section, followed by RFX calls for all the parameter data members.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Each type of parameter data member must have its own <ph id="ph1">`SetFieldType`</ph> call.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The following table distinguishes the different values you can pass to <ph id="ph1">`SetFieldType`</ph> to represent the parameter data members of your class:</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>SetFieldType parameter value</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Type of parameter data member</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>CFieldExchange::inputParam</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Input parameter.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A value that is passed into the recordset's query or stored procedure.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>CFieldExchange::param</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Same as <bpt id="p1">**</bpt>CFieldExchange::inputParam<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>CFieldExchange::outputParam</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Output parameter.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A return value of the recordset's stored procedure.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>CFieldExchange::inoutParam</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Input/output parameter.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A value that is passed into and returned from the recordset's stored procedure.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>In general, each group of RFX function calls associated with field data members or parameter data members must be preceded by a call to <ph id="ph1">`SetFieldType`</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`nFieldType`</ph> parameter of each <ph id="ph2">`SetFieldType`</ph> call identifies the type of the data members represented by the RFX function calls that follow the <ph id="ph3">`SetFieldType`</ph> call.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For more information about handling output and input/output parameters, see the <ph id="ph1">`CRecordset`</ph> member function <bpt id="p1">[</bpt>FlushResultSet<ept id="p1">](../../mfc/reference/crecordset-class.md#crecordset__flushresultset)</ept>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For more information about the RFX and Bulk RFX functions, see the topic <bpt id="p1">[</bpt>Record Field Exchange Functions<ept id="p1">](../../mfc/reference/record-field-exchange-functions.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>For related information about bulk row fetching, see the article <bpt id="p1">[</bpt>Recordset: Fetching Records in Bulk (ODBC)<ept id="p1">](../../data/odbc/recordset-fetching-records-in-bulk-odbc.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This example shows several calls to RFX functions with accompanying calls to <ph id="ph1">`SetFieldType`</ph>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Note that <ph id="ph1">`SetFieldType`</ph> is called through the <ph id="ph2">`pFX`</ph> pointer to a <ph id="ph3">`CFieldExchange`</ph> object.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>NVC_MFCDatabase#33</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Hierarchy Chart</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>CRecordset Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>