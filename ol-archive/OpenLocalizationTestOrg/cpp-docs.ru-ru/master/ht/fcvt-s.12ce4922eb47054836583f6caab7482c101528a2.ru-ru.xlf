<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c0e1e127dc0e4efdde72126b192ff2947fae212c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\reference\fcvt-s.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9f2ad2752569ce04103e31482de4b9a9c109379</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c6b10f67bd741175ca98935fece36e43bd2d8bcb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>_fcvt_s | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>_fcvt_s</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Converts a floating-point number to a string.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This is a version of <bpt id="p1">[</bpt>_fcvt<ept id="p1">](../../c-runtime-library/reference/fcvt.md)</ept> with security enhancements as described in <bpt id="p2">[</bpt>Security Features in the CRT<ept id="p2">](../../c-runtime-library/security-features-in-the-crt.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>[out]</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The supplied buffer that will hold the result of the conversion.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The size of the buffer in bytes.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Number to be converted.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Number of digits after the decimal point.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>[out]</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Pointer to the stored decimal-point position.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>[out]</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Pointer to the stored sign indicator.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Zero if successful.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The return value is an error code if there is a failure.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Error codes are defined in Errno.h.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For a listing of these errors, see <bpt id="p1">[</bpt>errno, _doserrno, _sys_errlist, and _sys_nerr<ept id="p1">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In the case of an invalid parameter, as listed in the following table, this function invokes the invalid parameter handler, as described in <bpt id="p1">[</bpt>Parameter Validation<ept id="p1">](../../c-runtime-library/parameter-validation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If execution is allowed to continue, this function sets <ph id="ph1">`errno`</ph> to <ph id="ph2">`EINVAL`</ph> and returns <ph id="ph3">`EINVAL`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Error Conditions</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>value</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>count</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>dec</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>sign</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Return</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Value in</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Not modified.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Not <ph id="ph1">`NULL`</ph> (points to valid memory)</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>&lt;=0</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Not modified.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Not modified.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Not modified.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Security Issues</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>might generate an access violation if <ph id="ph1">`buffer`</ph> does not point to valid memory and is not <ph id="ph2">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`_fcvt_s`</ph> function converts a floating-point number to a null-terminated character string.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`value`</ph> parameter is the floating-point number to be converted.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>stores the digits of <ph id="ph1">`value`</ph> as a string and appends a null character ('\0').</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`count`</ph> parameter specifies the number of digits to be stored after the decimal point.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Excess digits are rounded off to <ph id="ph1">`count`</ph> places.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If there are fewer than <ph id="ph1">`count`</ph> digits of precision, the string is padded with zeros.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Only digits are stored in the string.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The position of the decimal point and the sign of <ph id="ph1">`value`</ph> can be obtained from <ph id="ph2">`dec`</ph> and <ph id="ph3">`sign`</ph> after the call.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dec`</ph> parameter points to an integer value; this integer value gives the position of the decimal point with respect to the beginning of the string.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A zero or negative integer value indicates that the decimal point lies to the left of the first digit.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The parameter <ph id="ph1">`sign`</ph> points to an integer indicating the sign of <ph id="ph2">`value`</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The integer is set to 0 if <ph id="ph1">`value`</ph> is positive and is set to a nonzero number if <ph id="ph2">`value`</ph> is negative.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A buffer of length <ph id="ph1">`_CVTBUFSIZE`</ph> is sufficient for any floating point value.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The difference between <ph id="ph1">`_ecvt_s`</ph> and <ph id="ph2">`_fcvt_s`</ph> is in the interpretation of the <ph id="ph3">`count`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>interprets <ph id="ph1">`count`</ph> as the total number of digits in the output string, and <ph id="ph2">`_fcvt_s`</ph> interprets c<ph id="ph3">`ount`</ph> as the number of digits after the decimal point.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>In C++, using this function is simplified by a template overload; the overload can infer buffer length automatically, eliminating the need to specify a size argument.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Secure Template Overloads<ept id="p1">](../../c-runtime-library/secure-template-overloads.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The debug version of this function first fills the buffer with 0xFD.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>To disable this behavior, use <bpt id="p1">[</bpt>_CrtSetDebugFillThreshold<ept id="p1">](../../c-runtime-library/reference/crtsetdebugfillthreshold.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Function</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Required header</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Optional header</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>stdlib.h&gt;</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>errno.h&gt;</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>For more compatibility information, see <bpt id="p1">[</bpt>Compatibility<ept id="p1">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Libraries:<ept id="p1">**</ept> All versions of the <bpt id="p2">[</bpt>CRT Library Features<ept id="p2">](../../c-runtime-library/crt-library-features.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>.NET Framework Equivalent</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Convert.ToString%2A&gt;</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Data Conversion</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Floating-Point Support</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>atof, _atof_l, _wtof, _wtof_l</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>_ecvt_s</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>_gcvt_s</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>_fcvt</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>