<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8c78c04dfde59ebeb8caa6fe6e2cbc6c82943216</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-language\octal-and-hexadecimal-character-specifications.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2af9fecbe536cedebcab1c63230b4280601a2c7b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5221b5763e99cc560df61133abaef1c25110154a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Octal and Hexadecimal Character Specifications | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Octal and Hexadecimal Character Specifications</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The sequence <bpt id="p1">**</bpt><ph id="ph1">\\</ph><ept id="p1">**</ept><bpt id="p2">*</bpt>ooo<ept id="p2">*</ept> means you can specify any character in the ASCII character set as a three-digit octal character code.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The numerical value of the octal integer specifies the value of the desired character or wide character.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Similarly, the sequence <bpt id="p1">**</bpt>\x<ept id="p1">**</ept><bpt id="p2">*</bpt>hhh<ept id="p2">*</ept> allows you to specify any ASCII character as a hexadecimal character code.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For example, you can give the ASCII backspace character as the normal C escape sequence (<bpt id="p1">**</bpt>\b<ept id="p1">**</ept>), or you can code it as <bpt id="p2">**</bpt>\010<ept id="p2">**</ept> (octal) or <bpt id="p3">**</bpt>\x008<ept id="p3">**</ept> (hexadecimal).</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can use only the digits 0 through 7 in an octal escape sequence.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Octal escape sequences can never be longer than three digits and are terminated by the first character that is not an octal digit.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Although you do not need to use all three digits, you must use at least one.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For example, the octal representation is <bpt id="p1">**</bpt>\10<ept id="p1">**</ept> for the ASCII backspace character and <bpt id="p2">**</bpt>\101<ept id="p2">**</ept> for the letter A, as given in an ASCII chart.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Similarly, you must use at least one digit for a hexadecimal escape sequence, but you can omit the second and third digits.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Therefore you could specify the hexadecimal escape sequence for the backspace character as either <bpt id="p1">**</bpt>\x8<ept id="p1">**</ept>, <bpt id="p2">**</bpt>\x08<ept id="p2">**</ept>, or <bpt id="p3">**</bpt>\x008<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The value of the octal or hexadecimal escape sequence must be in the range of representable values for type <bpt id="p1">**</bpt>unsigned char<ept id="p1">**</ept> for a character constant and type <ph id="ph1">`wchar_t`</ph> for a wide-character constant.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Multibyte and Wide Characters<ept id="p1">](../c-language/multibyte-and-wide-characters.md)</ept> for information on wide-character constants.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Unlike octal escape constants, the number of hexadecimal digits in an escape sequence is unlimited.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A hexadecimal escape sequence terminates at the first character that is not a hexadecimal digit.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Because hexadecimal digits include the letters <bpt id="p1">**</bpt>a<ept id="p1">**</ept> through <bpt id="p2">**</bpt>f<ept id="p2">**</ept>, care must be exercised to make sure the escape sequence terminates at the intended digit.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To avoid confusion, you can place octal or hexadecimal character definitions in a macro definition:</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For hexadecimal values, you can break the string to show the correct value clearly:</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>C Character Constants</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>