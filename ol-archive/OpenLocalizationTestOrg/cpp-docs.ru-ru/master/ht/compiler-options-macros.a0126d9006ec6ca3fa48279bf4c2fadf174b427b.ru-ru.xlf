<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dbce962873194c1bdcb063537247650cff568e35</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\compiler-options-macros.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8ed681394a60d13a3ddfa003bf0e089a7666098e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3bd84f6a0ff2c3b6235029e536e43df6ffd10e48</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Compiler Options Macros | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Compiler Options Macros</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>These macros control specific compiler features.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>_ATL_ALL_WARNINGS</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A symbol which enables errors in projects converted from previous versions of ATL.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>_ATL_APARTMENT_THREADED</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Define if one or more of your objects use apartment threading.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>_ATL_CSTRING_EXPLICIT_CONSTRUCTORS</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Makes certain <ph id="ph1">`CString`</ph> constructors explicit, preventing any unintentional conversions.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>_ATL_ENABLE_PTM_WARNING</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Define this macro in order to use C++ standard compliant syntax, which generates the C4867 compiler error when a non standard syntax is used to initialize a pointer to a member function.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>_ATL_FREE_THREADED</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Define if one or more of your objects use free or neutral threading.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>_ATL_MULTI_THREADED</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A symbol that indicates the project will have objects that are marked as Both, Free or Neutral.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The macro <bpt id="p1">[</bpt>_ATL_FREE_THREADED<ept id="p1">](#_atl_free_threaded)</ept> should be used instead.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>_ATL_NO_AUTOMATIC_NAMESPACE</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A symbol which prevents the default use of namespace as ATL.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>_ATL_NO_COM_SUPPORT</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A symbol which prevents COM-related code from being compiled with your project.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>ATL_NO_VTABLE</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A symbol that prevents the vtable pointer from being initialized in the class's constructor and destructor.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>ATL_NOINLINE</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A symbol that indicates a function should not be inlined.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>_ATL_SINGLE_THREADED</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Define if all of your objects use the single threading model.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>_ATL_ALL_WARNINGS</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A symbol which enables errors in projects converted from previous versions of ATL.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Before Visual C++ .NET 2002, ATL disabled a lot of warnings and left them disabled so that they never showed up in user code.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Specifically:</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>C4127 conditional expression is constant</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>C4786 'identifier' : identifier was truncated to 'number' characters in the debug information</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>C4201 nonstandard extension used : nameless struct/union</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>C4103 'filename' : used #pragma pack to change alignment</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>C4291 'declaration' : no matching operator delete found; memory will not be freed if initialization throws an exception</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>C4268 'identifier' : 'const' static/global data initialized with compiler generated default constructor fills the object with zeros</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>C4702 unreachable code</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In projects converted from previous versions, these warnings are still disabled by the libraries headers.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>By adding the following line to the stdafx.h file before including libraries headers, this behavior can be changed.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Utilities#97</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If this <ph id="ph1">`#define`</ph> is added, the ATL headers are careful to preserve the state of these warnings so that they are not disabled globally (or if the user explicitly disables individual warnings, not to enable them).</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>New projects generated with Visual C++ .NET 2002 will have this <ph id="ph1">`#define`</ph> set in stdafx.h by default.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>_ATL_APARTMENT_THREADED</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Define if one or more of your objects use apartment threading.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Specifies apartment threading.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Specifying the Project's Threading Model<ept id="p1">](../../atl/specifying-the-threading-model-for-a-project-atl.md)</ept> for other threading options, and <bpt id="p2">[</bpt>Options, ATL Simple Object Wizard<ept id="p2">](../../atl/reference/options-atl-simple-object-wizard.md)</ept> for a description of the threading models available for an ATL object.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>_ATL_CSTRING_EXPLICIT_CONSTRUCTORS</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Makes certain <ph id="ph1">`CString`</ph> constructors explicit, preventing any unintentional conversions.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>When this is defined, all CString constructors that take a single parameter are compiled with the explicit keyword, which prevents implicit conversions of input arguments.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This means for example, that when _UNICODE is defined, if you attempt use a char* string as a CString constructor argument, a compiler error will result.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Use this macro in situations where you need to prevent implicit conversions between narrow and wide string types.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>By using the _T macro on all constructor string arguments, you can define _ATL_CSTRING_EXPLICIT_CONSTRUCTORS and avoid compile errors regardless of whether _UNICODE is defined.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>_ATL_ENABLE_PTM_WARNING</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Define this macro in order to force the use of ANSI C++ standard-compliant syntax for pointer to member functions.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Using this macro will cause the C4867 compiler error to be generated when non-standard syntax is used to initialize a pointer to a member function.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The ATL and MFC libraries have been changed to match the Visual C++ compiler's improved standard C++ compliance.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>According to the ANSI C++ standard, the syntax of a pointer to a class member function should be <ph id="ph1">`&amp;CMyClass::MyFunc`</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>When <bpt id="p1">[</bpt>_ATL_ENABLE_PTM_WARNING<ept id="p1">](#_atl_enable_ptm_warning)</ept> is not defined (the default case), ATL/MFC disables the C4867 error in macro maps (notably message maps) so that code that was created in earlier versions can continue to build as before.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If you define <bpt id="p1">**</bpt>_ATL_ENABLE_PTM_WARNING<ept id="p1">**</ept>, your code should be C++ standard compliant.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>However, the non-standard form has been deprecated, so you need to move existing code to C++ standard compliant syntax.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>For example, the following:</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>NVC_MFCListView#14</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Should be changed to:</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>NVC_MFCListView#11</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Note that for map macros that add the '&amp;' character, you should not add it again in your code.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>_ATL_FREE_THREADED</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Define if one or more of your objects use free or neutral threading.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Specifies free threading.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Free threading is equivalent to a multithread apartment model.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Specifying the Project's Threading Model<ept id="p1">](../../atl/specifying-the-threading-model-for-a-project-atl.md)</ept> for other threading options, and <bpt id="p2">[</bpt>Options, ATL Simple Object Wizard<ept id="p2">](../../atl/reference/options-atl-simple-object-wizard.md)</ept> for a description of the threading models available for an ATL object.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>_ATL_MULTI_THREADED</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A symbol that indicates the project will have objects that are marked as Both, Free or Neutral.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>If this symbol is defined, ATL will pull in code that will correctly synchronize access to global data.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>New code should use the equivalent macro <bpt id="p1">[</bpt>_ATL_FREE_THREADED<ept id="p1">](#_atl_free_threaded)</ept> instead.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>_ATL_NO_AUTOMATIC_NAMESPACE</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A symbol which prevents the default use of namespace as ATL.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>If this symbol is not defined, including atlbase.h will perform <bpt id="p1">**</bpt>using namespace ATL<ept id="p1">**</ept> by default, which may lead to naming conflicts.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>To prevent this, define this symbol.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>_ATL_NO_COM_SUPPORT</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A symbol which prevents COM-related code from being compiled with your project.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>ATL_NO_VTABLE</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>{ ... }</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>_ATL_SINGLE_THREADED</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>