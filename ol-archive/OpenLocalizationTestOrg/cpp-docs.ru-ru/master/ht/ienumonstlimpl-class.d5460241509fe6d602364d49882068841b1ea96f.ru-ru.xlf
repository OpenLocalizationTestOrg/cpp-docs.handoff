<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c94cedcb6d60f5745edac7c82c563c6c4e673e69</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\ienumonstlimpl-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">24b433d1152684925b03b6bea2d4d312d6bda8f8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9fbbc04a50571c26cf0cf37a06efb6ca1f9f08b9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>IEnumOnSTLImpl Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>IEnumOnSTLImpl Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class defines an enumerator interface based on an STL collection.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A COM enumerator ( <bpt id="p1">[</bpt>IEnumXXXX<ept id="p1">](https://msdn.microsoft.com/library/ms680089.aspx)</ept>) interface.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A pointer to the interface ID of the enumerator interface.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The type of item exposed by the enumerator interface.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>copy policy class<ept id="p1">](../../atl/atl-copy-policy-classes.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>An STL container class.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>IEnumOnSTLImpl::Clone</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The implementation of <bpt id="p1">[</bpt>IEnumXXXX::Clone<ept id="p1">](https://msdn.microsoft.com/library/ms690336.aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>IEnumOnSTLImpl::Init</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Initializes the enumerator.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>IEnumOnSTLImpl::Next</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The implementation of <bpt id="p1">[</bpt>IEnumXXXX::Next<ept id="p1">](https://msdn.microsoft.com/library/ms695273.aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>IEnumOnSTLImpl::Reset</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The implementation of <bpt id="p1">[</bpt>IEnumXXXX::Reset<ept id="p1">](https://msdn.microsoft.com/library/ms693414.aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>IEnumOnSTLImpl::Skip</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The implementation of <bpt id="p1">[</bpt>IEnumXXXX::Skip<ept id="p1">](https://msdn.microsoft.com/library/ms690392.aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Public Data Members</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>IEnumOnSTLImpl::m_iter</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The iterator that represents the enumerator's current position within the collection.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>IEnumOnSTLImpl::m_pcollection</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A pointer to the STL container holding the items to be enumerated.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>IEnumOnSTLImpl::m_spUnk</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> pointer of the object supplying the collection.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>provides the implementation for a COM enumerator interface where the items being enumerated are stored in an STL-compatible container.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This class is analogous to the <bpt id="p1">[</bpt>CComEnumImpl<ept id="p1">](../../atl/reference/ccomenumimpl-class.md)</ept> class, which provides an implementation for an enumerator interface based on an array.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CComEnumImpl::Init<ept id="p1">](../../atl/reference/ccomenumimpl-class.md#ccomenumimpl__init)</ept> for details on further differences between <ph id="ph1">`CComEnumImpl`</ph> and <ph id="ph2">`IEnumOnSTLImpl`</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Typically, you will <bpt id="p1">*</bpt>not<ept id="p1">*</ept> need to create your own enumerator class by deriving from this interface implementation.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If you want to use an ATL-supplied enumerator based on an STL container, it is more common to create an instance of <bpt id="p1">[</bpt>CComEnumOnSTL<ept id="p1">](../../atl/reference/ccomenumonstl-class.md)</ept>, or to create a collection class that returns an enumerator by deriving from <bpt id="p2">[</bpt>ICollectionOnSTLImpl<ept id="p2">](../../atl/reference/icollectiononstlimpl-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>However, if you do need to provide a custom enumerator (for example, one that exposes interfaces in addition to the enumerator interface), you can derive from this class.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>In this situation it is likely that you'll need to override the <bpt id="p1">[</bpt>Clone<ept id="p1">](#ienumonstlimpl__clone)</ept> method to provide your own implementation.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> atlcom.h</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>IEnumOnSTLImpl::Init</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Initializes the enumerator.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>[in] The <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> pointer of an object that must be kept alive during the lifetime of the enumerator.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Pass <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> if no such object exists.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A reference to the STL container that holds the items to be enumerated.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If you pass <ph id="ph1">`Init`</ph> a reference to a collection held in another object, you can use the <ph id="ph2">`pUnkForRelease`</ph> parameter to ensure that the object, and the collection it holds, is available for as long as the enumerator needs it.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You must call this method before passing a pointer to the enumerator interface back to any clients.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>IEnumOnSTLImpl::Clone</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This method provides the implementation of the <bpt id="p1">[</bpt>IEnumXXXX::Clone<ept id="p1">](https://msdn.microsoft.com/library/ms690336.aspx)</ept> method by creating an object of type <ph id="ph1">`CComEnumOnSTL`</ph>, initializing it with the same collection and iterator used by the current object, and returning the interface on the newly created object.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>[out] The enumerator interface on a newly created object cloned from the current enumerator.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>IEnumOnSTLImpl::m_spUnk</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> pointer of the object supplying the collection.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This smart pointer maintains a reference on the object passed to <bpt id="p1">[</bpt>IEnumOnSTLImpl::Init<ept id="p1">](#ienumonstlimpl__init)</ept>, ensuring that it remains alive during the lifetime of the enumerator.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>IEnumOnSTLImpl::m_pcollection</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This member points to the collection that provides the data driving the implementation of the enumerator interface.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This member is initialized by a call to <bpt id="p1">[</bpt>IEnumOnSTLImpl::Init<ept id="p1">](#ienumonstlimpl__init)</ept>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>IEnumOnSTLImpl::m_iter</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This member holds the iterator used to mark the current position within the collection and navigate to subsequent elements.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>IEnumOnSTLImpl::Next</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This method provides the implementation of the <bpt id="p1">[</bpt>IEnumXXXX::Next<ept id="p1">](https://msdn.microsoft.com/library/ms695273.aspx)</ept> method.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>[in] The number of elements requested.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>[out] The array to be filled in with the elements.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>[out] The number of elements actually returned in <ph id="ph1">`rgelt`</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>This can be less than <ph id="ph1">`celt`</ph> if fewer than <ph id="ph2">`celt`</ph> elements remain in the list.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>IEnumOnSTLImpl::Reset</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>This method provides the implementation of the <bpt id="p1">[</bpt>IEnumXXXX::Reset<ept id="p1">](https://msdn.microsoft.com/library/ms693414.aspx)</ept> method.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>IEnumOnSTLImpl::Skip</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>This method provides the implementation of the <bpt id="p1">[</bpt>IEnumXXXX::Skip<ept id="p1">](https://msdn.microsoft.com/library/ms690392.aspx)</ept> method.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>[in] The number of elements to skip.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Class Overview</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>