<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">94863379874b03ea94945bba3c1b971a9f45523f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\coledroptarget-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bab915adc602babb19fb4302ec03ba4913904ff8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">db20f2ae190525b525c8f7ca664a46f1a4ada012</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>COleDropTarget Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>COleDropTarget Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Provides the communication mechanism between a window and the OLE libraries.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>COleDropTarget::COleDropTarget</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`COleDropTarget`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>COleDropTarget::OnDragEnter</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Called when the cursor first enters the window.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>COleDropTarget::OnDragLeave</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Called when the cursor is dragged out of the window.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>COleDropTarget::OnDragOver</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Called repeatedly when the cursor is dragged over the window.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>COleDropTarget::OnDragScroll</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Called to determine whether the cursor is dragged into the scroll region of the window.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>COleDropTarget::OnDrop</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Called when data is dropped into the window, default handler.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>COleDropTarget::OnDropEx</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Called when data is dropped into the window, initial handler.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>COleDropTarget::Register</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Registers the window as a valid drop target.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>COleDropTarget::Revoke</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Causes the window to cease being a valid drop target.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Creating an object of this class allows a window to accept data through the OLE drag-and-drop mechanism.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To get a window to accept drop commands, you should first create an object of the <ph id="ph1">`COleDropTarget`</ph> class, and then call the <bpt id="p1">[</bpt>Register<ept id="p1">](#coledroptarget__register)</ept> function with a pointer to the desired <ph id="ph2">`CWnd`</ph> object as the only parameter.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For more information on drag-and-drop operations using OLE, see the article <bpt id="p1">[</bpt>Drag and Drop (OLE)<ept id="p1">](../../mfc/drag-and-drop-ole.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>CObject</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>CCmdTarget</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxole.h</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>COleDropTarget::COleDropTarget</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Constructs an object of class <ph id="ph1">`COleDropTarget`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Call <bpt id="p1">[</bpt>Register<ept id="p1">](#coledroptarget__register)</ept> to associate this object with a window.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>COleDropTarget::OnDragEnter</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Called by the framework when the cursor is first dragged into the window.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Points to the window the cursor is entering.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Points to the data object containing the data that can be dropped.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Contains the state of the modifier keys.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This is a combination of any number of the following: <bpt id="p1">**</bpt>MK_CONTROL<ept id="p1">**</ept>, <bpt id="p2">**</bpt>MK_SHIFT<ept id="p2">**</ept>, <bpt id="p3">**</bpt>MK_ALT<ept id="p3">**</ept>, <bpt id="p4">**</bpt>MK_LBUTTON<ept id="p4">**</ept>, <bpt id="p5">**</bpt>MK_MBUTTON<ept id="p5">**</ept>, and <bpt id="p6">**</bpt>MK_RBUTTON<ept id="p6">**</ept>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Contains the current location of the cursor in client coordinates.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The effect that would result if a drop were attempted at the location specified by <ph id="ph1">`point`</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>It can be one or more of the following:</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A drop would not be allowed.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A copy operation would be performed.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A move operation would be performed.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A link from the dropped data to the original data would be established.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A drag scroll operation is about to occur or is occurring in the target.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Override this function to allow drop operations to occur in the window.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The default implementation calls <bpt id="p1">[</bpt>CView::OnDragEnter<ept id="p1">](../../mfc/reference/cview-class.md#cview__ondragenter)</ept>, which simply returns <ph id="ph1">`DROPEFFECT_NONE`</ph> by default.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IDropTarget::DragEnter<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms680106)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>COleDropTarget::OnDragLeave</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Called by the framework when the cursor leaves the window while a dragging operation is in effect.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Points to the window the cursor is leaving.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Override this function if you want special behavior when the drag operation leaves the specified window.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The default implementation of this function calls <bpt id="p1">[</bpt>CView::OnDragLeave<ept id="p1">](../../mfc/reference/cview-class.md#cview__ondragleave)</ept>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IDropTarget::DragLeave<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms680110)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>COleDropTarget::OnDragOver</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Called by the framework when the cursor is dragged over the window.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Points to the window that the cursor is over.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Points to the data object that contains the data to be dropped.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Contains the state of the modifier keys.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This is a combination of any number of the following: <bpt id="p1">**</bpt>MK_CONTROL<ept id="p1">**</ept>, <bpt id="p2">**</bpt>MK_SHIFT<ept id="p2">**</ept>, <bpt id="p3">**</bpt>MK_ALT<ept id="p3">**</ept>, <bpt id="p4">**</bpt>MK_LBUTTON<ept id="p4">**</ept>, <bpt id="p5">**</bpt>MK_MBUTTON<ept id="p5">**</ept>, and <bpt id="p6">**</bpt>MK_RBUTTON<ept id="p6">**</ept>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Contains the current location of the cursor in client coordinates.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The effect that would result if a drop were attempted at the location specified by <ph id="ph1">`point`</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>It can be one or more of the following:</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A drop would not be allowed.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>A copy operation would be performed.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>A move operation would be performed.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>A link from the dropped data to the original data would be established.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Indicates that a drag scroll operation is about to occur or is occurring in the target.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>This function should be overridden to allow drop operations to occur in the window.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The default implementation of this function calls <bpt id="p1">[</bpt>CView::OnDragOver<ept id="p1">](../../mfc/reference/cview-class.md#cview__ondragover)</ept>, which returns <ph id="ph1">`DROPEFFECT_NONE`</ph> by default.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Because this function is called frequently during a drag-and-drop operation, it should be optimized as much as possible.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IDropTarget::DragOver<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms680129)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>NVC_MFCOleContainer#21</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>COleDropTarget::OnDragScroll</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Called by the framework before calling <bpt id="p1">[</bpt>OnDragEnter<ept id="p1">](#coledroptarget__ondragenter)</ept> or <bpt id="p2">[</bpt>OnDragOver<ept id="p2">](#coledroptarget__ondragover)</ept> to determine whether <ph id="ph1">`point`</ph> is in the scrolling region.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Points to the window the cursor is currently over.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Contains the state of the modifier keys.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>This is a combination of any number of the following: <bpt id="p1">**</bpt>MK_CONTROL<ept id="p1">**</ept>, <bpt id="p2">**</bpt>MK_SHIFT<ept id="p2">**</ept>, <bpt id="p3">**</bpt>MK_ALT<ept id="p3">**</ept>, <bpt id="p4">**</bpt>MK_LBUTTON<ept id="p4">**</ept>, <bpt id="p5">**</bpt>MK_MBUTTON<ept id="p5">**</ept>, and <bpt id="p6">**</bpt>MK_RBUTTON<ept id="p6">**</ept>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Contains the location of the cursor, in pixels, relative to the screen.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The effect that would result if a drop were attempted at the location specified by <ph id="ph1">`point`</ph>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>It can be one or more of the following:</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>A drop would not be allowed.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>A copy operation would be performed.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>A move operation would be performed.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>A link from the dropped data to the original data would be established.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Indicates that a drag scroll operation is about to occur or is occurring in the target.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Override this function when you want to provide special behavior for this event.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The default implementation of this function calls <bpt id="p1">[</bpt>CView::OnDragScroll<ept id="p1">](../../mfc/reference/cview-class.md#cview__ondragscroll)</ept>, which returns <ph id="ph1">`DROPEFFECT_NONE`</ph> and scrolls the window when the cursor is dragged into the default scroll region inside the border of the window.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>COleDropTarget::OnDrop</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Called by the framework when a drop operation is to occur.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Points to the window the cursor is currently over.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Points to the data object that contains the data to be dropped.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The effect that the user chose for the drop operation.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>It can be one or more of the following:</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A copy operation would be performed.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>A move operation would be performed.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>A link from the dropped data to the original data would be established.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Contains the location of the cursor, in pixels, relative to the screen.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Nonzero if the drop is successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The framework first calls <bpt id="p1">[</bpt>OnDropEx<ept id="p1">](#coledroptarget__ondropex)</ept>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`OnDropEx`</ph> function does not handle the drop, the framework then calls this member function, <ph id="ph2">`OnDrop`</ph>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Typically, the application overrides <bpt id="p1">[</bpt>OnDropEx<ept id="p1">](../../mfc/reference/cview-class.md#cview__ondropex)</ept> in the view class to handle right mouse-button drag and drop.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Typically, the view class <bpt id="p1">[</bpt>OnDrop<ept id="p1">](../../mfc/reference/cview-class.md#cview__ondrop)</ept> is used to handle simple drag and drop.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The default implementation of <ph id="ph1">`COleDropTarget::OnDrop`</ph> calls <bpt id="p1">[</bpt>CView::OnDrop<ept id="p1">](../../mfc/reference/cview-class.md#cview__ondrop)</ept>, which simply returns <bpt id="p2">**</bpt>FALSE<ept id="p2">**</ept> by default.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IDropTarget::Drop<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms687242)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>COleDropTarget::OnDropEx</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Called by the framework when a drop operation is to occur.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Points to the window the cursor is currently over.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Points to the data object that contains the data to be dropped.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The effect that the user chose for the default drop operation based on the current key state.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>It can be <ph id="ph1">`DROPEFFECT_NONE`</ph>.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Drop effects are discussed in the Remarks section.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>A list of the drop effects that the drop source supports.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Drop effect values can be combined using the bitwise OR ( <bpt id="p1">**</bpt>&amp;#124;<ept id="p1">**</ept>) operation.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Drop effects are discussed in the Remarks section.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Contains the location of the cursor, in pixels, relative to the screen.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The drop effect that resulted from the drop attempt at the location specified by <ph id="ph1">`point`</ph>.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Drop effects are discussed in the Remarks section.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The framework first calls this function.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>If it does not handle the drop, the framework then calls <bpt id="p1">[</bpt>OnDrop<ept id="p1">](#coledroptarget__ondrop)</ept>.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Typically, you will override <bpt id="p1">[</bpt>OnDropEx<ept id="p1">](../../mfc/reference/cview-class.md#cview__ondropex)</ept> in the view class to support right mouse-button drag and drop.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Typically, the view class <bpt id="p1">[</bpt>OnDrop<ept id="p1">](../../mfc/reference/cview-class.md#cview__ondrop)</ept> is used to handle the case of support for simple drag and drop.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The default implementation of <ph id="ph1">`COleDropTarget::OnDropEx`</ph> calls <bpt id="p1">[</bpt>CView::OnDropEx<ept id="p1">](../../mfc/reference/cview-class.md#cview__ondropex)</ept>.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">[</bpt>CView::OnDropEx<ept id="p1">](../../mfc/reference/cview-class.md#cview__ondropex)</ept> simply returns a dummy value to indicate the <bpt id="p2">[</bpt>OnDrop<ept id="p2">](#coledroptarget__ondrop)</ept> member function should be called.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Drop effects describe the action associated with a drop operation.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>See the following list of drop effects:</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>A drop would not be allowed.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>A copy operation would be performed.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>A move operation would be performed.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>A link from the dropped data to the original data would be established.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Indicates that a drag scroll operation is about to occur or is occurring in the target.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IDropTarget::Drop<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms687242)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>COleDropTarget::Register</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Call this function to register your window with the OLE DLLs as a valid drop target.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Points to the window that is to be registered as a drop target.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Nonzero if registration is successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>This function must be called for drop operations to be accepted.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>RegisterDragDrop<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms678405)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>COleDropTarget::Revoke</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Call this function before destroying any window that has been registered as a drop target through a call to <bpt id="p1">[</bpt>Register<ept id="p1">](#coledroptarget__register)</ept> to remove it from the list of drop targets.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>This function is called automatically from the <bpt id="p1">[</bpt>OnDestroy<ept id="p1">](../../mfc/reference/cwnd-class.md#cwnd__ondestroy)</ept> handler for the window that was registered, so it is usually not necessary to call this function explicitly.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>RevokeDragDrop<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms692643)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>MFC Sample HIERSVR</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>MFC Sample OCLIENT</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>CCmdTarget Class</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Hierarchy Chart</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>COleDropSource Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>