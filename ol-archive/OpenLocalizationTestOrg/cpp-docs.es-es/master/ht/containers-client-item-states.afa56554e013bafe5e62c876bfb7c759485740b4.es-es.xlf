<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">28362c21c965088a00d4767f05e37f5f8661e234</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\containers-client-item-states.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3d54ef303e6cb5fad9d2cc82610a11d30795fed4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1044d8fbedc2fd1e51d1aaa02d05d2c5ff8ab083</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Containers: Client-Item States | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Containers: Client-Item States</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This article explains the different states a client item passes through in its lifetime.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A client item passes through several states as it is created, activated, modified, and saved.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Each time the item's state changes, the framework calls <bpt id="p1">[</bpt>COleClientItem::OnChange<ept id="p1">](../mfc/reference/coleclientitem-class.md#coleclientitem__onchange)</ept> with the <ph id="ph1">`OLE_CHANGED_STATE`</ph> notification.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The second parameter is a value from the <bpt id="p1">**</bpt>COleClientItem::ItemState<ept id="p1">**</ept> enumeration.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>It can be one of the following:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>COleClientItem::emptyState</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>COleClientItem::loadedState</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>COleClientItem::openState</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>COleClientItem::activeState</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>COleClientItem::activeUIState</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In the empty state, a client item is not yet completely an item.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Memory has been allocated for it, but it has not yet been initialized with the OLE item's data.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This is the state a client item is in when it has been created through a call to <bpt id="p1">**</bpt>new<ept id="p1">**</ept> but has not yet undergone the second step of the typical two-step creation.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In the second step, performed through a call to <ph id="ph1">`COleClientItem::CreateFromFile`</ph> or another <bpt id="p1">**</bpt>CreateFrom<ept id="p1">**</ept><bpt id="p2">*</bpt>xxxx<ept id="p2">*</ept> function, the item is completely created.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The OLE data (from a file or some other source, such as the Clipboard) has been associated with the <ph id="ph1">`COleClientItem`</ph>-derived object.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Now the item is in the loaded state.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When an item has been opened in the server's window rather than opened in place in the container's document, it is in the open (or fully open) state.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In this state, a cross-hatch usually is drawn over the representation of the item in the container's window to indicate that the item is active elsewhere.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When an item has been activated in place, it passes, usually only briefly, through the active state.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>It then enters the UI active state, in which the server has merged its menus, toolbars, and other user-interface components with those of the container.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The presence of these user-interface components distinguishes the UI active state from the active state.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Otherwise, the active state resembles the UI active state.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If the server supports Undo, the server is required to retain the OLE item's undo-state information until it reaches the loaded or open state.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Containers</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Activation</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Containers: Client-Item Notifications</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Trackers</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>CRectTracker Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>