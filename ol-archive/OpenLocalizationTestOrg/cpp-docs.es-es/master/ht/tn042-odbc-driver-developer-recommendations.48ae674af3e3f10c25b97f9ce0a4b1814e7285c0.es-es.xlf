<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e512afeb7a192f22b0d5119e756431add1125971</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\tn042-odbc-driver-developer-recommendations.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eed9b7cdd804d4e3445a6ba0b0b70e8c6b93212a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7a7ab03af1a426297f31448f70d7fc87478d9745</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>TN042: ODBC Driver Developer Recommendations | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>TN042: ODBC Driver Developer Recommendations</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following technical note has not been updated since it was first included in the online documentation.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>As a result, some procedures and topics might be out of date or incorrect.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For the latest information, it is recommended that you search for the topic of interest in the online documentation index.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This note describes guidelines for ODBC driver writers.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>It outlines general requirements and assumptions of ODBC functionality that the MFC Database classes make, and various expected semantic details.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Required driver functionality to support the three <ph id="ph1">`CRecordset`</ph> Open modes (<bpt id="p1">**</bpt>forwardOnly<ept id="p1">**</ept>, <bpt id="p2">**</bpt>snapshot<ept id="p2">**</ept> and <bpt id="p3">**</bpt>dynaset<ept id="p3">**</ept>) are described.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>ODBC's Cursor Library</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The MFC Database classes present functionality to the user that in many cases surpasses the functionality provided by most level 1 ODBC drivers.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Fortunately, ODBC's Cursor Library will layer itself between the database classes and the driver, and will automatically provide much of this additional functionality.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For instance, most 1.0 drivers do not support backward scrolling.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The Cursor Library can detect this, and will cache rows from the driver and present them as requested on FETCH_PREV calls in <bpt id="p1">**</bpt>SQLExtendedFetch<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Another important example of cursor library dependence is positioned updates.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Most 1.0 drivers also do not have positioned updates, but the cursor library will generate update statements which identify a target row on the data source based upon its current cached data values, or a cached timestamp value.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The class library never makes use of multiple rowsets.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Therefore, the few <bpt id="p1">**</bpt>SQLSetPos<ept id="p1">**</ept> statements are always applied to row 1 of the rowset.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>CDatabases</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">`CDatabase`</ph> allocates a single <bpt id="p1">**</bpt>HDBC<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>(If <ph id="ph1">`CDatabase`</ph>'s <ph id="ph2">`ExecuteSQL`</ph> function is used, an <bpt id="p1">**</bpt>HSTMT<ept id="p1">**</ept> is temporarily allocated.) So if multiple <ph id="ph3">`CDatabase`</ph>'s are required, multiple <bpt id="p2">**</bpt>HDBC<ept id="p2">**</ept>s per <bpt id="p3">**</bpt>HENV<ept id="p3">**</ept> must be supported.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The database classes require the cursor library.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This is reflected in a <bpt id="p1">**</bpt>SQLSetConnections<ept id="p1">**</ept> call <bpt id="p2">**</bpt>SQL_ODBC_CURSORS<ept id="p2">**</ept>, <bpt id="p3">**</bpt>SQL_CUR_USE_ODBC<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SQLDriverConnect<ept id="p1">**</ept>, <bpt id="p2">**</bpt>SQL_DRIVER_COMPLETE<ept id="p2">**</ept> is used by <ph id="ph1">`CDatabase::Open`</ph> to establish the connection to the data source.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The driver must support <bpt id="p1">**</bpt>SQLGetInfo SQL_ODBC_API_CONFORMANCE<ept id="p1">**</ept><ph id="ph1"> &gt;= </ph><bpt id="p2">**</bpt>SQL_OAC_LEVEL1<ept id="p2">**</ept>, <bpt id="p3">**</bpt>SQLGetInfo SQL_ODBC_SQL_CONFORMANCE<ept id="p3">**</ept><ph id="ph2"> &gt;= </ph><bpt id="p4">**</bpt>SQL_OSC_MINIMUM<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In order for transactions to be supported for the <ph id="ph1">`CDatabase`</ph> and its dependent recordsets, <bpt id="p1">**</bpt>SQLGetInfo SQL_CURSOR_COMMIT_BEHAVIOR<ept id="p1">**</ept> and <bpt id="p2">**</bpt>SQL_CURSOR_ROLLBACK_BEHAVIOR<ept id="p2">**</ept> must have <bpt id="p3">**</bpt>SQL_CR_PRESERVE<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Otherwise, attempts to perform transaction control will be ignored.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SQLGetInfo SQL_DATA_SOURCE_READ_ONLY<ept id="p1">**</ept> must be supported.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If it returns "Y", no update operations will be performed on the data source.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`CDatabase`</ph> is opened ReadOnly, an attempt to set the data source read only will be made with <bpt id="p1">**</bpt>SQLSetConnectOption SQL_ACCESS_MODE<ept id="p1">**</ept>, <bpt id="p2">**</bpt>SQL_MODE_READ_ONLY<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If identifiers require quoting, this information should be returned from the driver with an <bpt id="p1">**</bpt>SQLGetInfo SQL_IDENTIFIER_QUOTE_CHAR<ept id="p1">**</ept> call.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For debugging purposes, <bpt id="p1">**</bpt>SQLGetInfo SQL_DBMS_VER<ept id="p1">**</ept> and <bpt id="p2">**</bpt>SQL_DBMS_NAME<ept id="p2">**</ept> are retrieved from the driver.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SQLSetStmtOption SQL_QUERY_TIMEOUT<ept id="p1">**</ept> and <bpt id="p2">**</bpt>SQL_ASYNC_ENABLE<ept id="p2">**</ept> may be called on a <ph id="ph1">`CDatabase`</ph>'s <bpt id="p3">**</bpt>HDBC<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SQLError<ept id="p1">**</ept> may be called with any or all arguments NULL.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Of course, <bpt id="p1">**</bpt>SQLAllocEnv<ept id="p1">**</ept>, <bpt id="p2">**</bpt>SQLAllocConnect<ept id="p2">**</ept>, <bpt id="p3">**</bpt>SQLDisconnect<ept id="p3">**</ept> and <bpt id="p4">**</bpt>SQLFreeConnect<ept id="p4">**</ept> must be supported.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>ExecuteSQL</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In addition to allocating and freeing a temporary <bpt id="p1">**</bpt>HSTMT<ept id="p1">**</ept>, <ph id="ph1">`ExecuteSQL`</ph> calls <bpt id="p2">**</bpt>SQLExecDirect<ept id="p2">**</ept>, <bpt id="p3">**</bpt>SQLFetch<ept id="p3">**</ept>, <bpt id="p4">**</bpt>SQLNumResultCol<ept id="p4">**</ept> and <ph id="ph2">`SQLMoreResults`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SQLCancel<ept id="p1">**</ept> may be called on the <bpt id="p2">**</bpt>HSTMT<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>GetDatabaseName</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SQLGetInfo SQL_DATABASE_NAME<ept id="p1">**</ept> will be called.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>BeginTrans, CommitTrans, Rollback</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SQLSetConnectOption SQL_AUTOCOMMIT<ept id="p1">**</ept> and <bpt id="p2">**</bpt>SQLTransact SQL_COMMIT<ept id="p2">**</ept>, <bpt id="p3">**</bpt>SQL_ROLLBACK<ept id="p3">**</ept> and <bpt id="p4">**</bpt>SQL_AUTOCOMMIT<ept id="p4">**</ept> will be called if transaction requests are made.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>CRecordsets</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SQLAllocStmt<ept id="p1">**</ept>, <bpt id="p2">**</bpt>SQLPrepare<ept id="p2">**</ept>, <bpt id="p3">**</bpt>SQLExecute<ept id="p3">**</ept> (For <bpt id="p4">**</bpt>Open<ept id="p4">**</ept> and <bpt id="p5">**</bpt>Requery<ept id="p5">**</ept>), <bpt id="p6">**</bpt>SQLExecDirect<ept id="p6">**</ept> (for update operations), <bpt id="p7">**</bpt>SQLFreeStmt<ept id="p7">**</ept> must be supported.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SQLNumResultCols<ept id="p1">**</ept> and <bpt id="p2">**</bpt>SQLDescribeCol<ept id="p2">**</ept> will be called on the results set at various times.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SQLSetParam<ept id="p1">**</ept> is used extensively for binding parameter data and <bpt id="p2">**</bpt>DATA_AT_EXEC<ept id="p2">**</ept> functionality.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SQLBindCol<ept id="p1">**</ept> is used extensively to register output Column data storage locations with ODBC.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Two <bpt id="p1">**</bpt>SQLGetData<ept id="p1">**</ept> calls are used to retrieve <bpt id="p2">**</bpt>SQL_LONG_VARCHAR<ept id="p2">**</ept> and <bpt id="p3">**</bpt>SQL_LONG_VARBINARY<ept id="p3">**</ept> data.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The first call attempts to find the total length of the column value by calling <bpt id="p1">**</bpt>SQLGetData<ept id="p1">**</ept> with cbMaxValue of 0, but with a valid pcbValue.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If pcbValue holds <bpt id="p1">**</bpt>SQL_NO_TOTAL<ept id="p1">**</ept>, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Otherwise, an <ph id="ph1">`HGLOBAL`</ph> is allocated, and another <bpt id="p1">**</bpt>SQLGetData<ept id="p1">**</ept> call made to retrieve the entire result.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Updating</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If pessimistic locking is requested, <bpt id="p1">**</bpt>SQLGetInfo SQL_LOCK_TYPES<ept id="p1">**</ept> will be queried.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>SQL_LCK_EXCLUSIVE<ept id="p1">**</ept> is not supported, an exception will be thrown.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Attempts to update a <ph id="ph1">`CRecordset`</ph> (<bpt id="p1">**</bpt>snapshot<ept id="p1">**</ept> or <bpt id="p2">**</bpt>dynaset<ept id="p2">**</ept>) will cause a second <bpt id="p3">**</bpt>HSTMT<ept id="p3">**</ept> to be allocated.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For drivers that do not support second <bpt id="p1">**</bpt>HSTMT<ept id="p1">**</ept>, the cursor library will simulate this functionality.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Unfortunately, this may sometimes mean forcing the current query on the first <bpt id="p1">**</bpt>HSTMT<ept id="p1">**</ept> to completion before processing the second <bpt id="p2">**</bpt>HSTMT<ept id="p2">**</ept>'s request.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SQLFreeStmt SQL_CLOSE<ept id="p1">**</ept> and <bpt id="p2">**</bpt>SQL_RESET_PARAMS<ept id="p2">**</ept> and <bpt id="p3">**</bpt>SQLGetCursorName<ept id="p3">**</ept> will be called during update operations.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If there are <bpt id="p1">**</bpt>CLongBinarys<ept id="p1">**</ept> in the <bpt id="p2">**</bpt>outputColumns<ept id="p2">**</ept>, ODBC's <bpt id="p3">**</bpt>DATA_AT_EXEC<ept id="p3">**</ept> functionality must be supported.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This includes returning <bpt id="p1">**</bpt>SQL_NEED_DATA<ept id="p1">**</ept> from <bpt id="p2">**</bpt>SQLExecDirect<ept id="p2">**</ept>, <bpt id="p3">**</bpt>SQLParamData<ept id="p3">**</ept> and <bpt id="p4">**</bpt>SQLPutData<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SQLRowCount<ept id="p1">**</ept> is called after executing to verify that only 1 record was updated by the <bpt id="p2">**</bpt>SQLExecDirect<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>ForwardOnly Cursors</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Only <bpt id="p1">**</bpt>SQLFetch<ept id="p1">**</ept> is required for the <bpt id="p2">**</bpt>Move<ept id="p2">**</ept> operations.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Note that <bpt id="p1">**</bpt>forwardOnly<ept id="p1">**</ept> cursors do not support updates.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Snapshot Cursors</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Snapshot functionality requires <bpt id="p1">**</bpt>SQLExtendedFetch<ept id="p1">**</ept> support.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>As noted above, the ODBC cursor library will detect when a driver does not support <bpt id="p1">**</bpt>SQLExtendedFetch<ept id="p1">**</ept>, and provide the necessary support itself.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SQLGetInfo<ept id="p1">**</ept>, <bpt id="p2">**</bpt>SQL_SCROLL_OPTIONS<ept id="p2">**</ept> must support <bpt id="p3">**</bpt>SQL_SO_STATIC<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Dynaset Cursors</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Below is the minimum support required to open a dynaset:</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SQLGetInfo<ept id="p1">**</ept>, <bpt id="p2">**</bpt>SQL_ODBC_VER<ept id="p2">**</ept> must return &gt; "01".</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SQLGetInfo<ept id="p1">**</ept>, <bpt id="p2">**</bpt>SQL_SCROLL_OPTIONS<ept id="p2">**</ept> must support <bpt id="p3">**</bpt>SQL_SO_KEYSET_DRIVEN<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SQLGetInfo<ept id="p1">**</ept>, <bpt id="p2">**</bpt>SQL_ROW_UPDATES<ept id="p2">**</ept> must return "Y".</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SQLGetInfo<ept id="p1">**</ept>, <bpt id="p2">**</bpt>SQL_POSITIONED_UPDATES<ept id="p2">**</ept> must support <bpt id="p3">**</bpt>SQL_PS_POSITIONED_DELETE<ept id="p3">**</ept> and <bpt id="p4">**</bpt>SQL_PS_POSITIONED_UPDATE<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>In addition, if pessimistic locking is requested, a call to <bpt id="p1">**</bpt>SQLSetPos<ept id="p1">**</ept> with irow 1, fRefresh FALSE and fLock <bpt id="p2">**</bpt>SQL_LCK_EXCLUSIVE<ept id="p2">**</ept> will be made.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Technical Notes by Number</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Technical Notes by Category</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>