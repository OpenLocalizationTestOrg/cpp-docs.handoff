<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">511a8c3d3bac014d7320a27e2eae50d31b97eba8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-language\storage-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0efb7cb14a7d64dcf7537589490668365cfe47e8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2ee3b0e3566ccdca1c5baea3d30e7c900a4409b2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Storage Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Storage Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The storage-class specifier in a function definition gives the function either <ph id="ph1">`extern`</ph> or <bpt id="p1">**</bpt>static<ept id="p1">**</ept> storage class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>function-definition<ept id="p1">*</ept>:</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> *</bpt>declaration-specifiers<ept id="p1">*</ept> opt<bpt id="p2">*</bpt>attribute-seq<ept id="p2">*</ept> opt<bpt id="p3">*</bpt>declarator declaration-list<ept id="p3">*</ept> opt<bpt id="p4">*</bpt>compound-statement<ept id="p4">*</ept></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>attribute-seq<ept id="p1">*</ept> is Microsoft Specific */</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>declaration-specifiers<ept id="p1">*</ept>:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> *</bpt>storage-class-specifier declaration-specifiers<ept id="p1">*</ept> opt</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>type-specifier declaration-specifiers<ept id="p1">*</ept> opt</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>type-qualifier declaration-specifiers<ept id="p1">*</ept> opt</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>storage-class-specifier<ept id="p1">*</ept>: /<ph id="ph1">\*</ph> For function definitions</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>extern</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>static</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If a function definition does not include a <bpt id="p1">*</bpt>storage-class-specifier<ept id="p1">*</ept>, the storage class defaults to <ph id="ph1">`extern`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can explicitly declare a function as <ph id="ph1">`extern`</ph>, but it is not required.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If the declaration of a function contains the <bpt id="p1">*</bpt>storage-class-specifier<ept id="p1">*</ept> <ph id="ph1">`extern`</ph>, the identifier has the same linkage as any visible declaration of the identifier with file scope.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If there is no visible declaration with file scope, the identifier has external linkage.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If an identifier has file scope and no <bpt id="p1">*</bpt>storage-class-specifier<ept id="p1">*</ept>, the identifier has external linkage.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>External linkage means that each instance of the identifier denotes the same object or function.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Lifetime, Scope, Visibility, and Linkage<ept id="p1">](../c-language/lifetime-scope-visibility-and-linkage.md)</ept> for more information about linkage and file scope.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Block-scope function declarations with a storage-class specifier other than <ph id="ph1">`extern`</ph> generate errors.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A function with <bpt id="p1">**</bpt>static<ept id="p1">**</ept> storage class is visible only in the source file in which it is defined.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>All other functions, whether they are given <ph id="ph1">`extern`</ph> storage class explicitly or implicitly, are visible throughout all source files in the program.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>static<ept id="p1">**</ept> storage class is desired, it must be declared on the first occurrence of a declaration (if any) of the function, and on the definition of the function.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Microsoft Specific</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When the Microsoft extensions are enabled, a function originally declared without a storage class (or with <ph id="ph1">`extern`</ph> storage class) is given <bpt id="p1">**</bpt>static<ept id="p1">**</ept> storage class if the function definition is in the same source file and if the definition explicitly specifies <bpt id="p2">**</bpt>static<ept id="p2">**</ept> storage class.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When compiling with the /Ze compiler option, functions declared within a block using the <ph id="ph1">`extern`</ph> keyword have global visibility.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This is not true when compiling with /Za.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This feature should not be relied upon if portability of source code is a consideration.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>END Microsoft Specific</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>C Function Definitions</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>