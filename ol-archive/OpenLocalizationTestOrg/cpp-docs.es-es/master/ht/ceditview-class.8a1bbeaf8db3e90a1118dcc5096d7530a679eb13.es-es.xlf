<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bbe900d0261f56193c2173a4ad1e564824d6253f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\ceditview-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dd8dd20a8679ecca6a38bb7f07f2ba1cdc289a68</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d7dc4e4d72f4b212525ebbac62f61ed405d74a58</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CEditView Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CEditView Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A type of view class that provides the functionality of a Windows edit control and can be used to implement simple text-editor functionality.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>CEditView::CEditView</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs an object of type <ph id="ph1">`CEditView`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>CEditView::FindText</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Searches for a string within the text.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>CEditView::GetBufferLength</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Obtains the length of the character buffer.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>CEditView::GetEditCtrl</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Provides access to the <ph id="ph1">`CEdit`</ph> portion of a <ph id="ph2">`CEditView`</ph> object (the Windows edit control).</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>CEditView::GetPrinterFont</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Retrieves the current printer font.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>CEditView::GetSelectedText</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Retrieves the current text selection.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>CEditView::LockBuffer</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Locks the buffer.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>CEditView::PrintInsideRect</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Renders text inside a given rectangle.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>CEditView::SerializeRaw</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Serializes a <ph id="ph1">`CEditView`</ph> object to disk as raw text.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>CEditView::SetPrinterFont</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Sets a new printer font.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>CEditView::SetTabStops</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Sets tab stops for both screen display and printing.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>CEditView::UnlockBuffer</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Unlocks the buffer.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Protected Methods</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>CEditView::OnFindNext</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Finds next occurrence of a text string.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>CEditView::OnReplaceAll</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Replaces all occurrences of a given string with a new string.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>CEditView::OnReplaceSel</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Replaces current selection.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>CEditView::OnTextNotFound</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Called when a find operation fails to match any further text.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Public Data Members</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>CEditView::dwStyleDefault</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Default style for objects of type <bpt id="p1">**</bpt>CEditView.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CEditView`</ph> class provides the following additional functions:</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Print.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Find and replace.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Because class <ph id="ph1">`CEditView`</ph> is a derivative of class <ph id="ph2">`CView`</ph>, objects of class <ph id="ph3">`CEditView`</ph> can be used with documents and document templates.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">`CEditView`</ph> control's text is kept in its own global memory object.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Your application can have any number of <ph id="ph1">`CEditView`</ph> objects.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Create objects of type <ph id="ph1">`CEditView`</ph> if you want an edit window with the added functionality listed above, or if you want simple text-editor functionality.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CEditView`</ph> object can occupy the entire client area of a window.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Derive your own classes from <ph id="ph1">`CEditView`</ph> to add or modify the basic functionality, or to declare classes that can be added to a document template.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The default implementation of class <ph id="ph1">`CEditView`</ph> handles the following commands: <bpt id="p1">**</bpt>ID_EDIT_SELECT_ALL<ept id="p1">**</ept>, <bpt id="p2">**</bpt>ID_EDIT_FIND<ept id="p2">**</ept>, <bpt id="p3">**</bpt>ID_EDIT_REPLACE<ept id="p3">**</ept>, <bpt id="p4">**</bpt>ID_EDIT_REPEAT<ept id="p4">**</ept>, and <bpt id="p5">**</bpt>ID_FILE_PRINT<ept id="p5">**</ept>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The default character limit for <ph id="ph1">`CEditView`</ph> is (1024 <ph id="ph2">\*</ph> 1024 - 1 = 1048575).</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This can be changed by calling the <bpt id="p1">**</bpt>EM_LIMITTEXT<ept id="p1">**</ept> function of the underlying edit control.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>However, the limits are different depending on the operating system and the type of edit control (single or multiline).</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For more information on these limits, see <bpt id="p1">[</bpt>EM_LIMITTEXT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb761607)</ept>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>To change this limit in your control, override the <ph id="ph1">`OnCreate()`</ph> function for your <ph id="ph2">`CEditView`</ph> class and insert the following line of code:</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>NVC_MFCDocView#65</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Objects of type <ph id="ph1">`CEditView`</ph> (or of types derived from <ph id="ph2">`CEditView`</ph>) have the following limitations:</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>does not implement true what you see is what you get (WYSIWYG) editing.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Where there is a choice between readability on the screen and matching printed output, <ph id="ph1">`CEditView`</ph> opts for screen readability.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>can display text in only a single font.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>No special character formatting is supported.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>See class <bpt id="p1">[</bpt>CRichEditView<ept id="p1">](../../mfc/reference/cricheditview-class.md)</ept> for greater capabilities.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The amount of text a <ph id="ph1">`CEditView`</ph> can contain is limited.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The limits are the same as for the <ph id="ph1">`CEdit`</ph> control.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>For more information on <ph id="ph1">`CEditView`</ph>, see <bpt id="p1">[</bpt>Derived View Classes Available in MFC<ept id="p1">](../../mfc/derived-view-classes-available-in-mfc.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>CObject</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>CCmdTarget</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>CWnd</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>CView</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>CCtrlView</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxext.h</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>CEditView::CEditView</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Constructs an object of type <ph id="ph1">`CEditView`</ph>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>After constructing the object, you must call the <bpt id="p1">[</bpt>CWnd::Create<ept id="p1">](../../mfc/reference/cwnd-class.md#cwnd__create)</ept> function before the edit control is used.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>If you derive a class from <ph id="ph1">`CEditView`</ph> and add it to the template using <ph id="ph2">`CWinApp::AddDocTemplate`</ph>, the framework calls both this constructor and the <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> function.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>CEditView::dwStyleDefault</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Contains the default style of the <ph id="ph1">`CEditView`</ph> object.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Pass this static member as the <ph id="ph1">`dwStyle`</ph> parameter of the <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> function to obtain the default style for the <ph id="ph2">`CEditView`</ph> object.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>CEditView::FindText</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Call the <ph id="ph1">`FindText`</ph> function to search the <ph id="ph2">`CEditView`</ph> object's text buffer.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The text to be found.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Specifies the direction of the search.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>, the search direction is toward the end of the buffer.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>, the search direction is toward the beginning of the buffer.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Specifies whether the search is case sensitive.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>, the search is case sensitive.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>, the search is not case sensitive.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Nonzero if the search text is found; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This function searches the text in the buffer for the text specified by <ph id="ph1">`lpszFind`</ph>, starting at the current selection, in the direction specified by <ph id="ph2">`bNext`</ph>, and with case sensitivity specified by <ph id="ph3">`bCase`</ph>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>If the text is found, it sets the selection to the found text and returns a nonzero value.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>If the text is not found, the function returns 0.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>You normally do not need to call the <ph id="ph1">`FindText`</ph> function unless you override <ph id="ph2">`OnFindNext`</ph>, which calls <ph id="ph3">`FindText`</ph>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>CEditView::GetBufferLength</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Call this member function to obtain the number of characters currently in the edit control's buffer, not including the null terminator.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The length of the string in the buffer.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>CEditView::GetEditCtrl</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`GetEditCtrl`</ph> to get a reference to the edit control used by the edit view.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A reference to a <ph id="ph1">`CEdit`</ph> object.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>This control is of type <bpt id="p1">[</bpt>CEdit<ept id="p1">](../../mfc/reference/cedit-class.md)</ept>, so you can manipulate the Windows edit control directly using the <ph id="ph1">`CEdit`</ph> member functions.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Using the <ph id="ph1">`CEdit`</ph> object can change the state of the underlying Windows edit control.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>For example, you should not change the tab settings using the <bpt id="p1">[</bpt>CEdit::SetTabStops<ept id="p1">](../../mfc/reference/cedit-class.md#cedit__settabstops)</ept> function because <ph id="ph1">`CEditView`</ph> caches these settings for use both in the edit control and in printing.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Instead, use <bpt id="p1">[</bpt>CEditView::SetTabStops<ept id="p1">](#ceditview__settabstops)</ept>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>NVC_MFCDocView#66</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>CEditView::GetPrinterFont</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`GetPrinterFont`</ph> to get a pointer to a <bpt id="p1">[</bpt>CFont<ept id="p1">](../../mfc/reference/cfont-class.md)</ept> object that describes the current printer font.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>A pointer to a <ph id="ph1">`CFont`</ph> object that specifies the current printer font; <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> if the printer font has not been set.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The pointer may be temporary and should not be stored for later use.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>If the printer font has not been set, the default printing behavior of the <ph id="ph1">`CEditView`</ph> class is to print using the same font used for display.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Use this function to determine the current printer font.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>If it is not the desired printer font, use <bpt id="p1">[</bpt>CEditView::SetPrinterFont<ept id="p1">](#ceditview__setprinterfont)</ept> to change it.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>CEditView::GetSelectedText</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`GetSelectedText`</ph> to copy the selected text into a <ph id="ph2">`CString`</ph> object, up to the end of the selection or the character preceding the first carriage-return character in the selection.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>A reference to the <ph id="ph1">`CString`</ph> object that is to receive the selected text.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>CEditView::LockBuffer</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Call this member function to obtain a pointer to the buffer.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The buffer should not be modified.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>A pointer to the edit control's buffer.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>CEditView::OnFindNext</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Searches the text in the buffer for the text specified by <ph id="ph1">`lpszFind`</ph>, in the direction specified by <ph id="ph2">`bNext`</ph>, with case sensitivity specified by <ph id="ph3">`bCase`</ph>.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The text to be found.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Specifies the direction of the search.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>, the search direction is toward the end of the buffer.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>, the search direction is toward the beginning of the buffer.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Specifies whether the search is case sensitive.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>, the search is case sensitive.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>, the search is not case sensitive.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The search starts at the beginning of the current selection and is accomplished through a call to <bpt id="p1">[</bpt>FindText<ept id="p1">](#ceditview__findtext)</ept>.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>In the default implementation, <ph id="ph1">`OnFindNext`</ph> calls <bpt id="p1">[</bpt>OnTextNotFound<ept id="p1">](#ceditview__ontextnotfound)</ept> if the text is not found.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Override <ph id="ph1">`OnFindNext`</ph> to change the way a <ph id="ph2">`CEditView`</ph>-derived object searches text.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>calls <ph id="ph1">`OnFindNext`</ph> when the user chooses the Find Next button in the standard Find dialog box.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>CEditView::OnReplaceAll</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>calls <ph id="ph1">`OnReplaceAll`</ph> when the user selects the Replace All button in the standard Replace dialog box.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The text to be found.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The text to replace the search text.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Specifies whether search is case sensitive.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>, the search is case sensitive.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>, the search is not case sensitive.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>searches the text in the buffer for the text specified by <ph id="ph1">`lpszFind`</ph>, with case sensitivity specified by <ph id="ph2">`bCase`</ph>.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The search starts at the beginning of the current selection.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Each time the search text is found, this function replaces that occurrence of the text with the text specified by <ph id="ph1">`lpszReplace`</ph>.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The search is accomplished through a call to <bpt id="p1">[</bpt>FindText<ept id="p1">](#ceditview__findtext)</ept>.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>In the default implementation, <bpt id="p1">[</bpt>OnTextNotFound<ept id="p1">](#ceditview__ontextnotfound)</ept> is called if the text is not found.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>If the current selection does not match <ph id="ph1">`lpszFind`</ph>, the selection is updated to the first occurrence of the text specified by <ph id="ph2">`lpszFind`</ph> and a replace is not performed.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>This allows the user to confirm that this is what they want to do when the selection does not match the text to be replaced.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Override <ph id="ph1">`OnReplaceAll`</ph> to change the way a <ph id="ph2">`CEditView`</ph>-derived object replaces text.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>CEditView::OnReplaceSel</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>calls <ph id="ph1">`OnReplaceSel`</ph> when the user selects the Replace button in the standard Replace dialog box.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The text to be found.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Specifies the direction of the search.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>, the search direction is toward the end of the buffer.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>, the search direction is toward the beginning of the buffer.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Specifies whether the search is case sensitive.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>, the search is case sensitive.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>, the search is not case sensitive.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The text to replace the found text.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>After replacing the selection, this function searches the text in the buffer for the next occurrence of the text specified by <ph id="ph1">`lpszFind`</ph>, in the direction specified by <ph id="ph2">`bNext`</ph>, with case sensitivity specified by <ph id="ph3">`bCase`</ph>.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The search is accomplished through a call to <bpt id="p1">[</bpt>FindText<ept id="p1">](#ceditview__findtext)</ept>.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>If the text is not found, <bpt id="p1">[</bpt>OnTextNotFound<ept id="p1">](#ceditview__ontextnotfound)</ept> is called.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Override <ph id="ph1">`OnReplaceSel`</ph> to change the way a <ph id="ph2">`CEditView`</ph>-derived object replaces the selected text.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>CEditView::OnTextNotFound</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Override this function to change the default implementation, which calls the Windows function <bpt id="p1">**</bpt>MessageBeep<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The text to be found.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>CEditView::PrintInsideRect</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`PrintInsideRect`</ph> to print text in the rectangle specified by <bpt id="p1">*</bpt>rectLayout<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Pointer to the printer device context.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>rectLayout</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Reference to a <bpt id="p1">[</bpt>CRect<ept id="p1">](../../atl-mfc-shared/reference/crect-class.md)</ept> object or <bpt id="p2">[</bpt>RECT structure<ept id="p2">](../../mfc/reference/rect-structure1.md)</ept> specifying the rectangle in which the text is to be rendered.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Index within the buffer of the first character to be rendered.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Index within the buffer of the character following the last character to be rendered.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The index of the next character to be printed (that is, the character following the last character rendered).</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`CEditView`</ph> control does not have the style <bpt id="p1">**</bpt>ES_AUTOHSCROLL<ept id="p1">**</ept>, text is wrapped within the rendering rectangle.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>If the control does have the style <bpt id="p1">**</bpt>ES_AUTOHSCROLL<ept id="p1">**</ept>, the text is clipped at the right edge of the rectangle.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>rect.bottom<ept id="p1">**</ept> element of the <bpt id="p2">*</bpt>rectLayout<ept id="p2">*</ept> object is changed so that the rectangle's dimensions define the part of the original rectangle that is occupied by the text.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>CEditView::SerializeRaw</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`SerializeRaw`</ph> to have a <ph id="ph2">`CArchive`</ph> object read or write the text in the <ph id="ph3">`CEditView`</ph> object to a text file.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Reference to the <ph id="ph1">`CArchive`</ph> object that stores the serialized text.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>differs from <ph id="ph1">`CEditView`</ph>'s internal implementation of <ph id="ph2">`Serialize`</ph> in that it reads and writes only the text, without preceding object-description data.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>CEditView::SetPrinterFont</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`SetPrinterFont`</ph> to set the printer font to the font specified by <ph id="ph2">`pFont`</ph>.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>A pointer to an object of type <ph id="ph1">`CFont`</ph>.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, the font used for printing is based on the display font.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>If you want your view to always use a particular font for printing, include a call to <ph id="ph1">`SetPrinterFont`</ph> in your class's <ph id="ph2">`OnPreparePrinting`</ph> function.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>This virtual function is called before printing occurs, so the font change takes place before the view's contents are printed.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>CEditView::SetTabStops</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Call this function to set the tab stops used for display and printing.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Width of each tab stop, in dialog units.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Only a single tab-stop width is supported.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>( <ph id="ph1">`CEdit`</ph> objects support multiple tab widths.) Widths are in dialog units, which equal one-fourth of the average character width (based on uppercase and lowercase alphabetic characters only) of the font used at the time of printing or displaying.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>You should not use <ph id="ph1">`CEdit::SetTabStops`</ph> because <ph id="ph2">`CEditView`</ph> must cache the tab-stop value.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>This function modifies only the tabs of the object for which it is called.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>To change the tab stops for each <ph id="ph1">`CEditView`</ph> object in your application, call each object's <ph id="ph2">`SetTabStops`</ph> function.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>This code fragment sets the tab stops in the control to every fourth character by carefully measuring the font the control uses.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>NVC_MFCDocView#67</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>CEditView::UnlockBuffer</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Call this member function to unlock the buffer.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`UnlockBuffer`</ph> after you have finished using the pointer returned by <bpt id="p1">[</bpt>LockBuffer<ept id="p1">](#ceditview__lockbuffer)</ept>.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>MFC Sample SUPERPAD</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>CCtrlView Class</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Hierarchy Chart</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>CEdit Class</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>CDocument Class</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>CDocTemplate Class</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>CCtrlView Class</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>CRichEditView Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>