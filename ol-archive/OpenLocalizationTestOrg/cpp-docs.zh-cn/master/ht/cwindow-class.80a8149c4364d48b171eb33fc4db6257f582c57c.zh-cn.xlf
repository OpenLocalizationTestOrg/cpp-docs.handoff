<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05a389179b04b8dc786550d0caf0fb38e131198f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\cwindow-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">072aef96349020950cfb7ee68cbc1005187c1eed</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fb1658596eb8fb8d0b3c1b4fe88750c9b5bfbf97</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CWindow Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CWindow Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class provides methods for manipulating a window.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This class and its members cannot be used in applications that execute in the Windows Runtime.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>CWindow::CWindow</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Constructor.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>CWindow::ArrangeIconicWindows</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Arranges all minimized child windows.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>CWindow::Attach</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Attaches a window to the <ph id="ph1">`CWindow`</ph> object.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>CWindow::BeginPaint</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Prepares the window for painting.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>CWindow::BringWindowToTop</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Brings the window to the top of the Z order.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>CWindow::CenterWindow</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Centers the window against a given window.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>CWindow::ChangeClipboardChain</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Removes the window from the chain of Clipboard viewers.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>CWindow::CheckDlgButton</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Changes the check state of the specified button.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>CWindow::CheckRadioButton</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Checks the specified radio button.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>CWindow::ChildWindowFromPoint</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Retrieves the child window containing the specified point.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>CWindow::ChildWindowFromPointEx</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Retrieves a particular type of child window containing the specified point.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>CWindow::ClientToScreen</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Converts client coordinates to screen coordinates.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>CWindow::Create</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Creates a window.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>CWindow::CreateCaret</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Creates a new shape for the system caret.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>CWindow::CreateGrayCaret</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Creates a gray rectangle for the system caret.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>CWindow::CreateSolidCaret</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Creates a solid rectangle for the system caret.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>CWindow::DeferWindowPos</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Updates the specified multiple-window-position structure for the specified window.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>CWindow::DestroyWindow</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Destroys the window associated with the <ph id="ph1">`CWindow`</ph> object.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>CWindow::Detach</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Detaches the window from the <ph id="ph1">`CWindow`</ph> object.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>CWindow::DlgDirList</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Fills a list box with the names of all files matching a specified path or file name.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>CWindow::DlgDirListComboBox</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Fills a combo box with the names of all files matching a specified path or file name.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>CWindow::DlgDirSelect</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Retrieves the current selection from a list box.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>CWindow::DlgDirSelectComboBox</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Retrieves the current selection from a combo box.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>CWindow::DragAcceptFiles</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Registers whether the window accepts dragged files.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>CWindow::DrawMenuBar</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Redraws the window's menu bar.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>CWindow::EnableScrollBar</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Enables or disables the scroll bar arrows.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>CWindow::EnableWindow</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Enables or disables input.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>CWindow::EndPaint</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Marks the end of painting.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>CWindow::FlashWindow</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Flashes the window once.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>CWindow::GetClientRect</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Retrieves the coordinates of the client area.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>CWindow::GetDC</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Retrieves a device context for the client area.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>CWindow::GetDCEx</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Retrieves a device context for the client area and allows clipping options.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>CWindow::GetDescendantWindow</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Retrieves the specified descendant window.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>CWindow::GetDlgControl</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Retrieves an interface on the specified control.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>CWindow::GetDlgCtrlID</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Retrieves the window's identifier (for child windows only).</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>CWindow::GetDlgHost</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to an interface to the ATL Control hosting container.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>CWindow::GetDlgItem</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Retrieves the specified child window.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>CWindow::GetDlgItemInt</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Translates a control's text to an integer.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>CWindow::GetDlgItemText</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Retrieves a control's text.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>CWindow::GetExStyle</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Retrieves the extended window styles.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>CWindow::GetFont</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Retrieves the window's current font.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>CWindow::GetHotKey</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Determines the hot key associated with the window.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>CWindow::GetIcon</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Retrieves the window's large or small icon.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>CWindow::GetLastActivePopup</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Retrieves the most recently active pop-up window.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>CWindow::GetMenu</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Retrieves the window's menu.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>CWindow::GetNextDlgGroupItem</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Retrieves the previous or next control within a group of controls.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>CWindow::GetNextDlgTabItem</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Retrieves the previous or next control having the <bpt id="p1">**</bpt>WS_TABSTOP<ept id="p1">**</ept> style.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>CWindow::GetParent</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Retrieves the immediate parent window.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>CWindow::GetScrollInfo</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Retrieves the parameters of a scroll bar.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>CWindow::GetScrollPos</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Retrieves the position of the scroll box.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>CWindow::GetScrollRange</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Retrieves the scroll bar range.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>CWindow::GetStyle</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Retrieves the window styles.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>CWindow::GetSystemMenu</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Creates a copy of the system menu for modification.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>CWindow::GetTopLevelParent</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Retrieves the top-level parent or owner window.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>CWindow::GetTopLevelWindow</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Retrieves the top-level owner window.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>CWindow::GetTopWindow</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Retrieves the top-level child window.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>CWindow::GetUpdateRect</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Retrieves the coordinates of the smallest rectangle that completely encloses the update region.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>CWindow::GetUpdateRgn</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Retrieves the update region and copies it into a specified region.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>CWindow::GetWindow</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Retrieves the specified window.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>CWindow::GetWindowContextHelpId</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Retrieves the window's help context identifier.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>CWindow::GetWindowDC</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Retrieves a device context for the entire window.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>CWindow::GetWindowLong</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Retrieves a 32-bit value at a specified offset into the extra window memory.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>CWindow::GetWindowLongPtr</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Retrieves information about the specified window, including a value at a specified offset into the extra window memory.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>CWindow::GetWindowPlacement</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Retrieves the show state and positions.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>CWindow::GetWindowProcessID</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Retrieves the identifier of the process that created the window.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>CWindow::GetWindowRect</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Retrieves the window's bounding dimensions.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>CWindow::GetWindowRgn</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Obtains a copy of the window region of a window.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>CWindow::GetWindowText</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Retrieves the window's text.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>CWindow::GetWindowTextLength</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Retrieves the length of the window's text.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>CWindow::GetWindowThreadID</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Retrieves the identifier of the thread that created the specified window.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>CWindow::GetWindowWord</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Retrieves a 16-bit value at a specified offset into the extra window memory.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>CWindow::GotoDlgCtrl</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Sets the keyboard focus to a control in the dialog box.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>CWindow::HideCaret</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Hides the system caret.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>CWindow::HiliteMenuItem</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Highlights or removes the highlight from a top-level menu item.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>CWindow::Invalidate</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Invalidates the entire client area.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>CWindow::InvalidateRect</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Invalidates the client area within the specified rectangle.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>CWindow::InvalidateRgn</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Invalidates the client area within the specified region.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>CWindow::IsChild</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Determines whether the specified window is a child window.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>CWindow::IsDialogMessage</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Determines whether a message is intended for the specified dialog box.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>CWindow::IsDlgButtonChecked</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Determines the check state of the button.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>CWindow::IsIconic</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Determines whether the window is minimized.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>CWindow::IsParentDialog</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Determines if the parent window of a control is a dialog window.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>CWindow::IsWindow</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Determines whether the specified window handle identifies an existing window.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>CWindow::IsWindowEnabled</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Determines whether the window is enabled for input.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>CWindow::IsWindowUnicode</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Determines whether the specified window is a native Unicode window.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>CWindow::IsWindowVisible</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Determines the window's visibility state.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>CWindow::IsZoomed</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Determines whether the window is maximized.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>CWindow::KillTimer</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Destroys a timer event.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>CWindow::LockWindowUpdate</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Disables or enables drawing in the window.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>CWindow::MapWindowPoints</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Converts a set of points from the window's coordinate space to the coordinate space of another window.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>CWindow::MessageBox</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Displays a message box.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>CWindow::ModifyStyle</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Modifies the window styles.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>CWindow::ModifyStyleEx</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Modifies the extended window styles.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>CWindow::MoveWindow</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Changes the window's size and position.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>CWindow::NextDlgCtrl</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Sets the keyboard focus to the next control in the dialog box.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>CWindow::OpenClipboard</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Opens the Clipboard.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>CWindow::PostMessage</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Places a message in the message queue associated with the thread that created the window.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Returns without waiting for the thread to process the message.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>CWindow::PrevDlgCtrl</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Sets the keyboard focus to the previous control in the dialog box.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>CWindow::Print</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Requests that the window be drawn in a specified device context.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>CWindow::PrintClient</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Requests that the window's client area be drawn in a specified device context.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>CWindow::RedrawWindow</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Updates a specified rectangle or region in the client area.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>CWindow::ReleaseDC</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Releases a device context.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>CWindow::ResizeClient</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Resizes the window.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>CWindow::ScreenToClient</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Converts screen coordinates to client coordinates.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>CWindow::ScrollWindow</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Scrolls the specified client area.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>CWindow::ScrollWindowEx</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Scrolls the specified client area with additional features.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>CWindow::SendDlgItemMessage</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Sends a message to a control.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>CWindow::SendMessage</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Sends a message to the window and does not return until the window procedure has processed the message.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>CWindow::SendMessageToDescendants</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Sends a message to the specified descendant windows.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>CWindow::SendNotifyMessage</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Sends a message to the window.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>If the window was created by the calling thread, <ph id="ph1">`SendNotifyMessage`</ph> does not return until the window procedure has processed the message.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Otherwise, it returns immediately.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>CWindow::SetActiveWindow</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Activates the window.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>CWindow::SetCapture</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Sends all subsequent mouse input to the window.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>CWindow::SetClipboardViewer</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Adds the window to the Clipboard viewer chain.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>CWindow::SetDlgCtrlID</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Changes the window's identifier.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>CWindow::SetDlgItemInt</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Changes a control's text to the string representation of an integer value.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>CWindow::SetDlgItemText</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Changes a control's text.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>CWindow::SetFocus</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Sets the input focus to the window.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>CWindow::SetFont</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Changes the window's current font.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>CWindow::SetHotKey</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Associates a hot key with the window.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>CWindow::SetIcon</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Changes the window's large or small icon.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>CWindow::SetMenu</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Changes the window's current menu.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>CWindow::SetParent</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Changes the parent window.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>CWindow::SetRedraw</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Sets or clears the redraw flag.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>CWindow::SetScrollInfo</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Sets the parameters of a scroll bar.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>CWindow::SetScrollPos</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Changes the position of the scroll box.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>CWindow::SetScrollRange</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Changes the scroll bar range.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>CWindow::SetTimer</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Creates a timer event.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>CWindow::SetWindowContextHelpId</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Sets the window's help context identifier.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>CWindow::SetWindowLong</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Sets a 32-bit value at a specified offset into the extra window memory.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>CWindow::SetWindowLongPtr</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Changes an attribute of the specified window, and also sets a value at the specified offset in the extra window memory.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>CWindow::SetWindowPlacement</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Sets the show state and positions.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>CWindow::SetWindowPos</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Sets the size, position, and Z order.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>CWindow::SetWindowRgn</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Sets the window region of a window.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>CWindow::SetWindowText</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Changes the window's text.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>CWindow::SetWindowWord</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Sets a 16-bit value at a specified offset into the extra window memory.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>CWindow::ShowCaret</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Displays the system caret.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>CWindow::ShowOwnedPopups</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Shows or hides the pop-up windows owned by the window.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>CWindow::ShowScrollBar</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Shows or hides a scroll bar.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>CWindow::ShowWindow</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Sets the window's show state.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>CWindow::ShowWindowAsync</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Sets the show state of a window created by a different thread.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>CWindow::UpdateWindow</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Updates the client area.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>CWindow::ValidateRect</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Validates the client area within the specified rectangle.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>CWindow::ValidateRgn</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Validates the client area within the specified region.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>CWindow::WinHelp</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Starts Windows Help.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Public Operators</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>CWindow::operator HWND</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>Converts the <ph id="ph1">`CWindow`</ph> object to an <ph id="ph2">`HWND`</ph>.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>CWindow::operator =</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Assigns an <ph id="ph1">`HWND`</ph> to the <ph id="ph2">`CWindow`</ph> object.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Public Data Members</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>CWindow::m_hWnd</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>The handle to the window associated with the <ph id="ph1">`CWindow`</ph> object.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>CWindow::rcDefault</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Contains default window dimensions.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>provides the base functionality for manipulating a window in ATL.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Many of the <ph id="ph1">`CWindow`</ph> methods simply wrap one of the Win32 API functions.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>For example, compare the prototypes for <ph id="ph1">`CWindow::ShowWindow`</ph> and <ph id="ph2">`ShowWindow`</ph>:</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>CWindow method</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Win32 function</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>BOOL ShowWindow( int<ept id="p1">**</ept> <ph id="ph1">`nCmdShow`</ph> <bpt id="p2">**</bpt>);<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>BOOL ShowWindow( HWND<ept id="p1">**</ept> <ph id="ph1">`hWnd`</ph> <bpt id="p2">**</bpt>, int<ept id="p2">**</ept> <ph id="ph2">`nCmdShow`</ph> <bpt id="p3">**</bpt>);<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>calls the Win32 function <ph id="ph1">`ShowWindow`</ph> by passing <ph id="ph2">`CWindow::m_hWnd`</ph> as the first parameter.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Every <ph id="ph1">`CWindow`</ph> method that directly wraps a Win32 function passes the <ph id="ph2">`m_hWnd`</ph> member; therefore, much of the <ph id="ph3">`CWindow`</ph> documentation will refer you to the <ph id="ph4">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Not every window-related Win32 function is wrapped by <ph id="ph1">`CWindow`</ph>, and not every <ph id="ph2">`CWindow`</ph> method wraps a Win32 function.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>stores the <ph id="ph1">`HWND`</ph> that identifies a window.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`HWND`</ph> is attached to your object when you:</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Specify an <ph id="ph1">`HWND`</ph> in <ph id="ph2">`CWindow`</ph>'s constructor.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`CWindow::Attach`</ph>.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`CWindow`</ph>'s <bpt id="p1">**</bpt>operator =<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Create or subclass a window using one of the following classes derived from <ph id="ph1">`CWindow`</ph>:</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CWindowImpl<ept id="p1">](../../atl/reference/cwindowimpl-class.md)</ept> Allows you to create a new window or subclass an existing window.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CContainedWindow<ept id="p1">](../../atl/reference/ccontainedwindowt-class.md)</ept> Implements a window contained within another object.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>You can create a new window or subclass an existing window.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CDialogImpl<ept id="p1">](../../atl/reference/cdialogimpl-class.md)</ept> Allows you to create a modal or modeless dialog box.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>For more information about windows, see <bpt id="p1">[</bpt>Windows<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632595)</ept> and subsequent topics in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>For more information about using windows in ATL, see the article <bpt id="p1">[</bpt>ATL Window Classes<ept id="p1">](../../atl/atl-window-classes.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> atlwin.h</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>CWindow::ArrangeIconicWindows</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>Arranges all minimized child windows.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>ArrangeIconicWindows<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632671)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>CWindow::Attach</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>Attaches the window identified by <ph id="ph1">`hWndNew`</ph> to the <ph id="ph2">`CWindow`</ph> object.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>[in] The handle to a window.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#1</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>CWindow::BeginPaint</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>Prepares the window for painting.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>BeginPaint<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd183362)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#2</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>CWindow::BringWindowToTop</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>Brings the window to the top of the Z order.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>BringWindowToTop<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632673)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#3</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>CWindow::CenterWindow</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Centers the window against a given window.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>[in] The handle to the window against which to center.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>If this parameter is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> (the default value), the method will set <ph id="ph1">`hWndCenter`</ph> to the window's parent window if it is a child window.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Otherwise, it will set <ph id="ph1">`hWndCenter`</ph> to the window's owner window.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> if the window is successfully centered; otherwise, <bpt id="p2">**</bpt>FALSE<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#4</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>CWindow::ChangeClipboardChain</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>Removes the window from the chain of Clipboard viewers.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>ChangeClipboardChain<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms649034)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>CWindow::CheckDlgButton</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>Changes the check state of the specified button.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CheckDlgButton<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb761875)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>CWindow::CheckRadioButton</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>Checks the specified radio button.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CheckRadioButton<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb761877)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>CWindow::ChildWindowFromPoint</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Retrieves the child window containing the specified point.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>ChildWindowFromPoint<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632676)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>CWindow::ChildWindowFromPointEx</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>Retrieves a particular type of child window containing the specified point.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>ChildWindowFromPointEx<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632677)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>CWindow::ClientToScreen</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>Converts client coordinates to screen coordinates.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>ClientToScreen<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd183434)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>The second version of this method allows you to convert the coordinates of a <bpt id="p1">[</bpt>RECT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>CWindow::Create</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>Creates a window.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>[in] A pointer to the window's class.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>[in] The handle to the parent or owner window.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>[in] A variable of type <bpt id="p1">[</bpt>_U_RECT<ept id="p1">](../../atl/reference/u-rect-class.md)</ept> specifying the position of the window.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>When this parameter is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, the value of <ph id="ph1">`CWindow::rcDefault`</ph> is used.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>[in] Specifies the name of the window.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>[in] The style of the window.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>The default value is 0, meaning no style is specified.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>For a list of possible values, see <bpt id="p1">[</bpt>CreateWindow<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632679)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>[in] The extended window style.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>The default value is 0, meaning no extended style is specified.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>For a list of possible values, see <bpt id="p1">[</bpt>CreateWindowEx<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632680)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>[in] A variable of type <bpt id="p1">[</bpt>_U_MENUorID<ept id="p1">](../../atl/reference/u-menuorid-class.md)</ept> specifying a handle to a menu or a window identifier.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>The default value is 0U.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>A pointer to the window-creation data contained in a <bpt id="p1">[</bpt>CREATESTRUCT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632603)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>If successful, the handle to the newly created window, specified by <bpt id="p1">[</bpt>m_hWnd<ept id="p1">](#cwindow__m_hwnd)</ept>.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>Otherwise, <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>is defined as <ph id="ph1">`__declspec(selectany) RECT CWindow::rcDefault = {CW_USEDEFAULT, CW_USEDEFAULT, 0, 0};`</ph>.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CreateWindow<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632679)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> for more information.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> If 0 is used as the value for the <ph id="ph1">`MenuOrID`</ph> parameter, it must be specified as 0U (the default value) to avoid a compiler error.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>CWindow::CreateCaret</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Creates a new shape for the system caret.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CreateCaret<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms648399)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>CWindow::CreateGrayCaret</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>Creates a gray rectangle for the system caret.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CreateCaret<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms648399)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>Passes (HBITMAP) 1 for the bitmap handle parameter to the Win32 function.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>CWindow::CreateSolidCaret</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>Creates a solid rectangle for the system caret.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CreateCaret<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms648399)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>Passes (HBITMAP) 0 for the bitmap handle parameter to the Win32 function.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>CWindow::CWindow</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>The constructor.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>[in] The handle to a window.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>Initializes the <bpt id="p1">[</bpt>m_hWnd<ept id="p1">](#cwindow__m_hwnd)</ept> member to <ph id="ph1">`hWnd`</ph>, which by default is <bpt id="p2">**</bpt>NULL<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>does not create a window.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>Classes <bpt id="p1">[</bpt>CWindowImpl<ept id="p1">](../../atl/reference/cwindowimpl-class.md)</ept>, <bpt id="p2">[</bpt>CContainedWindow<ept id="p2">](../../atl/reference/ccontainedwindowt-class.md)</ept>, and <bpt id="p3">[</bpt>CDialogImpl<ept id="p3">](../../atl/reference/cdialogimpl-class.md)</ept> (all of which derive from <ph id="ph1">`CWindow`</ph>) provide a method to create a window or dialog box, which is then assigned to <ph id="ph2">`CWindow::m_hWnd`</ph>.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">[</bpt>CreateWindow<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632679)</ept> Win32 function.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>CWindow::DeferWindowPos</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>Updates the specified multiple-window-position structure for the specified window.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>DeferWindowPos<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632681)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>CWindow::DestroyWindow</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>Destroys the window associated with the <ph id="ph1">`CWindow`</ph> object and sets <bpt id="p1">[</bpt>m_hWnd<ept id="p1">](#cwindow__m_hwnd)</ept> to <bpt id="p2">**</bpt>NULL<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>DestroyWindow<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632682)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>It does not destroy the <ph id="ph1">`CWindow`</ph> object itself.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#5</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>CWindow::Detach</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>Detaches <bpt id="p1">[</bpt>m_hWnd<ept id="p1">](#cwindow__m_hwnd)</ept> from the <ph id="ph1">`CWindow`</ph> object and sets <ph id="ph2">`m_hWnd`</ph> to <bpt id="p2">**</bpt>NULL<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`HWND`</ph> associated with the <ph id="ph2">`CWindow`</ph> object.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#6</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>CWindow::DlgDirList</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>Fills a list box with the names of all files matching a specified path or file name.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>DlgDirList<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb761366)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>CWindow::DlgDirListComboBox</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>Fills a combo box with the names of all files matching a specified path or file name.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>DlgDirListComboBox<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775935)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>CWindow::DlgDirSelect</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>Retrieves the current selection from a list box.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>DlgDirSelectEx<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb761368)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>CWindow::DlgDirSelectComboBox</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>Retrieves the current selection from a combo box.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>DlgDirSelectComboBoxEx<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775937)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>CWindow::DragAcceptFiles</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>Registers whether the window accepts dragged files.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>DragAcceptFiles<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb776406)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>CWindow::DrawMenuBar</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>Redraws the window's menu bar.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>DrawMenuBar<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms647633)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>CWindow::EnableScrollBar</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>Enables or disables the scroll bar arrows.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>EnableScrollBar<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787579)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>CWindow::EnableWindow</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>Enables or disables input.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>EnableWindow<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646291)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#7</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>CWindow::EndPaint</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>Marks the end of painting.</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>EndPaint<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162598)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#2</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>CWindow::FlashWindow</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>Flashes the window once.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>FlashWindow<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms679346)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>CWindow::GetClientRect</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>Retrieves the coordinates of the client area.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetClientRect<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms633503)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#8</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>CWindow::GetDC</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>Retrieves a device context for the client area.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetDC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd144871)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#9</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>CWindow::GetDCEx</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>Retrieves a device context for the client area and allows clipping options.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetDCEx<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd144873)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>CWindow::GetDescendantWindow</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>Finds the descendant window specified by the given identifier.</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>[in] The identifier of the descendant window to be retrieved.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>The handle to a descendant window.</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>searches the entire tree of child windows, not only the windows that are immediate children.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>CWindow::GetDlgControl</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>Call this function to get a pointer to an interface of an ActiveX control that is hosted by a composite control or a control-hosting dialog.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>[in] The resource ID of the control being retrieved.</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>[in] The ID of the interface you would like to get from the control.</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>ppCtrl</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>[out] The pointer to the interface.</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`S_OK`</ph> on success or any valid error <ph id="ph2">`HRESULT`</ph>.</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>For example, the function returns <bpt id="p1">**</bpt>E_FAIL<ept id="p1">**</ept> if the control specified by <ph id="ph1">`nID`</ph> cannot be found and it returns <bpt id="p2">**</bpt>E_NOINTERFACE<ept id="p2">**</ept> if the control can be found, but it doesn't support the interface specified by <ph id="ph2">`iid`</ph>.</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>Using this pointer, you can call methods on the interface.</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>CWindow::GetDlgCtrlID</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>Retrieves the window's identifier (for child windows only).</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetDlgCtrlID<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms645478)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>CWindow::GetDlgHost</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to an interface to the ATL Control hosting container.</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>[in] The resource ID of the control being retrieved.</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>[in] The ID of the interface you would like to get from the control.</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>ppHost</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>[out] The pointer to the interface.</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`S_OK`</ph> if the window specified by <ph id="ph2">`iid`</ph> is a Control Container, and the requested interface could be retrieved.</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">**</bpt>E_FAIL<ept id="p1">**</ept> if the window is not a Control Container, or if the interface requested could not be retrieved.</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>If a window with the specified ID could not be found, then the return value is equal to HRESULT_FROM_WIN32(ERROR_CONTROL_ID_NOT_FOUND).</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>Using this pointer, you can call methods on the interface.</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>CWindow::GetDlgItem</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>Retrieves the specified child window.</source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetDlgItem<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms645481)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>CWindow::GetDlgItemInt</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>Translates a control's text to an integer.</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetDlgItemInt<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms645485)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>CWindow::GetDlgItemText</source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>Retrieves a control's text.</source>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetDlgItemText<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms645489)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>The second version of this method allows you to copy the control's text to a <ph id="ph1">`BSTR`</ph>.</source>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>This version returns <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> if the text is successfully copied; otherwise, <bpt id="p2">**</bpt>FALSE<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>CWindow::GetExStyle</source>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>Retrieves the extended window styles of the window.</source>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>The window's extended styles.</source>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>To retrieve the regular window styles, call <bpt id="p1">[</bpt>GetStyle<ept id="p1">](#cwindow__getstyle)</ept>.</source>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#10</source>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source>CWindow::GetFont</source>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source>Retrieves the window's current font by sending a <bpt id="p1">[</bpt>WM_GETFONT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632624)</ept> message to the window.</source>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source>A font handle.</source>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source>CWindow::GetHotKey</source>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>Determines the hot key associated with the window by sending a <bpt id="p1">**</bpt>WM_GETHOTKEY<ept id="p1">**</ept> message.</source>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source>The virtual key code and modifiers for the hot key associated with the window.</source>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source>For a list of possible modifiers, see <bpt id="p1">[</bpt>WM_GETHOTKEY<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646278)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>For a list of of standard virtual key codes, see Winuser.h.</source>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>CWindow::GetIcon</source>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source>Retrieves the handle to the window's large or small icon.</source>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>[in] If <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> (the default value) the method returns the large icon.</source>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>Otherwise, it returns the small icon.</source>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source>An icon handle.</source>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source>sends a <bpt id="p1">[</bpt>WM_GETICON<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632625)</ept> message to the window.</source>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source>CWindow::GetLastActivePopup</source>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>Retrieves the most recently active pop-up window.</source>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetLastActivePopup<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms633507)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source>CWindow::GetMenu</source>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source>Retrieves the window's menu.</source>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetMenu<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms647640)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>CWindow::GetNextDlgGroupItem</source>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source>Retrieves the previous or next control within a group of controls.</source>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetNextDlgGroupItem<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms645492)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve">
          <source>CWindow::GetNextDlgTabItem</source>
        </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source>Retrieves the previous or next control having the <bpt id="p1">**</bpt>WS_TABSTOP<ept id="p1">**</ept> style.</source>
        </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetNextDlgTabItem<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms645495)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source>CWindow::GetParent</source>
        </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve">
          <source>Retrieves the immediate parent window.</source>
        </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetParent<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms633510)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#11</source>
        </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source>CWindow::GetScrollInfo</source>
        </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve">
          <source>Retrieves the parameters of a scroll bar.</source>
        </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetScrollInfo<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787583)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source>CWindow::GetScrollPos</source>
        </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source>Retrieves the position of the scroll box.</source>
        </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetScrollPos<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787585)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve">
          <source>CWindow::GetScrollRange</source>
        </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve">
          <source>Retrieves the scroll bar range.</source>
        </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetScrollRange<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787587)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source>CWindow::GetStyle</source>
        </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source>Retrieves the window styles of the window.</source>
        </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve">
          <source>The window's styles.</source>
        </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source>To retrieve the extended window styles, call <bpt id="p1">[</bpt>GetExStyle<ept id="p1">](#cwindow__getexstyle)</ept>.</source>
        </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#12</source>
        </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve">
          <source>CWindow::GetSystemMenu</source>
        </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve">
          <source>Creates a copy of the system menu for modification.</source>
        </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetSystemMenu<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms647985)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source>CWindow::GetTopLevelParent</source>
        </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>Retrieves the window's top-level parent window.</source>
        </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve">
          <source>The handle to the top-level parent window.</source>
        </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source>CWindow::GetTopLevelWindow</source>
        </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source>Retrieves the window's top-level parent or owner window.</source>
        </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve">
          <source>The handle to the top-level owner window.</source>
        </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve">
          <source>CWindow::GetTopWindow</source>
        </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve">
          <source>Retrieves the top-level child window.</source>
        </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetTopWindow<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms633514)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#13</source>
        </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve">
          <source>CWindow::GetUpdateRect</source>
        </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve">
          <source>Retrieves the coordinates of the smallest rectangle that completely encloses the update region.</source>
        </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetUpdateRect<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd144943)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source>CWindow::GetUpdateRgn</source>
        </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve">
          <source>Retrieves the update region and copies it into a specified region.</source>
        </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetUpdateRgn<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd144944)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve">
          <source>CWindow::GetWindow</source>
        </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve">
          <source>Retrieves the specified window.</source>
        </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve">
          <source>See <ph id="ph1">`GetWindow`</ph> in the <ph id="ph2">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve">
          <source>CWindow::GetWindowContextHelpId</source>
        </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve">
          <source>Retrieves the window's help context identifier.</source>
        </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetWindowContextHelpId<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb776429)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve">
          <source>CWindow::GetWindowDC</source>
        </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve">
          <source>Retrieves a device context for the entire window.</source>
        </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetWindowDC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd144947)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#14</source>
        </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve">
          <source>CWindow::GetWindowLong</source>
        </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve">
          <source>Retrieves a 32-bit value at a specified offset into the extra window memory.</source>
        </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetWindowLong<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms633584)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve">
          <source>To write code that is compatible with both 32-bit and 64-bit versions of Windows, use <bpt id="p1">[</bpt>CWindow::GetWindowLongPtr<ept id="p1">](#cwindow__getwindowlongptr)</ept>.</source>
        </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve">
          <source>CWindow::GetWindowLongPtr</source>
        </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve">
          <source>Retrieves information about the specified window, including a value at a specified offset into the extra window memory.</source>
        </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetWindowLongPtr<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms633585)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve">
          <source>If you are retrieving a pointer or a handle, this function supersedes the <ph id="ph1">`CWindow::GetWindowLong`</ph> method.</source>
        </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve">
          <source>Pointers and handles are 32 bits on 32-bit Windows and 64 bits on 64-bit Windows.</source>
        </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve">
          <source>To write code that is compatible with both 32-bit and 64-bit versions of Windows, use <ph id="ph1">`CWindow::GetWindowLongPtr`</ph>.</source>
        </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve">
          <source>CWindow::GetWindowPlacement</source>
        </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve">
          <source>Retrieves the show state and positions.</source>
        </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetWindowPlacement<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms633518)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve">
          <source>CWindow::GetWindowProcessID</source>
        </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve">
          <source>Retrieves the identifier of the process that created the window.</source>
        </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetWindowThreadProcessID<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms633522)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#15</source>
        </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve">
          <source>CWindow::GetWindowRect</source>
        </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve">
          <source>Retrieves the window's bounding dimensions.</source>
        </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetWindowRect<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms633519)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve">
          <source>CWindow::GetWindowRgn</source>
        </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve">
          <source>Obtains a copy of the window region of a window.</source>
        </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetWindowRgn<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd144950)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve">
          <source>CWindow::GetWindowText</source>
        </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve">
          <source>Retrieves the window's text.</source>
        </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve">
          <source>A buffer to which to write the window text.</source>
        </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve">
          <source>The size of the buffer in characters; also the maximum number of characters to write.</source>
        </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`BSTR`</ph> in which to store the window text.</source>
        </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CString`</ph> in which to store the window text.</source>
        </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve">
          <source>If the text is successfully copied, the return value is <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>; otherwise, the return value is <bpt id="p2">**</bpt>FALSE<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetWindowText<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms633520)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve">
          <source>The second version of this method allows you to store the text in a <ph id="ph1">`BSTR`</ph>; the third version allows you to store the result in a <bpt id="p1">[</bpt>CString<ept id="p1">](../../atl-mfc-shared/reference/cstringt-class.md)</ept>, since <ph id="ph2">`CSimpleString`</ph> is the base class of <ph id="ph3">`CString`</ph>.</source>
        </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve">
          <source>CWindow::GetWindowTextLength</source>
        </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve">
          <source>Retrieves the length of the window's text.</source>
        </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetWindowTextLength<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms633521)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve">
          <source>CWindow::GetWindowThreadID</source>
        </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve">
          <source>Retrieves the identifier of the thread that created the specified window.</source>
        </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetWindowThreadProcessID<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms633522)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#16</source>
        </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve">
          <source>CWindow::GetWindowWord</source>
        </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve">
          <source>Retrieves a 16-bit value at a specified offset into the extra window memory.</source>
        </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>GetWindowLong<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms633584)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve">
          <source>CWindow::GotoDlgCtrl</source>
        </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve">
          <source>Sets the keyboard focus to a control in the dialog box.</source>
        </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>WM_NEXTDLGCTL<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms645432)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve">
          <source>CWindow::HideCaret</source>
        </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve">
          <source>Hides the system caret.</source>
        </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>HideCaret<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms648403)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#17</source>
        </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve">
          <source>CWindow::HiliteMenuItem</source>
        </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve">
          <source>Highlights or removes the highlight from a top-level menu item.</source>
        </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>HiliteMenuItem<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms647986)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve">
          <source>CWindow::Invalidate</source>
        </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve">
          <source>Invalidates the entire client area.</source>
        </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>InvalidateRect<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd145002)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve">
          <source>Passes <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> for the <ph id="ph1">`RECT`</ph> parameter to the <ph id="ph2">`InvalidateRect`</ph> Win32 function.</source>
        </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#18</source>
        </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve">
          <source>CWindow::InvalidateRect</source>
        </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve">
          <source>Invalidates the client area within the specified rectangle.</source>
        </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>InvalidateRect<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd145002)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve">
          <source>CWindow::InvalidateRgn</source>
        </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve">
          <source>Invalidates the client area within the specified region.</source>
        </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>InvalidateRgn<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd145003)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve">
          <source>Specifies a <ph id="ph1">`void`</ph> return type, while the <ph id="ph2">`InvalidateRgn`</ph> Win32 function always returns <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve">
          <source>CWindow::IsChild</source>
        </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve">
          <source>Determines whether the specified window is a child window.</source>
        </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>IsChild<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms633524)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve">
          <source>CWindow::IsDialogMessage</source>
        </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve">
          <source>Determines whether a message is intended for the specified dialog box.</source>
        </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>IsDialogMessage<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms645498)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve">
          <source>CWindow::IsDlgButtonChecked</source>
        </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve">
          <source>Determines the check state of the button.</source>
        </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>IsDlgButtonChecked<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb761879)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve">
          <source>CWindow::IsIconic</source>
        </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve">
          <source>Determines whether the window is minimized.</source>
        </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>IsIconic<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms633527)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#19</source>
        </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve">
          <source>CWindow::IsParentDialog</source>
        </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve">
          <source>Determines if the parent window of the control is a dialog window.</source>
        </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve">
          <source>Returns TRUE if the parent window is a dialog, FALSE otherwise.</source>
        </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve">
          <source>CWindow::IsWindow</source>
        </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve">
          <source>Determines whether the specified window handle identifies an existing window.</source>
        </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>IsWindow<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms633528)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#20</source>
        </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve">
          <source>CWindow::IsWindowEnabled</source>
        </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve">
          <source>Determines whether the window is enabled for input.</source>
        </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>IsWindowEnabled<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646303)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#21</source>
        </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve">
          <source>CWindow::IsWindowVisible</source>
        </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve">
          <source>Determines the window's visibility state.</source>
        </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>IsWindowVisible<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms633530)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#22</source>
        </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve">
          <source>CWindow::IsWindowUnicode</source>
        </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve">
          <source>Determines whether the specified window is a native Unicode window.</source>
        </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>IsWindowUnicode<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms633529)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#23</source>
        </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve">
          <source>CWindow::IsZoomed</source>
        </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve">
          <source>Determines whether the window is maximized.</source>
        </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>IsZoomed<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms633531)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve">
          <source>CWindow::KillTimer</source>
        </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve">
          <source>Destroys a timer event created by <ph id="ph1">`CWindow::SetTimer`</ph>.</source>
        </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>KillTimer<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms644903)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve">
          <source>CWindow::LockWindowUpdate</source>
        </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve">
          <source>Disables or enables drawing in the window by calling the <bpt id="p1">[</bpt>LockWindowUpdate<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd145034)</ept> Win32 function.</source>
        </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve">
          <source>[in] If <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> (the default value), the window will be locked.</source>
        </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve">
          <source>Otherwise, it will be unlocked.</source>
        </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> if the window is successfully locked; otherwise, <bpt id="p2">**</bpt>FALSE<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`bLock`</ph> is <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>, this method passes <bpt id="p2">[</bpt>m_hWnd<ept id="p2">](#cwindow__m_hwnd)</ept> to the Win32 function; otherwise, it passes <bpt id="p3">**</bpt>NULL<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve">
          <source>CWindow::m_hWnd</source>
        </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve">
          <source>Contains a handle to the window associated with the <ph id="ph1">`CWindow`</ph> object.</source>
        </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve">
          <source>CWindow::MapWindowPoints</source>
        </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve">
          <source>Converts a set of points from the window's coordinate space to the coordinate space of another window.</source>
        </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>MapWindowPoints<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd145046)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve">
          <source>The second version of this method allows you to convert the coordinates of a <bpt id="p1">[</bpt>RECT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve">
          <source>CWindow::MessageBox</source>
        </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve">
          <source>Displays a message box.</source>
        </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>MessageBox<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms645505)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#24</source>
        </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve">
          <source>CWindow::ModifyStyle</source>
        </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve">
          <source>Modifies the window styles of the <ph id="ph1">`CWindow`</ph> object.</source>
        </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve">
          <source>[in] Specifies the window styles to be removed during style modification.</source>
        </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve">
          <source>[in] Specifies the window styles to be added during style modification.</source>
        </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve">
          <source>[in] Window-positioning flags.</source>
        </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve">
          <source>For a list of possible values, see the <bpt id="p1">[</bpt>SetWindowPos<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms633545)</ept> function in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> if the window styles are modified; otherwise, <bpt id="p2">**</bpt>FALSE<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve">
          <source>Styles to be added or removed can be combined by using the bitwise OR ( &amp;#124; ) operator.</source>
        </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>CreateWindow<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632679)</ept> function in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>for information about the available window styles.</source>
        </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`nFlags`</ph> is nonzero, <ph id="ph2">`ModifyStyle`</ph> calls the Win32 function <ph id="ph3">`SetWindowPos`</ph>, and redraws the window by combining <ph id="ph4">`nFlags`</ph> with the following four flags:</source>
        </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve">
          <source>Retains the current size.</source>
        </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve">
          <source>Retains the current position.</source>
        </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve">
          <source>Retains the current Z order.</source>
        </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve">
          <source>Does not activate the window.</source>
        </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve">
          <source>To modify a window's extended styles, call <bpt id="p1">[</bpt>ModifyStyleEx<ept id="p1">](#cwindow__modifystyleex)</ept>.</source>
        </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#25</source>
        </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve">
          <source>CWindow::ModifyStyleEx</source>
        </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve">
          <source>Modifies the extended window styles of the <ph id="ph1">`CWindow`</ph> object.</source>
        </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve">
          <source>[in] Specifies the extended styles to be removed during style modification.</source>
        </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve">
          <source>[in] Specifies the extended styles to be added during style modification.</source>
        </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve">
          <source>[in] Window-positioning flags.</source>
        </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve">
          <source>For a list of possible values, see the <bpt id="p1">[</bpt>SetWindowPos<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms633545)</ept> function in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> if the extended window styles are modified; otherwise, <bpt id="p2">**</bpt>FALSE<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve">
          <source>Styles to be added or removed can be combined by using the bitwise OR ( &amp;#124; ) operator.</source>
        </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>CreateWindowEx<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632680)</ept> function in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>for information about the available extended styles.</source>
        </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`nFlags`</ph> is nonzero, <ph id="ph2">`ModifyStyleEx`</ph> calls the Win32 function <ph id="ph3">`SetWindowPos`</ph>, and redraws the window by combining <ph id="ph4">`nFlags`</ph> with the following four flags:</source>
        </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve">
          <source>Retains the current size.</source>
        </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve">
          <source>Retains the current position.</source>
        </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve">
          <source>Retains the current Z order.</source>
        </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve">
          <source>Does not activate the window.</source>
        </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve">
          <source>To modify windows using regular window styles, call <bpt id="p1">[</bpt>ModifyStyle<ept id="p1">](#cwindow__modifystyle)</ept>.</source>
        </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#26</source>
        </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve">
          <source>CWindow::MoveWindow</source>
        </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve">
          <source>Changes the window's size and position.</source>
        </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve">
          <source>For a top-level window object, the x and y parameters are relative to the upper-left corner of the screen.</source>
        </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve">
          <source>For a child window object, they are relative to the upper-left corner of the parent window's client area.</source>
        </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve">
          <source>The second version of this method uses a <bpt id="p1">[</bpt>RECT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure to determine the window's new position, width, and height.</source>
        </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve">
          <source>CWindow::NextDlgCtrl</source>
        </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve">
          <source>Sets the keyboard focus to the next control in the dialog box.</source>
        </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>WM_NEXTDLGCTL<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms645432)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve">
          <source>CWindow::OpenClipboard</source>
        </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve">
          <source>Opens the Clipboard.</source>
        </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>OpenClipboard<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms649048)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve">
          <source>CWindow::operator HWND</source>
        </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve">
          <source>Converts a <ph id="ph1">`CWindow`</ph> object to an <ph id="ph2">`HWND`</ph>.</source>
        </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve">
          <source>```operator HWND() const throw();</source>
        </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve">
          <source>CWindow&amp; operator= (HWND hWnd) throw();</source>
        </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve">
          <source>BOOL PostMessage(UINT message, WPARAM wParam = 0, LPARAM lParam = 0) throw();</source>
        </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve">
          <source>void PrevDlgCtrl() const throw();</source>
        </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve">
          <source>void Print(HDC hDC,  DWORD dwFlags) const throw();</source>
        </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve">
          <source>void PrintClient(HDC hDC,  DWORD dwFlags) const throw();</source>
        </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve">
          <source>static RECT rcDefault;</source>
        </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve">
          <source>BOOL RedrawWindow(LPCRECT lpRectUpdate = NULL, HRGN hRgnUpdate = NULL, UINT flags = RDW_INVALIDATE | RDW_UPDATENOW | RDW_ERASE);</source>
        </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve">
          <source>throw()</source>
        </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve">
          <source>int ReleaseDC(HDC hDC);</source>
        </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve">
          <source>BOOL ResizeClient(int nWidth, int nHeight, BOOL bRedraw = FALSE) throw();</source>
        </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve">
          <source>BOOL ScreenToClient(LPPOINT lpPoint) const throw();</source>
        </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve">
          <source>BOOL ScreenToClient(LPRECT lpRect) const throw();</source>
        </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve">
          <source>BOOL ScrollWindow(int xAmount, int yAmount, LPCRECT lpRect = NULL, LPCRECT lpClipRect = NULL) throw();</source>
        </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve">
          <source>int ScrollWindowEx(int dx, int dy, LPCRECT lpRectScroll, LPCRECT lpRectClip, HRGN hRgnUpdate, LPRECT lpRectUpdate, UINT flags) throw();</source>
        </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve">
          <source>LRESULT SendDlgItemMessage(int nID, UINT message, WPARAM wParam = 0, LPARAM lParam = 0) throw();</source>
        </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve">
          <source>LRESULT SendMessage(UINT message, WPARAM wParam = 0, LPARAM lParam = 0) throw(); static LRESULT SendMessage(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam) throw();</source>
        </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve">
          <source>void SendMessageToDescendants(UINT message, WPARAM wParam = 0, LPARAM lParam = 0, BOOL bDeep = TRUE) throw();</source>
        </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve">
          <source>BOOL SendNotifyMessage(UINT message, WPARAM wParam = 0, LPARAM lParam = 0) throw();</source>
        </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve">
          <source>HWND SetActiveWindow() throw();</source>
        </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve">
          <source>HWND SetCapture() throw();</source>
        </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve">
          <source>HWND SetClipboardViewer() throw();</source>
        </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve">
          <source>int SetDlgCtrlID(int nID) throw();</source>
        </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve">
          <source>BOOL SetDlgItemInt(int nID, UINT nValue, BOOL bSigned = TRUE) throw();</source>
        </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve">
          <source>BOOL SetDlgItemText(int nID,  LPCTSTR lpszString) throw();</source>
        </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve">
          <source>HWND SetFocus() throw();</source>
        </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve">
          <source>void SetFont(HFONT hFont,  BOOL bRedraw = TRUE) throw();</source>
        </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve">
          <source>int SetHotKey(WORD wVirtualKeyCode,  WORD wModifiers) throw();</source>
        </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve">
          <source>HICON SetIcon(HICON hIcon,  BOOL bBigIcon = TRUE) throw();</source>
        </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve">
          <source>BOOL SetMenu(HMENU hMenu) throw();</source>
        </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve">
          <source>HWND SetParent(HWND hWndNewParent) throw();</source>
        </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve">
          <source>void SetRedraw(BOOL bRedraw = TRUE) throw();</source>
        </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve">
          <source>int SetScrollInfo(int nBar, LPSCROLLINFO lpScrollInfo, BOOL bRedraw = TRUE) throw();</source>
        </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve">
          <source>int SetScrollPos(int nBar, int nPos, BOOL bRedraw = TRUE) throw();</source>
        </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve">
          <source>BOOL SetScrollRange(int nBar, int nMinPos, int nMaxPos, BOOL bRedraw = TRUE) throw();</source>
        </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve">
          <source>UINT SetTimer(UINT nIDEvent, UINT nElapse, void (CALLBACK* lpfnTimer)(HWND, UINT, UINT, DWORD) = NULL) throw();</source>
        </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve">
          <source>BOOL SetWindowContextHelpId(DWORD dwContextHelpId) throw();</source>
        </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve">
          <source>LONG SetWindowLong(int nIndex,  LONG dwNewLong) throw();</source>
        </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve">
          <source>LONG_PTR SetWindowLongPtr(int nIndex,  LONG_PTR dwNewLong) throw();</source>
        </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve">
          <source>BOOL SetWindowPlacement(const WINDOWPLACEMENT FAR* lpwndpl);</source>
        </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve">
          <source>BOOL SetWindowPos(HWND hWndInsertAfter, int x, int y, int cx, int cy, UINT nFlags) throw(); BOOL SetWindowPos(HWND hWndInsertAfter, LPCRECT lpRect, UINT nFlags) throw();</source>
        </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve">
          <source>int SetWindowRgn(HRGN hRgn,  BOOL bRedraw = FALSE) throw();</source>
        </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve">
          <source>BOOL SetWindowText(LPCTSTR lpszString) throw();</source>
        </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve">
          <source>WORD SetWindowWord(int nIndex,  WORD wNewWord) throw();</source>
        </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve">
          <source>BOOL ShowCaret() throw();</source>
        </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve">
          <source>BOOL ShowOwnedPopups(BOOL bShow = TRUE) throw();</source>
        </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve">
          <source>BOOL ShowScrollBar(UINT nBar,  BOOL bShow = TRUE) throw();</source>
        </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve">
          <source>BOOL ShowWindow(int nCmdShow) throw();</source>
        </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve">
          <source>BOOL ShowWindowAsync(int nCmdShow) throw();</source>
        </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve">
          <source>BOOL UpdateWindow() throw();</source>
        </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve">
          <source>BOOL ValidateRect(LPCRECT lpRect) throw();</source>
        </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve">
          <source>BOOL ValidateRgn(HRGN hRgn) throw();</source>
        </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve">
          <source>BOOL WinHelp(LPCTSTR lpszHelp, UINT nCmd = HELP_CONTEXT, DWORD dwData = 0) throw();</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>