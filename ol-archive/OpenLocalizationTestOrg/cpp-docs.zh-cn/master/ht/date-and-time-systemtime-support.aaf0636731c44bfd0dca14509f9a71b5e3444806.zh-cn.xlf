<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d75205e40527cec96ea45e21e7a6c81267d38aee</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl-mfc-shared\date-and-time-systemtime-support.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4677a9ccdc93444fabb81b2c533845f9a91791f3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4923b5c14e80f31e97a50d7b933c83d84c98fbfb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Date and Time: SYSTEMTIME Support | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Date and Time: SYSTEMTIME Support</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>CTime<ept id="p1">](../atl-mfc-shared/reference/ctime-class.md)</ept> class has constructors that accept system and file times from Win32.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If you use <ph id="ph1">`CTime`</ph> objects for these purposes, you must modify their initialization accordingly, as described in this article.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For information about the SYSTEMTIME structure, see <bpt id="p1">[</bpt>SYSTEMTIME<ept id="p1">](../mfc/reference/systemtime-structure1.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For information about the FILETIME structure, see <bpt id="p1">[</bpt>FILETIME<ept id="p1">](../mfc/reference/filetime-structure.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>MFC still provides <ph id="ph1">`CTime`</ph> constructors that take time arguments in the MS-DOS style, but, starting in MFC version 3.0, the <ph id="ph2">`CTime`</ph> class also supports a constructor that takes a Win32 <ph id="ph3">`SYSTEMTIME`</ph> structure and another that takes a Win32 <ph id="ph4">`FILETIME`</ph> structure.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">`CTime`</ph> constructors are:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>CTime(const SYSTEMTIME&amp; <ph id="ph1">`sysTime`</ph>);</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>CTime(const FILETIME&amp; <ph id="ph1">`fileTime`</ph>);</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`fileTime`</ph> parameter is a reference to a Win32 <ph id="ph2">`FILETIME`</ph> structure, which represents time as a 64-bit value, a more convenient format for internal storage than a <ph id="ph3">`SYSTEMTIME`</ph> structure and the format used by Win32 to represent the time of file creation.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If your code contains a <ph id="ph1">`CTime`</ph> object initialized with the system time, you should use the <ph id="ph2">`SYSTEMTIME`</ph> constructor in Win32.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You most likely will not use <ph id="ph1">`CTime`</ph> <ph id="ph2">`FILETIME`</ph> initialization directly.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If you use a <ph id="ph1">`CFile`</ph> object to manipulate a file, <bpt id="p1">[</bpt>CFile::GetStatus<ept id="p1">](../mfc/reference/cfile-class.md#cfile__getstatus)</ept> retrieves the file timestamp for you via a <ph id="ph2">`CTime`</ph> object initialized with a <ph id="ph3">`FILETIME`</ph> structure.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>What do you want to know more about</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>General date and time programming in MFC</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Automation support of date and time programming</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>General-purpose classes for date and time programming</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Date and Time</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>