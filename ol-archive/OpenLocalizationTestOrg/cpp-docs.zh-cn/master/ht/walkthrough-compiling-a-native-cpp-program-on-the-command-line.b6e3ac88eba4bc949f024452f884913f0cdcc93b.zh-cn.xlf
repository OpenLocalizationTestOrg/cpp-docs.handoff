<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">333c6a8bfac2bb99807846fabc41cd685c46eedf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\build\walkthrough-compiling-a-native-cpp-program-on-the-command-line.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f1a2261d455eaa2609df1d251fe6d36c3e5a0d5c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">60889b7467a153164504a1a5c210eb9e03c4680b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Walkthrough: Compiling a Native C++ Program on the Command Line | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Walkthrough: Compiling a Native C++ Program on the Command Line</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Visual C++ includes a command-line C++ compiler that you can use to create everything from basic console apps to Universal Windows apps, Windows Store apps, and .NET components.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In this walkthrough, you create a basic, "Hello, World"-style C++ program by using a text editor, and then compile it on the command line.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If you'd like to try the Visual Studio IDE instead of using the command line, see <bpt id="p1">[</bpt>Walkthrough: Working with Projects and Solutions (C++)<ept id="p1">](../ide/walkthrough-working-with-projects-and-solutions-cpp.md)</ept> or <bpt id="p2">[</bpt>Using the Visual Studio IDE for C++ Desktop Development<ept id="p2">](../ide/using-the-visual-studio-ide-for-cpp-desktop-development.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In this walkthrough, you can use your own Visual C++ program instead of typing the one that's shown, or you can use a Visual C++ code sample from another help article.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To complete this walkthrough, you must have installed either Visual Studio and the optional Visual C++ components, or the Microsoft Visual C++ Build Tools.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Visual Studio is a powerful integrated development environment that supports a full-featured editor, resource managers, debuggers, and compilers for many languages and platforms.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For information on these features and  how to download and install Visual Studio, including the free Visual Studio Community edition, see <bpt id="p1">[</bpt>VisualStudio.com<ept id="p1">](https://www.visualstudio.com/)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The Microsoft Visual C++ Build Tools installs only the command-line compiler, tools, and libraries you need to build C and C++ programs.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>It's perfect for build labs or classroom exercises and installs relatively quickly.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To install only the command-line tools, download and install <bpt id="p1">[</bpt>Microsoft Visual C++ Build Tools 2015<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=691126)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Before you can build a C or C++ program on the command line, you must verify that the tools are installed, and that you can access them from the command line.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Visual C++ has complex requirements for the command-line environment in order to find the tools, headers, and libraries it uses.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>You can't use Visual C++ in a plain command prompt window<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Fortunately, Visual C++ installs shortcuts for you to launch a developer command prompt that has the environment set up for command line builds.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Unfortunately, the names of the developer command prompt shortcuts and where they are located are different in almost every version of Visual C++ and on different versions of Windows.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Your first walkthrough task is finding the right one to use.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A developer command prompt shortcut automatically sets the correct paths for the compiler and tools, and for any required headers and libraries.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You must set these environment values yourself if you use a regular Command Prompt window.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Setting the Path and Environment Variables for Command-Line Builds<ept id="p1">](../build/setting-the-path-and-environment-variables-for-command-line-builds.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>We recommend you use a developer command prompt shortcut instead of building your own.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Open a developer command prompt</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If you have installed Visual Studio 2015 on Windows 10, open the Start menu and choose <bpt id="p1">**</bpt>All apps<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Scroll down and open the <bpt id="p1">**</bpt>Visual Studio 2015<ept id="p1">**</ept> folder (not the Visual Studio 2015 app).</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Choose <bpt id="p1">**</bpt>Developer Command Prompt for VS2015<ept id="p1">**</ept> to open the command prompt window.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If you have installed Microsoft Visual C++ Build Tools 2015 on Windows 10, open the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> menu and choose <bpt id="p2">**</bpt>All apps<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Scroll down and open the <bpt id="p1">**</bpt>Visual C++ Build Tools<ept id="p1">**</ept> folder.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Choose <bpt id="p1">**</bpt>Visual C++ 2015 x86 Native Tools Command Prompt<ept id="p1">**</ept> to open the command prompt window.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If you are using a different version of Visual Studio or are running a different version of Windows, look in your Start menu or Start page for a Visual Studio tools folder that contains a developer command prompt shortcut.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You can also use the Windows search function to search for "developer command prompt" and choose one that matches your installed version of Visual Studio.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Use the shortcut to open the command prompt window.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Next, verify that the Visual C++ developer command prompt is set up correctly.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In the command prompt window, enter <ph id="ph1">`cl`</ph> and verify that the output looks something like this:</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>There may be differences in the current directory or version numbers, depending on the version of Visual C++ and any updates installed.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If this is similar to what you see, then you are ready to build C or C++ programs at the command line.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If you get an error such as "'cl' is not recognized as an internal or external command, operable program or batch file," error C1034, or error LNK1104 when you run the <bpt id="p1">**</bpt>cl<ept id="p1">**</ept> command, then either you are not using a developer command prompt, or something is wrong with your installation of Visual C++.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You must fix this issue before you can continue.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If you can't find the developer command prompt shortcut, or if you get an error message when you enter <ph id="ph1">`cl`</ph>, then your Visual C++ installation may have a problem.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Try reinstalling the Visual C++ component in Visual Studio, or reinstall the Microsoft Visual C++ Build Tools.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Don't go on to the next section until this works.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For more information about installing and troubleshooting Visual C++, see <bpt id="p1">[</bpt>Install Visual Studio<ept id="p1">](/visualstudio/install/install-visual-studio)</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Depending on the version of Windows on the computer and the system security configuration, you might have to right-click to open the shortcut menu for the developer command prompt shortcut and then choose <bpt id="p1">**</bpt>Run as Administrator<ept id="p1">**</ept> to successfully build and run the program that you create by following this walkthrough.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Create a Visual C++ source file and compile it on the command line</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In the developer command prompt window, enter <bpt id="p1">**</bpt>md c:\hello<ept id="p1">**</ept> to create a directory, and then enter <bpt id="p2">**</bpt>cd c:\hello<ept id="p2">**</ept> to change to that directory.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This is the directory that your source file and the compiled program are created in.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Enter <bpt id="p1">**</bpt>notepad hello.cpp<ept id="p1">**</ept> in the command prompt window.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Choose <bpt id="p1">**</bpt>Yes<ept id="p1">**</ept> when Notepad prompts you to create a file.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This opens a blank Notepad window, ready for you to enter your code in a file named hello.cpp.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In Notepad, enter the following lines of code:</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This is a very simple program that will write one line of text on the screen and then exit.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To minimize errors, copy this code and paste it into Notepad.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Save your work!</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>In Notepad, on the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> menu, choose <bpt id="p2">**</bpt>Save<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Congratulations, you have created a Visual C++ source file, hello.cpp, that is ready to compile.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Switch back to the developer command prompt window.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Enter <bpt id="p1">**</bpt>dir<ept id="p1">**</ept> at the command prompt to list the contents of the c:\hello directory.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>You should see the source file hello.cpp in the directory listing, which looks something like this:</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The dates and other details will differ on your computer.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If you don't see your source code file, hello.cpp, make sure you've changed to the c:\hello directory you created, and in Notepad, make sure that you saved your source file in this directory.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Also make sure that you saved the source code with a .cpp file name extension, not a .txt extension.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>At the developer command prompt, enter <ph id="ph1">`cl /EHsc hello.cpp`</ph> to compile your program.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The cl.exe compiler generates an .obj file that contains the compiled code, and then runs the linker to create an executable program named hello.exe.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This name appears in the lines of output information that the compiler displays.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The output of the compiler should look something like this:</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>If you get an error such as "'cl' is not recognized as an internal or external command, operable program or batch file," error C1034, or error LNK1104, your developer command prompt is not set up correctly.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For information on how to fix this issue, go back to the <bpt id="p1">**</bpt>Open a developer command prompt<ept id="p1">**</ept> section.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If you get a different compiler or linker error or warning, review your source code to correct any errors, then save it and run the compiler again.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For information about specific errors, use the search box on this MSDN page to look for the error number.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>To run the hello.exe program, at the command prompt, enter <ph id="ph1">`hello`</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The program displays this text and exits:</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Congratulations, you've just compiled and run a C++ program by using the command-line tools.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Next Steps</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This "Hello, World" example is about as simple as a C++ program can get.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Real world programs have header files and more source files, link in libraries, and do useful work.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>You can use the steps in this walkthrough to build your own C++ code instead of typing the sample code shown.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>You can also build many C++ code sample programs that you find elsewhere.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>You can put your source code and build your apps in any writeable directory.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>By default, the Visual Studio IDE creates projects in your Documents folder, in a Projects subfolder of a Visual Studio folder named for your version of Visual Studio.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>To compile a program that has multiple source code files, enter them all on the command line, like this:</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>/EHsc<ept id="p1">**</ept> command-line option instructs the compiler to enable C++ exception handling.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>/EH (Exception Handling Model)<ept id="p1">](../build/reference/eh-exception-handling-model.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>When you supply multiple source files like this, the compiler uses the first input file to create the program name.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>In this case, it outputs a program called file1.exe.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>To change the name to program1.exe, add an <bpt id="p1">[</bpt>/out<ept id="p1">](../build/reference/out-output-file-name.md)</ept> linker option:</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>And to catch more programming mistakes automatically, we recommend you compile by using either the <bpt id="p1">[</bpt>/W3<ept id="p1">](../build/reference/compiler-option-warning-level.md)</ept> or <bpt id="p2">[</bpt>/W4<ept id="p2">](../build/reference/compiler-option-warning-level.md)</ept> warning level option:</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The compiler, cl.exe, has many more options you can apply to build, optimize, debug, and analyze your code.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>For a quick list, enter <bpt id="p1">**</bpt>cl /?<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>at the developer command prompt.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>You can also compile and link separately and apply linker options in more complex build scenarios.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For more information on compiler and linker options and usage, see  <bpt id="p1">[</bpt>C/C++ Building Reference<ept id="p1">](../build/reference/c-cpp-building-reference.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>You can use NMAKE and makefiles, or MSBuild and project files to configure and build more complex projects on the command line.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For more information on using these tools, see <bpt id="p1">[</bpt>NMAKE Reference<ept id="p1">](../build/nmake-reference.md)</ept> and <bpt id="p2">[</bpt>MSBuild<ept id="p2">](../build/msbuild-visual-cpp.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The C and C++ languages are similar, but not the same.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The Visual C++ compiler uses a simple rule to determine which language to use when it compiles your code.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>By default, the Visual C++ compiler treats all files that end in .c as C source code, and all files that end in .cpp as C++ source code.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>To force the compiler to treat all files as C++ regardless of file name extension, use the <bpt id="p1">[</bpt>/TC<ept id="p1">](../build/reference/tc-tp-tc-tp-specify-source-file-type.md)</ept> compiler option.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The Visual C++ compiler includes a C Runtime Library (CRT) that is generally compatible with the ISO C99 standard, but not strictly compliant.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>In most cases, portable code will compile and run as expected.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Visual C++ does not support some of the CRT changes in ISO C11.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Certain library functions and POSIX function names are deprecated by the Visual C++ compiler.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The functions are supported, but the preferred names have changed.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Security Features in the CRT<ept id="p1">](../c-runtime-library/security-features-in-the-crt.md)</ept> and <bpt id="p2">[</bpt>Compiler Warning (level 3) C4996<ept id="p2">](../error-messages/compiler-warnings/compiler-warning-level-3-c4996.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Visual C++ Guided Tour</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>C++ Language Reference</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Building C/C++ Programs</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Compiler Options</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>