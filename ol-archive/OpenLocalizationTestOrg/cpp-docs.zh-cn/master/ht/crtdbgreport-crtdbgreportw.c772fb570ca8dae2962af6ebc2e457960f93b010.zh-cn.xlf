<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">44f01001381fa5e8097135f54c1abcd777224924</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\reference\crtdbgreport-crtdbgreportw.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">49d37919cbca0104595499296178ced661506ed1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b99cf0a4589c3fa3f0cf82fe014333ce79055d4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>_CrtDbgReport, _CrtDbgReportW | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>_CrtDbgReport, _CrtDbgReportW</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Generates a report with a debugging message and sends the report to three possible destinations (debug version only).</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Report type: <ph id="ph1">`_CRT_WARN`</ph>, <ph id="ph2">`_CRT_ERROR`</ph>, and <ph id="ph3">`_CRT_ASSERT`</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Pointer to name of source file where assert/report occurred or <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Line number in source file where assert/report occurred or <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Pointer to name of module (.exe or .dll) where assert or report occurred.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Pointer to format-control string used to create the user message.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Optional substitution arguments used by <ph id="ph1">`format`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For all report destinations, <ph id="ph1">`_CrtDbgReport`</ph> and <ph id="ph2">`_CrtDbgReportW`</ph> return â€“1 if an error occurs and 0 if no errors are encountered.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>However, when the report destination is a debug message window and the user clicks the <bpt id="p1">**</bpt>Retry<ept id="p1">**</ept> button, these functions return 1.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If the user clicks the <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept> button in the Debug Message window, these functions immediately abort and do not return a value.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>_RPT, _RPTF<ept id="p1">](../../c-runtime-library/reference/rpt-rptf-rptw-rptfw-macros.md)</ept> debug macros call <ph id="ph1">`_CrtDbgReport`</ph> to generate their debug reports.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The wide-character versions of these macros as well as <bpt id="p1">[</bpt>_ASSERT&amp;#91;E&amp;#93;<ept id="p1">](../../c-runtime-library/reference/assert-asserte-assert-expr-macros.md)</ept>, <ph id="ph1">`_RPTW``n`</ph> and <ph id="ph2">`_RPTFW``n`</ph>, use <ph id="ph3">`_CrtDbgReportW`</ph> to generate their debug reports.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`_CrtDbgReport`</ph> or <ph id="ph2">`_CrtDbgReportW`</ph> return 1, these macros start the debugger, provided that just-in-time (JIT) debugging is enabled.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>and <ph id="ph1">`_CrtDbgReportW`</ph> can send the debug report to three different destinations: a debug report file, a debug monitor (the <ph id="ph2">[!INCLUDE[vsprvs](../../assembler/masm/includes/vsprvs_md.md)]</ph> debugger), or a debug message window.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Two configuration functions, <bpt id="p1">[</bpt>_CrtSetReportMode<ept id="p1">](../../c-runtime-library/reference/crtsetreportmode.md)</ept> and <bpt id="p2">[</bpt>_CrtSetReportFile<ept id="p2">](../../c-runtime-library/reference/crtsetreportfile.md)</ept>, are used to specify the destination or destinations for each report type.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>These functions allow the reporting destination or destinations for each report type to be separately controlled.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example, it is possible to specify that a <ph id="ph1">`reportType`</ph> of <ph id="ph2">`_CRT_WARN`</ph> only be sent to the debug monitor, while a <ph id="ph3">`reportType`</ph> of <ph id="ph4">`_CRT_ASSERT`</ph> be sent to a debug message window and a user-defined report file.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>is the wide-character version of <ph id="ph1">`_CrtDbgReport`</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>All its output and string parameters are in wide-character strings; otherwise it is identical to the single-byte character version.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>and <ph id="ph1">`_CrtDbgReportW`</ph> create the user message for the debug report by substituting the <ph id="ph2">`argument`</ph>[<ph id="ph3">`n`</ph>] arguments into the <ph id="ph4">`format`</ph> string, using the same rules defined by the <ph id="ph5">`printf`</ph> or <ph id="ph6">`wprintf`</ph> functions.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>These functions then generate the debug report and determine the destination or destinations, based on the current report modes and file defined for <ph id="ph1">`reportType`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When the report is sent to a debug message window, the <ph id="ph1">`filename`</ph>, <ph id="ph2">`lineNumber`</ph>, and <ph id="ph3">`moduleName`</ph> are included in the information displayed in the window.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The following table lists the available choices for the report mode or modes and file and the resulting behavior of <ph id="ph1">`_CrtDbgReport`</ph> and <ph id="ph2">`_CrtDbgReportW`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>These options are defined as bit flags in <ph id="ph1">\&lt;</ph>crtdbg.h&gt;.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Report mode</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Report file</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>, <ph id="ph1">`_CrtDbgReportW`</ph> behavior</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Not applicable</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Writes message by using Windows <bpt id="p1">[</bpt>OutputDebugString<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa363362.aspx)</ept> API.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Not applicable</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Calls Windows <bpt id="p1">[</bpt>MessageBox<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms645505)</ept> API to create message box to display the message along with <bpt id="p2">**</bpt>Abort<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Retry<ept id="p3">**</ept>, and <bpt id="p4">**</bpt>Ignore<ept id="p4">**</ept> buttons.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If a user clicks <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept>, <ph id="ph1">`_CrtDbgReport`</ph> or <ph id="ph2">`_CrtDbgReport`</ph> immediately aborts.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If a user clicks <bpt id="p1">**</bpt>Retry<ept id="p1">**</ept>, it returns 1.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If a user clicks <bpt id="p1">**</bpt>Ignore<ept id="p1">**</ept>, execution continues and <ph id="ph1">`_CrtDbgReport`</ph> and <ph id="ph2">`_CrtDbgReportW`</ph> return 0.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Note that clicking <bpt id="p1">**</bpt>Ignore<ept id="p1">**</ept> when an error condition exists often results in "undefined behavior."</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Writes message to user-supplied <ph id="ph1">`HANDLE`</ph>, using the Windows <bpt id="p1">[</bpt>WriteFile<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa365747.aspx)</ept> API and does not verify validity of file handle; the application is responsible for opening the report file and passing a valid file handle.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Writes message to <ph id="ph1">`stderr`</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Writes message to <ph id="ph1">`stdout`</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The report can be sent to one, two, or three destinations or to no destination at all.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more information about specifying the report mode or modes and report file, see the <bpt id="p1">[</bpt>_CrtSetReportMode<ept id="p1">](../../c-runtime-library/reference/crtsetreportmode.md)</ept> and <bpt id="p2">[</bpt>_CrtSetReportFile<ept id="p2">](../../c-runtime-library/reference/crtsetreportfile.md)</ept> functions.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For more information about using the debug macros and reporting functions, see <bpt id="p1">[</bpt>Macros for Reporting<ept id="p1">](/visualstudio/debugger/macros-for-reporting)</ept>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If your application needs more flexibility than that provided by <ph id="ph1">`_CrtDbgReport`</ph> and <ph id="ph2">`_CrtDbgReportW`</ph>, you can write your own reporting function and hook it into the C run-time library reporting mechanism by using the <bpt id="p1">[</bpt>_CrtSetReportHook<ept id="p1">](../../c-runtime-library/reference/crtsetreporthook.md)</ept> function.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Routine</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Required header</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>crtdbg.h&gt;</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>crtdbg.h&gt;</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>and <ph id="ph1">`_CrtDbgReportW`</ph> are Microsoft extensions.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Compatibility<ept id="p1">](../../c-runtime-library/compatibility.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Libraries</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Debug versions of <bpt id="p1">[</bpt>C run-time libraries<ept id="p1">](../../c-runtime-library/crt-library-features.md)</ept> only.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>crt_dbg2<ept id="p1">](http://msdn.microsoft.com/en-us/21e1346a-6a17-4f57-b275-c76813089167)</ept> for an example of how to change the report function.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>.NET Framework Equivalent</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>System::Diagnostics::Debug::Write</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>System::Diagnostics::Debug::Writeline</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>System::Diagnostics::Debug::WriteIf</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>System::Diagnostics::Debug::WriteLineIf</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Debug Routines</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>_CrtSetReportMode</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>_CrtSetReportFile</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>printf, _printf_l, wprintf, _wprintf_l</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>_DEBUG</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>