<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9308c57170d139d091b3c34f29f75bac233c35df</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\cpp\scope-resolution-operator.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">82596ec16ff0f795b801c76dc7476f0c079de98b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b654a89cfaeed05325015c81fdf02a8e00f7979</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Scope Resolution Operator: :: | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Scope Resolution Operator: ::</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The scope resolution operator <ph id="ph1">`::`</ph> is used to identify and disambiguate identifiers used in different scopes.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For more information about scope, see <bpt id="p1">[</bpt>Scope<ept id="p1">](../cpp/scope-visual-cpp.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`identifier`</ph> can be a variable, a function, or an enumeration value.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>With Classes and Namespaces</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following example shows how the scope resolution operator is used with namespaces and classes:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A scope resolution operator without a scope qualifier refers to the global namespace.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can use the scope resolution operator to identify a member of a namespace, or to identify a namespace that nominates the memberâ€™s namespace in a using-directive.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In the example below, you can use <ph id="ph1">`NamespaceC`</ph> to qualify <ph id="ph2">`ClassB`</ph>, even though <ph id="ph3">`ClassB`</ph> was declared in namespace <ph id="ph4">`NamespaceB`</ph>, because <ph id="ph5">`NamespaceB`</ph> was nominated in <ph id="ph6">`NamespaceC`</ph> by a using directive.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can use chains of scope resolution operators.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In the following example, <ph id="ph1">`NamespaceD::NamespaceD1`</ph> identifies the nested namespace <ph id="ph2">`NamespaceD1`</ph>, and <ph id="ph3">`NamespaceE::ClassE::ClassE1`</ph> identifies the nested class <ph id="ph4">`ClassE1`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>With Static Members</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You must use the scope resolution operator to call static members of classes.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>With Scoped Enumerations</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The scoped resolution operator is also used with the values of a scoped enumeration <bpt id="p1">[</bpt>Enumeration Declarations<ept id="p1">](../cpp/enumerations-cpp.md)</ept>, as in the following example:</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>C++ Built-in Operators, Precedence and Associativity</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Namespaces</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>