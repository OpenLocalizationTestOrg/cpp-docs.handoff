<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4e58d7eb1fc0553d23f4f00523b4a7fb9fd0074a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-language\c-constant-expressions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e11891d832e96b7fa07ed31101432bc8443ac27e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6d94821beec8d2b414f5e791dbe04cac4f62c5eb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>C Constant Expressions | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>C Constant Expressions</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A constant expression is evaluated at compile time, not run time, and can be used in any place that a constant can be used.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The constant expression must evaluate to a constant that is in the range of representable values for that type.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The operands of a constant expression can be integer constants, character constants, floating-point constants, enumeration constants, type casts, <ph id="ph1">`sizeof`</ph> expressions, and other constant expressions.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>constant-expression<ept id="p1">*</ept>:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>conditional-expression</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>conditional-expression<ept id="p1">*</ept>:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>logical-OR-expression</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>logical-OR-expression<ept id="p1">*</ept> <bpt id="p2">**</bpt>?<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>expression<ept id="p1">*</ept> <bpt id="p2">**</bpt>:<ept id="p2">**</ept>  <bpt id="p3">*</bpt>conditional-expression<ept id="p3">*</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>expression<ept id="p1">*</ept>:</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>assignment-expression</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>expression<ept id="p1">*</ept> <bpt id="p2">**</bpt>,<ept id="p2">**</ept>  <bpt id="p3">*</bpt>assignment-expression<ept id="p3">*</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>assignment-expression<ept id="p1">*</ept>:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>conditional-expression</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>unary-expression assignment-operator assignment-expression</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>assignment-operator<ept id="p1">*</ept>: one of</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>= /= %= += â€“= &lt;<ph id="ph1">\&lt;</ph>= &gt;&gt;= &amp;= ^= &amp;#124;=</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The nonterminals for struct declarator, enumerator, direct declarator, direct-abstract declarator, and labeled statement contain the <bpt id="p1">*</bpt>constant-expression<ept id="p1">*</ept> nonterminal.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An integral constant expression must be used to specify the size of a bit-field member of a structure, the value of an enumeration constant, the size of an array, or the value of a <bpt id="p1">**</bpt>case<ept id="p1">**</ept> constant.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Constant expressions used in preprocessor directives are subject to additional restrictions.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Consequently, they are known as "restricted constant expressions."</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A restricted constant expression cannot contain <ph id="ph1">`sizeof`</ph> expressions, enumeration constants, type casts to any type, or floating-type constants.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>It can, however, contain the special constant expression <ph id="ph1">`defined (`</ph><bpt id="p1">*</bpt>identifier<ept id="p1">*</ept><ph id="ph2">`)`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Operands and Expressions</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>