<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0a943751af508a67aa5a7b6f9b3ba88fd696d55c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\standard-types.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">58d74635045a59691b3db85a3cecb645553d74e6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a219417ef7aadba1cf77ff976417092b84a88815</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Standard Types | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Standard Types</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The Microsoft run-time library defines the following standard types and typedefs.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Fixed-width integral types (stdint.h)</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Equivalent built-in type</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>int8_t, uint8_t</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>signed char, unsigned char</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>int16_t, int16_t</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>short, unsigned short</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>int32_t, uint32_t</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>int, unsigned int</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>int64_t, int64_t</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>long long, unsigned long long</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>int_least8_t, uint_least8_t</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>signed char, unsigned char</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>int_least16_t, uint_least16_t</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>short, unsigned short</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>int_least32_t, uint_least32_t</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>int, unsigned int</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>int_least64_t, uint_least64_t</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>long long, unsigned long long</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>int_fast8_t, uint_fast8_t</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>signed char, unsigned char</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>int_fast16_t, uint_fast16_t</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>int, unsigned int</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>int_fast32_t, uint_fast32_t</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>int, unsigned int</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>int_fast64_t, uint_fast64_t</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>long long, unsigned long long</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>intmax_t, uintmax_t</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>long long, unsigned long long</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Type</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Declared in</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>(long)</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Stores time values; used by <bpt id="p1">[</bpt>clock<ept id="p1">](../c-runtime-library/reference/clock.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>TIME.H</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>structure</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Stores real and imaginary parts of complex numbers; used by <bpt id="p1">[</bpt>_cabs<ept id="p1">](../c-runtime-library/reference/cabs.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>MATH.H</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A type define for the user-defined hook function.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Used in <bpt id="p1">[</bpt>_CrtSetAllocHook<ept id="p1">](../c-runtime-library/reference/crtsetallochook.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>CRTDBG.H</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>,</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A type define for a call-back function that will get called in <bpt id="p1">[</bpt>_CrtMemDumpAllObjectsSince<ept id="p1">](../c-runtime-library/reference/crtmemdumpallobjectssince.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>CRTDBG.H</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>structure</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Provides information about the current state of the C run-time debug heap.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>CRTDBG.H</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>,</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>,</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A type define for a call-back function that will get called in <bpt id="p1">[</bpt>_CrtDbgReport<ept id="p1">](../c-runtime-library/reference/crtdbgreport-crtdbgreportw.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The parameters for this function are: report type, output message and the return value from the call-back function.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>CRTDBG.H</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>, <ph id="ph1">`_dev_t`</ph> short or unsigned integer</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Represents device handles.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>SYS\TYPES.H</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>structure</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Contains information about a disk drive.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Used by <bpt id="p1">[</bpt>_getdiskfree<ept id="p1">](../c-runtime-library/reference/getdiskfree.md)</ept><bpt id="p2">**</bpt>.<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>DOS.H and DIRECT.H</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>, <ph id="ph1">`ldiv_t`</ph> and <ph id="ph2">`lldiv_t`</ph> structures</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Store values returned by <bpt id="p1">[</bpt>div<ept id="p1">](../c-runtime-library/reference/div.md)</ept>, <bpt id="p2">[</bpt>ldiv<ept id="p2">](../c-runtime-library/reference/ldiv-lldiv.md)</ept>, and <bpt id="p3">[</bpt>lldiv<ept id="p3">](../c-runtime-library/reference/ldiv-lldiv.md)</ept>, respectively.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>STDLIB.H</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>integer</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Used for a function return type or parameter that deals with the error codes of <ph id="ph1">`errno`</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>STDDEF.H,</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>CRTDEFS.H</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>structure</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Stores error information for <bpt id="p1">[</bpt>_matherr<ept id="p1">](../c-runtime-library/reference/matherr.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>MATH.H</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Contains an exception record.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>EXCEPTION_POINTERS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms679331)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>FPIEEE.H</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>structure</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Stores information about current state of stream; used in all stream I/O operations.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>STDIO.H</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>, <ph id="ph1">`_wfinddata_t`</ph>, <ph id="ph2">`_finddata32_t`</ph>, <ph id="ph3">`_wfinddata32_t`</ph>, <ph id="ph4">`_finddatai64_t`</ph>, <ph id="ph5">`_wfinddatai64_t`</ph>, <ph id="ph6">`__finddata64_t`</ph>, <ph id="ph7">`__wfinddata64_t`</ph>, <ph id="ph8">`__finddata32i64_t`</ph>, <ph id="ph9">`__wfinddata32i64_t`</ph>, <ph id="ph10">`__finddata64i32_t`</ph>, <ph id="ph11">`__wfinddata64i32_t`</ph> structures</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Store file-attribute information returned by <bpt id="p1">[</bpt>_findfirst, _wfindfirst, and related functions<ept id="p1">](../c-runtime-library/reference/findfirst-functions.md)</ept> and <bpt id="p2">[</bpt>_findnext, _wfindnext and related functions<ept id="p2">](../c-runtime-library/reference/findnext-functions.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Filename Search Functions<ept id="p1">](../c-runtime-library/filename-search-functions.md)</ept> for information on structure members.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>IO.H, WCHAR.H</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>structure</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Contains information pertaining to IEEE floating-point exception; passed to user-defined trap handler by <bpt id="p1">[</bpt>_fpieee_flt<ept id="p1">](../c-runtime-library/reference/fpieee-flt.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>FPIEEE.H</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>(long integer, <ph id="ph1">`__int64`</ph>, or structure, depending on the target platform)</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Used by <bpt id="p1">[</bpt>fgetpos<ept id="p1">](../c-runtime-library/reference/fgetpos.md)</ept> and <bpt id="p2">[</bpt>fsetpos<ept id="p2">](../c-runtime-library/reference/fsetpos.md)</ept> to record information for uniquely specifying every position within a file.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>STDIO.H</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>(unsigned long integer)</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Used to represent the size of a file.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>IO.H,</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>WCHAR.H</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>structure</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Contains information about next heap entry for <bpt id="p1">[</bpt>_heapwalk<ept id="p1">](../c-runtime-library/reference/heapwalk.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>MALLOC.H</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>(void *)</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>An operating system file handle.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>CRTDBG.H</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The type of value that's returned by the <bpt id="p1">[</bpt>imaxdiv<ept id="p1">](../c-runtime-library/reference/imaxdiv.md)</ept> function, containing both the quotient and the remainder.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>inttypes.h</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>, <ph id="ph1">`_ino_t`</ph> (unsigned short)</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For returning status information.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>WCHAR.H</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>A signed integer type capable of representing any value of any signed integer type.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>stdint.h</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>(long integer or <ph id="ph1">`__int64`</ph>, depending on the target platform)</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Stores a pointer (or HANDLE) on both Win32 and Win64 platforms.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>STDDEF.H and other include files</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>array</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Used by <bpt id="p1">[</bpt>setjmp<ept id="p1">](../c-runtime-library/reference/setjmp.md)</ept> and <bpt id="p2">[</bpt>longjmp<ept id="p2">](../c-runtime-library/reference/longjmp.md)</ept> to save and restore program environment.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>SETJMP.H</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>structure</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Contains formatting rules for numeric values in different countries/regions.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Used by <bpt id="p1">[</bpt>localeconv<ept id="p1">](../c-runtime-library/reference/localeconv.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>LOCALE.H</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>,</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>,</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>(long double or an unsigned char array)</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Use to represent a long double value.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>STDLIB.H</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>structure</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Stores current locale values; used in all locale specific C run-time libraries.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>CRTDEF.H</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Tracks the state of a multibyte character conversion.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>WCHAR.H</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>, <ph id="ph1">`_off_t`</ph> long integer</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Represents file-offset value.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>WCHAR.H, SYS\TYPES.H</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>,</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>pointer</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Returned by <bpt id="p1">[</bpt>_onexit, _onexit_m<ept id="p1">](../c-runtime-library/reference/onexit-onexit-m.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>STDLIB.H</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>pointer to function</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Type of argument to <bpt id="p1">[</bpt>_set_new_handler<ept id="p1">](../c-runtime-library/reference/set-new-handler.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>NEW.H</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>(long integer or <ph id="ph1">`__int64`</ph>, depending on the target platform)</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Result of subtraction of two pointers.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>CRTDEFS.H</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>,</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>A type define for a call-back function that is called when a pure virtual function is called.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Used by <bpt id="p1">[</bpt>_get_purecall_handler, _set_purecall_handler<ept id="p1">](../c-runtime-library/reference/get-purecall-handler-set-purecall-handler.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`_purecall_handler`</ph> function should have a void return type.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>STDLIB.H</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>type define</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>A type define for a function that will handle run-time error checks.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Used in <bpt id="p1">[</bpt>_RTC_SetErrorFunc<ept id="p1">](../c-runtime-library/reference/rtc-seterrorfunc.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>RTCAPI.H</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>type define</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>A type define for a function that will handle run-time error checks.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Used in <bpt id="p1">[</bpt>_RTC_SetErrorFuncW<ept id="p1">](../c-runtime-library/reference/rtc-seterrorfuncw.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>RTCAPI.H</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>enumeration</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Defines error conditions for <bpt id="p1">[</bpt>_RTC_GetErrDesc<ept id="p1">](../c-runtime-library/reference/rtc-geterrdesc.md)</ept> and <bpt id="p2">[</bpt>_RTC_SetErrorType<ept id="p2">](../c-runtime-library/reference/rtc-seterrortype.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>RTCAPI.H</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>A type define for a call-back function that translates an exception.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The first parameter is the exception code and the second parameter is the exception record.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Used by <bpt id="p1">[</bpt>_set_se_translator<ept id="p1">](../c-runtime-library/reference/set-se-translator.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>EH.H</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>integer</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Type of object that can be modified as atomic entity, even in presence of asynchronous interrupts; used with <bpt id="p1">[</bpt>signal<ept id="p1">](../c-runtime-library/reference/signal.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>SIGNAL.H</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>(unsigned __int64 or unsigned integer, depending on the target platform)</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Result of <ph id="ph1">`sizeof`</ph> operator.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>CRTDEFS.H and other include files</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>structure</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Contains file-status information returned by <bpt id="p1">[</bpt>_stat<ept id="p1">](../c-runtime-library/reference/stat-functions.md)</ept> and <bpt id="p2">[</bpt>_fstat<ept id="p2">](../c-runtime-library/reference/fstat-fstat32-fstat64-fstati64-fstat32i64-fstat64i32.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>SYS\STAT.H</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>structure</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Contains file-status information returned by <bpt id="p1">[</bpt>_fstat64<ept id="p1">](../c-runtime-library/reference/fstat-fstat32-fstat64-fstati64-fstat32i64-fstat64i32.md)</ept> and <bpt id="p2">[</bpt>_stat64<ept id="p2">](../c-runtime-library/reference/stat-functions.md)</ept>, and <bpt id="p3">[</bpt>_wstat64<ept id="p3">](../c-runtime-library/reference/stat-functions.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>SYS\STAT.H</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>structure</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Contains file-status information returned by <bpt id="p1">[</bpt>_fstati64<ept id="p1">](../c-runtime-library/reference/fstat-fstat32-fstat64-fstati64-fstat32i64-fstat64i32.md)</ept>, <bpt id="p2">[</bpt>_stati64<ept id="p2">](../c-runtime-library/reference/stat-functions.md)</ept>, and <bpt id="p3">[</bpt>_wstati64<ept id="p3">](../c-runtime-library/reference/stat-functions.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>SYS\STAT.H</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>type define</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>A type define for a call-back function that is called when <bpt id="p1">[</bpt>terminate<ept id="p1">](../c-runtime-library/reference/terminate-crt.md)</ept> is called.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Used by <bpt id="p1">[</bpt>set_terminate<ept id="p1">](../c-runtime-library/reference/set-terminate-crt.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>EH.H</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>(__int64 or long integer)</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Represents time values in <bpt id="p1">[</bpt>mktime<ept id="p1">](../c-runtime-library/reference/mktime-mktime32-mktime64.md)</ept>, <bpt id="p2">[</bpt>time<ept id="p2">](../c-runtime-library/reference/time-time32-time64.md)</ept>, <bpt id="p3">[</bpt>ctime, _ctime32, _ctime64, _wctime, _wctime32, _wctime64<ept id="p3">](../c-runtime-library/reference/ctime-ctime32-ctime64-wctime-wctime32-wctime64.md)</ept>, <bpt id="p4">[</bpt>ctime_s, _ctime32_s, _ctime64_s, _wctime_s, _wctime32_s, _wctime64_s<ept id="p4">](../c-runtime-library/reference/ctime-s-ctime32-s-ctime64-s-wctime-s-wctime32-s-wctime64-s.md)</ept>, <bpt id="p5">[</bpt>ctime, _ctime32, _ctime64, _wctime, _wctime32, _wctime64<ept id="p5">](../c-runtime-library/reference/ctime-ctime32-ctime64-wctime-wctime32-wctime64.md)</ept> and <bpt id="p6">[</bpt>gmtime, _gmtime32, _gmtime64<ept id="p6">](../c-runtime-library/reference/gmtime-gmtime32-gmtime64.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The number of seconds since January 1, 1970, 0:00 UTC.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>If _USE_32BIT_TIME_T is defined, <ph id="ph1">`time_t`</ph> is a long integer.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>If not defined, it is a 64-bit integer.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>TIME.H,</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>SYS\STAT.H,</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>SYS\TIMEB.H</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>(long integer)</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Represents time values in <bpt id="p1">[</bpt>mktime, _mktime32, _mktime64<ept id="p1">](../c-runtime-library/reference/mktime-mktime32-mktime64.md)</ept>, <bpt id="p2">[</bpt>ctime, _ctime32, _ctime64, _wctime, _wctime32, _wctime64<ept id="p2">](../c-runtime-library/reference/ctime-ctime32-ctime64-wctime-wctime32-wctime64.md)</ept>, <bpt id="p3">[</bpt>ctime_s, _ctime32_s, _ctime64_s, _wctime_s, _wctime32_s, _wctime64_s<ept id="p3">](../c-runtime-library/reference/ctime-s-ctime32-s-ctime64-s-wctime-s-wctime32-s-wctime64-s.md)</ept>, <bpt id="p4">[</bpt>gmtime, _gmtime32, _gmtime64<ept id="p4">](../c-runtime-library/reference/gmtime-gmtime32-gmtime64.md)</ept> and <bpt id="p5">[</bpt>localtime, _localtime32, _localtime64<ept id="p5">](../c-runtime-library/reference/localtime-localtime32-localtime64.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>CRTDEFS.H, SYS\STAT.H,</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>SYS\TIMEB.H</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>(<ph id="ph1">`__int64`</ph>)</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Represents time values in <bpt id="p1">[</bpt>mktime, _mktime32, _mktime64<ept id="p1">](../c-runtime-library/reference/mktime-mktime32-mktime64.md)</ept>, <bpt id="p2">[</bpt>_ctime64, _wctime64<ept id="p2">](../c-runtime-library/reference/ctime-ctime32-ctime64-wctime-wctime32-wctime64.md)</ept>, <bpt id="p3">[</bpt>ctime_s, _ctime32_s, _ctime64_s, _wctime_s, _wctime32_s, _wctime64_s<ept id="p3">](../c-runtime-library/reference/ctime-s-ctime32-s-ctime64-s-wctime-s-wctime32-s-wctime64-s.md)</ept>, <bpt id="p4">[</bpt>_gmtime64<ept id="p4">](../c-runtime-library/reference/gmtime-gmtime32-gmtime64.md)</ept>, <bpt id="p5">[</bpt>_localtime64<ept id="p5">](../c-runtime-library/reference/localtime-localtime32-localtime64.md)</ept> and <bpt id="p6">[</bpt>_time64<ept id="p6">](../c-runtime-library/reference/time-time32-time64.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>TIME.H,</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>SYS\STAT.H,</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>SYS\TIMEB.H</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>structure</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Used by <bpt id="p1">[</bpt>_ftime<ept id="p1">](../c-runtime-library/reference/ftime-ftime32-ftime64.md)</ept> and <bpt id="p2">[</bpt>_ftime_s, _ftime32_s, _ftime64_s<ept id="p2">](../c-runtime-library/reference/ftime-s-ftime32-s-ftime64-s.md)</ept> to store current system time.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>SYS\TIMEB.H</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>structure</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Used by <bpt id="p1">[</bpt>_ftime, _ftime32, _ftime64<ept id="p1">](../c-runtime-library/reference/ftime-ftime32-ftime64.md)</ept> and <bpt id="p2">[</bpt>_ftime_s, _ftime32_s, _ftime64_s<ept id="p2">](../c-runtime-library/reference/ftime-s-ftime32-s-ftime64-s.md)</ept> to store current system time.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>SYS\TIMEB.H</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>structure</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Used by <bpt id="p1">[</bpt>_ftime64<ept id="p1">](../c-runtime-library/reference/ftime-ftime32-ftime64.md)</ept> and <bpt id="p2">[</bpt>_ftime_s, _ftime32_s, _ftime64_s<ept id="p2">](../c-runtime-library/reference/ftime-s-ftime32-s-ftime64-s.md)</ept> to store current system time.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>SYS\TIMEB.H</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>structure</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Used by <bpt id="p1">[</bpt>asctime, _wasctime<ept id="p1">](../c-runtime-library/reference/asctime-wasctime.md)</ept>, <bpt id="p2">[</bpt>asctime_s, _wasctime_s<ept id="p2">](../c-runtime-library/reference/asctime-s-wasctime-s.md)</ept>, <bpt id="p3">[</bpt>gmtime, _gmtime32, _gmtime64<ept id="p3">](../c-runtime-library/reference/gmtime-gmtime32-gmtime64.md)</ept>, <bpt id="p4">[</bpt>gmtime_s, _gmtime32_s, _gmtime64_s<ept id="p4">](../c-runtime-library/reference/gmtime-s-gmtime32-s-gmtime64-s.md)</ept>, <bpt id="p5">[</bpt>localtime, _localtime32, _localtime64<ept id="p5">](../c-runtime-library/reference/localtime-localtime32-localtime64.md)</ept>, <bpt id="p6">[</bpt>localtime_s, _localtime32_s, _localtime64_s<ept id="p6">](../c-runtime-library/reference/localtime-s-localtime32-s-localtime64-s.md)</ept>, <bpt id="p7">[</bpt>mktime, _mktime32, _mktime64<ept id="p7">](../c-runtime-library/reference/mktime-mktime32-mktime64.md)</ept> and <bpt id="p8">[</bpt>strftime, wcsftime, _strftime_l, _wcsftime_l<ept id="p8">](../c-runtime-library/reference/strftime-wcsftime-strftime-l-wcsftime-l.md)</ept> to store and retrieve time information.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>TIME.H</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>An unsigned integer type capable of representing any value of any unsigned integer type.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>stdint.h</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>(long integer or <ph id="ph1">`__int64`</ph>, depending on the target platform)</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>An unsigned integer or unsigned __int64 version of <ph id="ph1">`intptr_t`</ph>.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>STDDEF.H and other include files</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>A type define for a call-back function that is called when <bpt id="p1">[</bpt>unexpected<ept id="p1">](../c-runtime-library/reference/unexpected-crt.md)</ept> is called.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Used by <bpt id="p1">[</bpt>set_unexpected<ept id="p1">](../c-runtime-library/reference/set-unexpected-crt.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>EH.H</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>structure</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Stores file access and modification times used by <bpt id="p1">[</bpt>_utime, _wutime<ept id="p1">](../c-runtime-library/reference/utime-utime32-utime64-wutime-wutime32-wutime64.md)</ept> and <bpt id="p2">[</bpt>_futime, _futime32, _futime64<ept id="p2">](../c-runtime-library/reference/futime-futime32-futime64.md)</ept> to change file-modification dates.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>SYS\UTIME.H</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>structure</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Stores file access and modification times used by <bpt id="p1">[</bpt>_utime, _utime32, _utime64, _wutime, _wutime32, _wutime64<ept id="p1">](../c-runtime-library/reference/utime-utime32-utime64-wutime-wutime32-wutime64.md)</ept> and <bpt id="p2">[</bpt>_futime, _futime32, _futime64<ept id="p2">](../c-runtime-library/reference/futime-futime32-futime64.md)</ept> to change file-modification dates.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>SYS\UTIME.H</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>structure</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Used by <bpt id="p1">[</bpt>_utime64, _wutime64<ept id="p1">](../c-runtime-library/reference/utime-utime32-utime64-wutime-wutime32-wutime64.md)</ept> and <bpt id="p2">[</bpt>_futime64<ept id="p2">](../c-runtime-library/reference/futime-futime32-futime64.md)</ept> to store the current time.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>SYS\UTIME.H</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>structure</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Used to hold information needed by <bpt id="p1">[</bpt>va_arg<ept id="p1">](../c-runtime-library/reference/va-arg-va-copy-va-end-va-start.md)</ept> and <bpt id="p2">[</bpt>va_end<ept id="p2">](../c-runtime-library/reference/va-arg-va-copy-va-end-va-start.md)</ept> macros.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Called function declares variable of type <ph id="ph1">`va_list`</ph> that can be passed as argument to another function.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>STDARG.H,</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>CRTDEFS.H</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>wide character</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Useful for writing portable programs for international markets.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>STDDEF.H, STDLIB.H,</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>CRTDEFS.H,</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>SYS\STAT.H</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>integer</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Represents locale-specific character mappings.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>WCTYPE.H</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>integer</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Can represent all characters of any language character set.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>WCHAR.H,</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>CRTDEFS.H</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>integer</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Type of data object that can hold any wide character or wide end-of-file value.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>WCHAR.H,</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>CRTDEFS.H</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>C Run-Time Library Reference</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>