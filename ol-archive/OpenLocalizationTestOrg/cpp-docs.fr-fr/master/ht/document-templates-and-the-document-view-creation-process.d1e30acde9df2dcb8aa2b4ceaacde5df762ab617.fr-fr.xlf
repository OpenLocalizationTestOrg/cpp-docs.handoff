<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c06a97b985153ebb80093f03ccbc135433094672</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\document-templates-and-the-document-view-creation-process.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b730ef8181f5e3db27a466becca02af0dcf89144</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a26a1c58ab51a96bf68d5a869f58fef65d5e94b4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Document Templates and the Document-View Creation Process | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Document Templates and the Document/View Creation Process</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To manage the complex process of creating documents with their associated views and frame windows, the framework uses two document template classes: <bpt id="p1">[</bpt>CSingleDocTemplate<ept id="p1">](../mfc/reference/csingledoctemplate-class.md)</ept> for SDI applications and <bpt id="p2">[</bpt>CMultiDocTemplate<ept id="p2">](../mfc/reference/cmultidoctemplate-class.md)</ept> for MDI applications.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CSingleDocTemplate`</ph> can create and store one document of one type at a time.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CMultiDocTemplate`</ph> keeps a list of many open documents of one type.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Some applications support multiple document types.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For example, an application might support text documents and graphics documents.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In such an application, when the user chooses the New command on the File menu, a dialog box shows a list of possible new document types to open.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For each supported document type, the application uses a distinct document template object.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following figure illustrates the configuration of an MDI application that supports two document types and shows several open documents.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>MDI application that has two document types</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>An MDI Application with Two Document Types</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Document templates are created and maintained by the application object.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>One of the key tasks performed during your application's <ph id="ph1">`InitInstance`</ph> function is to construct one or more document templates of the appropriate kind.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This feature is described in <bpt id="p1">[</bpt>Document Template Creation<ept id="p1">](../mfc/document-template-creation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The application object stores a pointer to each document template in its template list and provides an interface for adding document templates.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If you need to support two or more document types, you must add an extra call to <bpt id="p1">[</bpt>AddDocTemplate<ept id="p1">](../mfc/reference/cwinapp-class.md#cwinapp__adddoctemplate)</ept> for each document type.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An icon is registered for each document template based on its position in the application's list of document templates.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The order of the document templates is determined by the order they are added with calls to <ph id="ph1">`AddDocTemplate`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>MFC assumes that the first Icon resource in the application is the application icon, the next Icon resource is the first document icon, and so on.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For example, a document template is the third of three for the application.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If there is an Icon resource in the application at index 3, that icon is used for the document template.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If not, the icon at index 0 is used as a default.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>General MFC Topics</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Document Template Creation</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Document/View Creation</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Relationships Among MFC Objects</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Creating New Documents, Windows, and Views</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>