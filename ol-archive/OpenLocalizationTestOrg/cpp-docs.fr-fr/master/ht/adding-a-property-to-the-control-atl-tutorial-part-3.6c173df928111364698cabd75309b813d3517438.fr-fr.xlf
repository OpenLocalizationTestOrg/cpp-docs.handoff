<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e89adef81bbf79e14ace85b1bcfe89bb5351fc84</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\adding-a-property-to-the-control-atl-tutorial-part-3.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">32c099a11862f3e0d6a004f1e6b9e78d08f0e1a5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d844e19b10020471ab3e0fbf18a73cd16f6dc14d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Adding a Property to the Control (ATL Tutorial, Part 3) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Adding a Property to the Control (ATL Tutorial, Part 3)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>is the interface that contains the control's custom methods and properties, and you will add a property to it.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To add a property using the Add Property Wizard</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In Class View, expand the Polygon branch.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Right-click IPolyCtl.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>On the shortcut menu, click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>Add Property<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The Add Property Wizard will appear.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In the drop-down list of property types, select <ph id="ph1">`SHORT`</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Type <ph id="ph1">`Sides`</ph> as the <bpt id="p1">**</bpt>Property name.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Finish<ept id="p1">**</ept> to finish adding the property.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When you add the property to the interface, MIDL (the program that compiles .idl files) defines a <ph id="ph1">`Get`</ph> method for retrieving its value and a <ph id="ph2">`Put`</ph> method for setting a new value.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The methods are named by prepending <ph id="ph1">`put_`</ph> and <ph id="ph2">`get_`</ph> to the property name.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The Add Property Wizard adds the necessary lines to the .idl file.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>It also adds the <ph id="ph1">`Get`</ph> and <ph id="ph2">`Put`</ph> function prototypes to the class definition in PolyCtl.h and adds an empty implementation to PolyCtl.cpp.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can check this by opening PolyCtl.cpp and looking for the functions <ph id="ph1">`get_Sides`</ph> and <ph id="ph2">`put_Sides`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Although you now have skeleton functions to set and retrieve the property, it needs a place to be stored.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You will create a variable to store the property and update the functions accordingly.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To create a variable to store the property, and update the put and get methods</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>From Solution Explorer, open PolyCtl.h and add the following line after the definition of <ph id="ph1">`m_clrFillColor`</ph>:</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#44</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Set the default value of <ph id="ph1">`m_nSides`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Make the default shape a triangle by adding a line to the constructor in PolyCtl.h:</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#45</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Implement the <ph id="ph1">`Get`</ph> and <ph id="ph2">`Put`</ph> methods.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`get_Sides`</ph> and <ph id="ph2">`put_Sides`</ph> function declarations have been added to PolyCtl.h.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Replace the code in PolyCtl.cpp for <ph id="ph1">`get_Sides`</ph> and <ph id="ph2">`put_Sides`</ph> with the following code:</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#46</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`get_Sides`</ph> method returns the current value of the <ph id="ph2">`Sides`</ph> property through the <ph id="ph3">`pVal`</ph> pointer.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`put_Sides`</ph> method, the code ensures the user is setting the <ph id="ph2">`Sides`</ph> property to an acceptable value.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The minimum must be 2, and because an array of points will be used for each side, 100 is a reasonable limit for a maximum value.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You now have a property called <ph id="ph1">`Sides`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In the next step, you will change the drawing code to use it.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to Step 2<ept id="p1">](../atl/adding-a-control-atl-tutorial-part-2.md)</ept> &amp;#124; <bpt id="p2">[</bpt>On to Step 4<ept id="p2">](../atl/changing-the-drawing-code-atl-tutorial-part-4.md)</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Tutorial</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>