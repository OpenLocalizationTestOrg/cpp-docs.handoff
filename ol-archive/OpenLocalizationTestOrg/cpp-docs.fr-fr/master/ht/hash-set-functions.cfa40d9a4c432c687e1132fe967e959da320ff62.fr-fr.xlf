<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1238f4a4e75f13ccd660554de8c49646549bc2cc</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard-library\hash-set-functions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5044b211d475cc98723500c9aae341c539e97e00</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">28d5f25d469f7a68e7f6d573ae7313b748be7120</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>hash_set<ph id="ph1">&amp;gt;</ph> functions | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>hash_set<ph id="ph1">&amp;gt;</ph> functions</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>swap</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>swap (hash_multiset)</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>swap</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This API is obsolete.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The alternative is <bpt id="p1">[</bpt>unordered_set Class<ept id="p1">](../standard-library/unordered-set-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Exchanges the elements of two hash_sets.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The hash_set providing the elements to be swapped, or the hash_set whose elements are to be exchanged with those of the hash_set <ph id="ph1">`left`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The hash_set whose elements are to be exchanged with those of the hash_set <ph id="ph1">`right`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`swap`</ph> template function is an algorithm specialized on the container class hash_set to execute the member function <ph id="ph2">`left``.`</ph><bpt id="p1">[</bpt>swap<ept id="p1">](../standard-library/hash-set-class.md#hash_set__swap)</ept>( <ph id="ph3">`right`</ph>).</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This is an instance of the partial ordering of function templates by the compiler.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When template functions are overloaded in such a way that the match of the template with the function call is not unique, then the compiler will select the most specialized version of the template function.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The general version of the template function</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>template <ph id="ph1">\&lt;</ph>class T&gt; void swap(T&amp;, T&amp;),</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>in the algorithm class works by assignment and is a slow operation.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The specialized version in each container is much faster as it can work with the internal representation of the container class.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In Visual C++ .NET 2003, members of the <bpt id="p1">[</bpt>&lt;hash_map&gt;<ept id="p1">](../standard-library/hash-map.md)</ept> and <bpt id="p2">[</bpt>&lt;hash_set&gt;<ept id="p2">](../standard-library/hash-set.md)</ept> header files are no longer in the std namespace, but rather have been moved into the stdext namespace.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>The stdext Namespace<ept id="p1">](../standard-library/stdext-namespace.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>See the code example for the member class <bpt id="p1">[</bpt>hash_set::swap<ept id="p1">](../standard-library/hash-set-class.md#hash_set__swap)</ept> for an example that uses the template version of <ph id="ph1">`swap`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>swap (hash_multiset)</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This API is obsolete.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The alternative is <bpt id="p1">[</bpt>unordered_set Class<ept id="p1">](../standard-library/unordered-set-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Exchanges the elements of two hash_multisets.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The hash_multiset providing the elements to be swapped, or the hash_multiset whose elements are to be exchanged with those of the hash_multiset <ph id="ph1">`left`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The hash_multiset whose elements are to be exchanged with those of the hash_multiset <ph id="ph1">`right`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`swap`</ph> template function is an algorithm specialized on the container class hash_multiset to execute the member function <ph id="ph2">`left``.`</ph><bpt id="p1">[</bpt>swap<ept id="p1">](../standard-library/hash-multiset-class.md#hash_multiset__swap)</ept>( <ph id="ph3">`right`</ph>).</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This is an instance of the partial ordering of function templates by the compiler.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When template functions are overloaded in such a way that the match of the template with the function call is not unique, then the compiler will select the most specialized version of the template function.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The general version of the template function</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>template <ph id="ph1">\&lt;</ph>class T&gt; void swap(T&amp;, T&amp;),</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>in the algorithm class works by assignment and is a slow operation.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The specialized version in each container is much faster as it can work with the internal representation of the container class.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In Visual C++ .NET 2003, members of the <bpt id="p1">[</bpt>&lt;hash_map&gt;<ept id="p1">](../standard-library/hash-map.md)</ept> and <bpt id="p2">[</bpt>&lt;hash_set&gt;<ept id="p2">](../standard-library/hash-set.md)</ept> header files are no longer in the std namespace, but rather have been moved into the stdext namespace.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>The stdext Namespace<ept id="p1">](../standard-library/stdext-namespace.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>See the code example for the member class <bpt id="p1">[</bpt>hash_multiset::swap<ept id="p1">](../standard-library/hash-multiset-class.md#hash_multiset__swap)</ept> for an example that uses the template version of <ph id="ph1">`swap`</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>&lt;hash_set&gt;</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>