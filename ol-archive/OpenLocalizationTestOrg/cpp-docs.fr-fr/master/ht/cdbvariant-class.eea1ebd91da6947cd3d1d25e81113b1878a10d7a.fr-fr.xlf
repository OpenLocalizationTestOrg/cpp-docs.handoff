<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5c1ad5c4744ee9794ab97983fe343e64721dae2a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\cdbvariant-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5eefd1e2f8966667bc4c0b8b8e0996793bc207c0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f33b73ddb7c6b316843ea19f503a7a135c331453</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CDBVariant Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CDBVariant Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Represents a variant data type for the MFC ODBC classes.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>CDBVariant::CDBVariant</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CDBVariant`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>CDBVariant::Clear</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Clears the <ph id="ph1">`CDBVariant`</ph> object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Public Data Members</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>CDBVariant::m_dwType</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Contains the data type of the currently stored value.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Type <ph id="ph1">`DWORD`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Public Union Members</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>CDBVariant::m_boolVal</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Contains a value of type <bpt id="p1">**</bpt>BOOL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>CDBVariant::m_chVal</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Contains a value of type <ph id="ph1">`unsigned char`</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>CDBVariant::m_dblVal</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Contains a value of type <bpt id="p1">**</bpt>double<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>CDBVariant::m_fltVal</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Contains a value of type <bpt id="p1">**</bpt>float<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>CDBVariant::m_iVal</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Contains a value of type <bpt id="p1">**</bpt>short<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>CDBVariant::m_lVal</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Contains a value of type <bpt id="p1">**</bpt>long<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>CDBVariant::m_pbinary</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Contains a pointer to an object of type <ph id="ph1">`CLongBinary`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>CDBVariant::m_pdate</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Contains a pointer to an object of type <bpt id="p1">**</bpt>TIMESTAMP_STRUCT<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>CDBVariant::m_pstring</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Contains a pointer to an object of type <ph id="ph1">`CString`</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>CDBVariant::m_pstringA</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Stores a pointer to an ASCII <bpt id="p1">[</bpt>CString<ept id="p1">](../../atl-mfc-shared/reference/cstringt-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>CDBVariant::m_pstringW</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Stores a pointer to a wide <bpt id="p1">[</bpt>CString<ept id="p1">](../../atl-mfc-shared/reference/cstringt-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>does not have a base class.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>is similar to <bpt id="p1">[</bpt>COleVariant<ept id="p1">](../../mfc/reference/colevariant-class.md)</ept>; however, <ph id="ph1">`CDBVariant`</ph> does not use OLE.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>allows you to store a value without worrying about the value's data type.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>tracks the data type of the current value, which is stored in a union.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Class <bpt id="p1">[</bpt>CRecordset<ept id="p1">](../../mfc/reference/crecordset-class.md)</ept> utilizes <ph id="ph1">`CDBVariant`</ph> objects in three member functions: <ph id="ph2">`GetFieldValue`</ph>, <ph id="ph3">`GetBookmark`</ph>, and <ph id="ph4">`SetBookmark`</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`GetFieldValue`</ph> allows you to dynamically fetch data in a column.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Because the data type of the column may not be known at run time, <ph id="ph1">`GetFieldValue`</ph> uses a <ph id="ph2">`CDBVariant`</ph> object to store the column's data.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxdb.h</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>CDBVariant::CDBVariant</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Creates a NULL <ph id="ph1">`CDBVariant`</ph> object.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Sets the <bpt id="p1">[</bpt>m_dwType<ept id="p1">](#cdbvariant__m_dwtype)</ept> data member to <bpt id="p2">**</bpt>DBVT_NULL<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>CDBVariant::Clear</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Call this member function to clear the <ph id="ph1">`CDBVariant`</ph> object.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If the value of the <bpt id="p1">[</bpt>m_dwType<ept id="p1">](#cdbvariant__m_dwtype)</ept> data member is <bpt id="p2">**</bpt>DBVT_DATE<ept id="p2">**</ept>, <bpt id="p3">**</bpt>DBVT_STRING<ept id="p3">**</ept>, or <bpt id="p4">**</bpt>DBVT_BINARY<ept id="p4">**</ept>, <bpt id="p5">**</bpt>Clear<ept id="p5">**</ept> frees the memory associated with the union pointer member.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Clear<ept id="p1">**</ept> sets <ph id="ph1">`m_dwType`</ph> to <bpt id="p2">**</bpt>DBVT_NULL<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CDBVariant`</ph> destructor calls <bpt id="p1">**</bpt>Clear<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>CDBVariant::m_boolVal</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Stores a value of type <bpt id="p1">**</bpt>BOOL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>m_boolVal<ept id="p1">**</ept> data member belongs to a union.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Before accessing <bpt id="p1">**</bpt>m_boolVal<ept id="p1">**</ept>, first check the value of <bpt id="p2">[</bpt>CDBVariant::m_dwType<ept id="p2">](#cdbvariant__m_dwtype)</ept>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`m_dwType`</ph> is set to <bpt id="p1">**</bpt>DBVT_BOOL<ept id="p1">**</ept>, then <bpt id="p2">**</bpt>m_boolVal<ept id="p2">**</ept> will contain a valid value; otherwise, accessing <bpt id="p3">**</bpt>m_boolVal<ept id="p3">**</ept> will produce unreliable results.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>CDBVariant::m_chVal</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Stores a value of type <ph id="ph1">`unsigned char`</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>m_chVal<ept id="p1">**</ept> data member belongs to a union.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Before accessing <bpt id="p1">**</bpt>m_chVal<ept id="p1">**</ept>, first check the value of <bpt id="p2">[</bpt>CDBVariant::m_dwType<ept id="p2">](#cdbvariant__m_dwtype)</ept>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`m_dwType`</ph> is set to <bpt id="p1">**</bpt>DBVT_UCHAR<ept id="p1">**</ept>, then <bpt id="p2">**</bpt>m_chVal<ept id="p2">**</ept> contains a valid value; otherwise, accessing <bpt id="p3">**</bpt>m_chVal<ept id="p3">**</ept> will produce unreliable results.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>CDBVariant::m_dblVal</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Stores a value of type <bpt id="p1">**</bpt>double<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>m_dblVal<ept id="p1">**</ept> data member belongs to a union.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Before accessing <bpt id="p1">**</bpt>m_dblVal<ept id="p1">**</ept>, first check the value of <bpt id="p2">[</bpt>CDBVariant::m_dwType<ept id="p2">](#cdbvariant__m_dwtype)</ept>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`m_dwType`</ph> is set to <bpt id="p1">**</bpt>DBVT_DOUBLE<ept id="p1">**</ept>, then <bpt id="p2">**</bpt>m_dblVal<ept id="p2">**</ept> contains a valid value; otherwise, accessing <bpt id="p3">**</bpt>m_dblVal<ept id="p3">**</ept> will produce unreliable results.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>CDBVariant::m_dwType</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>This data member contains the data type for the value that is currently stored in the <ph id="ph1">`CDBVariant`</ph> object's union data member.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Before accessing this union, you must check the value of <ph id="ph1">`m_dwType`</ph> in order to determine which union data member to access.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The following table lists the possible values for <ph id="ph1">`m_dwType`</ph> and the corresponding union data member.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>m_dwType</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Union data member</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>DBVT_NULL</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>No union member is valid for access.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>DBVT_BOOL</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>m_boolVal</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>DBVT_UCHAR</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>m_chVal</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>DBVT_SHORT</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>m_iVal</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>DBVT_LONG</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>m_lVal</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>DBVT_SINGLE</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>m_fltVal</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>DBVT_DOUBLE</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>m_dblVal</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>DBVT_DATE</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>m_pdate</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>DBVT_STRING</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>m_pstring</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>DBVT_BINARY</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>m_pbinary</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>DBVT_ASTRING</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>m_pstringA</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>DBVT_WSTRING</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>m_pstringW</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>CDBVariant::m_fltVal</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Stores a value of type <bpt id="p1">**</bpt>float<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>m_fltVal<ept id="p1">**</ept> data member belongs to a union.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Before accessing <bpt id="p1">**</bpt>m_fltVal<ept id="p1">**</ept>, first check the value of <bpt id="p2">[</bpt>CDBVariant::m_dwType<ept id="p2">](#cdbvariant__m_dwtype)</ept>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`m_dwType`</ph> is set to <bpt id="p1">**</bpt>DBVT_SINGLE<ept id="p1">**</ept>, then <bpt id="p2">**</bpt>m_fltVal<ept id="p2">**</ept> contains a valid value; otherwise, accessing <bpt id="p3">**</bpt>m_fltVal<ept id="p3">**</ept> will produce unreliable results.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>CDBVariant::m_iVal</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Stores a value of type <bpt id="p1">**</bpt>short<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>m_iVal<ept id="p1">**</ept> data member belongs to a union.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Before accessing <bpt id="p1">**</bpt>m_iVal<ept id="p1">**</ept>, first check the value of <bpt id="p2">[</bpt>CDBVariant::m_dwType<ept id="p2">](#cdbvariant__m_dwtype)</ept>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`m_dwType`</ph> is set to <bpt id="p1">**</bpt>DBVT_SHORT<ept id="p1">**</ept>, then <bpt id="p2">**</bpt>m_iVal<ept id="p2">**</ept> contains a valid value; otherwise, accessing <bpt id="p3">**</bpt>m_iVal<ept id="p3">**</ept> will produce unreliable results.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>CDBVariant::m_lVal</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Stores a value of type <bpt id="p1">**</bpt>long<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>m_lVal<ept id="p1">**</ept> data member belongs to a union.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Before accessing <bpt id="p1">**</bpt>m_lVal<ept id="p1">**</ept>, first check the value of <bpt id="p2">[</bpt>CDBVariant::m_dwType<ept id="p2">](#cdbvariant__m_dwtype)</ept>.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`m_dwType`</ph> is set to <bpt id="p1">**</bpt>DBVT_LONG<ept id="p1">**</ept>, then <bpt id="p2">**</bpt>m_lVal<ept id="p2">**</ept> contains a valid value; otherwise, accessing <bpt id="p3">**</bpt>m_lVal<ept id="p3">**</ept> will produce unreliable results.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>CDBVariant::m_pbinary</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Stores a pointer to an object of type <bpt id="p1">[</bpt>CLongBinary<ept id="p1">](../../mfc/reference/clongbinary-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>m_pbinary<ept id="p1">**</ept> data member belongs to a union.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Before accessing <bpt id="p1">**</bpt>m_pbinary<ept id="p1">**</ept>, first check the value of <bpt id="p2">[</bpt>CDBVariant::m_dwType<ept id="p2">](#cdbvariant__m_dwtype)</ept>.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`m_dwType`</ph> is set to <bpt id="p1">**</bpt>DBVT_BINARY<ept id="p1">**</ept>, then <bpt id="p2">**</bpt>m_pbinary<ept id="p2">**</ept> contains a valid pointer; otherwise, accessing <bpt id="p3">**</bpt>m_pbinary<ept id="p3">**</ept> will produce unreliable results.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>CDBVariant::m_pdate</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Stores a pointer to an object of type <bpt id="p1">**</bpt>TIMESTAMP_STRUCT<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>m_pdate<ept id="p1">**</ept> data member belongs to a union.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Before accessing <bpt id="p1">**</bpt>m_pdate<ept id="p1">**</ept>, first check the value of <bpt id="p2">[</bpt>CDBVariant::m_dwType<ept id="p2">](#cdbvariant__m_dwtype)</ept>.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`m_dwType`</ph> is set to <bpt id="p1">**</bpt>DBVT_DATE<ept id="p1">**</ept>, then <bpt id="p2">**</bpt>m_pdate<ept id="p2">**</ept> contains a valid pointer; otherwise, accessing <bpt id="p3">**</bpt>m_pdate<ept id="p3">**</ept> will produce unreliable results.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>For more information about the <bpt id="p1">**</bpt>TIMESTAMP_STRUCT<ept id="p1">**</ept> data type, see the topic <bpt id="p2">[</bpt>C Data Types<ept id="p2">](https://msdn.microsoft.com/library/ms714556.aspx)</ept> in Appendix D of the <bpt id="p3">*</bpt>ODBC Programmer's Reference<ept id="p3">*</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>CDBVariant::m_pstring</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Stores a pointer to an object of type <bpt id="p1">[</bpt>CString<ept id="p1">](../../atl-mfc-shared/reference/cstringt-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>m_pstring<ept id="p1">**</ept> data member belongs to a union.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Before accessing <bpt id="p1">**</bpt>m_pstring<ept id="p1">**</ept>, first check the value of <bpt id="p2">[</bpt>CDBVariant::m_dwType<ept id="p2">](#cdbvariant__m_dwtype)</ept>.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`m_dwType`</ph> is set to <bpt id="p1">**</bpt>DBVT_STRING<ept id="p1">**</ept>, then <bpt id="p2">**</bpt>m_pstring<ept id="p2">**</ept> contains a valid pointer; otherwise, accessing <bpt id="p3">**</bpt>m_pstring<ept id="p3">**</ept> will produce unreliable results.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>CDBVariant::m_pstringA</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Stores a pointer to an ASCII <bpt id="p1">[</bpt>CString<ept id="p1">](../../atl-mfc-shared/reference/cstringt-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>m_pstringA<ept id="p1">**</ept> data member belongs to a union.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Before accessing <bpt id="p1">**</bpt>m_pstringA<ept id="p1">**</ept>, first check the value of <bpt id="p2">[</bpt>CDBVariant::m_dwType<ept id="p2">](#cdbvariant__m_dwtype)</ept>.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`m_dwType`</ph> is set to <bpt id="p1">**</bpt>DBVT_ASTRING<ept id="p1">**</ept>, then <bpt id="p2">**</bpt>m_pstringA<ept id="p2">**</ept> contains a valid pointer; otherwise, accessing <bpt id="p3">**</bpt>m_pstringA<ept id="p3">**</ept> will produce unreliable results.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>CDBVariant::m_pstringW</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Stores a pointer to a wide <bpt id="p1">[</bpt>CString<ept id="p1">](../../atl-mfc-shared/reference/cstringt-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>m_pstringW<ept id="p1">**</ept> data member belongs to a union.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Before accessing <bpt id="p1">**</bpt>m_pstringW<ept id="p1">**</ept>, first check the value of <bpt id="p2">[</bpt>CDBVariant::m_dwType<ept id="p2">](#cdbvariant__m_dwtype)</ept>.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`m_dwType`</ph> is set to <bpt id="p1">**</bpt>DBVT_WSTRING<ept id="p1">**</ept>, then <bpt id="p2">**</bpt>m_pstringW<ept id="p2">**</ept> contains a valid pointer; otherwise, accessing <bpt id="p3">**</bpt>m_pstringW<ept id="p3">**</ept> will produce unreliable results.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Hierarchy Chart</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>CRecordset Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>