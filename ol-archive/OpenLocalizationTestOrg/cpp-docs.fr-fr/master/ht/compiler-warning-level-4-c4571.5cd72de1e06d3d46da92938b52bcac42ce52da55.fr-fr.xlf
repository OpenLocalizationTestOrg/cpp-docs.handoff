<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e75d66d16c593e480dc5b29ba22a311e626147ca</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\error-messages\compiler-warnings\compiler-warning-level-4-c4571.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">09f5330eb3af1cbd435b2e14841d284057c9606a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9e8d7009094752a8ab73089da6974dd42d4c6241</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 4) C4571 | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 4) C4571</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Informational: catch(...) semantics changed since Visual C++ 7.1; structured exceptions (SEH) are no longer caught</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>C4571 is generated for every catch(...) block when compiling with <bpt id="p1">**</bpt>/EHs<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When compiling with <bpt id="p1">**</bpt>/EHs<ept id="p1">**</ept>, a catch(...) block will not catch a structured exception (divide by zero, null pointer, for example); a catch(...) block will only catch explicitly-thrown, C++ exceptions.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Exception Handling<ept id="p1">](../../cpp/exception-handling-in-visual-cpp.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This warning is off by default.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Turn this warning on to ensure that when you compile with <bpt id="p1">**</bpt>/EHs<ept id="p1">**</ept> your catch (...) blocks do not intend to catch structured exceptions.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Compiler Warnings That Are Off by Default<ept id="p1">](../../preprocessor/compiler-warnings-that-are-off-by-default.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can resolve C4571 in one of the following ways,</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Compile with <bpt id="p1">**</bpt>/EHa<ept id="p1">**</ept> if you still want your catch(...) blocks to catch structured exceptions.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Do not enable C4571 if you do not want your catch(...) blocks to catch structured exceptions, but you still want to use catch(...) blocks.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can still catch structured exceptions using the structured exception handling keywords (<bpt id="p1">**</bpt>__try<ept id="p1">**</ept>, <bpt id="p2">**</bpt>__except<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>__finally<ept id="p3">**</ept>).</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>But remember, when compiled <bpt id="p1">**</bpt>/EHs<ept id="p1">**</ept> destructors will only be called when a C++ exception is thrown, not when an SEH exception occurs.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Replace catch(...) block with catch blocks for specific C++ exceptions, and optionally, add structured exception handling around the C++ exception handling (<bpt id="p1">**</bpt>__try<ept id="p1">**</ept>, <bpt id="p2">**</bpt>__except<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>__finally<ept id="p3">**</ept>).</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Structured Exception Handling (C/C++)<ept id="p1">](../../cpp/structured-exception-handling-c-cpp.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>/EH (Exception Handling Model)<ept id="p1">](../../build/reference/eh-exception-handling-model.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following sample generates C4571.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>