<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">db575c7ff688f21cfc8888926b2cd680187a0979</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\connection-maps.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8eafb4d64b823579e16fefbcd066c65155544e47</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a25f9fb0b0c7c9378e8d11a44171b7e734cb69b0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Connection Maps | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Connection Maps</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>OLE controls are able to expose interfaces to other applications.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>These interfaces only allow access from a container into that control.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If an OLE control wants to access external interfaces of other OLE objects, a connection point must be established.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This connection point allows a control outgoing access to external dispatch maps, such as event maps or notification functions.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The Microsoft Foundation Class Library offers a programming model that supports connection points.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In this model, "connection maps" are used to designate interfaces or connection points for the OLE control.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Connection maps contain one macro for each connection point.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information on connection maps, see the <bpt id="p1">[</bpt>CConnectionPoint<ept id="p1">](../../mfc/reference/cconnectionpoint-class.md)</ept> class.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Typically, a control will support just two connection points: one for events and one for property notifications.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>These are implemented by the <ph id="ph1">`COleControl`</ph> base class and require no additional work by the control writer.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Any additional connection points you want to implement in your class must be added manually.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To support connection maps and points, MFC provides the following macros:</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Connection Map Declaration and Demarcation</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>BEGIN_CONNECTION_PART</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Declares an embedded class that implements an additional connection point (must be used in the class declaration).</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>END_CONNECTION_PART</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Ends the declaration of a connection point (must be used in the class declaration).</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>CONNECTION_IID</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Specifies the interface ID of the control's connection point.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>DECLARE_CONNECTION_MAP</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Declares that a connection map will be used in a class (must be used in the class declaration).</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>BEGIN_CONNECTION_MAP</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Begins the definition of a connection map (must be used in the class implementation).</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>END_CONNECTION_MAP</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Ends the definition of a connection map (must be used in the class implementation).</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>CONNECTION_PART</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Specifies a connection point in the control's connection map.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The following functions assist a sink in establishing and disconnecting a connection using connection points:</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Initialization/Termination of Connection Points</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>AfxConnectionAdvise</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Establishes a connection between a source and a sink.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>AfxConnectionUnadvise</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Breaks a connection between a source and a sink.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>BEGIN_CONNECTION_PART</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`BEGIN_CONNECTION_PART`</ph> macro to begin the definition of additional connection points beyond the event and property notification connection points.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Specifies the name of the control class whose connection point this is.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>localClass</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Specifies the name of the local class that implements the connection point.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In the declaration (.h) file that defines the member functions for your class, start the connection point with the <ph id="ph1">`BEGIN_CONNECTION_PART`</ph> macro, then add the <ph id="ph2">`CONNECTION_IID`</ph> macro and any other member functions you wish to implement, and complete the connection point map with the <ph id="ph3">`END_CONNECTION_PART`</ph> macro.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>END_CONNECTION_PART</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Ends the declaration of your connection point.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>localClass</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Specifies the name of the local class that implements the connection point.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>CONNECTION_IID</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Use between the <ph id="ph1">`BEGIN_CONNECTION_PART`</ph> and <ph id="ph2">`END_CONNECTION_PART`</ph> macros to define an interface ID for a connection point supported by your OLE control.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The interface ID of the interface called by the connection point.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`iid`</ph> argument is an interface ID used to identify the interface that the connection point will call on its connected sinks.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>NVC_MFCConnectionPoints#10</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>specifies a connection point that calls the <ph id="ph1">`ISinkInterface`</ph> interface.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>DECLARE_CONNECTION_MAP</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">`COleControl`</ph>-derived class in your program can provide a connection map to specify additional connection points that your control supports.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If your control supports additional points, use the <ph id="ph1">`DECLARE_CONNECTION_MAP`</ph> macro at the end of your class declaration.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Then, in the .cpp file that defines the member functions for the class, use the <ph id="ph1">`BEGIN_CONNECTION_MAP`</ph> macro, <ph id="ph2">`CONNECTION_PART`</ph> macros for each of the control's connection points, and the <ph id="ph3">`END_CONNECTION_MAP`</ph> macro to declare the end of the connection map.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>BEGIN_CONNECTION_MAP</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">`COleControl`</ph>-derived class in your program can provide a connection map to specify connection points that your control will support.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Specifies the name of the control class whose connection map this is.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>theBase</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Specifies the name of the base class of <ph id="ph1">`theClass`</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>In the implementation (.CPP) file that defines the member functions for your class, start the connection map with the <ph id="ph1">`BEGIN_CONNECTION_MAP`</ph> macro, then add macro entries for each of your connection points using the <bpt id="p1">[</bpt>CONNECTION_PART<ept id="p1">](#connection_part)</ept> macro.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Finally, complete the connection map with the <bpt id="p1">[</bpt>END_CONNECTION_MAP<ept id="p1">](#end_connection_map)</ept> macro.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>END_CONNECTION_MAP</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Ends the definition of your connection map.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>CONNECTION_PART</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Maps a connection point for your OLE control to a specific interface ID.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Specifies the name of the control class whose connection point this is.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The interface ID of the interface called by the connection point.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>localClass</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Specifies the name of the local class that implements the connection point.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>NVC_MFCConnectionPoints#2</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>implements a connection map, with a connection point, that calls the <ph id="ph1">`IID_ISinkInterface`</ph> interface .</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>AfxConnectionAdvise</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Call this function to establish a connection between a source, specified by <ph id="ph1">`pUnkSrc`</ph>, and a sink, specified by <ph id="ph2">`pUnkSink`</ph>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A pointer to the object that calls the interface.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>A pointer to the object that implements the interface.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The interface ID of the connection.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt>TRUE<ept id="p1">**</ept> indicates that creating the connection should cause the reference count of <ph id="ph1">`pUnkSink`</ph> to be incremented.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept> indicates that the reference count should not be incremented.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>A pointer to a <ph id="ph1">`DWORD`</ph> where a connection identifier is returned.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>This value should be passed as the <ph id="ph1">`dwCookie`</ph> parameter to <ph id="ph2">`AfxConnectionUnadvise`</ph> when disconnecting the connection.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Nonzero if a connection was established; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>NVC_MFCConnectionPoints#8</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>AfxConnectionUnadvise</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Call this function to disconnect a connection between a source, specified by <ph id="ph1">`pUnkSrc`</ph>, and a sink, specified by <ph id="ph2">`pUnkSink`</ph>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>A pointer to the object that calls the interface.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A pointer to the object that implements the interface.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The interface ID of the connection point interface.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt>TRUE<ept id="p1">**</ept> indicates that disconnecting the connection should cause the reference count of <ph id="ph1">`pUnkSink`</ph> to be decremented.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept> indicates that the reference count should not be decremented.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The connection identifier returned by <ph id="ph1">`AfxConnectionAdvise`</ph>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Nonzero if a connection was disconnected; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>NVC_MFCConnectionPoints#9</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Macros and Globals</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>