<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2a1f1c21cdcd42e7e8d33eb6405297fc88635d87</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard-library\bitset-operators.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ca13b651ec6d7b9445a0951c57f0a2075806f04f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e5fbeb8ecfe4addfed3a96c41f6e7c33dc3c05b6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>bitset<ph id="ph1">&amp;gt;</ph> operators | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>bitset<ph id="ph1">&amp;gt;</ph> operators</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>operator</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>operator</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>operator</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>operator_xor</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>operator_or</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>operator</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Performs a bitwise <ph id="ph1">`AND`</ph> between two bitsets.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The first of the two bitsets whose respective elements are to be combined with the bitwise <ph id="ph1">`AND`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The second of the two valarrays whose respective elements are to be combined with the bitwise <ph id="ph1">`AND`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A bitset whose elements are the result of performing the <ph id="ph1">`AND`</ph> operation on the corresponding elements of <ph id="ph2">` left`</ph> and <ph id="ph3">` right`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>operator</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Inserts a text representation of the bit sequence into the output stream.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An object of type <bpt id="p1">**</bpt>bitset<ph id="ph1">\&lt;</ph>N&gt;<ept id="p1">**</ept> that is to be inserted into the output stream as a string.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A text representation of the bit sequence in <bpt id="p1">**</bpt>ostr<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The template function overloads <bpt id="p1">**</bpt>operator&lt;&lt;<ept id="p1">**</ept>, allowing a bitset to be written out without first converting it into a string.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The template function effectively executes:</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ostr<ept id="p1">**</ept> &lt;&lt; _ <bpt id="p2">*</bpt>Right<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>to_string<ept id="p1">](https://msdn.microsoft.com/library/2f93c55z.aspx)</ept><ph id="ph1"> &lt; </ph><bpt id="p2">**</bpt>CharType<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Traits<ept id="p3">**</ept>, <bpt id="p4">**</bpt>allocator<ept id="p4">**</ept><ph id="ph2">\&lt;</ph> <bpt id="p5">**</bpt>CharType<ept id="p5">**</ept>&gt; &gt; ( )</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>operator</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Reads a string of bit characters into a bitset.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The string that is entered into the input stream to be inserted into the bitset.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The bitset that is receiving the bits from the input stream.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The template function returns the string <ph id="ph1">`_Istr`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The template function overloads <bpt id="p1">**</bpt>operator&gt;&gt;<ept id="p1">**</ept> to store in the bitset _ <bpt id="p2">*</bpt>Right<ept id="p2">*</ept> the value bitset( <ph id="ph1">`str`</ph>), where <ph id="ph2">`str`</ph> is an object of type <bpt id="p3">[</bpt>basic_string<ept id="p3">](https://msdn.microsoft.com/library/syxtdd4f.aspx)</ept><ph id="ph3"> &lt; </ph><bpt id="p4">**</bpt>CharType<ept id="p4">**</ept>, <bpt id="p5">**</bpt>Traits<ept id="p5">**</ept>, <bpt id="p6">**</bpt>allocator<ept id="p6">**</ept><ph id="ph4">\&lt;</ph> <bpt id="p7">**</bpt>CharType<ept id="p7">**</ept>&gt; &gt; <bpt id="p8">**</bpt><ph id="ph5">&amp;</ph><ept id="p8">**</ept> extracted from <ph id="ph6">`_Istr`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The template function extracts elements from <ph id="ph1">`_Istr`</ph> and inserts them into the bitset until:</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>All the bit elements have been extracted from the input stream and stored in the bitset.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The bitset is filled up with bits from the input stream.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An input element is encountered that is neither 0 nor 1.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>operator_xor</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Performs a bitwise <ph id="ph1">`EXCLUSIVE-OR`</ph> between two bitsets.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The first of the two bitsets whose respective elements are to be combined with the bitwise <ph id="ph1">`EXCLUSIVE-OR`</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The second of the two valarrays whose respective elements are to be combined with the bitwise <ph id="ph1">`EXCLUSIVE-OR`</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A bitset whose elements are the result of performing the <ph id="ph1">`EXCLUSIVE-OR`</ph> operation on the corresponding elements of <ph id="ph2">` left`</ph> and <ph id="ph3">` right`</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>operator_or</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Performs a bitwise <ph id="ph1">`OR`</ph> between two bitsets.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The first of the two bitsets whose respective elements are to be combined with the bitwise <ph id="ph1">`OR`</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The second of the two valarrays whose respective elements are to be combined with the bitwise <ph id="ph1">`OR`</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A bitset whose elements are the result of performing the <ph id="ph1">`OR`</ph> operation on the corresponding elements of <ph id="ph2">` left`</ph> and <ph id="ph3">` right`</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>bitset&gt;</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>