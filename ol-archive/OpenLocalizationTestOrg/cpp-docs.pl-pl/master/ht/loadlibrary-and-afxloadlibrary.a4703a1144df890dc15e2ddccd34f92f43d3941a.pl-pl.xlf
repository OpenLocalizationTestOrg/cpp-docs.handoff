<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e6f7ec8f8e1047e362a3d1c5374844151aaba1d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\build\loadlibrary-and-afxloadlibrary.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc4c7f5a25568a8c504ef2397a214160328c7546</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b862ee2ba068788c4335f0bf098b548048ddebb0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>LoadLibrary and AfxLoadLibrary | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>LoadLibrary and AfxLoadLibrary</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Processes call <bpt id="p1">[</bpt>LoadLibrary<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkID=259187)</ept> (or <bpt id="p2">[</bpt>AfxLoadLibrary<ept id="p2">](http://msdn.microsoft.com/Library/1339678b-c843-4474-b9c9-8f3bd9905e2e)</ept>) to explicitly link to a DLL.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If the function succeeds, it maps the specified DLL into the address space of the calling process and returns a handle to the DLL that can be used with other functions in explicit linkingâ€”for example, <ph id="ph1">`GetProcAddress`</ph> and <ph id="ph2">`FreeLibrary`</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>attempts to locate the DLL by using the same search sequence that is used for implicit linking.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If the system cannot find the DLL or if the entry-point function returns FALSE, <ph id="ph1">`LoadLibrary`</ph> returns NULL.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If the call to <ph id="ph1">`LoadLibrary`</ph> specifies a DLL module that is already mapped into the address space of the calling process, the function returns a handle of the DLL and increments the reference count of the module.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>If the DLL has an entry-point function, the operating system calls the function in the context of the thread that called <ph id="ph1">`LoadLibrary`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The entry-point function is not called if the DLL is already attached to the process because of a previous call to <ph id="ph1">`LoadLibrary`</ph> that has no corresponding call to the <ph id="ph2">`FreeLibrary`</ph> function.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For MFC applications that load extension DLLs, we recommend that you use <ph id="ph1">`AfxLoadLibrary`</ph> instead of <ph id="ph2">`LoadLibrary`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>handles thread synchronization before you call <ph id="ph1">`LoadLibrary`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The interface (function prototype) to <ph id="ph1">`AfxLoadLibrary`</ph> is the same as <ph id="ph2">`LoadLibrary`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If Windows cannot load the DLL, the process can attempt to recover from the error.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For example, the process could notify the user of the error and ask the user to specify another path to the DLL.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If the code is to run under Windows NT 4, Windows 2000, or Windows XP (prior to SP1), make sure to specify the full path of any DLLs.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>On these operating systems, the current directory is searched first when files are loaded.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If you do not qualify the path of the file, a file that is not the intended one might be loaded.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>What do you want to do?</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Link implicitly</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Determine which linking method to use</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>What do you want to know more about?</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The search path that is used by Windows to locate a DLL</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>FreeLibrary and AfxFreeLibrary</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>GetProcAddress</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>DLLs in Visual C++</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>LoadLibrary</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>AfxLoadLibrary</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>