<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d29d5d1420b0ba59f38809e43705c8615d939a9b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\preprocessor\check-stack.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8de1fc099931686ffe1c1c6de318c7f9f69d4550</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ec75be6ffba665a85084aae1a1b902161582bcfd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>check_stack | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>check_stack</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Instructs the compiler to turn off stack probes if <bpt id="p1">**</bpt>off<ept id="p1">**</ept> (or <bpt id="p2">**</bpt>–<ept id="p2">**</ept>) is specified, or to turn on stack probes if <bpt id="p3">**</bpt>on<ept id="p3">**</ept> (or <bpt id="p4">**</bpt><ph id="ph1">+</ph><ept id="p4">**</ept>) is specified.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If no argument is given, stack probes are treated according to the default.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This pragma takes effect at the first function defined after the pragma is seen.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Stack probes are neither a part of macros nor of functions that are generated inline.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If you don't give an argument for the <bpt id="p1">**</bpt>check_stack<ept id="p1">**</ept> pragma, stack checking reverts to the behavior specified on the command line.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Compiler Reference<ept id="p1">](../build/reference/compiler-options.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The interaction of the <bpt id="p1">**</bpt>#pragma check_stack<ept id="p1">**</ept> and the <bpt id="p2">[</bpt>/Gs<ept id="p2">](../build/reference/gs-control-stack-checking-calls.md)</ept> option is summarized in the following table.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Using the check_stack Pragma</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Compiled with</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>/Gs option?</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Action</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>#pragma check_stack( )<ept id="p1">**</ept> or</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>pragma check_stack</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Turns off stack checking for functions that follow</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>#pragma check_stack( )<ept id="p1">**</ept> or</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>pragma check_stack</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>No</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Turns on stack checking for functions that follow</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>pragma check_stack(on)</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>or <bpt id="p1">**</bpt>#pragma check_stack +<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Yes or No</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Turns on stack checking for functions that follow</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>pragma check_stack(off)</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>or <bpt id="p1">**</bpt>#pragma check_stack –<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Yes or No</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Turns off stack checking for functions that follow</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Pragma Directives and the __Pragma Keyword</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>