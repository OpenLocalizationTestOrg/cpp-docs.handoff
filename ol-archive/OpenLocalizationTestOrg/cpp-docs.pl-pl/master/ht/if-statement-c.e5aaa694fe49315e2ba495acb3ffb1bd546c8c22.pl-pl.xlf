<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5f3d283513945867e781237c402241f0bc2b505a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-language\if-statement-c.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3b1d28135a61f169440e8f87720be9c0f50c0bda</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e5c819abfaca18623a60d6e03b3d8183827db731</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>if Statement (C) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>if Statement (C)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>if<ept id="p1">**</ept> statement controls conditional branching.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The body of an <bpt id="p1">**</bpt>if<ept id="p1">**</ept> statement is executed if the value of the expression is nonzero.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The syntax for the <bpt id="p1">**</bpt>if<ept id="p1">**</ept> statement has two forms.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>selection-statement<ept id="p1">*</ept>:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt>if (<ept id="p1">**</ept>  <bpt id="p2">*</bpt>expression<ept id="p2">*</ept>  <bpt id="p3">**</bpt>)<ept id="p3">**</ept>  <bpt id="p4">*</bpt>statement<ept id="p4">*</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>if (<ept id="p1">**</ept>  <bpt id="p2">*</bpt>expression<ept id="p2">*</ept>  <bpt id="p3">**</bpt>)<ept id="p3">**</ept>  <bpt id="p4">*</bpt>statement<ept id="p4">*</ept>  <bpt id="p5">**</bpt>else<ept id="p5">**</ept>  <bpt id="p6">*</bpt>statement<ept id="p6">*</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In both forms of the <bpt id="p1">**</bpt>if<ept id="p1">**</ept> statement, the expressions, which can have any value except a structure, are evaluated, including all side effects.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In the first form of the syntax, if <bpt id="p1">*</bpt>expression<ept id="p1">*</ept> is true (nonzero), <bpt id="p2">*</bpt>statement<ept id="p2">*</ept> is executed.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">*</bpt>expression<ept id="p1">*</ept> is false, <bpt id="p2">*</bpt>statement<ept id="p2">*</ept> is ignored.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In the second form of syntax, which uses <bpt id="p1">**</bpt>else<ept id="p1">**</ept>, the second <bpt id="p2">*</bpt>statement<ept id="p2">*</ept> is executed if <bpt id="p3">*</bpt>expression<ept id="p3">*</ept> is false.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>With both forms, control then passes from the <bpt id="p1">**</bpt>if<ept id="p1">**</ept> statement to the next statement in the program unless one of the statements contains a <bpt id="p2">**</bpt>break<ept id="p2">**</ept>, <bpt id="p3">**</bpt>continue<ept id="p3">**</ept>, or <ph id="ph1">`goto`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The following are examples of the <bpt id="p1">**</bpt>if<ept id="p1">**</ept> statement:</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In this example, the statement <ph id="ph1">`y = x/i;`</ph> is executed if <ph id="ph2">`i`</ph> is greater than 0.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`i`</ph> is less than or equal to 0, <ph id="ph2">`i`</ph> is assigned to <ph id="ph3">`x`</ph> and <ph id="ph4">`f( x )`</ph> is assigned to <ph id="ph5">`y`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Note that the statement forming the <bpt id="p1">**</bpt>if<ept id="p1">**</ept> clause ends with a semicolon.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When nesting <bpt id="p1">**</bpt>if<ept id="p1">**</ept> statements and <bpt id="p2">**</bpt>else<ept id="p2">**</ept> clauses, use braces to group the statements and clauses into compound statements that clarify your intent.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If no braces are present, the compiler resolves ambiguities by associating each <bpt id="p1">**</bpt>else<ept id="p1">**</ept> with the closest <bpt id="p2">**</bpt>if<ept id="p2">**</ept> that lacks an <bpt id="p3">**</bpt>else<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>else<ept id="p1">**</ept> clause is associated with the inner <bpt id="p2">**</bpt>if<ept id="p2">**</ept> statement in this example.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`i`</ph> is less than or equal to 0, no value is assigned to <ph id="ph2">`x`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The braces surrounding the inner <bpt id="p1">**</bpt>if<ept id="p1">**</ept> statement in this example make the <bpt id="p2">**</bpt>else<ept id="p2">**</ept> clause part of the outer <bpt id="p3">**</bpt>if<ept id="p3">**</ept> statement.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`i`</ph> is less than or equal to 0, <ph id="ph2">`i`</ph> is assigned to <ph id="ph3">`x`</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>if-else Statement (C++)</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>