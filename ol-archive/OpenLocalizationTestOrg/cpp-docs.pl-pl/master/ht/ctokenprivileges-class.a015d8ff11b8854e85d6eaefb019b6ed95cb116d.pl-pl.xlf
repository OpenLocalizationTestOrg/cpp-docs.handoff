<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ccf339e58e4972da50864bc8413bcbcf90a561ad</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\ctokenprivileges-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a16f9110d2e09525588ef8463b3799785b058ecc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c354879d47a77d7bf36ece2b4896ffd72ffea133</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CTokenPrivileges Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CTokenPrivileges Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class is a wrapper for the <bpt id="p1">**</bpt>TOKEN_PRIVILEGES<ept id="p1">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This class and its members cannot be used in applications that execute in the Windows Runtime.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>CTokenPrivileges::CTokenPrivileges</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The constructor.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>CTokenPrivileges::~CTokenPrivileges</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The destructor.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>CTokenPrivileges::Add</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Adds one or more privileges to the <ph id="ph1">`CTokenPrivileges`</ph> object.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>CTokenPrivileges::Delete</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Deletes a privilege from the <ph id="ph1">`CTokenPrivileges`</ph> object.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>CTokenPrivileges::DeleteAll</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Deletes all privileges from the <ph id="ph1">`CTokenPrivileges`</ph> object.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>CTokenPrivileges::GetCount</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Returns the number of privilege entries in the <ph id="ph1">`CTokenPrivileges`</ph> object.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>CTokenPrivileges::GetDisplayNames</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Retrieves display names for the privileges contained in the <ph id="ph1">`CTokenPrivileges`</ph> object.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>CTokenPrivileges::GetLength</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Returns the buffer size in bytes required to hold the <bpt id="p1">**</bpt>TOKEN_PRIVILEGES<ept id="p1">**</ept> structure represented by the <ph id="ph1">`CTokenPrivileges`</ph> object.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>CTokenPrivileges::GetLuidsAndAttributes</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Retrieves the locally unique identifiers (LUIDs) and attribute flags from the <ph id="ph1">`CTokenPrivileges`</ph> object.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>CTokenPrivileges::GetNamesAndAttributes</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Retrieves the privilege names and attribute flags from the <ph id="ph1">`CTokenPrivileges`</ph> object.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>CTokenPrivileges::GetPTOKEN_PRIVILEGES</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the <bpt id="p1">**</bpt>TOKEN_PRIVILEGES<ept id="p1">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>CTokenPrivileges::LookupPrivilege</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Retrieves the attribute associated with a given privilege name.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Public Operators</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>CTokenPrivileges::operator const TOKEN_PRIVILEGES *</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Casts a value to a pointer to the <bpt id="p1">**</bpt>TOKEN_PRIVILEGES<ept id="p1">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>CTokenPrivileges::operator =</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Assignment operator.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">[</bpt>access token<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa374909)</ept> is an object that describes the security context of a process or thread and is allocated to each user logged onto a Windows NT or Windows 2000 system.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The access token is used to describe the various security privileges granted to each user.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A privilege consists of a 64-bit number called a locally unique identifier ( <bpt id="p1">[</bpt>LUID<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa379261)</ept>) and a descriptor string.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CTokenPrivileges`</ph> class is a wrapper for the <bpt id="p1">[</bpt>TOKEN_PRIVILEGES<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa379630)</ept> structure and contains 0 or more privileges.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Privileges can be added, deleted, or queried using the supplied class methods.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For an introduction to the access control model in Windows, see <bpt id="p1">[</bpt>Access Control<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa374860)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> atlsecurity.h</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>CTokenPrivileges::Add</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Adds one or more privileges to the <ph id="ph1">`CTokenPrivileges`</ph> access token object.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Pointer to a null-terminated string that specifies the name of the privilege, as defined in the WINNT.H header file.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If true, the privilege is enabled.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If false, the privilege is disabled.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Reference to a <bpt id="p1">[</bpt>TOKEN_PRIVILEGES<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa379630)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The privileges and attributes are copied from this structure and added to the <ph id="ph1">`CTokenPrivileges`</ph> object.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The first form of this method returns true if the privileges are successfully added, false otherwise.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>CTokenPrivileges::CTokenPrivileges</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The constructor.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CTokenPrivileges`</ph> object to assign to the new object.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>TOKEN_PRIVILEGES<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa379630)</ept> structure to assign to the new <ph id="ph1">`CTokenPrivileges`</ph> object.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CTokenPrivileges`</ph> object can optionally be created using a <bpt id="p1">**</bpt>TOKEN_PRIVILEGES<ept id="p1">**</ept> structure or a previously defined <ph id="ph2">`CTokenPrivileges`</ph> object.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>CTokenPrivileges::~CTokenPrivileges</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The destructor.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The destructor frees all allocated resources.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>CTokenPrivileges::Delete</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Deletes a privilege from the <ph id="ph1">`CTokenPrivileges`</ph> access token object.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Pointer to a null-terminated string that specifies the name of the privilege, as defined in the WINNT.H header file.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For example, this parameter could specify the constant SE_SECURITY_NAME, or its corresponding string, "SeSecurityPrivilege."</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Returns true if the privilege was successfully deleted, false otherwise.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>This method is useful as a tool for creating restricted tokens under Windows 2000.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>CTokenPrivileges::DeleteAll</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Deletes all privileges from the <ph id="ph1">`CTokenPrivileges`</ph> access token object.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Deletes all privileges contained in the <ph id="ph1">`CTokenPrivileges`</ph> access token object.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>CTokenPrivileges::GetDisplayNames</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Retrieves display names for the privileges contained in the <ph id="ph1">`CTokenPrivileges`</ph> access token object.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>A pointer to an array of <ph id="ph1">`CString`</ph> objects.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CNames<ept id="p1">**</ept> is defined as a typedef: <bpt id="p2">**</bpt>CTokenPrivileges::CAtlArray<ph id="ph1">\&lt;</ph>CString&gt;<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The parameter <ph id="ph1">`pDisplayNames`</ph> is a pointer to an array of <ph id="ph2">`CString`</ph> objects which will receive the display names corresponding to the privileges contained in the <ph id="ph3">`CTokenPrivileges`</ph> object.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>This method retrieves display names only for the privileges specified in the Defined Privileges section of WINNT.H.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This method retrieves a displayable name: for example, if the attribute name is SE_REMOTE_SHUTDOWN_NAME, the displayable name is "Force shutdown from a remote system."</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>To obtain the system name, use <bpt id="p1">[</bpt>CTokenPrivileges::GetNamesAndAttributes<ept id="p1">](#ctokenprivileges__getnamesandattributes)</ept>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>CTokenPrivileges::GetCount</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Returns the number of privilege entries in the <ph id="ph1">`CTokenPrivileges`</ph> object.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Returns the number of privileges contained in the <ph id="ph1">`CTokenPrivileges`</ph> object.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>CTokenPrivileges::GetLength</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Returns the length of the <ph id="ph1">`CTokenPrivileges`</ph> object.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes required to hold a <bpt id="p1">**</bpt>TOKEN_PRIVILEGES<ept id="p1">**</ept> structure represented by the <ph id="ph1">`CTokenPrivileges`</ph> object, including all of the privilege entries it contains.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>CTokenPrivileges::GetLuidsAndAttributes</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Retrieves the locally unique identifiers (LUIDs) and attribute flags from the <ph id="ph1">`CTokenPrivileges`</ph> object.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Pointer to an array of <bpt id="p1">[</bpt>LUID<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa379261)</ept> objects.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CLUIDArray<ept id="p1">**</ept> is a typedef defined as <bpt id="p2">**</bpt>CAtlArray<ph id="ph1">\&lt;</ph>LUID&gt; CLUIDArray<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Pointer to an array of DWORD objects.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>If this parameter is omitted or NULL, the attributes are not retrieved.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CAttributes<ept id="p1">**</ept> is a typedef defined as <bpt id="p2">**</bpt>CAtlArray <ph id="ph1">\&lt;</ph>DWORD&gt; CAttributes<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>This method will enumerate all of the privileges contained in the <ph id="ph1">`CTokenPrivileges`</ph> access token object and place the individual LUIDs and (optionally) the attribute flags into array objects.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>CTokenPrivileges::GetNamesAndAttributes</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Retrieves the name and attribute flags from the <ph id="ph1">`CTokenPrivileges`</ph> object.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>pNames</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Pointer to an array of <ph id="ph1">`CString`</ph> objects.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CNames<ept id="p1">**</ept> is a typedef defined as <bpt id="p2">**</bpt>CAtlArray <ph id="ph1">\&lt;</ph>CString&gt; CNames<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Pointer to an array of DWORD objects.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>If this parameter is omitted or NULL, the attributes are not retrieved.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CAttributes<ept id="p1">**</ept> is a typedef defined as <bpt id="p2">**</bpt>CAtlArray <ph id="ph1">\&lt;</ph>DWORD&gt; CAttributes<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>This method will enumerate all of the privileges contained in the <ph id="ph1">`CTokenPrivileges`</ph> object, placing the name and (optionally) the attribute flags into array objects.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>This method retrieves the attribute name, rather than the displayable name: for example, if the attribute name is SE_REMOTE_SHUTDOWN_NAME, the system name is "SeRemoteShutdownPrivilege."</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>To obtain the displayable name, use the method <bpt id="p1">[</bpt>CTokenPrivileges::GetDisplayNames<ept id="p1">](#ctokenprivileges__getdisplaynames)</ept>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>CTokenPrivileges::GetPTOKEN_PRIVILEGES</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the <bpt id="p1">**</bpt>TOKEN_PRIVILEGES<ept id="p1">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the <bpt id="p1">[</bpt>TOKEN_PRIVILEGES<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa379630)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>CTokenPrivileges::LookupPrivilege</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Retrieves the attribute associated with a given privilege name.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Pointer to a null-terminated string that specifies the name of the privilege, as defined in the WINNT.H header file.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>For example, this parameter could specify the constant SE_SECURITY_NAME, or its corresponding string, "SeSecurityPrivilege."</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Pointer to a variable that receives the attributes.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Returns true if the attribute is successfully retrieved, false otherwise.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>CTokenPrivileges::operator =</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Assignment operator.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>TOKEN_PRIVILEGES<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa379630)</ept> structure to assign to the <ph id="ph1">`CTokenPrivileges`</ph> object.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CTokenPrivileges`</ph> object to assign to the object.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Returns the updated <ph id="ph1">`CTokenPrivileges`</ph> object.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>CTokenPrivileges::operator const TOKEN_PRIVILEGES *</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Casts a value to a pointer to the <bpt id="p1">**</bpt>TOKEN_PRIVILEGES<ept id="p1">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>```operator const TOKEN_PRIVILEGES *() const throw(...);</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>