<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5a38deb5dedf3ba4bc10793400c824ced20b883b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\reference\wcsrtombs.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">839693c8ba109f1b0cd424446571404ccbd47846</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bd382c887a1c597263c43284da7ff116dca2104d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>wcsrtombs | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>wcsrtombs</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Convert a wide character string to its multibyte character string representation.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A more secure version of this function is available; see <bpt id="p1">[</bpt>wcsrtombs_s<ept id="p1">](../../c-runtime-library/reference/wcsrtombs-s.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>[out]</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The resulting converted multibyte character string's address location.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Indirectly points to the location of the wide character string to be converted.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The number of character to be converted.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A pointer to an <ph id="ph1">`mbstate_t`</ph> conversion state object.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes successfully converted, not including the null terminating null byte (if any), otherwise a -1 if an error occurred.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`wcsrtombs`</ph> function converts a string of wide characters, beginning in the specified conversion state contained in <ph id="ph2">`mbstate`</ph>, from the values indirect pointed to in <ph id="ph3">`wcstr`</ph>, into the address of <ph id="ph4">`mbstr`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The conversion will continue for each character until: after a null terminating wide character is encountered, when a non corresponding character is encountered or when the next character would exceed the limit contained in <ph id="ph1">`count`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`wcsrtombs`</ph> encounters the wide-character null character (L'\0') either before or when <ph id="ph2">`count`</ph> occurs, it converts it to an 8-bit 0 and stops.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Thus, the multibyte character string at <ph id="ph1">`mbstr`</ph> is null-terminated only if <ph id="ph2">`wcsrtombs`</ph> encounters a wide character null character during conversion.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If the sequences pointed to by <ph id="ph1">`wcstr`</ph> and <ph id="ph2">`mbstr`</ph> overlap, the behavior of <ph id="ph3">`wcsrtombs`</ph> is undefined.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>is affected by the LC_TYPE category of the current locale.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`wcsrtombs`</ph> function differs from <bpt id="p1">[</bpt>wcstombs, _wcstombs_l<ept id="p1">](../../c-runtime-library/reference/wcstombs-wcstombs-l.md)</ept> by its restartability.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The conversion state is stored in <ph id="ph1">`mbstate`</ph> for subsequent calls to the same or other restartable functions.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Results are undefined when mixing the use of restartable and nonrestartable functions.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For example, an application would use <ph id="ph1">`wcsrlen`</ph> rather than <ph id="ph2">`wcsnlen`</ph>, if a subsequent call to <ph id="ph3">`wcsrtombs`</ph> were used instead of <ph id="ph4">`wcstombs`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`mbstr`</ph> argument is <ph id="ph2">`NULL`</ph>, <ph id="ph3">`wcsrtombs`</ph> returns the required size in bytes of the destination string.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`mbstate`</ph> is null, the internal <ph id="ph2">`mbstate_t`</ph> conversion state is used.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If the character sequence <ph id="ph1">`wchar`</ph> does not have a corresponding multibyte character representation, a -1 is returned and the <ph id="ph2">`errno`</ph> is set to <ph id="ph3">`EILSEQ`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In C++, this function has a template overload that invokes the newer, secure counterpart of this function.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Secure Template Overloads<ept id="p1">](../../c-runtime-library/secure-template-overloads.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Exceptions</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`wcsrtombs`</ph> function is multithread safe as long as no function in the current thread calls <ph id="ph2">`setlocale`</ph> while this function is executing and the <ph id="ph3">`mbstate`</ph> is not null.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>.NET Framework Equivalent</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Not applicable.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To call the standard C function, use <ph id="ph1">`PInvoke`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Platform Invoke Examples<ept id="p1">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Routine</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Required header</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>wchar.h&gt;</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Data Conversion</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Locale</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Interpretation of Multibyte-Character Sequences</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>wcrtomb</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>wcrtomb_s</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>wctomb, _wctomb_l</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>wcstombs, _wcstombs_l</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>mbsinit</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>