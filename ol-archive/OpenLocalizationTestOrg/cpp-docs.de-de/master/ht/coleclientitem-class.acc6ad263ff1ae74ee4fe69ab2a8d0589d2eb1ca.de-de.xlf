<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">94c189447506a9a527957fff88ca70a89161f8f7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\coleclientitem-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">050492fbfdbd6bff6938d7c022fe5a3f71126e4a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">466dfdc591c4e77ebfc7f60d00bbb941b6811774</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>COleClientItem Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>COleClientItem Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Defines the container interface to OLE items.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>COleClientItem::COleClientItem</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`COleClientItem`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>COleClientItem::Activate</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Opens the OLE item for an operation and then executes the specified verb.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>COleClientItem::ActivateAs</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Activates the item as another type.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>COleClientItem::AttachDataObject</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Accesses the data in the OLE object.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>COleClientItem::CanCreateFromData</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Indicates whether a container application can create an embedded object.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>COleClientItem::CanCreateLinkFromData</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Indicates whether a container application can create a linked object.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>COleClientItem::CanPaste</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Indicates whether the Clipboard contains an embeddable or static OLE item.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>COleClientItem::CanPasteLink</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Indicates whether the Clipboard contains a linkable OLE item.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>COleClientItem::Close</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Closes a link to a server but does not destroy the OLE item.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>COleClientItem::ConvertTo</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Converts the item to another type.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>COleClientItem::CopyToClipboard</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Copies the OLE item to the Clipboard.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>COleClientItem::CreateCloneFrom</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Creates a duplicate of an existing item.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>COleClientItem::CreateFromClipboard</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Creates an embedded item from the Clipboard.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>COleClientItem::CreateFromData</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Creates an embedded item from a data object.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>COleClientItem::CreateFromFile</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Creates an embedded item from a file.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>COleClientItem::CreateLinkFromClipboard</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Creates a linked item from the Clipboard.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>COleClientItem::CreateLinkFromData</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Creates a linked item from a data object.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>COleClientItem::CreateLinkFromFile</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Creates a linked item from a file.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>COleClientItem::CreateNewItem</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Creates a new embedded item by launching the server application.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>COleClientItem::CreateStaticFromClipboard</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Creates a static item from the Clipboard.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>COleClientItem::CreateStaticFromData</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Creates a static item from a data object.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>COleClientItem::Deactivate</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Deactivates the item.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>COleClientItem::DeactivateUI</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Restores the container application's user interface to its original state.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>COleClientItem::Delete</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Deletes or closes the OLE item if it was a linked item.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>COleClientItem::DoDragDrop</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Performs a drag-and-drop operation.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>COleClientItem::DoVerb</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Executes the specified verb.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>COleClientItem::Draw</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Draws the OLE item.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>COleClientItem::GetActiveView</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Gets the view on which the item is activated in place.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>COleClientItem::GetCachedExtent</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Returns the bounds of the OLE item's rectangle.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>COleClientItem::GetClassID</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Gets the present item's class ID.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>COleClientItem::GetClipboardData</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Gets the data that would be placed on the Clipboard by calling the <ph id="ph1">`CopyToClipboard`</ph> member function.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>COleClientItem::GetDocument</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Returns the <ph id="ph1">`COleDocument`</ph> object that contains the present item.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>COleClientItem::GetDrawAspect</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Gets the item's current view for rendering.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>COleClientItem::GetExtent</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Returns the bounds of the OLE item's rectangle.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>COleClientItem::GetIconFromRegistry</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Retrives a handle to an icon associated with the server of a particular CLSID.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>COleClientItem::GetIconicMetafile</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Gets the metafile used for drawing the item's icon.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>COleClientItem::GetInPlaceWindow</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the item's in-place editing window.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>COleClientItem::GetItemState</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Gets the item's current state.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>COleClientItem::GetLastStatus</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Returns the status of the last OLE operation.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>COleClientItem::GetLinkUpdateOptions</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Returns the update mode for a linked item (advanced feature).</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>COleClientItem::GetType</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Returns the type (embedded, linked, or static) of the OLE item.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>COleClientItem::GetUserType</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Gets a string describing the item's type.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>COleClientItem::IsInPlaceActive</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`TRUE`</ph> if the item is in-place active.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>COleClientItem::IsLinkUpToDate</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> if a linked item is up to date with its source document.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>COleClientItem::IsModified</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`TRUE`</ph> if the item has been modified since it was last saved.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>COleClientItem::IsOpen</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`TRUE`</ph> if the item is currently open in the server application.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>COleClientItem::IsRunning</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`TRUE`</ph> if the item's server application is running.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnActivate</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Called by the framework to notify the item that it is activated.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnActivateUI</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Called by the framework to notify the item that it is activated and should show its user interface.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnChange</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Called when the server changes the OLE item.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Implementation required.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnDeactivate</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Called by the framework when an item is deactivated.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnDeactivateUI</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Called by the framework when the server has removed its in-place user interface.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnGetClipboardData</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Called by the framework to get the data to be copied to the Clipboard.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnInsertMenus</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Called by the framework to create a composite menu.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnRemoveMenus</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Called by the framework to remove the container's menus from a composite menu.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnSetMenu</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Called by the framework to install and remove a composite menu.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnShowControlBars</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Called by the framework to show and hide control bars.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnUpdateFrameTitle</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Called by the framework to update the frame window's title bar.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>COleClientItem::ReactivateAndUndo</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Reactivates the item and undoes the last in-place editing operation.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>COleClientItem::Release</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Releases the connection to an OLE linked item and closes it if it was open.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Does not destroy the client item.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>COleClientItem::Reload</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Reloads the item after a call to <ph id="ph1">`ActivateAs`</ph>.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>COleClientItem::Run</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Runs the application associated with the item.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>COleClientItem::SetDrawAspect</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Sets the item's current view for rendering.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>COleClientItem::SetExtent</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Sets the bounding rectangle of the OLE item.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>COleClientItem::SetHostNames</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Sets the names the server displays when editing the OLE item.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>COleClientItem::SetIconicMetafile</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Caches the metafile used for drawing the item's icon.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>COleClientItem::SetItemRects</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Sets the item's bounding rectangle.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>COleClientItem::SetLinkUpdateOptions</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Sets the update mode for a linked item (advanced feature).</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>COleClientItem::SetPrintDevice</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Sets the print-target device for this client item.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>COleClientItem::UpdateLink</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Updates the presentation cache of an item.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Protected Methods</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>COleClientItem::CanActivate</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Called by the framework to determine whether in-place activation is allowed.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnChangeItemPosition</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Called by the framework when an item's position changes.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnDeactivateAndUndo</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Called by the framework to undo after activation.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnDiscardUndoState</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Called by the framework to discard the item's undo state information.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnGetClipRect</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Called by the framework to get the item's clipping-rectangle coordinates.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnGetItemPosition</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Called by the framework to get the item's position relative to the view.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnGetWindowContext</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Called by the framework when an item is activated in place.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnScrollBy</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Called by the framework to scroll the item into view.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnShowItem</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Called by the framework to display the OLE item.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>An OLE item represents data, created and maintained by a server application, which can be "seamlessly" incorporated into a document so that it appears to the user to be a single document.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The result is a "compound document" made up of the OLE item and a containing document.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>An OLE item can be either embedded or linked.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>If it is embedded, its data is stored as part of the compound document.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>If it is linked, its data is stored as part of a separate file created by the server application, and only a link to that file is stored in the compound document.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>All OLE items contain information specifying the server application that should be called to edit them.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>defines several overridable functions that are called in response to requests from the server application; these overridables usually act as notifications.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>This allows the server application to inform the container of changes the user makes when editing the OLE item, or to retrieve information needed during editing.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>can be used with either the <bpt id="p1">[</bpt>COleDocument<ept id="p1">](../../mfc/reference/coledocument-class.md)</ept>, <bpt id="p2">[</bpt>COleLinkingDoc<ept id="p2">](../../mfc/reference/colelinkingdoc-class.md)</ept>, or <bpt id="p3">[</bpt>COleServerDoc<ept id="p3">](../../mfc/reference/coleserverdoc-class.md)</ept> class.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>To use <ph id="ph1">`COleClientItem`</ph>, derive a class from it and implement the <bpt id="p1">[</bpt>OnChange<ept id="p1">](#coleclientitem__onchange)</ept> member function, which defines how the container responds to changes made to the item.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>To support in-place activation, override the <bpt id="p1">[</bpt>OnGetItemPosition<ept id="p1">](#coleclientitem__ongetitemposition)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>This function provides information about the displayed position of the OLE item.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>For more information about using the container interface, see the articles <bpt id="p1">[</bpt>Containers: Implementing a Container<ept id="p1">](../../mfc/containers-implementing-a-container.md)</ept> and <bpt id="p2">[</bpt>Activation<ept id="p2">](../../mfc/activation-cpp.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> refers to embedded and linked items as "objects" and refers to types of items as "classes."</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>This reference uses the term "item" to distinguish the OLE entity from the corresponding C++ object and the term "type" to distinguish the OLE category from the C++ class.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>CObject</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>CCmdTarget</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>CDocItem</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxole.h</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>COleClientItem::Activate</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Call this function to execute the specified verb instead of <bpt id="p1">[</bpt>DoVerb<ept id="p1">](#coleclientitem__doverb)</ept> so that you can do your own processing when an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Specifies the verb to execute.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>It can be one of the following:</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Meaning</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Symbol</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>– 0</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Primary verb</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>– 1</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Secondary verb</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>(None)</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>– 1</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Display item for editing</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>– 2</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Edit item in separate window</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>– 3</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Hide item</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The –1 value is typically an alias for another verb.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>If open editing is not supported, –2 has the same effect as –1.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>For additional values, see <bpt id="p1">[</bpt>IOleObject::DoVerb<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms694508)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Pointer to the container view window that contains the OLE item; this is used by the server application for in-place activation.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>This parameter should be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> if the container does not support in-place activation.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Pointer to the message that caused the item to be activated.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>If the server application was written using the Microsoft Foundation Class Library, this function causes the <bpt id="p1">[</bpt>OnDoVerb<ept id="p1">](../../mfc/reference/coleserveritem-class.md#coleserveritem__ondoverb)</ept> member function of the corresponding <ph id="ph1">`COleServerItem`</ph> object to be executed.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>If the primary verb is Edit and zero is specified in the <ph id="ph1">`nVerb`</ph> parameter, the server application is launched to allow the OLE item to be edited.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>If the container application supports in-place activation, editing can be done in place.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>If the container does not support in-place activation (or if the Open verb is specified), the server is launched in a separate window and editing can be done there.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Typically, when the user of the container application double-clicks the OLE item, the value for the primary verb in the <ph id="ph1">`nVerb`</ph> parameter determines which action the user can take.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>However, if the server supports only one action, it takes that action, no matter which value is specified in the <ph id="ph1">`nVerb`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IOleObject::DoVerb<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms694508)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>COleClientItem::ActivateAs</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Uses OLE's object conversion facilities to activate the item as though it were an item of the type specified by <ph id="ph1">`clsidNew`</ph>.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>lpszUserType</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Pointer to a string representing the target user type, such as "Word Document."</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>clsidOld</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>A reference to the item's current class ID.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The class ID should represent the type of the actual object, as stored, unless it is a link.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>In that case, it should be the CLSID of the item to which the link refers.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>COleConvertDialog<ept id="p1">](../../mfc/reference/coleconvertdialog-class.md)</ept> automatically provides the correct class ID for the item.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>A reference to the target class ID.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>This is called automatically by <bpt id="p1">[</bpt>COleConvertDialog::DoConvert<ept id="p1">](../../mfc/reference/coleconvertdialog-class.md#coleconvertdialog__doconvert)</ept>.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>It is not usually called directly.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>COleClientItem::AttachDataObject</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Call this function to initialize a <bpt id="p1">[</bpt>COleDataObject<ept id="p1">](../../mfc/reference/coledataobject-class.md)</ept> for accessing the data in the OLE item.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>rDataObject</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Reference to a <ph id="ph1">`COleDataObject`</ph> object that will be initialized to allow access to the data in the OLE item.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>COleClientItem::CanActivate</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Called by the framework when the user requests in-place activation of the OLE item; this function's return value determines whether in-place activation is allowed.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Nonzero if in-place activation is allowed; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>The default implementation allows in-place activation if the container has a valid window.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Override this function to implement special logic for accepting or refusing the activation request.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>For example, an activation request can be refused if the OLE item is too small or not currently visible.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IOleInPlaceSite::CanInPlaceActivate<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms691236)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>COleClientItem::CanCreateFromData</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Checks whether a container application can create an embedded object from the given <ph id="ph1">`COleDataObject`</ph> object.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>COleDataObject<ept id="p1">](../../mfc/reference/coledataobject-class.md)</ept> object from which the OLE item is to be created.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Nonzero if the container can create an embedded object from the <ph id="ph1">`COleDataObject`</ph> object; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`COleDataObject`</ph> class is used in data transfers for retrieving data in various formats from the Clipboard, through drag and drop, or from an embedded OLE item.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Containers can use this function to decide to enable or disable their Edit Paste and Edit Paste Special commands.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>For more information, see the article <bpt id="p1">[</bpt>Data Objects and Data Sources (OLE)<ept id="p1">](../../mfc/data-objects-and-data-sources-ole.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>COleClientItem::CanCreateLinkFromData</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Checks whether a container application can create a linked object from the given <ph id="ph1">`COleDataObject`</ph> object.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>COleDataObject<ept id="p1">](../../mfc/reference/coledataobject-class.md)</ept> object from which the OLE item is to be created.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Nonzero if the container can create a linked object from the <ph id="ph1">`COleDataObject`</ph> object.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`COleDataObject`</ph> class is used in data transfers for retrieving data in various formats from the Clipboard, through drag and drop, or from an embedded OLE item.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Containers can use this function to decide to enable or disable their Edit Paste Special and Edit Paste Link commands.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>For more information, see the article <bpt id="p1">[</bpt>Data Objects and Data Sources (OLE)<ept id="p1">](../../mfc/data-objects-and-data-sources-ole.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>COleClientItem::CanPaste</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Call this function to see whether an embedded OLE item can be pasted from the Clipboard.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Nonzero if an embedded OLE item can be pasted from the Clipboard; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>OleGetClipboard<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms692778)</ept> and <bpt id="p2">[</bpt>OleQueryCreateFromData<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms683739)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>COleClientItem::CanPasteLink</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Call this function to see whether a linked OLE item can be pasted from the Clipboard.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Nonzero if a linked OLE item can be pasted from the Clipboard; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>OleGetClipboard<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms692778)</ept> and <bpt id="p2">[</bpt>OleQueryLinkFromData<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms690244)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>COleClientItem::Close</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Call this function to change the state of an OLE item from the running state to the loaded state, that is, loaded with its handler in memory but with the server not running.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Flag specifying under what circumstances the OLE item is saved when it returns to the loaded state.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>It can have one of the following values:</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Save the OLE item.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>Do not save the OLE item.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Prompt the user on whether to save the OLE item.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>This function has no effect when the OLE item is not running.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IOleObject::Close<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683922)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>COleClientItem::COleClientItem</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`COleClientItem`</ph> object and adds it to the container document's collection of document items, which constructs only the C++ object and does not perform any OLE initialization.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Pointer to the container document that will contain this item.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>This can be any <bpt id="p1">[</bpt>COleDocument<ept id="p1">](../../mfc/reference/coledocument-class.md)</ept> derivative.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>If you pass a <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> pointer, no addition is made to the container document.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>You must explicitly call <bpt id="p1">[</bpt>COleDocument::AddItem<ept id="p1">](../../mfc/reference/coledocument-class.md#coledocument__additem)</ept>.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>You must call one of the following creation member functions before you use the OLE item:</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>CreateFromClipboard</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>CreateFromData</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>CreateFromFile</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>CreateStaticFromClipboard</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>CreateStaticFromData</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>CreateLinkFromClipboard</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>CreateLinkFromData</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>CreateLinkFromFile</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>CreateNewItem</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>CreateCloneFrom</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>COleClientItem::ConvertTo</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Call this member function to convert the item to the type specified by <ph id="ph1">`clsidNew`</ph>.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>The class ID of the target type.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>This is called automatically by <bpt id="p1">[</bpt>COleConvertDialog<ept id="p1">](../../mfc/reference/coleconvertdialog-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>It is not necessary to call it directly.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>COleClientItem::CopyToClipboard</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Call this function to copy the OLE item to the Clipboard.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt>TRUE<ept id="p1">**</ept> if link information should be copied to the Clipboard, allowing a linked item to be pasted; otherwise <bpt id="p2">**</bpt>FALSE<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Typically, you call this function when writing message handlers for the Copy or Cut commands from the Edit menu.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>You must implement item selection in your container application if you want to implement the Copy or Cut commands.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>OleSetClipboard<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms686623)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>COleClientItem::CreateCloneFrom</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>Call this function to create a copy of the specified OLE item.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>pSrcItem</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>Pointer to the OLE item to be duplicated.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>The copy is identical to the source item.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>You can use this function to support undo operations.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>COleClientItem::CreateFromClipboard</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>Call this function to create an embedded item from the contents of the Clipboard.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>render</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Flag specifying how the server will render the OLE item.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>For the possible values, see <bpt id="p1">[</bpt>OLERENDER<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>Specifies the Clipboard data format to be cached when creating the OLE item.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure used if <bpt id="p2">*</bpt>render<ept id="p2">*</ept> is <bpt id="p3">**</bpt>OLERENDER_FORMAT<ept id="p3">**</ept> or <bpt id="p4">**</bpt>OLERENDER_DRAW<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by <ph id="ph1">`cfFormat`</ph>.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>If you omit this parameter, default values are used for the other fields in the <bpt id="p1">**</bpt>FORMATETC<ept id="p1">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>You typically call this function from the message handler for the Paste command on the Edit menu.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>(The Paste command is enabled by the framework if the <bpt id="p1">[</bpt>CanPaste<ept id="p1">](#coleclientitem__canpaste)</ept> member function returns nonzero.)</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>OLERENDER<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept> and <bpt id="p2">[</bpt>FORMATETC<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>COleClientItem::CreateFromData</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Call this function to create an embedded item from a <ph id="ph1">`COleDataObject`</ph> object.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>COleDataObject<ept id="p1">](../../mfc/reference/coledataobject-class.md)</ept> object from which the OLE item is to be created.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>render</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Flag specifying how the server will render the OLE item.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>For the possible values, see <bpt id="p1">[</bpt>OLERENDER<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>Specifies the Clipboard data format to be cached when creating the OLE item.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure used if <bpt id="p2">*</bpt>render<ept id="p2">*</ept> is <bpt id="p3">**</bpt>OLERENDER_FORMAT<ept id="p3">**</ept> or <bpt id="p4">**</bpt>OLERENDER_DRAW<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by <ph id="ph1">`cfFormat`</ph>.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>If you omit this parameter, default values are used for the other fields in the <bpt id="p1">**</bpt>FORMATETC<ept id="p1">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>Data transfer operations, such as pasting from the Clipboard or drag-and-drop operations, provide <ph id="ph1">`COleDataObject`</ph> objects containing the information offered by a server application.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>It is usually used in your override of <bpt id="p1">[</bpt>CView::OnDrop<ept id="p1">](../../mfc/reference/cview-class.md#cview__ondrop)</ept>.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>OleCreateFromData<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms691211)</ept>, <bpt id="p2">[</bpt>OLERENDER<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept>, and <bpt id="p3">[</bpt>FORMATETC<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>COleClientItem::CreateFromFile</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Call this function to create an embedded OLE item from a file.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>Pointer to the name of the file from which the OLE item is to be created.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>Reserved for future use.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>render</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Flag specifying how the server will render the OLE item.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>For the possible values, see <bpt id="p1">[</bpt>OLERENDER<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>Specifies the Clipboard data format to be cached when creating the OLE item.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure used if <bpt id="p2">*</bpt>render<ept id="p2">*</ept> is <bpt id="p3">**</bpt>OLERENDER_FORMAT<ept id="p3">**</ept> or <bpt id="p4">**</bpt>OLERENDER_DRAW<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by <ph id="ph1">`cfFormat`</ph>.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>If you omit this parameter, default values are used for the other fields in the <bpt id="p1">**</bpt>FORMATETC<ept id="p1">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>The framework calls this function from <bpt id="p1">[</bpt>COleInsertDialog::CreateItem<ept id="p1">](../../mfc/reference/coleinsertdialog-class.md#coleinsertdialog__createitem)</ept> if the user chooses OK from the Insert Object dialog box when the Create from File button is selected.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>OleCreateFromFile<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms690116)</ept>, <bpt id="p2">[</bpt>OLERENDER<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept>, and <bpt id="p3">[</bpt>FORMATETC<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>COleClientItem::CreateLinkFromClipboard</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>Call this function to create a linked item from the contents of the Clipboard.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>render</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>Flag specifying how the server will render the OLE item.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>For the possible values, see <bpt id="p1">[</bpt>OLERENDER<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>Specifies the Clipboard data format to be cached when creating the OLE item.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure used if <bpt id="p2">*</bpt>render<ept id="p2">*</ept> is <bpt id="p3">**</bpt>OLERENDER_FORMAT<ept id="p3">**</ept> or <bpt id="p4">**</bpt>OLERENDER_DRAW<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by <ph id="ph1">`cfFormat`</ph>.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>If you omit this parameter, default values are used for the other fields in the <bpt id="p1">**</bpt>FORMATETC<ept id="p1">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>You typically call this function from the message handler for the Paste Link command on the Edit menu.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>(The Paste Link command is enabled in the default implementation of <bpt id="p1">[</bpt>COleDocument<ept id="p1">](../../mfc/reference/coledocument-class.md)</ept> if the Clipboard contains an OLE item that can be linked to.)</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>OLERENDER<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept> and <bpt id="p2">[</bpt>FORMATETC<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>COleClientItem::CreateLinkFromData</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Call this function to create a linked item from a <ph id="ph1">`COleDataObject`</ph> object.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>COleDataObject<ept id="p1">](../../mfc/reference/coledataobject-class.md)</ept> object from which the OLE item is to be created.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>render</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>Flag specifying how the server will render the OLE item.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>For the possible values, see <bpt id="p1">[</bpt>OLERENDER<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>Specifies the Clipboard data format to be cached when creating the OLE item.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure used if <bpt id="p2">*</bpt>render<ept id="p2">*</ept> is <bpt id="p3">**</bpt>OLERENDER_FORMAT<ept id="p3">**</ept> or <bpt id="p4">**</bpt>OLERENDER_DRAW<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by <ph id="ph1">`cfFormat`</ph>.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>If you omit this parameter, default values are used for the other fields in the <bpt id="p1">**</bpt>FORMATETC<ept id="p1">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>Call this during a drop operation when the user indicates a link should be created.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>It can also be used to handle the Edit Paste command.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>It is called by the framework in <ph id="ph1">`COleClientItem::CreateLinkFromClipboard`</ph> and in <bpt id="p1">[</bpt>COlePasteSpecialDialog::CreateItem<ept id="p1">](../../mfc/reference/colepastespecialdialog-class.md#colepastespecialdialog__createitem)</ept> when the Link option has been selected.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>OleCreateLinkFromData<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms680731)</ept>, <bpt id="p2">[</bpt>OLERENDER<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept>, and <bpt id="p3">[</bpt>FORMATETC<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>COleClientItem::CreateLinkFromFile</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>Call this function to create a linked OLE item from a file.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>Pointer to the name of the file from which the OLE item is to be created.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>render</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>Flag specifying how the server will render the OLE item.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>For the possible values, see <bpt id="p1">[</bpt>OLERENDER<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>Specifies the Clipboard data format to be cached when creating the OLE item.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure used if <bpt id="p2">*</bpt>render<ept id="p2">*</ept> is <bpt id="p3">**</bpt>OLERENDER_FORMAT<ept id="p3">**</ept> or <bpt id="p4">**</bpt>OLERENDER_DRAW<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by <ph id="ph1">`cfFormat`</ph>.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>If you omit this parameter, default values are used for the other fields in the <bpt id="p1">**</bpt>FORMATETC<ept id="p1">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>The framework calls this function if the user chooses OK from the Insert Object dialog box when the Create from File button is selected and the Link check box is checked.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>It is called from <bpt id="p1">[</bpt>COleInsertDialog::CreateItem<ept id="p1">](../../mfc/reference/coleinsertdialog-class.md#coleinsertdialog__createitem)</ept>.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>OleCreateLinkToFile<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms678434)</ept>, <bpt id="p2">[</bpt>OLERENDER<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept>, and <bpt id="p3">[</bpt>FORMATETC<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>COleClientItem::CreateNewItem</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>Call this function to create an embedded item; this function launches the server application that allows the user to create the OLE item.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>ID that uniquely identifies the type of OLE item to create.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>render</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>Flag specifying how the server will render the OLE item.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>For the possible values, see <bpt id="p1">[</bpt>OLERENDER<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>Specifies the Clipboard data format to be cached when creating the OLE item.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure used if <bpt id="p2">*</bpt>render<ept id="p2">*</ept> is <bpt id="p3">**</bpt>OLERENDER_FORMAT<ept id="p3">**</ept> or <bpt id="p4">**</bpt>OLERENDER_DRAW<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by <ph id="ph1">`cfFormat`</ph>.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>If you omit this parameter, default values are used for the other fields in the <bpt id="p1">**</bpt>FORMATETC<ept id="p1">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>The framework calls this function if the user chooses OK from the Insert Object dialog box when the Create New button is selected.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>OleCreate<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms678409)</ept>, <bpt id="p2">[</bpt>OLERENDER<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept>, and <bpt id="p3">[</bpt>FORMATETC<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>COleClientItem::CreateStaticFromClipboard</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>Call this function to create a static item from the contents of the Clipboard.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>render</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>Flag specifying how the server will render the OLE item.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>For the possible values, see <bpt id="p1">[</bpt>OLERENDER<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>Specifies the Clipboard data format to be cached when creating the OLE item.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure used if <bpt id="p2">*</bpt>render<ept id="p2">*</ept> is <bpt id="p3">**</bpt>OLERENDER_FORMAT<ept id="p3">**</ept> or <bpt id="p4">**</bpt>OLERENDER_DRAW<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by <ph id="ph1">`cfFormat`</ph>.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>If you omit this parameter, default values are used for the other fields in the <bpt id="p1">**</bpt>FORMATETC<ept id="p1">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>A static item contains the presentation data but not the native data; consequently it cannot be edited.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>You typically call this function if the <bpt id="p1">[</bpt>CreateFromClipboard<ept id="p1">](#coleclientitem__createfromclipboard)</ept> member function fails.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>OLERENDER<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept> and <bpt id="p2">[</bpt>FORMATETC<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>COleClientItem::CreateStaticFromData</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>Call this function to create a static item from a <ph id="ph1">`COleDataObject`</ph> object.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>COleDataObject<ept id="p1">](../../mfc/reference/coledataobject-class.md)</ept> object from which the OLE item is to be created.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>render</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>Flag specifying how the server will render the OLE item.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>For the possible values, see <bpt id="p1">[</bpt>OLERENDER<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>Specifies the Clipboard data format to be cached when creating the OLE item.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure used if <bpt id="p2">*</bpt>render<ept id="p2">*</ept> is <bpt id="p3">**</bpt>OLERENDER_FORMAT<ept id="p3">**</ept> or <bpt id="p4">**</bpt>OLERENDER_DRAW<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by <ph id="ph1">`cfFormat`</ph>.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>If you omit this parameter, default values are used for the other fields in the <bpt id="p1">**</bpt>FORMATETC<ept id="p1">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>A static item contains the presentation data but not the native data; consequently, it cannot be edited.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>This is essentially the same as <bpt id="p1">[</bpt>CreateStaticFromClipboard<ept id="p1">](#coleclientitem__createstaticfromclipboard)</ept> except that a static item can be created from an arbitrary <ph id="ph1">`COleDataObject`</ph>, not just from the Clipboard.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>Used in <bpt id="p1">[</bpt>COlePasteSpecialDialog::CreateItem<ept id="p1">](../../mfc/reference/colepastespecialdialog-class.md#colepastespecialdialog__createitem)</ept> when Static is selected.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>OleCreateStaticFromData<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms687290)</ept>, <bpt id="p2">[</bpt>OLERENDER<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept>, and <bpt id="p3">[</bpt>FORMATETC<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>COleClientItem::Deactivate</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>Call this function to deactivate the OLE item and free any associated resources.</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>You typically deactivate an in-place active OLE item when the user clicks the mouse on the client area outside the bounds of the item.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>Note that deactivating the OLE item will discard its undo state, making it impossible to call the <bpt id="p1">[</bpt>ReactivateAndUndo<ept id="p1">](#coleclientitem__reactivateandundo)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>If your application supports undo, do not call <ph id="ph1">`Deactivate`</ph>; instead, call <bpt id="p1">[</bpt>DeactivateUI<ept id="p1">](#coleclientitem__deactivateui)</ept>.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IOleInPlaceObject::InPlaceDeactivate<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms679700)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>COleClientItem::DeactivateUI</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>Call this function when the user deactivates an item that was activated in place.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>This function restores the container application's user interface to its original state, hiding any menus and other controls that were created for in-place activation.</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>This function does not flush the undo state information for the item.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>That information is retained so that <bpt id="p1">[</bpt>ReactivateAndUndo<ept id="p1">](#coleclientitem__reactivateandundo)</ept> can later be used to execute an undo command in the server application, in case the container's undo command is chosen immediately after deactivating the item.</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IOleInPlaceObject::InPlaceDeactivate<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms679700)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>COleClientItem::Delete</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>Call this function to delete the OLE item from the container document.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>Specifies whether the item is to be removed from the document.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>This function calls the <bpt id="p1">[</bpt>Release<ept id="p1">](#coleclientitem__release)</ept> member function, which in turn deletes the C++ object for the item, permanently removing the OLE item from the document.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>If the OLE item is embedded, the native data for the item is deleted.</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>It always closes a running server; therefore, if the item is an open link, this function closes it.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>COleClientItem::DoDragDrop</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>Call the <ph id="ph1">`DoDragDrop`</ph> member function to perform a drag-and-drop operation.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>The item's rectangle on screen in client coordinates (pixels).</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>The offset from <ph id="ph1">`lpItemRect`</ph> where the mouse position was at the time of the drag.</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>Set this to <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> if the link data should be copied to the Clipboard.</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>Set it to <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept> if your server application does not support links.</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>Determines the effects that the drag source will allow in the drag operation.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>Pointer to the rectangle that defines where the drag actually starts.</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>For more information, see the following Remarks section.</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`DROPEFFECT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>If it is <ph id="ph1">`DROPEFFECT_MOVE`</ph>, the original data should be removed.</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>The drag-and-drop operation does not start immediately.</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>It waits until the mouse cursor leaves the rectangle specified by <ph id="ph1">`lpRectStartDrag`</ph> or until a specified number of milliseconds have passed.</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`lpRectStartDrag`</ph> is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, the size of the rectangle is one pixel.</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>The delay time is specified by a registry key setting.</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>You can change the delay time by calling <bpt id="p1">[</bpt>CWinApp::WriteProfileString<ept id="p1">](../../mfc/reference/cwinapp-class.md#cwinapp__writeprofilestring)</ept> or <bpt id="p2">[</bpt>CWinApp::WriteProfileInt<ept id="p2">](../../mfc/reference/cwinapp-class.md#cwinapp__writeprofileint)</ept>.</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>If you do not specify the delay time, a default value of 200 milliseconds is used.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>Drag delay time is stored as follows:</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>Windows NT   Drag delay time is stored in HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\NT\CurrentVersion\IniFileMapping\win.ini\Windows\DragDelay.</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>Windows 3.x   Drag delay time is stored in the WIN.INI file, under the [Windows} section.</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>Windows 95/98   Drag delay time is stored in a cached version of WIN.INI.</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>For more information about how drag delay information is stored in either the registry or the .INI file, see <bpt id="p1">[</bpt>WriteProfileString<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms725504)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>COleClientItem::DoVerb</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`DoVerb`</ph> to execute the specified verb.</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>Specifies the verb to execute.</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>It can include one of the following:</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>Meaning</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>Symbol</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>– 0</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>Primary verb</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>– 1</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>Secondary verb</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>(None)</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>– 1</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>Display item for editing</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>– 2</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>Edit item in separate window</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>– 3</source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>Hide item</source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>The –1 value is typically an alias for another verb.</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>If open editing is not supported, –2 has the same effect as –1.</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>For additional values, see <bpt id="p1">[</bpt>IOleObject::DoVerb<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms694508)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>Pointer to the view window; this is used by the server for in-place activation.</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>This parameter should be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> if the container application does not allow in-place activation.</source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>Pointer to the message that caused the item to be activated.</source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>Nonzero if the verb was successfully executed; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>This function calls the <bpt id="p1">[</bpt>Activate<ept id="p1">](#coleclientitem__activate)</ept> member function to execute the verb.</source>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>It also catches exceptions and displays a message box to the user if one is thrown.</source>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>If the primary verb is Edit and zero is specified in the <ph id="ph1">`nVerb`</ph> parameter, the server application is launched to allow the OLE item to be edited.</source>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>If the container application supports in-place activation, editing can be done in place.</source>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>If the container does not support in-place activation (or if the Open verb is specified), the server is launched in a separate window and editing can be done there.</source>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>Typically, when the user of the container application double-clicks the OLE item, the value for the primary verb in the <ph id="ph1">`nVerb`</ph> parameter determines which action the user can take.</source>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>However, if the server supports only one action, it takes that action, no matter which value is specified in the <ph id="ph1">`nVerb`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>COleClientItem::Draw</source>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>Call this function to draw the OLE item into the specified bounding rectangle using the specified device context.</source>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>CDC<ept id="p1">](../../mfc/reference/cdc-class.md)</ept> object used for drawing the OLE item.</source>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>CRect<ept id="p1">](../../atl-mfc-shared/reference/crect-class.md)</ept> object or <ph id="ph1">`RECT`</ph> structure that defines the bounding rectangle in which to draw the OLE item (in logical units determined by the device context).</source>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source>Specifies the aspect of the OLE item, that is, how it should be displayed.</source>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`nDrawAspect`</ph> is –1, the last aspect set by using <bpt id="p1">[</bpt>SetDrawAspect<ept id="p1">](#coleclientitem__setdrawaspect)</ept> is used.</source>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source>For more information about possible values for this flag, see <bpt id="p1">[</bpt>SetDrawAspect<ept id="p1">](#coleclientitem__setdrawaspect)</ept>.</source>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source>The function may use the metafile representation of the OLE item created by the <bpt id="p1">[</bpt>OnDraw<ept id="p1">](../../mfc/reference/coleserveritem-class.md#coleserveritem__ondraw)</ept> member function of <ph id="ph1">`COleServerItem`</ph>.</source>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source>Typically you use <bpt id="p1">**</bpt>Draw<ept id="p1">**</ept> for screen display, passing the screen device context as <ph id="ph1">`pDC`</ph>.</source>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>In this case, you need to specify only the first two parameters.</source>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`lpBounds`</ph> parameter identifies the rectangle in the target device context (relative to its current mapping mode).</source>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source>Rendering may involve scaling the picture and can be used by container applications to impose a view that scales between the displayed view and the final printed image.</source>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IViewObject::Draw<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms688655)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>COleClientItem::GetActiveView</source>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>Returns the view on which the item is in-place activated.</source>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source>A pointer to the view; otherwise <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> if the item is not in-place activated.</source>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>COleClientItem::GetCachedExtent</source>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source>Call this function to retrieve the OLE item's size.</source>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">**</bpt>SIZE<ept id="p1">**</ept> structure or a <bpt id="p2">[</bpt>CSize<ept id="p2">](../../atl-mfc-shared/reference/csize-class.md)</ept> object that will receive the size information.</source>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>Specifies the aspect of the OLE item whose bounds are to be retrieved.</source>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve">
          <source>For possible values, see <bpt id="p1">[</bpt>SetDrawAspect<ept id="p1">](#coleclientitem__setdrawaspect)</ept>.</source>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; 0 if the OLE item is blank.</source>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source>This function provides the same information as <bpt id="p1">[</bpt>GetExtent<ept id="p1">](#coleclientitem__getextent)</ept>.</source>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>However, you can call <ph id="ph1">`GetCachedExtent`</ph> to get extent information during the processing of other OLE handlers, such as <bpt id="p1">[</bpt>OnChange<ept id="p1">](#coleclientitem__onchange)</ept>.</source>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source>The dimensions are in <ph id="ph1">`MM_HIMETRIC`</ph> units.</source>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>This is possible because <ph id="ph1">`GetCachedExtent`</ph> uses the <bpt id="p1">[</bpt>IViewObject2<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms691318)</ept> interface rather than use the <bpt id="p2">[</bpt>IOleObject<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/dd542709)</ept> interface to get the extent of this item.</source>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>IViewObject2<ept id="p1">**</ept> COM object caches the extent information used in the previous call to <bpt id="p2">[</bpt>IViewObject::Draw<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms688655)</ept>.</source>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IViewObject2::GetExtent<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms684032)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source>COleClientItem::GetClassID</source>
        </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>Returns the class ID of the item into the memory pointed to by <ph id="ph1">`pClassID`</ph>.</source>
        </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source>Pointer to an identifier of type <bpt id="p1">[</bpt>CLSID<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms691424)</ept> to retrieve the class ID.</source>
        </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve">
          <source>For information on <bpt id="p1">**</bpt>CLSID<ept id="p1">**</ept>, see the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source>The class ID is a 128-bit number that uniquely identifies the application that edits the item.</source>
        </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IPersist::GetClassID<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms688664)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>COleClientItem::GetClipboardData</source>
        </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source>Call this function to get a <ph id="ph1">`COleDataSource`</ph> object containing all the data that would be placed on the Clipboard by a call to the <bpt id="p1">[</bpt>CopyToClipboard<ept id="p1">](#coleclientitem__copytoclipboard)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>COleDataSource<ept id="p1">](../../mfc/reference/coledatasource-class.md)</ept> object that will receive the data contained in the OLE item.</source>
        </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt>TRUE<ept id="p1">**</ept> if link data should be included; otherwise <bpt id="p2">**</bpt>FALSE<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source>The offset of the mouse cursor from the origin of the object in pixels.</source>
        </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source>The size of the object in pixels.</source>
        </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve">
          <source>is called as the default implementation of <bpt id="p1">[</bpt>OnGetClipboardData<ept id="p1">](#coleclientitem__ongetclipboarddata)</ept>.</source>
        </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve">
          <source>Override <ph id="ph1">`OnGetClipboardData`</ph> only if you want to offer data formats in addition to those offered by <ph id="ph2">`CopyToClipboard`</ph>.</source>
        </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve">
          <source>Place those formats in the <ph id="ph1">`COleDataSource`</ph> object before or after calling <ph id="ph2">`CopyToClipboard`</ph>, and then pass the <ph id="ph3">`COleDataSource`</ph> object to the <bpt id="p1">[</bpt>COleDataSource::SetClipboard<ept id="p1">](../../mfc/reference/coledatasource-class.md#coledatasource__setclipboard)</ept> function.</source>
        </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source>For example, if you want the OLE item's position in its container document to accompany it on the Clipboard, you would define your own format for passing that information and place it in the <ph id="ph1">`COleDataSource`</ph> before calling <ph id="ph2">`CopyToClipboard`</ph>.</source>
        </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source>COleClientItem::GetDocument</source>
        </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source>Call this function to get a pointer to the document that contains the OLE item.</source>
        </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source>A pointer to the document that contains the OLE item.</source>
        </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> if the item is not part of a document.</source>
        </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source>This pointer allows access to the <ph id="ph1">`COleDocument`</ph> object that you passed as an argument to the <ph id="ph2">`COleClientItem`</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve">
          <source>COleClientItem::GetDrawAspect</source>
        </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve">
          <source>Call the <ph id="ph1">`GetDrawAspect`</ph> member function to determine the current "aspect," or view, of the item.</source>
        </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve">
          <source>A value from the <ph id="ph1">`DVASPECT`</ph> enumeration, whose values are listed in the reference for <bpt id="p1">[</bpt>SetDrawAspect<ept id="p1">](#coleclientitem__setdrawaspect)</ept>.</source>
        </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve">
          <source>The aspect specifies how the item is to be rendered.</source>
        </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source>COleClientItem::GetExtent</source>
        </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>Call this function to retrieve the OLE item's size.</source>
        </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">**</bpt>SIZE<ept id="p1">**</ept> structure or a <ph id="ph1">`CSize`</ph> object that will receive the size information.</source>
        </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source>Specifies the aspect of the OLE item whose bounds are to be retrieved.</source>
        </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source>For possible values, see <bpt id="p1">[</bpt>SetDrawAspect<ept id="p1">](#coleclientitem__setdrawaspect)</ept>.</source>
        </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; 0 if the OLE item is blank.</source>
        </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve">
          <source>If the server application was written using the Microsoft Foundation Class Library, this function causes the <bpt id="p1">[</bpt>OnGetExtent<ept id="p1">](../../mfc/reference/coleserveritem-class.md#coleserveritem__ongetextent)</ept> member function of the corresponding <ph id="ph1">`COleServerItem`</ph> object to be called.</source>
        </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve">
          <source>Note that the retrieved size may differ from the size last set by the <bpt id="p1">[</bpt>SetExtent<ept id="p1">](#coleclientitem__setextent)</ept> member function; the size specified by <ph id="ph1">`SetExtent`</ph> is treated as a suggestion.</source>
        </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve">
          <source>The dimensions are in <ph id="ph1">`MM_HIMETRIC`</ph> units.</source>
        </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve">
          <source>Do not call <ph id="ph1">`GetExtent`</ph> during the processing of an OLE handler, such as <bpt id="p1">[</bpt>OnChange<ept id="p1">](#coleclientitem__onchange)</ept>.</source>
        </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve">
          <source>Call <bpt id="p1">[</bpt>GetCachedExtent<ept id="p1">](#coleclientitem__getcachedextent)</ept> instead.</source>
        </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IOleObject::GetExtent<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms692325)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve">
          <source>COleClientItem::GetIconFromRegistry</source>
        </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve">
          <source>Call this member function to retrieve a handle to an icon resource associated with the server of a particular CLSID.</source>
        </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source>A reference to the CLSID for the server associated with the icon.</source>
        </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve">
          <source>A valid handle to the icon resource, or <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> if the server's icon, or a default icon, can't be found.</source>
        </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve">
          <source>This member function will not start the server or obtain an icon dynamically, even if the server is already running.</source>
        </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve">
          <source>Instead, this member function opens the server's executable image and retrieves the static icon associated with the server as it was registered.</source>
        </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve">
          <source>COleClientItem::GetIconicMetafile</source>
        </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve">
          <source>Retrieves the metafile used for drawing the item's icon.</source>
        </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve">
          <source>A handle to the metafile if successful; otherwise <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve">
          <source>If there is no current icon, a default icon is returned.</source>
        </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve">
          <source>This is called automatically by the MFC/OLE dialogs and is usually not called directly.</source>
        </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve">
          <source>This function also calls <bpt id="p1">[</bpt>SetIconicMetafile<ept id="p1">](#coleclientitem__seticonicmetafile)</ept> to cache the metafile for later use.</source>
        </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve">
          <source>COleClientItem::GetInPlaceWindow</source>
        </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve">
          <source>Call the <ph id="ph1">`GetInPlaceWindow`</ph> member function to get a pointer to the window in which the item has been opened for in-place editing.</source>
        </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve">
          <source>A pointer to the item's in-place editing window; <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> if the item is not active or if its server is unavailable.</source>
        </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve">
          <source>This function should be called only for items that are in-place active.</source>
        </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve">
          <source>COleClientItem::GetItemState</source>
        </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve">
          <source>Call this function to get the OLE item's current state.</source>
        </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>COleClientItem::ItemState<ept id="p1">**</ept> enumerated value, which can be one of the following: <ph id="ph1">`emptyState`</ph>, <bpt id="p2">**</bpt>loadedState<ept id="p2">**</ept>, <ph id="ph2">`openState`</ph>, <ph id="ph3">`activeState`</ph>, <ph id="ph4">`activeUIState`</ph>.</source>
        </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve">
          <source>For information about these states, see the article <bpt id="p1">[</bpt>Containers: Client-Item States<ept id="p1">](../../mfc/containers-client-item-states.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve">
          <source>To be notified when the OLE item's state changes, use the <bpt id="p1">[</bpt>OnChange<ept id="p1">](#coleclientitem__onchange)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve">
          <source>For more information, see the article <bpt id="p1">[</bpt>Containers: Client-Item States<ept id="p1">](../../mfc/containers-client-item-states.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve">
          <source>COleClientItem::GetLastStatus</source>
        </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve">
          <source>Returns the status code of the last OLE operation.</source>
        </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`SCODE`</ph> value.</source>
        </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve">
          <source>For member functions that return a <bpt id="p1">**</bpt>BOOL<ept id="p1">**</ept> value of <bpt id="p2">**</bpt>FALSE<ept id="p2">**</ept>, or other member functions that return <bpt id="p3">**</bpt>NULL<ept id="p3">**</ept>, <ph id="ph1">`GetLastStatus`</ph> returns more detailed failure information.</source>
        </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve">
          <source>Be aware that most OLE member functions throw exceptions for more serious errors.</source>
        </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve">
          <source>The specific information on the interpretation of the <ph id="ph1">`SCODE`</ph> depends on the underlying OLE call that last returned an <ph id="ph2">`SCODE`</ph> value.</source>
        </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve">
          <source>For more information on <ph id="ph1">`SCODE`</ph>, see <bpt id="p1">[</bpt>Structure of COM Error Codes<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms690088)</ept> in the <ph id="ph2">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> documentation.</source>
        </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve">
          <source>COleClientItem::GetLinkUpdateOptions</source>
        </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve">
          <source>Call this function to get the current value of the link-update option for the OLE item.</source>
        </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve">
          <source>One of the following values:</source>
        </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve">
          <source>Update the linked item whenever possible.</source>
        </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve">
          <source>This option supports the Automatic link-update radio button in the Links dialog box.</source>
        </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve">
          <source>Update the linked item only on request from the container application (when the <bpt id="p1">[</bpt>UpdateLink<ept id="p1">](#coleclientitem__updatelink)</ept> member function is called).</source>
        </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve">
          <source>This option supports the Manual link-update radio button in the Links dialog box.</source>
        </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve">
          <source>This is an advanced operation.</source>
        </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve">
          <source>This function is called automatically by the <bpt id="p1">[</bpt>COleLinksDialog<ept id="p1">](../../mfc/reference/colelinksdialog-class.md)</ept> class.</source>
        </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IOleLink::GetUpdateOptions<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms680100)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve">
          <source>COleClientItem::GetType</source>
        </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve">
          <source>Call this function to determine whether the OLE item is embedded or linked, or static.</source>
        </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve">
          <source>An unsigned integer with one of the following values:</source>
        </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve">
          <source>The OLE item is a link.</source>
        </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve">
          <source>The OLE item is embedded.</source>
        </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve">
          <source>The OLE item is static, that is, it contains only presentation data, not native data, and thus cannot be edited.</source>
        </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve">
          <source>COleClientItem::GetUserType</source>
        </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve">
          <source>Call this function to get the user-visible string describing the OLE item's type, such as "Word document."</source>
        </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve">
          <source>nUserClassType</source>
        </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve">
          <source>A value indicating the desired variant of the string describing the OLE item's type.</source>
        </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve">
          <source>This can have one of the following values:</source>
        </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve">
          <source>The full type name displayed to the user.</source>
        </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve">
          <source>A short name (15 characters maximum) for use in pop-up menus and the Edit Links dialog box.</source>
        </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve">
          <source>Name of the application servicing the class.</source>
        </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">[</bpt>CString<ept id="p1">](../../atl-mfc-shared/reference/cstringt-class.md)</ept> object to which the string describing the OLE item's type is to be returned.</source>
        </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve">
          <source>This is often the entry in the system registration database.</source>
        </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve">
          <source>If the full type name is requested but not available, the short name is used instead.</source>
        </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve">
          <source>If no entry for the type of OLE item is found in the registration database, or if there are no user types registered for the type of OLE item, then the user type currently stored in the OLE item is used.</source>
        </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve">
          <source>If that user type name is an empty string, "Unknown Object" is used.</source>
        </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IOleObject::GetUserType<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms688643)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve">
          <source>COleClientItem::IsInPlaceActive</source>
        </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve">
          <source>Call this function to see whether the OLE item is in-place active.</source>
        </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve">
          <source>Nonzero if the OLE item is in-place active; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve">
          <source>It is common to execute different logic depending on whether the item is being edited in place.</source>
        </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve">
          <source>The function checks whether the current item state is equal to either the <ph id="ph1">`activeState`</ph> or the <ph id="ph2">`activeUIState`</ph>.</source>
        </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve">
          <source>COleClientItem::IsLinkUpToDate</source>
        </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve">
          <source>Call this function to see whether the OLE item is up to date.</source>
        </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve">
          <source>Nonzero if the OLE item is up to date; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve">
          <source>A linked item can be out of date if its source document has been updated.</source>
        </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve">
          <source>An embedded item that contains links within it can similarly become out of date.</source>
        </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve">
          <source>The function does a recursive check of the OLE item.</source>
        </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve">
          <source>Note that determining whether an OLE item is out of date can be as expensive as actually performing an update.</source>
        </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve">
          <source>This is called automatically by the <bpt id="p1">[</bpt>COleLinksDialog<ept id="p1">](../../mfc/reference/colelinksdialog-class.md)</ept> implementation.</source>
        </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IOleObject::IsUpToDate<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms686624)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve">
          <source>COleClientItem::IsModified</source>
        </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve">
          <source>Call this function to see whether the OLE item is dirty (modified since it was last saved).</source>
        </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve">
          <source>Nonzero if the OLE item is dirty; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IPersistStorage::IsDirty<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683910)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve">
          <source>COleClientItem::IsOpen</source>
        </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve">
          <source>Call this function to see whether the OLE item is open; that is, opened in an instance of the server application running in a separate window.</source>
        </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve">
          <source>Nonzero if the OLE item is open; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve">
          <source>It is used to determine when to draw the object with a hatching pattern.</source>
        </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve">
          <source>An open object should have a hatch pattern drawn on top of the object.</source>
        </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve">
          <source>You can use a <bpt id="p1">[</bpt>CRectTracker<ept id="p1">](../../mfc/reference/crecttracker-class.md)</ept> object to accomplish this.</source>
        </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve">
          <source>COleClientItem::IsRunning</source>
        </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve">
          <source>Call this function to see whether the OLE item is running; that is, whether the item is loaded and running in the server application.</source>
        </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve">
          <source>Nonzero if the OLE item is running; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>OleIsRunning<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms688705)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnActivate</source>
        </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve">
          <source>Called by the framework to notify the item that it has just been activated in place.</source>
        </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve">
          <source>Note that this function is called to indicate that the server is running, not to indicate that its user interface has been installed in the container application.</source>
        </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve">
          <source>At this point, the object does not have an active user interface (is not <ph id="ph1">`activeUIState`</ph>).</source>
        </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve">
          <source>It has not installed its menus or toolbar.</source>
        </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>OnActivateUI<ept id="p1">](#coleclientitem__onactivateui)</ept> member function is called when that happens.</source>
        </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve">
          <source>The default implementation calls the <bpt id="p1">[</bpt>OnChange<ept id="p1">](#coleclientitem__onchange)</ept> member function with <bpt id="p2">**</bpt>OLE_CHANGEDSTATE<ept id="p2">**</ept> as a parameter.</source>
        </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve">
          <source>Override this function to perform custom processing when an item becomes in-place active.</source>
        </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnActivateUI</source>
        </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve">
          <source>The framework calls <ph id="ph1">`OnActivateUI`</ph> when the object has entered the active UI state.</source>
        </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve">
          <source>The object has now installed its tool bar and menus.</source>
        </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve">
          <source>The default implementation remembers the server's <ph id="ph1">`HWND`</ph> for later <bpt id="p1">**</bpt>GetServerWindow<ept id="p1">**</ept> calls.</source>
        </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnChange</source>
        </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve">
          <source>Called by the framework when the user modifies, saves, or closes the OLE item.</source>
        </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve">
          <source>The reason the server changed this item.</source>
        </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve">
          <source>It can have one of the following values:</source>
        </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve">
          <source>The OLE item's appearance has changed.</source>
        </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve">
          <source>The OLE item has been saved.</source>
        </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve">
          <source>The OLE item has been closed.</source>
        </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve">
          <source>The OLE item has changed from one state to another.</source>
        </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`nCode`</ph> is <ph id="ph2">`OLE_SAVED`</ph> or <ph id="ph3">`OLE_CLOSED`</ph>, this parameter is not used.</source>
        </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`nCode`</ph> is <ph id="ph2">`OLE_CHANGED`</ph>, this parameter specifies the aspect of the OLE item that has changed.</source>
        </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve">
          <source>For possible values, see the <ph id="ph1">`dwParam`</ph> parameter of <bpt id="p1">[</bpt>COleClientItem::Draw<ept id="p1">](#coleclientitem__draw)</ept>.</source>
        </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`nCode`</ph> is <ph id="ph2">`OLE_CHANGED_STATE`</ph>, this parameter is a <bpt id="p1">**</bpt>COleClientItem::ItemState<ept id="p1">**</ept> enumerated value and describes the state being entered.</source>
        </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve">
          <source>It can have one of the following values: <ph id="ph1">`emptyState`</ph>, <bpt id="p1">**</bpt>loadedState<ept id="p1">**</ept>, <ph id="ph2">`openState`</ph>, <ph id="ph3">`activeState`</ph>, or <ph id="ph4">`activeUIState`</ph>.</source>
        </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve">
          <source>(If the server application is written using the Microsoft Foundation Class Library, this function is called in response to the <ph id="ph1">`Notify`</ph> member functions of <ph id="ph2">`COleServerDoc`</ph> or <ph id="ph3">`COleServerItem`</ph>.) The default implementation marks the container document as modified if <ph id="ph4">`nCode`</ph> is <ph id="ph5">`OLE_CHANGED`</ph> or <ph id="ph6">`OLE_SAVED`</ph>.</source>
        </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">`OLE_CHANGED_STATE`</ph>, the current state returned from <bpt id="p1">[</bpt>GetItemState<ept id="p1">](#coleclientitem__getitemstate)</ept> will still be the old state, meaning the state that was current prior to this state change.</source>
        </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve">
          <source>Override this function to respond to changes in the OLE item's state.</source>
        </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve">
          <source>Typically you update the item's appearance by invalidating the area in which the item is displayed.</source>
        </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve">
          <source>Call the base class implementation at the beginning of your override.</source>
        </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnChangeItemPosition</source>
        </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve">
          <source>Called by the framework to notify the container that the OLE item's extent has changed during in-place activation.</source>
        </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve">
          <source>rectPos</source>
        </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve">
          <source>Indicates the item's position relative to the container application's client area.</source>
        </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve">
          <source>Nonzero if the item's position is successfully changed; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve">
          <source>The default implementation determines the new visible rectangle of the OLE item and calls <bpt id="p1">[</bpt>SetItemRects<ept id="p1">](#coleclientitem__setitemrects)</ept> with the new values.</source>
        </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve">
          <source>The default implementation calculates the visible rectangle for the item and passes that information to the server.</source>
        </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve">
          <source>Override this function to apply special rules to the resize/move operation.</source>
        </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve">
          <source>If the application is written in MFC, this call results because the server called <bpt id="p1">[</bpt>COleServerDoc::RequestPositionChange<ept id="p1">](../../mfc/reference/coleserverdoc-class.md#coleserverdoc__requestpositionchange)</ept>.</source>
        </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnDeactivate</source>
        </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve">
          <source>Called by the framework when the OLE item transitions from the in-place active state ( <ph id="ph1">`activeState`</ph>) to the loaded state, meaning that it is deactivated after an in-place activation.</source>
        </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve">
          <source>Note that this function is called to indicate that the OLE item is closed, not that its user interface has been removed from the container application.</source>
        </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve">
          <source>When that happens, the <bpt id="p1">[</bpt>OnDeactivateUI<ept id="p1">](#coleclientitem__ondeactivateui)</ept> member function is called.</source>
        </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve">
          <source>The default implementation calls the <bpt id="p1">[</bpt>OnChange<ept id="p1">](#coleclientitem__onchange)</ept> member function with <bpt id="p2">**</bpt>OLE_CHANGEDSTATE<ept id="p2">**</ept> as a parameter.</source>
        </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve">
          <source>Override this function to perform custom processing when an in-place active item is deactivated.</source>
        </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve">
          <source>For example, if you support the undo command in your container application, you can override this function to discard the undo state, indicating that the last operation performed on the OLE item cannot be undone once the item is deactivated.</source>
        </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnDeactivateAndUndo</source>
        </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve">
          <source>Called by the framework when the user invokes the undo command after activating the OLE item in place.</source>
        </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve">
          <source>The default implementation calls <bpt id="p1">[</bpt>DeactivateUI<ept id="p1">](#coleclientitem__deactivateui)</ept> to deactivate the server's user interface.</source>
        </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve">
          <source>Override this function if you are implementing the undo command in your container application.</source>
        </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve">
          <source>In your override, call the base class version of the function and then undo the last command executed in your application.</source>
        </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IOleInPlaceSite::DeactivateAndUndo<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683743)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnDeactivateUI</source>
        </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve">
          <source>Called when the user deactivates an item that was activated in place.</source>
        </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve">
          <source>Specifies whether the editing changes are undoable.</source>
        </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve">
          <source>This function restores the container application's user interface to its original state, hiding any menus and other controls that were created for in-place activation.</source>
        </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`bUndoable`</ph> is <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>, the container should disable the undo command, in effect discarding the undo state of the container, because it indicates that the last operation performed by the server is not undoable.</source>
        </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnDiscardUndoState</source>
        </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve">
          <source>Called by the framework when the user performs an action that discards the undo state while editing the OLE item.</source>
        </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve">
          <source>The default implementation does nothing.</source>
        </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve">
          <source>Override this function if you are implementing the undo command in your container application.</source>
        </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve">
          <source>In your override, discard the container application's undo state.</source>
        </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve">
          <source>If the server was written with the Microsoft Foundation Class Library, the server can cause this function to be called by calling <bpt id="p1">[</bpt>COleServerDoc::DiscardUndoState<ept id="p1">](../../mfc/reference/coleserverdoc-class.md#coleserverdoc__discardundostate)</ept>.</source>
        </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IOleInPlaceSite::DiscardUndoState<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms688642)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnGetClipboardData</source>
        </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve">
          <source>Called by the framework to get a <ph id="ph1">`COleDataSource`</ph> object containing all the data that would be placed on the Clipboard by a call to either the <bpt id="p1">[</bpt>CopyToClipboard<ept id="p1">](#coleclientitem__copytoclipboard)</ept> or the <bpt id="p2">[</bpt>DoDragDrop<ept id="p2">](#coleclientitem__dodragdrop)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve">
          <source>Set this to <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> if link data should be copied to the Clipboard.</source>
        </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve">
          <source>Set this to <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept> if your server application does not support links.</source>
        </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve">
          <source>Pointer to the offset of the mouse cursor from the origin of the object in pixels.</source>
        </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve">
          <source>Pointer to the size of the object in pixels.</source>
        </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>COleDataSource<ept id="p1">](../../mfc/reference/coledatasource-class.md)</ept> object containing the Clipboard data.</source>
        </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve">
          <source>The default implementation of this function calls <bpt id="p1">[</bpt>GetClipboardData<ept id="p1">](#coleclientitem__getclipboarddata)</ept>.</source>
        </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnGetClipRect</source>
        </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve">
          <source>The framework calls the <ph id="ph1">`OnGetClipRect`</ph> member function to get the clipping-rectangle coordinates of the item that is being edited in place.</source>
        </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve">
          <source>rClipRect</source>
        </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve">
          <source>Pointer to an object of class <bpt id="p1">[</bpt>CRect<ept id="p1">](../../atl-mfc-shared/reference/crect-class.md)</ept> that will hold the clipping-rectangle coordinates of the item.</source>
        </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve">
          <source>Coordinates are in pixels relative to the container application window's client area.</source>
        </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve">
          <source>The default implementation simply returns the client rectangle of the view on which the item is in-place active.</source>
        </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnGetItemPosition</source>
        </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve">
          <source>The framework calls the <ph id="ph1">`OnGetItemPosition`</ph> member function to get the coordinates of the item that is being edited in place.</source>
        </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve">
          <source>Reference to the <bpt id="p1">[</bpt>CRect<ept id="p1">](../../atl-mfc-shared/reference/crect-class.md)</ept> object that will contain the item's position coordinates.</source>
        </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve">
          <source>Coordinates are in pixels relative to the container application window's client area.</source>
        </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve">
          <source>The default implementation of this function does nothing.</source>
        </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve">
          <source>Applications that support in-place editing require its implementation.</source>
        </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnGetWindowContext</source>
        </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve">
          <source>Called by the framework when an item is activated in place.</source>
        </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve">
          <source>Pointer to a pointer to the main frame window.</source>
        </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve">
          <source>Pointer to a pointer to the document frame window.</source>
        </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve">
          <source>Pointer to an <bpt id="p1">[</bpt>OLEINPLACEFRAMEINFO<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms693737)</ept> structure that will receive frame window information.</source>
        </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve">
          <source>This function is used to retrieve information about the OLE item's parent window.</source>
        </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve">
          <source>If the container is an MDI application, the default implementation returns a pointer to the <bpt id="p1">[</bpt>CMDIFrameWnd<ept id="p1">](../../mfc/reference/cmdiframewnd-class.md)</ept> object in <ph id="ph1">`ppMainFrame`</ph> and a pointer to the active <bpt id="p2">[</bpt>CMDIChildWnd<ept id="p2">](../../mfc/reference/cmdichildwnd-class.md)</ept> object in <ph id="ph2">`ppDocFrame`</ph>.</source>
        </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve">
          <source>If the container is an SDI application, the default implementation returns a pointer to the <bpt id="p1">[</bpt>CFrameWnd<ept id="p1">](../../mfc/reference/cframewnd-class.md)</ept> object in <ph id="ph1">`ppMainFrame`</ph> and returns <bpt id="p2">**</bpt>NULL<ept id="p2">**</ept> in <ph id="ph2">`ppDocFrame`</ph>.</source>
        </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve">
          <source>The default implementation also fills in the members of <ph id="ph1">`lpFrameInfo`</ph>.</source>
        </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve">
          <source>Override this function only if the default implementation does not suit your application; for example, if your application has a user-interface paradigm that differs from SDI or MDI.</source>
        </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve">
          <source>This is an advanced overridable.</source>
        </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IOleInPlaceSite::GetWindowContext<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms694366)</ept> and the <bpt id="p2">[</bpt>OLEINPLACEFRAMEINFO<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms693737)</ept> structure in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnInsertMenus</source>
        </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve">
          <source>Called by the framework during in-place activation to insert the container application's menus into an empty menu.</source>
        </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve">
          <source>Points to an empty menu.</source>
        </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve">
          <source>Points to an array of six <bpt id="p1">**</bpt>LONG<ept id="p1">**</ept> values indicating how many menus are in each of the following menu groups: File, Edit, Container, Object, Window, Help.</source>
        </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve">
          <source>The container application is responsible for the File, Container, and Window menu groups, corresponding to elements 0, 2, and 4 of this array.</source>
        </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve">
          <source>This menu is then passed to the server, which inserts its own menus, creating a composite menu.</source>
        </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve">
          <source>This function can be called repeatedly to build several composite menus.</source>
        </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve">
          <source>The default implementation inserts into <ph id="ph1">`pMenuShared`</ph> the in-place container menus; that is, the File, Container, and Window menu groups.</source>
        </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CDocTemplate::SetContainerInfo<ept id="p1">](../../mfc/reference/cdoctemplate-class.md#cdoctemplate__setcontainerinfo)</ept> is used to set this menu resource.</source>
        </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve">
          <source>The default implementation also assigns the appropriate values to elements 0, 2, and 4 in <ph id="ph1">`lpMenuWidths`</ph>, depending on the menu resource.</source>
        </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve">
          <source>Override this function if the default implementation is not appropriate for your application; for example, if your application does not use document templates for associating resources with document types.</source>
        </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve">
          <source>If you override this function, you should also override <bpt id="p1">[</bpt>OnSetMenu<ept id="p1">](#coleclientitem__onsetmenu)</ept> and <bpt id="p2">[</bpt>OnRemoveMenus<ept id="p2">](#coleclientitem__onremovemenus)</ept>.</source>
        </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve">
          <source>This is an advanced overridable.</source>
        </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IOleInPlaceFrame::InsertMenus<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683987)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnRemoveMenus</source>
        </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve">
          <source>Called by the framework to remove the container's menus from the specified composite menu when in-place activation ends.</source>
        </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve">
          <source>Points to the composite menu constructed by calls to the <bpt id="p1">[</bpt>OnInsertMenus<ept id="p1">](#coleclientitem__oninsertmenus)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve">
          <source>The default implementation removes from <ph id="ph1">`pMenuShared`</ph> the in-place container menus, that is, the File, Container, and Window menu groups.</source>
        </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve">
          <source>Override this function if the default implementation is not appropriate for your application; for example, if your application does not use document templates for associating resources with document types.</source>
        </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve">
          <source>If you override this function, you should probably override <bpt id="p1">[</bpt>OnInsertMenus<ept id="p1">](#coleclientitem__oninsertmenus)</ept> and <bpt id="p2">[</bpt>OnSetMenu<ept id="p2">](#coleclientitem__onsetmenu)</ept> as well.</source>
        </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve">
          <source>This is an advanced overridable.</source>
        </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve">
          <source>The submenus on <ph id="ph1">`pMenuShared`</ph> may be shared by more than one composite menu if the server has repeatedly called <ph id="ph2">`OnInsertMenus`</ph>.</source>
        </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve">
          <source>Therefore you should not delete any submenus in your override of <ph id="ph1">`OnRemoveMenus`</ph>; you should only detach them.</source>
        </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IOleInPlaceFrame::RemoveMenus<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms688685)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnScrollBy</source>
        </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve">
          <source>Called by the framework to scroll the OLE item in response to requests from the server.</source>
        </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve">
          <source>sizeExtent</source>
        </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve">
          <source>Specifies the distances, in pixels, to scroll in the x and y directions.</source>
        </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve">
          <source>Nonzero if the item was scrolled; 0 if the item could not be scrolled.</source>
        </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve">
          <source>For example, if the OLE item is partially visible and the user moves outside the visible region while performing in-place editing, this function is called to keep the cursor visible.</source>
        </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve">
          <source>The default implementation does nothing.</source>
        </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve">
          <source>Override this function to scroll the item by the specified amount.</source>
        </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve">
          <source>Note that as a result of scrolling, the visible portion of the OLE item can change.</source>
        </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve">
          <source>Call <bpt id="p1">[</bpt>SetItemRects<ept id="p1">](#coleclientitem__setitemrects)</ept> to update the item's visible rectangle.</source>
        </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IOleInPlaceSite::Scroll<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms690291)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnSetMenu</source>
        </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve">
          <source>Called by the framework two times when in-place activation begins and ends; the first time to install the composite menu and the second time (with <ph id="ph1">`holemenu`</ph> equal to <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>) to remove it.</source>
        </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve">
          <source>Pointer to the composite menu constructed by calls to the <bpt id="p1">[</bpt>OnInsertMenus<ept id="p1">](#coleclientitem__oninsertmenus)</ept> member function and the <ph id="ph1">`InsertMenu`</ph> function.</source>
        </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve">
          <source>Handle to the menu descriptor returned by the <bpt id="p1">**</bpt>OleCreateMenuDescriptor<ept id="p1">**</ept> function, or <bpt id="p2">**</bpt>NULL<ept id="p2">**</ept> if the dispatching code is to be removed.</source>
        </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve">
          <source>hwndActiveObject</source>
        </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve">
          <source>Handle to the editing window for the OLE item.</source>
        </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve">
          <source>This is the window that will receive editing commands from OLE.</source>
        </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve">
          <source>The default implementation installs or removes the composite menu and then calls the <bpt id="p1">[</bpt>OleSetMenuDescriptor<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms692831)</ept> function to install or remove the dispatching code.</source>
        </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve">
          <source>Override this function if the default implementation is not appropriate for your application.</source>
        </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve">
          <source>If you override this function, you should probably override <bpt id="p1">[</bpt>OnInsertMenus<ept id="p1">](#coleclientitem__oninsertmenus)</ept> and <bpt id="p2">[</bpt>OnRemoveMenus<ept id="p2">](#coleclientitem__onremovemenus)</ept> as well.</source>
        </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve">
          <source>This is an advanced overridable.</source>
        </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>OleCreateMenuDescriptor<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms691415)</ept>, <bpt id="p2">[</bpt>OleSetMenuDescriptor<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms692831)</ept>, and <bpt id="p3">[</bpt>IOleInPlaceFrame::SetMenu<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms693713)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnShowControlBars</source>
        </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve">
          <source>Called by the framework to show and hide the container application's control bars.</source>
        </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve">
          <source>Pointer to the container application's frame window.</source>
        </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve">
          <source>This can be either a main frame window or an MDI child window.</source>
        </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve">
          <source>Specifies whether control bars are to be shown or hidden.</source>
        </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve">
          <source>Nonzero if the function call causes a change in the control bars' state; 0 if the call causes no change, or if <ph id="ph1">`pFrameWnd`</ph> does not point to the container's frame window.</source>
        </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve">
          <source>This function returns 0 if the control bars are already in the state specified by <bpt id="p1">*</bpt>bShow.<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve">
          <source>This would occur, for example, if the control bars are hidden and <ph id="ph1">`bShow`</ph> is <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve">
          <source>The default implementation removes the toolbar from the top-level frame window.</source>
        </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnShowItem</source>
        </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve">
          <source>Called by the framework to display the OLE item, making it totally visible during editing.</source>
        </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve">
          <source>It is used when your container application supports links to embedded items (that is, if you have derived your document class from <bpt id="p1">[</bpt>COleLinkingDoc<ept id="p1">](../../mfc/reference/colelinkingdoc-class.md)</ept>).</source>
        </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve">
          <source>This function is called during in-place activation or when the OLE item is a link source and the user wants to edit it.</source>
        </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve">
          <source>The default implementation activates the first view on the container document.</source>
        </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve">
          <source>Override this function to scroll the document so that the OLE item is visible.</source>
        </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve">
          <source>COleClientItem::OnUpdateFrameTitle</source>
        </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve">
          <source>Called by the framework during in-place activation to update the frame window's title bar.</source>
        </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve">
          <source>Nonzero if this function successfully updated the frame title, otherwise zero.</source>
        </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve">
          <source>The default implementation does not change the frame window title.</source>
        </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve">
          <source>Override this function if you want a different frame title for your application, for example " <bpt id="p1">*</bpt>server app<ept id="p1">*</ept><ph id="ph1"> - </ph><bpt id="p2">*</bpt>item<ept id="p2">*</ept> in <bpt id="p3">*</bpt>docname<ept id="p3">*</ept>" (as in, "Microsoft Excel - spreadsheet in REPORT.DOC").</source>
        </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve">
          <source>This is an advanced overridable.</source>
        </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve">
          <source>COleClientItem::ReactivateAndUndo</source>
        </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve">
          <source>Call this function to reactivate the OLE item and undo the last operation performed by the user during in-place editing.</source>
        </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve">
          <source>If your container application supports the undo command, call this function if the user chooses the undo command immediately after deactivating the OLE item.</source>
        </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve">
          <source>If the server application is written with the Microsoft Foundation Class Libraries, this function causes the server to call <bpt id="p1">[</bpt>COleServerDoc::OnReactivateAndUndo<ept id="p1">](../../mfc/reference/coleserverdoc-class.md#coleserverdoc__onreactivateandundo)</ept>.</source>
        </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IOleInPlaceObject::ReactivateAndUndo<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms691372)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve">
          <source>COleClientItem::Release</source>
        </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve">
          <source>Call this function to clean up resources used by the OLE item.</source>
        </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve">
          <source>Flag specifying under what circumstances the OLE item is saved when it returns to the loaded state.</source>
        </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve">
          <source>For a list of possible values, see <bpt id="p1">[</bpt>COleClientItem::Close<ept id="p1">](#coleclientitem__close)</ept>.</source>
        </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Release<ept id="p1">**</ept> is called by the <ph id="ph1">`COleClientItem`</ph> destructor.</source>
        </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IUnknown::Release<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682317)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve">
          <source>COleClientItem::Reload</source>
        </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve">
          <source>Closes and reloads the item.</source>
        </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve">
          <source>Call the <ph id="ph1">`Reload`</ph> function after activating the item as an item of another type by a call to <bpt id="p1">[</bpt>ActivateAs<ept id="p1">](#coleclientitem__activateas)</ept>.</source>
        </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve">
          <source>COleClientItem::Run</source>
        </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve">
          <source>Runs the application associated with this item.</source>
        </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve">
          <source>Call the <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> member function to launch the server application before activating the item.</source>
        </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve">
          <source>This is done automatically by <bpt id="p1">[</bpt>Activate<ept id="p1">](#coleclientitem__activate)</ept> and <bpt id="p2">[</bpt>DoVerb<ept id="p2">](#coleclientitem__doverb)</ept>, so it is usually not necessary to call this function.</source>
        </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve">
          <source>Call this function if it is necessary to run the server in order to set an item attribute, such as <bpt id="p1">[</bpt>SetExtent<ept id="p1">](#coleclientitem__setextent)</ept>, before executing <bpt id="p2">[</bpt>DoVerb<ept id="p2">](#coleclientitem__doverb)</ept>.</source>
        </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve">
          <source>COleClientItem::SetDrawAspect</source>
        </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve">
          <source>Call the <ph id="ph1">`SetDrawAspect`</ph> member function to set the "aspect," or view, of the item.</source>
        </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve">
          <source>A value from the <ph id="ph1">`DVASPECT`</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve">
          <source>This parameter can have one of the following values:</source>
        </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve">
          <source>Item is represented in such a way that it can be displayed as an embedded object inside its container.</source>
        </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve">
          <source>Item is rendered in a "thumbnail" representation so that it can be displayed in a browsing tool.</source>
        </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve">
          <source>Item is represented by an icon.</source>
        </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve">
          <source>Item is represented as if it were printed using the Print command from the File menu.</source>
        </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve">
          <source>The aspect specifies how the item is to be rendered by <bpt id="p1">[</bpt>Draw<ept id="p1">](#coleclientitem__draw)</ept> when the default value for that function's <ph id="ph1">`nDrawAspect`</ph> argument is used.</source>
        </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve">
          <source>This function is called automatically by the Change Icon (and other dialogs that call the Change Icon dialog directly) to enable the iconic display aspect when requested by the user.</source>
        </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve">
          <source>COleClientItem::SetExtent</source>
        </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve">
          <source>Call this function to specify how much space is available to the OLE item.</source>
        </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>CSize<ept id="p1">](../../atl-mfc-shared/reference/csize-class.md)</ept> object that contains the size information.</source>
        </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve">
          <source>Specifies the aspect of the OLE item whose bounds are to be set.</source>
        </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve">
          <source>For possible values, see <bpt id="p1">[</bpt>SetDrawAspect<ept id="p1">](#coleclientitem__setdrawaspect)</ept>.</source>
        </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve">
          <source>If the server application was written using the Microsoft Foundation Class Library, this causes the <bpt id="p1">[</bpt>OnSetExtent<ept id="p1">](../../mfc/reference/coleserveritem-class.md#coleserveritem__onsetextent)</ept> member function of the corresponding <ph id="ph1">`COleServerItem`</ph> object to be called.</source>
        </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve">
          <source>The OLE item can then adjust its display accordingly.</source>
        </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve">
          <source>The dimensions must be in <ph id="ph1">`MM_HIMETRIC`</ph> units.</source>
        </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve">
          <source>Call this function when the user resizes the OLE item or if you support some form of layout negotiation.</source>
        </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IOleObject::SetExtent<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms694330)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve">
          <source>COleClientItem::SetHostNames</source>
        </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve">
          <source>Call this function to specify the name of the container application and the container's name for an embedded OLE item.</source>
        </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve">
          <source>Pointer to the user-visible name of the container application.</source>
        </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve">
          <source>Pointer to an identifying string of the container that contains the OLE item.</source>
        </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve">
          <source>If the server application was written using the Microsoft Foundation Class Library, this function calls the <bpt id="p1">[</bpt>OnSetHostNames<ept id="p1">](../../mfc/reference/coleserverdoc-class.md#coleserverdoc__onsethostnames)</ept> member function of the <ph id="ph1">`COleServerDoc`</ph> document that contains the OLE item.</source>
        </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve">
          <source>This information is used in window titles when the OLE item is being edited.</source>
        </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve">
          <source>Each time a container document is loaded, the framework calls this function for all the OLE items in the document.</source>
        </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve">
          <source>is applicable only to embedded items.</source>
        </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve">
          <source>It is not necessary to call this function each time an embedded OLE item is activated for editing.</source>
        </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve">
          <source>This is also called automatically with the application name and document name when an object is loaded or when a file is saved under a different name.</source>
        </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve">
          <source>Accordingly, it is not usually necessary to call this function directly.</source>
        </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IOleObject::SetHostNames<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms680642)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve">
          <source>COleClientItem::SetIconicMetafile</source>
        </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve">
          <source>Caches the metafile used for drawing the item's icon.</source>
        </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve">
          <source>A handle to the metafile used for drawing the item's icon.</source>
        </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>GetIconicMetafile<ept id="p1">](#coleclientitem__geticonicmetafile)</ept> to retrieve the metafile.</source>
        </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`hMetaPict`</ph> parameter is copied into the item; therefore, <ph id="ph2">`hMetaPict`</ph> must be freed by the caller.</source>
        </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve">
          <source>COleClientItem::SetItemRects</source>
        </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve">
          <source>Call this function to set the bounding rectangle or the visible rectangle of the OLE item.</source>
        </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve">
          <source>lprcPosRect</source>
        </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve">
          <source>Pointer to the rectangle containing the bounds of the OLE item relative to its parent window, in client coordinates.</source>
        </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve">
          <source>lprcClipRect</source>
        </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve">
          <source>Pointer to the rectangle containing the bounds of the visible portion of the OLE item relative to its parent window, in client coordinates.</source>
        </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise, 0.</source>
        </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve">
          <source>This function is called by the default implementation of the <bpt id="p1">[</bpt>OnChangeItemPosition<ept id="p1">](#coleclientitem__onchangeitemposition)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve">
          <source>You should call this function whenever the position or visible portion of the OLE item changes.</source>
        </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve">
          <source>Usually this means that you call it from your view's <bpt id="p1">[</bpt>OnSize<ept id="p1">](../../mfc/reference/cwnd-class.md#cwnd__onsize)</ept> and <bpt id="p2">[</bpt>OnScrollBy<ept id="p2">](../../mfc/reference/cview-class.md#cview__onscrollby)</ept> member functions.</source>
        </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IOleInPlaceObject::SetObjectRects<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683767)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve">
          <source>COleClientItem::SetLinkUpdateOptions</source>
        </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve">
          <source>Call this function to set the link-update option for the presentation of the specified linked item.</source>
        </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve">
          <source>dwUpdateOpt</source>
        </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve">
          <source>The value of the link-update option for this item.</source>
        </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve">
          <source>This value must be one of the following:</source>
        </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve">
          <source>Update the linked item whenever possible.</source>
        </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve">
          <source>This option supports the Automatic link-update radio button in the Links dialog box.</source>
        </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve">
          <source>Update the linked item only on request from the container application (when the <bpt id="p1">[</bpt>UpdateLink<ept id="p1">](#coleclientitem__updatelink)</ept> member function is called).</source>
        </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve">
          <source>This option supports the Manual link-update radio button in the Links dialog box.</source>
        </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve">
          <source>Typically, you should not change the update options chosen by the user in the Links dialog box.</source>
        </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IOleLink::SetUpdateOptions<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms680120)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve">
          <source>COleClientItem::SetPrintDevice</source>
        </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve">
          <source>Call this function to change the print-target device for this item.</source>
        </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>DVTARGETDEVICE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms686613)</ept> data structure, which contains information about the new print-target device.</source>
        </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>PRINTDLG<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646940)</ept> data structure, which contains information about the new print-target device.</source>
        </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve">
          <source>Nonzero if the function was successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve">
          <source>This function updates the print-target device for the item but does not refresh the presentation cache.</source>
        </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve">
          <source>To update the presentation cache for an item, call <bpt id="p1">[</bpt>UpdateLink<ept id="p1">](#coleclientitem__updatelink)</ept>.</source>
        </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve">
          <source>The arguments to this function contain information that the OLE system uses to identify the target device.</source>
        </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>PRINTDLG<ept id="p1">**</ept> structure contains information that Windows uses to initialize the common Print dialog box.</source>
        </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve">
          <source>After the user closes the dialog box, Windows returns information about the user's selections in this structure.</source>
        </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`m_pd`</ph> member of a <bpt id="p1">[</bpt>CPrintDialog<ept id="p1">](../../mfc/reference/cprintdialog-class.md)</ept> object is a <bpt id="p2">**</bpt>PRINTDLG<ept id="p2">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve">
          <source>For more information about this structure, see <bpt id="p1">[</bpt>PRINTDLG<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646843)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>DVTARGETDEVICE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms686613)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve">
          <source>COleClientItem::UpdateLink</source>
        </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve">
          <source>Call this function to update the presentation data of the OLE item immediately.</source>
        </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve">
          <source>Nonzero on success; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve">
          <source>For linked items, the function finds the link source to obtain a new presentation for the OLE item.</source>
        </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve">
          <source>This process may involve running one or more server applications, which could be time-consuming.</source>
        </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve">
          <source>For embedded items, the function operates recursively, checking whether the embedded item contains links that might be out of date and updating them.</source>
        </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve">
          <source>The user can also manually update individual links using the Links dialog box.</source>
        </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IOleLink::Update<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms692660)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve">
          <source>MFC Sample MFCBIND</source>
        </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve">
          <source>MFC Sample OCLIENT</source>
        </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve">
          <source>CDocItem Class</source>
        </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve">
          <source>Hierarchy Chart</source>
        </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve">
          <source>COleServerItem Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>