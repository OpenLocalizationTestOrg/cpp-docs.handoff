<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">062202f996c1e7b7f51775c244db7e23a509b48f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\data\odbc\odbc-the-odbc-cursor-library.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b66e0cd1fee1e31982e613decbbc6c04bbb7eee2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ffd4b8a994adc705215c72e03260cb44eeb8d383</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>ODBC: The ODBC Cursor Library | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ODBC: The ODBC Cursor Library</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic describes the ODBC Cursor Library and explains how to use it.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For more information, see:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Cursor Library and Level 1 ODBC Drivers</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Positioned Updates and Timestamp Columns</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Using the Cursor Library</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The ODBC Cursor Library is a dynamic-link library (DLL) that resides between the ODBC Driver Manager and the driver.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In ODBC terms, a driver maintains a cursor to keep track of its position in the recordset.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The cursor marks the position in the recordset to which you have already scrolled â€” the current record.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Cursor Library and Level 1 ODBC Drivers</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The ODBC Cursor Library gives Level 1 drivers the following new capabilities:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Forward and backward scrolling.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Level 2 drivers do not need the cursor library because they are already scrollable.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Support for snapshots.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The cursor library manages a buffer containing the snapshot's records.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This buffer reflects your program's deletions and edits to records but not the additions, deletions, or edits of other users.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Therefore, the snapshot is only as current as the cursor library's buffer.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The buffer also does not reflect your own additions until you call <bpt id="p1">**</bpt>Requery<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Dynasets do not use the cursor library.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The cursor library gives you snapshots (static cursors) even if they are not normally supported by your driver.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If your driver already supports static cursors, you do not need to load the cursor library to get snapshot support.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If you do use the cursor library, you can use only snapshots and forward-only recordsets.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If your driver supports dynasets (KEYSET_DRIVEN cursors) and you want to use them, you must not use the cursor library.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If you want to use both snapshots and dynasets, you must base them on two different <ph id="ph1">`CDatabase`</ph> objects (two different connections) unless your driver supports both.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Positioned Updates and Timestamp Columns</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>ODBC data sources are accessible through the MFC ODBC classes, as described in this topic, or through the MFC Data Access Object (DAO) classes.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If your ODBC driver supports <bpt id="p1">**</bpt>SQLSetPos<ept id="p1">**</ept>, which MFC uses if available, this topic does not apply to you.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Most Level 1 drivers do not support positioned updates.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Such drivers rely on the cursor library to emulate the capabilities of Level 2 drivers in this regard.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The cursor library emulates positioned update support by doing a searched update on the unchanging fields.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In some cases, a recordset might contain a timestamp column as one of those unchanging fields.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Two issues arise in using MFC recordsets with tables that contain timestamp columns.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The first issue concerns updateable snapshots on tables with timestamp columns.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If the table to which your snapshot is bound contains a timestamp column, you should call <bpt id="p1">**</bpt>Requery<ept id="p1">**</ept> after you call <bpt id="p2">**</bpt>Edit<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Update<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If not, you might not be able to edit the same record again.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When you call <bpt id="p1">**</bpt>Edit<ept id="p1">**</ept> and then <bpt id="p2">**</bpt>Update<ept id="p2">**</ept>, the record is written to the data source and the timestamp column is updated.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If you do not call <bpt id="p1">**</bpt>Requery<ept id="p1">**</ept>, the timestamp value for the record in your snapshot no longer matches the corresponding timestamp on the data source.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When you try to update the record again, the data source might disallow the update because of the mismatch.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The second issue concerns limitations of class <bpt id="p1">[</bpt>CTime<ept id="p1">](../../atl-mfc-shared/reference/ctime-class.md)</ept> when used with the <ph id="ph1">`RFX_Date`</ph> function to transfer time and date information to or from a table.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Processing the <ph id="ph1">`CTime`</ph> object imposes some overhead in the form of extra intermediate processing during the data transfer.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The date range of <ph id="ph1">`CTime`</ph> objects might also be too limiting for some applications.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A new version of the <ph id="ph1">`RFX_Date`</ph> function takes an ODBC <bpt id="p1">**</bpt>TIMESTAMP_STRUCT<ept id="p1">**</ept> parameter instead of a <ph id="ph2">`CTime`</ph> object.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For more information, see <ph id="ph1">`RFX_Date`</ph> in <bpt id="p1">[</bpt>Macros and Globals<ept id="p1">](../../mfc/reference/mfc-macros-and-globals.md)</ept> in the <bpt id="p2">*</bpt>MFC Reference<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Using the Cursor Library</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>When you connect to a data source â€” by calling <bpt id="p1">[</bpt>CDatabase::OpenEx<ept id="p1">](../../mfc/reference/cdatabase-class.md#cdatabase__openex)</ept> or <bpt id="p2">[</bpt>CDatabase::Open<ept id="p2">](../../mfc/reference/cdatabase-class.md#cdatabase__open)</ept> â€” you can specify whether to use the cursor library for the data source.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If you will be creating snapshots on that data source, specify the <bpt id="p1">**</bpt>CDatabase::useCursorLib<ept id="p1">**</ept> option in the <ph id="ph1">`dwOptions`</ph> parameter to <ph id="ph2">`OpenEx`</ph> or specify <bpt id="p2">**</bpt>TRUE<ept id="p2">**</ept> for the <bpt id="p3">**</bpt>bUseCursorLib<ept id="p3">**</ept> parameter to <bpt id="p4">**</bpt>Open<ept id="p4">**</ept> (the default value is <bpt id="p5">**</bpt>TRUE<ept id="p5">**</ept>).</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If your ODBC driver supports dynasets and you want to open dynasets on the data source, do not use the cursor library (it masks some driver functionality needed for dynasets).</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In that case, do not specify <bpt id="p1">**</bpt>CDatabase::useCursorLib<ept id="p1">**</ept> in <ph id="ph1">`OpenEx`</ph> or specify <bpt id="p2">**</bpt>FALSE<ept id="p2">**</ept> for the <bpt id="p3">**</bpt>bUseCursorLib<ept id="p3">**</ept> parameter in <bpt id="p4">**</bpt>Open<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>ODBC Basics</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>