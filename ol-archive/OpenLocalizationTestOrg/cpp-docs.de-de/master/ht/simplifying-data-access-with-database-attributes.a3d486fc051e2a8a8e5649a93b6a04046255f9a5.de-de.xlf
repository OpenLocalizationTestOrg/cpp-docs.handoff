<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">496c8ef83503d4e8bd515e83bbfd2497c5b0d7c4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\data\oledb\simplifying-data-access-with-database-attributes.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b4da8b4005b741120e3bac35e6d6808575475ec5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a15483365bebb67f2e6c5f1f9005eca4ef2e4e49</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Simplifying Data Access with Database Attributes | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Simplifying Data Access with Database Attributes</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic demonstrates the use of database attributes to simplify database operations.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The basic way to access information from a database is to create a command (or table) class and a user record class for a particular table in the database.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The database attributes simplify some of the template declarations that you previously had to do.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To demonstrate the use of database attributes, the following sections show two equivalent table and user record class declarations: the first uses attributes and the second uses OLE DB Templates.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Such declaration code is typically placed in a header file named for the table or command object, for example, Authors.h.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>By comparing the two files, you can see how much simpler it is to use attributes.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Among the differences are:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Using attributes, you only have to declare one class: <ph id="ph1">`CAuthors`</ph>, while with templates you have to declare two: <ph id="ph2">`CAuthorsNoAttrAccessor`</ph> and <ph id="ph3">`CAuthorsNoAttr`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`db_source`</ph> call in the attributed version is equivalent to the <ph id="ph2">`OpenDataSource()`</ph> call in the template declaration.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>db_table<ept id="p1">**</ept> call in the attributed version is equivalent to the following template declaration:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>db_column<ept id="p1">**</ept> calls in the attributed version are equivalent to the column map (see <ph id="ph1">`BEGIN_COLUMN_MAP ... END_COLUMN_MAP`</ph>) in the template declaration.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The attributes inject a user record class declaration for you.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The user record class is equivalent to <ph id="ph1">`CAuthorsNoAttrAccessor`</ph> in the template declaration.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If your table class is <ph id="ph1">`CAuthors`</ph>, the injected user record class is named <ph id="ph2">`CAuthorsAccessor`</ph>, and you can only view its declaration in injected code.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information, see "Attribute-Injected User Record Classes" in <bpt id="p1">[</bpt>User Records<ept id="p1">](../../data/oledb/user-records.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Note that in both the attributed and the templated code, you must set rowset properties using <ph id="ph1">`CDBPropSet::AddProperty`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For information about the attributes discussed in this topic, see <bpt id="p1">[</bpt>OLE DB Consumer Attributes<ept id="p1">](../../windows/ole-db-consumer-attributes.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Table and Accessor Declaration Using Attributes</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following code calls <ph id="ph1">`db_source`</ph> and <bpt id="p1">**</bpt>db_table<ept id="p1">**</ept> on the table class.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>specifies the data source and connection to be used.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>db_table<ept id="p1">**</ept> injects the appropriate template code to declare a table class.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>db_column<ept id="p1">**</ept> specify the column map and inject the accessor declaration.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You can use OLE DB consumer attributes in any project that supports ATL.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Here is the table and accessor declaration using attributes:</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Table and Accessor Declaration Using Templates</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Here is the table and accessor declaration using templates.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>OLE DB Consumer Attributes</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Attributes Walkthroughs</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>