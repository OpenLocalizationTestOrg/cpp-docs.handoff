<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6bda37aa1e4a979e245e72629d68223507a0ca99</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\reference\abort.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">11c00a7fbded2bcf324e56a7c1e3753b2448e1b1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7789599f01b59783917d6183f4f50bc4cfbbdb34</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>abort | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>abort</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Aborts the current process and returns an error code.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Do not use this method to shut down a <ph id="ph1">[!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)]</ph> app, except in testing or debugging scenarios.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Programmatic or UI ways to close a <ph id="ph1">[!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)]</ph> app are not permitted according to the <bpt id="p1">[</bpt>Windows 8 app certification requirements<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=262889)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Application lifecycle (Windows Store apps)<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=262853)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`abort`</ph> does not return control to the calling process.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>By default, it checks for an abort signal handler and raises <ph id="ph1">`SIGABRT`</ph> if one is set.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Then <ph id="ph1">`abort`</ph> terminates the current process and returns an exit code to the parent process.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Microsoft Specific<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>By default, when an app is built with the debug runtime library, the <ph id="ph1">`abort`</ph> routine displays an error message before <ph id="ph2">`SIGABRT`</ph> is raised.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For console apps running in console mode, the message is sent to <ph id="ph1">`STDERR`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Windows desktop apps and console apps running in windowed mode display the message in a message box.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To suppress the message, use <bpt id="p1">[</bpt>_set_abort_behavior<ept id="p1">](../../c-runtime-library/reference/set-abort-behavior.md)</ept> to clear the <ph id="ph1">`_WRITE_ABORT_MSG`</ph> flag.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The message displayed depends on the version of the runtime environment used.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For applications built by using the most recent version of Visual C++, the message resembles this:</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In previous versions of the C runtime library, this message was displayed:</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>"<ph id="ph1">`This application has requested the Runtime to terminate it in an unusual way. Please contact the application's support team for more information.`</ph>"</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When the program is compiled in debug mode, the message box displays options to <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Retry<ept id="p2">**</ept>, or <bpt id="p3">**</bpt>Ignore<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If the user chooses <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept>, the program terminates immediately and returns an exit code of 3.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If the user chooses <bpt id="p1">**</bpt>Retry<ept id="p1">**</ept>, a debugger is invoked for just-in-time debugging, if available.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If the user chooses <bpt id="p1">**</bpt>Ignore<ept id="p1">**</ept>, <ph id="ph1">`abort`</ph> continues normal processing.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In both retail and debug builds, <ph id="ph1">`abort`</ph> then checks whether an abort signal handler is set.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If a non-default signal handler is set, <ph id="ph1">`abort`</ph> calls <ph id="ph2">`raise(SIGABRT)`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>signal<ept id="p1">](../../c-runtime-library/reference/signal.md)</ept> function to associate an abort signal handler function with the <ph id="ph1">`SIGABRT`</ph> signal.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can perform custom actions—for example, clean up resources or log information—and terminate the app with your own error code in the handler function.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If no custom signal handler is defined, <ph id="ph1">`abort`</ph> does not raise the <ph id="ph2">`SIGABRT`</ph> signal.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>By default, in non-debug builds of desktop or console apps, <ph id="ph1">`abort`</ph> then invokes the Windows error reporting mechanism (Dr. Watson) to report failures to Microsoft.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This behavior can be enabled or disabled by calling <ph id="ph1">`_set_abort_behavior`</ph> and setting or masking the <ph id="ph2">`_CALL_REPORTFAULT`</ph> flag.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When the flag is set, Windows displays a message box that has text something like "A problem caused the program to stop working correctly."</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The user can choose to invoke a debugger with a <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> button, or choose the <bpt id="p2">**</bpt>Close program<ept id="p2">**</ept> button to terminate the app with an error code that's defined by the operating system.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If the Windows error reporting handler is not invoked, then <ph id="ph1">`abort`</ph> calls <bpt id="p1">[</bpt>_exit<ept id="p1">](../../c-runtime-library/reference/exit-exit-exit.md)</ept> to terminate the process with exit code 3 and returns control to the parent process or the operating system.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`_exit`</ph> does not flush stream buffers or do <ph id="ph2">`atexit`</ph><ph id="ph3">/</ph><ph id="ph4">`_onexit`</ph> processing.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For more information about CRT debugging, see <bpt id="p1">[</bpt>CRT Debugging Techniques<ept id="p1">](/visualstudio/debugger/crt-debugging-techniques)</ept>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>End Microsoft Specific<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Routine</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Required header</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>process.h&gt; or <ph id="ph2">\&lt;</ph>stdlib.h&gt;</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The following program tries to open a file and aborts if the attempt fails.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>.NET Framework Equivalent</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Not applicable.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To call the standard C function, use <ph id="ph1">`PInvoke`</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Platform Invoke Examples<ept id="p1">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Using abort<ept id="p1">](../../cpp/using-abort.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>abort Function<ept id="p1">](../../c-language/abort-function-c.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Process and Environment Control<ept id="p1">](../../c-runtime-library/process-and-environment-control.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>_exec, _wexec Functions<ept id="p1">](../../c-runtime-library/exec-wexec-functions.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>exit, _Exit, _exit<ept id="p1">](../../c-runtime-library/reference/exit-exit-exit.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>raise<ept id="p1">](../../c-runtime-library/reference/raise.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>signal<ept id="p1">](../../c-runtime-library/reference/signal.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>_spawn, _wspawn Functions<ept id="p1">](../../c-runtime-library/spawn-wspawn-functions.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>_DEBUG<ept id="p1">](../../c-runtime-library/debug.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>_set_abort_behavior<ept id="p1">](../../c-runtime-library/reference/set-abort-behavior.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>