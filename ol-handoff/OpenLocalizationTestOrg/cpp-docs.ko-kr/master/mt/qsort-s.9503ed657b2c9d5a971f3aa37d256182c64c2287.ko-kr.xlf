<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c54527b4c3932646f06940110315e8e1d05a5011</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\reference\qsort-s.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3f0a8e22cfa4abe13dd2c314c0ba3fb06015e38f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">24bf638711d691a75bc782abd4d400b9b3cf456c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>qsort_s | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>qsort_s</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Performs a quick sort.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A version of <bpt id="p1">[</bpt>qsort<ept id="p1">](../../c-runtime-library/reference/qsort.md)</ept> with security enhancements as described in <bpt id="p2">[</bpt>Security Features in the CRT<ept id="p2">](../../c-runtime-library/security-features-in-the-crt.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Start of target array.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Array size in elements.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Element size in bytes.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Comparison function.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The first argument is the <ph id="ph1">`context`</ph> pointer.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The second argument is a pointer to the <ph id="ph1">`key`</ph> for the search.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The third argument is a pointer to the array element to be compared with <ph id="ph1">`key`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A pointer to a context, which can be any object that the <ph id="ph1">`compare`</ph> routine needs to access.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`qsort_s`</ph> function implements a quick-sort algorithm to sort an array of <ph id="ph2">`num`</ph> elements, each of <ph id="ph3">`width`</ph> bytes.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The argument <ph id="ph1">`base`</ph> is a pointer to the base of the array to be sorted.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`qsort_s`</ph> overwrites this array with the sorted elements.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The argument <ph id="ph1">`compare`</ph> is a pointer to a user-supplied routine that compares two array elements and returns a value specifying their relationship.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`qsort_s`</ph> calls the <ph id="ph2">`compare`</ph> routine one or more times during the sort, passing pointers to two array elements on each call:</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The routine must compare the elements and then return one of the following values:</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>&lt; 0</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`elem1`</ph> less than <ph id="ph2">`elem2`</ph></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`elem1`</ph> equivalent to <ph id="ph2">`elem2`</ph></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>&gt; 0</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`elem1`</ph> greater than <ph id="ph2">`elem2`</ph></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The array is sorted in increasing order, as defined by the comparison function.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To sort an array in decreasing order, reverse the sense of "greater than" and "less than" in the comparison function.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If invalid parameters are passed to the function, the invalid parameter handler is invoked, as described in <bpt id="p1">[</bpt>Parameter Validation<ept id="p1">](../../c-runtime-library/parameter-validation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If execution is allowed to continue, then the function returns and <ph id="ph1">`errno`</ph> is set to <ph id="ph2">`EINVAL`</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>errno, _doserrno, _sys_errlist, and _sys_nerr<ept id="p1">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Error Conditions</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>key</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>base</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>compare</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>num</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>width</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>errno</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>!= 0</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>&lt;= 0</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`qsort_s`</ph> has the same behavior as <ph id="ph2">`qsort`</ph> but has the <ph id="ph3">`context`</ph> parameter and sets <ph id="ph4">`errno`</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>By passing a <ph id="ph1">`context`</ph> parameter, comparison functions can use an object pointer to access object functionality or other information not accessible through an element pointer.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The addition of the <ph id="ph1">`context`</ph> parameter makes <ph id="ph2">`qsort_s`</ph>more secure because <ph id="ph3">`context`</ph> can be used to avoid reentrancy bugs introduced by using static variables to make shared information available to the <ph id="ph4">`compare`</ph> function.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Routine</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Required header</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>stdlib.h&gt; and <ph id="ph2">\&lt;</ph>search.h&gt;</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For additional compatibility information, see <bpt id="p1">[</bpt>Compatibility<ept id="p1">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Libraries:<ept id="p1">**</ept> All versions of the <bpt id="p2">[</bpt>CRT Library Features<ept id="p2">](../../c-runtime-library/crt-library-features.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to use the <ph id="ph1">`context`</ph> parameter in the <ph id="ph2">`qsort_s`</ph>function.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`context`</ph> parameter makes it easier to perform thread-safe sorts.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Instead of using static variables that must be synchronized to ensure thread safety, pass a different <ph id="ph1">`context`</ph> parameter in each sort.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>In this example, a locale object is used as the <ph id="ph1">`context`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Sample Output</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>.NET Framework Equivalent</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.ArrayList.Sort%2A&gt;</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Searching and Sorting<ept id="p1">](../../c-runtime-library/searching-and-sorting.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>bsearch_s<ept id="p1">](../../c-runtime-library/reference/bsearch-s.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>_lsearch_s<ept id="p1">](../../c-runtime-library/reference/lsearch-s.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>qsort<ept id="p1">](../../c-runtime-library/reference/qsort.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>