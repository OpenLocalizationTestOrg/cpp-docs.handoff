<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9c25c3ba635f82e444550266e0181000ab5aefcb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\cpalette-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c67e8305e97af68e9a5ee74504d451a18deed2e0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5d5561edf99e4ee55fc7e65898d0218558a69e8a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CPalette Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CPalette Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Encapsulates a Windows color palette.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPalette::CPalette<ept id="p1">](#cpalette__cpalette)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CPalette`</ph> object with no attached Windows palette.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You must initialize the <ph id="ph1">`CPalette`</ph> object with one of the initialization member functions before it can be used.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPalette::AnimatePalette<ept id="p1">](#cpalette__animatepalette)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Replaces entries in the logical palette identified by the <ph id="ph1">`CPalette`</ph> object.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The application does not have to update its client area, because Windows maps the new entries into the system palette immediately.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPalette::CreateHalftonePalette<ept id="p1">](#cpalette__createhalftonepalette)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Creates a halftone palette for the device context and attaches it to the <ph id="ph1">`CPalette`</ph> object.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPalette::CreatePalette<ept id="p1">](#cpalette__createpalette)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Creates a Windows color palette and attaches it to the <ph id="ph1">`CPalette`</ph> object.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPalette::FromHandle<ept id="p1">](#cpalette__fromhandle)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Returns a pointer to a <ph id="ph1">`CPalette`</ph> object when given a handle to a Windows palette object.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPalette::GetEntryCount<ept id="p1">](#cpalette__getentrycount)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Retrieves the number of palette entries in a logical palette.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPalette::GetNearestPaletteIndex<ept id="p1">](#cpalette__getnearestpaletteindex)</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Returns the index of the entry in the logical palette that most closely matches a color value.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPalette::GetPaletteEntries<ept id="p1">](#cpalette__getpaletteentries)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Retrieves a range of palette entries in a logical palette.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPalette::ResizePalette<ept id="p1">](#cpalette__resizepalette)</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Changes the size of the logical palette specified by the <ph id="ph1">`CPalette`</ph> object to the specified number of entries.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPalette::SetPaletteEntries<ept id="p1">](#cpalette__setpaletteentries)</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Sets RGB color values and flags in a range of entries in a logical palette.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Public Operators</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPalette::operator HPALETTE<ept id="p1">](#cpalette__operator_hpalette)</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Returns the <ph id="ph1">`HPALETTE`</ph> attached to the <ph id="ph2">`CPalette`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A palette provides an interface between an application and a color output device (such as a display device).</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The interface allows the application to take full advantage of the color capabilities of the output device without severely interfering with the colors displayed by other applications.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Windows uses the application's logical palette (a list of needed colors) and the system palette (which defines available colors) to determine the colors used.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CPalette`</ph> object provides member functions for manipulating the palette referred to by the object.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Construct a <ph id="ph1">`CPalette`</ph> object and use its member functions to create the actual palette, a graphics device interface (GDI) object, and to manipulate its entries and other properties.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For more information on using <ph id="ph1">`CPalette`</ph>, see <bpt id="p1">[</bpt>Graphic Objects<ept id="p1">](../../mfc/graphic-objects.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CObject<ept id="p1">](../../mfc/reference/cobject-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CGdiObject<ept id="p1">](../../mfc/reference/cgdiobject-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxwin.h</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpalette__animatepalette"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPalette::AnimatePalette</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Replaces entries in the logical palette attached to the <ph id="ph1">`CPalette`</ph> object.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Specifies the first entry in the palette to be animated.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Specifies the number of entries in the palette to be animated.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Points to the first member of an array of <bpt id="p1">[</bpt>PALETTEENTRY<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162769)</ept> structures to replace the palette entries identified by <ph id="ph1">`nStartIndex`</ph> and <ph id="ph2">`nNumEntries`</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>When an application calls <ph id="ph1">`AnimatePalette`</ph>, it does not have to update its client area, because Windows maps the new entries into the system palette immediately.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`AnimatePalette`</ph> function will only change entries with the <bpt id="p1">**</bpt>PC_RESERVED<ept id="p1">**</ept> flag set in the corresponding <bpt id="p2">**</bpt>palPaletteEntry<ept id="p2">**</ept> member of the <bpt id="p3">[</bpt>LOGPALETTE<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/dd145040)</ept> structure that is attached to the <ph id="ph2">`CPalette`</ph> object.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">**</bpt>LOGPALETTE<ept id="p1">**</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> for more information about this structure.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpalette__cpalette"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPalette::CPalette</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CPalette`</ph> object.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The object has no attached palette until you call <ph id="ph1">`CreatePalette`</ph> to attach one.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpalette__createhalftonepalette"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPalette::CreateHalftonePalette</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Creates a halftone palette for the device context.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Identifies the device context.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Nonzero if the function is successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>An application should create a halftone palette when the stretching mode of a device context is set to <bpt id="p1">**</bpt>HALFTONE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The logical halftone palette returned by the <bpt id="p1">[</bpt>CreateHalftonePalette<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd183503)</ept> member function should then be selected and realized into the device context before the <bpt id="p2">[</bpt>CDC::StretchBlt<ept id="p2">](../../mfc/reference/cdc-class.md#cdc__stretchblt)</ept> or <bpt id="p3">[</bpt>StretchDIBits<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/dd145121)</ept> function is called.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>See the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> for more information about <ph id="ph2">`CreateHalftonePalette`</ph> and <bpt id="p1">**</bpt>StretchDIBits<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpalette__createpalette"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPalette::CreatePalette</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Initializes a <ph id="ph1">`CPalette`</ph> object by creating a Windows logical color palette and attaching it to the <ph id="ph2">`CPalette`</ph> object.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Points to a <bpt id="p1">[</bpt>LOGPALETTE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd145040)</ept> structure that contains information about the colors in the logical palette.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>See the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> for more information about the <bpt id="p1">**</bpt>LOGPALETTE<ept id="p1">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpalette__fromhandle"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPalette::FromHandle</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Returns a pointer to a <ph id="ph1">`CPalette`</ph> object when given a handle to a Windows palette object.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A handle to a Windows GDI color palette.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A pointer to a <ph id="ph1">`CPalette`</ph> object if successful; otherwise <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>If a <ph id="ph1">`CPalette`</ph> object is not already attached to the Windows palette, a temporary <ph id="ph2">`CPalette`</ph> object is created and attached.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This temporary <ph id="ph1">`CPalette`</ph> object is valid only until the next time the application has idle time in its event loop, at which time all temporary graphic objects are deleted.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>In other words, the temporary object is valid only during the processing of one window message.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpalette__getentrycount"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPalette::GetEntryCount</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Call this member function to retrieve the number of entries in a given logical palette.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Number of entries in a logical palette.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpalette__getnearestpaletteindex"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPalette::GetNearestPaletteIndex</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Returns the index of the entry in the logical palette that most closely matches the specified color value.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Specifies the color to be matched.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The index of an entry in a logical palette.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The entry contains the color that most nearly matches the specified color.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpalette__getpaletteentries"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPalette::GetPaletteEntries</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Retrieves a range of palette entries in a logical palette.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Specifies the first entry in the logical palette to be retrieved.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Specifies the number of entries in the logical palette to be retrieved.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Points to an array of <bpt id="p1">[</bpt>PALETTEENTRY<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162769)</ept> data structures to receive the palette entries.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The array must contain at least as many data structures as specified by <ph id="ph1">`nNumEntries`</ph>.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The number of entries retrieved from the logical palette; 0 if the function failed.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpalette__operator_hpalette"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPalette::operator HPALETTE</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Use this operator to get the attached Windows GDI handle of the <ph id="ph1">`CPalette`</ph> object.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>If successful, a handle to the Windows GDI object represented by the <ph id="ph1">`CPalette`</ph> object; otherwise <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>This operator is a casting operator, which supports direct use of an <ph id="ph1">`HPALETTE`</ph> object.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>For more information about using graphic objects, see the article <bpt id="p1">[</bpt>Graphic Objects<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd144962)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpalette__resizepalette"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPalette::ResizePalette</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Changes the size of the logical palette attached to the <ph id="ph1">`CPalette`</ph> object to the number of entries specified by <ph id="ph2">`nNumEntries`</ph>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Specifies the number of entries in the palette after it has been resized.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Nonzero if the palette was successfully resized; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>If an application calls <ph id="ph1">`ResizePalette`</ph> to reduce the size of the palette, the entries remaining in the resized palette are unchanged.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>If the application calls <ph id="ph1">`ResizePalette`</ph> to enlarge the palette, the additional palette entries are set to black (the red, green, and blue values are all 0), and the flags for all additional entries are set to 0.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>For more information on the Windows API <ph id="ph1">`ResizePalette`</ph>, see <bpt id="p1">[</bpt>ResizePalette<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162928)</ept> in the <ph id="ph2">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpalette__setpaletteentries"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPalette::SetPaletteEntries</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Sets RGB color values and flags in a range of entries in a logical palette.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Specifies the first entry in the logical palette to be set.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Specifies the number of entries in the logical palette to be set.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Points to an array of <bpt id="p1">[</bpt>PALETTEENTRY<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162769)</ept> data structures to receive the palette entries.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The array must contain at least as many data structures as specified by <ph id="ph1">`nNumEntries`</ph>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The number of entries set in the logical palette; 0 if the function failed.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>If the logical palette is selected into a device context when the application calls <ph id="ph1">`SetPaletteEntries`</ph>, the changes will not take effect until the application calls <bpt id="p1">[</bpt>CDC::RealizePalette<ept id="p1">](../../mfc/reference/cdc-class.md#cdc__realizepalette)</ept>.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>For more information on the Windows structure <bpt id="p1">**</bpt>PALETTEENTRY<ept id="p1">**</ept>, see <bpt id="p2">[</bpt>PALETTEENTRY<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/dd162769)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>MFC Sample DIBLOOK<ept id="p1">](../../visual-cpp-samples.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CGdiObject Class<ept id="p1">](../../mfc/reference/cgdiobject-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Hierarchy Chart<ept id="p1">](../../mfc/hierarchy-chart.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CPalette::GetPaletteEntries<ept id="p1">](#cpalette__getpaletteentries)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CPalette::SetPaletteEntries<ept id="p1">](#cpalette__setpaletteentries)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>