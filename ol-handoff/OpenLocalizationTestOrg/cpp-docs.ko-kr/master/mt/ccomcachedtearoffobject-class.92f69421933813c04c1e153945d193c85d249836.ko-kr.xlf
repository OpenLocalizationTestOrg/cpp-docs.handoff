<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bb174ac45d972477a74d04e84b3fe5b1b815813a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\ccomcachedtearoffobject-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0ab23504841e6a8a8c777da52f32b4c2a801a726</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">01c8c36baa053d9a8cfa06d72b9000c7d7b37847</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CComCachedTearOffObject Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CComCachedTearOffObject Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class implements <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms680509)</ept> for a tear-off interface.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Your tear-off class, derived from <ph id="ph1">`CComTearOffObjectBase`</ph> and the interfaces you want your tear-off object to support.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComCachedTearOffObject::CComCachedTearOffObject<ept id="p1">](#ccomcachedtearoffobject__ccomcachedtearoffobject)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The constructor.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComCachedTearOffObject::~CComCachedTearOffObject<ept id="p1">](#ccomcachedtearoffobject___dtorccomcachedtearoffobject)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The destructor.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComCachedTearOffObject::AddRef<ept id="p1">](#ccomcachedtearoffobject__addref)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Increments the reference count for a <ph id="ph1">`CComCachedTearOffObject`</ph> object.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComCachedTearOffObject::FinalConstruct<ept id="p1">](#ccomcachedtearoffobject__finalconstruct)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Calls the <ph id="ph1">`m_contained::FinalConstruct`</ph> (the tear-off class' method).</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComCachedTearOffObject::FinalRelease<ept id="p1">](#ccomcachedtearoffobject__finalrelease)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Calls the <ph id="ph1">`m_contained::FinalRelease`</ph> (the tear-off class' method).</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComCachedTearOffObject::QueryInterface<ept id="p1">](#ccomcachedtearoffobject__queryinterface)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the <ph id="ph1">`IUnknown`</ph> of the <ph id="ph2">`CComCachedTearOffObject`</ph> object, or to the requested interface on your tear-off class (the class <ph id="ph3">`contained`</ph>).</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComCachedTearOffObject::Release<ept id="p1">](#ccomcachedtearoffobject__release)</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Decrements the reference count for a <ph id="ph1">`CComCachedTearOffObject`</ph> object and destroys it if the reference count is 0.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Public Data Members</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComCachedTearOffObject::m_contained<ept id="p1">](#ccomcachedtearoffobject__m_contained)</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CComContainedObject`</ph> object derived from your tear-off class (the class <ph id="ph2">`contained`</ph>).</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CComCachedTearOffObject`</ph> implements <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms680509)</ept> for a tear-off interface.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This class differs from <ph id="ph1">`CComTearOffObject`</ph> in that <ph id="ph2">`CComCachedTearOffObject`</ph> has its own <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept>, separate from the owner object's <bpt id="p2">**</bpt>IUnknown<ept id="p2">**</ept> (the owner is the object for which the tear-off is being created).</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CComCachedTearOffObject`</ph> maintains its own reference count on its <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> and deletes itself once its reference count is zero.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>However, if you query for any of its tear-off interfaces, the reference count of the owner object's <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> will be incremented.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`CComCachedTearOffObject`</ph> object implementing the tear-off is already instantiated, and the tear-off interface is queried for again, the same <ph id="ph2">`CComCachedTearOffObject`</ph> object is reused.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In contrast, if a tear-off interface implemented by a <ph id="ph1">`CComTearOffObject`</ph> is again queried for through the owner object, another <ph id="ph2">`CComTearOffObject`</ph> will be instantiated.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The owner class must implement <ph id="ph1">`FinalRelease`</ph> and call <bpt id="p1">**</bpt>Release<ept id="p1">**</ept> on the cached <bpt id="p2">**</bpt>IUnknown<ept id="p2">**</ept> for the <ph id="ph2">`CComCachedTearOffObject`</ph>, which will decrement its reference count.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This will cause <ph id="ph1">`CComCachedTearOffObject`</ph>'s <ph id="ph2">`FinalRelease`</ph> to be called and delete the tear-off.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComObjectRootEx<ept id="p1">](../../atl/reference/ccomobjectrootex-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> atlcom.h</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccomcachedtearoffobject__addref"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CComCachedTearOffObject::AddRef</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Increments the reference count of the <ph id="ph1">`CComCachedTearOffObject`</ph> object by 1.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A value that may be useful for diagnostics and testing.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccomcachedtearoffobject__ccomcachedtearoffobject"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CComCachedTearOffObject::CComCachedTearOffObject</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The constructor.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>[in] Pointer to the <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> of the <ph id="ph1">`CComCachedTearOffObject`</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Initializes the <ph id="ph1">`CComContainedObject`</ph> member, <bpt id="p1">[</bpt>m_contained<ept id="p1">](#ccomcachedtearoffobject__m_contained)</ept>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccomcachedtearoffobject___dtorccomcachedtearoffobject"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CComCachedTearOffObject::~CComCachedTearOffObject</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The destructor.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Frees all allocated resources and calls <bpt id="p1">[</bpt>FinalRelease<ept id="p1">](#ccomcachedtearoffobject__finalrelease)</ept>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccomcachedtearoffobject__finalconstruct"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CComCachedTearOffObject::FinalConstruct</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Calls <bpt id="p1">**</bpt>m_contained::FinalConstruct<ept id="p1">**</ept> to create <ph id="ph1">`m_contained`</ph>, the <ph id="ph2">`CComContainedObject`</ph><ph id="ph3">&lt; </ph><ph id="ph4">`contained`</ph>&gt; object used to access the interface implemented by your tear-off class.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccomcachedtearoffobject__finalrelease"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CComCachedTearOffObject::FinalRelease</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Calls <bpt id="p1">**</bpt>m_contained::FinalRelease<ept id="p1">**</ept> to free <ph id="ph1">`m_contained`</ph>, the <ph id="ph2">`CComContainedObject`</ph><ph id="ph3">&lt; </ph><ph id="ph4">`contained`</ph>&gt; object.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccomcachedtearoffobject__m_contained"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CComCachedTearOffObject::m_contained</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>CComContainedObject<ept id="p1">](../../atl/reference/ccomcontainedobject-class.md)</ept> object derived from your tear-off class.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>[in] Your tear-off class, derived from <ph id="ph1">`CComTearOffObjectBase`</ph> and the interfaces you want your tear-off object to support.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The methods <ph id="ph1">`m_contained`</ph> inherits are used to access the tear-off interface in your tear-off class through the cached tear-off object's <ph id="ph2">`QueryInterface`</ph>, <ph id="ph3">`FinalConstruct`</ph>, and <ph id="ph4">`FinalRelease`</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccomcachedtearoffobject__queryinterface"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CComCachedTearOffObject::QueryInterface</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the requested interface.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>[in] The GUID of the interface being requested.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>[out] A pointer to the interface pointer identified by <ph id="ph1">`iid`</ph>, or <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> if the interface is not found.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If the requested interface is <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept>, returns a pointer to the <ph id="ph1">`CComCachedTearOffObject`</ph>'s own <bpt id="p2">**</bpt>IUnknown<ept id="p2">**</ept> and increments the reference count.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Otherwise, queries for the interface on your tear-off class using the <bpt id="p1">[</bpt>InternalQueryInterface<ept id="p1">](ccomobjectrootex-class.md#ccomobjectrootex__internalqueryinterface)</ept> method inherited from <ph id="ph1">`CComObjectRootEx`</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccomcachedtearoffobject__release"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CComCachedTearOffObject::Release</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Decrements the reference count by 1 and, if the reference count is 0, deletes the <ph id="ph1">`CComCachedTearOffObject`</ph> object.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>In non-debug builds, always returns 0.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>In debug builds, returns a value that may be useful for diagnostics or testing.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComTearOffObject Class<ept id="p1">](../../atl/reference/ccomtearoffobject-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CComObjectRootEx Class<ept id="p1">](../../atl/reference/ccomobjectrootex-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Class Overview<ept id="p1">](../../atl/atl-class-overview.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>