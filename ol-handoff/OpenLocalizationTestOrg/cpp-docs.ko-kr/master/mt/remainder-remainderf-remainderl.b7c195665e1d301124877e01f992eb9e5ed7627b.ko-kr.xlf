<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9ffad3503c6d16839fe5709895585225fd0b4091</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\reference\remainder-remainderf-remainderl.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6e605ea95afd4a7f8f5145006e17ecb7f38915f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">08df1fd64c85c3b08b4ccb4eb93e9f87cb36f4a5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>remainder, remainderf, remainderl | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>remainder, remainderf, remainderl</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Computes the remainder of the quotient of two floating-point values, rounded to the nearest integral value.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The numerator.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The denominator.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The floating-point remainder of <ph id="ph1">`x`</ph><ph id="ph2"> / </ph><ph id="ph3">`y`</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If the value of <ph id="ph1">`y`</ph> is 0.0, <ph id="ph2">`remainder`</ph> returns a quiet NaN.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For information about the representation of a quiet NaN by the <ph id="ph1">`printf`</ph> family, see <bpt id="p1">[</bpt>printf, _printf_l, wprintf, _wprintf_l<ept id="p1">](../../c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`remainder`</ph> function calculates the floating-point remainder <ph id="ph2">`r`</ph> of <ph id="ph3">`x`</ph><ph id="ph4"> / </ph><ph id="ph5">`y`</ph> such that <ph id="ph6">`x`</ph><ph id="ph7"> = </ph><ph id="ph8">`n`</ph><ph id="ph9"> * </ph><ph id="ph10">`y`</ph><ph id="ph11"> + </ph><ph id="ph12">`r`</ph>, where <ph id="ph13">`n`</ph> is the integer nearest in value to <ph id="ph14">`x`</ph><ph id="ph15"> / </ph><ph id="ph16">`y`</ph> and <ph id="ph17">`n`</ph> is even whenever &amp;#124; <ph id="ph18">`n`</ph><ph id="ph19"> - </ph><ph id="ph20">`x`</ph><ph id="ph21"> / </ph><ph id="ph22">`y`</ph> &amp;#124; = 1/2.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`r`</ph> = 0, <ph id="ph2">`r`</ph> has the same sign as <ph id="ph3">`x`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Because C++ allows overloading, you can call overloads of <ph id="ph1">`remainder`</ph> that take and return <ph id="ph2">`float`</ph> or <ph id="ph3">`long double`</ph> values.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In a C program, <ph id="ph1">`remainder`</ph> always takes two doubles and returns a double.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Function</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Required header</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`remainder`</ph>, <ph id="ph2">`remainderf`</ph>, <ph id="ph3">`remainderl`</ph></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>math.h&gt;</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For compatibility information, see <bpt id="p1">[</bpt>Compatibility<ept id="p1">](../../c-runtime-library/compatibility.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>.NET Framework Equivalent</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System::Math::IEEERemainder<ept id="p1">](https://msdn.microsoft.com/en-us/library/system.math.ieeeremainder.aspx)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Floating-Point Support<ept id="p1">](../../c-runtime-library/floating-point-support.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>ldiv, lldiv<ept id="p1">](../../c-runtime-library/reference/ldiv-lldiv.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>imaxdiv<ept id="p1">](../../c-runtime-library/reference/imaxdiv.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>fmod, fmodf<ept id="p1">](../../c-runtime-library/reference/fmod-fmodf.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>remquo, remquof, remquol<ept id="p1">](../../c-runtime-library/reference/remquo-remquof-remquol.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>