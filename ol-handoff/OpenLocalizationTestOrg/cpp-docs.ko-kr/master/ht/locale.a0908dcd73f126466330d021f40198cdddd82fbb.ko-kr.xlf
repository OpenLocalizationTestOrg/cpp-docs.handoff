<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b9d5d9338e9e11e585a840f6a6cf53d98c9f1aea</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\locale.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">78bf0c05679d3e26cc2c50f8ba6932ebdd15e864</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fe2b53ed0220a61afdd6b0a5e03d46318b28b24c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Locale | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Locale</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Locale<ept id="p1">*</ept> refers to country/region and language settings that you can use to customize your program.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Some locale-dependent categories include the display formats for dates and monetary values.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Locale Categories<ept id="p1">](../c-runtime-library/locale-categories.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>setlocale<ept id="p1">](../c-runtime-library/reference/setlocale-wsetlocale.md)</ept> function to change or query some or all of the current program or thread locale information while using functions without the <ph id="ph1">`_l`</ph> suffix.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The functions with the <ph id="ph1">`_l`</ph> suffix will use the locale parameter passed in for their locale information during the execution of that specific function only.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To create a locale for use with a function with a <ph id="ph1">`_l`</ph> suffix, use <bpt id="p1">[</bpt>_create_locale<ept id="p1">](../c-runtime-library/reference/create-locale-wcreate-locale.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To free this locale, use <bpt id="p1">[</bpt>_free_locale<ept id="p1">](../c-runtime-library/reference/free-locale.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To get the current locale, use <bpt id="p1">[</bpt>_get_current_locale<ept id="p1">](../c-runtime-library/reference/get-current-locale.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>_configthreadlocale<ept id="p1">](../c-runtime-library/reference/configthreadlocale.md)</ept> to control whether each thread has its own locale, or all threads in a program share the same locale.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Locales and Code Pages<ept id="p1">](../text/locales-and-code-pages.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>More secure versions of the functions in the following table are available, indicated by the <ph id="ph1">`_s`</ph> ("secure") suffix.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Security Features in the CRT<ept id="p1">](../c-runtime-library/security-features-in-the-crt.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Locale-Dependent Routines</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Routine</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Use</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>category setting dependence</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>atof, _atof_l, _wtof, _wtof_l</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Convert character to floating-point value</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>atoi, _atoi_l, _wtoi, _wtoi_l</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Convert character to integer value</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>_atoi64, _atoi64_l, _wtoi64, _wtoi64_l</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Convert character to 64-bit integer value</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>atol, _atol_l, _wtol, _wtol_l</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Convert character to long value</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>_atodbl, _atodbl_l, _atoldbl, _atoldbl_l, _atoflt, _atoflt_l</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Convert character to double-long value</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>is Routines</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Test given integer for particular condition.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>isleadbyte, _isleadbyte_l</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Test for lead byte</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>localeconv</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Read appropriate values for formatting numeric quantities</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>MB_CUR_MAX</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Maximum length in bytes of any multibyte character in current locale (macro defined in STDLIB.H)</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>_mbccpy, _mbccpy_l<ept id="p1">](../c-runtime-library/reference/mbccpy-mbccpy-l.md)</ept>,<bpt id="p2">[</bpt>_mbccpy_s, _mbccpy_s_l<ept id="p2">](../c-runtime-library/reference/mbccpy-s-mbccpy-s-l.md)</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Copy one multibyte character</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>_mbclen, mblen, _mblen_l</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Validate and return number of bytes in multibyte character</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>strlen, wcslen, _mbslen, _mbslen_l, _mbstrlen, _mbstrlen_l</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For multibyte-character strings: validate each character in string; return string length</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>mbstowcs, _mbstowcs_l<ept id="p1">](../c-runtime-library/reference/mbstowcs-mbstowcs-l.md)</ept>,<bpt id="p2">[</bpt>mbstowcs_s, _mbstowcs_s_l<ept id="p2">](../c-runtime-library/reference/mbstowcs-s-mbstowcs-s-l.md)</ept></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Convert sequence of multibyte characters to corresponding sequence of wide characters</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>mbtowc, _mbtowc_l</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Convert multibyte character to corresponding wide character</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>printf<ept id="p1">](../c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l.md)</ept> functions</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Write formatted output</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>(determines radix character output)</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>scanf<ept id="p1">](../c-runtime-library/reference/scanf-scanf-l-wscanf-wscanf-l.md)</ept> functions</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Read formatted input</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>(determines radix character recognition)</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>setlocale, _wsetlocale</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Select locale for program</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Not applicable</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>strcoll, wcscoll, _mbscoll, _strcoll_l, _wcscoll_l, _mbscoll_l</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Compare characters of two strings</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>_stricmp, _wcsicmp, _mbsicmp, _stricmp_l, _wcsicmp_l, _mbsicmp_l</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Compare two strings without regard to case</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>_stricoll, _wcsicoll, _mbsicoll, _stricoll_l, _wcsicoll_l, _mbsicoll_l</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Compare characters of two strings (case insensitive)</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>_strncoll, _wcsncoll, _mbsncoll, _strncoll_l, _wcsncoll_l, _mbsncoll_l</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Compare first <ph id="ph1">`n`</ph> characters of two strings</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>_strnicmp, _wcsnicmp, _mbsnicmp, _strnicmp_l, _wcsnicmp_l, _mbsnicmp_l</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Compare characters of two strings without regard to case.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>_strnicoll, _wcsnicoll, _mbsnicoll, _strnicoll_l, _wcsnicoll_l, _mbsnicoll_l</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Compare first <ph id="ph1">`n`</ph> characters of two strings (case insensitive)</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>strftime, wcsftime, _strftime_l, _wcsftime_l</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Format date and time value according to supplied <ph id="ph1">`format`</ph> argument</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>_strlwr, _wcslwr, _mbslwr, _strlwr_l, _wcslwr_l, _mbslwr_l<ept id="p1">](../c-runtime-library/reference/strlwr-wcslwr-mbslwr-strlwr-l-wcslwr-l-mbslwr-l.md)</ept>,<bpt id="p2">[</bpt>_strlwr_s, _strlwr_s_l, _mbslwr_s, _mbslwr_s_l, _wcslwr_s, _wcslwr_s_l<ept id="p2">](../c-runtime-library/reference/strlwr-s-strlwr-s-l-mbslwr-s-mbslwr-s-l-wcslwr-s-wcslwr-s-l.md)</ept></source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Convert, in place, each uppercase letter in given string to lowercase</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>strtod, _strtod_l, wcstod, _wcstod_l</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Convert character string to <ph id="ph1">`double`</ph> value</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>(determines radix character recognition)</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>strtol, wcstol, _strtol_l, _wcstol_l</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Convert character string to <ph id="ph1">`long`</ph>value</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>(determines radix character recognition)</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>strtoul, _strtoul_l, wcstoul, _wcstoul_l</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Convert character string to unsigned long value</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>(determines radix character recognition)</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>_strupr, _strupr_l, _mbsupr, _mbsupr_l, _wcsupr_l, _wcsupr<ept id="p1">](../c-runtime-library/reference/strupr-strupr-l-mbsupr-mbsupr-l-wcsupr-l-wcsupr.md)</ept>,<bpt id="p2">[</bpt>_strupr_s, _strupr_s_l, _mbsupr_s, _mbsupr_s_l, _wcsupr_s, _wcsupr_s_l<ept id="p2">](../c-runtime-library/reference/strupr-s-strupr-s-l-mbsupr-s-mbsupr-s-l-wcsupr-s-wcsupr-s-l.md)</ept></source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Convert, in place, each lowercase letter in string to uppercase</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>strxfrm, wcsxfrm, _strxfrm_l, _wcsxfrm_l</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Transform string into collated form according to locale</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>tolower, _tolower, towlower, _tolower_l, _towlower_l<ept id="p1">](../c-runtime-library/reference/tolower-tolower-towlower-tolower-l-towlower-l.md)</ept>,<bpt id="p2">[</bpt>_mbctolower, _mbctolower_l, _mbctoupper, _mbctoupper_l<ept id="p2">](../c-runtime-library/reference/mbctolower-mbctolower-l-mbctoupper-mbctoupper-l.md)</ept></source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Convert given character to corresponding lowercase character</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>toupper, _toupper, towupper, _toupper_l, _towupper_l<ept id="p1">](../c-runtime-library/reference/toupper-toupper-towupper-toupper-l-towupper-l.md)</ept>,<bpt id="p2">[</bpt>_mbctolower, _mbctolower_l, _mbctoupper, _mbctoupper_l<ept id="p2">](../c-runtime-library/reference/mbctolower-mbctolower-l-mbctoupper-mbctoupper-l.md)</ept></source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Convert given character to corresponding uppercase letter</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>wcstombs, _wcstombs_l<ept id="p1">](../c-runtime-library/reference/wcstombs-wcstombs-l.md)</ept>,<bpt id="p2">[</bpt>wcstombs_s, _wcstombs_s_l<ept id="p2">](../c-runtime-library/reference/wcstombs-s-wcstombs-s-l.md)</ept></source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Convert sequence of wide characters to corresponding sequence of multibyte characters</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>wctomb, _wctomb_l<ept id="p1">](../c-runtime-library/reference/wctomb-wctomb-l.md)</ept>,<bpt id="p2">[</bpt>wctomb_s, _wctomb_s_l<ept id="p2">](../c-runtime-library/reference/wctomb-s-wctomb-s-l.md)</ept></source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Convert wide character to corresponding multibyte character</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>For multibyte routines, the multibyte code page must be equivalent to the locale set with <bpt id="p1">[</bpt>setlocale<ept id="p1">](../c-runtime-library/reference/setlocale-wsetlocale.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>_setmbcp<ept id="p1">](../c-runtime-library/reference/setmbcp.md)</ept>, with an argument of <ph id="ph1">`_MB_CP_LOCALE`</ph> makes the multibyte code page the same as the <ph id="ph2">`setlocale`</ph> code page.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Internationalization</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Run-Time Routines by Category</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>