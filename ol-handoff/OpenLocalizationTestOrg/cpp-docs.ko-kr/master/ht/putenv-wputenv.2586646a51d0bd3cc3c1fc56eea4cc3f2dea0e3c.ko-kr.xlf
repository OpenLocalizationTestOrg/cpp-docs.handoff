<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4f311f9a273af882401d661533a83e25ce825136</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\reference\putenv-wputenv.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">68f52e1d2aae7542e9eacb2efa69802191393d14</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0932646bdc2d30fd146552cce09c21f456d7ff68</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>_putenv, _wputenv | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>_putenv, _wputenv</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Creates, modifies, or removes environment variables.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>More secure versions of these functions are available; see <bpt id="p1">[</bpt>_putenv_s, _wputenv_s<ept id="p1">](../../c-runtime-library/reference/putenv-s-wputenv-s.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This API cannot be used in applications that execute in the Windows Runtime.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>CRT functions not supported with /ZW<ept id="p1">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Environment-string definition.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Return 0 if successful or –1 in the case of an error.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`_putenv`</ph> function adds new environment variables or modifies the values of existing environment variables.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Environment variables define the environment in which a process executes (for example, the default search path for libraries to be linked with a program).</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>is a wide-character version of <ph id="ph1">`_putenv`</ph>; the <ph id="ph2">`envstring`</ph> argument to <ph id="ph3">`_wputenv`</ph> is a wide-character string.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Generic-Text Routine Mappings</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Tchar.h routine</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>_UNICODE and _MBCS not defined</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>_MBCS defined</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>_UNICODE defined</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`envstring`</ph> argument must be a pointer to a string of the form <ph id="ph2">`varname=string`</ph>, where <ph id="ph3">`varname`</ph> is the name of the environment variable to be added or modified and <ph id="ph4">`string`</ph> is the variable's value.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`varname`</ph> is already part of the environment, its value is replaced by <ph id="ph2">`string`</ph>; otherwise, the new <ph id="ph3">`varname`</ph> variable and its <ph id="ph4">`string`</ph> value are added to the environment.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can remove a variable from the environment by specifying an empty <ph id="ph1">`string`</ph> — in other words, by specifying only <ph id="ph2">`varname=`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>and <ph id="ph1">`_wputenv`</ph> affect only the environment that is local to the current process; you cannot use them to modify the command-level environment.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>That is, these functions operate only on data structures accessible to the run-time library and not on the environment segment created for a process by the operating system.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When the current process terminates, the environment reverts to the level of the calling process (in most cases, the operating-system level).</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>However, the modified environment can be passed to any new processes created by <ph id="ph1">`_spawn`</ph>, <ph id="ph2">`_exec`</ph>, or <ph id="ph3">`system`</ph>, and these new processes get any new items added by <ph id="ph4">`_putenv`</ph> and <ph id="ph5">`_wputenv`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Do not change an environment entry directly: instead, use <ph id="ph1">`_putenv`</ph> or <ph id="ph2">`_wputenv`</ph> to change it.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In particular, direct freeing elements of the <ph id="ph1">`_environ[]`</ph> global array might lead to invalid memory being addressed.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>and <ph id="ph1">`_putenv`</ph> use the global variable <ph id="ph2">`_environ`</ph> to access the environment table; <ph id="ph3">`_wgetenv`</ph> and <ph id="ph4">`_wputenv`</ph> use <ph id="ph5">`_wenviron`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>and <ph id="ph1">`_wputenv`</ph> might change the value of <ph id="ph2">`_environ`</ph> and <ph id="ph3">`_wenviron`</ph>, thus invalidating the <ph id="ph4">`_envp`</ph> argument to <ph id="ph5">`main`</ph> and the _<ph id="ph6">`wenvp`</ph> argument to <ph id="ph7">`wmain`</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Therefore, it is safer to use <ph id="ph1">`_environ`</ph> or <ph id="ph2">`_wenviron`</ph> to access the environment information.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For more information about the relation of <ph id="ph1">`_putenv`</ph> and <ph id="ph2">`_wputenv`</ph> to global variables, see <bpt id="p1">[</bpt>_environ, _wenviron<ept id="p1">](../../c-runtime-library/environ-wenviron.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`_putenv`</ph> and <ph id="ph2">`_getenv`</ph> families of functions are not thread-safe.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>could return a string pointer while <ph id="ph1">`_putenv`</ph> is modifying the string, causing random failures.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Make sure that calls to these functions are synchronized.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Routine</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Required header</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>stdlib.h&gt;</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>stdlib.h&gt; or <ph id="ph1">\&lt;</ph>wchar.h&gt;</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more compatibility information, see <bpt id="p1">[</bpt>Compatibility<ept id="p1">](../../c-runtime-library/compatibility.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For a sample of how to use <ph id="ph1">`_putenv`</ph>, see <bpt id="p1">[</bpt>getenv, _wgetenv<ept id="p1">](../../c-runtime-library/reference/getenv-wgetenv.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>.NET Framework Equivalent</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Not applicable.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To call the standard C function, use <ph id="ph1">`PInvoke`</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Platform Invoke Examples<ept id="p1">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Process and Environment Control</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>getenv, _wgetenv</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>_searchenv, _wsearchenv</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>