<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">62bee2363bd829352ea8d052a9c3b09875aff358</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\build\reference\yu-use-precompiled-header-file.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4a63c1a49077386ba1354d4ae743f757664f7cc1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">06b6e144f77cea4307eed1ec3f5a20b8bf923faf</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>-Yu (Use Precompiled Header File) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>/Yu (Use Precompiled Header File)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Instructs the compiler to use an existing precompiled header (.pch) file in the current compilation.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Arguments</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>filename</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The name of a header file, which is included in the source file using an <bpt id="p1">**</bpt>#include<ept id="p1">**</ept> preprocessor directive.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The name of the include file must be the same for both the <bpt id="p1">**</bpt>/Yc<ept id="p1">**</ept> option that creates the precompiled header and any subsequent <bpt id="p2">**</bpt>/Yu<ept id="p2">**</ept> option indicating use of the precompiled header.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">**</bpt>/Yc<ept id="p1">**</ept>, <ph id="ph1">`filename`</ph> specifies the point at which precompilation stops; the compiler precompiles all code though <ph id="ph2">`filename`</ph> and names the resulting precompiled header using the base name of the include file and an extension of .pch.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The .pch file must have been created using <bpt id="p1">**</bpt>/Yc<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The compiler treats all code occurring before the .h file as precompiled.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>It skips to just beyond the <bpt id="p1">**</bpt>#include<ept id="p1">**</ept> directive associated with the .h file, uses the code contained in the .pch file, and then compiles all code after <ph id="ph1">`filename`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>On the command line, no space is allowed between <bpt id="p1">**</bpt>/Yu<ept id="p1">**</ept> and <ph id="ph1">`filename`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When you specify the <bpt id="p1">**</bpt>/Yu<ept id="p1">**</ept> option without a file name, your source program must contain a <bpt id="p2">[</bpt>#pragma hdrstop<ept id="p2">](../../preprocessor/hdrstop.md)</ept> pragma that specifies the file name of the precompiled header, .pch file.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In this case, the compiler will use the precompiled header (.pch file) named by <bpt id="p1">[</bpt>/Fp (Name .Pch File)<ept id="p1">](../../build/reference/fp-name-dot-pch-file.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The compiler skips to the location of that pragma, restores the compiled state from the precompiled header file specified by the pragma, and then compiles only code that follows the pragma.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>#pragma hdrstop<ept id="p1">**</ept> does not specify a file name, the compiler looks for a file with a name derived from the base name of the source file with a .pch extension.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">**</bpt>/Fp<ept id="p1">**</ept> option to specify a different .pch file.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If you specify the <bpt id="p1">**</bpt>/Yu<ept id="p1">**</ept> option without a file name and fail to specify a <bpt id="p2">**</bpt>hdrstop<ept id="p2">**</ept> pragma, an error message is generated and the compilation is unsuccessful.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">**</bpt>/Yc<ept id="p1">**</ept><ph id="ph1">`filename`</ph> and <bpt id="p2">**</bpt>/Yu<ept id="p2">**</ept><ph id="ph2">`filename`</ph> options occur on the same command line and both reference the same file name, <bpt id="p3">**</bpt>/Yc<ept id="p3">**</ept><ph id="ph3">`filename`</ph> takes precedence, precompiling all code up to and including the named file.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This feature simplifies the writing of makefiles.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Because .pch files contain information about the machine environment as well as memory address information about the program, you should only use a pch file on the machine where it was created.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For more information on precompiled headers, see:</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>/Y (Precompiled Headers)</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Creating Precompiled Header Files</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To set this compiler option in the Visual Studio development environment</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Specify <bpt id="p1">[</bpt>/Yc (Create Precompiled Header File)<ept id="p1">](../../build/reference/yc-create-precompiled-header-file.md)</ept> on a .cpp file in your project.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Open the project's <bpt id="p1">**</bpt>Property Pages<ept id="p1">**</ept> dialog box.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Working with Project Properties<ept id="p1">](../../ide/working-with-project-properties.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>C/C++<ept id="p1">**</ept> folder.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Precompiled Headers<ept id="p1">**</ept> property page.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Modify the <bpt id="p1">**</bpt>Create/Use PCH Through File<ept id="p1">**</ept> property or the <bpt id="p2">**</bpt>Create/Use Precompiled Header<ept id="p2">**</ept> property.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To set this compiler option programmatically</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>See &lt;xref:Microsoft.VisualStudio.VCProjectEngine.VCCLCompilerTool.PrecompiledHeaderThrough%2A&gt; and &lt;xref:Microsoft.VisualStudio.VCProjectEngine.VCCLCompilerTool.UsePrecompiledHeader%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Examples</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If the following code:</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>is compiled with the command line <ph id="ph1">`CL /YuMYAPP.H PROG.CPP`</ph>, the compiler does not process the three include statements but uses precompiled code from MYAPP.pch, thereby saving the time involved in preprocessing all three of the files (and any files they might include).</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt>/Fp (Name .Pch File)<ept id="p1">](../../build/reference/fp-name-dot-pch-file.md)</ept> option with the <bpt id="p2">**</bpt>/Yu<ept id="p2">**</ept> option to specify the name of the .pch file if the name is different from either the file name argument to <bpt id="p3">**</bpt>/Yc<ept id="p3">**</ept> or the base name of the source file, as in the following:</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This command specifies a precompiled header file named MYPCH.pch.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The compiler uses its contents to restore the precompiled state of all header files up to and including MYAPP.h.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The compiler then compiles the code that occurs after the MYAPP.h <bpt id="p1">**</bpt>include<ept id="p1">**</ept> statement.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Compiler Options</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Setting Compiler Options</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>