<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c49b0b14526d4ba95e64eb05273241f5c3112372</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\build\reference\base-base-address.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">96826a61a634921a785076f4df7ed56dd45e79f7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e7b7166b9d6816d39cecd33520f58e4695633b37</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>-BASE (Base Address) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>/BASE (Base Address)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The /BASE option sets a base address for the program, overriding the default location for an .exe  or DLL file.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The default base address for an .exe file is 0x400000 for 32-bit images or 0x140000000 for 64-bit images.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For a DLL, the default base address is 0x10000000 for 32-bit images or 0x180000000 for 64-bit images.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>On operating systems that do not support address space layout randomization (ASLR), or when the /DYNAMICBASE:NO option was set, the operating system first attempts to load a program at its specified or default base address.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If sufficient space is not available there, the system relocates the program.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To prevent relocation, use the <bpt id="p1">[</bpt>/FIXED<ept id="p1">](../../build/reference/fixed-fixed-base-address.md)</ept> option.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The linker issues an error if <bpt id="p1">*</bpt>address<ept id="p1">*</ept> is not a multiple of 64K.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can optionally specify the size of the program; the linker issues a warning if the program can't fit in the size you specified.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>On the command line, another way to specify the base address is by using a base address response file.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A base address response file is a text file that contains the base addresses and optional sizes of all the DLLs your program will use, and a unique text key for each base address.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To specify a base address by using a response file, use an at sign (@) followed by the name of the response file, <bpt id="p1">*</bpt>filename<ept id="p1">*</ept>, followed by a comma, then the <ph id="ph1">`key`</ph> value for the base address to use in the file.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The linker looks for <bpt id="p1">*</bpt>filename<ept id="p1">*</ept> in either the specified path, or if no path is specified, in the directories specified in the LIB environment variable.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Each line in <bpt id="p1">*</bpt>filename<ept id="p1">*</ept> represents one DLL and has the following syntax:</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`key`</ph> is a string of alphanumeric characters and is not case sensitive.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>It is usually the name of a DLL, but it need not be.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`key`</ph> is followed by a base <bpt id="p1">*</bpt>address<ept id="p1">*</ept> in C-language, hexadecimal, or decimal notation and an optional maximum <ph id="ph2">`size`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>All three arguments are separated by spaces or tabs.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The linker issues a warning if the specified <ph id="ph1">`size`</ph> is less than the virtual address space required by the program.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`comment`</ph> is specified by a semicolon (;) and can be on the same or a separate line.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The linker ignores all text from the semicolon to the end of the line.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This example shows part of such a file:</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If the file that contains these lines is called DLLS.txt, the following example command applies this information:</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For security reasons, Microsoft recommends you use the <bpt id="p1">[</bpt>/DYNAMICBASE<ept id="p1">](../../build/reference/dynamicbase-use-address-space-layout-randomization.md)</ept> option instead of specifying base addresses for your executables.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This generates an executable image that can be randomly rebased at load time by using the address space layout randomization (ASLR) feature of Windows.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The /DYNAMICBASE option is on by default.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Another way to set the base address is by using the <bpt id="p1">*</bpt>BASE<ept id="p1">*</ept> argument in a <bpt id="p2">[</bpt>NAME<ept id="p2">](../../build/reference/name-c-cpp.md)</ept> or <bpt id="p3">[</bpt>LIBRARY<ept id="p3">](../../build/reference/library.md)</ept> statement.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The /BASE and <bpt id="p1">[</bpt>/DLL<ept id="p1">](../../build/reference/dll-build-a-dll.md)</ept> options together are equivalent to the <bpt id="p2">**</bpt>LIBRARY<ept id="p2">**</ept> statement.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To set this linker option in the Visual Studio development environment</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Open the project's <bpt id="p1">**</bpt>Property Pages<ept id="p1">**</ept> dialog box.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Setting Visual C++ Project Properties<ept id="p1">](../../ide/working-with-project-properties.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Expand the <bpt id="p1">**</bpt>Linker<ept id="p1">**</ept> folder.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Choose the <bpt id="p1">**</bpt>Advanced<ept id="p1">**</ept> property page.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Modify the <bpt id="p1">**</bpt>Base Address<ept id="p1">**</ept> property.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To set this linker option programmatically</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>See &lt;xref:Microsoft.VisualStudio.VCProjectEngine.VCLinkerTool.BaseAddress%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Setting Linker Options</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Linker Options</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>