<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f073cd240b13adbdebb59cbdd2a47f69deef5df5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\dispatch-maps.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7181b4052cf0744e3303c14a11c64e91cbcb4edc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b625f829877b9c13ead0bca34ce922699fbdc90f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Dispatch Maps | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Dispatch Maps</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>OLE Automation provides ways to call methods and to access properties across applications.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The mechanism supplied by the Microsoft Foundation Class Library for dispatching these requests is the "dispatch map," which designates the internal and external names of object functions and properties, as well as the data types of the properties themselves and of function arguments.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Dispatch Maps</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>DECLARE_DISPATCH_MAP</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Declares that a dispatch map will be used to expose a class's methods and properties (must be used in the class declaration).</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>BEGIN_DISPATCH_MAP</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Starts the definition of a dispatch map.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>END_DISPATCH_MAP</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Ends the definition of a dispatch map.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>DISP_FUNCTION</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Used in a dispatch map to define an OLE automation function.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>DISP_PROPERTY</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Defines an OLE automation property.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>DISP_PROPERTY_EX</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Defines an OLE automation property and names the Get and Set functions.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>DISP_PROPERTY_NOTIFY</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Defines an OLE automation property with notification.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>DISP_PROPERTY_PARAM</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Defines an OLE automation property that takes parameters and names the Get and Set functions.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>DISP_DEFVALUE</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Makes an existing property the default value of an object.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>DECLARE_DISPATCH_MAP</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If a <ph id="ph1">`CCmdTarget`</ph>-derived class in your program supports OLE Automation, that class must provide a dispatch map to expose its methods and properties.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`DECLARE_DISPATCH_MAP`</ph> macro at the end of your class declaration.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Then, in the .CPP file that defines the member functions for the class, use the <ph id="ph1">`BEGIN_DISPATCH_MAP`</ph> macro.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Then include macro entries for each of your class's exposed methods and properties ( <ph id="ph1">`DISP_FUNCTION`</ph>, <ph id="ph2">`DISP_PROPERTY`</ph>, and so on).</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Finally, use the <ph id="ph1">`END_DISPATCH_MAP`</ph> macro.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If you declare any members after <ph id="ph1">`DECLARE_DISPATCH_MAP`</ph>, you must specify a new access type ( <bpt id="p1">**</bpt>public<ept id="p1">**</ept>, <ph id="ph2">`private`</ph>, or <ph id="ph3">`protected`</ph>) for them.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The Application Wizard and code wizards assist in creating Automation classes and in maintaining dispatch maps.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For more information on dispatch maps, see <bpt id="p1">[</bpt>Automation Servers<ept id="p1">](../../mfc/automation-servers.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>NVC_MFCAutomation#10</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>BEGIN_DISPATCH_MAP</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Declares the definition of your dispatch map.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Specifies the name of the class that owns this dispatch map.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Specifies the base class name of <ph id="ph1">`theClass`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>In the implementation (.cpp) file that defines the member functions for your class, start the dispatch map with the <ph id="ph1">`BEGIN_DISPATCH_MAP`</ph> macro, add macro entries for each of your dispatch functions and properties, and complete the dispatch map with the <ph id="ph2">`END_DISPATCH_MAP`</ph> macro.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>END_DISPATCH_MAP</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Ends the definition of your dispatch map.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>It must be used in conjunction with <ph id="ph1">`BEGIN_DISPATCH_MAP`</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>DISP_FUNCTION</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Defines an OLE automation function in a dispatch map.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Name of the class.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>External name of the function.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Name of the member function.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A value specifying the function's return type.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A space-separated list of one or more constants specifying the function's parameter list.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`vtRetVal`</ph> argument is of type <bpt id="p1">**</bpt>VARTYPE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The following possible values for this argument are taken from the <ph id="ph1">`VARENUM`</ph> enumeration:</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Symbol</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Return type</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>short</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>long</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>float</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>double</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>CY</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>DATE</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>VT_DISPATCH</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>BOOL</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>VT_VARIANT</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>VARIANT</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>VT_UNKNOWN</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`vtsParams`</ph> argument is a space-separated list of values from the <bpt id="p1">**</bpt>VTS_<ept id="p1">**</ept> constants.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>One or more of these values separated by spaces (not commas) specifies the function's parameter list.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For example,</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>NVC_MFCAutomation#14</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>specifies a list containing a short integer followed by a pointer to a short integer.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>VTS_<ept id="p1">**</ept> constants and their meanings are as follows:</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Symbol</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Parameter type</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>VTS_I2</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>VTS_I4</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>VTS_R4</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Float</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>VTS_R8</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>VTS_CY</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>const CY<ept id="p1">**</ept> or <bpt id="p2">**</bpt>CY<ph id="ph1">\*</ph><ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>VTS_DATE</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>DATE</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>VTS_BSTR</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>VTS_DISPATCH</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>VTS_SCODE</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>VTS_BOOL</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>BOOL</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>VTS_VARIANT</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>const VARIANT<ph id="ph1">\*</ph><ept id="p1">**</ept> or <bpt id="p2">**</bpt>VARIANT&amp;<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>VTS_UNKNOWN</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>VTS_PI2</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>short</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>VTS_PI4</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>long</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>VTS_PR4</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>float</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>VTS_PR8</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>double</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>VTS_PCY</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>CY</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>VTS_PDATE</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>DATE</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>VTS_PBSTR</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>BSTR</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>VTS_PDISPATCH</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>LPDISPATCH</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>VTS_PSCODE</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>SCODE</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>VTS_PBOOL</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>BOOL</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>VTS_PVARIANT</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>VARIANT</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>VTS_PUNKNOWN</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>LPUNKNOWN</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>VTS_NONE</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>No parameters</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>DISP_PROPERTY</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Defines an OLE automation property in a dispatch map.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Name of the class.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>External name of the property.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Name of the member variable in which the property is stored.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>A value specifying the property's type.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`vtPropType`</ph> argument is of type <bpt id="p1">**</bpt>VARTYPE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Possible values for this argument are taken from the <ph id="ph1">`VARENUM`</ph> enumeration:</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Symbol</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Property type</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>short</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>long</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>float</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>double</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>CY</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>DATE</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>VT_DISPATCH</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>BOOL</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>VT_VARIANT</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>VARIANT</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>VT_UNKNOWN</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>When an external client changes the property, the value of the member variable specified by <ph id="ph1">`memberName`</ph> changes; there is no notification of the change.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>DISP_PROPERTY_EX</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Defines an OLE automation property and name the functions used to get and set the property's value in a dispatch map.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Name of the class.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>External name of the property.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Name of the member function used to get the property.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Name of the member function used to set the property.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>A value specifying the property's type.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`memberGet`</ph> and <ph id="ph2">`memberSet`</ph> functions have signatures determined by the <ph id="ph3">`vtPropType`</ph> argument.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`memberGet`</ph> function takes no arguments and returns a value of the type specified by <ph id="ph2">`vtPropType`</ph>.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`memberSet`</ph> function takes an argument of the type specified by <ph id="ph2">`vtPropType`</ph> and returns nothing.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`vtPropType`</ph> argument is of type <bpt id="p1">**</bpt>VARTYPE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Possible values for this argument are taken from the <ph id="ph1">`VARENUM`</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>For a list of these values, see the Remarks for the <ph id="ph1">`vtRetVal`</ph> parameter in <bpt id="p1">[</bpt>DISP_FUNCTION<ept id="p1">](#disp_function)</ept>.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Note that <ph id="ph1">`VT_EMPTY`</ph>, listed in the <ph id="ph2">`DISP_FUNCTION`</ph> remarks, is not permitted as a property data type.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>DISP_PROPERTY_NOTIFY</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Defines an OLE automation property with notification in a dispatch map.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Name of the class.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>External name of the property.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Name of the member variable in which the property is stored.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Name of the notification function for <ph id="ph1">`szExternalName`</ph>.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>A value specifying the property's type.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Unlike properties defined with <ph id="ph1">`DISP_PROPERTY`</ph>, a property defined with <ph id="ph2">`DISP_PROPERTY_NOTIFY`</ph> will automatically call the function specified by <ph id="ph3">`pfnAfterSet`</ph> when the property is changed.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`vtPropType`</ph> argument is of type <bpt id="p1">**</bpt>VARTYPE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Possible values for this argument are taken from the <ph id="ph1">`VARENUM`</ph> enumeration:</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Symbol</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Property type</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>short</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>long</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>float</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>double</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>CY</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>DATE</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>VT_DISPATCH</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>BOOL</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>VT_VARIANT</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>VARIANT</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>VT_UNKNOWN</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>DISP_PROPERTY_PARAM</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Defines a property accessed with separate <bpt id="p1">**</bpt>Get<ept id="p1">**</ept> and <ph id="ph1">`Set`</ph> member functions.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Name of the class.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>pszExternalName</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>External name of the property.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Name of the member function used to get the property.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Name of the member function used to set the property.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>A value specifying the property's type.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>A string of space-separated <bpt id="p1">**</bpt>VTS_<ept id="p1">**</ept> variant parameter types, one for each parameter.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Unlike the <ph id="ph1">`DISP_PROPERTY_EX`</ph> macro, this macro allows you to specify a parameter list for the property.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>This is useful for implementing properties that are indexed or parameterized.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Consider the following declaration of get and set member functions that allow the user to request a specific row and column when accessing the property:</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>NVC_MFCActiveXControl#9</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>These correspond to the following <ph id="ph1">`DISP_PROPERTY_PARAM`</ph> macro in the control dispatch map:</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>NVC_MFCActiveXControl#10</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>As another example, consider the following get and set member functions:</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>NVC_MFCActiveXControl#11</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>These correspond to the following <ph id="ph1">`DISP_PROPERTY_PARAM`</ph> macro in the control dispatch map:</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>NVC_MFCActiveXControl#12</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>DISP_DEFVALUE</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Makes an existing property the default value of an object.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Name of the class.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>External name of the property that represents the "value" of the object.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Using a default value can make programming your automation object simpler for Visual Basic applications.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The "default value" of your object is the property that is retrieved or set when a reference to an object does not specify a property or member function.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Macros and Globals</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>