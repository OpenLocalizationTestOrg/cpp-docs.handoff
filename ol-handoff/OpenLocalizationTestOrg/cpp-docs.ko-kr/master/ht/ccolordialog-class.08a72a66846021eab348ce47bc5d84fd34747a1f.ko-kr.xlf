<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7a579ec82f18674f72ec09954639b5d773d821b4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\ccolordialog-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">de1d6514c2aa279b0b43be4e363e3672bae89dfe</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9c968580e697f99e89247298e65054fb5762d0d9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CColorDialog Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CColorDialog Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Allows you to incorporate a color-selection dialog box into your application.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>CColorDialog::CColorDialog</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CColorDialog`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>CColorDialog::DoModal</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Displays a color dialog box and allows the user to make a selection.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>CColorDialog::GetColor</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">**</bpt>COLORREF<ept id="p1">**</ept> structure containing the values of the selected color.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>CColorDialog::GetSavedCustomColors</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Retrieves custom colors created by the user.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>CColorDialog::SetCurrentColor</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Forces the current color selection to the specified color.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Protected Methods</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>CColorDialog::OnColorOK</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Override to validate the color entered into the dialog box.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Public Data Members</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>CColorDialog::m_cc</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A structure used to customize the settings of the dialog box.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CColorDialog`</ph> object is a dialog box with a list of colors that are defined for the display system.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The user can select or create a particular color from the list, which is then reported back to the application when the dialog box exits.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To construct a <ph id="ph1">`CColorDialog`</ph> object, use the provided constructor or derive a new class and use your own custom constructor.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Once the dialog box has been constructed, you can set or modify any values in the <bpt id="p1">[</bpt>m_cc<ept id="p1">](#ccolordialog__m_cc)</ept> structure to initialize the values of the dialog box's controls.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`m_cc`</ph> structure is of type <bpt id="p1">[</bpt>CHOOSECOLOR<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646830)</ept>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>After initializing the dialog box's controls, call the <ph id="ph1">`DoModal`</ph> member function to display the dialog box and allow the user to select a color.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>returns the user's selection of either the dialog box's OK ( <bpt id="p1">**</bpt>IDOK<ept id="p1">**</ept>) or Cancel ( <bpt id="p2">**</bpt>IDCANCEL<ept id="p2">**</ept>) button.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`DoModal`</ph> returns <bpt id="p1">**</bpt>IDOK<ept id="p1">**</ept>, you can use one of <ph id="ph2">`CColorDialog`</ph>'s member functions to retrieve the information input by the user.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You can use the Windows <bpt id="p1">[</bpt>CommDlgExtendedError<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646916)</ept> function to determine whether an error occurred during initialization of the dialog box and to learn more about the error.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>relies on the COMMDLG.DLL file that ships with Windows versions 3.1 and later.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To customize the dialog box, derive a class from <ph id="ph1">`CColorDialog`</ph>, provide a custom dialog template, and add a message map to process the notification messages from the extended controls.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Any unprocessed messages should be passed to the base class.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Customizing the hook function is not required.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>On some installations the <ph id="ph1">`CColorDialog`</ph> object will not display with a gray background if you have used the framework to make other <ph id="ph2">`CDialog`</ph> objects gray.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For more information on using <ph id="ph1">`CColorDialog`</ph>, see <bpt id="p1">[</bpt>Common Dialog Classes<ept id="p1">](../../mfc/common-dialog-classes.md)</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>CObject</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>CCmdTarget</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>CWnd</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>CDialog</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>CCommonDialog</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxdlgs.h</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>CColorDialog::CColorDialog</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CColorDialog`</ph> object.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>clrInit</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The default color selection.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If no value is specified, the default is RGB(0,0,0) (black).</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>A set of flags that customize the function and appearance of the dialog box.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>CHOOSECOLOR<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646830)</ept> structure in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A pointer to the dialog box's parent or owner window.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>NVC_MFCDocView#49</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>CColorDialog::DoModal</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Call this function to display the Windows common color dialog box and allow the user to select a color.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>IDOK<ept id="p1">**</ept> or <bpt id="p2">**</bpt>IDCANCEL<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>IDCANCEL<ept id="p1">**</ept> is returned, call the Windows <bpt id="p2">[</bpt>CommDlgExtendedError<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms646916)</ept> function to determine whether an error occurred.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>IDOK<ept id="p1">**</ept> and <bpt id="p2">**</bpt>IDCANCEL<ept id="p2">**</ept> are constants that indicate whether the user selected the OK or Cancel button.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If you want to initialize the various color dialog-box options by setting members of the <bpt id="p1">[</bpt>m_cc<ept id="p1">](#ccolordialog__m_cc)</ept> structure, you should do this before calling <ph id="ph1">`DoModal`</ph> but after the dialog-box object is constructed.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>After calling <ph id="ph1">`DoModal`</ph>, you can call other member functions to retrieve the settings or information input by the user into the dialog box.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CColorDialog::CColorDialog<ept id="p1">](#ccolordialog__ccolordialog)</ept>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>CColorDialog::GetColor</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Call this function after calling <ph id="ph1">`DoModal`</ph> to retrieve the information about the color the user selected.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>COLORREF<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd183449)</ept> value that contains the RGB information for the color selected in the color dialog box.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>NVC_MFCDocView#50</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>CColorDialog::GetSavedCustomColors</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>objects permit the user, in addition to choosing colors, to define up to 16 custom colors.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A pointer to an array of 16 RGB color values that stores custom colors created by the user.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`GetSavedCustomColors`</ph> member function provides access to these colors.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>These colors can be retrieved after <bpt id="p1">[</bpt>DoModal<ept id="p1">](#ccolordialog__domodal)</ept> returns <bpt id="p2">**</bpt>IDOK<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Each of the 16 RGB values in the returned array is initialized to RGB(255,255,255) (white).</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The custom colors chosen by the user are saved only between dialog box invocations within the application.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>If you wish to save these colors between invocations of the application, you must save them in some other manner, such as in an initialization (.INI) file.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>NVC_MFCDocView#51</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>CColorDialog::m_cc</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A structure of type <bpt id="p1">[</bpt>CHOOSECOLOR<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646830)</ept>, whose members store the characteristics and values of the dialog box.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>After constructing a <ph id="ph1">`CColorDialog`</ph> object, you can use <ph id="ph2">`m_cc`</ph> to set various aspects of the dialog box before calling the <bpt id="p1">[</bpt>DoModal<ept id="p1">](#ccolordialog__domodal)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>NVC_MFCDocView#53</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>CColorDialog::OnColorOK</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Override to validate the color entered into the dialog box.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Nonzero if the dialog box should not be dismissed; otherwise 0 to accept the color that was entered.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Override this function only if you want to provide custom validation of the color the user selects in the color dialog box.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The user can select a color by one of the following two methods:</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Clicking a color on the color palette.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The selected color's RGB values are then reflected in the appropriate RGB edit boxes.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Entering values in the RGB edit boxes</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Overriding <ph id="ph1">`OnColorOK`</ph> allows you to reject a color the user enters into a common color dialog box for any application-specific reason.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Normally, you do not need to use this function because the framework provides default validation of colors and displays a message box if an invalid color is entered.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>You can call <bpt id="p1">[</bpt>SetCurrentColor<ept id="p1">](#ccolordialog__setcurrentcolor)</ept> from within <ph id="ph1">`OnColorOK`</ph> to force a color selection.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Once <ph id="ph1">`OnColorOK`</ph> has been fired (that is, the user clicks <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> to accept the color change), you can call <bpt id="p2">[</bpt>GetColor<ept id="p2">](#ccolordialog__getcolor)</ept> to get the RGB value of the new color.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>NVC_MFCDocView#52</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>CColorDialog::SetCurrentColor</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Call this function after calling <ph id="ph1">`DoModal`</ph> to force the current color selection to the color value specified in <ph id="ph2">`clr`</ph>.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>An RGB color value.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>This function is called from within a message handler or <ph id="ph1">`OnColorOK`</ph>.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The dialog box will automatically update the user's selection based on the value of the <ph id="ph1">`clr`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CColorDialog::OnColorOK<ept id="p1">](#ccolordialog__oncolorok)</ept>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>MFC Sample MDI</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>MFC Sample DRAWCLI</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>CCommonDialog Class</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Hierarchy Chart</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>