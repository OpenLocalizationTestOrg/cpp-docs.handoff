<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">42ffc02ad7c028bbe3a8ec5f86057c02a7fd3a8f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\windows\how-to-include-resources-at-compile-time.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d23aa29b509ad4f758517fae9c1fed124f2ad117</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d5ce065d2faa885b94581729bf0efa79949fae2e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Include Resources at Compile Time | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Include Resources at Compile Time</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Normally it is easy and convenient to work with the default arrangement of all resources in one resource script (.rc) file.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>However, you can add resources in other files to your current project at compile time by listing them in the <bpt id="p1">**</bpt>Compile-time directives<ept id="p1">**</ept> box in the <bpt id="p2">[</bpt>Resource Includes dialog box<ept id="p2">](../windows/resource-includes-dialog-box.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>There are several reasons to place resources in a file other than the main .rc file:</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To add comments to resource statements that will not get deleted when you save the .rc file.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The resource editors do not directly read .rc or resource.h files.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The resource compiler compiles them into .aps files, which are consumed by the resource editors.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This file is a compile step and only stores symbolic data.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>As with a normal compile process, information that is not symbolic (for example, comments) is discarded during the compile process.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Whenever the .aps file gets out of synch with the .rc file, the .rc file is regenerated (for example, when you Save, the resource editor overwrites the .rc file and the resource.h file).</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Any changes to the resources themselves will remain incorporated in the .rc file, but comments will always be lost once the .rc file is overwritten.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To include resources that have already been developed and tested and do not need further modification.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>(Any files that are included but don't have an .rc extension will not be editable by the resource editors.)</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To include resources that are being used by several different projects, or that are part of a source code version-control system, and thus must exist in a central location where modifications will affect all projects.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To include resources (such as RCDATA resources) that are in a custom format.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>RCDATA resources may have special requirements.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example, you cannot use an expression as a value for the nameID field.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>See the <ph id="ph1">[!INCLUDE[winsdkshort](../atl-mfc-shared/reference/includes/winsdkshort_md.md)]</ph> documentation for more information.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If you have sections in your existing .rc files that meet any of these conditions, you should place the sections in one or more separate .rc files and include them in your project using the <bpt id="p1">[</bpt>Resource Includes dialog box<ept id="p1">](../windows/resource-includes-dialog-box.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>Projectname<ept id="p1">*</ept>.rc2 file created in the \res subdirectory of a new project is used for this purpose.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To include resources in your project at compile time</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Place the resources in a resource script file with a unique file name.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Do not use <bpt id="p1">*</bpt>projectname<ept id="p1">*</ept>.rc, because this is the file name used for the main resource script file.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Right-click the .rc file (in <bpt id="p1">[</bpt>Resource View<ept id="p1">](../windows/resource-view-window.md)</ept>) and choose <bpt id="p2">**</bpt>Resource Includes<ept id="p2">**</ept> from the shortcut menu.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Compile-time directives<ept id="p1">**</ept> box, add the <bpt id="p2">[</bpt>#include<ept id="p2">](../preprocessor/hash-include-directive-c-cpp.md)</ept> compiler directive to include the new resource file in the main resource file in the development environment.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The resources in files included in this way are made a part of your executable file at compile time.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>They are not directly available for editing or modification when you are working on your project's main .rc file.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You need to open included .rc files separately.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Any files that are included but don't have an .rc extension will not be editable by the resource editors.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For information on adding resources to managed projects, please see <bpt id="p1">[</bpt>Resources in Applications<ept id="p1">](http://msdn.microsoft.com/Library/8ad495d4-2941-40cf-bf64-e82e85825890)</ept> in the <bpt id="p2">*</bpt>.NET Framework Developer's Guide.<ept id="p2">*</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For information on manually adding resource files to managed projects, accessing resources, displaying static resources, and assigning resources strings to properties, see <bpt id="p1">[</bpt>Walkthrough: Using Resources for Localization with ASP.NET<ept id="p1">](http://msdn.microsoft.com/Library/bb4e5b44-e2b0-48ab-bbe9-609fb33900b6)</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Win32</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Resource Files</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Resource Editors</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>