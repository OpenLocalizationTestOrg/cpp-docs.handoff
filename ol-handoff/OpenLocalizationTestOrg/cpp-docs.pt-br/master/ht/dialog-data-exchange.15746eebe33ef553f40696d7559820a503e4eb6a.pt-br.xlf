<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e053ed8c324c049add7d887f58d6069ccc46a3a6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\dialog-data-exchange.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">628b73c877f94d631b6c33a9cf230573796c98a8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fade5c6ad501daef00ec5a278baebc864dad12a8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Dialog Data Exchange | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Dialog Data Exchange</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>If you use the DDX mechanism, you set the initial values of the dialog object's member variables, typically in your <ph id="ph1">`OnInitDialog`</ph> handler or the dialog constructor.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Immediately before the dialog is displayed, the framework's DDX mechanism transfers the values of the member variables to the controls in the dialog box, where they appear when the dialog box itself appears in response to <ph id="ph1">`DoModal`</ph> or <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The default implementation of <ph id="ph1">`OnInitDialog`</ph> in <ph id="ph2">`CDialog`</ph> calls the <ph id="ph3">`UpdateData`</ph> member function of class <ph id="ph4">`CWnd`</ph> to initialize the controls in the dialog box.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The same mechanism transfers values from the controls to the member variables when the user clicks the OK button (or whenever you call the <ph id="ph1">`UpdateData`</ph> member function with the argument <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>).</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The dialog data validation mechanism validates any data items for which you specified validation rules.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following figure illustrates dialog data exchange.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Dialog box data exchange</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Dialog Data Exchange</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>works in both directions, as specified by the <bpt id="p1">**</bpt>BOOL<ept id="p1">**</ept> parameter passed to it.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To carry out the exchange, <ph id="ph1">`UpdateData`</ph> sets up a <ph id="ph2">`CDataExchange`</ph> object and calls your dialog class's override of <ph id="ph3">`CDialog`</ph>'s <ph id="ph4">`DoDataExchange`</ph> member function.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>takes an argument of type <ph id="ph1">`CDataExchange`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CDataExchange`</ph> object passed to <ph id="ph2">`UpdateData`</ph> represents the context of the exchange, defining such information as the direction of the exchange.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When you (or a Code wizard) override <ph id="ph1">`DoDataExchange`</ph>, you specify a call to one DDX function per data member (control).</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Each DDX function knows how to exchange data in both directions based on the context supplied by the <ph id="ph1">`CDataExchange`</ph> argument passed to your <ph id="ph2">`DoDataExchange`</ph> by <ph id="ph3">`UpdateData`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>MFC provides many DDX functions for different kinds of exchange.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The following example shows a <ph id="ph1">`DoDataExchange`</ph> override in which two DDX functions and one DDV function are called:</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>NVC_MFCControlLadenDialog#49</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DDX_`</ph> and <ph id="ph2">`DDV_`</ph> lines are a data map.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The sample DDX and DDV functions shown are for a check-box control and an edit-box control, respectively.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If the user cancels a modal dialog box, the <ph id="ph1">`OnCancel`</ph> member function terminates the dialog box and <ph id="ph2">`DoModal`</ph> returns the value <bpt id="p1">**</bpt>IDCANCEL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In that case, no data is exchanged between the dialog box and the dialog object.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Dialog Data Exchange and Validation</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Life Cycle of a Dialog Box</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Dialog Data Validation</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>