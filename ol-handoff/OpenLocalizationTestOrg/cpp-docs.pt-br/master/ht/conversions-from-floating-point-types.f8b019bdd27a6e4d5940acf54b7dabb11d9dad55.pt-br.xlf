<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">608dc712781add144a6cf2cab23ae6d6a7ae8cd4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-language\conversions-from-floating-point-types.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d80fcd5be2f809a4bd5fe2a5d0fb067458301032</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bba4e98b19fa7e3fd5de2ffa01913b057ab7f275</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Conversions from Floating-Point Types | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Conversions from Floating-Point Types</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>float<ept id="p1">**</ept> value converted to a <bpt id="p2">**</bpt>double<ept id="p2">**</ept> or <ph id="ph1">`long double`</ph>, or a <bpt id="p3">**</bpt>double<ept id="p3">**</ept> converted to a <ph id="ph2">`long double`</ph>, undergoes no change in value.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>double<ept id="p1">**</ept> value converted to a <bpt id="p2">**</bpt>float<ept id="p2">**</ept> value is represented exactly, if possible.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Precision may be lost if the value cannot be represented exactly.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If the result is out of range, the behavior is undefined.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Limits on Floating-Point Constants<ept id="p1">](../c-language/limits-on-floating-point-constants.md)</ept> for the range of floating-point types.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A floating value is converted to an integral value by first converting to a <bpt id="p1">**</bpt>long<ept id="p1">**</ept>, then from the <bpt id="p2">**</bpt>long<ept id="p2">**</ept> value to the specific integral value.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The decimal portion of the floating value is discarded in the conversion to a <bpt id="p1">**</bpt>long<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If the result is still too large to fit into a <bpt id="p1">**</bpt>long<ept id="p1">**</ept>, the result of the conversion is undefined.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Microsoft Specific</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When converting a <bpt id="p1">**</bpt>double<ept id="p1">**</ept> or <ph id="ph1">`long double`</ph> floating-point number to a smaller floating-point number, the value of the floating-point variable is truncated toward zero when an underflow occurs.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An overflow causes a run-time error.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Note that the Microsoft C compiler maps <ph id="ph1">`long double`</ph> to type <bpt id="p1">**</bpt>double<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>END Microsoft Specific</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following table summarizes conversions from floating types.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Conversions from Floating-Point Types</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>From</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Method</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>float</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Convert to <bpt id="p1">**</bpt>long<ept id="p1">**</ept>; convert <bpt id="p2">**</bpt>long<ept id="p2">**</ept> to</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>float</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>short</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Convert to <bpt id="p1">**</bpt>long<ept id="p1">**</ept>; convert <bpt id="p2">**</bpt>long<ept id="p2">**</ept> to <bpt id="p3">**</bpt>short<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>float</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>long</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Truncate at decimal point.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If result is too large to be represented as <bpt id="p1">**</bpt>long<ept id="p1">**</ept>, result is undefined.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>float</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>unsigned short</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Convert to <bpt id="p1">**</bpt>long<ept id="p1">**</ept>; convert <bpt id="p2">**</bpt>long<ept id="p2">**</ept> to <ph id="ph1">`unsigned`</ph> <bpt id="p3">**</bpt>short<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>float</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Convert to <bpt id="p1">**</bpt>long<ept id="p1">**</ept>; convert <bpt id="p2">**</bpt>long<ept id="p2">**</ept> to <ph id="ph1">`unsigned`</ph> <bpt id="p3">**</bpt>long<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>float</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>double</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Change internal representation</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>float</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Change internal representation</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>double</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Convert to <bpt id="p1">**</bpt>float<ept id="p1">**</ept>; convert <bpt id="p2">**</bpt>float<ept id="p2">**</ept> to</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>double</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>short</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Convert to <bpt id="p1">**</bpt>float<ept id="p1">**</ept>; convert <bpt id="p2">**</bpt>float<ept id="p2">**</ept> to <bpt id="p3">**</bpt>short<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>double</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>long</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Truncate at decimal point.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If result is too large to be represented as <bpt id="p1">**</bpt>long<ept id="p1">**</ept>, result is undefined.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>double</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>unsigned short</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Convert to <bpt id="p1">**</bpt>long<ept id="p1">**</ept>; convert <bpt id="p2">**</bpt>long<ept id="p2">**</ept> to <bpt id="p3">**</bpt>unsigned short<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>double</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Convert to <bpt id="p1">**</bpt>long<ept id="p1">**</ept>; convert <bpt id="p2">**</bpt>long<ept id="p2">**</ept> to <ph id="ph1">`unsigned`</ph> <bpt id="p3">**</bpt>long<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>double</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>float</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Represent as a <bpt id="p1">**</bpt>float<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>double<ept id="p1">**</ept> value cannot be represented exactly as <bpt id="p2">**</bpt>float<ept id="p2">**</ept>, loss of precision occurs.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If value is too large to be represented as <bpt id="p1">**</bpt>float<ept id="p1">**</ept>, the result is undefined.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Convert to <bpt id="p1">**</bpt>float<ept id="p1">**</ept>; convert <bpt id="p2">**</bpt>float<ept id="p2">**</ept> to</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>short</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Convert to <bpt id="p1">**</bpt>float<ept id="p1">**</ept>; convert <bpt id="p2">**</bpt>float<ept id="p2">**</ept> to <bpt id="p3">**</bpt>short<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>long</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Truncate at decimal point.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If result is too large to be represented as <bpt id="p1">**</bpt>long<ept id="p1">**</ept>, result is undefined.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>unsigned short</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Convert to <bpt id="p1">**</bpt>long<ept id="p1">**</ept>; convert <bpt id="p2">**</bpt>long<ept id="p2">**</ept> to <ph id="ph1">`unsigned`</ph> <bpt id="p3">**</bpt>short<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Convert to <bpt id="p1">**</bpt>long<ept id="p1">**</ept>; convert <bpt id="p2">**</bpt>long<ept id="p2">**</ept> to <ph id="ph1">`unsigned`</ph> <bpt id="p3">**</bpt>long<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>float</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Represent as a <bpt id="p1">**</bpt>float<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>double<ept id="p1">**</ept> value cannot be represented exactly as <bpt id="p2">**</bpt>float<ept id="p2">**</ept>, loss of precision occurs.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If value is too large to be represented as <bpt id="p1">**</bpt>float<ept id="p1">**</ept>, the result is undefined.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>double</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>long double<ept id="p1">**</ept> value is treated as <bpt id="p2">**</bpt>double<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Conversions from <bpt id="p1">**</bpt>float<ept id="p1">**</ept>, <bpt id="p2">**</bpt>double<ept id="p2">**</ept>, or <ph id="ph1">`long double`</ph> values to <ph id="ph2">`unsigned long`</ph> are not accurate if the value being converted is larger than the maximum positive <bpt id="p3">**</bpt>long<ept id="p3">**</ept> value.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Assignment Conversions</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>