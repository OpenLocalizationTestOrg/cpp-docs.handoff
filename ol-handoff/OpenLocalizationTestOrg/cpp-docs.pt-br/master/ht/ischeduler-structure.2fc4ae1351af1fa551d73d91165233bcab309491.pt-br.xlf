<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fd8733bdcf113497b82cb2559eaba5a6a4a15165</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\parallel\concrt\reference\ischeduler-structure.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e71777cfd212c45ccf34c239bae05910680f92f5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">40b5323a366b5f6ad21ea0e771be12ca2fb676f1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>IScheduler Structure | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>IScheduler Structure</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>An interface to an abstraction of a work scheduler.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The Concurrency Runtime's Resource Manager uses this interface to communicate with work schedulers.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>IScheduler::AddVirtualProcessors Method</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Provides a scheduler with a set of virtual processor roots for its use.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">`IVirtualProcessorRoot`</ph> interface represents the right to execute a single thread that can perform work on behalf of the scheduler.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>IScheduler::GetId Method</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Returns a unique identifier for the scheduler.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>IScheduler::GetPolicy Method</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Returns a copy of the scheduler's policy.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information on scheduler policies, see <bpt id="p1">[</bpt>SchedulerPolicy<ept id="p1">](schedulerpolicy-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>IScheduler::NotifyResourcesExternallyBusy Method</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Notifies this scheduler that the hardware threads represented by the set of virtual processor roots in the array <ph id="ph1">`ppVirtualProcessorRoots`</ph> are now being used by other schedulers.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>IScheduler::NotifyResourcesExternallyIdle Method</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Notifies this scheduler that the hardware threads represented by the set of virtual processor roots in the array <ph id="ph1">`ppVirtualProcessorRoots`</ph> are not being used by other schedulers.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>IScheduler::RemoveVirtualProcessors Method</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initiates the removal of virtual processor roots that were previously allocated to this scheduler.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>IScheduler::Statistics Method</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Provides information related to task arrival and completion rates, and change in queue length for a scheduler.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If you are implementing a custom scheduler that communicates with the Resource Manager, you should provide an implementation of the <ph id="ph1">`IScheduler`</ph> interface.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This interface is one end of a two-way channel of communication between a scheduler and the Resource Manager.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The other end is represented by the <ph id="ph1">`IResourceManager`</ph> and <ph id="ph2">`ISchedulerProxy`</ph> interfaces which are implemented by the Resource Manager.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> concrtrm.h</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Namespace:<ept id="p1">**</ept> concurrency</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>IScheduler::AddVirtualProcessors Method</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Provides a scheduler with a set of virtual processor roots for its use.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">`IVirtualProcessorRoot`</ph> interface represents the right to execute a single thread that can perform work on behalf of the scheduler.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">`IVirtualProcessorRoot`</ph> interfaces representing the virtual processor roots being added to the scheduler.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The number of <ph id="ph1">`IVirtualProcessorRoot`</ph> interfaces in the array.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The Resource Manager invokes the <ph id="ph1">`AddVirtualProcessor`</ph> method to grant an initial set of virtual processor roots to a scheduler.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>It could also invoke the method to add virtual processor roots to the scheduler when it rebalances resources among schedulers.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>IScheduler::GetId Method</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Returns a unique identifier for the scheduler.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A unique integer identifier.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You should use the <bpt id="p1">[</bpt>GetSchedulerId<ept id="p1">](concurrency-namespace-functions.md)</ept> function to obtain a unique identifier for the object that implements the <ph id="ph1">`IScheduler`</ph> interface, before you use the interface as a parameter to methods supplied by the Resource Manager.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You are expected to return the same identifier when the <ph id="ph1">`GetId`</ph> function is invoked.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>An identifier obtained from a different source could result in undefined behavior.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>IScheduler::GetPolicy Method</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Returns a copy of the scheduler's policy.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For more information on scheduler policies, see <bpt id="p1">[</bpt>SchedulerPolicy<ept id="p1">](schedulerpolicy-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A copy of the scheduler's policy.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>IScheduler::NotifyResourcesExternallyBusy Method</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Notifies this scheduler that the hardware threads represented by the set of virtual processor roots in the array <ph id="ph1">`ppVirtualProcessorRoots`</ph> are now being used by other schedulers.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">`IVirtualProcessorRoot`</ph> interfaces associated with the hardware threads on which other schedulers have become busy.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The number of <ph id="ph1">`IVirtualProcessorRoot`</ph> interfaces in the array.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>It is possible for a particular hardware thread to be assigned to multiple schedulers at the same time.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>One reason for this could be that there are not enough hardware threads on the system to satisfy the minimum concurrency for all schedulers, without sharing resources.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Another possibility is that resources are temporarily assigned to other schedulers when the owning scheduler is not using them, by way of all its virtual processor roots on that hardware thread being deactivated.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The subscription level of a hardware thread is denoted by the number of subscribed threads and activated virtual processor roots associated with that hardware thread.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>From a particular scheduler's point of view, the external subscription level of a hardware thread is the portion of the subscription other schedulers contribute to.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Notifications that resources are externally busy are sent to a scheduler when the external subscription level for a hardware thread moves from zero into positive territory.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Notifications via this method are only sent to schedulers that have a policy where the value for the <ph id="ph1">`MinConcurrency`</ph> policy key is equal to the value for the <ph id="ph2">`MaxConcurrency`</ph> policy key.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For more information on scheduler policies, see <bpt id="p1">[</bpt>SchedulerPolicy<ept id="p1">](schedulerpolicy-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A scheduler that qualifies for notifications gets a set of initial notifications when it is created, informing it whether the resources it was just assigned are externally busy or idle.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>IScheduler::NotifyResourcesExternallyIdle Method</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Notifies this scheduler that the hardware threads represented by the set of virtual processor roots in the array <ph id="ph1">`ppVirtualProcessorRoots`</ph> are not being used by other schedulers.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">`IVirtualProcessorRoot`</ph> interfaces associated with hardware threads on which other schedulers have become idle.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The number of <ph id="ph1">`IVirtualProcessorRoot`</ph> interfaces in the array.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>It is possible for a particular hardware thread to be assigned to multiple schedulers at the same time.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>One reason for this could be that there are not enough hardware threads on the system to satisfy the minimum concurrency for all schedulers, without sharing resources.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Another possibility is that resources are temporarily assigned to other schedulers when the owning scheduler is not using them, by way of all its virtual processor roots on that hardware thread being deactivated.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The subscription level of a hardware thread is denoted by the number of subscribed threads and activated virtual processor roots associated with that hardware thread.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>From a particular scheduler's point of view, the external subscription level of a hardware thread is the portion of the subscription other schedulers contribute to.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Notifications that resources are externally busy are sent to a scheduler when the external subscription level for a hardware thread falls to zero from a previous positive value.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Notifications via this method are only sent to schedulers that have a policy where the value for the <ph id="ph1">`MinConcurrency`</ph> policy key is equal to the value for the <ph id="ph2">`MaxConcurrency`</ph> policy key.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For more information on scheduler policies, see <bpt id="p1">[</bpt>SchedulerPolicy<ept id="p1">](schedulerpolicy-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>A scheduler that qualifies for notifications gets a set of initial notifications when it is created, informing it whether the resources it was just assigned are externally busy or idle.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>IScheduler::RemoveVirtualProcessors Method</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Initiates the removal of virtual processor roots that were previously allocated to this scheduler.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">`IVirtualProcessorRoot`</ph> interfaces representing the virtual processor roots to be removed.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The number of <ph id="ph1">`IVirtualProcessorRoot`</ph> interfaces in the array.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The Resource Manager invokes the <ph id="ph1">`RemoveVirtualProcessors`</ph> method to take back a set of virtual processor roots from a scheduler.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The scheduler is expected to invoke the <bpt id="p1">[</bpt>Remove<ept id="p1">](iexecutionresource-structure.md#remove)</ept> method on each interface when it is done with the virtual processor roots.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Do not use an <ph id="ph1">`IVirtualProcessorRoot`</ph> interface once you have invoked the <ph id="ph2">`Remove`</ph> method on it.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The parameter <ph id="ph1">`ppVirtualProcessorRoots`</ph> points to an array of interfaces.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Among the set of virtual processor roots to be removed, the roots have never been activated can be returned immediately using the <ph id="ph1">`Remove`</ph> method.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The roots that have been activated and are either executing work, or have been deactivated and are waiting for work to arrive, should be returned asynchronously.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The scheduler must make every attempt to remove the virtual processor root as quickly as possible.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Delaying removal of the virtual processor roots may result in unintentional oversubscription within the scheduler.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>IScheduler::Statistics Method</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Provides information related to task arrival and completion rates, and change in queue length for a scheduler.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The number of tasks that have been completed by the scheduler since the last call to this method.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The number of tasks that have arrived in the scheduler since the last call to this method.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The total number of tasks in all scheduler queues.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>This method is invoked by the Resource Manager in order to gather statistics for a scheduler.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The statistics gathered here will be used to drive dynamic feedback algorithms to determine when it is appropriate to assign more resources to the scheduler and when to take resources away.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The values provided by the scheduler can be optimistic and do not necessarily have to reflect the current count accurately.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>You should implement this method if you want the Resource Manager to use feedback about such things as task arrival to determine how to balance resource between your scheduler and other schedulers registered with the Resource Manager.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>If you choose not to gather statistics, you can set the policy key <ph id="ph1">`DynamicProgressFeedback`</ph> to the value <ph id="ph2">`DynamicProgressFeedbackDisabled`</ph> in your scheduler's policy, and the Resource Manager will not invoke this method on your scheduler.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>In the absence of statistical information, the Resource Manager will use hardware thread subscription levels to make resource allocation and migration decisions.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>For more information on subscription levels, see <bpt id="p1">[</bpt>IExecutionResource::CurrentSubscriptionLevel<ept id="p1">](iexecutionresource-structure.md#currentsubscriptionlevel)</ept>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>concurrency Namespace</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>PolicyElementKey Enumeration</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>SchedulerPolicy Class</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>IExecutionContext Structure</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>IThreadProxy Structure</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>IVirtualProcessorRoot Structure</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>IResourceManager Structure</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>