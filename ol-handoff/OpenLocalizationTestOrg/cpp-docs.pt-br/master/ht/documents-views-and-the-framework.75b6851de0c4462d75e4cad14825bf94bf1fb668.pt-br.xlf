<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2736be54bb3444dbdfe0ac553694a6c432af975f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\documents-views-and-the-framework.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">49e15b317f9f8b0d6930ad2b107f53ef98573ac2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">96645998726575892fb8bb2fc1db1aa20f08b18a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Documents, Views, and the Framework | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Documents, Views, and the Framework</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>At the heart of the MFC framework are the concepts of document and view.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A document is a data object with which the user interacts in an editing session.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>It is created by the <ph id="ph1">`New`</ph> or <bpt id="p1">**</bpt>Open<ept id="p1">**</ept> command on the <bpt id="p2">**</bpt>File<ept id="p2">**</ept> menu and is typically saved in a file.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>(Standard MFC documents, derived from class <bpt id="p1">**</bpt>CDocument<ept id="p1">**</ept>, are different from Active documents and OLE compound documents.) A view is a window object through which the user interacts with a document.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The key objects in a running application are:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The document or documents.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Your document class (derived from <bpt id="p1">[</bpt>CDocument<ept id="p1">](../mfc/reference/cdocument-class.md)</ept>) specifies your application's data.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If you want OLE functionality in your application, derive your document class from <bpt id="p1">[</bpt>COleDocument<ept id="p1">](../mfc/reference/coledocument-class.md)</ept> or one of its derived classes, depending on the type of functionality you need.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The view or views.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Your view class (derived from <bpt id="p1">[</bpt>CView<ept id="p1">](../mfc/reference/cview-class.md)</ept>) is the user's "window on the data."</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The view class controls how the user sees your document's data and interacts with it.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In some cases, you may want a document to have multiple views of the data.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If you need scrolling, derive from <bpt id="p1">[</bpt>CScrollView<ept id="p1">](../mfc/reference/cscrollview-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If your view has a user interface that is laid out in a dialog-template resource, derive from <bpt id="p1">[</bpt>CFormView<ept id="p1">](../mfc/reference/cformview-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For simple text data, use or derive from <bpt id="p1">[</bpt>CEditView<ept id="p1">](../mfc/reference/ceditview-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For a form-based data-access application, such as a data-entry program, derive from <bpt id="p1">[</bpt>CRecordView<ept id="p1">](../mfc/reference/crecordview-class.md)</ept> (for ODBC).</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Also available are classes <bpt id="p1">[</bpt>CTreeView<ept id="p1">](../mfc/reference/ctreeview-class.md)</ept>, <bpt id="p2">[</bpt>CListView<ept id="p2">](../mfc/reference/clistview-class.md)</ept>, and <bpt id="p3">[</bpt>CRichEditView<ept id="p3">](../mfc/reference/cricheditview-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The frame windows</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Views are displayed inside "document frame windows."</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In an SDI application, the document frame window is also the "main frame window" for the application.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In an MDI application, document windows are child windows displayed inside a main frame window.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Your derived main frame-window class specifies the styles and other characteristics of the frame windows that contain your views.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If you need to customize frame windows, derive from <bpt id="p1">[</bpt>CFrameWnd<ept id="p1">](../mfc/reference/cframewnd-class.md)</ept> to customize the document frame window for SDI applications.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Derive from <bpt id="p1">[</bpt>CMDIFrameWnd<ept id="p1">](../mfc/reference/cmdiframewnd-class.md)</ept> to customize the main frame window for MDI applications.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Also derive a class from <bpt id="p1">[</bpt>CMDIChildWnd<ept id="p1">](../mfc/reference/cmdichildwnd-class.md)</ept> to customize each distinct kind of MDI document frame windows that your application supports.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The document template or templates</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A document template orchestrates the creation of documents, views, and frame windows.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A particular document-template class, derived from class <bpt id="p1">[</bpt>CDocTemplate<ept id="p1">](../mfc/reference/cdoctemplate-class.md)</ept>, creates and manages all open documents of one type.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Applications that support more than one type of document have multiple document templates.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Use class <bpt id="p1">[</bpt>CSingleDocTemplate<ept id="p1">](../mfc/reference/csingledoctemplate-class.md)</ept> for SDI applications, or use class <bpt id="p2">[</bpt>CMultiDocTemplate<ept id="p2">](../mfc/reference/cmultidoctemplate-class.md)</ept> for MDI applications.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The application object</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Your application class (derived from <bpt id="p1">[</bpt>CWinApp<ept id="p1">](../mfc/reference/cwinapp-class.md)</ept>) controls all of the objects above and specifies application behavior such as initialization and cleanup.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The application's one and only application object creates and manages the document templates for any document types the application supports.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Thread objects</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If your application creates separate threads of execution — for example, to perform calculations in the background — you'll use classes derived from <bpt id="p1">[</bpt>CWinThread<ept id="p1">](../mfc/reference/cwinthread-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CWinApp<ept id="p1">](../mfc/reference/cwinapp-class.md)</ept> itself is derived from <ph id="ph1">`CWinThread`</ph> and represents the primary thread of execution (or the main process) in your application.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You can also use MFC in secondary threads.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>In a running application, these objects cooperatively respond to user actions, bound together by commands and other messages.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A single application object manages one or more document templates.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Each document template creates and manages one or more documents (depending on whether the application is SDI or MDI).</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The user views and manipulates a document through a view contained inside a frame window.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The following figure shows the relationships among these objects for an SDI application.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Objects in a running SDI application</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Objects in a Running SDI Application</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The rest of this family of articles explains how the framework tools, the MFC Application Wizard, and the resource editors, create these objects, how they work together, and how you use them in your programming.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Documents, views, and frame windows are discussed in more detail in <bpt id="p1">[</bpt>Window Objects<ept id="p1">](../mfc/window-objects.md)</ept> and <bpt id="p2">[</bpt>Document/View Architecture<ept id="p2">](../mfc/document-view-architecture.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Using the Classes to Write Applications for Windows</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>