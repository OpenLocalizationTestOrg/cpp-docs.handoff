<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8f66a21384a6aa4882c79f23fab481bcc3ecde6f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\build\malloc-alignment.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fa685cedd3476ce2d9fc9a1f46445a938861fd63</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">785e7d62d57a9caae63d5e510fed77a98883b6f9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>malloc Alignment | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>malloc Alignment</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>malloc<ept id="p1">](../c-runtime-library/reference/malloc.md)</ept> is guaranteed to return memory that's suitably aligned for storing any object that has a fundamental alignment and that could fit in the amount of memory that's allocated.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>fundamental alignment<ept id="p1">*</ept> is an alignment that's less than or equal to the largest alignment that's supported by the implementation without an alignment specification.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>(In Visual C++, this is the alignment that's required for a <ph id="ph1">`double`</ph>, or 8 bytes.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In code that targets 64-bit platforms, itâ€™s 16 bytes.) For example, a four-byte allocation would be aligned on a boundary that supports any four-byte or smaller object.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Visual C++ permits types that have <bpt id="p1">*</bpt>extended alignment<ept id="p1">*</ept>, which are also known as <bpt id="p2">*</bpt>over-aligned<ept id="p2">*</ept> types.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, the SSE types <bpt id="p1">[</bpt>__m128<ept id="p1">](../cpp/m128.md)</ept> and <ph id="ph1">`__m256`</ph>, and types that are declared by using <ph id="ph2">`__declspec(align(``n``))`</ph> where <ph id="ph3">`n`</ph> is greater than 8, have extended alignment.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Memory alignment on a boundary that's suitable for an object that requires extended alignment is not guaranteed by <ph id="ph1">`malloc`</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To allocate memory for over-aligned types, use <bpt id="p1">[</bpt>_aligned_malloc<ept id="p1">](../c-runtime-library/reference/aligned-malloc.md)</ept> and related functions.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Stack Usage</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>align</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>__declspec</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>