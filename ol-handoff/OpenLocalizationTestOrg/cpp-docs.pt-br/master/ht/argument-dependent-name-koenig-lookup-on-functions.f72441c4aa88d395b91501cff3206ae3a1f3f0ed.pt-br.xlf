<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dfc450b37c0e5976d6ed04f2ca6bc41736964fc2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\cpp\argument-dependent-name-koenig-lookup-on-functions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">56faa2514fcf6436a575ee1b4d677b3b24d8abed</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d11d02d155e5f57ba6077d1f567fcce173a85954</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Argument-Dependent Name (Koenig) Lookup on Functions | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Argument-Dependent Name (Koenig) Lookup on Functions</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The compiler can use argument-dependent name lookup to find the definition of an unqualified function call.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Argument-dependent name lookup is also called Koenig lookup.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The type of every argument in a function call is defined within a hierarchy of namespaces, classes, structures, unions, or templates.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>When you specify an unqualified <bpt id="p1">[</bpt>postfix<ept id="p1">](../cpp/postfix-expressions.md)</ept> function call, the compiler searches for the function definition in the hierarchy associated with each argument type.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In the sample, the compiler notes that function <ph id="ph1">`f()`</ph> takes an argument <ph id="ph2">`x`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Argument <ph id="ph1">`x`</ph> is of type <ph id="ph2">`A::X`</ph>, which is defined in namespace <ph id="ph3">`A`</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The compiler searches namespace <ph id="ph1">`A`</ph> and finds a definition for function <ph id="ph2">`f()`</ph> that takes an argument of type <ph id="ph3">`A::X`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>