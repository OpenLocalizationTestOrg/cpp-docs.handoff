<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f341d1b9f445d1c0f139618510c5e03a4f332f34</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\event-handling-principles.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cbda916ac86d09dfdf5281bef3190af46787e19c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3dffef1804f5c78b051b817bfcd372c7d23b9357</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Event Handling Principles | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Event Handling Principles</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>There are three steps common to all event handling.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You will need to:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Implement the event interface on your object.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Advise the event source that your object wants to receive events.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Unadvise the event source when your object no longer needs to receive events.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The way that you'll implement the event interface will depend on its type.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An event interface can be vtable, dual, or a dispinterface.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>It's up to the designer of the event source to define the interface; it's up to you to implement that interface.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Although there are no technical reasons that an event interface can't be dual, there are a number of good design reasons to avoid the use of duals.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>However, this is a decision made by the designer/implementer of the event <bpt id="p1">*</bpt>source<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Since you're working from the perspective of the event <ph id="ph1">`sink`</ph>, you need to allow for the possibility that you might not have any choice but to implement a dual event interface.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information on dual interfaces, see <bpt id="p1">[</bpt>Dual Interfaces and ATL<ept id="p1">](../atl/dual-interfaces-and-atl.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Advising the event source can be broken down into three steps:</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Query the source object for <bpt id="p1">[</bpt>IConnectionPointContainer<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683857)</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Call <bpt id="p1">[</bpt>IConnectionPointContainer::FindConnectionPoint<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms692476)</ept> passing the IID of the event interface that interests you.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If successful, this will return the <bpt id="p1">[</bpt>IConnectionPoint<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms694318)</ept> interface on a connection point object.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Call <bpt id="p1">[</bpt>IConnectionPoint::Advise<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms678815)</ept> passing the <bpt id="p2">**</bpt>IUnknown<ept id="p2">**</ept> of the event sink.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If successful, this will return a <ph id="ph1">`DWORD`</ph> cookie representing the connection.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Once you have successfully registered your interest in receiving events, methods on your object's event interface will be called according to the events fired by the source object.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When you no longer need to receive events, you can pass the cookie back to the connection point via <bpt id="p1">[</bpt>IConnectionPoint::Unadvise<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms686608)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This will break the connection between source and sink.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Be careful to avoid reference cycles when handling events.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Event Handling</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>