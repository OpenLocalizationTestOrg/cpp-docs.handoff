<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a6fc3be455efd2598b67aa1422b57829cec065f3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\cpp\protected-cpp.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d213b90fd2804a4fcf691209999e1c21cf3da6f1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">261f9aff62411f66dfb99f42dd34dae10fe4dd19</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>protected (C++) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>protected (C++)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`protected`</ph> keyword specifies access to class members in the <bpt id="p1">*</bpt>member-list<ept id="p1">*</ept> up to the next access specifier (<bpt id="p2">**</bpt>public<ept id="p2">**</ept> or <ph id="ph2">`private`</ph>) or the end of the class definition.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Class members declared as <ph id="ph1">`protected`</ph> can be used only by the following:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Member functions of the class that originally declared these members.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Friends of the class that originally declared these members.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Classes derived with public or protected access from the class that originally declared these members.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Direct privately derived classes that also have private access to protected members.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When preceding the name of a base class, the <ph id="ph1">`protected`</ph> keyword specifies that the public and protected members of the base class are protected members of its derived classes.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Protected members are not as private as <ph id="ph1">`private`</ph> members, which are accessible only to members of the class in which they are declared, but they are not as public as <bpt id="p1">**</bpt>public<ept id="p1">**</ept> members, which are accessible in any function.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Protected members that are also declared as <bpt id="p1">**</bpt>static<ept id="p1">**</ept> are accessible to any friend or member function of a derived class.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Protected members that are not declared as <bpt id="p1">**</bpt>static<ept id="p1">**</ept> are accessible to friends and member functions in a derived class only through a pointer to, reference to, or object of the derived class.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For related information, see <bpt id="p1">[</bpt>friend<ept id="p1">](../cpp/friend-cpp.md)</ept>, <bpt id="p2">[</bpt>public<ept id="p2">](../cpp/public-cpp.md)</ept>, <bpt id="p3">[</bpt>private<ept id="p3">](../cpp/private-cpp.md)</ept>, and the member-access table in <bpt id="p4">[</bpt>Controlling Access to Class Members<ept id="p4">](member-access-control-cpp.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>/clr Specific</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In CLR types, the C++ access specifier keywords (<bpt id="p1">**</bpt>public<ept id="p1">**</ept>, <ph id="ph1">`private`</ph>, and <ph id="ph2">`protected`</ph>) can affect the visibility of types and methods with regard to assemblies.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Member Access Control<ept id="p1">](member-access-control-cpp.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Files compiled with <bpt id="p1">[</bpt>/LN<ept id="p1">](../build/reference/ln-create-msil-module.md)</ept> are not affected by this behavior.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In this case, all managed classes (either public or private) will be visible.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>END /clr Specific</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Controlling Access to Class Members</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Keywords</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>