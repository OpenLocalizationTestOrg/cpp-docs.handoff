<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">60dafdfc4ee1a593ab4c87a5b2d86e9259bf9257</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\csid-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">49ce054af43ff4e976097de967549987515c7dcb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a53bfc20d3890446a419f1603bbd8f7dc91307c6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CSid Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CSid Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class is a wrapper for a <ph id="ph1">`SID`</ph> (security identifier) structure.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This class and its members cannot be used in applications that execute in the Windows Runtime.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Public Typedefs</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>CSid::CSidArray</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">`CSid`</ph> objects.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>CSid::CSid</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The constructor.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>CSid::~CSid</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The destructor.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>CSid::AccountName</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Returns the name of the account associated with the <ph id="ph1">`CSid`</ph> object.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>CSid::Domain</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Returns the name of the domain associated with the <ph id="ph1">`CSid`</ph> object.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>CSid::EqualPrefix</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Tests <ph id="ph1">`SID`</ph> (security identifier) prefixes for equality.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>CSid::GetLength</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Returns the length of the <ph id="ph1">`CSid`</ph> object.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>CSid::GetPSID</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Returns a pointer to a <ph id="ph1">`SID`</ph> structure.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>CSid::GetPSID_IDENTIFIER_AUTHORITY</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the <bpt id="p1">**</bpt>SID_IDENTIFIER_AUTHORITY<ept id="p1">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>CSid::GetSubAuthority</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Returns a specified subauthority in a <bpt id="p1">**</bpt>SID<ept id="p1">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>CSid::GetSubAuthorityCount</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Returns the subauthority count.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>CSid::IsValid</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Tests the <ph id="ph1">`CSid`</ph> object for validity.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>CSid::LoadAccount</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Updates the <ph id="ph1">`CSid`</ph> object given the account name and domain, or an existing <ph id="ph2">`SID`</ph> structure.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>CSid::Sid</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Returns the ID string.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>CSid::SidNameUse</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Returns a description of the state of the <ph id="ph1">`CSid`</ph> object.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Operators</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>operator =</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Assignment operator.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>operator const SID *</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Casts a <ph id="ph1">`CSid`</ph> object to a pointer to a <ph id="ph2">`SID`</ph> structure.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Global Operators</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>operator ==</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Tests two security descriptor objects for equality</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>operator !=</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Tests two security descriptor objects for inequality</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>operator</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Compares relative value of two security descriptor objects.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>operator &gt;</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Compares relative value of two security descriptor objects.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>operator</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Compares relative value of two security descriptor objects.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>operator &gt;=</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Compares relative value of two security descriptor objects.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`SID`</ph> structure is a variable-length structure used to uniquely identify users or groups.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Applications should not modify the <ph id="ph1">`SID`</ph> structure directly, but instead use the methods provided in this wrapper class.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>See also <bpt id="p1">[</bpt>AtlGetOwnerSid<ept id="p1">](http://msdn.microsoft.com/library/0e3a2606-74b8-4412-9803-bb437e22da85)</ept>, <bpt id="p2">[</bpt>AtlSetGroupSid<ept id="p2">](http://msdn.microsoft.com/library/83531d32-11ab-4a68-a3c6-1bfa54ab8dfa)</ept>, <bpt id="p3">[</bpt>AtlGetGroupSid<ept id="p3">](http://msdn.microsoft.com/library/8e7ec6b9-15c8-4a8a-977e-1e4c853d0be7)</ept>, and <bpt id="p4">[</bpt>AtlSetOwnerSid<ept id="p4">](http://msdn.microsoft.com/library/3a8abb76-1d2c-465d-a5e8-62a12a3c37f3)</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For an introduction to the access control model in Windows, see <bpt id="p1">[</bpt>Access Control<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa374860)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> atlsecurity.h</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>CSid::AccountName</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Returns the name of the account associated with the <ph id="ph1">`CSid`</ph> object.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Returns the <ph id="ph1">`LPCTSTR`</ph> pointing to the name of the account.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This method attempts to find a name for the specified <ph id="ph1">`SID`</ph> (security identifier).</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>For full details, see <bpt id="p1">[</bpt>LookupAccountSid<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa379166)</ept>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If no account name for the <ph id="ph1">`SID`</ph> can be found, <ph id="ph2">`AccountName`</ph> returns an empty string.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This can occur if a network timeout prevents this method from finding the name.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>It also occurs for security identifiers with no corresponding account name, such as a logon <ph id="ph1">`SID`</ph> that identifies a logon session.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>CSid::CSid</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The constructor.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>An existing <ph id="ph1">`CSid`</ph> object or <ph id="ph2">`SID`</ph> (security identifier) structure.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>IdentifierAuthority</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The authority.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>nSubAuthorityCount</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The subauthority count.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The account name.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The system name.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This string can be the name of a remote computer.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If this string is NULL, the local system is used instead.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>A pointer to a <ph id="ph1">`SID`</ph> structure.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The constructor initializes the <ph id="ph1">`CSid`</ph> object, setting an internal data member to <bpt id="p1">*</bpt>SidTypeInvalid<ept id="p1">*</ept>, or by copying the settings from an existing <ph id="ph2">`CSid`</ph>, <ph id="ph3">`SID`</ph>, or existing account.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>If initialization fails, the constructor will throw a <bpt id="p1">[</bpt>CAtlException Class<ept id="p1">](../../atl/reference/catlexception-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>CSid::~CSid</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The destructor.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The destructor frees any resources acquired by the object.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>CSid::CSidArray</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">[</bpt>CSid<ept id="p1">](../../atl/reference/csid-class.md)</ept> objects.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>This typedef specifies the array type that can be used to retrieve security identifiers from an ACL (access-control list).</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CAcl::GetAclEntries<ept id="p1">](../../atl/reference/cacl-class.md#cacl__getaclentries)</ept>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>CSid::Domain</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Returns the name of the domain associated with the <ph id="ph1">`CSid`</ph> object.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Returns the <ph id="ph1">`LPCTSTR`</ph> pointing to the domain.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>This method attempts to find a name for the specified <ph id="ph1">`SID`</ph> (security identifier).</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>For full details, see <bpt id="p1">[</bpt>LookupAccountSid<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa379166)</ept>.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If no account name for the <ph id="ph1">`SID`</ph> can be found, <bpt id="p1">**</bpt>Domain<ept id="p1">**</ept> returns the domain as an empty string.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>This can occur if a network timeout prevents this method from finding the name.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>It also occurs for security identifiers with no corresponding account name, such as a logon <ph id="ph1">`SID`</ph> that identifies a logon session.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>CSid::EqualPrefix</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Tests <ph id="ph1">`SID`</ph> (security identifier) prefixes for equality.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`SID`</ph> (security identifier) structure or <ph id="ph2">`CSid`</ph> object to compare.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">**</bpt>true<ept id="p1">**</ept> on success, <bpt id="p2">**</bpt>false<ept id="p2">**</ept> on failure.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>EqualPrefixSid<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa446621)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> for more details.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>CSid::GetLength</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Returns the length of the <ph id="ph1">`CSid`</ph> object.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Returns the length in bytes of the <ph id="ph1">`CSid`</ph> object.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`CSid`</ph> structure is not valid, the return value is undefined.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Before calling <ph id="ph1">`GetLength`</ph>, use the <bpt id="p1">[</bpt>CSid::IsValid<ept id="p1">](#csid__isvalid)</ept> member function to verify that <ph id="ph2">`CSid`</ph> is valid.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Under debug builds the function will cause an ASSERT if the <ph id="ph1">`CSid`</ph> object is not valid.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>CSid::GetPSID</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Returns a pointer to a <ph id="ph1">`SID`</ph> (security identifier) structure.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Returns the address of the <ph id="ph1">`CSid`</ph> object's underlying <ph id="ph2">`SID`</ph> structure.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>CSid::GetPSID_IDENTIFIER_AUTHORITY</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the <bpt id="p1">**</bpt>SID_IDENTIFIER_AUTHORITY<ept id="p1">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>If the method succeeds, it returns the address of the <bpt id="p1">**</bpt>SID_IDENTIFIER_AUTHORITY<ept id="p1">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>If it fails, the return value is undefined.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Failure may occur if the <ph id="ph1">`CSid`</ph> object is not valid, in which case the <bpt id="p1">[</bpt>CSid::IsValid<ept id="p1">](#csid__isvalid)</ept> method returns <bpt id="p2">**</bpt>false<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The function <ph id="ph1">`GetLastError`</ph> can be called for extended error information.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Under debug builds the function will cause an ASSERT if the <ph id="ph1">`CSid`</ph> object is not valid.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>CSid::GetSubAuthority</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Returns a specified subauthority in a <ph id="ph1">`SID`</ph> (security identifier) structure.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>nSubAuthority</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The subauthority.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Returns the subauthority referenced by <bpt id="p1">*</bpt>nSubAuthority.<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The subauthority value is a relative identifier (RID).</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>nSubAuthority<ept id="p1">*</ept> parameter specifies an index value identifying the subauthority array element the method will return.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The method performs no validation tests on this value.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>An application can call <bpt id="p1">[</bpt>CSid::GetSubAuthorityCount<ept id="p1">](#csid__getsubauthoritycount)</ept> to discover the range of acceptable values.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Under debug builds the function will cause an ASSERT if the <ph id="ph1">`CSid`</ph> object is not valid.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>CSid::GetSubAuthorityCount</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Returns the subauthority count.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>If the method succeeds, the return value is the subauthority count.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>If the method fails, the return value is undefined.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The method fails if the <ph id="ph1">`CSid`</ph> object is invalid.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>To get extended error information, call <ph id="ph1">`GetLastError`</ph>.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Under debug builds the function will cause an ASSERT if the <ph id="ph1">`CSid`</ph> object is not valid.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>CSid::IsValid</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Tests the <ph id="ph1">`CSid`</ph> object for validity.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">**</bpt>true<ept id="p1">**</ept> if the <ph id="ph1">`CSid`</ph> object is valid, <bpt id="p2">**</bpt>false<ept id="p2">**</ept> if not.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>There is no extended error information for this method; do not call <ph id="ph1">`GetLastError`</ph>.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`IsValid`</ph> method validates the <ph id="ph2">`CSid`</ph> object by verifying that the revision number is within a known range and that the number of subauthorities is less than the maximum.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>CSid::LoadAccount</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Updates the <ph id="ph1">`CSid`</ph> object given the account name and domain, or an existing SID (security identifier) structure.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The account name.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The system name.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>This string can be the name of a remote computer.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>If this string is NULL, the local system is used instead.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>SID<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa379594\(v=vs.85\).aspx)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">**</bpt>true<ept id="p1">**</ept> on success, <bpt id="p2">**</bpt>false<ept id="p2">**</ept> on failure.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>To get extended error information, call <ph id="ph1">`GetLastError`</ph>.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>attempts to find a security identifier for the specified name.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>LookupAccountSid<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa379166\(v=vs.85\).aspx)</ept> for more details.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>CSid::operator =</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Assignment operator.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`SID`</ph> (security identifier) or <ph id="ph2">`CSid`</ph> to assign to the <ph id="ph3">`CSid`</ph> object.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Returns a reference to the updated <ph id="ph1">`CSid`</ph> object.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>CSid::operator ==</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Tests two security descriptor objects for equality.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`SID`</ph> (security identifier) or <ph id="ph2">`CSid`</ph> that appears on the left side of the == operator.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`SID`</ph> (security identifier) or <ph id="ph2">`CSid`</ph> that appears on the right side of the == operator.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>true<ept id="p1">**</ept> if the security descriptors are equal, otherwise <bpt id="p2">**</bpt>false<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>CSid::operator !=</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Tests two security descriptor objects for inequality.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`SID`</ph> (security identifier) or <ph id="ph2">`CSid`</ph> that appears on the left side of the != operator.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`SID`</ph> (security identifier) or <ph id="ph2">`CSid`</ph> that appears on the right side of the != operator.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>true<ept id="p1">**</ept> if the security descriptors are not equal, otherwise <bpt id="p2">**</bpt>false<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>CSid::operator</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Compares relative value of two security descriptor objects.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`SID`</ph> (security identifier) or <ph id="ph2">`CSid`</ph> that appears on the left side of the != operator.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`SID`</ph> (security identifier) or <ph id="ph2">`CSid`</ph> that appears on the right side of the != operator.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>true<ept id="p1">**</ept> if <ph id="ph1">`lhs`</ph> is less than <ph id="ph2">`rhs`</ph>, otherwise <bpt id="p2">**</bpt>false<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>CSid::operator</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Compares relative value of two security descriptor objects.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`SID`</ph> (security identifier) or <ph id="ph2">`CSid`</ph> that appears on the left side of the != operator.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`SID`</ph> (security identifier) or <ph id="ph2">`CSid`</ph> that appears on the right side of the != operator.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>true<ept id="p1">**</ept> if <ph id="ph1">`lhs`</ph> is less than or equal to <ph id="ph2">`rhs`</ph>, otherwise <bpt id="p2">**</bpt>false<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>CSid::operator</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Compares relative value of two security descriptor objects.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`SID`</ph> (security identifier) or <ph id="ph2">`CSid`</ph> that appears on the left side of the != operator.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`SID`</ph> (security identifier) or <ph id="ph2">`CSid`</ph> that appears on the right side of the != operator.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>true<ept id="p1">**</ept> if <ph id="ph1">`lhs`</ph> is greater than <ph id="ph2">`rhs`</ph>, otherwise <bpt id="p2">**</bpt>false<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>CSid::operator</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Compares relative value of two security descriptor objects.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`SID`</ph> (security identifier) or <ph id="ph2">`CSid`</ph> that appears on the left side of the != operator.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`SID`</ph> (security identifier) or <ph id="ph2">`CSid`</ph> that appears on the right side of the != operator.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>true<ept id="p1">**</ept> if <ph id="ph1">`lhs`</ph> is greater than or equal to <ph id="ph2">`rhs`</ph>, otherwise <bpt id="p2">**</bpt>false<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>CSid::operator const SID *</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Casts a <ph id="ph1">`CSid`</ph> object to a pointer to a <ph id="ph2">`SID`</ph> (security identifier) structure.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>```operator const SID *() const throw(...);</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>LPCTSTR Sid() const throw(...);</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>SID_NAME_USE SidNameUse() const throw();</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>