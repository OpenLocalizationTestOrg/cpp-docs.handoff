<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8a58639cc0a599f65f2ac8c0073b136a4e969484</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard-library\time-put-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5d6c7c9fd6d8e14f14f0ff90a858ceedad379158</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">71bc76802bb46ba49cc9c4c8255da5e975b1f6f4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>time_put Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>time_put Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The template class describes an object that can serve as a locale facet to control conversions of time values to sequences of type <ph id="ph1">`CharType`</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The type used within a program to encode characters.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The type of iterator into which the time put functions write their output.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>As with any locale facet, the static object ID has an initial stored value of zero.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The first attempt to access its stored value stores a unique positive value in <bpt id="p1">**</bpt>id.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Constructors</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>time_put</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The constructor for objects of type <ph id="ph1">`time_put`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Typedefs</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>char_type</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A type that is used to describe a character used by a locale.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>iter_type</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A type that describes an output iterator.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Member Functions</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>do_put</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A virtual function that outputs time and date information as a sequence of <ph id="ph1">`CharType`</ph>s.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>put</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Outputs time and date information as a sequence of <ph id="ph1">`CharType`</ph>s.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> <ph id="ph1">\&lt;</ph>locale&gt;</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Namespace:<ept id="p1">**</ept> std</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>time_put::char_type</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A type that is used to describe a character used by a locale.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The type is a synonym for the template parameter <bpt id="p1">**</bpt>CharType<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>time_put::do_put</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A virtual function that outputs time and date information as a sequence of <bpt id="p1">**</bpt>CharType<ept id="p1">**</ept>s.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An output iterator where the sequence of characters representing time and date are to be inserted.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Unused.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The time and date information being output.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The format of the output.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>strftime, wcsftime, _strftime_l, _wcsftime_l<ept id="p1">](../c-runtime-library/reference/strftime-wcsftime-strftime-l-wcsftime-l.md)</ept> for valid values.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A modifier for the format.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>strftime, wcsftime, _strftime_l, _wcsftime_l<ept id="p1">](../c-runtime-library/reference/strftime-wcsftime-strftime-l-wcsftime-l.md)</ept> for valid values.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>An iterator to the first position after the last element inserted.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The virtual protected member function generates sequential elements beginning at <ph id="ph1">` next`</ph> from time values stored in the object <ph id="ph2">\*</ph> <ph id="ph3">`_Pt`</ph>, of type <bpt id="p1">**</bpt>tm<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The function returns an iterator designating the next place to insert an element beyond the generated output.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The output is generated by the same rules used by <ph id="ph1">`strftime`</ph>, with a last argument of <ph id="ph2">`_Pt`</ph>, for generating a series of <ph id="ph3">`char`</ph> elements into an array.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Each such <ph id="ph1">`char`</ph> element is assumed to map to an equivalent element of type <bpt id="p1">**</bpt>CharType<ept id="p1">**</ept> by a simple, one-to-one mapping.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`_Mod`</ph> equals zero, the effective format is "%F", where F is replaced by <ph id="ph2">`_Fmt`</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Otherwise, the effective format is "%MF", where M is replaced by <ph id="ph1">`_Mod`</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>put<ept id="p1">](#time_put__put)</ept>, which calls <ph id="ph1">`do_put`</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>time_put::iter_type</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A type that describes an output iterator.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The type is a synonym for the template parameter <bpt id="p1">**</bpt>OutputIterator<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>time_put::put</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Outputs time and date information as a sequence of <bpt id="p1">**</bpt>CharType<ept id="p1">**</ept>s.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>An output iterator where the sequence of characters representing time and date are to be inserted.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Unused.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The character of type <bpt id="p1">**</bpt>CharType<ept id="p1">**</ept> used for spacing.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The time and date information being output.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The format of the output.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>strftime, wcsftime, _strftime_l, _wcsftime_l<ept id="p1">](../c-runtime-library/reference/strftime-wcsftime-strftime-l-wcsftime-l.md)</ept> for valid values.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A modifier for the format.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>strftime, wcsftime, _strftime_l, _wcsftime_l<ept id="p1">](../c-runtime-library/reference/strftime-wcsftime-strftime-l-wcsftime-l.md)</ept> for valid values.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The beginning of the formatting string for the output.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>strftime, wcsftime, _strftime_l, _wcsftime_l<ept id="p1">](../c-runtime-library/reference/strftime-wcsftime-strftime-l-wcsftime-l.md)</ept> for valid values.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The end of the formatting string for the output.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>strftime, wcsftime, _strftime_l, _wcsftime_l<ept id="p1">](../c-runtime-library/reference/strftime-wcsftime-strftime-l-wcsftime-l.md)</ept> for valid values.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>An iterator to the first position after the last element inserted.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The first member function returns <bpt id="p1">[</bpt>do_put<ept id="p1">](#time_put__do_put)</ept>( <ph id="ph1">` next`</ph>, <ph id="ph2">`_Iosbase`</ph>, <ph id="ph3">`_Fill`</ph>, <ph id="ph4">`_Pt`</ph>, <ph id="ph5">`_Fmt`</ph>, <ph id="ph6">`_Mod`</ph>).</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The second member function copies to <ph id="ph1">\*</ph> <ph id="ph2">` next`</ph> ++ any element in the interval [ <ph id="ph3">` first`</ph>, <ph id="ph4">` last`</ph>) other than a percent (%).</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For a percent followed by a character <bpt id="p1">*</bpt>C<ept id="p1">*</ept> in the interval [ <ph id="ph1">` first`</ph>, <ph id="ph2">` last`</ph>), the function instead evaluates <ph id="ph3">` next` = `do_put`</ph>( <ph id="ph4">` next`</ph>, <ph id="ph5">`_Iosbase`</ph>, <ph id="ph6">`_Fill`</ph>, <ph id="ph7">`_Pt`</ph>, <bpt id="p2">*</bpt>C<ept id="p2">*</ept>, 0) and skips past <bpt id="p3">*</bpt>C<ept id="p3">*</ept>. If, however, <bpt id="p4">*</bpt>C<ept id="p4">*</ept> is a qualifier character from the set EOQ#, followed by a character <ph id="ph8">`C2`</ph> in the interval [ <ph id="ph9">` first`</ph>, <ph id="ph10">` last`</ph>), the function instead evaluates <ph id="ph11">` next` = `do_put`</ph>( <ph id="ph12">` next`</ph>, <ph id="ph13">`_Iosbase`</ph>, <ph id="ph14">`_Fill`</ph>, <ph id="ph15">`_Pt`</ph>, <ph id="ph16">`C2`</ph>, <bpt id="p5">*</bpt>C<ept id="p5">*</ept>) and skips past <ph id="ph17">`C2`</ph>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>time_put::time_put</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Constructor for objects of type <ph id="ph1">`time_put`</ph>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Integer value used to specify the type of memory management for the object.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The possible values for the <ph id="ph1">`_Refs`</ph> parameter and their significance are:</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>0: The lifetime of the object is managed by the locales that contain it.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>1: The lifetime of the object must be manually managed.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>0: These values are not defined.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The constructor initializes its base object with <bpt id="p1">[</bpt>locale::facet<ept id="p1">](../standard-library/locale-class.md#facet_class)</ept>( <bpt id="p2">**</bpt>_<ept id="p2">**</ept><bpt id="p3">*</bpt>Refs<ept id="p3">*</ept>).</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>locale&gt;</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>time_base Class</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Thread Safety in the C++ Standard Library</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>