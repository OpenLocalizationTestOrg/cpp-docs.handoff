<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ea647f94e4e9829b5d88a5f243f4999d63d555a1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\cpp\do-while-statement-cpp.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">66d94ac478601ea1f22b698fdcca09d59f6d003e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e219ba9febc4bf12115c671cd7867f1f419835b5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>do-while Statement (C++) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>do-while Statement (C++)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Executes a <bpt id="p1">*</bpt>statement<ept id="p1">*</ept> repeatedly until the specified termination condition (the <bpt id="p2">*</bpt>expression<ept id="p2">*</ept>) evaluates to zero.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The test of the termination condition is made after each execution of the loop; therefore, a <ph id="ph1">`do-while`</ph> loop executes one or more times, depending on the value of the termination expression.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`do-while`</ph> statement can also terminate when a <bpt id="p1">[</bpt>break<ept id="p1">](../cpp/break-statement-cpp.md)</ept>, <bpt id="p2">[</bpt>goto<ept id="p2">](../cpp/goto-statement-cpp.md)</ept>, or <bpt id="p3">[</bpt>return<ept id="p3">](../cpp/return-statement-cpp.md)</ept> statement is executed within the statement body.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>expression<ept id="p1">*</ept> must have arithmetic or pointer type.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Execution proceeds as follows:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The statement body is executed.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Next, <bpt id="p1">*</bpt>expression<ept id="p1">*</ept> is evaluated.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">*</bpt>expression<ept id="p1">*</ept> is false, the <ph id="ph1">`do-while`</ph> statement terminates and control passes to the next statement in the program.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">*</bpt>expression<ept id="p1">*</ept> is true (nonzero), the process is repeated, beginning with step 1.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The following sample demonstrates the <ph id="ph1">`do-while`</ph> statement:</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Iteration Statements</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Keywords</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>while Statement (C++)</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>for Statement (C++)</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Range-based for Statement (C++)</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>