<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">988225a915fad520fe4922f4a73c6ea16cb66564</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\ccompolyobject-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ec0b8cb399dff7bc22296c453eca74499b74c3b7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e78625afd507c9b56f0b07dbe4118afcd0f33dd7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CComPolyObject Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CComPolyObject Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class implements <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> for an aggregated or nonaggregated object.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Your class, derived from <bpt id="p1">[</bpt>CComObjectRoot<ept id="p1">](../../atl/reference/ccomobjectroot-class.md)</ept> or <bpt id="p2">[</bpt>CComObjectRootEx<ept id="p2">](../../atl/reference/ccomobjectrootex-class.md)</ept>, as well as from any other interfaces you want to support on the object.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>CComPolyObject::CComPolyObject</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The constructor.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>CComPolyObject::~CComPolyObject</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The destructor.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>CComPolyObject::AddRef</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Increments the object's reference count.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>CComPolyObject::CreateInstance</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>(Static) Allows you to create a new <bpt id="p1">**</bpt>CComPolyObject&lt;<ept id="p1">**</ept> <ph id="ph1">`contained`</ph> <bpt id="p2">**</bpt><ph id="ph2">&gt;</ph><ept id="p2">**</ept> object without the overhead of <bpt id="p3">[</bpt>CoCreateInstance<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms686615)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>CComPolyObject::FinalConstruct</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Performs final initialization of <ph id="ph1">`m_contained`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>CComPolyObject::FinalRelease</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Performs final destruction of <ph id="ph1">`m_contained`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>CComPolyObject::QueryInterface</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the requested interface.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>CComPolyObject::Release</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Decrements the object's reference count.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Public Data Members</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>CComPolyObject::m_contained</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Delegates <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> calls to the outer unknown if the object is aggregated or to the <bpt id="p2">**</bpt>IUnknown<ept id="p2">**</ept> of the object if the object is not aggregated.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>implements <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms680509)</ept> for an aggregated or nonaggregated object.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When an instance of <ph id="ph1">`CComPolyObject`</ph> is created, the value of the outer unknown is checked.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If it is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, <bpt id="p2">**</bpt>IUnknown<ept id="p2">**</ept> is implemented for a nonaggregated object.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If the outer unknown is not <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, <bpt id="p2">**</bpt>IUnknown<ept id="p2">**</ept> is implemented for an aggregated object.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The advantage of using <ph id="ph1">`CComPolyObject`</ph> is that you avoid having both <bpt id="p1">[</bpt>CComAggObject<ept id="p1">](../../atl/reference/ccomaggobject-class.md)</ept> and <bpt id="p2">[</bpt>CComObject<ept id="p2">](../../atl/reference/ccomobject-class.md)</ept> in your module to handle the aggregated and nonaggregated cases.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A single <ph id="ph1">`CComPolyObject`</ph> object handles both cases.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This means only one copy of the vtable and one copy of the functions exist in your module.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If your vtable is large, this can substantially decrease your module size.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>However, if your vtable is small, using <ph id="ph1">`CComPolyObject`</ph> can result in a slightly larger module size because it is not optimized for an aggregated or nonaggregated object, as are <ph id="ph2">`CComAggObject`</ph> and <ph id="ph3">`CComObject`</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`DECLARE_POLY_AGGREGATABLE`</ph> macro is specified in your object's class definition, <ph id="ph2">`CComPolyObject`</ph> will be used to create your object.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>will automatically be declared if you use the ATL Project Wizard to create a full control or Internet Explorer control.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If aggregated, the <ph id="ph1">`CComPolyObject`</ph> object has its own <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept>, separate from the outer object's <bpt id="p2">**</bpt>IUnknown<ept id="p2">**</ept>, and maintains its own reference count.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>uses <bpt id="p1">[</bpt>CComContainedObject<ept id="p1">](../../atl/reference/ccomcontainedobject-class.md)</ept> to delegate to the outer unknown.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For more information about aggregation, see the article <bpt id="p1">[</bpt>Fundamentals of ATL COM Objects<ept id="p1">](../../atl/fundamentals-of-atl-com-objects.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>CComObjectRootEx</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> atlcom.h</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>CComPolyObject::AddRef</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Increments the reference count on the object.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A value that may be useful for diagnostics or testing.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>CComPolyObject::CComPolyObject</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The constructor.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>[in] A pointer to the outer unknown if the object is to be aggregated, or <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> if the object if the object is not aggregated.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Initializes the <ph id="ph1">`CComContainedObject`</ph> data member, <bpt id="p1">[</bpt>m_contained<ept id="p1">](#ccompolyobject__m_contained)</ept>, and increments the module lock count.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The destructor decrements the module lock count.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>CComPolyObject::~CComPolyObject</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The destructor.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Frees all allocated resources, calls <bpt id="p1">[</bpt>FinalRelease<ept id="p1">](#ccompolyobject__finalrelease)</ept>, and decrements the module lock count.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>CComPolyObject::CreateInstance</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Allows you to create a new <bpt id="p1">**</bpt>CComPolyObject&lt;<ept id="p1">**</ept><ph id="ph1">`contained`</ph> <bpt id="p2">**</bpt><ph id="ph2">&gt;</ph><ept id="p2">**</ept> object without the overhead of <bpt id="p3">[</bpt>CoCreateInstance<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms686615)</ept>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>[out] A pointer to a <bpt id="p1">**</bpt>CComPolyObject&lt;<ept id="p1">**</ept> <ph id="ph1">`contained`</ph><bpt id="p2">**</bpt><ph id="ph2">&gt;</ph><ept id="p2">**</ept> pointer.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`CreateInstance`</ph> is unsuccessful, <ph id="ph2">`pp`</ph> is set to <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The object returned has a reference count of zero, so call <ph id="ph1">`AddRef`</ph> immediately, then use <bpt id="p1">**</bpt>Release<ept id="p1">**</ept> to free the reference on the object pointer when you're done.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If you don't need direct access to the object, but still want to create a new object without the overhead of <ph id="ph1">`CoCreateInstance`</ph>, use <bpt id="p1">[</bpt>CComCoClass::CreateInstance<ept id="p1">](../../atl/reference/ccomcoclass-class.md#ccomcoclass__createinstance)</ept> instead.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>CComPolyObject::FinalConstruct</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Called during the final stages of object construction, this method performs any final initialization on the <bpt id="p1">[</bpt>m_contained<ept id="p1">](#ccompolyobject__m_contained)</ept> data member.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>CComPolyObject::FinalRelease</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Called during object destruction, this method frees the <bpt id="p1">[</bpt>m_contained<ept id="p1">](#ccompolyobject__m_contained)</ept> data member.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>CComPolyObject::m_contained</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>CComContainedObject<ept id="p1">](../../atl/reference/ccomcontainedobject-class.md)</ept> object derived from your class.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>[in] Your class, derived from <bpt id="p1">[</bpt>CComObjectRoot<ept id="p1">](../../atl/reference/ccomobjectroot-class.md)</ept> or <bpt id="p2">[</bpt>CComObjectRootEx<ept id="p2">](../../atl/reference/ccomobjectrootex-class.md)</ept>, as well as from any other interfaces you want to support on the object.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> calls through <ph id="ph1">`m_contained`</ph> are delegated to the outer unknown if the object is aggregated, or to the <bpt id="p2">**</bpt>IUnknown<ept id="p2">**</ept> of this object if the object is not aggregated.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>CComPolyObject::QueryInterface</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the requested interface.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The COM interface.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>[in] The identifier of the interface being requested.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>[out] A pointer to the interface pointer identified by <ph id="ph1">`iid`</ph>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>If the object does not support this interface, <ph id="ph1">`ppvObject`</ph> is set to <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>[out] A pointer to the interface identified by <bpt id="p1">**</bpt>__uuidof(Q)<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For an aggregated object, if the requested interface is <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept>, <ph id="ph1">`QueryInterface`</ph> returns a pointer to the aggregated object's own <bpt id="p2">**</bpt>IUnknown<ept id="p2">**</ept> and increments the reference count.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Otherwise, this method queries for the interface through the <ph id="ph1">`CComContainedObject`</ph> data member, <bpt id="p1">[</bpt>m_contained<ept id="p1">](#ccompolyobject__m_contained)</ept>.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>CComPolyObject::Release</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Decrements the reference count on the object.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>In debug builds, <bpt id="p1">**</bpt>Release<ept id="p1">**</ept> returns a value that may be useful for diagnostics or testing.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>In nondebug builds, <bpt id="p1">**</bpt>Release<ept id="p1">**</ept> always returns 0.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>CComObjectRootEx Class</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>DECLARE_POLY_AGGREGATABLE</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Class Overview</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>