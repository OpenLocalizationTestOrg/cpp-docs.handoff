<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f2182ef18e10da95908ce950e713f573726e61c0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\cpp\break-statement-cpp.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6a426cdb013f7a1667f4eb727735a9b388c8b9dc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4216f741f26c11b30204b3f3d4ca3f1c11877531</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>break Statement (C++) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>break Statement (C++)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`break`</ph> statement ends execution of the nearest enclosing loop or conditional statement in which it appears.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Control passes to the statement that follows the end of the statement, if any.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`break`</ph> statement is used with the conditional <bpt id="p1">[</bpt>switch<ept id="p1">](../cpp/switch-statement-cpp.md)</ept> statement and with the <bpt id="p2">[</bpt>do<ept id="p2">](../cpp/do-while-statement-cpp.md)</ept>, <bpt id="p3">[</bpt>for<ept id="p3">](../cpp/for-statement-cpp.md)</ept>, and <bpt id="p4">[</bpt>while<ept id="p4">](../cpp/while-statement-cpp.md)</ept> loop statements.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In a <ph id="ph1">`switch`</ph> statement, the <ph id="ph2">`break`</ph> statement causes the program to execute the next statement outside the <ph id="ph3">`switch`</ph> statement.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Without a <ph id="ph1">`break`</ph> statement, every statement from the matched <ph id="ph2">`case`</ph> label to the end of the <ph id="ph3">`switch`</ph> statement, including the <ph id="ph4">`default`</ph> clause, is executed.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In loops, the <ph id="ph1">`break`</ph> statement ends execution of the nearest enclosing <ph id="ph2">`do`</ph>, <ph id="ph3">`for`</ph>, or <ph id="ph4">`while`</ph> statement.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Control passes to the statement that follows the ended statement, if any.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Within nested statements, the <ph id="ph1">`break`</ph> statement ends only the <ph id="ph2">`do`</ph>, <ph id="ph3">`for`</ph>, <ph id="ph4">`switch`</ph>, or <ph id="ph5">`while`</ph> statement that immediately encloses it.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can use a <ph id="ph1">`return`</ph> or <ph id="ph2">`goto`</ph> statement to transfer control from more deeply nested structures.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The following code shows how to use the <ph id="ph1">`break`</ph> statement in a <ph id="ph2">`for`</ph> loop.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following code shows how to use <ph id="ph1">`break`</ph> in a <ph id="ph2">`while`</ph> loop and a <ph id="ph3">`do`</ph> loop.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following code shows how to use <ph id="ph1">`break`</ph> in a switch statement.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You must use <ph id="ph1">`break`</ph> in every case if you want to handle each case separately; if you do not use <ph id="ph2">`break`</ph>, the code execution falls through to the next case.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Jump Statements</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Keywords</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>continue Statement</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>