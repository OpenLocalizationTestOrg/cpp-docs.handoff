<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d0055820abbdf9834186782a2840b8b92734bb70</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\cpp\continue-statement-cpp.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b4d6ffa5c527a1145cfdc7ee7f83718ff2c79b30</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d58a7329f14fc6fd65297de81d8fb893401ab8e9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>continue Statement (C++) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>continue Statement (C++)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Forces transfer of control to the controlling expression of the smallest enclosing <bpt id="p1">[</bpt>do<ept id="p1">](../cpp/do-while-statement-cpp.md)</ept>, <bpt id="p2">[</bpt>for<ept id="p2">](../cpp/for-statement-cpp.md)</ept>, or <bpt id="p3">[</bpt>while<ept id="p3">](../cpp/while-statement-cpp.md)</ept> loop.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Any remaining statements in the current iteration are not executed.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The next iteration of the loop is determined as follows:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In a <ph id="ph1">`do`</ph> or <ph id="ph2">`while`</ph> loop, the next iteration starts by reevaluating the controlling expression of the <ph id="ph3">`do`</ph> or <ph id="ph4">`while`</ph> statement.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In a <ph id="ph1">`for`</ph> loop (using the syntax <ph id="ph2">`for`</ph>(<ph id="ph3">`init-expr`</ph>; <ph id="ph4">`cond-expr`</ph>; <ph id="ph5">`loop-expr`</ph>)), the <ph id="ph6">`loop-expr`</ph> clause is executed.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Then the <ph id="ph1">`cond-expr`</ph> clause is reevaluated and, depending on the result, the loop either ends or another iteration occurs.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following example shows how the <ph id="ph1">`continue`</ph> statement can be used to bypass sections of code and begin the next iteration of a loop.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Jump Statements</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Keywords</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>