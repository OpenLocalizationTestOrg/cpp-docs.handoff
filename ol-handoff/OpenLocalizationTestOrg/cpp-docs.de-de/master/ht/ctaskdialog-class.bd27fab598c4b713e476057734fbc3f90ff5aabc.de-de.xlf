<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8b4b3a3cbcef08fe59d1d738d1edcd658286408a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\ctaskdialog-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">de25c2d705e0420ed7f9f3b8f70faa1bcc820a99</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b7bcbb5a76a049d3cd43a7a0f55c5f399931423a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CTaskDialog Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CTaskDialog Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A pop-up dialog box that functions like a message box but can display additional information to the user.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CTaskDialog`</ph> also includes functionality for gathering information from the user.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Constructors</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>CTaskDialog::CTaskDialog</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CTaskDialog`</ph> object.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Methods</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>CTaskDialog::AddCommandControl</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Adds a command button control to the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>CTaskDialog::AddRadioButton</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Adds a radio button to the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>CTaskDialog::ClickCommandControl</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Clicks a command button control or common button programmatically.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>CTaskDialog::ClickRadioButton</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Clicks a radio button programmatically.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>CTaskDialog::DoModal</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Displays the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>CTaskDialog::GetCommonButtonCount</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Retrieves the number of common buttons available.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>CTaskDialog::GetCommonButtonFlag</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Converts a standard Windows button to the common button type associated with the <ph id="ph1">`CTaskDialog`</ph> class.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>CTaskDialog::GetCommonButtonId</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Converts one of the common button types associated with the <ph id="ph1">`CTaskDialog`</ph> class to a standard Windows button.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>CTaskDialog::GetOptions</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Returns the option flags for this <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>CTaskDialog::GetSelectedCommandControlID</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Returns the selected command button control.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>CTaskDialog::GetSelectedRadioButtonID</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Returns the selected radio button.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>CTaskDialog::GetVerificationCheckboxState</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Retrieves the state of the verification check box.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>CTaskDialog::IsCommandControlEnabled</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Determines whether a command button control or common button is enabled.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>CTaskDialog::IsRadioButtonEnabled</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Determines whether a radio button is enabled.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>CTaskDialog::IsSupported</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Determines whether the computer that is running the application supports the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>CTaskDialog::LoadCommandControls</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Adds command button controls by using data from the string table.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>CTaskDialog::LoadRadioButtons</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Adds radio buttons by using data from the string table.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>CTaskDialog::NavigateTo</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Transfers the focus to another <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>CTaskDialog::OnCommandControlClick</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The framework calls this method when the user clicks a command button control.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>CTaskDialog::OnCreate</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The framework calls this method after it creates the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>CTaskDialog::OnDestroy</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The framework calls this method immediately before it destroys the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>CTaskDialog::OnExpandButtonClick</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The framework calls this method when the user clicks on the expansion button.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>CTaskDialog::OnHelp</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The framework calls this method when the user requests help.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>CTaskDialog::OnHyperlinkClick</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The framework calls this method when the user clicks on a hyperlink.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>CTaskDialog::OnInit</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The framework calls this method when the <ph id="ph1">`CTaskDialog`</ph> is initialized.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>CTaskDialog::OnNavigatePage</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The framework calls this method when the user moves the focus with regard to controls on the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>CTaskDialog::OnRadioButtonClick</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The framework calls this method when the user selects a radio button control.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>CTaskDialog::OnTimer</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The framework calls this method when the timer expires.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>CTaskDialog::OnVerificationCheckboxClick</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The framework calls this method when the user clicks the verification check box.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>CTaskDialog::RemoveAllCommandControls</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Removes all the command controls from the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>CTaskDialog::RemoveAllRadioButtons</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Removes all the radio buttons from the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetCommandControlOptions</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Updates a command button control on the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetCommonButtonOptions</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Updates a subset of common buttons to be enabled and require UAC elevation.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetCommonButtons</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Adds common buttons to the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetContent</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Updates the content of the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetDefaultCommandControl</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Specifies the default command button control.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetDefaultRadioButton</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Specifies the default radio button.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetDialogWidth</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Adjusts the width of the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetExpansionArea</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Updates the expansion area of the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetFooterIcon</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Updates the footer icon for the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetFooterText</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Updates the text on the footer of the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetMainIcon</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Updates the main icon of the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetMainInstruction</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Updates the main instruction of the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetOptions</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Configures the options for the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetProgressBarMarquee</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Configures a marquee bar for the <ph id="ph1">`CTaskDialog`</ph> and adds it to the dialog box.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetProgressBarPosition</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Adjusts the position of the progress bar.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetProgressBarRange</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Adjusts the range of the progress bar.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetProgressBarState</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Sets the state of the progress bar and displays it on the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetRadioButtonOptions</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Enables or disables a radio button.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetVerificationCheckbox</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Sets the checked state of the verification check box.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetVerificationCheckboxText</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Sets the text on the right side of the verification check box.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetWindowTitle</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Sets the title of the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>CTaskDialog::ShowDialog</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Creates and displays a <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>CTaskDialog::TaskDialogCallback</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The framework calls this in response to various Windows messages.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Data Members</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The array of command button controls for the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The array of radio button controls for the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>indicates the verification check box is checked; <ph id="ph1">`FALSE`</ph> indicates it is not.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The icon in the footer of the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>A handle to the window for the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The main icon of the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>A mask that indicates which of the common buttons are disabled.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>A mask that indicates which of the common buttons require UAC elevation.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The ID of the selected command button control.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>A mask that indicates which common buttons are displayed on the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The ID of the command button control that is selected when the <ph id="ph1">`CTaskDialog`</ph> is displayed.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The ID of the radio button control that is selected when the <ph id="ph1">`CTaskDialog`</ph> is displayed.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>A mask that indicates the options for the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The current position for the progress bar.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>This value must be between <ph id="ph1">`m_nProgressRangeMin`</ph> and <ph id="ph2">`m_nProgressRangeMax`</ph>.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The maximum value for the progress bar.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The minimum value for the progress bar.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The state of the progress bar.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>CTaskDialog::SetProgressBarState<ept id="p1">](#ctaskdialog__setprogressbarstate)</ept>.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The ID of the selected radio button control.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The width of the <ph id="ph1">`CTaskDialog`</ph> in pixels.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The string the <ph id="ph1">`CTaskDialog`</ph> displays to the right of the expansion box when the expanded information is hidden.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The content string of the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The string the <ph id="ph1">`CTaskDialog`</ph> displays to the right of the expansion box when the expanded information is displayed.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The footer of the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The expanded information for the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The main instruction of the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The title of the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The string that the <ph id="ph1">`CTaskDialog`</ph> displays to the right of the verification check box.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CTaskDialog`</ph> class replaces the standard Windows message box and has additional functionality such as new controls to gather information from the user.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>This class is in the MFC library in <ph id="ph1">[!INCLUDE[vs_dev10_long](../../build/includes/vs_dev10_long_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CTaskDialog`</ph> is available starting with <ph id="ph2">[!INCLUDE[wiprlhext](../../c-runtime-library/reference/includes/wiprlhext_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Earlier versions of Windows cannot display the <ph id="ph1">`CTaskDialog`</ph> object.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`CTaskDialog::IsSupported`</ph> to determine at runtime whether the current user can display the task dialog box.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The standard Windows message box is still supported in <ph id="ph1">[!INCLUDE[vs_dev10_long](../../build/includes/vs_dev10_long_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CTaskDialog`</ph> is available only when you build your application by using the Unicode library.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CTaskDialog`</ph> has two different constructors.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>One constructor enables you to specify two command buttons and a maximum of six regular button controls.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>You can add more command buttons after you create the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The second constructor does not support any command buttons, but you can add an unlimited number of regular button controls.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>For more information about the constructors, see <bpt id="p1">[</bpt>CTaskDialog::CTaskDialog<ept id="p1">](#ctaskdialog__ctaskdialog)</ept>.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The following image shows a sample <ph id="ph1">`CTaskDialog`</ph> to illustrate the location of some of the controls.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Example of CTaskDialog</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>CTaskDialog Sample</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Minimum required operating system:</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxtaskdialog.h</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>CTaskDialog::AddCommandControl</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Adds a new command button control to the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The command control identification number.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The string that the <ph id="ph1">`CTaskDialog`</ph> displays to the user.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Use this string to explain the purpose of the command.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>A Boolean parameter that indicates if the new button is enabled or disabled.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>A Boolean parameter that indicates whether a command requires elevation.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>CTaskDialog Class<ept id="p1">](../../mfc/reference/ctaskdialog-class.md)</ept> can display an unlimited number of command button controls.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>However, if a <ph id="ph1">`CTaskDialog`</ph> displays any command button controls, it can display a maximum of six buttons.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>If a <ph id="ph1">`CTaskDialog`</ph> has no command button controls, it can display an unlimited number of buttons.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>When the user selects a command button control, the <ph id="ph1">`CTaskDialog`</ph> closes.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>If your application displays the dialog box by using <bpt id="p1">[</bpt>CTaskDialog::DoModal<ept id="p1">](#ctaskdialog__domodal)</ept>, <ph id="ph1">`DoModal`</ph> returns the <ph id="ph2">`nCommandControlID`</ph> of the selected command button control.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#2</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>CTaskDialog::AddRadioButton</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Adds a radio button to the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The identification number of the radio button.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The string that the <ph id="ph1">`CTaskDialog`</ph> displays next to the radio button.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>A Boolean parameter that indicates whether the radio button is enabled.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The radio buttons for the <bpt id="p1">[</bpt>CTaskDialog Class<ept id="p1">](../../mfc/reference/ctaskdialog-class.md)</ept> enable you to gather information from the user.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Use the function <bpt id="p1">[</bpt>CTaskDialog::GetSelectedRadioButtonID<ept id="p1">](#ctaskdialog__getselectedradiobuttonid)</ept> to determine which radio button is selected.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CTaskDialog`</ph> does not require that the <ph id="ph2">`nRadioButtonID`</ph> parameters are unique for each radio button.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>However, you may experience unexpected behavior if you do not use a distinct identifier for each radio button.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#3</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>CTaskDialog::ClickCommandControl</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Clicks a command button control or common button programmatically.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The command ID of the control to click.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>This method generates the windows message <ph id="ph1">`TDM_CLICK_BUTTON`</ph>.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>CTaskDialog::ClickRadioButton</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Clicks a radio button programmatically.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The ID of the radio button to click.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>This method generates the windows message <ph id="ph1">`TDM_CLICK_RADIO_BUTTON`</ph>.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>CTaskDialog::CTaskDialog</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Creates an instance of the <bpt id="p1">[</bpt>CTaskDialog Class<ept id="p1">](../../mfc/reference/ctaskdialog-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The string to use for the content of the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The main instruction of the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The title of the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>A mask of the common buttons to add to the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The set of options to use for the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The string to use as the footer.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The string ID of the first command.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The string ID of the last command.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>There are two ways that you can add a <ph id="ph1">`CTaskDialog`</ph> to your application.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>The first way is to use one of the constructors to create a <ph id="ph1">`CTaskDialog`</ph> and display it using <bpt id="p1">[</bpt>CTaskDialog::DoModal<ept id="p1">](#ctaskdialog__domodal)</ept>.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The second way is to use the static function <bpt id="p1">[</bpt>CTaskDialog::ShowDialog<ept id="p1">](#ctaskdialog__showdialog)</ept>, which enables you to display a <ph id="ph1">`CTaskDialog`</ph> without explicitly creating a <ph id="ph2">`CTaskDialog`</ph> object.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The second constructor creates command button controls by using data from the resource file of your application.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The string table in the resource file has several strings with associated string IDs.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>This method adds a command button control for each valid entry in the string table between <ph id="ph1">`nIDCommandControlsFirst`</ph> and <ph id="ph2">`nCommandControlsLast`</ph>, inclusive.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>For these command button controls, the string in the string table is the control's caption and the string ID is the control's ID.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CTaskDialog::SetOptions<ept id="p1">](#ctaskdialog__setoptions)</ept> for a list of valid options.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#7</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>CTaskDialog::DoModal</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Shows the <ph id="ph1">`CTaskDialog`</ph> and makes it modal.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The parent window for the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>An integer that corresponds to the selection made by the user.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Displays this instance of the <bpt id="p1">[</bpt>CTaskDialog<ept id="p1">](../../mfc/reference/ctaskdialog-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The application then waits for the user to close the dialog box.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CTaskDialog`</ph> closes when the user selects a common button, a command link control, or closes the <ph id="ph2">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The return value is the identifier that indicates how the user closed the dialog box.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#7</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>CTaskDialog::GetCommonButtonCount</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Retrieves the number of common buttons.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The number of common buttons available.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>The common buttons are the default buttons that you provide to <bpt id="p1">[</bpt>CTaskDialog::CTaskDialog<ept id="p1">](#ctaskdialog__ctaskdialog)</ept>.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>CTaskDialog Class<ept id="p1">](../../mfc/reference/ctaskdialog-class.md)</ept> displays the buttons along the bottom of the dialog box.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The enumerated list of buttons is provided in CommCtrl.h.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>CTaskDialog::GetCommonButtonFlag</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Converts a standard Windows button to the common button type associated with the <bpt id="p1">[</bpt>CTaskDialog Class<ept id="p1">](../../mfc/reference/ctaskdialog-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>The standard Windows button value.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>The value of the corresponding <ph id="ph1">`CTaskDialog`</ph> common button.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>If there is no corresponding common button, this method returns 0.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>CTaskDialog::GetCommonButtonId</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Converts one of the common button types associated with the <bpt id="p1">[</bpt>CTaskDialog Class<ept id="p1">](../../mfc/reference/ctaskdialog-class.md)</ept> to a standard Windows button.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>The common button type associated with the <ph id="ph1">`CTaskDialog`</ph> class.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>The value of the corresponding standard Windows button.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>If there is no corresponding Windows button, the method returns 0.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>CTaskDialog::GetOptions</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Returns the option flags for this <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>The flags for the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>For more information about the options available to the <bpt id="p1">[</bpt>CTaskDialog Class<ept id="p1">](../../mfc/reference/ctaskdialog-class.md)</ept>, see <bpt id="p2">[</bpt>CTaskDialog::SetOptions<ept id="p2">](#ctaskdialog__setoptions)</ept>.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#7</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>CTaskDialog::GetSelectedCommandControlID</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Returns the selected command button control.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>The ID of the currently selected command button control.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>You do not have to use this method to retrieve the ID of the command button that the user selected.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>That ID is returned by either <bpt id="p1">[</bpt>CTaskDialog::DoModal<ept id="p1">](#ctaskdialog__domodal)</ept> or <bpt id="p2">[</bpt>CTaskDialog::ShowDialog<ept id="p2">](#ctaskdialog__showdialog)</ept>.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#2</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>CTaskDialog::GetSelectedRadioButtonID</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Returns the selected radio button.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>The ID of the selected radio button.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>You can use this method after the user closes the dialog box to retrieve the selected radio button.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#3</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>CTaskDialog::GetVerificationCheckboxState</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Retrieves the state of the verification check box.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>if the check box is checked, <ph id="ph1">`FALSE`</ph> if it is not.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#5</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>CTaskDialog::IsCommandControlEnabled</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>Determines whether a command button control or button is enabled.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>The ID of the command button control or button to test.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>if the control is enabled, <ph id="ph1">`FALSE`</ph> if it is not.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>You can use this method to determine the availability of both command button controls and the common buttons of the <bpt id="p1">[</bpt>CTaskDialog Class<ept id="p1">](../../mfc/reference/ctaskdialog-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`nCommandControlID`</ph> is not a valid identifier for either a common <ph id="ph2">`CTaskDialog`</ph> button or a command button control, this method throws an exception.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#2</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>CTaskDialog::IsRadioButtonEnabled</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>Determines whether a radio button is enabled.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>The ID of the radio button to test.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>if the radio button is enabled, <ph id="ph1">`FALSE`</ph> if it is not.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`nRadioButtonID`</ph> is not a valid identifier for a radio button, this method throws an exception.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#3</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>CTaskDialog::IsSupported</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>Determines whether the computer that is running the application supports the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>if the computer supports the <ph id="ph1">`CTaskDialog`</ph>; <ph id="ph2">`FALSE`</ph> otherwise.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Use this function to determine at runtime if the computer that is running your application supports the <bpt id="p1">[</bpt>CTaskDialog Class<ept id="p1">](../../mfc/reference/ctaskdialog-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>If the computer does not support the <ph id="ph1">`CTaskDialog`</ph>, you should provide another method of communicating information to the user.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Your application will crash if it tries to use a <ph id="ph1">`CTaskDialog`</ph> on a computer that does not support the <ph id="ph2">`CTaskDialog`</ph> class.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#1</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>CTaskDialog::LoadCommandControls</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Adds command button controls by using data from the string table.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>The string ID of the first command.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>The string ID of the last command.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>This method creates command button controls by using data from the resource file of your application.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>The string table in the resource file has several strings with associated string IDs.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>New command button controls added by using this method use the string for the control's caption and the string ID for the control's ID.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>The range of strings selected is provided by <ph id="ph1">`nIDCommandControlsFirst`</ph> and <ph id="ph2">`nCommandControlsLast`</ph>, inclusive.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>If there is an empty entry in the range, the method does not add a command button control for that entry.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>By default, new command button controls are enabled and do not require elevation.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#2</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>CTaskDialog::LoadRadioButtons</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Adds radio button controls by using data from the string table.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>The string ID of the first radio button.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>The string ID of the last radio button.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>This method creates radio buttons by using data from the resource file of your application.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>The string table in the resource file has several strings with associated string IDs.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>New radio buttons added by using this method use the string for the radio button's caption and the string ID for the radio button's ID.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>The range of strings selected is provided by <ph id="ph1">`nIDRadioButtonsFirst`</ph> and <ph id="ph2">`nRadioButtonsLast`</ph>, inclusive.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>If there is an empty entry in the range, the method does not add a radio button for that entry.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>By default, new radio buttons are enabled.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#3</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>CTaskDialog::NavigateTo</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Transfers the focus to another <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CTaskDialog`</ph> that receives the focus.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>This method hides the current <ph id="ph1">`CTaskDialog`</ph> when it displays the <ph id="ph2">`oTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`oTaskDialog`</ph> is displayed in the same location as the current <ph id="ph2">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>CTaskDialog::OnCommandControlClick</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>The framework calls this method when the user clicks a command button control.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>The ID of the command button control that the user selected.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>The default implementation returns <ph id="ph1">`S_OK`</ph>.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>Override this method in a derived class to implement custom behavior.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>CTaskDialog::OnCreate</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>The framework calls this method after it creates the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>The default implementation returns <ph id="ph1">`S_OK`</ph>.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>Override this method in a derived class to implement custom behavior.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>CTaskDialog::OnDestroy</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>The framework calls this method immediately before it destroys the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>The default implementation returns <ph id="ph1">`S_OK`</ph>.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>Override this method in a derived class to implement custom behavior.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>CTaskDialog::OnExpandButtonClick</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>The framework calls this method when the user clicks on the expansion button.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>A nonzero value indicates the extra information is displayed; 0 indicates the extra information is hidden.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>The default implementation returns <ph id="ph1">`S_OK`</ph>.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>Override this method in a derived class to implement custom behavior.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>CTaskDialog::OnHelp</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>The framework calls this method when the user requests help.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>The default implementation returns <ph id="ph1">`S_OK`</ph>.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>Override this method in a derived class to implement custom behavior.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>CTaskDialog::OnHyperlinkClick</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>The framework calls this method when the user clicks on a hyperlink.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>The string that represents the hyperlink.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>The default implementation returns <ph id="ph1">`S_OK`</ph>.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>This method calls <bpt id="p1">[</bpt>ShellExecute<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb762153)</ept> before it returns <ph id="ph1">`S_OK`</ph>.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>Override this method in a derived class to implement custom behavior.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>CTaskDialog::OnInit</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>The framework calls this method when the <ph id="ph1">`CTaskDialog`</ph> is initialized.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>The default implementation returns <ph id="ph1">`S_OK`</ph>.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>Override this method in a derived class to implement custom behavior.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>CTaskDialog::OnNavigatePage</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>The framework calls this method in response to the <bpt id="p1">[</bpt>CTaskDialog::NavigateTo<ept id="p1">](#ctaskdialog__navigateto)</ept> method.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>The default implementation returns <ph id="ph1">`S_OK`</ph>.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>Override this method in a derived class to implement custom behavior.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>CTaskDialog::OnRadioButtonClick</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>The framework calls this method when the user selects a radio button control.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>The ID of the radio button control that the user clicked.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>The default implementation returns <ph id="ph1">`S_OK`</ph>.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>Override this method in a derived class to implement custom behavior.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>CTaskDialog::OnTimer</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>The framework calls this method when the timer expires.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>Time in milliseconds since the <ph id="ph1">`CTaskDialog`</ph> was created or the timer was reset.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>The default implementation returns <ph id="ph1">`S_OK`</ph>.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>Override this method in a derived class to implement custom behavior.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>CTaskDialog::OnVerificationCheckboxClick</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>The framework calls this method when the user clicks the verification check box.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>indicates the verification check box is selected; <ph id="ph1">`FALSE`</ph> indicates it is not.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>The default implementation returns <ph id="ph1">`S_OK`</ph>.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>Override this method in a derived class to implement custom behavior.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>CTaskDialog::RemoveAllCommandControls</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>Removes all the command button controls from the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#2</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>CTaskDialog::RemoveAllRadioButtons</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>Removes all the radio buttons from the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#3</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetCommandControlOptions</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>Updates a command button control on the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>The ID of the command control to update.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>A Boolean parameter that indicates if the specified command button control is enabled or disabled.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>A Boolean parameter that indicates if the specified command button control requires elevation.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>Use this method to change whether a command button control is enabled or requires elevation after it has been added to the <bpt id="p1">[</bpt>CTaskDialog Class<ept id="p1">](../../mfc/reference/ctaskdialog-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#2</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetCommonButtonOptions</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>Updates a subset of common buttons to be enabled and to require UAC elevation.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>A mask for the common buttons to disable.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>A mask for the common buttons that require elevation.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>You can set the common buttons available to an instance of the <bpt id="p1">[</bpt>CTaskDialog Class<ept id="p1">](../../mfc/reference/ctaskdialog-class.md)</ept> by using the constructor <bpt id="p2">[</bpt>CTaskDialog::CTaskDialog<ept id="p2">](#ctaskdialog__ctaskdialog)</ept> and the method <bpt id="p3">[</bpt>CTaskDialog::SetCommonButtons<ept id="p3">](#ctaskdialog__setcommonbuttons)</ept>.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>does not support adding new common buttons.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>If you use this method to disable or elevate a common button that is not available for this <ph id="ph1">`CTaskDialog`</ph>, this method throws an exception by using the <bpt id="p1">[</bpt>ENSURE<ept id="p1">](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91)</ept> macro.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>This method enables any button that is available to the <ph id="ph1">`CTaskDialog`</ph> but is not in the <ph id="ph2">`nDisabledButtonMask`</ph>, even if it was previously disabled.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>This method treats elevation in a similar manner: it records common buttons as not requiring elevation if the common button is available but not included in <ph id="ph1">`nElevationButtonMask`</ph>.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#6</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetCommonButtons</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>Adds common buttons to the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>A mask of the buttons to add to the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>A mask of the buttons to disable.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>A mask of the buttons that require elevation.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>You cannot call this method after the display window for this instance of the <bpt id="p1">[</bpt>CTaskDialog Class<ept id="p1">](../../mfc/reference/ctaskdialog-class.md)</ept> is created.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>If you do, this method throws an exception.</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>The buttons indicated by <ph id="ph1">`nButtonMask`</ph> override any common buttons previously added to the <ph id="ph2">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>Only the buttons indicated in <ph id="ph1">`nButtonMask`</ph> are available.</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>If either <ph id="ph1">`nDisabledButtonMask`</ph> or <ph id="ph2">`nElevationButtonMask`</ph> contain a button that is not in <ph id="ph3">`nButtonMask`</ph>, this method throws an exception by using the <bpt id="p1">[</bpt>ENSURE<ept id="p1">](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91)</ept> macro.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>By default, all common buttons are enabled and do not require elevation.</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#6</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetContent</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>Updates the content of the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>The string to display to the user.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>The content of the <bpt id="p1">[</bpt>CTaskDialog Class<ept id="p1">](../../mfc/reference/ctaskdialog-class.md)</ept> is the text that is displayed to the user in the main section of the dialog box.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#7</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetDefaultCommandControl</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>Specifies the default command button control.</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>The ID of the command button control to be the default.</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>The default command button control is the control that is selected when the <ph id="ph1">`CTaskDialog`</ph> is first displayed to the user.</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>This method throws an exception if it cannot find the command button control specified by <ph id="ph1">`nCommandControlID`</ph>.</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#2</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetDefaultRadioButton</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>Specifies the default radio button.</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>The ID of the radio button to be the default.</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>The default radio button is the button that is selected when the <ph id="ph1">`CTaskDialog`</ph> is first displayed to the user.</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>This method throws an exception if it cannot find the radio button specified by <ph id="ph1">`nRadioButtonID`</ph>.</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#3</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetDialogWidth</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>Adjusts the width of the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>The width of the dialog box, in pixels.</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>The parameter <ph id="ph1">`nWidth`</ph> must be greater than or equal to 0.</source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>Otherwise, this method throws an exception.</source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`nWidth`</ph> is set to 0, this method sets the dialog box to the default size.</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#7</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetExpansionArea</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>Updates the expansion area of the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>The string that the <ph id="ph1">`CTaskDialog`</ph> displays in the main body of the dialog box when the user clicks the expansion button.</source>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>The string that the <ph id="ph1">`CTaskDialog`</ph> displays next to the expansion button when the expanded area is collapsed.</source>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>The string that the <ph id="ph1">`CTaskDialog`</ph> displays next to the expansion button when the expanded area is displayed.</source>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>The expansion area of the <bpt id="p1">[</bpt>CTaskDialog Class<ept id="p1">](../../mfc/reference/ctaskdialog-class.md)</ept> enables you to provide additional information to the user.</source>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>The expansion area is in the main part of the <ph id="ph1">`CTaskDialog`</ph>, located immediately underneath the title and content string.</source>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`CTaskDialog`</ph> is first displayed, it does not show the expanded information and puts <ph id="ph2">`strCollapsedLabel`</ph> next to the expansion button.</source>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>When the user clicks the expansion button, the <ph id="ph1">`CTaskDialog`</ph> displays <ph id="ph2">`strExpandedInformation`</ph> and changes the label to <ph id="ph3">`strExpandedLabel`</ph>.</source>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#7</source>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetFooterIcon</source>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source>Updates the footer icon of the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source>The new icon for the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>The new icon for the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source>The footer icon is displayed on the bottom of the <bpt id="p1">[</bpt>CTaskDialog Class<ept id="p1">](../../mfc/reference/ctaskdialog-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source>It can have associated footer text.</source>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>You can change the footer text with <bpt id="p1">[</bpt>CTaskDialog::SetFooterText<ept id="p1">](#ctaskdialog__setfootertext)</ept>.</source>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>This method throws an exception with the <bpt id="p1">[</bpt>ENSURE<ept id="p1">](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91)</ept> macro if the <ph id="ph1">`CTaskDialog`</ph> is displayed or the input parameter is <ph id="ph2">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CTaskDialog`</ph> can only accept an <ph id="ph2">`HICON`</ph> or <ph id="ph3">`LPCWSTR`</ph> as a footer icon.</source>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source>This is configured by setting the option <ph id="ph1">`TDF_USE_HICON_FOOTER`</ph> in the constructor or <bpt id="p1">[</bpt>CTaskDialog::SetOptions<ept id="p1">](#ctaskdialog__setoptions)</ept>.</source>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>By default, the <ph id="ph1">`CTaskDialog`</ph> is configured to use <ph id="ph2">`LPCWSTR`</ph> as the input type for the footer icon.</source>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>This method generates an exception if you try to set the icon using the inappropriate type.</source>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#7</source>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetFooterText</source>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source>Updates the text on the footer of the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>The new text for the footer.</source>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source>The footer icon appears next to the footer text on the bottom of the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source>You can change the footer icon with <bpt id="p1">[</bpt>CTaskDialog::SetFooterIcon<ept id="p1">](#ctaskdialog__setfootericon)</ept>.</source>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#7</source>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetMainIcon</source>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source>Updates the main icon of the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve">
          <source>The new icon.</source>
        </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>The new icon.</source>
        </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source>This method throws an exception with the <bpt id="p1">[</bpt>ENSURE<ept id="p1">](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91)</ept> macro if the <ph id="ph1">`CTaskDialog`</ph> is displayed or the input parameter is <ph id="ph2">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CTaskDialog`</ph> can only accept an <ph id="ph2">`HICON`</ph> or <ph id="ph3">`LPCWSTR`</ph> as a main icon.</source>
        </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source>You can configure this by setting the <ph id="ph1">`TDF_USE_HICON_MAIN`</ph> option in the constructor or in the <bpt id="p1">[</bpt>CTaskDialog::SetOptions<ept id="p1">](#ctaskdialog__setoptions)</ept> method.</source>
        </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source>By default, the <ph id="ph1">`CTaskDialog`</ph> is configured to use <ph id="ph2">`LPCWSTR`</ph> as the input type for the main icon.</source>
        </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source>This method generates an exception if you try to set the icon using the inappropriate type.</source>
        </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#7</source>
        </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetMainInstruction</source>
        </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>Updates the main instruction of the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source>The new main instruction.</source>
        </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve">
          <source>The main instruction of the <bpt id="p1">[</bpt>CTaskDialog Class<ept id="p1">](../../mfc/reference/ctaskdialog-class.md)</ept> is text displayed to the user in a large bold font.</source>
        </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve">
          <source>It is located in the dialog box underneath the title bar.</source>
        </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#7</source>
        </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetOptions</source>
        </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source>Configures the options for the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve">
          <source>The set of flags to use for the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source>This method clears all the current options for the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve">
          <source>To preserve the current options, you must retrieve them first with <bpt id="p1">[</bpt>CTaskDialog::GetOptions<ept id="p1">](#ctaskdialog__getoptions)</ept> and combine them with the options that you want to set.</source>
        </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve">
          <source>The following table lists all the valid options.</source>
        </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve">
          <source>Enables hyperlinks in the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve">
          <source>Configures the <ph id="ph1">`CTaskDialog`</ph> to use a <ph id="ph2">`HICON`</ph> for the main icon.</source>
        </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve">
          <source>The alternative is to use a <ph id="ph1">`LPCWSTR`</ph>.</source>
        </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve">
          <source>Configures the <ph id="ph1">`CTaskDialog`</ph> to use a <ph id="ph2">`HICON`</ph> for the footer icon.</source>
        </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source>The alternative is to use a <ph id="ph1">`LPCWSTR`</ph>.</source>
        </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>Enables the user to close the <ph id="ph1">`CTaskDialog`</ph> by using the keyboard or by using the icon in the upper-right corner of the dialog box, even if the <bpt id="p1">**</bpt>Cancel<ept id="p1">**</ept> button is not enabled.</source>
        </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve">
          <source>If this flag is not set and the <bpt id="p1">**</bpt>Cancel<ept id="p1">**</ept> button is not enabled, the user cannot close the dialog box by using Alt+F4, the Escape key, or the title bar's close button.</source>
        </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve">
          <source>Configures the <ph id="ph1">`CTaskDialog`</ph> to use command button controls.</source>
        </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source>Configures the <ph id="ph1">`CTaskDialog`</ph> to use command button controls without displaying an icon next to the control.</source>
        </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source>overrides <ph id="ph1">`TDF_USE_COMMAND_LINKS_NO_ICON`</ph>.</source>
        </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve">
          <source>Indicates the expansion area is currently expanded.</source>
        </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve">
          <source>Determines whether the expansion area is expanded by default.</source>
        </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve">
          <source>Indicates the verification check box is currently selected.</source>
        </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve">
          <source>Configures the <ph id="ph1">`CTaskDialog`</ph> to display a progress bar.</source>
        </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve">
          <source>Configures the progress bar to be a marquee progress bar.</source>
        </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve">
          <source>If you enable this option, you must set <ph id="ph1">`TDF_SHOW_PROGRESS_BAR`</ph> to have the expected behavior.</source>
        </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve">
          <source>Indicates that the <ph id="ph1">`CTaskDialog`</ph> callback interval is set to approximately 200 milliseconds.</source>
        </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve">
          <source>Configures the <ph id="ph1">`CTaskDialog`</ph> to be centered relative to the parent window.</source>
        </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve">
          <source>If this flag is not enabled, the <ph id="ph1">`CTaskDialog`</ph> is centered relative to the monitor.</source>
        </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve">
          <source>Configures the <ph id="ph1">`CTaskDialog`</ph> for a right-to-left reading layout.</source>
        </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve">
          <source>Indicates that no radio button is selected when the <ph id="ph1">`CTaskDialog`</ph> appears.</source>
        </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>Enables the user to minimize the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source>To support this option, the <ph id="ph1">`CTaskDialog`</ph> cannot be modal.</source>
        </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve">
          <source>MFC does not support this option because MFC does not support a modeless <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#7</source>
        </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetProgressBarMarquee</source>
        </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve">
          <source>Configures a marquee bar for the <ph id="ph1">`CTaskDialog`</ph> and adds it to the dialog box.</source>
        </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve">
          <source>to enable the marquee bar; <ph id="ph1">`FALSE`</ph> to disable the marquee bar and remove it from the <ph id="ph2">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve">
          <source>An integer that indicates the speed of the marquee bar.</source>
        </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve">
          <source>The marquee bar appears underneath the main text of the <bpt id="p1">[</bpt>CTaskDialog Class<ept id="p1">](../../mfc/reference/ctaskdialog-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`nMarqueeSpeed`</ph> to set the speed of the marquee bar; larger values indicate a slower speed.</source>
        </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve">
          <source>A value of 0 for <ph id="ph1">`nMarqueeSpeed`</ph> makes the marquee bar move at the default speed for <ph id="ph2">[!INCLUDE[wiprlhext](../../c-runtime-library/reference/includes/wiprlhext_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve">
          <source>This method throws an exception with the <bpt id="p1">[</bpt>ENSURE<ept id="p1">](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91)</ept> macro if <ph id="ph1">`nMarqueeSpeed`</ph> is less than 0.</source>
        </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#4</source>
        </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetProgressBarPosition</source>
        </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve">
          <source>Adjusts the position of the progress bar.</source>
        </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve">
          <source>The position for the progress bar.</source>
        </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve">
          <source>This method throws an exception with the <bpt id="p1">[</bpt>ENSURE<ept id="p1">](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91)</ept> macro if <ph id="ph1">`nProgressPos`</ph> is not in the progress bar range.</source>
        </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve">
          <source>You can change the progress bar range with <bpt id="p1">[</bpt>CTaskDialog::SetProgressBarRange<ept id="p1">](#ctaskdialog__setprogressbarrange)</ept>.</source>
        </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#4</source>
        </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetProgressBarRange</source>
        </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve">
          <source>Adjusts the range of the progress bar.</source>
        </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve">
          <source>The lower bound of the progress bar.</source>
        </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve">
          <source>The upper bound of the progress bar.</source>
        </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve">
          <source>The position of the progress bar is relative to <ph id="ph1">`nRangeMin`</ph> and <ph id="ph2">`nRangeMax`</ph>.</source>
        </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve">
          <source>For example, if <ph id="ph1">`nRangeMin`</ph> is 50 and <ph id="ph2">`nRangeMax`</ph> is 100, a position of 75 is halfway across the progress bar.</source>
        </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>CTaskDialog::SetProgressBarPosition<ept id="p1">](#ctaskdialog__setprogressbarposition)</ept> to set the position of the progress bar.</source>
        </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve">
          <source>To display the progress bar, the option <ph id="ph1">`TDF_SHOW_PROGRESS_BAR`</ph> must be enabled and <ph id="ph2">`TDF_SHOW_MARQUEE_PROGRESS_BAR`</ph> must not be enabled.</source>
        </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve">
          <source>This method automatically sets <ph id="ph1">`TDF_SHOW_PROGRESS_BAR`</ph> and clears <ph id="ph2">`TDF_SHOW_MARQUEE_PROGRESS_BAR`</ph>.</source>
        </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>CTaskDialog::SetOptions<ept id="p1">](#ctaskdialog__setoptions)</ept> to manually change the options for this instance of the <bpt id="p2">[</bpt>CTaskDialog Class<ept id="p2">](../../mfc/reference/ctaskdialog-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve">
          <source>This method throws an exception with the <bpt id="p1">[</bpt>ENSURE<ept id="p1">](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91)</ept> macro if <ph id="ph1">`nRangeMin`</ph> is not less than <ph id="ph2">`nRangeMax`</ph>.</source>
        </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve">
          <source>This method also throws an exception if the <ph id="ph1">`CTaskDialog`</ph> is already displayed and has a marquee progress bar.</source>
        </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#4</source>
        </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetProgressBarState</source>
        </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve">
          <source>Sets the state of the progress bar and displays it on the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve">
          <source>The state of the progress bar.</source>
        </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve">
          <source>See the Remarks section for the possible values.</source>
        </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve">
          <source>This method throws an exception with the <bpt id="p1">[</bpt>ENSURE<ept id="p1">](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91)</ept> macro if the <ph id="ph1">`CTaskDialog`</ph> is already displayed and has a marquee progress bar.</source>
        </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve">
          <source>The following table lists the possible values for <ph id="ph1">`nState`</ph>.</source>
        </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve">
          <source>In all these cases, the progress bar will fill with the regular color until it reaches the designated stop position.</source>
        </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve">
          <source>At that point it will change color based on the state.</source>
        </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve">
          <source>PBST_NORMAL</source>
        </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve">
          <source>After the progress bar fills, the <ph id="ph1">`CTaskDialog`</ph> does not change the color of the bar.</source>
        </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve">
          <source>By default, the regular color is green.</source>
        </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve">
          <source>PBST_ERROR</source>
        </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve">
          <source>After the progress bar fills, the <ph id="ph1">`CTaskDialog`</ph> changes the color of the bar to the error color.</source>
        </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve">
          <source>By default, this is red.</source>
        </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve">
          <source>PBST_PAUSED</source>
        </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve">
          <source>After the progress bar fills, the <ph id="ph1">`CTaskDialog`</ph> changes the color of the bar to the paused color.</source>
        </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve">
          <source>By default, this is yellow.</source>
        </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve">
          <source>You can set where the progress bar stops with <bpt id="p1">[</bpt>CTaskDialog::SetProgressBarPosition<ept id="p1">](#ctaskdialog__setprogressbarposition)</ept>.</source>
        </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#4</source>
        </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetRadioButtonOptions</source>
        </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve">
          <source>Enables or disables a radio button.</source>
        </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve">
          <source>The ID of the radio button control.</source>
        </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve">
          <source>to enable the radio button; <ph id="ph1">`FALSE`</ph> to disable the radio button.</source>
        </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve">
          <source>This method throws an exception with the <bpt id="p1">[</bpt>ENSURE<ept id="p1">](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91)</ept> macro if <ph id="ph1">`nRadioButtonID`</ph> is not a valid ID for a radio button.</source>
        </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#3</source>
        </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetVerificationCheckbox</source>
        </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve">
          <source>Sets the checked state of the verification check box.</source>
        </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve">
          <source>to have the verification check box selected when the <ph id="ph1">`CTaskDialog`</ph> is displayed; <ph id="ph2">`FALSE`</ph> to have the verification check box unselected when the <ph id="ph3">`CTaskDialog`</ph> is displayed.</source>
        </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#5</source>
        </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetVerificationCheckboxText</source>
        </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve">
          <source>Sets the text that is displayed to the right of the verification check box.</source>
        </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve">
          <source>The text that this method displays next to the verification check box.</source>
        </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve">
          <source>This method throws an exception with the <bpt id="p1">[</bpt>ENSURE<ept id="p1">](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91)</ept> macro if this instance of the <bpt id="p2">[</bpt>CTaskDialog Class<ept id="p2">](../../mfc/reference/ctaskdialog-class.md)</ept> is already displayed.</source>
        </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#5</source>
        </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve">
          <source>CTaskDialog::SetWindowTitle</source>
        </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve">
          <source>Sets the title of the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve">
          <source>The new title for the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#7</source>
        </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve">
          <source>CTaskDialog::ShowDialog</source>
        </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve">
          <source>Creates and displays a <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve">
          <source>The string to use for the content of the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve">
          <source>The main instruction of the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve">
          <source>The title of the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve">
          <source>The string ID of the first command.</source>
        </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve">
          <source>The string ID of the last command.</source>
        </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve">
          <source>A mask of the buttons to add to the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve">
          <source>The set of options to use for the <ph id="ph1">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve">
          <source>The string to use as the footer.</source>
        </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve">
          <source>An integer that corresponds to the selection made by the user.</source>
        </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve">
          <source>This static method enables you to create an instance of the <bpt id="p1">[</bpt>CTaskDialog Class<ept id="p1">](../../mfc/reference/ctaskdialog-class.md)</ept> without explicitly creating a <ph id="ph1">`CTaskDialog`</ph> object in your code.</source>
        </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve">
          <source>Because there is no <ph id="ph1">`CTaskDialog`</ph> object, you cannot call any other methods of the <ph id="ph2">`CTaskDialog`</ph> if you use this method to show a <ph id="ph3">`CTaskDialog`</ph> to the user.</source>
        </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve">
          <source>This method creates command button controls by using data from the resource file of your application.</source>
        </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve">
          <source>The string table in the resource file has several strings with associated string IDs.</source>
        </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve">
          <source>This method adds a command button control for each valid entry in the string table between <ph id="ph1">`nIDCommandControlsFirst`</ph> and <ph id="ph2">`nCommandControlsLast`</ph>, inclusive.</source>
        </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve">
          <source>For these command button controls, the string in the string table is the control's caption and the string ID is the control's ID.</source>
        </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CTaskDialog::SetOptions<ept id="p1">](#ctaskdialog__setoptions)</ept> for a list of valid options.</source>
        </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CTaskDialog`</ph> closes when the user selects a common button, a command link control, or closes the <ph id="ph2">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve">
          <source>The return value is the identifier that indicates how the user closed the dialog box.</source>
        </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CTaskDialog#1</source>
        </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve">
          <source>CTaskDialog::TaskDialogCallback</source>
        </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve">
          <source>The framework calls this method in response to various Windows messages.</source>
        </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve">
          <source>A handle to the <ph id="ph1">`m_hWnd`</ph> structure for the <ph id="ph2">`CTaskDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve">
          <source>The notification code that specifies the generated message.</source>
        </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve">
          <source>More information about the message.</source>
        </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve">
          <source>More information about the message.</source>
        </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve">
          <source>A pointer to the <ph id="ph1">`CTaskDialog`</ph> object that the callback message applies to.</source>
        </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve">
          <source>Depends on the specific notification code.</source>
        </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve">
          <source>See the Remarks section for more information.</source>
        </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve">
          <source>The default implementation of <ph id="ph1">`TaskDialogCallback`</ph> handles the specific message and then calls the appropriate On method of the <bpt id="p1">[</bpt>CTaskDialog Class<ept id="p1">](../../mfc/reference/ctaskdialog-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve">
          <source>For example, in response to the <ph id="ph1">`TDN_BUTTON_CLICKED`</ph> message, <ph id="ph2">`TaskDialogCallback`</ph> calls <bpt id="p1">[</bpt>CTaskDialog::OnCommandControlClick<ept id="p1">](#ctaskdialog__oncommandcontrolclick)</ept>.</source>
        </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve">
          <source>The values for <ph id="ph1">`wParam`</ph> and <ph id="ph2">`lParam`</ph> depend on the specific generated message.</source>
        </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve">
          <source>It is possible for either or both of these values to be empty.</source>
        </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve">
          <source>The following table lists the default notifications that are supported and what the values of <ph id="ph1">`wParam`</ph> and <ph id="ph2">`lParam`</ph> represent.</source>
        </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve">
          <source>If you override this method in a derived class, you should implement the callback code for each message in the following table.</source>
        </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve">
          <source>Notification Message</source>
        </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve">
          <source>Not used.</source>
        </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve">
          <source>Not used.</source>
        </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve">
          <source>Not used.</source>
        </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve">
          <source>Not used.</source>
        </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve">
          <source>The command button control ID.</source>
        </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve">
          <source>Not used.</source>
        </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve">
          <source>Not used.</source>
        </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>LPCWSTR<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa383751)</ept> structure that contains the link.</source>
        </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve">
          <source>Time in milliseconds since the <ph id="ph1">`CTaskDialog`</ph> was created or the timer was reset.</source>
        </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve">
          <source>Not used.</source>
        </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve">
          <source>Not used.</source>
        </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve">
          <source>Not used.</source>
        </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve">
          <source>The radio button ID.</source>
        </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve">
          <source>Not used.</source>
        </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve">
          <source>Not used.</source>
        </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve">
          <source>Not used.</source>
        </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve">
          <source>1 if the check box is checked, 0 if it is not.</source>
        </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve">
          <source>Not used.</source>
        </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve">
          <source>Not used.</source>
        </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve">
          <source>Not used.</source>
        </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve">
          <source>0 if the expansion area is collapsed; nonzero if the expansion text is displayed.</source>
        </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve">
          <source>Not used.</source>
        </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve">
          <source>Classes</source>
        </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve">
          <source>CObject Class</source>
        </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve">
          <source>Hierarchy Chart</source>
        </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve">
          <source>Walkthrough: Adding a CTaskDialog to an Application</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>