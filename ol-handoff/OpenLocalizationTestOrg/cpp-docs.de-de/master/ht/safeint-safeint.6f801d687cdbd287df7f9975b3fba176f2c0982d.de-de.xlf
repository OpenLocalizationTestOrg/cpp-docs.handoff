<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">81e60d5d9852eaa52e4fe42ed7991493484f641a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\windows\safeint-safeint.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">13338b2cd55fef5317fc9cf51c0ae739b6b2592f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">74b33480605793fc0ac5659dba94f063b34d486a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>SafeInt::SafeInt | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>SafeInt::SafeInt</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`SafeInt`</ph> object.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The value for the new <ph id="ph1">`SafeInt`</ph> object.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This must be a parameter of type T or U, depending on the constructor.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Boolean value for the new <ph id="ph1">`SafeInt`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`SafeInt`</ph> of type U. The new <ph id="ph2">`SafeInt`</ph> object will have the same value as <ph id="ph3">`u`</ph>, but will be of type T.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>U</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The type of data stored in the <ph id="ph1">`SafeInt`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This can be either a Boolean, character, or integer type.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If it is an integer type, it can be signed or unsigned and be between 8 and 64 bits.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For more information about the template types <ph id="ph1">`T`</ph> and <ph id="ph2">`E`</ph>, see <bpt id="p1">[</bpt>SafeInt Class<ept id="p1">](../windows/safeint-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The input parameter for the constructor, <ph id="ph1">`i`</ph> or <ph id="ph2">`u`</ph>, must be a Boolean, character, or integer type.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If it is another type of parameter, the <ph id="ph1">`SafeInt`</ph> class calls <bpt id="p1">[</bpt>static_assert<ept id="p1">](../cpp/static-assert.md)</ept> to indicate an invalid input parameter.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The constructors that use the template type <ph id="ph1">`U`</ph> automatically convert the input parameter to the type specified by <ph id="ph2">`T`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`SafeInt`</ph> class converts the data without any loss of data.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It reports to the error handler <ph id="ph1">`E`</ph> if it cannot convert the data to type <ph id="ph2">`T`</ph> without data loss.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If you create a <ph id="ph1">`SafeInt`</ph> from a Boolean parameter, you need to initialize the value immediately.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You cannot construct a <ph id="ph1">`SafeInt`</ph> using the code <ph id="ph2">`SafeInt&lt;bool&gt; sb;`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This will generate a compile error.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> safeint.h</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Namespace:<ept id="p1">**</ept> msl::utilities</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>SafeInt Library</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>SafeInt Class</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>SafeIntException Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>