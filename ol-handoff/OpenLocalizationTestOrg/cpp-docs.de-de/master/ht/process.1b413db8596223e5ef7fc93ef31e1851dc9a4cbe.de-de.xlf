<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">199004913be995816a757ca2a2edbbd56cf5513b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\cpp\process.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a236a819d3aa0d9e6851b296f7703e46b66eca68</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">692dbdbafb31a15ded789b9bfc48fd66a716affc</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>process | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>process</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Specifies that your managed application process should have a single copy of a particular global variable, static member variable, or static local variable shared across all application domains in the process.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This is primarily intended to be used when compiling with <bpt id="p1">**</bpt>/clr:pure<ept id="p1">**</ept>, because under <bpt id="p2">**</bpt>/clr:pure<ept id="p2">**</ept> global and static variables are per application domain, by default.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When compiling with <bpt id="p1">**</bpt>/clr<ept id="p1">**</ept>, global and static variables are per process by default (do not need to use <ph id="ph1">`__declspec(process)`</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Only a global variable, a static member variable, or a static local variable of native type can be marked with <ph id="ph1">`__declspec(process)`</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When compiling with <bpt id="p1">**</bpt>/clr:pure<ept id="p1">**</ept>, variables marked as per process must also be declared as <ph id="ph1">`const`</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This ensures that per process variables are not changed in one application domain, and giving unexpected results in another application domain.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The primary intended use of <ph id="ph1">`__declspec(process)`</ph> is to enable compile time initialization of a global variable, static member variable, or static local variable under <bpt id="p1">**</bpt>/clr:pure<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>is only valid when compiling with <bpt id="p1">[</bpt>/clr<ept id="p1">](../build/reference/clr-common-language-runtime-compilation.md)</ept> or <bpt id="p2">**</bpt>/clr:pure<ept id="p2">**</ept> and is not valid when compiling with <bpt id="p3">**</bpt>/clr:safe<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If you want each application domain to have its own copy of a global variable, use <bpt id="p1">[</bpt>appdomain<ept id="p1">](../cpp/appdomain.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Application Domains and Visual C++<ept id="p1">](../dotnet/application-domains-and-visual-cpp.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>__declspec</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Keywords</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>