<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">66e43baf50f904ad42910a47fe21c41a5435665b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\cstatusbarctrl-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2c099fc2db2c6aa31acad7119c2039b3495b359b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4e27e8cc294705de04b8741990a26e8d83813a39</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Provides the functionality of the Windows common status bar control.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::CStatusBarCtrl</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CStatusBarCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::Create</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Creates a status bar control and attaches it to a <ph id="ph1">`CStatusBarCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::CreateEx</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Creates a status bar control with the specified Windows extended styles and attaches it to a <ph id="ph1">`CStatusBarCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::DrawItem</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Called when a visual aspect of an owner-draw status bar control changes.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::GetBorders</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Retrieves the current widths of the horizontal and vertical borders of a status bar control.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::GetIcon</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Retrieves the icon for a part (also known as a pane) in the current status bar control.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::GetParts</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Retrieves a count of the parts in a status bar control.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::GetRect</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Retrieves the bounding rectangle of a part in a status bar control.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::GetText</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Retrieves the text from the given part of a status bar control.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::GetTextLength</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Retrieve the length, in characters, of the text from the given part of a status bar control.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::GetTipText</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Retrieves the tooltip text for a pane in a status bar.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::IsSimple</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Checks a status window control to determine if it is in simple mode.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::SetBkColor</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Sets the background color in a status bar.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::SetIcon</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Sets the icon for a pane in a status bar.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::SetMinHeight</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Sets the minimum height of a status bar control's drawing area.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::SetParts</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Sets the number of parts in a status bar control and the coordinate of the right edge of each part.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::SetSimple</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Specifies whether a status bar control displays simple text or displays all control parts set by a previous call to <ph id="ph1">`SetParts`</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::SetText</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Sets the text in the given part of a status bar control.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::SetTipText</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Sets the tooltip text for a pane in a status bar.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A "status bar control" is a horizontal window, usually displayed at the bottom of a parent window, in which an application can display various kinds of status information.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The status bar control can be divided into parts to display more than one type of information.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This control (and therefore the <ph id="ph1">`CStatusBarCtrl`</ph> class) is available only to programs running under Windows 95/98 and Windows NT version 3.51 and later.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For more information on using <ph id="ph1">`CStatusBarCtrl`</ph>, see <bpt id="p1">[</bpt>Controls<ept id="p1">](../../mfc/controls-mfc.md)</ept> and <bpt id="p2">[</bpt>Using CStatusBarCtrl<ept id="p2">](../../mfc/using-cstatusbarctrl.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>CObject</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>CCmdTarget</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>CWnd</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxcmn.h</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::Create</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Creates a status bar control and attaches it to a <ph id="ph1">`CStatusBarCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Specifies the status bar control's style.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Apply any combination of status bar control styles listed in <bpt id="p1">[</bpt>Common Control Styles<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775498)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This parameter must include the <bpt id="p1">**</bpt>WS_CHILD<ept id="p1">**</ept> style.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>It should also include the <bpt id="p1">**</bpt>WS_VISIBLE<ept id="p1">**</ept> style.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Specifies the status bar control's size and position.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>It can be either a <bpt id="p1">[</bpt>CRect<ept id="p1">](../../atl-mfc-shared/reference/crect-class.md)</ept> object or a <bpt id="p2">[</bpt>RECT<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Specifies the status bar control's parent window, usually a <ph id="ph1">`CDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>It must not be <bpt id="p1">**</bpt>NULL.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Specifies the status bar control's ID.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise zero.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>You construct a <ph id="ph1">`CStatusBarCtrl`</ph> in two steps.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>First, call the constructor, and then call <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>, which creates the status bar control and attaches it to the <ph id="ph1">`CStatusBarCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The default position of a status window is along the bottom of the parent window, but you can specify the <ph id="ph1">`CCS_TOP`</ph> style to have it appear at the top of the parent window's client area.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>You can specify the <bpt id="p1">**</bpt>SBARS_SIZEGRIP<ept id="p1">**</ept> style to include a sizing grip at the right end of the status window.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Combining the <ph id="ph1">`CCS_TOP`</ph> and <bpt id="p1">**</bpt>SBARS_SIZEGRIP<ept id="p1">**</ept> styles is not recommended, because the resulting sizing grip is not functional even though the system draws it in the status window.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>To create a status bar with extended window styles, call <bpt id="p1">[</bpt>CStatusBarCtrl::CreateEx<ept id="p1">](#cstatusbarctrl__createex)</ept> instead of <bpt id="p2">**</bpt>Create<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CStatusBarCtrl#1</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::CreateEx</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Creates a control (a child window) and associates it with the <ph id="ph1">`CStatusBarCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Specifies the extended style of the control being created.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>For a list of extended Windows styles, see the <ph id="ph1">`dwExStyle`</ph> parameter for <bpt id="p1">[</bpt>CreateWindowEx<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632680)</ept> in the <ph id="ph2">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Specifies the status bar control's style.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Apply any combination of status bar control styles listed in <bpt id="p1">[</bpt>Common Control Styles<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775498)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This parameter must include the <bpt id="p1">**</bpt>WS_CHILD<ept id="p1">**</ept> style.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>It should also include the <bpt id="p1">**</bpt>WS_VISIBLE<ept id="p1">**</ept> style.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">[</bpt>RECT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure describing the size and position of the window to be created, in client coordinates of <ph id="ph1">`pParentWnd`</ph>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>A pointer to the window that is the control's parent.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The control's child-window ID.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`CreateEx`</ph> instead of <bpt id="p1">[</bpt>Create<ept id="p1">](#cstatusbarctrl__create)</ept> to apply extended Windows styles, specified by the Windows extended style preface <bpt id="p2">**</bpt>WS_EX_<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::CStatusBarCtrl</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CStatusBarCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::DrawItem</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Called by the framework when a visual aspect of an owner-draw status bar control changes.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>A long pointer to a <bpt id="p1">[</bpt>DRAWITEMSTRUCT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775802)</ept> structure that contains information about the type of drawing required.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>itemAction<ept id="p1">**</ept> member of the <ph id="ph1">`DRAWITEMSTRUCT`</ph> structure defines the drawing action that is to be performed.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>By default, this member function does nothing.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Override this member function to implement drawing for an owner-draw <ph id="ph1">`CStatusBarCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The application should restore all graphics device interface (GDI) objects selected for the display context supplied in <ph id="ph1">`lpDrawItemStruct`</ph> before this member function terminates.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::GetBorders</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Retrieves the status bar control's current widths of the horizontal and vertical borders and of the space between rectangles.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>pBorders</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Address of an integer array having three elements.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The first element receives the width of the horizontal border, the second receives the width of the vertical border, and the third receives the width of the border between rectangles.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>nHorz</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Reference to an integer that receives the width of the horizontal border.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>nVert</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Reference to an integer that receives the width of the vertical border.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>nSpacing</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Reference to an integer that receives the width of the border between rectangles.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise zero.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>These borders determine the spacing between the outside edge of the control and the rectangles within the control that contain text.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CStatusBarCtrl#2</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::GetIcon</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Retrieves the icon for a part (also known as a pane) in the current status bar control.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The zero-based index of the part that contains the icon to be retrieved.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>If this parameter is -1, the status bar is assumed to be a simple mode status bar.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The handle to the icon if the method successful; otherwise, <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>This method sends the <bpt id="p1">[</bpt>SB_GETICON<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb760744)</ept> message, which is described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>A status bar control consists of a row of text output panes, which are also known as parts.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>For more information about the status bar, see <bpt id="p1">[</bpt>Status Bar Implementation in MFC<ept id="p1">](../../mfc/status-bar-implementation-in-mfc.md)</ept> and <bpt id="p2">[</bpt>Setting the Mode of a CStatusBarCtrl Object<ept id="p2">](../../mfc/setting-the-mode-of-a-cstatusbarctrl-object.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The following code example defines a variable, <ph id="ph1">`m_statusBar`</ph>, that is used to access the current status bar control.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>This variable is used in the next example.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CStatusBarCtrl_s1#1</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The following code example copies an icon to two panes of the current status bar control.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>In an earlier section of the code example we created a status bar control with three panes and then added an icon to the first pane.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>This example retrieves the icon from the first pane and then adds it to the second and third pane.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CStatusBarCtrl_s1#2</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::GetParts</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Retrieves a count of the parts in a status bar control.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Number of parts for which to retrieve coordinates.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>If this parameter is greater than the number of parts in the control, the message retrieves coordinates for existing parts only.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>pParts</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Address of an integer array having the same number of elements as the number of parts specified by <ph id="ph1">`nParts`</ph>.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Each element in the array receives the client coordinate of the right edge of the corresponding part.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>If an element is set to – 1, the position of the right edge for that part extends to the right edge of the status bar.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The number of parts in the control if successful, or zero otherwise.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>This member function also retrieves the coordinate of the right edge of the given number of parts.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CStatusBarCtrl#3</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::GetRect</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Retrieves the bounding rectangle of a part in a status bar control.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Zero-based index of the part whose bounding rectangle is to be retrieved.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Address of a <bpt id="p1">[</bpt>RECT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure that receives the bounding rectangle.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise zero.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CStatusBarCtrl#4</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::GetText</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Retrieves the text from the given part of a status bar control.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Address of the buffer that receives the text.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>This parameter is a null-terminated string.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Zero-based index of the part from which to retrieve text.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Pointer to an integer that receives the type information.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The type can be one of these values:</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>0<ept id="p1">**</ept> The text is drawn with a border to appear lower than the plane of the status bar.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The text is drawn without borders.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The text is drawn with a border to appear higher than the plane of the status bar.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>If the text has the <ph id="ph1">`SBT_OWNERDRAW`</ph> drawing type, <ph id="ph2">`pType`</ph> receives this message and returns the 32-bit value associated with the text instead of the length and operation type.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The length, in characters, of the text or a <bpt id="p1">[</bpt>CString<ept id="p1">](../../atl-mfc-shared/reference/cstringt-class.md)</ept> containing the current text.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CStatusBarCtrl#5</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::GetTextLength</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Retrieves the length, in characters, of the text from the given part of a status bar control.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Zero-based index of the part from which to retrieve text.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Pointer to an integer that receives the type information.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The type can be one of these values:</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>0<ept id="p1">**</ept> The text is drawn with a border to appear lower than the plane of the status bar.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The text is drawn without borders.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The text is drawn by the parent window.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The text is drawn with a border to appear higher than the plane of the status bar.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The length, in characters, of the text.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CStatusBarCtrl#6</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::GetTipText</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Retrieves the tooltip text for a pane in a status bar.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The zero-based index of status bar pane to receive the tooltip text.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>CString<ept id="p1">](../../atl-mfc-shared/reference/cstringt-class.md)</ept> object containing the text to be used in the tooltip.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>This member function implements the behavior of the Win32 message <bpt id="p1">[</bpt>SB_GETTIPTEXT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb760751)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CStatusBarCtrl#7</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::IsSimple</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Checks a status window control to determine if it is in simple mode.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Nonzero if the status window control is in simple mode; otherwise zero.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>This member function implements the behavior of the Win32 message <bpt id="p1">[</bpt>SB_ISSIMPLE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb760753)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::SetBkColor</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Sets the background color in a status bar.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt>COLORREF<ept id="p1">**</ept> value that specifies the new background color.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Specify the <ph id="ph1">`CLR_DEFAULT`</ph> value to cause the status bar to use its default background color.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>COLORREF<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd183449)</ept> value that represents the previous default background color.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>This member function implements the behavior of the Win32 message <bpt id="p1">[</bpt>SB_SETBKCOLOR<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb760754)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CStatusBarCtrl#8</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::SetIcon</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Sets the icon for a pane in a status bar.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The zero-based index of the pane that will receive the icon.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>If this parameter is -1, the status bar is assumed to be a simple status bar.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Handle to the icon to be set.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>If this value is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, the icon is removed from the part.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise zero.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>This member function implements the behavior of the Win32 message <bpt id="p1">[</bpt>SB_SETICON<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb760755)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CStatusBarCtrl::SetBkColor<ept id="p1">](#cstatusbarctrl__setbkcolor)</ept>.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::SetMinHeight</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Sets the minimum height of a status bar control's drawing area.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Minimum height, in pixels, of the control.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The minimum height is the sum of <ph id="ph1">`nMin`</ph> and twice the width, in pixels, of the vertical border of the status bar control.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CStatusBarCtrl#9</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::SetParts</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Sets the number of parts in a status bar control and the coordinate of the right edge of each part.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Number of parts to set.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The number of parts cannot be greater than 255.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>pWidths</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Address of an integer array having the same number of elements as parts specified by <ph id="ph1">`nParts`</ph>.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Each element in the array specifies the position, in client coordinates, of the right edge of the corresponding part.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>If an element is – 1, the position of the right edge for that part extends to the right edge of the control.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise zero.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CStatusBarCtrl#10</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::SetSimple</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Specifies whether a status bar control displays simple text or displays all control parts set by a previous call to <bpt id="p1">[</bpt>SetParts<ept id="p1">](#cstatusbarctrl__setparts)</ept>.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Display-type flag.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>If this parameter is <ph id="ph1">`TRUE`</ph>, the control displays simple text; if it is <ph id="ph2">`FALSE`</ph>, it displays multiple parts.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Always returns 0.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>If your application changes the status bar control from non-simple to simple, or vice versa, the system immediately redraws the control.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::SetText</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Sets the text in the given part of a status bar control.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Address of a null-terminated string specifying the text to set.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`nType`</ph> is <ph id="ph2">`SBT_OWNERDRAW`</ph>, <ph id="ph3">`lpszText`</ph> represents 32 bits of data.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Zero-based index of the part to set.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>If this value is 255, the status bar control is assumed to be a simple control having only one part.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Type of drawing operation.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>SB_SETTEXT message<ept id="p1">](http://msdn.microsoft.com/library/bb760758\(vs.85\).aspx)</ept> for a list of possible values.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise zero.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>The message invalidates the portion of the control that has changed, causing it to display the new text when the control next receives the <ph id="ph1">`WM_PAINT`</ph> message.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CStatusBarCtrl#11</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>CStatusBarCtrl::SetTipText</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Sets the tooltip text for a pane in a status bar.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>The zero-based index of status bar pane to receive the tooltip text.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>pszTipText</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>A pointer to a string containing the tooltip text.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>This member function implements the behavior of the Win32 message <bpt id="p1">[</bpt>SB_SETTIPTEXT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb760759)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CStatusBarCtrl#12</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>CWnd Class</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Hierarchy Chart</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>CToolBarCtrl Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>