<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">79aa5e3e62f101d7da3c68e0fe03a4ac6715d026</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\exceptions-ole-exceptions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">06eaf585ea2abd9f25a6963223b1b6b8e44b9f3a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c86003c327720d2905bd5261e180d4cb1cff1141</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Exceptions: OLE Exceptions | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Exceptions: OLE Exceptions</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The techniques and facilities for handling exceptions in OLE are the same as those for handling other exceptions.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For further information on exception handling, see the article <bpt id="p1">[</bpt>C++ Exception Handling<ept id="p1">](../cpp/cpp-exception-handling.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>All exception objects are derived from the abstract base class <ph id="ph1">`CException`</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>MFC provides two classes for handling OLE exceptions:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COleException<ept id="p1">](../mfc/reference/coleexception-class.md)</ept> For handling general OLE exceptions.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COleDispatchException<ept id="p1">](../mfc/reference/coledispatchexception-class.md)</ept> For generating and handling OLE dispatch (automation) exceptions.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The difference between these two classes is the amount of information they provide and where they are used.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>has a public data member that contains the OLE status code for the exception.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>supplies more information, including the following:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>An application-specific error code</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An error description, such as "Disk full"</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A Help context that your application can use to provide additional information for the user</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The name of your application's Help file</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The name of the application that generated the exception</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>provides more information so that it can be used with products like Microsoft Visual Basic.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The verbal error description can be used in a message box or other notification; the Help information can be used to help the user respond to the conditions that caused the exception.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Two global functions correspond to the two OLE exception classes: <bpt id="p1">[</bpt>AfxThrowOleException<ept id="p1">](../mfc/reference/exception-processing.md#afxthrowoleexception)</ept> and <bpt id="p2">[</bpt>AfxThrowOleDispatchException<ept id="p2">](../mfc/reference/exception-processing.md#afxthrowoledispatchexception)</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Use them to throw general OLE exceptions and OLE dispatch exceptions, respectively.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Exception Handling</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>