<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1f2c96c63e27d826d8add915b3194575b9de2e91</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\cdaotabledefinfo-structure.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d7ea62a13a410c86d591dc4f29a9614ca9d55c05</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5ca086a664d9aea671701eea523f8bb082a76369</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CDaoTableDefInfo Structure | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CDaoTableDefInfo Structure</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CDaoTableDefInfo`</ph> structure contains information about a tabledef object defined for data access objects (DAO).</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Uniquely names the tabledef object.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To retrieve the value of this property directly, call the tabledef object's <bpt id="p1">[</bpt>GetName<ept id="p1">](../../mfc/reference/cdaotabledef-class.md#cdaotabledef__getname)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For more information, see the topic "Name Property" in DAO Help.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Indicates whether changes can be made to the table.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The quick way to determine whether a table is updatable is to open a <ph id="ph1">`CDaoTableDef`</ph> object for the table and call the object's <bpt id="p1">[</bpt>CanUpdate<ept id="p1">](../../mfc/reference/cdaotabledef-class.md#cdaotabledef__canupdate)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>always returns nonzero (<bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>) for a newly created tabledef object and 0 (<bpt id="p2">**</bpt>FALSE<ept id="p2">**</ept>) for an attached tabledef object.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A new tabledef object can be appended only to a database for which the current user has write permission.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If the table contains only nonupdatable fields, <ph id="ph1">`CanUpdate`</ph> returns 0.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When one or more fields are updatable, <ph id="ph1">`CanUpdate`</ph> returns nonzero.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can edit only the updatable fields.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For more information, see the topic "Updatable Property" in DAO Help.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Specifies characteristics of the table represented by the tabledef object.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To retrieve the current attributes of a tabledef, call its <bpt id="p1">[</bpt>GetAttributes<ept id="p1">](../../mfc/reference/cdaotabledef-class.md#cdaotabledef__getattributes)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The value returned can be a combination of these long constants (using the bitwise-OR (<bpt id="p1">**</bpt>&amp;#124;<ept id="p1">**</ept>) operator):</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dbAttachExclusive<ept id="p1">**</ept> For databases that use the Microsoft Jet database engine, indicates the table is an attached table opened for exclusive use.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dbAttachSavePWD<ept id="p1">**</ept> For databases that use the Microsoft Jet database engine, indicates that the user ID and password for the attached table are saved with the connection information.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dbSystemObject<ept id="p1">**</ept> Indicates the table is a system table provided by the Microsoft Jet database engine.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>(Read-only.)</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dbHiddenObject<ept id="p1">**</ept> Indicates the table is a hidden table provided by the Microsoft Jet database engine (for temporary use).</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>(Read-only.)</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dbAttachedTable<ept id="p1">**</ept> Indicates the table is an attached table from a non-ODBC database, such as a Paradox database.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dbAttachedODBC<ept id="p1">**</ept> Indicates the table is an attached table from an ODBC database, such as Microsoft SQL Server.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The date and time the table was created.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To directly retrieve the date the table was created, call the <bpt id="p1">[</bpt>GetDateCreated<ept id="p1">](../../mfc/reference/cdaotabledef-class.md#cdaotabledef__getdatecreated)</ept> member function of the <ph id="ph1">`CDaoTableDef`</ph> object associated with the table.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>See Comments below for more information.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For related information, see the topic "DateCreated, LastUpdated Properties" in DAO Help.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The date and time of the most recent change made to the design of the table.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To directly retrieve the date the table was last updated, call the <bpt id="p1">[</bpt>GetDateLastUpdated<ept id="p1">](../../mfc/reference/cdaotabledef-class.md#cdaotabledef__getdatelastupdated)</ept> member function of the <ph id="ph1">`CDaoTableDef`</ph> object associated with the table.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>See Comments below for more information.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For related information, see the topic "DateCreated, LastUpdated Properties" in DAO Help.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>m_strSrcTableName</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Specifies the name of an attached table if any.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To directly retrieve the source table name, call the <bpt id="p1">[</bpt>GetSourceTableName<ept id="p1">](../../mfc/reference/cdaotabledef-class.md#cdaotabledef__getsourcetablename)</ept> member function of the <ph id="ph1">`CDaoTableDef`</ph> object associated with the table.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Provides information about the source of an open database.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You can check this property by calling the <bpt id="p1">[</bpt>GetConnect<ept id="p1">](../../mfc/reference/cdaotabledef-class.md#cdaotabledef__getconnect)</ept> member function of your <ph id="ph1">`CDaoTableDef`</ph> object.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For more information about connect strings, see <ph id="ph1">`GetConnect`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A value that validates the data in tabledef fields as they are changed or added to a table.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Validation is supported only for databases that use the Microsoft Jet database engine.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To directly retrieve the validation rule, call the <bpt id="p1">[</bpt>GetValidationRule<ept id="p1">](../../mfc/reference/cdaotabledef-class.md#cdaotabledef__getvalidationrule)</ept> member function of the <ph id="ph1">`CDaoTableDef`</ph> object associated with the table.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For related information, see the topic "ValidationRule Property" in DAO Help.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A value that specifies the text of the message that your application should display if the validation rule specified by the ValidationRule property is not satisfied.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For related information, see the topic "ValidationText Property" in DAO Help.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>m_lRecordCount</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The number of records accessed in a tabledef object.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This property setting is read-only.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To directly retrieve the record count, call the <bpt id="p1">[</bpt>GetRecordCount<ept id="p1">](../../mfc/reference/cdaotabledef-class.md#cdaotabledef__getrecordcount)</ept> member function of the <ph id="ph1">`CDaoTableDef`</ph> object.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The documentation for <ph id="ph1">`GetRecordCount`</ph> describes the record count further.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Note that retrieving this count can be a time-consuming operation if the table contains many records.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The tabledef is an object of class <bpt id="p1">[</bpt>CDaoTableDef<ept id="p1">](../../mfc/reference/cdaotabledef-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The references to Primary, Secondary, and All above indicate how the information is returned by the <bpt id="p1">[</bpt>GetTableDefInfo<ept id="p1">](../../mfc/reference/cdaodatabase-class.md#cdaodatabase__gettabledefinfo)</ept> member function in class <ph id="ph1">`CDaoDatabase`</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Information retrieved by the <bpt id="p1">[</bpt>CDaoDatabase::GetTableDefInfo<ept id="p1">](../../mfc/reference/cdaodatabase-class.md#cdaodatabase__gettabledefinfo)</ept> member function is stored in a <ph id="ph1">`CDaoTableDefInfo`</ph> structure.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Call the <ph id="ph1">`GetTableDefInfo`</ph> member function of the <ph id="ph2">`CDaoDatabase`</ph> object in whose TableDefs collection the tabledef object is stored.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>also defines a <ph id="ph1">`Dump`</ph> member function in debug builds.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>You can use <ph id="ph1">`Dump`</ph> to dump the contents of a <ph id="ph2">`CDaoTableDefInfo`</ph> object.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The date and time settings are derived from the computer on which the base table was created or last updated.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>In a multiuser environment, users should get these settings directly from the file server to avoid discrepancies in the DateCreated and LastUpdated property settings.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxdao.h</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Structures, Styles, Callbacks, and Message Maps</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>CDaoTableDef Class</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>CDaoDatabase Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>