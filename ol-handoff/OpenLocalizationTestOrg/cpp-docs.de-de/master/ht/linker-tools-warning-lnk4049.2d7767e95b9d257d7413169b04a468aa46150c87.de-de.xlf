<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">337a980e74397459e8d3930ce3992a2e55eb6173</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\error-messages\tool-errors\linker-tools-warning-lnk4049.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ee4b18216d3b7e61f36b54c1594066f382a90fe7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b88c5b289dfa40f8d22b4e1f29de4e479c73065f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Linker Tools Warning LNK4049 | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Linker Tools Warning LNK4049</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>locally defined symbol 'symbol' imported</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The symbol was both exported from and imported to the program.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This warning is generated by the linker when you declare a symbol by using the <ph id="ph1">`__declspec(dllexport)`</ph> storage-class attribute in one object file and reference it by using the <ph id="ph2">`__declspec(dllimport)`</ph> attribute in another.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Warning LNK4049 is a more general version of <bpt id="p1">[</bpt>Linker Tools Warning LNK4217<ept id="p1">](../../error-messages/tool-errors/linker-tools-warning-lnk4217.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The linker generates Warning LNK4049 when it cannot determine from which function the imported symbol was referenced.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The common cases where LNK4049 is generated instead of LNK4217 are:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Performing incremental linking by using the <bpt id="p1">[</bpt>/INCREMENTAL<ept id="p1">](../../build/reference/incremental-link-incrementally.md)</ept> option.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Performing whole-program optimization by using the <bpt id="p1">[</bpt>/LTCG<ept id="p1">](../../build/reference/ltcg-link-time-code-generation.md)</ept> option.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To resolve LNK4049, try one of the following:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Remove the <ph id="ph1">`__declspec(dllimport)`</ph> name declaration from the forward declaration of the symbol which triggered LNK4049.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can search for symbols within a binary image by using the <bpt id="p1">**</bpt>DUMPBIN<ept id="p1">**</ept> utility.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>DUMPBIN/SYMBOLS<ept id="p1">**</ept> switch displays the COFF symbol table of the image.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more information on the <bpt id="p1">**</bpt>DUMPBIN<ept id="p1">**</ept> utility, see <bpt id="p2">[</bpt>DUMPBIN Reference<ept id="p2">](../../build/reference/dumpbin-reference.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Temporarily disable incremental linking and whole-program optimization.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Recompiling the application will generate Warning LNK4217, which will include the name of the function from which the imported symbol was referenced.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Remove the <ph id="ph1">`__declspec(dllimport)`</ph> declaration from the imported symbol and enable incremental linking or whole-program optimization as required.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Although the final generated code will behave correctly, the code generated to call the imported function is less efficient than calling the function directly.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This warning will not appear when you compile by using the option <bpt id="p1">[</bpt>/clr<ept id="p1">](../../build/reference/clr-common-language-runtime-compilation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information on import and export data declarations, see <bpt id="p1">[</bpt>dllexport, dllimport<ept id="p1">](../../cpp/dllexport-dllimport.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Linking the following two modules will generate LNK4049.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The first module generates an object file containing a single exported function.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The second module generates an object file containing a forward declaration to the function exported in the first module, along with a call to this function inside the <ph id="ph1">`main`</ph> function.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Linking this module with the first module will generate LNK4049.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Removing the <ph id="ph1">`__declspec(dllimport)`</ph> declaration will resolve the warning.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Linker Tools Warning LNK4217</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>dllexport, dllimport</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>