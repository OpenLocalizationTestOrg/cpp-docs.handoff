<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">25ea9a33aa055bda564557bc93bc54114b6180b4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\error-messages\tool-errors\vectorizer-and-parallelizer-messages.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ab1f76059a36c50a9dd0cbd25f728448fa189e53</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2da942731c23ada3105d697f606d729e196358d3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Vectorizer and Parallelizer Messages | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Vectorizer and Parallelizer Messages</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can use the Visual C++ compiler options <bpt id="p1">[</bpt>/Qpar-report<ept id="p1">](../../build/reference/qpar-report-auto-parallelizer-reporting-level.md)</ept> and <bpt id="p2">[</bpt>/Qvec-report<ept id="p2">](../../build/reference/qvec-report-auto-vectorizer-reporting-level.md)</ept> to set the <bpt id="p3">[</bpt>Auto-Parallelization and Auto-Vectorization<ept id="p3">](../../parallel/auto-parallelization-and-auto-vectorization.md)</ept> to output reason codes and informational messages about its activity.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This article explains the reason codes and the messages.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Informational Messages<ept id="p1">](#BKMK_InformationalMessages)</ept></source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>5xx<ept id="p1">](#BKMK_ReasonCode50x)</ept></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>10xx<ept id="p1">](#BKMK_ReasonCode100x)</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>11xx<ept id="p1">](#BKMK_ReasonCode110x)</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>12xx<ept id="p1">](#BKMK_ReasonCode120x)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>13xx<ept id="p1">](#BKMK_ReasonCode130x)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>14xx<ept id="p1">](#BKMK_ReasonCode140x)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>15xx<ept id="p1">](#BKMK_ReasonCode150x)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_InformationalMessages"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Informational Messages</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Depending on the reporting level that you specify, one of the following informational messages appears for each loop.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For information about reason codes, refer to the next part of this article.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Informational Message</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>5001</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Loop vectorized.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>5002</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Loop not vectorized due to reason 'description'.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>5011</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Loop parallelized.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>5012</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Loop not parallelized due to reason 'description'.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>5021</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Unable to associate loop with pragma.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Reason Codes</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The following sections list possible reason codes for the auto-parallelizer and auto-vectorizer.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_ReasonCode50x"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> 5xx</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The 5<bpt id="p1">*</bpt>xx<ept id="p1">*</ept> reason codes apply to both the auto-parallelizer and the auto-vectorizer.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Reason Code</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Explanation</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>500</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This is a generic message that covers several cases—for example, the loop includes multiple exits, or the loop header does not end by incrementing the induction variable.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>501</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Induction variable is not local; or upper bound is not loop-invariant.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>502</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Induction variable is stepped in some manner other than a simple +1.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>503</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Loop includes exception-handling or switch statements.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>504</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Loop body may throw an exception that requires destruction of a C++ object.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_ReasonCode100x"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> 10xx</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The 10<bpt id="p1">*</bpt>xx<ept id="p1">*</ept> reason codes apply to the auto-parallelizer.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Reason Code</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Explanation</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>1000</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The compiler detected a data dependency in the loop body.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>1001</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The compiler detected a store to a scalar variable in the loop body, and that scalar has a use beyond the loop.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>1002</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The compiler tried to parallelize a loop that has an inner loop that was already parallelized.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>1003</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The loop body contains an intrinsic call that may read or write to memory.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>1004</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>There is a scalar reduction in the loop body.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Scalar reduction can occur if the loop has been vectorized.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>1005</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>no_parallel<ept id="p1">**</ept> pragma was specified.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>1006</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This function contains <bpt id="p1">**</bpt>openmp<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Resolve this by removing any <bpt id="p1">**</bpt>openmp<ept id="p1">**</ept> in this function.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>1007</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The loop induction variable or the loop bounds are not signed 32-bit numbers (<ph id="ph1">`int`</ph> or <ph id="ph2">`long`</ph>).</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Resolve this by changing the type of the induction variable.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>1008</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The compiler detected that this loop does not perform enough work to warrant auto-parallelization.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>1009</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The compiler detected an attempt to parallelize a "do-while" loop.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The auto-parallelizer only targets <ph id="ph1">`for`</ph> loops.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>1010</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The compiler detected that the loop is using "not-equals" (!=) for its condition.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_ReasonCode110x"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> 11xx</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The 11<bpt id="p1">*</bpt>xx<ept id="p1">*</ept> reason codes apply to the auto-vectorizer.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Reason Code</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Explanation</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>1100</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Loop contains control flow—for example, "if" or "?".</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>1101</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Loop contains datatype conversion—perhaps implicit—that cannot be vectorized.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>1102</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Loop contains non-arithmetic or other non-vectorizable operations.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>1103</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Loop body includes shift operations whose size might vary within the loop.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>1104</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Loop body includes scalar variables.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>1105</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Loop includes a unrecognized reduction operation.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>1106</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Outer loop not vectorized.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_ReasonCode120x"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> 12xx</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The 12<bpt id="p1">*</bpt>xx<ept id="p1">*</ept> reason codes apply to the auto-vectorizer.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Reason Code</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Explanation</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>1200</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Loop contains loop-carried data dependences that prevent vectorization.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Different iterations of the loop interfere with each other such that vectorizing the loop would produce wrong answers, and the auto-vectorizer cannot prove to itself that there are no such data dependences.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>1201</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Array base changes during the loop.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>1202</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Field in a struct is not 32 or 64 bits wide.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>1203</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Loop body includes non-contiguous accesses into an array.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_ReasonCode130x"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> 13xx</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The 13<bpt id="p1">*</bpt>xx<ept id="p1">*</ept> reason codes apply to the auto-vectorizer.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Reason Code</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Explanation</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>1300</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Loop body contains no—or very little—computation.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>1301</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Loop stride is not +1.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>1302</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Loop is a “do-while”.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>1303</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Too few loop iterations for vectorization to provide value.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>1304</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Loop includes assignments that are of different sizes.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>1305</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Not enough type information.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_ReasonCode140x"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> 14xx</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The 14<bpt id="p1">*</bpt>xx<ept id="p1">*</ept> reason codes occur when some option that is incompatible with auto-vectorization is specified.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Reason Code</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Explanation</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>1400</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>#pragma loop(no_vector)<ept id="p1">**</ept> is specified.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>1401</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/kernel<ept id="p1">**</ept> switch is specified when targeting x86 or ARM.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>1402</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/arch:SSE2<ept id="p1">**</ept> or higher switch is not specified when targeting x86.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>1403</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/arch:ATOM<ept id="p1">**</ept> switch is specified and the loop includes operations on doubles.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>1404</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/O1<ept id="p1">**</ept> or <bpt id="p2">**</bpt>/Os<ept id="p2">**</ept> switch is specified.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>1405</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Vectorization is disabled to aid in dynamic-initializer-to-static-initializer optimization.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_ReasonCode150x"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> 15xx</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The block of 15<bpt id="p1">*</bpt>xx<ept id="p1">*</ept> reason codes apply to aliasing.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Aliasing occurs when a location in memory can be accessed by two different names.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Reason Code</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Explanation</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>1500</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Possible aliasing on multi-dimensional arrays.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>1501</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Possible aliasing on arrays-of-structs.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>1502</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Possible aliasing and array index is other than n + K.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>1503</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Possible aliasing and array index has multiple offsets.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>1504</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Possible aliasing; would require too many runtime checks.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>1505</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Possible aliasing, but runtime checks are too complex.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Auto-Parallelization and Auto-Vectorization<ept id="p1">](../../parallel/auto-parallelization-and-auto-vectorization.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Parallel Programming in Native Code<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=263662)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>#pragma loop()<ept id="p1">](../../preprocessor/loop.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>/Q Options (Low-Level Operations)<ept id="p1">](../../build/reference/q-options-low-level-operations.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>/Qpar-report (Auto-Parallelizer Reporting Level)<ept id="p1">](../../build/reference/qpar-report-auto-parallelizer-reporting-level.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>/Qvec-report (Auto-Vectorizer Reporting Level)<ept id="p1">](../../build/reference/qvec-report-auto-vectorizer-reporting-level.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>