<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aa57212b602538e4e8d2854c6075562e72472796</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\atl-typedefs.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6defde9d887854684c33ff477281bbec4e7b0361</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2c5a1176211c47d8f7e76a3ac53e88af853dd47a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>ATL Typedefs | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ATL Typedefs</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The Active Template Library includes the following typedefs.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>_ATL_BASE_MODULE<ept id="p1">](#_atl_base_module)</ept></source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Defined as a typedef based on <bpt id="p1">[</bpt>_ATL_BASE_MODULE70<ept id="p1">](../../atl/reference/atl-base-module70-structure.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>_ATL_COM_MODULE<ept id="p1">](#_atl_com_module)</ept></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Defined as a typedef based on <bpt id="p1">[</bpt>_ATL_COM_MODULE70<ept id="p1">](../../atl/reference/atl-com-module70-structure.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>_ATL_MODULE<ept id="p1">](#_atl_module)</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Defined as a typedef based on <bpt id="p1">[</bpt>_ATL_MODULE70<ept id="p1">](../../atl/reference/atl-module70-structure.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>_ATL_WIN_MODULE<ept id="p1">](#_atl_win_module)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Defined as a typedef based on <bpt id="p1">[</bpt>_ATL_WIN_MODULE70<ept id="p1">](../../atl/reference/atl-win-module70-structure.md)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ATL_URL_PORT<ept id="p1">](#atl_url_port)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The type used by <bpt id="p1">[</bpt>CUrl<ept id="p1">](../../atl/reference/curl-class.md)</ept> for specifying a port number.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComDispatchDriver<ept id="p1">](#ccomdispatchdriver)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This class manages COM interface pointers.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComGlobalsThreadModel<ept id="p1">](#ccomglobalsthreadmodel)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Calls the appropriate thread model methods, regardless of the threading model being used.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComObjectThreadModel<ept id="p1">](#ccomobjectthreadmodel)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Calls the appropriate thread model methods, regardless of the threading model being used.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CContainedWindow<ept id="p1">](#ccontainedwindow)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This class is a specialization of <bpt id="p1">**</bpt>CContainedWindowT.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPath<ept id="p1">](#cpath)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A specialization of <bpt id="p1">[</bpt>CPathT<ept id="p1">](../../atl/reference/cpatht-class.md)</ept> using <ph id="ph1">`CString`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPathA<ept id="p1">](#cpatha)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A specialization of <bpt id="p1">[</bpt>CPathT<ept id="p1">](../../atl/reference/cpatht-class.md)</ept> using <ph id="ph1">`CStringA`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPathW<ept id="p1">](#cpathw)</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A specialization of <bpt id="p1">[</bpt>CPathT<ept id="p1">](../../atl/reference/cpatht-class.md)</ept> using <ph id="ph1">`CStringW`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CSimpleValArray<ept id="p1">](#csimplevalarray)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Represents an array for storing simple types.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>DefaultThreadTraits<ept id="p1">](#defaultthreadtraits)</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The default thread traits class.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>LPCURL<ept id="p1">](#lpcurl)</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A pointer to a constant <bpt id="p1">[</bpt>CUrl<ept id="p1">](../../atl/reference/curl-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>LPURL<ept id="p1">](#lpurl)</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>CUrl<ept id="p1">](../../atl/reference/curl-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="_atl_base_module"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  _ATL_BASE_MODULE</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Defined as a typedef based on _ATL_BASE_MODULE70.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Used in every ATL project.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Based on <bpt id="p1">[</bpt>_ATL_BASE_MODULE70<ept id="p1">](../../atl/reference/atl-base-module70-structure.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Classes that are part of the ATL 7.0 Module Classes derive from the _ATL_BASE_MODULE structure.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more information on ATL Module Classes, refer to <bpt id="p1">[</bpt>COM Modules Classes<ept id="p1">](../../atl/com-modules-classes.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="_atl_com_module"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  _ATL_COM_MODULE</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Defined as a typedef based on _ATL_COM_MODULE70.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Used by ATL projects which use COM features.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Based on <bpt id="p1">[</bpt>_ATL_COM_MODULE70<ept id="p1">](../../atl/reference/atl-com-module70-structure.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="_atl_module"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  _ATL_MODULE</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Defined as a typedef based on _ATL_MODULE70.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Based on <bpt id="p1">[</bpt>_ATL_MODULE70<ept id="p1">](../../atl/reference/atl-module70-structure.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="_atl_win_module"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  _ATL_WIN_MODULE</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Defined as a typedef based on _ATL_WIN_MODULE70.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Used by any ATL projects which use windowing features.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Based on <bpt id="p1">[</bpt>_ATL_WIN_MODULE70<ept id="p1">](../../atl/reference/atl-win-module70-structure.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="atl_url_port"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  ATL_URL_PORT</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The type used by <bpt id="p1">[</bpt>CUrl<ept id="p1">](curl-class.md)</ept> for specifying a port number.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccomdispatchdriver"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CComDispatchDriver</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This class manages COM interface pointers.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccomglobalsthreadmodel"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CComGlobalsThreadModel</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Calls the appropriate thread model methods, regardless of the threading model being used.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Depending on the threading model used by your application, the <ph id="ph1">`typedef`</ph> name <ph id="ph2">`CComGlobalsThreadModel`</ph> references either <bpt id="p1">[</bpt>CComSingleThreadModel<ept id="p1">](../../atl/reference/ccomsinglethreadmodel-class.md)</ept> or <bpt id="p2">[</bpt>CComMultiThreadModel<ept id="p2">](../../atl/reference/ccommultithreadmodel-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>These classes provide additional <ph id="ph1">`typedef`</ph> names to reference a critical section class.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CComGlobalsThreadModel`</ph> does not reference class <bpt id="p1">[</bpt>CComMultiThreadModelNoCS<ept id="p1">](../../atl/reference/ccommultithreadmodelnocs-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Using <ph id="ph1">`CComGlobalsThreadModel`</ph> frees you from specifying a particular threading model class.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Regardless of the threading model being used, the appropriate methods will be called.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>In addition to <ph id="ph1">`CComGlobalsThreadModel`</ph>, ATL provides the <ph id="ph2">`typedef`</ph> name <bpt id="p1">[</bpt>CComObjectThreadModel<ept id="p1">](#ccomobjectthreadmodel)</ept>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The class referenced by each <ph id="ph1">`typedef`</ph> depends on the threading model used, as shown in the following table:</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>typedef</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Single threading</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Apartment threading</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Free threading</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>S</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>S</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>M</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>S</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>M</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>M</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>S= <ph id="ph1">`CComSingleThreadModel`</ph>; M= <ph id="ph2">`CComMultiThreadModel`</ph></source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`CComObjectThreadModel`</ph> within a single object class.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`CComGlobalsThreadModel`</ph> in an object that is globally available to your program, or when you want to protect module resources across multiple threads.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccomobjectthreadmodel"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CComObjectThreadModel</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Calls the appropriate thread model methods, regardless of the threading model being used.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Depending on the threading model used by your application, the <ph id="ph1">`typedef`</ph> name <ph id="ph2">`CComObjectThreadModel`</ph> references either <bpt id="p1">[</bpt>CComSingleThreadModel<ept id="p1">](../../atl/reference/ccomsinglethreadmodel-class.md)</ept> or <bpt id="p2">[</bpt>CComMultiThreadModel<ept id="p2">](../../atl/reference/ccommultithreadmodel-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>These classes provide additional <ph id="ph1">`typedef`</ph> names to reference a critical section class.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CComObjectThreadModel`</ph> does not reference class <bpt id="p1">[</bpt>CComMultiThreadModelNoCS<ept id="p1">](../../atl/reference/ccommultithreadmodelnocs-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Using <ph id="ph1">`CComObjectThreadModel`</ph> frees you from specifying a particular threading model class.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Regardless of the threading model being used, the appropriate methods will be called.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>In addition to <ph id="ph1">`CComObjectThreadModel`</ph>, ATL provides the <ph id="ph2">`typedef`</ph> name <bpt id="p1">[</bpt>CComGlobalsThreadModel<ept id="p1">](#ccomglobalsthreadmodel)</ept>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The class referenced by each <ph id="ph1">`typedef`</ph> depends on the threading model used, as shown in the following table:</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>typedef</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Single threading</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Apartment threading</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Free threading</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>S</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>S</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>M</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>S</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>M</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>M</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>S= <ph id="ph1">`CComSingleThreadModel`</ph>; M= <ph id="ph2">`CComMultiThreadModel`</ph></source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`CComObjectThreadModel`</ph> within a single object class.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`CComGlobalsThreadModel`</ph> in an object that is either globally available to your program, or when you want to protect module resources across multiple threads.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccontainedwindow"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CContainedWindow</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This class is a specialization of <bpt id="p1">**</bpt>CContainedWindowT.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CContainedWindow`</ph> is a specialization of <bpt id="p1">[</bpt>CContainedWindowT<ept id="p1">](../../atl/reference/ccontainedwindowt-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>If you want to change the base class or traits, use <ph id="ph1">`CContainedWindowT`</ph> directly.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpath"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPath</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>A specialization of <bpt id="p1">[</bpt>CPathT<ept id="p1">](../../atl/reference/cpatht-class.md)</ept> using <ph id="ph1">`CString`</ph>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpatha"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPathA</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>A specialization of <bpt id="p1">[</bpt>CPathT<ept id="p1">](../../atl/reference/cpatht-class.md)</ept> using <ph id="ph1">`CStringA`</ph>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpathw"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPathW</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>A specialization of <bpt id="p1">[</bpt>CPathT<ept id="p1">](../../atl/reference/cpatht-class.md)</ept> using <ph id="ph1">`CStringW`</ph>.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="csimplevalarray"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CSimpleValArray</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Represents an array for storing simple types.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CSimpleValArray`</ph> is provided for creating and managing arrays containing simple data types.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>It is a simple #define of <bpt id="p1">[</bpt>CSimpleArray<ept id="p1">](../../atl/reference/csimplearray-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="lpcurl"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  LPCURL</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>A pointer to a constant <bpt id="p1">[</bpt>CUrl<ept id="p1">](../../atl/reference/curl-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="defaultthreadtraits"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  DefaultThreadTraits</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The default thread traits class.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>If the current project uses the multithreaded CRT, DefaultThreadTraits is defined as CRTThreadTraits.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Otherwise, Win32ThreadTraits is used.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="lpurl"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  LPURL</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>CUrl<ept id="p1">](../../atl/reference/curl-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ATL COM Desktop Components<ept id="p1">](../../atl/atl-com-desktop-components.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Functions<ept id="p1">](../../atl/reference/atl-functions.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Global Variables<ept id="p1">](../../atl/reference/atl-global-variables.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Structures<ept id="p1">](../../atl/reference/atl-structures.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Macros<ept id="p1">](../../atl/reference/atl-macros.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Classes<ept id="p1">](../../atl/reference/atl-classes.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>