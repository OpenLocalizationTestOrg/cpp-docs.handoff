<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">614a118c8b19a064beea795beb1db08102f18a5c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\crendertarget-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b85ce145130ac253cdb004eb88675d4405f59947</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9c8de9778abf07f64ab825ec4304ca1af227db7c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CRenderTarget Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CRenderTarget Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A wrapper for ID2D1RenderTarget.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::CRenderTarget<ept id="p1">](#crendertarget__crendertarget)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a CRenderTarget object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::~CRenderTarget<ept id="p1">](#crendertarget__~crendertarget)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The destructor.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Called when a render target object is being destroyed.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::Attach<ept id="p1">](#crendertarget__attach)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Attaches existing render target interface to the object</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::BeginDraw<ept id="p1">](#crendertarget__begindraw)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initiates drawing on this render target.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::Clear<ept id="p1">](#crendertarget__clear)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Clears the drawing area to the specified color.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::COLORREF_TO_D2DCOLOR<ept id="p1">](#crendertarget__colorref_to_d2dcolor)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Converts GDI color and alpha values to the D2D1_COLOR_F object.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::CreateCompatibleRenderTarget<ept id="p1">](#crendertarget__createcompatiblerendertarget)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Creates a new bitmap render target for use during intermediate offscreen drawing that is compatible with the current render target .</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::Destroy<ept id="p1">](#crendertarget__destroy)</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Deletes one or more resources</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::Detach<ept id="p1">](#crendertarget__detach)</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Detaches render target interface from the object</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::DrawBitmap<ept id="p1">](#crendertarget__drawbitmap)</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Draws the formatted text described by the specified IDWriteTextLayout object.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::DrawEllipse<ept id="p1">](#crendertarget__drawellipse)</ept></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Draws the outline of the specified ellipse using the specified stroke style.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::DrawGeometry<ept id="p1">](#crendertarget__drawgeometry)</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Draws the outline of the specified geometry using the specified stroke style.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::DrawGlyphRun<ept id="p1">](#crendertarget__drawglyphrun)</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Draws the specified glyphs.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::DrawLine<ept id="p1">](#crendertarget__drawline)</ept></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Draws a line between the specified points using the specified stroke style.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::DrawRectangle<ept id="p1">](#crendertarget__drawrectangle)</ept></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Draws the outline of a rectangle that has the specified dimensions and stroke style.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::DrawRoundedRectangle<ept id="p1">](#crendertarget__drawroundedrectangle)</ept></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Draws the outline of the specified rounded rectangle using the specified stroke style.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::DrawText<ept id="p1">](#crendertarget__drawtext)</ept></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Draws the specified text using the format information provided by an IDWriteTextFormat object.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::DrawTextLayout<ept id="p1">](#crendertarget__drawtextlayout)</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Draws the formatted text described by the specified IDWriteTextLayout object.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::EndDraw<ept id="p1">](#crendertarget__enddraw)</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Ends drawing operations on the render target and indicates the current error state and associated tags.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::FillEllipse<ept id="p1">](#crendertarget__fillellipse)</ept></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Paints the interior of the specified ellipse.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::FillGeometry<ept id="p1">](#crendertarget__fillgeometry)</ept></source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Paints the interior of the specified geometry.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::FillMesh<ept id="p1">](#crendertarget__fillmesh)</ept></source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Paints the interior of the specified mesh.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::FillOpacityMask<ept id="p1">](#crendertarget__fillopacitymask)</ept></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Applies the opacity mask described by the specified bitmap to a brush and uses that brush to paint a region of the render target.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::FillRectangle<ept id="p1">](#crendertarget__fillrectangle)</ept></source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Paints the interior of the specified rectangle.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::FillRoundedRectangle<ept id="p1">](#crendertarget__fillroundedrectangle)</ept></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Paints the interior of the specified rounded rectangle.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::Flush<ept id="p1">](#crendertarget__flush)</ept></source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Executes all pending drawing commands.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::GetAntialiasMode<ept id="p1">](#crendertarget__getantialiasmode)</ept></source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Retrieves the current antialiasing mode for nontext drawing operations.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::GetDpi<ept id="p1">](#crendertarget__getdpi)</ept></source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Returns the render target's dots per inch (DPI)</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::GetMaximumBitmapSize<ept id="p1">](#crendertarget__getmaximumbitmapsize)</ept></source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Gets the maximum size, in device-dependent units (pixels), of any one bitmap dimension supported by the render target</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::GetPixelFormat<ept id="p1">](#crendertarget__getpixelformat)</ept></source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Retrieves the pixel format and alpha mode of the render target</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::GetPixelSize<ept id="p1">](#crendertarget__getpixelsize)</ept></source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Returns the size of the render target in device pixels</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::GetRenderTarget<ept id="p1">](#crendertarget__getrendertarget)</ept></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Returns ID2D1RenderTarget interface</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::GetSize<ept id="p1">](#crendertarget__getsize)</ept></source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Returns the size of the render target in device-independent pixels</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::GetTags<ept id="p1">](#crendertarget__gettags)</ept></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Gets the label for subsequent drawing operations.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::GetTextAntialiasMode<ept id="p1">](#crendertarget__gettextantialiasmode)</ept></source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Gets the current antialiasing mode for text and glyph drawing operations.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::GetTextRenderingParams<ept id="p1">](#crendertarget__gettextrenderingparams)</ept></source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Retrieves the render target's current text rendering options.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::GetTransform<ept id="p1">](#crendertarget__gettransform)</ept></source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Applies the specified transform to the render target, replacing the existing transformation.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>All subsequent drawing operations occur in the transformed space.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::IsSupported<ept id="p1">](#crendertarget__issupported)</ept></source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Indicates whether the render target supports the specified properties</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::IsValid<ept id="p1">](#crendertarget__isvalid)</ept></source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Checks resource validity</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::PopAxisAlignedClip<ept id="p1">](#crendertarget__popaxisalignedclip)</ept></source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Removes the last axis-aligned clip from the render target.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>After this method is called, the clip is no longer applied to subsequent drawing operations.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::PopLayer<ept id="p1">](#crendertarget__poplayer)</ept></source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Stops redirecting drawing operations to the layer that is specified by the last PushLayer call.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::PushAxisAlignedClip<ept id="p1">](#crendertarget__pushaxisalignedclip)</ept></source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Removes the last axis-aligned clip from the render target.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>After this method is called, the clip is no longer applied to subsequent drawing operations.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::PushLayer<ept id="p1">](#crendertarget__pushlayer)</ept></source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Adds the specified layer to the render target so that it receives all subsequent drawing operations until PopLayer is called.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::RestoreDrawingState<ept id="p1">](#crendertarget__restoredrawingstate)</ept></source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Sets the render target's drawing state to that of the specified ID2D1DrawingStateBlock.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::SaveDrawingState<ept id="p1">](#crendertarget__savedrawingstate)</ept></source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Saves the current drawing state to the specified ID2D1DrawingStateBlock.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::SetAntialiasMode<ept id="p1">](#crendertarget__setantialiasmode)</ept></source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Sets the antialiasing mode of the render target.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The antialiasing mode applies to all subsequent drawing operations, excluding text and glyph drawing operations.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::SetDpi<ept id="p1">](#crendertarget__setdpi)</ept></source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Sets the dots per inch (DPI) of the render target.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::SetTags<ept id="p1">](#crendertarget__settags)</ept></source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Specifies a label for subsequent drawing operations.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::SetTextAntialiasMode<ept id="p1">](#crendertarget__settextantialiasmode)</ept></source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Specifies the antialiasing mode to use for subsequent text and glyph drawing operations.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::SetTextRenderingParams<ept id="p1">](#crendertarget__settextrenderingparams)</ept></source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Specifies text rendering options to be applied to all subsequent text and glyph drawing operations.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::SetTransform<ept id="p1">](#crendertarget__settransform)</ept></source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Overloaded.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Applies the specified transform to the render target, replacing the existing transformation.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>All subsequent drawing operations occur in the transformed space.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Protected Methods</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::VerifyResource<ept id="p1">](#crendertarget__verifyresource)</ept></source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Verifies CD2DResource object validity; creates the object if it didn't already exist.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Public Operators</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::operator ID2D1RenderTarget*<ept id="p1">](#crendertarget__operator_id2d1rendertarget_star)</ept></source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Returns ID2D1RenderTarget interface</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Protected Data Members</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::m_lstResources<ept id="p1">](#crendertarget__m_lstresources)</ept></source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>A list of pointers to CD2DResource objects.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::m_pRenderTarget<ept id="p1">](#crendertarget__m_prendertarget)</ept></source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>A pointer to an ID2D1RenderTarget object.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget::m_pTextFormatDefault<ept id="p1">](#crendertarget__m_ptextformatdefault)</ept></source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>A pointer to CD2DTextFormat object that contains a default text format.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CObject<ept id="p1">](../../mfc/reference/cobject-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRenderTarget<ept id="p1">](../../mfc/reference/crendertarget-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxrendertarget.h</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget___dtorcrendertarget"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::~CRenderTarget</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The destructor.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Called when a render target object is being destroyed.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__attach"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::Attach</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Attaches existing render target interface to the object</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Existing render target interface.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Cannot be NULL</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__begindraw"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::BeginDraw</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Initiates drawing on this render target.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__clear"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::Clear</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Clears the drawing area to the specified color.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The color to which the drawing area is cleared.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__colorref_to_d2dcolor"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::COLORREF_TO_D2DCOLOR</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Converts GDI color and alpha values to the D2D1_COLOR_F object.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>RGB value.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>D2D1_COLOR_F value.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__createcompatiblerendertarget"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::CreateCompatibleRenderTarget</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Creates a new bitmap render target for use during intermediate offscreen drawing that is compatible with the current render target .</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the address of a pointer to a new bitmap render target.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The desired size of the new render target in device-independent pixels if it should be different from the original render target, or NULL.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>For more information, see the Remarks section.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The desired size of the new render target in pixels if it should be different from the original render target, or NULL.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>For more information, see the Remarks section.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The desired pixel format and alpha mode of the new render target, or NULL.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>If the pixel format is set to DXGI_FORMAT_UNKNOWN or if this parameter is null, the new render target uses the same pixel format as the original render target.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>If the alpha mode is D2D1_ALPHA_MODE_UNKNOWN or this parameter is NULL, the alpha mode of the new render target defaults to D2D1_ALPHA_MODE_PREMULTIPLIED.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>For information about supported pixel formats, see Supported Pixel Formats and Alpha Modes.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>A value that specifies whether the new render target must be compatible with GDI.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>If the method succeeds, it returns TRUE.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Otherwise, it returns FALSE.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__crendertarget"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::CRenderTarget</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Constructs a CRenderTarget object.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__destroy"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::Destroy</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Deletes one or more resources</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>If bDeleteResources is TRUE, all resources located in m_lstResources will be automatically destroyed.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>If the method succeeds, it returns TRUE.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Otherwise, it returns FALSE</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__detach"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::Detach</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Detaches render target interface from the object</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Pointer to detached render target interface.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__drawbitmap"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::DrawBitmap</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Draws the formatted text described by the specified IDWriteTextLayout object.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The bitmap to render.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The size and position, in device-independent pixels in the render target's coordinate space, of the area to which the bitmap is drawn.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>If the rectangle is not well-ordered, nothing is drawn, but the render target does not enter an error state.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>A value between 0.0f and 1.0f, inclusive, that specifies an opacity value to apply to the bitmap; this value is multiplied against the alpha values of the bitmap's contents.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The interpolation mode to use if the bitmap is scaled or rotated by the drawing operation.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The size and position, in device-independent pixels in the bitmap's coordinate space, of the area within the bitmap to draw.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__drawellipse"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::DrawEllipse</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Draws the outline of the specified ellipse using the specified stroke style.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The position and radius of the ellipse to draw, in device-independent pixels.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The brush used to paint the ellipse's outline.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The thickness of the ellipse's stroke.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The stroke is centered on the ellipse's outline.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The style of stroke to apply to the ellipse's outline, or NULL to paint a solid stroke.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__drawgeometry"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::DrawGeometry</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Draws the outline of the specified geometry using the specified stroke style.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The geometry to draw.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The brush used to paint the geometry's stroke.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The thickness of the geometry's stroke.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The stroke is centered on the geometry's outline.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>The style of stroke to apply to the geometry's outline, or NULL to paint a solid stroke.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__drawglyphrun"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::DrawGlyphRun</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Draws the specified glyphs.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The origin, in device-independent pixels, of the glyphs' baseline.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The glyphs to render.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The brush used to paint the specified glyphs.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>A value that indicates how glyph metrics are used to measure text when it is formatted.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The default value is DWRITE_MEASURING_MODE_NATURAL.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__drawline"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::DrawLine</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Draws a line between the specified points using the specified stroke style.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>The start point of the line, in device-independent pixels.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The end point of the line, in device-independent pixels.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The brush used to paint the line's stroke.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>A value greater than or equal to 0.0f that specifies the width of the stroke.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>If this parameter isn't specified, it defaults to 1.0f.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The stroke is centered on the line.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The style of stroke to paint, or NULL to paint a solid line.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__drawrectangle"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::DrawRectangle</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Draws the outline of a rectangle that has the specified dimensions and stroke style.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The dimensions of the rectangle to draw, in device-independent pixels</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The brush used to paint the rectangle's stroke</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>A value greater than or equal to 0.0f that specifies the width of the rectangle's stroke.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The stroke is centered on the rectangle's outline.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The style of stroke to paint, or NULL to paint a solid stroke.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__drawroundedrectangle"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::DrawRoundedRectangle</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Draws the outline of the specified rounded rectangle using the specified stroke style.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The dimensions of the rounded rectangle to draw, in device-independent pixels.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The brush used to paint the rounded rectangle's outline.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The width of the rounded rectangle's stroke.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The stroke is centered on the rounded rectangle's outline.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>The default value is 1.0f.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The style of the rounded rectangle's stroke, or NULL to paint a solid stroke.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>The default value is NULL.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__drawtext"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::DrawText</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Draws the specified text using the format information provided by an IDWriteTextFormat object.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>A pointer to an array of Unicode characters to draw.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>The size and position of the area in which the text is drawn.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The brush used to paint the text.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>An object that describes formatting details of the text to draw, such as the font, the font size, and flow direction.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>A value that indicates whether the text should be snapped to pixel boundaries and whether the text should be clipped to the layout rectangle.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The default value is D2D1_DRAW_TEXT_OPTIONS_NONE, which indicates that text should be snapped to pixel boundaries and it should not be clipped to the layout rectangle.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>A value that indicates how glyph metrics are used to measure text when it is formatted.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>The default value is DWRITE_MEASURING_MODE_NATURAL.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__drawtextlayout"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::DrawTextLayout</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Draws the formatted text described by the specified IDWriteTextLayout object.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The point, described in device-independent pixels, at which the upper-left corner of the text described by textLayout is drawn.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>The formatted text to draw.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Any drawing effects that do not inherit from ID2D1Resource are ignored.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>If there are drawing effects that inherit from ID2D1Resource that are not brushes, this method fails and the render target is put in an error state.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>The brush used to paint any text in textLayout that does not already have a brush associated with it as a drawing effect (specified by the IDWriteTextLayout::SetDrawingEffect method).</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>A value that indicates whether the text should be snapped to pixel boundaries and whether the text should be clipped to the layout rectangle.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>The default value is D2D1_DRAW_TEXT_OPTIONS_NONE, which indicates that text should be snapped to pixel boundaries and it should not be clipped to the layout rectangle.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__enddraw"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::EndDraw</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Ends drawing operations on the render target and indicates the current error state and associated tags.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>If the method succeeds, it returns S_OK.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Otherwise, it returns an HRESULT error code.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__fillellipse"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::FillEllipse</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Paints the interior of the specified ellipse.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The position and radius, in device-independent pixels, of the ellipse to paint.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>The brush used to paint the interior of the ellipse.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__fillgeometry"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::FillGeometry</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Paints the interior of the specified geometry.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>The geometry to paint.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>The brush used to paint the geometry's interior.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>The opacity mask to apply to the geometry;NULL for no opacity mask.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>If an opacity mask (the opacityBrush parameter) is specified, brush must be an ID2D1BitmapBrush that has its x- and y-extend modes set to D2D1_EXTEND_MODE_CLAMP.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>For more information, see the Remarks section.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__fillmesh"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::FillMesh</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Paints the interior of the specified mesh.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The mesh to paint.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>The brush used to paint the mesh.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__fillopacitymask"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::FillOpacityMask</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Applies the opacity mask described by the specified bitmap to a brush and uses that brush to paint a region of the render target.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>The position and radius, in device-independent pixels, of the ellipse to paint.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>The brush used to paint the region of the render target specified by destinationRectangle.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>The type of content the opacity mask contains.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>The value is used to determine the color space in which the opacity mask is blended.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>The region of the render target to paint, in device-independent pixels.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>The region of the bitmap to use as the opacity mask, in device-independent pixels.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__fillrectangle"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::FillRectangle</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Paints the interior of the specified rectangle.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The dimension of the rectangle to paint, in device-independent pixels.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>The brush used to paint the rectangle's interior.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__fillroundedrectangle"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::FillRoundedRectangle</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Paints the interior of the specified rounded rectangle.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>The dimensions of the rounded rectangle to paint, in device independent pixels.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>The brush used to paint the interior of the rounded rectangle.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__flush"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::Flush</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Executes all pending drawing commands.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Contains the tag for drawing operations that caused errors or 0 if there were no errors.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Contains the tag for drawing operations that caused errors or 0 if there were no errors.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__getantialiasmode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::GetAntialiasMode</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Retrieves the current antialiasing mode for nontext drawing operations.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>Current antialiasing mode for nontext drawing operations.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__getdpi"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::GetDpi</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Returns the render target's dots per inch (DPI)</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>The render target's dots per inch (DPI).</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__getmaximumbitmapsize"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::GetMaximumBitmapSize</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>Gets the maximum size, in device-dependent units (pixels), of any one bitmap dimension supported by the render target</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>The maximum size, in pixels, of any one bitmap dimension supported by the render target</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__getpixelformat"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::GetPixelFormat</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Retrieves the pixel format and alpha mode of the render target</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>The pixel format and alpha mode of the render target</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__getpixelsize"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::GetPixelSize</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>Returns the size of the render target in device pixels</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>The size of the render target in device pixels</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__getrendertarget"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::GetRenderTarget</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Returns ID2D1RenderTarget interface</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Pointer to an ID2D1RenderTarget interface or NULL if object is not initialized yet.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__getsize"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::GetSize</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Returns the size of the render target in device-independent pixels</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>The current size of the render target in device-independent pixels</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__gettags"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::GetTags</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>Gets the label for subsequent drawing operations.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>Contains the first label for subsequent drawing operations.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>If NULL is specified, no value is retrieved for this parameter.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>Contains the second label for subsequent drawing operations.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>If NULL is specified, no value is retrieved for this parameter.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__gettextantialiasmode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::GetTextAntialiasMode</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>Gets the current antialiasing mode for text and glyph drawing operations.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Current antialiasing mode for text and glyph drawing operations.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__gettextrenderingparams"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::GetTextRenderingParams</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>Retrieves the render target's current text rendering options.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>When this method returns, textRenderingParamscontains the address of a pointer to the render target's current text rendering options.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__gettransform"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::GetTransform</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>Applies the specified transform to the render target, replacing the existing transformation.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>All subsequent drawing operations occur in the transformed space.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>The transform to apply to the render target.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__issupported"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::IsSupported</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Indicates whether the render target supports the specified properties</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>The render target properties to test</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>TRUE if the specified render target properties are supported by this render target; otherwise, FALSE</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__isvalid"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::IsValid</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Checks resource validity</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>TRUE if resource is valid; otherwise FALSE.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__m_lstresources"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::m_lstResources</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>A list of pointers to CD2DResource objects.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__m_prendertarget"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::m_pRenderTarget</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>A pointer to an ID2D1RenderTarget object.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__m_ptextformatdefault"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::m_pTextFormatDefault</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>A pointer to CD2DTextFormat object that contains a default text format.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__operator_id2d1rendertarget_star"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::operator ID2D1RenderTarget*</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Returns ID2D1RenderTarget interface</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>Pointer to an ID2D1RenderTarget interface or NULL if object is not initialized yet.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__popaxisalignedclip"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::PopAxisAlignedClip</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>Removes the last axis-aligned clip from the render target.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>After this method is called, the clip is no longer applied to subsequent drawing operations.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__poplayer"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::PopLayer</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>Stops redirecting drawing operations to the layer that is specified by the last PushLayer call.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__pushaxisalignedclip"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::PushAxisAlignedClip</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>Removes the last axis-aligned clip from the render target.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>After this method is called, the clip is no longer applied to subsequent drawing operations.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>The size and position of the clipping area, in device-independent pixels.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>The antialiasing mode that is used to draw the edges of clip rects that have subpixel boundaries, and to blend the clip with the scene contents.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>The blending is performed once when the PopAxisAlignedClip method is called, and does not apply to each primitive within the layer.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__pushlayer"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::PushLayer</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>Adds the specified layer to the render target so that it receives all subsequent drawing operations until PopLayer is called.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>The content bounds, geometric mask, opacity, opacity mask, and antialiasing options for the layer.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>The layer that receives subsequent drawing operations.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__restoredrawingstate"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::RestoreDrawingState</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>Sets the render target's drawing state to that of the specified ID2D1DrawingStateBlock.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>The new drawing state of the render target.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__savedrawingstate"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::SaveDrawingState</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>Saves the current drawing state to the specified ID2D1DrawingStateBlock.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the current drawing state of the render target.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>This parameter must be initialized before passing it to the method.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__setantialiasmode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::SetAntialiasMode</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>Sets the antialiasing mode of the render target.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>The antialiasing mode applies to all subsequent drawing operations, excluding text and glyph drawing operations.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>The antialiasing mode for future drawing operations.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__setdpi"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::SetDpi</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>Sets the dots per inch (DPI) of the render target.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>A value greater than or equal to zero that specifies the horizontal/verticalDPI of the render target.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__settags"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::SetTags</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>Specifies a label for subsequent drawing operations.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>A label to apply to subsequent drawing operations.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>A label to apply to subsequent drawing operations.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__settextantialiasmode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::SetTextAntialiasMode</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>Specifies the antialiasing mode to use for subsequent text and glyph drawing operations.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>The antialiasing mode to use for subsequent text and glyph drawing operations.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__settextrenderingparams"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::SetTextRenderingParams</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>Specifies text rendering options to be applied to all subsequent text and glyph drawing operations.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>The text rendering options to be applied to all subsequent text and glyph drawing operations; NULL to clear current text rendering options.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__settransform"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::SetTransform</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>Applies the specified transform to the render target, replacing the existing transformation.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>All subsequent drawing operations occur in the transformed space.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>The transform to apply to the render target.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crendertarget__verifyresource"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRenderTarget::VerifyResource</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>Verifies CD2DResource object validity; creates the object if it didn't already exist.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>Pointer to CD2DResource object.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>TRUE is object if valid; otherwise FALSE.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Classes<ept id="p1">](../../mfc/reference/mfc-classes.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>