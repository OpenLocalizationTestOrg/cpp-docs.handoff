<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bd6bd50564211b8fa57fcd55c77fd303c06f610e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\ccommandlineinfo-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7414d82e8a328559f2fb915cae734fa11f5f11bf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e8ef81d4b019639dad5f93e11f5a23dc3a5652c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CCommandLineInfo Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CCommandLineInfo Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Aids in parsing the command line at application startup.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CCommandLineInfo::CCommandLineInfo<ept id="p1">](#ccommandlineinfo__ccommandlineinfo)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a default <ph id="ph1">`CCommandLineInfo`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CCommandLineInfo::ParseParam<ept id="p1">](#ccommandlineinfo__parseparam)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Override this callback to parse individual parameters.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Public Data Members</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CCommandLineInfo::m_bRunAutomated<ept id="p1">](#ccommandlineinfo__m_brunautomated)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Indicates the command-line <bpt id="p1">**</bpt>/Automation<ept id="p1">**</ept> option was found.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CCommandLineInfo::m_bRunEmbedded<ept id="p1">](#ccommandlineinfo__m_brunembedded)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Indicates the command-line <bpt id="p1">**</bpt>/Embedding<ept id="p1">**</ept> option was found.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CCommandLineInfo::m_bShowSplash<ept id="p1">](#ccommandlineinfo__m_bshowsplash)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Indicates if a splash screen should be shown.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CCommandLineInfo::m_nShellCommand<ept id="p1">](#ccommandlineinfo__m_nshellcommand)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Indicates the shell command to be processed.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CCommandLineInfo::m_strDriverName<ept id="p1">](#ccommandlineinfo__m_strdrivername)</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Indicates the driver name if the shell command is Print To; otherwise empty.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CCommandLineInfo::m_strFileName<ept id="p1">](#ccommandlineinfo__m_strfilename)</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Indicates the file name to be opened or printed; empty if the shell command is New or DDE.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CCommandLineInfo::m_strPortName<ept id="p1">](#ccommandlineinfo__m_strportname)</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Indicates the port name if the shell command is Print To; otherwise empty.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CCommandLineInfo::m_strPrinterName<ept id="p1">](#ccommandlineinfo__m_strprintername)</ept></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Indicates the printer name if the shell command is Print To; otherwise empty.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CCommandLineInfo::m_strRestartIdentifier<ept id="p1">](#ccommandlineinfo__m_strrestartidentifier)</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Indicates the unique restart identifier for the restart manager if the restart manager restarted the application.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An MFC application will typically create a local instance of this class in the <bpt id="p1">[</bpt>InitInstance<ept id="p1">](../../mfc/reference/cwinapp-class.md#cwinapp__initinstance)</ept> function of its application object.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This object is then passed to <bpt id="p1">[</bpt>CWinApp::ParseCommandLine<ept id="p1">](../../mfc/reference/cwinapp-class.md#cwinapp__parsecommandline)</ept>, which repeatedly calls <bpt id="p2">[</bpt>ParseParam<ept id="p2">](#ccommandlineinfo__parseparam)</ept> to fill the <ph id="ph1">`CCommandLineInfo`</ph> object.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CCommandLineInfo`</ph> object is then passed to <bpt id="p1">[</bpt>CWinApp::ProcessShellCommand<ept id="p1">](../../mfc/reference/cwinapp-class.md#cwinapp__processshellcommand)</ept> to handle the command-line arguments and flags.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You can use this object to encapsulate the following command-line options and parameters:</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Command-line argument</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Command executed</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>app<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>New file.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>app<ept id="p1">*</ept> filename</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Open file.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>app<ept id="p1">*</ept> <bpt id="p2">**</bpt>/p<ept id="p2">**</ept> filename</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Print file to default printer.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>app<ept id="p1">*</ept> <bpt id="p2">**</bpt>/pt<ept id="p2">**</ept> filename printer driver port</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Print file to the specified printer.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>app<ept id="p1">*</ept> <bpt id="p2">**</bpt>/dde<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Start up and await DDE command.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>app<ept id="p1">*</ept> <bpt id="p2">**</bpt>/Automation<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Start up as an OLE automation server.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>app<ept id="p1">*</ept> <bpt id="p2">**</bpt>/Embedding<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Start up to edit an embedded OLE item.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>app<ept id="p1">*</ept> <bpt id="p2">**</bpt>/Register<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>app<ept id="p1">*</ept> <bpt id="p2">**</bpt>/Regserver<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Informs the application to perform any registration tasks.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>app<ept id="p1">*</ept> <bpt id="p2">**</bpt>/Unregister<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>app<ept id="p1">*</ept> <bpt id="p2">**</bpt>/Unregserver<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Informs the application to perform any un-registration tasks.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Derive a new class from <ph id="ph1">`CCommandLineInfo`</ph> to handle other flags and parameter values.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Override <bpt id="p1">[</bpt>ParseParam<ept id="p1">](#ccommandlineinfo__parseparam)</ept> to handle the new flags.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CObject<ept id="p1">](../../mfc/reference/cobject-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxwin.h</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccommandlineinfo__ccommandlineinfo"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CCommandLineInfo::CCommandLineInfo</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This constructor creates a <ph id="ph1">`CCommandLineInfo`</ph> object with default values.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The default is to show the splash screen ( <ph id="ph1">`m_bShowSplash`</ph><bpt id="p1">**</bpt>=TRUE<ept id="p1">**</ept>) and to execute the New command on the File menu ( <ph id="ph2">`m_nShellCommand`</ph><bpt id="p2">**</bpt>=NewFile<ept id="p2">**</ept>).</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The application framework calls <bpt id="p1">[</bpt>ParseParam<ept id="p1">](#ccommandlineinfo__parseparam)</ept> to fill data members of this object.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFCDocView#54<ept id="p2">](../../mfc/codesnippet/cpp/ccommandlineinfo-class_1.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccommandlineinfo__m_brunautomated"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CCommandLineInfo::m_bRunAutomated</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Indicates that the <bpt id="p1">**</bpt>/Automation<ept id="p1">**</ept> flag was found on the command line.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>, this means start up as an OLE automation server.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccommandlineinfo__m_brunembedded"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CCommandLineInfo::m_bRunEmbedded</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Indicates that the <bpt id="p1">**</bpt>/Embedding<ept id="p1">**</ept> flag was found on the command line.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>, this means start up for editing an embedded OLE item.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccommandlineinfo__m_bshowsplash"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CCommandLineInfo::m_bShowSplash</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Indicates that the splash screen should be displayed.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>, this means the splash screen for this application should be displayed during startup.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The default implementation of <bpt id="p1">[</bpt>ParseParam<ept id="p1">](#ccommandlineinfo__parseparam)</ept> sets this data member to <bpt id="p2">**</bpt>TRUE<ept id="p2">**</ept> if <bpt id="p3">[</bpt>m_nShellCommand<ept id="p3">](#ccommandlineinfo__m_nshellcommand)</ept> is equal to <bpt id="p4">**</bpt>CCommandLineInfo::FileNew<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccommandlineinfo__m_nshellcommand"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CCommandLineInfo::m_nShellCommand</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Indicates the shell command for this instance of the application.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The type for this data member is the following enumerated type, which is defined in the <ph id="ph1">`CCommandLineInfo`</ph> class.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For a brief description of these values, see the following list.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CCommandLineInfo::FileNew`</ph> Indicates that no file name was found on the command line.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CCommandLineInfo::FileOpen`</ph> Indicates that a file name was found on the command line and that none of the following flags were found on the command line: <ph id="ph2">`/p`</ph>, <ph id="ph3">`/pt`</ph>, <ph id="ph4">`/dde`</ph>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CCommandLineInfo::FilePrint`</ph> Indicates that the <ph id="ph2">`/p`</ph> flag was found on the command line.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CCommandLineInfo::FilePrintTo`</ph> Indicates that the <ph id="ph2">`/pt`</ph> flag was found on the command line.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CCommandLineInfo::FileDDE`</ph> Indicates that the <ph id="ph2">`/dde`</ph> flag was found on the command line.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CCommandLineInfo::AppRegister`</ph> Indicates that the <ph id="ph2">`/Register`</ph> or <ph id="ph3">`/Regserver`</ph> flag was found on the command line and the application was asked to register.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CCommandLineInfo::AppUnregister`</ph> Indicates that the <ph id="ph2">`/Unregister`</ph> or <ph id="ph3">`/Unregserver`</ph> application was asked to unregister.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CCommandLineInfo::RestartByRestartManager`</ph> Indicates that the application was restarted by the restart manager.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CCommandLineInfo::FileNothing`</ph> Turns off the display of a new MDI child window on startup.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>By design, Application Wizard-generated MDI applications display a new child window on startup.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>To turn off this feature, an application can use <ph id="ph1">`CCommandLineInfo::FileNothing`</ph> as the shell command when it calls <bpt id="p1">[</bpt>ProcessShellCommand<ept id="p1">](../../mfc/reference/cwinapp-class.md#cwinapp__processshellcommand)</ept>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ProcessShellCommand`</ph> is called by the <ph id="ph2">`InitInstance( )`</ph> of all <ph id="ph3">`CWinApp`</ph> derived classes.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFCDocView#55<ept id="p2">](../../mfc/codesnippet/cpp/ccommandlineinfo-class_2.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccommandlineinfo__m_strdrivername"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CCommandLineInfo::m_strDriverName</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Stores the value of the third non-flag parameter on the command line.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>This parameter is typically the name of the printer driver for a Print To shell command.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The default implementation of <bpt id="p1">[</bpt>ParseParam<ept id="p1">](#ccommandlineinfo__parseparam)</ept> sets this data member only if the <bpt id="p2">**</bpt>/pt<ept id="p2">**</ept> flag was found on the command line.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccommandlineinfo__m_strfilename"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CCommandLineInfo::m_strFileName</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Stores the value of the first non-flag parameter on the command line.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This parameter is typically the name of the file to open.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccommandlineinfo__m_strportname"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CCommandLineInfo::m_strPortName</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Stores the value of the fourth non-flag parameter on the command line.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>This parameter is typically the name of the printer port for a Print To shell command.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The default implementation of <bpt id="p1">[</bpt>ParseParam<ept id="p1">](#ccommandlineinfo__parseparam)</ept> sets this data member only if the <bpt id="p2">**</bpt>/pt<ept id="p2">**</ept> flag was found on the command line.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccommandlineinfo__m_strprintername"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CCommandLineInfo::m_strPrinterName</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Stores the value of the second non-flag parameter on the command line.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>This parameter is typically the name of the printer for a Print To shell command.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The default implementation of <bpt id="p1">[</bpt>ParseParam<ept id="p1">](#ccommandlineinfo__parseparam)</ept> sets this data member only if the <bpt id="p2">**</bpt>/pt<ept id="p2">**</ept> flag was found on the command line.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccommandlineinfo__m_strrestartidentifier"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CCommandLineInfo::m_strRestartIdentifier</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The unique restart identifier on the command line.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The restart identifier is unique for each instance of the application.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>If the restart manager exits the application and is configured to restart it, the restart manager executes the application from the command line with the restart identifier as an optional parameter.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>When the restart manager uses the restart identifier, the application can reopen the previously open documents and recover autosaved files.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccommandlineinfo__parseparam"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CCommandLineInfo::ParseParam</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The framework calls this function to parse/interpret individual parameters from the command line.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The second version differs from the first only in Unicode projects.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The parameter or flag.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>bFlag<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Indicates whether <ph id="ph1">`pszParam`</ph> is a parameter or a flag.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Indicates if this is the last parameter or flag on the command line.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CWinApp::ParseCommandLine<ept id="p1">](../../mfc/reference/cwinapp-class.md#cwinapp__parsecommandline)</ept> calls <ph id="ph1">`ParseParam`</ph> once for each parameter or flag on the command line, passing the argument to <ph id="ph2">`pszParam`</ph>.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>If the first character of the parameter is a ' <bpt id="p1">**</bpt><ph id="ph1">-</ph><ept id="p1">**</ept>' or a ' <bpt id="p2">**</bpt><ph id="ph2">/</ph><ept id="p2">**</ept>', then it is removed and <bpt id="p3">*</bpt>bFlag<ept id="p3">*</ept> is set to <bpt id="p4">**</bpt>TRUE<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>When parsing the final parameter, <ph id="ph1">`bLast`</ph> is set to <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The default implementation of this function recognizes the following flags: <bpt id="p1">**</bpt>/p<ept id="p1">**</ept>, <bpt id="p2">**</bpt>/pt<ept id="p2">**</ept>, <bpt id="p3">**</bpt>/dde<ept id="p3">**</ept>, <bpt id="p4">**</bpt>/Automation<ept id="p4">**</ept>, and <bpt id="p5">**</bpt>/Embedding<ept id="p5">**</ept>, as shown in the following table:</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Command-line argument</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Command executed</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>app<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>New file.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>app<ept id="p1">*</ept> filename</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Open file.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>app<ept id="p1">*</ept> <bpt id="p2">**</bpt>/p<ept id="p2">**</ept> filename</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Print file to default printer.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>app<ept id="p1">*</ept> <bpt id="p2">**</bpt>/pt<ept id="p2">**</ept> filename printer driver port</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Print file to the specified printer.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>app<ept id="p1">*</ept> <bpt id="p2">**</bpt>/dde<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Start up and await DDE command.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>app<ept id="p1">*</ept> <bpt id="p2">**</bpt>/Automation<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Start up as an OLE automation server.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>app<ept id="p1">*</ept> <bpt id="p2">**</bpt>/Embedding<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Start up to edit an embedded OLE item.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>app<ept id="p1">*</ept> <bpt id="p2">**</bpt>/Register<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>app<ept id="p1">*</ept> <bpt id="p2">**</bpt>/Regserver<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Informs the application to perform any registration tasks.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>app<ept id="p1">*</ept> <bpt id="p2">**</bpt>/Unregister<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>app<ept id="p1">*</ept> <bpt id="p2">**</bpt>/Unregserver<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Informs the application to perform any un-registration tasks.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>This information is stored in <bpt id="p1">[</bpt>m_bRunAutomated<ept id="p1">](#ccommandlineinfo__m_brunautomated)</ept>, <bpt id="p2">[</bpt>m_bRunEmbedded<ept id="p2">](#ccommandlineinfo__m_brunembedded)</ept>, and <bpt id="p3">[</bpt>m_nShellCommand<ept id="p3">](#ccommandlineinfo__m_nshellcommand)</ept>.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Flags are marked by either a forward-slash ' <bpt id="p1">**</bpt><ph id="ph1">/</ph><ept id="p1">**</ept>' or hyphen ' <bpt id="p2">**</bpt><ph id="ph2">-</ph><ept id="p2">**</ept>'.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The default implementation puts the first non-flag parameter into <bpt id="p1">[</bpt>m_strFileName<ept id="p1">](#ccommandlineinfo__m_strfilename)</ept>.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>In the case of the <bpt id="p1">**</bpt>/pt<ept id="p1">**</ept> flag, the default implementation puts the second, third, and fourth non-flag parameters into <bpt id="p2">[</bpt>m_strPrinterName<ept id="p2">](#ccommandlineinfo__m_strprintername)</ept>, <bpt id="p3">[</bpt>m_strDriverName<ept id="p3">](#ccommandlineinfo__m_strdrivername)</ept>, and <bpt id="p4">[</bpt>m_strPortName<ept id="p4">](#ccommandlineinfo__m_strportname)</ept>, respectively.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The default implementation also sets <bpt id="p1">[</bpt>m_bShowSplash<ept id="p1">](#ccommandlineinfo__m_bshowsplash)</ept> to <bpt id="p2">**</bpt>TRUE<ept id="p2">**</ept> only in the case of a new file.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>In the case of a new file, the user has taken action involving the application itself.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>In any other case, including opening existing files using the shell, the user action involves the file directly.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>In a document-centric standpoint, the splash screen does not need to announce the application starting up.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Override this function in your derived class to handle other flag and parameter values.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CObject Class<ept id="p1">](../../mfc/reference/cobject-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Hierarchy Chart<ept id="p1">](../../mfc/hierarchy-chart.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CWinApp::ParseCommandLine<ept id="p1">](../../mfc/reference/cwinapp-class.md#cwinapp__parsecommandline)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CWinApp::ProcessShellCommand<ept id="p1">](../../mfc/reference/cwinapp-class.md#cwinapp__processshellcommand)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>