<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9a5daa9b2ae267045b53658801ffdff3c080a771</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\cricheditctrl-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8c9a452b3c9a83f05c19271e430f33ad022876fd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae1a9fcecb472edfcfec437436ca4944599ce913</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CRichEditCtrl Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CRichEditCtrl Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Provides the functionality of the rich edit control.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::CRichEditCtrl<ept id="p1">](#cricheditctrl__cricheditctrl)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::CanPaste<ept id="p1">](#cricheditctrl__canpaste)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Determines if the contents of the Clipboard can be pasted into this rich edit control.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::CanRedo<ept id="p1">](#cricheditctrl__canredo)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Determines whether there are any actions in the control's redo queue.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::CanUndo<ept id="p1">](#cricheditctrl__canundo)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Determines if an editing operation can be undone.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::CharFromPos<ept id="p1">](#cricheditctrl__charfrompos)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Retrieves information about the character closest to a specified point in the client area of an edit control.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::Clear<ept id="p1">](#cricheditctrl__clear)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Clears the current selection.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::Copy<ept id="p1">](#cricheditctrl__copy)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Copies the current selection to the Clipboard.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::Create<ept id="p1">](#cricheditctrl__create)</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Creates the Windows rich edit control and associates it with this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::CreateEx<ept id="p1">](#cricheditctrl__createex)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Creates the Windows rich edit control with the specified extended Windows styles and associates it with this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::Cut<ept id="p1">](#cricheditctrl__cut)</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Cuts the current selection to the Clipboard.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::DisplayBand<ept id="p1">](#cricheditctrl__displayband)</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Displays a portion of the contents of this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::EmptyUndoBuffer<ept id="p1">](#cricheditctrl__emptyundobuffer)</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Resets (clears) the undo flag of this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::FindText<ept id="p1">](#cricheditctrl__findtext)</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Locates text within this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::FindWordBreak<ept id="p1">](#cricheditctrl__findwordbreak)</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Finds the next word break before or after the specified character position, or retrieves information about the character at that position.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::FormatRange<ept id="p1">](#cricheditctrl__formatrange)</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Formats a range of text for the target output device.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::GetCharPos<ept id="p1">](#cricheditctrl__getcharpos)</ept></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Determines the location of a given character within this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::GetDefaultCharFormat<ept id="p1">](#cricheditctrl__getdefaultcharformat)</ept></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Retrieves the current default character formatting attributes in this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::GetEventMask<ept id="p1">](#cricheditctrl__geteventmask)</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Retrieves the event mask for this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::GetFirstVisibleLine<ept id="p1">](#cricheditctrl__getfirstvisibleline)</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Determines the topmost visible line in this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::GetIRichEditOle<ept id="p1">](#cricheditctrl__getiricheditole)</ept></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the <ph id="ph1">`IRichEditOle`</ph> interface for this rich edit control.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::GetLimitText<ept id="p1">](#cricheditctrl__getlimittext)</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets the limit on the amount of text a user can enter into this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::GetLine<ept id="p1">](#cricheditctrl__getline)</ept></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Retrieves a line of text from this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::GetLineCount<ept id="p1">](#cricheditctrl__getlinecount)</ept></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Retrieves the number of lines in this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::GetModify<ept id="p1">](#cricheditctrl__getmodify)</ept></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Determines if the contents of this <ph id="ph1">`CRichEditCtrl`</ph> object have changed since the last save.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::GetOptions<ept id="p1">](#cricheditctrl__getoptions)</ept></source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Retrieves the rich edit control options.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::GetParaFormat<ept id="p1">](#cricheditctrl__getparaformat)</ept></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Retrieves the paragraph formatting attributes in the current selection in this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::GetPunctuation<ept id="p1">](#cricheditctrl__getpunctuation)</ept></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Retrieves the current punctuation characters for the rich edit control.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This message is available only in Asian-language versions of the operating system.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::GetRect<ept id="p1">](#cricheditctrl__getrect)</ept></source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Retrieves the formatting rectangle for this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::GetRedoName<ept id="p1">](#cricheditctrl__getredoname)</ept></source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Retrieves the type of the next action, if any, in the control's redo queue.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::GetSel<ept id="p1">](#cricheditctrl__getsel)</ept></source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Gets the starting and ending positions of the current selection in this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::GetSelectionCharFormat<ept id="p1">](#cricheditctrl__getselectioncharformat)</ept></source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Retrieves the character formatting attributes in the current selection in this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::GetSelectionType<ept id="p1">](#cricheditctrl__getselectiontype)</ept></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Retrieves the type of contents in the current selection in this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::GetSelText<ept id="p1">](#cricheditctrl__getseltext)</ept></source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Gets the text of the current selection in this <ph id="ph1">`CRichEditCtrl`</ph> object</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::GetTextLength<ept id="p1">](#cricheditctrl__gettextlength)</ept></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Retrieves the length of the text, in characters, in this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Does not include the terminating null character.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::GetTextLengthEx<ept id="p1">](#cricheditctrl__gettextlengthex)</ept></source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Retrieves the number of characters or bytes in the rich edit view.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Accepts a list of flags to indicate the method of determining length of the text in a rich edit control</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::GetTextMode<ept id="p1">](#cricheditctrl__gettextmode)</ept></source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Retrieves the current text mode and undo level of a rich edit control.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::GetTextRange<ept id="p1">](#cricheditctrl__gettextrange)</ept></source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Retrieves the specified range of text.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::GetUndoName<ept id="p1">](#cricheditctrl__getundoname)</ept></source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Retrieves the type of the next undo action, if any.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::GetWordWrapMode<ept id="p1">](#cricheditctrl__getwordwrapmode)</ept></source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Retrieves the current word wrapping and word breaking options for the rich edit control.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This message is available only in Asian-language versions of the operating system.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::HideSelection<ept id="p1">](#cricheditctrl__hideselection)</ept></source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Shows or hides the current selection.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::LimitText<ept id="p1">](#cricheditctrl__limittext)</ept></source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Limits the amount of text a user can enter into the <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::LineFromChar<ept id="p1">](#cricheditctrl__linefromchar)</ept></source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Determines which line contains the given character.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::LineIndex<ept id="p1">](#cricheditctrl__lineindex)</ept></source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Retrieves the character index of a given line in this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::LineLength<ept id="p1">](#cricheditctrl__linelength)</ept></source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Retrieves the length of a given line in this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::LineScroll<ept id="p1">](#cricheditctrl__linescroll)</ept></source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Scrolls the text in this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::Paste<ept id="p1">](#cricheditctrl__paste)</ept></source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Inserts the contents of the Clipboard into this rich edit control.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::PasteSpecial<ept id="p1">](#cricheditctrl__pastespecial)</ept></source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Inserts the contents of the Clipboard into this rich edit control in the specified data format.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::PosFromChar<ept id="p1">](#cricheditctrl__posfromchar)</ept></source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Retrieves the client area coordinates of a specified character in an edit control.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::Redo<ept id="p1">](#cricheditctrl__redo)</ept></source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Redoes the next action in the control's redo queue.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::ReplaceSel<ept id="p1">](#cricheditctrl__replacesel)</ept></source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Replaces the current selection in this <ph id="ph1">`CRichEditCtrl`</ph> object with specified text.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::RequestResize<ept id="p1">](#cricheditctrl__requestresize)</ept></source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Forces this <ph id="ph1">`CRichEditCtrl`</ph> object to send request resize notifications.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::SetAutoURLDetect<ept id="p1">](#cricheditctrl__setautourldetect)</ept></source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Indicates if the auto URL detection is active in a rich edit control.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::SetBackgroundColor<ept id="p1">](#cricheditctrl__setbackgroundcolor)</ept></source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Sets the background color in this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::SetDefaultCharFormat<ept id="p1">](#cricheditctrl__setdefaultcharformat)</ept></source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Sets the current default character formatting attributes in this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::SetEventMask<ept id="p1">](#cricheditctrl__seteventmask)</ept></source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Sets the event mask for this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::SetModify<ept id="p1">](#cricheditctrl__setmodify)</ept></source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Sets or clears the modification flag for this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::SetOLECallback<ept id="p1">](#cricheditctrl__setolecallback)</ept></source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Sets the <ph id="ph1">`IRichEditOleCallback`</ph> COM object for this rich edit control.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::SetOptions<ept id="p1">](#cricheditctrl__setoptions)</ept></source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Sets the options for this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::SetParaFormat<ept id="p1">](#cricheditctrl__setparaformat)</ept></source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Sets the paragraph formatting attributes in the current selection in this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::SetPunctuation<ept id="p1">](#cricheditctrl__setpunctuation)</ept></source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Sets the punctuation characters for a rich edit control.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>This message is available only in Asian-language versions of the operating system.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::SetReadOnly<ept id="p1">](#cricheditctrl__setreadonly)</ept></source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Sets the read-only option for this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::SetRect<ept id="p1">](#cricheditctrl__setrect)</ept></source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Sets the formatting rectangle for this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::SetSel<ept id="p1">](#cricheditctrl__setsel)</ept></source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Sets the selection in this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::SetSelectionCharFormat<ept id="p1">](#cricheditctrl__setselectioncharformat)</ept></source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Sets the character formatting attributes in the current selection in this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::SetTargetDevice<ept id="p1">](#cricheditctrl__settargetdevice)</ept></source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Sets the target output device for this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::SetTextMode<ept id="p1">](#cricheditctrl__settextmode)</ept></source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Sets the text mode or undo level of a rich edit control.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The message fails if the control contains text.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::SetUndoLimit<ept id="p1">](#cricheditctrl__setundolimit)</ept></source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Sets the maximum number of actions that can stored in the undo queue.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::SetWordCharFormat<ept id="p1">](#cricheditctrl__setwordcharformat)</ept></source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Sets the character formatting attributes in the current word in this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::SetWordWrapMode<ept id="p1">](#cricheditctrl__setwordwrapmode)</ept></source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Sets the word-wrapping and word-breaking options for the rich edit control.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>This message is available only in Asian-language versions of the operating system.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::StopGroupTyping<ept id="p1">](#cricheditctrl__stopgrouptyping)</ept></source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Stops the control from collecting additional typing actions into the current undo action.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The control stores the next typing action, if any, into a new action in the undo queue.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::StreamIn<ept id="p1">](#cricheditctrl__streamin)</ept></source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Inserts text from an input stream into this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::StreamOut<ept id="p1">](#cricheditctrl__streamout)</ept></source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Stores text from this <ph id="ph1">`CRichEditCtrl`</ph> object into an output stream.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRichEditCtrl::Undo<ept id="p1">](#cricheditctrl__undo)</ept></source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Reverses the last editing operation.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>A "rich edit control" is a window in which the user can enter and edit text.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The text can be assigned character and paragraph formatting, and can include embedded OLE objects.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Rich edit controls provide a programming interface for formatting text.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>However, an application must implement any user interface components necessary to make formatting operations available to the user.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>This Windows Common control (and therefore the <ph id="ph1">`CRichEditCtrl`</ph> class) is available only to programs running under Windows 95/98 and Windows NT versions 3.51 and later.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CRichEditCtrl`</ph> class supports versions 2.0 and 3.0 of the <ph id="ph2">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> rich edit control.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>If you are using a rich edit control in a dialog box (regardless whether your application is SDI, MDI, or dialog-based), you must call <bpt id="p1">[</bpt>AfxInitRichEdit<ept id="p1">](application-information-and-management.md#afxinitrichedit)</ept> once before the dialog box is displayed.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>A typical place to call this function is in your program's <ph id="ph1">`InitInstance`</ph> member function.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>You do not need to call it for each time you display the dialog box, only the first time.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>You do not have to call <ph id="ph1">`AfxInitRichEdit`</ph> if you are working with <ph id="ph2">`CRichEditView`</ph>.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>For more information on using <ph id="ph1">`CRichEditCtrl`</ph>, see:</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Controls<ept id="p1">](../../mfc/controls-mfc.md)</ept></source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Using CRichEditCtrl<ept id="p1">](../../mfc/using-cricheditctrl.md)</ept></source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Knowledge Base article Q259949 : INFO: SetCaretPos() Is Not Appropriate with CEdit or CRichEditCtrl Controls</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>For an example of using a rich edit control in an MFC application, see the <bpt id="p1">[</bpt>WORDPAD<ept id="p1">](../../visual-cpp-samples.md)</ept> sample application.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CObject<ept id="p1">](../../mfc/reference/cobject-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CCmdTarget<ept id="p1">](../../mfc/reference/ccmdtarget-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CWnd<ept id="p1">](../../mfc/reference/cwnd-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxcmn.h</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__canpaste"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::CanPaste</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Determines if the rich edit control can paste the specified Clipboard format.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The Clipboard data format to query.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>This parameter can be one of the predefined Clipboard formats or the value returned by <bpt id="p1">[</bpt>RegisterClipboardFormat<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms649049)</ept>.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Nonzero if the Clipboard format can be pasted; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`nFormat`</ph> is 0, <ph id="ph2">`CanPaste`</ph> will try any format currently on the Clipboard.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_CANPASTE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787993)</ept> message and <bpt id="p2">[</bpt>RegisterClipboardFormat<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms649049)</ept> function in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#1<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_1.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__canredo"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::CanRedo</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Determines if the redo queue contains any actions.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Nonzero if the redo queue contains actions, otherwise 0.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>To discover the name of the operation in the redo queue, call <bpt id="p1">[</bpt>CRichEditCtrl::GetRedoName<ept id="p1">](#cricheditctrl__getredoname)</ept>.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>To redo the most recent Undo operation, call <bpt id="p1">[</bpt>Redo<ept id="p1">](#cricheditctrl__redo)</ept>.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_CANREDO<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787995)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__canundo"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::CanUndo</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Determines if the last editing operation can be undone.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Nonzero if the last edit operation can be undone by a call to the <bpt id="p1">[</bpt>Undo<ept id="p1">](#cricheditctrl__undo)</ept> member function; 0 if it cannot be undone.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_CANUNDO<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775468)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#2<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_2.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__charfrompos"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::CharFromPos</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Retrieves information about the character at the point specified by the parameter <ph id="ph1">`pt`</ph>.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>CPoint<ept id="p1">](../../atl-mfc-shared/reference/cpoint-class.md)</ept> object containing the coordinates of the specified point.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The zero-based character index of the character nearest the specified point.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>If the specified point is beyond the last character in the control, the return value indicates the last character in the control.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>This member function works with a rich edit control.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>To get the information for an edit control, call <bpt id="p1">[</bpt>CEdit::CharFromPos<ept id="p1">](../../mfc/reference/cedit-class.md#cedit__charfrompos)</ept>.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_CHARFROMPOS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb761566)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__clear"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::Clear</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Deletes (clears) the current selection (if any) in the rich edit control.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The deletion performed by <bpt id="p1">**</bpt>Clear<ept id="p1">**</ept> can be undone by calling the <bpt id="p2">[</bpt>Undo<ept id="p2">](#cricheditctrl__undo)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>To delete the current selection and place the deleted contents onto the Clipboard, call the <bpt id="p1">[</bpt>Cut<ept id="p1">](#cricheditctrl__cut)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>WM_CLEAR<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms649020)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#3<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_3.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__copy"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::Copy</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Copies the current selection (if any) in the rich edit control to the Clipboard.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>WM_COPY<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms649022)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#4<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_4.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__create"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::Create</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Creates the Windows rich edit control and associates it with this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Specifies the edit control's style.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Apply a combination of the window styles listed in the <bpt id="p1">**</bpt>Remarks<ept id="p1">**</ept> section below, and <bpt id="p2">[</bpt>edit control styles<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/bb775464)</ept>, described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Specifies the edit control's size and position.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Can be a <bpt id="p1">[</bpt>CRect<ept id="p1">](../../atl-mfc-shared/reference/crect-class.md)</ept> object or <bpt id="p2">[</bpt>RECT<ept id="p2">](../../mfc/reference/rect-structure1.md)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Specifies the edit control's parent window (often a <bpt id="p1">[</bpt>CDialog<ept id="p1">](../../mfc/reference/cdialog-class.md)</ept>).</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>It must not be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Specifies the edit control's ID.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Nonzero if initialization is successful; otherwise, 0.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>You construct a <ph id="ph1">`CRichEditCtrl`</ph> object in two steps.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>First, call the <bpt id="p1">[</bpt>CRichEditCtrl<ept id="p1">](#cricheditctrl__cricheditctrl)</ept> constructor, then call <bpt id="p2">**</bpt>Create<ept id="p2">**</ept>, which creates the Windows edit control and attaches it to the <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>When you create a rich edit control with this function, first you must load the necessary common controls library.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>To load the libary, call the global function <bpt id="p1">[</bpt>AfxInitRichEdit<ept id="p1">](application-information-and-management.md#afxinitrichedit)</ept>, which in turn initializes the common controls library.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>You need to call <ph id="ph1">`AfxInitRichEdit`</ph> only once in your process.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>When <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> executes, Windows sends the <bpt id="p2">[</bpt>WM_NCCREATE<ept id="p2">](../../mfc/reference/cwnd-class.md#cwnd__onnccreate)</ept>, <bpt id="p3">[</bpt>WM_NCCALCSIZE<ept id="p3">](../../mfc/reference/cwnd-class.md#cwnd__onnccalcsize)</ept>, <bpt id="p4">[</bpt>WM_CREATE<ept id="p4">](../../mfc/reference/cwnd-class.md#cwnd__oncreate)</ept>, and <bpt id="p5">[</bpt>WM_GETMINMAXINFO<ept id="p5">](../../mfc/reference/cwnd-class.md#cwnd__ongetminmaxinfo)</ept> messages to the edit control.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>These messages are handled by default by the <bpt id="p1">[</bpt>OnNcCreate<ept id="p1">](../../mfc/reference/cwnd-class.md#cwnd__onnccreate)</ept>, <bpt id="p2">[</bpt>OnNcCalcSize<ept id="p2">](../../mfc/reference/cwnd-class.md#cwnd__onnccalcsize)</ept>, <bpt id="p3">[</bpt>OnCreate<ept id="p3">](../../mfc/reference/cwnd-class.md#cwnd__oncreate)</ept>, and <bpt id="p4">[</bpt>OnGetMinMaxInfo<ept id="p4">](../../mfc/reference/cwnd-class.md#cwnd__ongetminmaxinfo)</ept> member functions in the <ph id="ph1">`CWnd`</ph> base class.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>To extend the default message handling, derive a class from <ph id="ph1">`CRichEditCtrl`</ph>, add a message map to the new class, and override the above message-handler member functions.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Override <ph id="ph1">`OnCreate`</ph>, for example, to perform needed initialization for the new class.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Apply the following <bpt id="p1">[</bpt>window styles<ept id="p1">](../../mfc/reference/window-styles.md)</ept> to an edit control.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>WS_CHILD<ept id="p1">**</ept> Always.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>WS_VISIBLE<ept id="p1">**</ept> Usually.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>WS_DISABLED<ept id="p1">**</ept> Rarely.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>WS_GROUP<ept id="p1">**</ept> To group controls.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>WS_TABSTOP<ept id="p1">**</ept> To include edit control in the tabbing order.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>For more information about window styles, see <bpt id="p1">[</bpt>CreateWindow<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632679)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#5<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_5.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__createex"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::CreateEx</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Creates a control (a child window) and associates it with the <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Specifies the extended style of the control being created.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>For a list of extended Windows styles, see the <ph id="ph1">`dwExStyle`</ph> parameter for <bpt id="p1">[</bpt>CreateWindowEx<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632680)</ept> in the <ph id="ph2">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Specifies the edit control's style.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Apply a combination of the window styles listed in the <bpt id="p1">**</bpt>Remarks<ept id="p1">**</ept> section of <bpt id="p2">[</bpt>Create<ept id="p2">](#cricheditctrl__create)</ept> and <bpt id="p3">[</bpt>edit control styles<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/bb775464)</ept>, described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">[</bpt>RECT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure describing the size and position of the window to be created, in client coordinates of <ph id="ph1">`pParentWnd`</ph>.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>A pointer to the window that is the control's parent.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>The control's child-window ID.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`CreateEx`</ph> instead of <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> to apply extended Windows styles, specified by the Windows extended style preface <bpt id="p2">**</bpt>WS_EX_<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__cricheditctrl"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::CRichEditCtrl</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>Create<ept id="p1">](#cricheditctrl__create)</ept> to construct the Windows rich edit control.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#6<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_6.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__cut"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::Cut</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Delete (cuts) the current selection (if any) in the rich edit control and copies the deleted text to the Clipboard.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>The deletion performed by <bpt id="p1">**</bpt>Cut<ept id="p1">**</ept> can be undone by calling the <bpt id="p2">[</bpt>Undo<ept id="p2">](#cricheditctrl__undo)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>To delete the current selection without placing the deleted text into the Clipboard, call the <bpt id="p1">[</bpt>Clear<ept id="p1">](#cricheditctrl__clear)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>WM_CUT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms649023)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#7<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_7.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__displayband"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::DisplayBand</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Displays a portion of the contents of the rich edit control (text and OLE items), as previously formatted by <bpt id="p1">[</bpt>FormatRange<ept id="p1">](#cricheditctrl__formatrange)</ept>.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>RECT<ept id="p1">](../../mfc/reference/rect-structure1.md)</ept> or <bpt id="p2">[</bpt>CRect<ept id="p2">](../../atl-mfc-shared/reference/crect-class.md)</ept> object specifying the area of the device to display the text.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>Nonzero if the display of the formatted text succeeds, otherwise, 0.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>The text and OLE items are clipped to the area specified by the pointer <ph id="ph1">`pDisplayRect`</ph>.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_DISPLAYBAND<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787997)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CRichEditCtrl::FormatRange<ept id="p1">](#cricheditctrl__formatrange)</ept>.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__emptyundobuffer"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::EmptyUndoBuffer</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Resets (clear) the undo flag of this rich edit control.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>The control will now be unable to undo the last editing operation.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>The undo flag is set whenever an operation within the rich edit control can be undone.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>The undo flag is automatically cleared whenever you call the <bpt id="p1">[</bpt>CWnd<ept id="p1">](../../mfc/reference/cwnd-class.md)</ept> member function <bpt id="p2">[</bpt>SetWindowText<ept id="p2">](../../mfc/reference/cwnd-class.md#cwnd__setwindowtext)</ept>.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_EMPTYUNDOBUFFER<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb761568)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#8<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_8.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__findtext"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::FindText</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>Finds text within the rich edit control.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>For a list of possible values, see <ph id="ph1">`wParam`</ph> in <bpt id="p1">[</bpt>EM_FINDTEXTEXT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb788011)</ept> in the <ph id="ph2">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>pFindText<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>FINDTEXTEX<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787909)</ept> structure giving the parameters for the search and returning the range where the match was found.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Zero-based character position of the next match; – 1 if there are no more matches.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>You can search either up or down by setting the proper range parameters in the <bpt id="p1">[</bpt>CHARRANGE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787885)</ept> structure within the <bpt id="p2">**</bpt>FINDTEXTEX<ept id="p2">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_FINDTEXTEX<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb788011)</ept> message and <bpt id="p2">[</bpt>FINDTEXTEX<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/bb787909)</ept> structure in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#9<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_9.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__findwordbreak"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::FindWordBreak</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Finds the next word break before or after the position specified by <ph id="ph1">`nStart`</ph>.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Indicates the action to take.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>For a list of possible values, see the description for the parameter <ph id="ph1">`code`</ph> in <bpt id="p1">**</bpt>EM_FINDWORDBREAK<ept id="p1">**</ept> in the <ph id="ph2">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>The zero-based character position from which to start.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>Based on the parameter <ph id="ph1">`nCode`</ph>.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_FINDWORDBREAK<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb788018)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>You can use this member function to retrieve information about a character at a given position.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__formatrange"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::FormatRange</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Formats a range of text in a rich edit control for a specific device.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>pfr<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>FORMATRANGE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787911)</ept> structure which contains information about the output device.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> indicates that cached information within the rich edit control can be freed.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>bDisplay<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Indicates if the text should be rendered.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>, the text is just measured.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>The index of the last character that fits in the region plus one.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>Typically, this call is followed by a call to <bpt id="p1">[</bpt>DisplayBand<ept id="p1">](#cricheditctrl__displayband)</ept>.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_FORMATRANGE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb788020)</ept> message and <bpt id="p2">[</bpt>FORMATRANGE<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/bb787911)</ept> structure in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#10<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_10.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__getcharpos"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::GetCharPos</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Gets the position (top-left corner) of a given character within this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>Zero-based index of the character.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>The location of the top-left corner of the character specified by <ph id="ph1">`lChar`</ph>.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>The character is specified by giving its zero-based index value.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`lChar`</ph> is greater than the index of the last character in this <ph id="ph2">`CRichEditCtrl`</ph> object, the return value specifies the coordinates of the character position just past the last character in this <ph id="ph3">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_POSFROMCHAR<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb761631)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__getdefaultcharformat"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::GetDefaultCharFormat</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>Gets the default character formatting attributes of this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>In the first version, a pointer to a <bpt id="p1">**</bpt>CHARFORMAT<ept id="p1">**</ept> structure holding the default character formatting attributes.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>In the second version, a pointer to a <bpt id="p1">**</bpt>CHARFORMAT2<ept id="p1">**</ept> structure, which is a Rich Edit 2.0 extension to the <bpt id="p2">**</bpt>CHARFORMAT<ept id="p2">**</ept> structure, holding the default character formatting attributes.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>dwMask<ept id="p1">**</ept> data member of <ph id="ph1">`cf`</ph>.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>It specified the default character formatting attributes.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">**</bpt>EM_GETCHARFORMAT<ept id="p1">**</ept> message and the <bpt id="p2">**</bpt>CHARFORMAT<ept id="p2">**</ept> and <bpt id="p3">**</bpt>CHARFORMAT2<ept id="p3">**</ept> structures in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>SetDefaultCharFormat<ept id="p1">](#cricheditctrl__setdefaultcharformat)</ept>.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__geteventmask"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::GetEventMask</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Gets the event mask for this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>The event mask for this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>The event mask specifies which notification messages the <ph id="ph1">`CRichEditCtrl`</ph> object sends to its parent window.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_GETEVENTMASK<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb788032)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CRichEditCtrl::SetEventMask<ept id="p1">](#cricheditctrl__seteventmask)</ept>.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__getfirstvisibleline"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::GetFirstVisibleLine</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>Determines the topmost visible line in this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>Zero-based index of the uppermost visible line in this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_GETFIRSTVISIBLELINE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb761574)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#11<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_11.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__getiricheditole"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::GetIRichEditOle</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>Accesses the <bpt id="p1">**</bpt>IRichEditOle<ept id="p1">**</ept> interface for this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>IRichEditOle<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774306)</ept> interface that can be used to access this <ph id="ph1">`CRichEditCtrl`</ph> object's OLE functionality; <bpt id="p2">**</bpt>NULL<ept id="p2">**</ept> if the interface is not accessible.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>Use this interface to access this <ph id="ph1">`CRichEditCtrl`</ph> object's OLE functionality.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_GETOLEINTERFACE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb788041)</ept> message and <bpt id="p2">[</bpt>IRichEditOle<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/bb774306)</ept> interface in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__getlimittext"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::GetLimitText</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>Gets the text limit for this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>The current text limit, in bytes, for this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>The text limit is the maximum amount of text, in bytes, the rich edit control can accept.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_GETLIMITTEXT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb761582)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#12<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_12.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__getline"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::GetLine</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Retrieves a line of text from this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>Zero-based index of the line to retrieve.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>Points to the buffer to receive the text.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>The first word of the buffer must specify the maximum number of bytes that can be copied into the buffer.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>Maximum number of characters that can be copied into <ph id="ph1">`lpszBuffer`</ph>.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>The second form of <ph id="ph1">`GetLine`</ph> places this value into the first word of the buffer specified by <ph id="ph2">`lpszBuffer`</ph>.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>The number of characters copied into <ph id="ph1">`lpszBuffer`</ph>.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>The copied line does not contain a terminating null character.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Because the first word of the buffer stores the number of characters to be copied, make sure that your buffer is at least 4 bytes long.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_GETLINE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb761584)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>GetLineCount<ept id="p1">](#cricheditctrl__getlinecount)</ept>.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__getlinecount"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::GetLineCount</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>Retrieves the number of lines in the <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>The number of lines in this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_GETLINECOUNT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb761586)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#13<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_13.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__getmodify"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::GetModify</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>Determines if the contents of this <ph id="ph1">`CRichEditCtrl`</ph> object have been modified.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>Nonzero if the text in this <ph id="ph1">`CRichEditCtrl`</ph> object has been modified; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>Windows maintains an internal flag indicating whether the contents of the rich edit control have been changed.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>This flag is cleared when the edit control is first created and can also be cleared by calling the <bpt id="p1">[</bpt>SetModify<ept id="p1">](#cricheditctrl__setmodify)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_GETMODIFY<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb761592)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#14<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_14.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__getoptions"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::GetOptions</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>Retrieves the options currently set for the rich edit control.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>A combination of the current option flag values.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>For a list of these values, see the <bpt id="p1">*</bpt>fOptions<ept id="p1">*</ept> parameter in the <bpt id="p2">[</bpt>EM_SETOPTIONS<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/bb774254)</ept> message, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__getparaformat"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::GetParaFormat</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>Gets the paragraph formatting attributes of the current selection.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>In the first version, a pointer to a <bpt id="p1">[</bpt>PARAFORMAT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787940)</ept> structure to hold the paragraph formatting attributes of the current selection.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>In the second version, a pointer to a <bpt id="p1">[</bpt>PARAFORMAT2<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787942)</ept> structure, which is a Rich Edit 2.0 extension to the <bpt id="p2">**</bpt>PARAFORMAT<ept id="p2">**</ept> structure, holding the default character formatting attributes.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>dwMask<ept id="p1">**</ept> data member of <ph id="ph1">`pf`</ph>.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>It specifies the paragraph formatting attributes that are consistent throughout the current selection.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>If more than one paragraph is selected, <ph id="ph1">`pf`</ph> receives the attributes of the first selected paragraph.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>The return value specifies which attributes are consistent throughout the selection.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>EM_GETPARAFORMAT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774182)</ept> message and the <bpt id="p2">**</bpt>PARAFORMAT<ept id="p2">**</ept> and <bpt id="p3">**</bpt>PARAFORMAT2<ept id="p3">**</ept> structures in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CRichEditCtrl::SetParaFormat<ept id="p1">](#cricheditctrl__setparaformat)</ept>.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__getpunctuation"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::GetPunctuation</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>Gets the current punctuation characters in a rich edit control.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>The punctuation type flag, as described in the <ph id="ph1">`fType`</ph> parameter of <bpt id="p1">[</bpt>EM_GETPUNCTUATION<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774184)</ept> in the <ph id="ph2">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>PUNCTUATION<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787944)</ept> structure, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>Nonzero if the operation succeeded, otherwise 0.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>This member function is available with only the Asian-language versions of the operating system.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__getrect"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::GetRect</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>Retrieves the formatting rectangle for this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CRect<ept id="p1">](../../atl-mfc-shared/reference/crect-class.md)</ept> or pointer to a <bpt id="p2">[</bpt>RECT<ept id="p2">](../../mfc/reference/rect-structure1.md)</ept> to receive the formatting rectangle of this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>The formatting rectangle is the bounding rectangle for the text.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>This value is independent of the size of the <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_GETRECT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb761596)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>LimitText<ept id="p1">](#cricheditctrl__limittext)</ept>.</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__getredoname"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::GetRedoName</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>Retrieves the type of the next available action in the redo queue, if any.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>If successful, <ph id="ph1">`GetRedoName`</ph> returns the <bpt id="p1">[</bpt>UNDONAMEID<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774365)</ept> enumeration type indicating the type of the next action in the control's redo queue.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>If the redo queue is empty, or if the redo action in the queue is of an unknown type, <ph id="ph1">`GetRedoName`</ph> returns 0.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>The types of actions that can be undone or redone include typing, delete, drag-drop, cut, and paste operations.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>This information can be useful for applications that provide an extended user interface for Undo and Redo operations, such as a drop-down list box of redoable actions.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__getsel"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::GetSel</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>Retrieves the bounds of the current selection in this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>Reference to a <bpt id="p1">[</bpt>CHARRANGE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787885)</ept> structure to receive the bounds of the current selection.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>Zero-based index of the first character in the current selection.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>Zero-based index of the last character in the current selection.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>The two forms of this function provide alternate ways to get the bounds for the selection.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>Brief descriptions of these forms follow:</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>GetSel(<ept id="p1">**</ept> <ph id="ph1">`cr`</ph> <bpt id="p2">**</bpt>)<ept id="p2">**</ept> This form uses the <bpt id="p3">**</bpt>CHARRANGE<ept id="p3">**</ept> structure with its <bpt id="p4">**</bpt>cpMin<ept id="p4">**</ept> and <bpt id="p5">**</bpt>cpMax<ept id="p5">**</ept> members to return the bounds.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>GetSel(<ept id="p1">**</ept> <ph id="ph1">`nStartChar`</ph> <bpt id="p2">**</bpt>,<ept id="p2">**</ept> <ph id="ph2">`nEndChar`</ph> <bpt id="p3">**</bpt>)<ept id="p3">**</ept> This form returns the bounds in the parameters <ph id="ph3">`nStartChar`</ph> and <ph id="ph4">`nEndChar`</ph>.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>The selection includes everything if the beginning ( <bpt id="p1">**</bpt>cpMin<ept id="p1">**</ept> or <ph id="ph1">`nStartChar`</ph>) is 0 and the end ( <bpt id="p2">**</bpt>cpMax<ept id="p2">**</ept> or <ph id="ph2">`nEndChar`</ph>) is – 1.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_EXGETSEL<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb788001)</ept> message and <bpt id="p2">[</bpt>CHARRANGE<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/bb787885)</ept> structure in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#15<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_15.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__getselectioncharformat"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::GetSelectionCharFormat</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>Gets the character formatting attributes of the current selection.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>In the first version, a pointer to a <bpt id="p1">[</bpt>CHARFORMAT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787881)</ept> structure to receive the character formatting attributes of the current selection.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>In the second version, a pointer to a <bpt id="p1">[</bpt>CHARFORMAT2<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787883)</ept> structure, which is a Rich Edit 2.0 extension to the <bpt id="p2">**</bpt>CHARFORMAT<ept id="p2">**</ept> structure to receive the character formatting attributes of the current selection.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>dwMask<ept id="p1">**</ept> data member of <ph id="ph1">`cf`</ph>.</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>It specifies the character formatting attributes that are consistent throughout the current selection.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`cf`</ph> parameter receives the attributes of the first character in the current selection.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>The return value specifies which attributes are consistent throughout the selection.</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>EM_GETCHARFORMAT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb788026)</ept> message and the <bpt id="p2">**</bpt>CHARFORMAT<ept id="p2">**</ept> and <bpt id="p3">**</bpt>CHARFORMAT2<ept id="p3">**</ept> structures in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>SetSelectionCharFormat<ept id="p1">](#cricheditctrl__setselectioncharformat)</ept>.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__getselectiontype"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::GetSelectionType</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>Determines the selection type in this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>Flags indicating the contents of the current selection.</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>A combination of the following flags:</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`SEL_EMPTY`</ph> Indicates that there is no current selection.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`SEL_TEXT`</ph> Indicates that the current selection contains text.</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`SEL_OBJECT`</ph> Indicates that the current selection contains at least one OLE item.</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`SEL_MULTICHAR`</ph> Indicates that the current selection contains more than one character of text.</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`SEL_MULTIOBJECT`</ph> Indicates that the current selection contains more than one OLE object.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_SELECTIONTYPE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774223)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#16<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_16.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__getseltext"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::GetSelText</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>Retrieves the text from the current selection in this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>Pointer to the buffer to receive the text in the current selection.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>Depends on the form:</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>GetSelText(<ept id="p1">**</ept> <ph id="ph1">`lpBuf`</ph> <bpt id="p2">**</bpt>)<ept id="p2">**</ept> The number of characters copied into <ph id="ph2">`lpBuf`</ph>, not including the null termination.</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>GetSelText( )<ept id="p1">**</ept> The string containing the current selection.</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>If you use the first form, <bpt id="p1">**</bpt>GetSelText(<ept id="p1">**</ept> <ph id="ph1">`lpBuf`</ph> <bpt id="p2">**</bpt>)<ept id="p2">**</ept>, you must ensure that the buffer is large enough for the text it will receive.</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>Call <bpt id="p1">[</bpt>GetSel<ept id="p1">](#cricheditctrl__getsel)</ept> to determine the number of characters in the current selection.</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_GETSELTEXT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774190)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CRichEditCtrl::GetSelectionType<ept id="p1">](#cricheditctrl__getselectiontype)</ept>.</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__gettextlength"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::GetTextLength</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>Retrieves the length of the text, in characters, in this <ph id="ph1">`CRichEditCtrl`</ph> object, not including the terminating null character.</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>The length of the text in this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>WM_GETTEXTLENGTH<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632628)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#17<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_17.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__gettextlengthex"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::GetTextLengthEx</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>Calculates the length of the text in the rich edit control.</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>Value specifying the method to be used in determining the text length.</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>This member can be one or more of the values listed in the flags member of <bpt id="p1">[</bpt>GETTEXTLENGTHEX<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787915)</ept> described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>Code page for translation (CP_ACP for ANSI Code Page, 1200 for Unicode).</source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>The number of characters or bytes in the edit control.</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>If incompatible flags were set in <ph id="ph1">`dwFlags`</ph>, this member function returns <ph id="ph2">`E_INVALIDARG`</ph>.</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`GetTextLengthEx`</ph> provides additional ways of determining the length of the text.</source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>It supports the Rich Edit 2.0 functionality.</source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>About Rich Edit Controls<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787873)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>for more information.</source>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__gettextmode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::GetTextMode</source>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>Retrieves the current text mode and undo level of a rich edit control.</source>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>A set of bit flags from the <bpt id="p1">[</bpt>TEXTMODE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774364)</ept> enumeration type, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>The flags indicate the current text mode and undo level of the control.</source>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__gettextrange"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::GetTextRange</source>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>Gets the specified range of characters.</source>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>The character position index immediately preceding the first character in the range.</source>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>The character position immediately following the last character in the range.</source>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">[</bpt>CString<ept id="p1">](../../atl-mfc-shared/reference/cstringt-class.md)</ept> object that will receive the text.</source>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>The number of characters copied, not including the terminating null character.</source>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_GETTEXTRANGE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774199)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`GetTextRange`</ph> supports the Rich Edit 2.0 functionality.</source>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>About Rich Edit Controls<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787873)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>for more information.</source>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__getundoname"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::GetUndoName</source>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>Retrieves the type of the next available action in the undo queue, if any.</source>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source>If an undo action is in the control's undo queue, <ph id="ph1">`GetUndoName`</ph> returns the <bpt id="p1">[</bpt>UNDONAMEID<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774365)</ept> enumeration type indicating the type of the next action in the queue.</source>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source>If the undo queue is empty, or if the undo action in the queue is of an unknown type, <ph id="ph1">`GetUndoName`</ph> returns 0.</source>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>The types of actions that can be undone or redone include typing, delete, drag-drop, cut, and paste operations.</source>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source>This information can be useful for applications that provide an extended user interface for Undo and Redo operations, such as a drop-down list box of actions that can be undone.</source>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__getwordwrapmode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::GetWordWrapMode</source>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>Retrieves the current word wrapping and word breaking options for the rich edit control.</source>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>The current word wrapping and word breaking options.</source>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source>These options are described in <bpt id="p1">[</bpt>EM_SETWORDWRAPMODE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774294)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source>This member function is available only for Asian-language versions of the operating system.</source>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__hideselection"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::HideSelection</source>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>Changes the visibility of the selection.</source>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve">
          <source>Indicates if the selection should be shown or hidden, <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> to hide the selection.</source>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source>Indicates if this change in visibility for the selection should be permanent.</source>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`bPerm`</ph> is <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>, it changes the <ph id="ph2">`ECO_NOHIDESEL`</ph> option for this <ph id="ph3">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source>For a brief description of this option, see <bpt id="p1">[</bpt>SetOptions<ept id="p1">](#cricheditctrl__setoptions)</ept>.</source>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>You can use this function to set all the options for this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_HIDESELECTION<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774210)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#18<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_18.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__limittext"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::LimitText</source>
        </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source>Limits the length of the text that the user can enter into an edit control.</source>
        </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>Specifies the length (in bytes) of the text that the user can enter.</source>
        </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source>If this parameter is 0 (the default value), the text length is set to 64K bytes.</source>
        </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source>Changing the text limit restricts only the text the user can enter.</source>
        </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source>It has no effect on any text already in the edit control, nor does it affect the length of the text copied to the edit control by the <bpt id="p1">[</bpt>SetWindowText<ept id="p1">](../../mfc/reference/cwnd-class.md#cwnd__setwindowtext)</ept> member function in <ph id="ph1">`CWnd`</ph>.</source>
        </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source>If an application uses the <ph id="ph1">`SetWindowText`</ph> function to place more text into an edit control than is specified in the call to <ph id="ph2">`LimitText`</ph>, the user can delete any of the text within the edit control.</source>
        </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>However, the text limit will prevent the user from replacing the existing text with new text, unless deleting the current selection causes the text to fall below the text limit.</source>
        </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source>For the text limit, each OLE item counts as a single character.</source>
        </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_EXLIMITTEXT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb788003)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#19<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_19.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__linefromchar"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::LineFromChar</source>
        </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source>Retrieves the line number of the line that contains the specified character index.</source>
        </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve">
          <source>Contains the zero-based index value for the desired character in the text of the edit control, or contains –1.</source>
        </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`nIndex`</ph> is –1, it specifies the current line, that is, the line that contains the caret.</source>
        </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source>The zero-based line number of the line containing the character index specified by <ph id="ph1">`nIndex`</ph>.</source>
        </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`nIndex`</ph> is –1, the number of the line that contains the first character of the selection is returned.</source>
        </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source>If there is no selection, the current line number is returned.</source>
        </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source>A character index is the number of characters from the beginning of the rich edit control.</source>
        </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve">
          <source>For character counting, an OLE item is counted as a single character.</source>
        </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_EXLINEFROMCHAR<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb788005)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#20<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_20.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__lineindex"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::LineIndex</source>
        </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve">
          <source>Retrieves the character index of a line within this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve">
          <source>Contains the index value for the desired line in the text of the edit control, or contains –1.</source>
        </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`nLine`</ph> is –1, it specifies the current line, that is, the line that contains the caret.</source>
        </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>The character index of the line specified in <ph id="ph1">`nLine`</ph> or –1 if the specified line number is greater then the number of lines in the edit control.</source>
        </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve">
          <source>The character index is the number of characters from the beginning of the rich edit control to the specified line.</source>
        </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_LINEINDEX<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb761611)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#21<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_21.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__linelength"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::LineLength</source>
        </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve">
          <source>Retrieves the length of a line in a rich edit control.</source>
        </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve">
          <source>Specifies the character index of a character in the line whose length is to be retrieved.</source>
        </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve">
          <source>If this parameter is –1, the length of the current line (the line that contains the caret) is returned, not including the length of any selected text within the line.</source>
        </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`LineLength`</ph> is called for a single-line edit control, this parameter is ignored.</source>
        </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`LineLength`</ph> is called for a multiple-line edit control, the return value is the length (in bytes) of the line specified by <ph id="ph2">`nLine`</ph>.</source>
        </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`LineLength`</ph> is called for a single-line edit control, the return value is the length (in bytes) of the text in the edit control.</source>
        </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>LineIndex<ept id="p1">](#cricheditctrl__lineindex)</ept> member function to retrieve a character index for a given line number within this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_LINELENGTH<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb761613)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>LineIndex<ept id="p1">](#cricheditctrl__lineindex)</ept>.</source>
        </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__linescroll"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::LineScroll</source>
        </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve">
          <source>Scrolls the text of a multiple-line edit control.</source>
        </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve">
          <source>Specifies the number of lines to scroll vertically.</source>
        </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve">
          <source>Specifies the number of character positions to scroll horizontally.</source>
        </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve">
          <source>This value is ignored if the rich edit control has either the <bpt id="p1">**</bpt>ES_RIGHT<ept id="p1">**</ept> or <bpt id="p2">**</bpt>ES_CENTER<ept id="p2">**</ept> style.</source>
        </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Edit styles<ept id="p1">](../../mfc/reference/edit-styles.md)</ept> are specified in <bpt id="p2">[</bpt>Create<ept id="p2">](#cricheditctrl__create)</ept>.</source>
        </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve">
          <source>The edit control does not scroll vertically past the last line of text in the edit control.</source>
        </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve">
          <source>If the current line plus the number of lines specified by <ph id="ph1">`nLines`</ph> exceeds the total number of lines in the edit control, the value is adjusted so that the last line of the edit control is scrolled to the top of the edit-control window.</source>
        </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`LineScroll`</ph> can be used to scroll horizontally past the last character of any line.</source>
        </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_LINESCROLL<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb761615)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>GetFirstVisibleLine<ept id="p1">](#cricheditctrl__getfirstvisibleline)</ept>.</source>
        </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__paste"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::Paste</source>
        </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve">
          <source>Inserts the data from the Clipboard into the <ph id="ph1">`CRichEditCtrl`</ph> at the insertion point, the location of the caret.</source>
        </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve">
          <source>Data is inserted only if the Clipboard contains data in a recognized format.</source>
        </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>WM_PASTE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms649028)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#22<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_22.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__pastespecial"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::PasteSpecial</source>
        </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve">
          <source>Pastes data in a specific Clipboard format into this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>nClipFormat<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve">
          <source>Clipboard format to paste into this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>dvAspect<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve">
          <source>Device aspect for the data to be retrieved from the Clipboard.</source>
        </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>hMF<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve">
          <source>Handle to the metafile containing the iconic view of the object to be pasted.</source>
        </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve">
          <source>The new material is inserted at the insertion point, the location of the caret.</source>
        </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_PASTESPECIAL<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774214)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#23<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_23.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__posfromchar"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::PosFromChar</source>
        </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve">
          <source>Retrieves the client area coordinates of a specified character in an edit control.</source>
        </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve">
          <source>The zero-based index of the character.</source>
        </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve">
          <source>The position of the character, (x, y).</source>
        </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve">
          <source>For a single-line edit control, the y-coordinate is always zero.</source>
        </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_POSFROMCHAR<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb761631)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__redo"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::Redo</source>
        </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve">
          <source>Redoes the next action in the control's redo queue.</source>
        </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise, 0.</source>
        </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_REDO<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774218)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__replacesel"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::ReplaceSel</source>
        </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve">
          <source>Replaces the current selection in this <ph id="ph1">`CRichEditCtrl`</ph> object with the specified text.</source>
        </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve">
          <source>Pointer to a null-terminated string containing the replacement text.</source>
        </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve">
          <source>To specify that this function can be undone, set the value of this parameter to <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve">
          <source>To replace all the text in this <ph id="ph1">`CRichEditCtrl`</ph> object, use <bpt id="p1">[</bpt>CWnd::SetWindowText<ept id="p1">](../../mfc/reference/cwnd-class.md#cwnd__setwindowtext)</ept>.</source>
        </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve">
          <source>If there is no current selection, the replacement text is inserted at the insertion point, that is, the current caret location.</source>
        </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve">
          <source>This function will format the inserted text with the existing character formatting.</source>
        </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve">
          <source>When replacing the entire range of text (by calling <ph id="ph1">`SetSel`</ph>(0,-1) before calling <ph id="ph2">`ReplaceSel`</ph>), there is an end of paragraph character that retains the previous paragraph's formatting, which in inherited by the newly inserted text.</source>
        </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_REPLACESEL<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb761633)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>LineIndex<ept id="p1">](#cricheditctrl__lineindex)</ept>.</source>
        </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__requestresize"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::RequestResize</source>
        </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve">
          <source>Forces this <ph id="ph1">`CRichEditCtrl`</ph> object to send <bpt id="p1">**</bpt>EN_REQUESTRESIZE<ept id="p1">**</ept> notification messages to its parent window.</source>
        </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve">
          <source>This function is useful during <bpt id="p1">[</bpt>CWnd::OnSize<ept id="p1">](../../mfc/reference/cwnd-class.md#cwnd__onsize)</ept> processing for a bottomless <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>EM_REQUESTRESIZE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774220)</ept> message and the <bpt id="p2">**</bpt>Bottomless Rich Edit Controls<ept id="p2">**</ept> section of <bpt id="p3">[</bpt>About Rich Edit Controls<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/bb787873)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__setautourldetect"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::SetAutoURLDetect</source>
        </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve">
          <source>Sets the rich edit control to automatically detect a URL.</source>
        </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve">
          <source>Specifies whether the control is set to automatically detect a URL.</source>
        </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>, it is enabled.</source>
        </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>, it is disabled.</source>
        </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve">
          <source>Zero if successful, otherwise nonzero.</source>
        </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve">
          <source>For example, the message may fail due to insufficient memory.</source>
        </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve">
          <source>If enabled, the rich edit control will scan the text to determine if it matches a standard URL format.</source>
        </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve">
          <source>For a list of these URL formats, see <bpt id="p1">[</bpt>EM_AUTOURLDETECT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787991)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve">
          <source>Do not set <ph id="ph1">`SetAutoURLDetect`</ph> to <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> if your edit control uses the <bpt id="p2">**</bpt>CFE_LINK<ept id="p2">**</ept> effect for text other than URLs.</source>
        </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`SetAutoURLDetect`</ph> enables this effect for URLs and disables it for all other text.</source>
        </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>EN_LINK<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787970)</ept> for more information about the <bpt id="p2">**</bpt>CFE_LINK<ept id="p2">**</ept> effect.</source>
        </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__setbackgroundcolor"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::SetBackgroundColor</source>
        </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve">
          <source>Sets the background color for this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve">
          <source>Indicates if the background color should be set to the system value.</source>
        </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve">
          <source>If this value is <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>, <ph id="ph1">`cr`</ph> is ignored.</source>
        </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve">
          <source>The requested background color.</source>
        </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve">
          <source>Used only if <ph id="ph1">`bSysColor`</ph> is <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve">
          <source>The previous background color for this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve">
          <source>The background color can be set to the system value or to a specified <bpt id="p1">[</bpt>COLORREF<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd183449)</ept> value.</source>
        </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_SETBKGNDCOLOR<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774228)</ept> message and <bpt id="p2">[</bpt>COLORREF<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/dd183449)</ept> structure in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#24<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_24.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__setdefaultcharformat"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::SetDefaultCharFormat</source>
        </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve">
          <source>Sets the character formatting attributes for new text in this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve">
          <source>In the first version, a pointer to a <bpt id="p1">[</bpt>CHARFORMAT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787881)</ept> structure containing the new default character formatting attributes.</source>
        </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve">
          <source>In the second version, a pointer to a <bpt id="p1">[</bpt>CHARFORMAT2<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787883)</ept> structure, which is a Rich Edit 2.0 extension to the <bpt id="p2">**</bpt>CHARFORMAT<ept id="p2">**</ept> structure, containing the default character formatting attributes.</source>
        </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise, 0.</source>
        </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve">
          <source>Only the attributes specified by the <bpt id="p1">**</bpt>dwMask<ept id="p1">**</ept> member of <ph id="ph1">`cf`</ph> are changed by this function.</source>
        </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>EM_SETCHARFORMAT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774230)</ept> message and the <bpt id="p2">**</bpt>CHARFORMAT<ept id="p2">**</ept> and <bpt id="p3">**</bpt>CHARFORMAT2<ept id="p3">**</ept> structures in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#25<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_25.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__seteventmask"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::SetEventMask</source>
        </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve">
          <source>Sets the event mask for this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>dwEventMask<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve">
          <source>The new event mask for this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve">
          <source>The previous event mask.</source>
        </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve">
          <source>The event mask specifies which notification messages the <ph id="ph1">`CRichEditCtrl`</ph> object sends to its parent window.</source>
        </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_SETEVENTMASK<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774238)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#26<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_26.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__setmodify"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::SetModify</source>
        </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve">
          <source>Sets or clears the modified flag for an edit control.</source>
        </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve">
          <source>A value of <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> indicates that the text has been modified, and a value of <bpt id="p2">**</bpt>FALSE<ept id="p2">**</ept> indicates it is unmodified.</source>
        </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve">
          <source>By default, the modified flag is set.</source>
        </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve">
          <source>The modified flag indicates whether or not the text within the edit control has been modified.</source>
        </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve">
          <source>It is automatically set whenever the user changes the text.</source>
        </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve">
          <source>Its value can be retrieved with the <bpt id="p1">[</bpt>GetModify<ept id="p1">](#cricheditctrl__getmodify)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_SETMODIFY<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb761651)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>GetModify<ept id="p1">](#cricheditctrl__getmodify)</ept>.</source>
        </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__setolecallback"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::SetOLECallback</source>
        </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve">
          <source>Gives this <ph id="ph1">`CRichEditCtrl`</ph> object an <bpt id="p1">**</bpt>IRichEditOleCallback<ept id="p1">**</ept> object to use to access OLE-related resources and information.</source>
        </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve">
          <source>Pointer to an <bpt id="p1">[</bpt>IRichEditOleCallback<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774308)</ept> object that this <ph id="ph1">`CRichEditCtrl`</ph> object will use to get OLE-related resources and information.</source>
        </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise, 0.</source>
        </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve">
          <source>This <ph id="ph1">`CRichEditCtrl`</ph> object will call <bpt id="p1">[</bpt>IUnknown::AddRef<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms691379)</ept> to increment the usage count for the COM object specified by <ph id="ph2">`pCallback`</ph>.</source>
        </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_SETOLECALLBACK<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774252)</ept> message and <bpt id="p2">[</bpt>IRichEditOleCallback<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/bb774308)</ept> interface in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__setoptions"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::SetOptions</source>
        </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve">
          <source>Sets the options for this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>wOp<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve">
          <source>Indicates the type of operation.</source>
        </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve">
          <source>One of the following values:</source>
        </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ECOOP_SET`</ph> Set the options to those specified by <ph id="ph2">`dwFlags`</ph>.</source>
        </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ECOOP_OR`</ph> Combine the current options with those specified by <ph id="ph2">`dwFlags`</ph>.</source>
        </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ECOOP_AND`</ph> Retain only those current options that are also specified by <ph id="ph2">`dwFlags`</ph>.</source>
        </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ECOOP_XOR`</ph> Retain only those current options that are <bpt id="p1">*</bpt>not<ept id="p1">*</ept> specified by <ph id="ph2">`dwFlags`</ph>.</source>
        </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve">
          <source>Rich edit options.</source>
        </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve">
          <source>The flag values are listed in the Remarks section.</source>
        </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve">
          <source>The options can be a combination of the following values:</source>
        </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ECO_AUTOWORDSELECTION`</ph> Automatic word selection on double-click.</source>
        </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ECO_AUTOVSCROLL`</ph> Automatically scrolls text to the right by 10 characters when the user types a character at the end of the line.</source>
        </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve">
          <source>When the user presses the ENTER key, the control scrolls all text back to position zero.</source>
        </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ECO_AUTOHSCROLL`</ph> Automatically scrolls text up one page when the user presses the ENTER key on the last line.</source>
        </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ECO_NOHIDESEL`</ph> Negates the default behavior for an edit control.</source>
        </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve">
          <source>The default behavior hides the selection when the control loses the input focus and shows the selection when the control receives the input focus.</source>
        </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve">
          <source>If you specify <ph id="ph1">`ECO_NOHIDESEL`</ph>, the selected text is inverted, even if the control does not have the focus.</source>
        </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ECO_READONLY`</ph> Prevents the user from typing or editing text in the edit control.</source>
        </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ECO_WANTRETURN`</ph> Specifies that a carriage return be inserted when the user presses the ENTER key while entering text into a multiple-line rich edit control in a dialog box.</source>
        </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve">
          <source>If you do not specify this style, pressing the ENTER key sends a command to the rich edit control's parent window, which mimics clicking the parent window's default button (for example, the OK button in a dialog box).</source>
        </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve">
          <source>This style has no effect on a single-line edit control.</source>
        </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ECO_SAVESEL`</ph> Preserves the selection when the control loses the focus.</source>
        </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve">
          <source>By default, the entire contents of the control are selected when it regains the focus.</source>
        </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ECO_VERTICAL`</ph> Draws text and objects in a vertical direction.</source>
        </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve">
          <source>Available for Asian languages only.</source>
        </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_SETOPTIONS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774254)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#27<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_27.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__setparaformat"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::SetParaFormat</source>
        </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve">
          <source>Sets the paragraph formatting attributes for the current selection in this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve">
          <source>In the first version, a pointer to a <bpt id="p1">[</bpt>PARAFORMAT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787940)</ept> structure containing the new default paragraph formatting attributes.</source>
        </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve">
          <source>In the second version, a pointer to a <bpt id="p1">[</bpt>PARAFORMAT2<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787942)</ept> structure, which is a Rich Edit 2.0 extension to the <bpt id="p2">**</bpt>PARAFORMAT<ept id="p2">**</ept> structure, holding the default character formatting attributes.</source>
        </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise, 0.</source>
        </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve">
          <source>Only the attributes specified by the <bpt id="p1">**</bpt>dwMask<ept id="p1">**</ept> member of <ph id="ph1">`pf`</ph> are changed by this function.</source>
        </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>EM_SETPARAFORMAT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774276)</ept> message and the <bpt id="p2">**</bpt>PARAFORMAT<ept id="p2">**</ept> and <bpt id="p3">**</bpt>PARAFORMAT2<ept id="p3">**</ept> structures in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#28<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_28.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__setpunctuation"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::SetPunctuation</source>
        </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve">
          <source>Sets the punctuation in a rich edit control.</source>
        </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve">
          <source>The punctuation flag.</source>
        </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve">
          <source>For a list of possible values, see the <ph id="ph1">`fType`</ph> parameter for <bpt id="p1">[</bpt>EM_SETPUNCTUATION<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774278)</ept> in the <ph id="ph2">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>PUNCTUATION<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787944)</ept> structure, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve">
          <source>Nonzero if successful, otherwise 0.</source>
        </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve">
          <source>This member function is available for only Asian-language versions of the operating system.</source>
        </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__setreadonly"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::SetReadOnly</source>
        </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve">
          <source>Changes the <ph id="ph1">`ECO_READONLY`</ph> option for this <ph id="ph2">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve">
          <source>Indicates if this <ph id="ph1">`CRichEditCtrl`</ph> object should be read only.</source>
        </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise, 0.</source>
        </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve">
          <source>For a brief description of this option, see <bpt id="p1">[</bpt>SetOptions<ept id="p1">](#cricheditctrl__setoptions)</ept>.</source>
        </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve">
          <source>You can use this function to set all the options for this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_SETREADONLY<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb761655)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#29<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_29.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__setrect"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::SetRect</source>
        </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve">
          <source>Sets the formatting rectangle for this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CRect<ept id="p1">](../../atl-mfc-shared/reference/crect-class.md)</ept> or pointer to a <bpt id="p2">[</bpt>RECT<ept id="p2">](../../mfc/reference/rect-structure1.md)</ept> that indicates the new bounds for the formatting rectangle.</source>
        </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve">
          <source>The formatting rectangle is the limiting rectangle for the text.</source>
        </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve">
          <source>The limiting rectangle is independent of the size of the rich edit control window.</source>
        </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve">
          <source>When this <ph id="ph1">`CRichEditCtrl`</ph> object is first created, the formatting rectangle is the same size as the client area of the window.</source>
        </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`SetRect`</ph> to make the formatting rectangle larger or smaller than the rich edit window.</source>
        </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_SETRECT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb761657)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#30<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_30.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__setsel"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::SetSel</source>
        </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve">
          <source>Sets the selection within this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve">
          <source>Zero-based index of the first character for the selection.</source>
        </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve">
          <source>Zero-based index of the last character for the selection.</source>
        </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CHARRANGE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787885)</ept> structure which holds the bounds of the current selection.</source>
        </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve">
          <source>The two forms of this function provide alternate ways to set the bounds for the selection.</source>
        </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve">
          <source>Brief descriptions of these forms follow:</source>
        </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SetSel(<ept id="p1">**</ept> <ph id="ph1">`cr`</ph> <bpt id="p2">**</bpt>)<ept id="p2">**</ept> This form uses the <bpt id="p3">**</bpt>CHARRANGE<ept id="p3">**</ept> structure with its <bpt id="p4">**</bpt>cpMin<ept id="p4">**</ept> and <bpt id="p5">**</bpt>cpMax<ept id="p5">**</ept> members to set the bounds.</source>
        </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SetSel(<ept id="p1">**</ept> <ph id="ph1">`nStartChar`</ph> <bpt id="p2">**</bpt>,<ept id="p2">**</ept> <ph id="ph2">`nEndChar`</ph> <bpt id="p3">**</bpt>)<ept id="p3">**</ept> This form use the parameters <ph id="ph3">`nStartChar`</ph> and <ph id="ph4">`nEndChar`</ph> to set the bounds.</source>
        </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve">
          <source>The caret is placed at the end of the selection indicated by the greater of the start ( <bpt id="p1">**</bpt>cpMin<ept id="p1">**</ept> or <ph id="ph1">`nStartChar`</ph>) and end ( <bpt id="p2">**</bpt>cpMax<ept id="p2">**</ept> or <ph id="ph2">`nEndChar`</ph>) indices.</source>
        </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve">
          <source>This function scrolls the contents of the <ph id="ph1">`CRichEditCtrl`</ph> so that the caret is visible.</source>
        </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve">
          <source>To select all the text in this <ph id="ph1">`CRichEditCtrl`</ph> object, call <ph id="ph2">`SetSel`</ph> with a start index of 0 and an end index of – 1.</source>
        </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_EXSETSEL<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb788007)</ept> message and <bpt id="p2">[</bpt>CHARRANGE<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/bb787885)</ept> structure in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>GetSel<ept id="p1">](#cricheditctrl__getsel)</ept>.</source>
        </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__setselectioncharformat"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::SetSelectionCharFormat</source>
        </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve">
          <source>Sets the character formatting attributes for the text in the current selection in this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve">
          <source>In the first version, a pointer to a <bpt id="p1">[</bpt>CHARFORMAT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787881)</ept> structure containing the new character formatting attributes for the current selection.</source>
        </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve">
          <source>In the second version, a pointer to a <bpt id="p1">[</bpt>CHARFORMAT2<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787883)</ept> structure, which is a Rich Edit 2.0 extension to the <bpt id="p2">**</bpt>CHARFORMAT<ept id="p2">**</ept> structure, containing the new character formatting attributes for the current selection.</source>
        </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise, 0.</source>
        </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve">
          <source>Only the attributes specified by the <bpt id="p1">**</bpt>dwMask<ept id="p1">**</ept> member of <ph id="ph1">`cf`</ph> are changed by this function.</source>
        </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>EM_SETCHARFORMAT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774230)</ept> and the <bpt id="p2">**</bpt>CHARFORMAT<ept id="p2">**</ept> and <bpt id="p3">**</bpt>CHARFORMAT2<ept id="p3">**</ept> structures in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#31<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_31.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__settargetdevice"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::SetTargetDevice</source>
        </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve">
          <source>Sets the target device and line width used for WYSIWYG (what you see is what you get) formatting in this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve">
          <source>Handle to the device context for the new target device.</source>
        </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>lLineWidth<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve">
          <source>Line width to use for formatting.</source>
        </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CDC<ept id="p1">](../../mfc/reference/cdc-class.md)</ept> for the new target device.</source>
        </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise, 0.</source>
        </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve">
          <source>If this function is successful, the rich edit control owns the device context passed as a parameter.</source>
        </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve">
          <source>In that case, the calling function should not destroy the device context.</source>
        </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_SETTARGETDEVICE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774282)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#32<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_32.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__settextmode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::SetTextMode</source>
        </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve">
          <source>Sets the text mode or undo and redo level for a rich edit control.</source>
        </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>fMode<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve">
          <source>Specifies the new settings for the control's text mode and undo level parameters.</source>
        </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve">
          <source>For a list of the possible values, see the mode parameter for <bpt id="p1">[</bpt>EM_SETTEXTMODE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774286)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve">
          <source>Zero if successful, otherwise nonzero.</source>
        </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve">
          <source>For a description of the text modes, see <bpt id="p1">**</bpt>EM_SETTEXTMODE<ept id="p1">**</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve">
          <source>This member function fails if the control contains text.</source>
        </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve">
          <source>To make sure the control is empty, send a <bpt id="p1">[</bpt>WM_SETTEXT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632644)</ept> message with an empty string.</source>
        </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__setundolimit"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::SetUndoLimit</source>
        </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve">
          <source>Sets the maximum number of actions that can stored in the undo queue.</source>
        </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>nLimit<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve">
          <source>Specifies the maximum number of actions that can be stored in the undo queue.</source>
        </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve">
          <source>Set to zero to disable Undo.</source>
        </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve">
          <source>The new maximum number of undo actions for the rich edit control.</source>
        </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve">
          <source>By default, the maximum number of actions in the undo queue is 100.</source>
        </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve">
          <source>If you increase this number, there must be enough available memory to accommodate the new number.</source>
        </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve">
          <source>For better performance, set the limit to the smallest possible value.</source>
        </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__setwordcharformat"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::SetWordCharFormat</source>
        </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve">
          <source>Sets the character formatting attributes for the currently selected word in this <ph id="ph1">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve">
          <source>In the first version, a pointer to a <bpt id="p1">[</bpt>CHARFORMAT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787881)</ept> structure containing the new character formatting attributes for the currently selected word.</source>
        </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve">
          <source>In the second version, a pointer to a <bpt id="p1">[</bpt>CHARFORMAT2<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787883)</ept> structure, which is a Rich Edit 2.0 extension to the <bpt id="p2">**</bpt>CHARFORMAT<ept id="p2">**</ept> structure, containing the new character formatting attributes for the currently selected word.</source>
        </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise, 0.</source>
        </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve">
          <source>Only the attributes specified by the <bpt id="p1">**</bpt>dwMask<ept id="p1">**</ept> member of <ph id="ph1">`cf`</ph> are changed by this function.</source>
        </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>EM_SETCHARFORMAT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774230)</ept> message and the <bpt id="p2">**</bpt>CHARFORMAT<ept id="p2">**</ept> and <bpt id="p3">**</bpt>CHARFORMAT2<ept id="p3">**</ept> structures in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#33<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_33.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__setwordwrapmode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::SetWordWrapMode</source>
        </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve">
          <source>Sets the word-wrapping and word-breaking options for the rich edit control.</source>
        </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve">
          <source>The options to set for word wrapping and word breaking.</source>
        </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve">
          <source>For a list of possible options, see <bpt id="p1">[</bpt>EM_SETWORDWRAPMODE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774294)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve">
          <source>The current word-wrapping and word-breaking options.</source>
        </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve">
          <source>This message is available only in Asian-language versions of the operating system.</source>
        </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__stopgrouptyping"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::StopGroupTyping</source>
        </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve">
          <source>Stops the control from collecting additional typing actions into the current undo action.</source>
        </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve">
          <source>The control stores the next typing action, if any, into a new action in the undo queue.</source>
        </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_STOPGROUPTYPING<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774300)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__streamin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::StreamIn</source>
        </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve">
          <source>Replaces text in this <ph id="ph1">`CRichEditCtrl`</ph> object with text from the specified input stream.</source>
        </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve">
          <source>Flags specifying the input data formats.</source>
        </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve">
          <source>See the Remarks section for more information.</source>
        </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>EDITSTREAM<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787891)</ept> structure specifying the input stream.</source>
        </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve">
          <source>See the Remarks section for more information.</source>
        </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve">
          <source>Number of characters read from the input stream.</source>
        </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve">
          <source>The value of <ph id="ph1">`nFormat`</ph> must be one of the following:</source>
        </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`SF_TEXT`</ph> Indicates reading text only.</source>
        </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`SF_RTF`</ph> Indicates reading text and formatting.</source>
        </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve">
          <source>Either of these values can be combined with <ph id="ph1">`SFF_SELECTION`</ph>.</source>
        </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`SFF_SELECTION`</ph> is specified, <ph id="ph2">`StreamIn`</ph> replaces the current selection with the contents of the input stream.</source>
        </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve">
          <source>If it is not specified, <ph id="ph1">`StreamIn`</ph> replaces the entire contents of this <ph id="ph2">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>EDITSTREAM<ept id="p1">**</ept> parameter <ph id="ph1">`es`</ph>, you specify a callback function that fills a buffer with text.</source>
        </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve">
          <source>This callback function is called repeatedly, until the input stream is exhausted.</source>
        </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_STREAMIN<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774302)</ept> message and <bpt id="p2">[</bpt>EDITSTREAM<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/bb787891)</ept> structure in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#34<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_34.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#35<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_35.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__streamout"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::StreamOut</source>
        </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve">
          <source>Writes out the contents of this <ph id="ph1">`CRichEditCtrl`</ph> object to the specified output stream.</source>
        </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve">
          <source>Flags specifying the output data formats.</source>
        </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve">
          <source>See the Remarks section for more information.</source>
        </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>EDITSTREAM<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787891)</ept> structure specifying the output stream.</source>
        </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve">
          <source>See the Remarks section for more information.</source>
        </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve">
          <source>Number of characters written to the output stream.</source>
        </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve">
          <source>The value of <ph id="ph1">`nFormat`</ph> must be one of the following:</source>
        </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`SF_TEXT`</ph> Indicates writing text only.</source>
        </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`SF_RTF`</ph> Indicates writing text and formatting.</source>
        </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`SF_RTFNOOBJS`</ph> Indicates writing text and formatting, replacing OLE items with spaces.</source>
        </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`SF_TEXTIZED`</ph> Indicates writing text and formatting, with textual representations of OLE items.</source>
        </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve">
          <source>Any of these values can be combined with <ph id="ph1">`SFF_SELECTION`</ph>.</source>
        </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`SFF_SELECTION`</ph> is specified, <ph id="ph2">`StreamOut`</ph> writes out the current selection into the output stream.</source>
        </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve">
          <source>If it is not specified, <ph id="ph1">`StreamOut`</ph> writes out the entire contents of this <ph id="ph2">`CRichEditCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>EDITSTREAM<ept id="p1">**</ept> parameter <ph id="ph1">`es`</ph>, you specify a callback function which fills a buffer with text.</source>
        </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve">
          <source>This callback function is called repeatedly, until the output stream is exhausted.</source>
        </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_STREAMOUT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774304)</ept> message and <bpt id="p2">[</bpt>EDITSTREAM<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/bb787891)</ept> structure in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#36<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_36.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CRichEditCtrl#37<ept id="p2">](../../mfc/reference/codesnippet/cpp/cricheditctrl-class_37.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cricheditctrl__undo"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRichEditCtrl::Undo</source>
        </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve">
          <source>Undoes the last operation in the rich edit control.</source>
        </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve">
          <source>Nonzero if the undo operation is successful; otherwise, 0.</source>
        </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve">
          <source>An undo operation can also be undone.</source>
        </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve">
          <source>For example, you can restore deleted text with the first call to <bpt id="p1">**</bpt>Undo<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve">
          <source>As long as there is no intervening edit operation, you can remove the text again with a second call to <bpt id="p1">**</bpt>Undo<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>EM_UNDO<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb761670)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CanUndo<ept id="p1">](#cricheditctrl__canundo)</ept>.</source>
        </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>MFC Sample WORDPAD<ept id="p1">](../../visual-cpp-samples.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CWnd Class<ept id="p1">](../../mfc/reference/cwnd-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Hierarchy Chart<ept id="p1">](../../mfc/hierarchy-chart.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CEdit Class<ept id="p1">](../../mfc/reference/cedit-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CRichEditView Class<ept id="p1">](../../mfc/reference/cricheditview-class.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>