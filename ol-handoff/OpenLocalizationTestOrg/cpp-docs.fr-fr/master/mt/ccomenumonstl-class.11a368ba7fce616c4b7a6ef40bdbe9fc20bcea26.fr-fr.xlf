<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d6f1efafd83578e058e0890b1b4a5cb99b05a224</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\ccomenumonstl-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">34075932d560c4120fc51bd7f889602bff5b8f3f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6ce773ef367b4d45f71a7b9466c6701fc1b5aafe</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CComEnumOnSTL Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CComEnumOnSTL Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class defines a COM enumerator object based on an STL collection.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A COM enumerator ( <bpt id="p1">[</bpt>IEnumXXXX<ept id="p1">](https://msdn.microsoft.com/library/ms680089.aspx)</ept>) interface.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A pointer to the interface ID of the enumerator interface.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The type of item exposed by the enumerator interface.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>copy policy<ept id="p1">](../../atl/atl-copy-policy-classes.md)</ept> class.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>An STL container class.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CComEnumOnSTL`</ph> defines a COM enumerator object based on an STL collection.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This class can be used on its own or in conjunction with <bpt id="p1">[</bpt>ICollectionOnSTLImpl<ept id="p1">](../../atl/reference/icollectiononstlimpl-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Typical steps for using this class are outlined below.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>ATL Collections and Enumerators<ept id="p1">](../../atl/atl-collections-and-enumerators.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To use this class with ICollectionOnSTLImpl:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`typedef`</ph> a specialization of this class.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`typedef`</ph> as the final template argument in a specialization of <ph id="ph2">`ICollectionOnSTLImpl`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>ATL Collections and Enumerators<ept id="p1">](../../atl/atl-collections-and-enumerators.md)</ept> for an example.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To use this class independently of ICollectionOnSTLImpl:</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`typedef`</ph> a specialization of this class.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`typedef`</ph> as the template argument in a specialization of <ph id="ph2">`CComObject`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Create an instance of the <ph id="ph1">`CComObject`</ph> specialization.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initialize the enumerator object by calling <bpt id="p1">[</bpt>IEnumOnSTLImpl::Init<ept id="p1">](../../atl/reference/ienumonstlimpl-class.md#ienumonstlimpl__init)</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Return the enumerator interface to the client.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComObjectRootEx<ept id="p1">](../../atl/reference/ccomobjectrootex-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IEnumOnSTLImpl<ept id="p1">](../../atl/reference/ienumonstlimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> atlcom.h</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The code shown below provides a generic function to handle the creation and initialization of an enumerator object:</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_ATL_COM#34<ept id="p2">](../../atl/codesnippet/cpp/ccomenumonstl-class_1.h)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This template function can be used to implement the <ph id="ph1">`_NewEnum`</ph> property of a collection interface as shown below:</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_ATL_COM#35<ept id="p2">](../../atl/codesnippet/cpp/ccomenumonstl-class_2.h)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This code creates a <ph id="ph1">`typedef`</ph> for <ph id="ph2">`CComEnumOnSTL`</ph> that exposes a vector of <ph id="ph3">`CComVariant`</ph>s by means of the <bpt id="p1">**</bpt>IEnumVariant<ept id="p1">**</ept> interface.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>CVariantCollection<ept id="p1">**</ept> class simply specializes <bpt id="p2">**</bpt>CreateSTLEnumerator<ept id="p2">**</ept> to work with enumerator objects of this type.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IEnumOnSTLImpl<ept id="p1">](../../atl/reference/ienumonstlimpl-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>ATLCollections Sample: Demonstrates ICollectionOnSTLImpl, CComEnumOnSTL, and Custom Copy Policy Classes<ept id="p1">](../../visual-cpp-samples.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Class Overview<ept id="p1">](../../atl/atl-class-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CComObjectRootEx Class<ept id="p1">](../../atl/reference/ccomobjectrootex-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CComObjectThreadModel<ept id="p1">](atl-typedefs.md#ccomobjectthreadmodel)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>IEnumOnSTLImpl Class<ept id="p1">](../../atl/reference/ienumonstlimpl-class.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>