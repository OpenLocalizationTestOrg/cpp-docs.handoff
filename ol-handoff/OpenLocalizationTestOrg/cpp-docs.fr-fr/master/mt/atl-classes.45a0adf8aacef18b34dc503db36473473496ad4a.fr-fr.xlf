<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b3f3849f4c9232d58e8cce0f9fa13c108da61aa5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\atl-classes.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d45b6d82c86b76dd32d48b33cb2f221697e773a1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e91e752a76854bd318503adcc731dad107d11036</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>ATL Classes | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ATL Classes</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The Active Template Library (ATL) includes the following classes.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To find a particular class by category, see the <bpt id="p1">[</bpt>ATL Class Overview<ept id="p1">](../../atl/atl-class-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Class</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Header file</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CA2AEX<ept id="p1">](../../atl/reference/ca2aex-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This class is used by the string conversion macros <ph id="ph1">`CA2TEX`</ph> and <ph id="ph2">`CT2AEX`</ph>, and the typedef <bpt id="p1">**</bpt>CA2A<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>atlconv.h</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CA2CAEX<ept id="p1">](../../atl/reference/ca2caex-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This class is used by string conversion macros <ph id="ph1">`CA2CTEX`</ph> and <ph id="ph2">`CT2CAEX`</ph>, and the typedef <bpt id="p1">**</bpt>CA2CA<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>atlconv.h</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CA2WEX<ept id="p1">](../../atl/reference/ca2wex-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This class is used by the string conversion macros <ph id="ph1">`CA2TEX`</ph>, <ph id="ph2">`CA2CTEX`</ph>, <ph id="ph3">`CT2WEX`</ph>, and <ph id="ph4">`CT2CWEX`</ph>, and the typedef <bpt id="p1">**</bpt>CA2W<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>atlconv.h</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAccessToken<ept id="p1">](../../atl/reference/caccesstoken-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This class is a wrapper for an access token.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>atlsecurity.h</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAcl<ept id="p1">](../../atl/reference/cacl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This class is a wrapper for an <bpt id="p1">**</bpt>ACL<ept id="p1">**</ept> (access-control list) structure.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>atlsecurity.h</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAdapt<ept id="p1">](../../atl/reference/cadapt-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This template is used to wrap classes that redefine the address-of operator to return something other than the address of the object.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>atlcomcli.h</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlArray<ept id="p1">](../../atl/reference/catlarray-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This class implements an array object.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>atlcoll.h</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlAutoThreadModule<ept id="p1">](../../atl/reference/catlautothreadmodule-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This class implements a thread-pooled, apartment-model COM server.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>atlbase.h</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlAutoThreadModuleT<ept id="p1">](../../atl/reference/catlautothreadmodulet-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This class provides methods for implementing a thread-pooled, apartment-model COM server.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>atlbase.h</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlBaseModule<ept id="p1">](../../atl/reference/catlbasemodule-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This class is instantiated in every ATL project.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>atlcore.h</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlComModule<ept id="p1">](../../atl/reference/catlcommodule-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This class implements a COM server module.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>atlbase.h</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlDebugInterfacesModule<ept id="p1">](../../atl/reference/catldebuginterfacesmodule-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This class provides support for debugging interfaces.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>atlbase.h</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlDllModuleT<ept id="p1">](../../atl/reference/catldllmodulet-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This class represents the module for a DLL.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>atlbase.h</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlException<ept id="p1">](../../atl/reference/catlexception-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This class defines an ATL exception.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>atlexcept.h</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlExeModuleT<ept id="p1">](../../atl/reference/catlexemodulet-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This class represents the module for an application.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>atlbase.h</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlFile<ept id="p1">](../../atl/reference/catlfile-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This class provides a thin wrapper around the Windows file-handling API.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>atlfile.h</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlFileMapping<ept id="p1">](../../atl/reference/catlfilemapping-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This class represents a memory-mapped file, adding a cast operator to the methods of <bpt id="p1">[</bpt>CAtlFileMappingBase<ept id="p1">](../../atl/reference/catlfilemappingbase-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>atlfile.h</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlFileMappingBase<ept id="p1">](../../atl/reference/catlfilemappingbase-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This class represents a memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>atlfile.h</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlList<ept id="p1">](../../atl/reference/catllist-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This class provides methods for creating and managing a list object.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>atlcoll.h</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlMap<ept id="p1">](../../atl/reference/catlmap-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This class provides methods for creating and managing a map object.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>atlcoll.h</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlModule<ept id="p1">](../../atl/reference/catlmodule-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This class provides methods used by several ATL module classes.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>atlbase.h</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlModuleT<ept id="p1">](../../atl/reference/catlmodulet-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>This class implements an ATL module.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>atlbase.h</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlPreviewCtrlImpl<ept id="p1">](../../atl/reference/catlpreviewctrlimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This class is an ATL implementation of a window that is placed on a host window provided by the Shell for Rich Preview.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>atlpreviewctrlimpl.h</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlServiceModuleT<ept id="p1">](../../atl/reference/catlservicemodulet-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>This class implements a service.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>atlbase.h</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlTemporaryFile<ept id="p1">](../../atl/reference/catltemporaryfile-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This class provides methods for the creation and use of a temporary file.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>atlfile.h</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlTransactionManager<ept id="p1">](../../atl/reference/catltransactionmanager-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This class provides a wrapper to Kernel Transaction Manager (KTM) functions.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>atltransactionmanager.h</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlWinModule<ept id="p1">](../../atl/reference/catlwinmodule-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>This class provides support for ATL windowing components.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>atlbase.h</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAutoPtr<ept id="p1">](../../atl/reference/cautoptr-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>This class represents a smart pointer object.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>atlbase.h</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAutoPtrArray<ept id="p1">](../../atl/reference/cautoptrarray-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This class provides methods useful when constructing an array of smart pointers.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>atlbase.h</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAutoPtrElementTraits<ept id="p1">](../../atl/reference/cautoptrelementtraits-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>This class provides methods, static functions, and typedefs useful when creating collections of smart pointers.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>atlcoll.h</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAutoPtrList<ept id="p1">](../../atl/reference/cautoptrlist-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>This class provides methods useful when constructing a list of smart pointers.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>atlcoll.h</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAutoVectorPtr<ept id="p1">](../../atl/reference/cautovectorptr-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This class represents a smart pointer object using vector new and delete operators.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>atlbase.h</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAutoVectorPtrElementTraits<ept id="p1">](../../atl/reference/cautovectorptrelementtraits-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>This class provides methods, static functions, and typedefs useful when creating collections of smart pointers using vector new and delete operators.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>atlcoll.h</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAxDialogImpl<ept id="p1">](../../atl/reference/caxdialogimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This class implements a dialog box (modal or modeless) that hosts ActiveX controls.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>atlwin.h</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAxWindow<ept id="p1">](../../atl/reference/caxwindow-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>This class provides methods for manipulating a window hosting an ActiveX control.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>atlwin.h</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAxWindow2T<ept id="p1">](../../atl/reference/caxwindow2t-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>This class provides methods for manipulating a window that hosts an ActiveX control and also has support for hosting licensed ActiveX controls.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>atlwin.h</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CBindStatusCallback<ept id="p1">](../../atl/reference/cbindstatuscallback-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This class implements the <ph id="ph1">`IBindStatusCallback`</ph> interface.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>atlctl.h</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComAggObject<ept id="p1">](../../atl/reference/ccomaggobject-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>This class implements <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms680509)</ept> for an aggregated object.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComAllocator<ept id="p1">](../../atl/reference/ccomallocator-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>This class provides methods for managing memory using COM memory routines.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>atlbase.h</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComApartment<ept id="p1">](../../atl/reference/ccomapartment-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>This class provides support for managing an apartment in a thread-pooled EXE module.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>atlbase.h</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComAutoCriticalSection<ept id="p1">](../../atl/reference/ccomautocriticalsection-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>This class provides methods for obtaining and releasing ownership of a critical section object.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>atlcore.h</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComAutoThreadModule<ept id="p1">](../../atl/reference/ccomautothreadmodule-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>As of ATL 7.0, <ph id="ph1">`CComAutoThreadModule`</ph> is obsolete: see <bpt id="p1">[</bpt>ATL Modules<ept id="p1">](../../atl/atl-module-classes.md)</ept> for more details.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>atlbase.h</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComBSTR<ept id="p1">](../../atl/reference/ccombstr-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>This class is a wrapper for <ph id="ph1">`BSTR`</ph>s.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>atlbase.h</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComCachedTearOffObject<ept id="p1">](../../atl/reference/ccomcachedtearoffobject-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>This class implements <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms680509)</ept> for a tear-off interface.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComClassFactory<ept id="p1">](../../atl/reference/ccomclassfactory-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>This class implements the <bpt id="p1">[</bpt>IClassFactory<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms694364)</ept> interface.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComClassFactory2<ept id="p1">](../../atl/reference/ccomclassfactory2-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>This class implements the <bpt id="p1">[</bpt>IClassFactory2<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms692720)</ept> interface.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComClassFactoryAutoThread<ept id="p1">](../../atl/reference/ccomclassfactoryautothread-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>This class implements the <bpt id="p1">[</bpt>IClassFactory<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms694364)</ept> interface and allows objects to be created in multiple apartments.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComClassFactorySingleton<ept id="p1">](../../atl/reference/ccomclassfactorysingleton-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>This class derives from <bpt id="p1">[</bpt>CComClassFactory<ept id="p1">](../../atl/reference/ccomclassfactory-class.md)</ept> and uses <bpt id="p2">[</bpt>CComObjectGlobal<ept id="p2">](../../atl/reference/ccomobjectglobal-class.md)</ept> to construct a single object.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComCoClass<ept id="p1">](../../atl/reference/ccomcoclass-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>This class provides methods for creating instances of a class and obtaining its properties.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComCompositeControl<ept id="p1">](../../atl/reference/ccomcompositecontrol-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>This class provides the methods required to implement a composite control.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>atlctl.h</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComContainedObject<ept id="p1">](../../atl/reference/ccomcontainedobject-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>This class implements <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms680509)</ept> by delegating to the owner object's <bpt id="p2">**</bpt>IUnknown<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComControl<ept id="p1">](../../atl/reference/ccomcontrol-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>This class provides methods for creating and managing ATL controls.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>atlctl.h</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComControlBase<ept id="p1">](../../atl/reference/ccomcontrolbase-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>This class provides methods for creating and managing ATL controls.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>atlctl.h</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComCriticalSection<ept id="p1">](../../atl/reference/ccomcriticalsection-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>This class provides methods for obtaining and releasing ownership of a critical section object.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>atlcore.h</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComCritSecLock<ept id="p1">](../../atl/reference/ccomcritseclock-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>This class provides methods for locking and unlocking a critical section object.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>atlbase.h</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComCurrency<ept id="p1">](../../atl/reference/ccomcurrency-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>This class has methods and operators for creating and managing a <ph id="ph1">`CURRENCY`</ph> object.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>atlcur.h</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComDynamicUnkArray<ept id="p1">](../../atl/reference/ccomdynamicunkarray-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>This class stores an array of <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> pointers.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComEnum<ept id="p1">](../../atl/reference/ccomenum-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>This class defines a COM enumerator object based on an array.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComEnumImpl<ept id="p1">](../../atl/reference/ccomenumimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>This class provides the implementation for a COM enumerator interface where the items being enumerated are stored in an array.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComEnumOnSTL<ept id="p1">](../../atl/reference/ccomenumonstl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>This class defines a COM enumerator object based on an STL collection.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComFakeCriticalSection<ept id="p1">](../../atl/reference/ccomfakecriticalsection-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>This class provides the same methods as <bpt id="p1">[</bpt>CComCriticalSection<ept id="p1">](../../atl/reference/ccomcriticalsection-class.md)</ept> but does not provide a critical section.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>atlcore.h</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComGITPtr<ept id="p1">](../../atl/reference/ccomgitptr-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>This class provides methods for dealing with interface pointers and the global interface table (GIT).</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>atlbase.h</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComHeap<ept id="p1">](../../atl/reference/ccomheap-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>This class implements <bpt id="p1">[</bpt>IAtlMemMgr<ept id="p1">](../../atl/reference/iatlmemmgr-class.md)</ept> using the COM memory allocation functions.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>ATLComMem.h</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComHeapPtr<ept id="p1">](../../atl/reference/ccomheapptr-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>A smart pointer class for managing heap pointers.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>atlbase.h</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComModule<ept id="p1">](../../atl/reference/ccommodule-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>As of ATL 7.0, <ph id="ph1">`CComModule`</ph> is obsolete: see <bpt id="p1">[</bpt>ATL Modules<ept id="p1">](../../atl/atl-module-classes.md)</ept> for more details.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>atlbase.h</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComMultiThreadModel<ept id="p1">](../../atl/reference/ccommultithreadmodel-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>This class provides thread-safe methods for incrementing and decrementing the value of a variable.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>atlbase.h</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComMultiThreadModelNoCS<ept id="p1">](../../atl/reference/ccommultithreadmodelnocs-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>This class provides thread-safe methods for incrementing and decrementing the value of a variable, without critical section locking or unlocking functionality.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>atlbase.h</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComObject<ept id="p1">](../../atl/reference/ccomobject-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>This class implements <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> for a nonaggregated object.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComObjectGlobal<ept id="p1">](../../atl/reference/ccomobjectglobal-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>This class manages a reference count on the module containing your <ph id="ph1">`Base`</ph> object.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComObjectNoLock<ept id="p1">](../../atl/reference/ccomobjectnolock-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>This class implements <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> for a nonaggregated object, but does not increment the module lock count in the constructor.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComObjectRoot<ept id="p1">](../../atl/reference/ccomobjectroot-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>This typedef of <bpt id="p1">[</bpt>CComObjectRootEx<ept id="p1">](../../atl/reference/ccomobjectrootex-class.md)</ept> is templatized on the default threading model of the server.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComObjectRootEx<ept id="p1">](../../atl/reference/ccomobjectrootex-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>This class provides methods to handle object reference count management for both nonaggregated and aggregated objects.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComObjectStack<ept id="p1">](../../atl/reference/ccomobjectstack-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>This class creates a temporary COM object and provides it with a skeletal implementation of <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComPolyObject<ept id="p1">](../../atl/reference/ccompolyobject-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>This class implements <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> for an aggregated or nonaggregated object.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComPtr<ept id="p1">](../../atl/reference/ccomptr-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>A smart pointer class for managing COM interface pointers.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>atlcomcli.h</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComPtrBase<ept id="p1">](../../atl/reference/ccomptrbase-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>This class provides a basis for smart pointer classes using COM-based memory routines.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>atlcomcli.h</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComQIPtr<ept id="p1">](../../atl/reference/ccomqiptr-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>A smart pointer class for managing COM interface pointers.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>atlcomcli.h</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComQIPtrElementTraits<ept id="p1">](../../atl/reference/ccomqiptrelementtraits-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>This class provides methods, static functions, and typedefs useful when creating collections of COM interface pointers.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>atlcoll.h</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComSafeArray<ept id="p1">](../../atl/reference/ccomsafearray-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>This class is a wrapper for the <ph id="ph1">`SAFEARRAY Data Type`</ph> structure.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>atlsafe.h</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComSafeArrayBound<ept id="p1">](../../atl/reference/ccomsafearraybound-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>This class is a wrapper for a <ph id="ph1">`SAFEARRAYBOUND`</ph> structure.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>atlsafe.h</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComSimpleThreadAllocator<ept id="p1">](../../atl/reference/ccomsimplethreadallocator-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>This class manages thread selection for the class <bpt id="p1">[</bpt>CComAutoThreadModule<ept id="p1">](../../atl/reference/ccomautothreadmodule-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>atlbase.h</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComSingleThreadModel<ept id="p1">](../../atl/reference/ccomsinglethreadmodel-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>This class provides methods for incrementing and decrementing the value of a variable.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>atlbase.h</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComTearOffObject<ept id="p1">](../../atl/reference/ccomtearoffobject-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>This class implements a tear-off interface.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComUnkArray<ept id="p1">](../../atl/reference/ccomunkarray-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>This class stores <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> pointers and is designed to be used as a parameter to the <bpt id="p2">[</bpt>IConnectionPointImpl<ept id="p2">](../../atl/reference/iconnectionpointimpl-class.md)</ept> template class.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComVariant<ept id="p1">](../../atl/reference/ccomvariant-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>This class wraps the VARIANT type, providing a member indicating the type of data stored.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>atlcomcli.h</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CContainedWindowT<ept id="p1">](../../atl/reference/ccontainedwindowt-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>This class implements a window contained within another object.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>atlwin.h</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CCRTAllocator<ept id="p1">](../../atl/reference/ccrtallocator-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>This class provides methods for managing memory using CRT memory routines.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>atlcore.h</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CCRTHeap<ept id="p1">](../../atl/reference/ccrtheap-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>This class implements <bpt id="p1">[</bpt>IAtlMemMgr<ept id="p1">](../../atl/reference/iatlmemmgr-class.md)</ept> using the CRT heap functions.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>atlmem.h</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CDacl<ept id="p1">](../../atl/reference/cdacl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>This class is a wrapper for a DACL (discretionary access-control list) structure.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>atlsecurity.h</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CDebugReportHook Class<ept id="p1">](../../atl/reference/cdebugreporthook-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Use this class to send debug reports to a named pipe.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>atlutil.h</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CDefaultCharTraits<ept id="p1">](../../atl/reference/cdefaultchartraits-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>This class provides two static functions for converting characters between uppercase and lowercase.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>atlcoll.h</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CDefaultCompareTraits<ept id="p1">](../../atl/reference/cdefaultcomparetraits-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>This class provides default element comparison functions.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>atlcoll.h</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CDefaultElementTraits<ept id="p1">](../../atl/reference/cdefaultelementtraits-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>This class provides default methods and functions for a collection class.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>atlcoll.h</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CDefaultHashTraits<ept id="p1">](../../atl/reference/cdefaulthashtraits-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>This class provides a static function for calculating hash values.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>atlcoll.h</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CDialogImpl<ept id="p1">](../../atl/reference/cdialogimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>This class provides methods for creating a modal or modeless dialog box.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>atlwin.h</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CDynamicChain<ept id="p1">](../../atl/reference/cdynamicchain-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>This class provides methods supporting the dynamic chaining of message maps.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>atlwin.h</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CElementTraits<ept id="p1">](../../atl/reference/celementtraits-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>This class is used by collection classes to provide methods and functions for moving, copying, comparison, and hashing operations.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>atlcoll.h</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CElementTraitsBase<ept id="p1">](../../atl/reference/celementtraitsbase-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>This class provides default copy and move methods for a collection class.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>atlcoll.h</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CFirePropNotifyEvent<ept id="p1">](../../atl/reference/cfirepropnotifyevent-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>This class provides methods for notifying the container's sink regarding control property changes.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>atlctl.h</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CGlobalHeap<ept id="p1">](../../atl/reference/cglobalheap-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>This class implements <bpt id="p1">[</bpt>IAtlMemMgr<ept id="p1">](../../atl/reference/iatlmemmgr-class.md)</ept> using the Win32 global heap functions.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>atlmem.h</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CHandle<ept id="p1">](../../atl/reference/chandle-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>This class provides methods for creating and using a handle object.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>atlbase.h</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CHeapPtr<ept id="p1">](../../atl/reference/cheapptr-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>A smart pointer class for managing heap pointers.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>atlcore.h</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CHeapPtrBase<ept id="p1">](../../atl/reference/cheapptrbase-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>This class forms the basis for several smart heap pointer classes.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>atlcore.h</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CHeapPtrElementTraits Class<ept id="p1">](../../atl/reference/cheapptrelementtraits-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>This class provides methods, static functions, and typedefs useful when creating collections of heap pointers.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>atlcoll.h</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CHeapPtrList<ept id="p1">](../../atl/reference/cheapptrlist-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>This class provides methods useful when constructing a list of heap pointers.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>atlcoll.h</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CImage<ept id="p1">](../../atl-mfc-shared/reference/cimage-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Provides enhanced bitmap support, including the ability to load and save images in JPEG, GIF, BMP, and Portable Network Graphics (PNG) formats.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>atlimage.h</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CInterfaceArray<ept id="p1">](../../atl/reference/cinterfacearray-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>This class provides methods useful when constructing an array of COM interface pointers.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>atlcoll.h</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CInterfaceList<ept id="p1">](../../atl/reference/cinterfacelist-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>This class provides methods useful when constructing a list of COM interface pointers.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>atlcoll.h</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CLocalHeap<ept id="p1">](../../atl/reference/clocalheap-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>This class implements <bpt id="p1">[</bpt>IAtlMemMgr<ept id="p1">](../../atl/reference/iatlmemmgr-class.md)</ept> using the Win32 local heap functions.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>atlmem.h</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMessageMap<ept id="p1">](../../atl/reference/cmessagemap-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>This class allows an object's message maps to be accessed by another object.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>atlwin.h</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CNonStatelessWorker Class<ept id="p1">](../../atl/reference/cnonstatelessworker-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Receives requests from a thread pool and passes them on to a worker object that is created and destroyed on each request.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>atlutil.h</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CNoWorkerThread Class<ept id="p1">](../../atl/reference/cnoworkerthread-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Use this class as the argument for the <ph id="ph1">`MonitorClass`</ph> template parameter cache classes if you want to disable dynamic cache maintenance.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>atlutil.h</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPathT Class<ept id="p1">](../../atl/reference/cpatht-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>This class represents a path.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>atlpath.h</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPrimitiveElementTraits<ept id="p1">](../../atl/reference/cprimitiveelementtraits-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>This class provides default methods and functions for a collection class composed of primitive data types.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>atlcoll.h</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPrivateObjectSecurityDesc<ept id="p1">](../../atl/reference/cprivateobjectsecuritydesc-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>This class represents a private object security descriptor object.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>atlsecurity.h</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRBMap<ept id="p1">](../../atl/reference/crbmap-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>This class represents a mapping structure, using a Red-Black binary tree.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>atlcoll.h</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRBMultiMap<ept id="p1">](../../atl/reference/crbmultimap-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>This class represents a mapping structure that allows each key to be associated with more than one value, using a Red-Black binary tree.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>atlcoll.h</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRBTree<ept id="p1">](../../atl/reference/crbtree-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>This class provides methods for creating and utilizing a Red-Black tree.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>atlcoll.h</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRegKey<ept id="p1">](../../atl/reference/cregkey-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>This class provides methods for manipulating entries in the system registry.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>atlbase.h</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRTThreadTraits<ept id="p1">](../../atl/reference/crtthreadtraits-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>This class provides the creation function for a CRT thread.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Use this class if the thread will use CRT functions.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>atlbase.h</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CSacl<ept id="p1">](../../atl/reference/csacl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>This class is a wrapper for a SACL (system access-control list) structure.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>atlsecurity.h</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CSecurityAttributes<ept id="p1">](../../atl/reference/csecurityattributes-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>This class is a thin wrapper for the <bpt id="p1">**</bpt>SECURITY_ATTRIBUTES<ept id="p1">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>atlsecurity.h</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CSecurityDesc<ept id="p1">](../../atl/reference/csecuritydesc-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>This class is a wrapper for the <bpt id="p1">**</bpt>SECURITY_DESCRIPTOR<ept id="p1">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>atlsecurity.h</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CSid<ept id="p1">](../../atl/reference/csid-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>This class is a wrapper for a <ph id="ph1">`SID`</ph> (security identifier) structure.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>atlsecurity.h</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CSimpleArray<ept id="p1">](../../atl/reference/csimplearray-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>This class provides methods for managing a simple array.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>atlsimpcoll.h</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CSimpleArrayEqualHelper<ept id="p1">](../../atl/reference/csimplearrayequalhelper-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>This class is a helper for the <bpt id="p1">[</bpt>CSimpleArray<ept id="p1">](../../atl/reference/csimplearray-class.md)</ept> class.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>atlsimpcoll.h</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CSimpleArrayEqualHelperFalse<ept id="p1">](../../atl/reference/csimplearrayequalhelperfalse-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>This class is a helper for the <bpt id="p1">[</bpt>CSimpleArray<ept id="p1">](../../atl/reference/csimplearray-class.md)</ept> class.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>atlsimpcoll.h</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CSimpleDialog<ept id="p1">](../../atl/reference/csimpledialog-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>This class implements a basic modal dialog box.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>atlwin.h</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CSimpleMap<ept id="p1">](../../atl/reference/csimplemap-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>This class provides support for a simple mapping array.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>atlsimpcoll.h</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CSimpleMapEqualHelper<ept id="p1">](../../atl/reference/csimplemapequalhelper-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>This class is a helper for the <bpt id="p1">[</bpt>CSimpleMap<ept id="p1">](../../atl/reference/csimplemap-class.md)</ept> class.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>atlsimpcoll.h</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CSimpleMapEqualHelperFalse<ept id="p1">](../../atl/reference/csimplemapequalhelperfalse-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>This class is a helper for the <bpt id="p1">[</bpt>CSimpleMap<ept id="p1">](../../atl/reference/csimplemap-class.md)</ept> class.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>atlsimpcoll.h</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CSnapInItemImpl<ept id="p1">](../../atl/reference/csnapinitemimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>This class provides methods for implementing a snap-in node object.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>atlsnap.h</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CSnapInPropertyPageImpl<ept id="p1">](../../atl/reference/csnapinpropertypageimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>This class provides methods for implementing a snap-in property page object.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>atlsnap.h</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CStockPropImpl<ept id="p1">](../../atl/reference/cstockpropimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>This class provides methods for supporting stock property values.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>atlctl.h</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CStringElementTraits<ept id="p1">](../../atl/reference/cstringelementtraits-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>This class provides static functions used by collection classes storing <ph id="ph1">`CString`</ph> objects.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>cstringt.h</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CStringElementTraitsI<ept id="p1">](../../atl/reference/cstringelementtraitsi-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>This class provides static functions related to strings stored in collection class objects.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>It is similar to <bpt id="p1">[</bpt>CStringElementTraits<ept id="p1">](../../atl/reference/cstringelementtraits-class.md)</ept>, but performs case-insensitive comparisons.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>atlcoll.h</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CStringRefElementTraits<ept id="p1">](../../atl/reference/cstringrefelementtraits-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>This class provides static functions related to strings stored in collection class objects.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>The string objects are dealt with as references.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>atlcoll.h</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CThreadPool Class<ept id="p1">](../../atl/reference/cthreadpool-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>This class provides a pool of worker threads that process a queue of work items.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>atlutil.h</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CTokenGroups<ept id="p1">](../../atl/reference/ctokengroups-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>This class is a wrapper for the <bpt id="p1">**</bpt>TOKEN_GROUPS<ept id="p1">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>atlsecurity.h</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CTokenPrivileges<ept id="p1">](../../atl/reference/ctokenprivileges-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>This class is a wrapper for the <bpt id="p1">**</bpt>TOKEN_PRIVILEGES<ept id="p1">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>atlsecurity.h</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CUrl Class<ept id="p1">](../../atl/reference/curl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>This class represents a URL.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>It allows you to manipulate each element of the URL independently of the others whether parsing an existing URL string or building a string from scratch.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>atlutil.h</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CW2AEX<ept id="p1">](../../atl/reference/cw2aex-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>This class is used by the string conversion macros <ph id="ph1">`CT2AEX`</ph>, <ph id="ph2">`CW2TEX`</ph>, <ph id="ph3">`CW2CTEX`</ph>, and <ph id="ph4">`CT2CAEX`</ph>, and the typedef <bpt id="p1">**</bpt>CW2A<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>atlconv.h</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CW2CWEX<ept id="p1">](../../atl/reference/cw2cwex-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>This class is used by the string conversion macros <ph id="ph1">`CW2CTEX`</ph> and <ph id="ph2">`CT2CWEX`</ph>, and the typedef <bpt id="p1">**</bpt>CW2CW<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>atlconv.h</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CW2WEX<ept id="p1">](../../atl/reference/cw2wex-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>This class is used by the string conversion macros <ph id="ph1">`CW2TEX`</ph> and <ph id="ph2">`CT2WEX`</ph>, and the typedef <ph id="ph3">`CW2W`</ph>.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>atlconv.h</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CWin32Heap<ept id="p1">](../../atl/reference/cwin32heap-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>This class implements <bpt id="p1">[</bpt>IAtlMemMgr<ept id="p1">](../../atl/reference/iatlmemmgr-class.md)</ept> using the Win32 heap allocation functions.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>atlmem.h</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CWindow<ept id="p1">](../../atl/reference/cwindow-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>This class provides methods for manipulating a window.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>atlwin.h</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CWindowImpl<ept id="p1">](../../atl/reference/cwindowimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>This class provides methods for creating or subclassing a window.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>atlwin.h</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CWinTraits<ept id="p1">](../../atl/reference/cwintraits-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>This class provides a method for standardizing the styles used when creating a window object.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>atlwin.h</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CWinTraitsOR<ept id="p1">](../../atl/reference/cwintraitsor-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>This class provides a method for standardizing the styles used when creating a window object.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>atlwin.h</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CWndClassInfo<ept id="p1">](../../atl/reference/cwndclassinfo-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>This class provides methods for registering information for a window class.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>atlwin.h</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CWorkerThread Class<ept id="p1">](../../atl/reference/cworkerthread-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>This class creates a worker thread or uses an existing one, waits on one or more kernel object handles, and executes a specified client function when one of the handles is signaled.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>atlutil.h</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IAtlAutoThreadModule<ept id="p1">](../../atl/reference/iatlautothreadmodule-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>This class represents an interface to a <ph id="ph1">`CreateInstance`</ph> method.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>atlbase.h</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IAtlMemMgr<ept id="p1">](../../atl/reference/iatlmemmgr-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>This class represents the interface to a memory manager.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>atlmem.h</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IAxWinAmbientDispatch<ept id="p1">](../../atl/reference/iaxwinambientdispatch-interface.md)</ept></source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>This interface provides methods for specifying characteristics of the hosted control or container.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>atlbase.h, ATLIFace.h</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IAxWinAmbientDispatchEx<ept id="p1">](../../atl/reference/iaxwinambientdispatchex-interface.md)</ept></source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>This interface implements supplemental ambient properties for a hosted control.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>atlbase.h, ATLIFace.h</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IAxWinHostWindow<ept id="p1">](../../atl/reference/iaxwinhostwindow-interface.md)</ept></source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>This interface provides methods for manipulating a control and its host object.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>atlbase.h, ATLIFace.h</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IAxWinHostWindowLic<ept id="p1">](../../atl/reference/iaxwinhostwindowlic-interface.md)</ept></source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>This interface provides methods for manipulating a licensed control and its host object.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>atlbase.h, ATLIFace.h</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ICollectionOnSTLImpl<ept id="p1">](../../atl/reference/icollectiononstlimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>This class provides methods used by a collection class.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IConnectionPointContainerImpl<ept id="p1">](../../atl/reference/iconnectionpointcontainerimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>This class implements a connection point container to manage a collection of <bpt id="p1">[</bpt>IConnectionPointImpl<ept id="p1">](../../atl/reference/iconnectionpointimpl-class.md)</ept> objects.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IConnectionPointImpl<ept id="p1">](../../atl/reference/iconnectionpointimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>This class implements a connection point.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IDataObjectImpl<ept id="p1">](../../atl/reference/idataobjectimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>This class provides methods for supporting Uniform Data Transfer and managing connections.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>atlctl.h</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IDispatchImpl<ept id="p1">](../../atl/reference/idispatchimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>This class provides a default implementation for the <ph id="ph1">`IDispatch`</ph> portion of a dual interface.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IDispEventImpl<ept id="p1">](../../atl/reference/idispeventimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>This class provides implementations of the <ph id="ph1">`IDispatch`</ph> methods.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IDispEventSimpleImpl<ept id="p1">](../../atl/reference/idispeventsimpleimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>This class provides implementations of the <ph id="ph1">`IDispatch`</ph> methods, without getting type information from a type library.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IDocHostUIHandlerDispatch<ept id="p1">](../../atl/reference/idochostuihandlerdispatch-interface.md)</ept></source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>An interface to the Microsoft HTML parsing and rendering engine.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>atlbase.h, ATLIFace.h</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IEnumOnSTLImpl<ept id="p1">](../../atl/reference/ienumonstlimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>This class defines an enumerator interface based on an STL collection.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IObjectSafetyImpl<ept id="p1">](../../atl/reference/iobjectsafetyimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>This class provides a default implementation of the <ph id="ph1">`IObjectSafety`</ph> interface to allow a client to retrieve and set an object's safety levels.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>atlctl.h</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IObjectWithSiteImpl<ept id="p1">](../../atl/reference/iobjectwithsiteimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>This class provides methods allowing an object to communicate with its site.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IOleControlImpl<ept id="p1">](../../atl/reference/iolecontrolimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>This class provides a default implementation of the <bpt id="p1">**</bpt>IOleControl<ept id="p1">**</ept> interface and implements <bpt id="p2">**</bpt>IUnknown<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>atlctl.h</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IOleInPlaceActiveObjectImpl<ept id="p1">](../../atl/reference/ioleinplaceactiveobjectimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>This class provides methods for assisting communication between an in-place control and its container.</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>atlctl.h</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IOleInPlaceObjectWindowlessImpl<ept id="p1">](../../atl/reference/ioleinplaceobjectwindowlessimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>This class implements <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> and provides methods that enable a windowless control to receive window messages and to participate in drag-and-drop operations.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>atlctl.h</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IOleObjectImpl<ept id="p1">](../../atl/reference/ioleobjectimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>This class implements <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> and is the principal interface through which a container communicates with a control.</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>atlctl.h</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IPerPropertyBrowsingImpl<ept id="p1">](../../atl/reference/iperpropertybrowsingimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>This class implements <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> and allows a client to access the information in an object's property pages.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>atlctl.h</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IPersistPropertyBagImpl<ept id="p1">](../../atl/reference/ipersistpropertybagimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>This class implements <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> and allows an object to save its properties to a client-supplied property bag.</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IPersistStorageImpl<ept id="p1">](../../atl/reference/ipersiststorageimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>This class implements the <bpt id="p1">[</bpt>IPersistStorage<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms679731)</ept> interface.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IPersistStreamInitImpl<ept id="p1">](../../atl/reference/ipersiststreaminitimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>This class implements <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> and provides a default implementation of the <bpt id="p2">[</bpt>IPersistStreamInit<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms682273)</ept> interface.</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IPointerInactiveImpl<ept id="p1">](../../atl/reference/ipointerinactiveimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>This class implements <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> and the <bpt id="p2">[</bpt>IPointerInactive<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms693712)</ept> interface methods.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>atlctl.h</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IPropertyNotifySinkCP<ept id="p1">](../../atl/reference/ipropertynotifysinkcp-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>This class exposes the <bpt id="p1">[</bpt>IPropertyNotifySink<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms692638)</ept> interface as an outgoing interface on a connectable object.</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>atlctl.h</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IPropertyPage2Impl<ept id="p1">](../../atl/reference/ipropertypage2impl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>This class implements <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> and inherits the default implementation of <bpt id="p2">[</bpt>IPropertyPageImpl<ept id="p2">](../../atl/reference/ipropertypageimpl-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>atlctl.h</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IPropertyPageImpl<ept id="p1">](../../atl/reference/ipropertypageimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>This class implements <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> and provides a default implementation of the <bpt id="p2">[</bpt>IPropertyPage<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms691246)</ept> interface.</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>atlctl.h</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IProvideClassInfo2Impl<ept id="p1">](../../atl/reference/iprovideclassinfo2impl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>This class provides a default implementation of the <bpt id="p1">[</bpt>IProvideClassInfo<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms687303)</ept> and <bpt id="p2">[</bpt>IProvideClassInfo2<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms693764)</ept> methods.</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IQuickActivateImpl<ept id="p1">](../../atl/reference/iquickactivateimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>This class combines containers' control initialization into a single call.</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>atlctl.h</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IRunnableObjectImpl<ept id="p1">](../../atl/reference/irunnableobjectimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>This class implements <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> and provides a default implementation of the <bpt id="p2">[</bpt>IRunnableObject<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms692783)</ept> interface.</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>atlctl.h</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IServiceProviderImpl<ept id="p1">](../../atl/reference/iserviceproviderimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>This class provides a default implementation of the <ph id="ph1">`IServiceProvider`</ph> interface.</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ISpecifyPropertyPagesImpl<ept id="p1">](../../atl/reference/ispecifypropertypagesimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>This class implements <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> and provides a default implementation of the <bpt id="p2">[</bpt>ISpecifyPropertyPages<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms695217)</ept> interface.</source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ISupportErrorInfoImpl<ept id="p1">](../../atl/reference/isupporterrorinfoimpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>This class provides a default implementation of the <ph id="ph1">`ISupportErrorInfo Interface`</ph> interface and can be used when only a single interface generates errors on an object.</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>atlcom.h</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IThreadPoolConfig Interface<ept id="p1">](../../atl/reference/ithreadpoolconfig-interface.md)</ept></source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>This interface provides methods for configuring a thread pool.</source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>atlutil.h</source>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IViewObjectExImpl<ept id="p1">](../../atl/reference/iviewobjecteximpl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>This class implements <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> and provides default implementations of the <bpt id="p2">[</bpt>IViewObject<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms680763)</ept>, <bpt id="p3">[</bpt>IViewObject2<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms691318)</ept>, and <bpt id="p4">[</bpt>IViewObjectEx<ept id="p4">](http://msdn.microsoft.com/library/windows/desktop/ms682375)</ept> interfaces.</source>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>atlctl.h</source>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IWorkerThreadClient Interface<ept id="p1">](../../atl/reference/iworkerthreadclient-interface.md)</ept></source>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`IWorkerThreadClient`</ph> is the interface implemented by clients of the <bpt id="p1">[</bpt>CWorkerThread<ept id="p1">](../../atl/reference/cworkerthread-class.md)</ept> class.</source>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>atlutil.h</source>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>_U_MENUorID<ept id="p1">](../../atl/reference/u-menuorid-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>This class provides wrappers for <bpt id="p1">**</bpt>CreateWindow<ept id="p1">**</ept> and <bpt id="p2">**</bpt>CreateWindowEx<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>atlwin.h</source>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>_U_RECT<ept id="p1">](../../atl/reference/u-rect-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>This argument adapter class allows either <ph id="ph1">`RECT`</ph> pointers or references to be passed to a function that is implemented in terms of pointers.</source>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>atlwin.h</source>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>_U_STRINGorID<ept id="p1">](../../atl/reference/u-stringorid-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source>This argument adapter class allows either resource names (<ph id="ph1">`LPCTSTR`</ph>s) or resource IDs (<bpt id="p1">**</bpt>UINT<ept id="p1">**</ept>s) to be passed to a function without requiring the caller to convert the ID to a string using the <bpt id="p2">**</bpt>MAKEINTRESOURCE<ept id="p2">**</ept> macro.</source>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source>atlwin.h</source>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Win32ThreadTraits<ept id="p1">](../../atl/reference/win32threadtraits-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source>This class provides the creation function for a Windows thread.</source>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source>Use this class if the thread will not use CRT functions.</source>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>atlbase.h</source>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ATL COM Desktop Components<ept id="p1">](../../atl/atl-com-desktop-components.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Functions<ept id="p1">](../../atl/reference/atl-functions.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Global Variables<ept id="p1">](../../atl/reference/atl-global-variables.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Structures<ept id="p1">](../../atl/reference/atl-structures.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Typedefs<ept id="p1">](../../atl/reference/atl-typedefs.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Class Overview<ept id="p1">](../../atl/atl-class-overview.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>