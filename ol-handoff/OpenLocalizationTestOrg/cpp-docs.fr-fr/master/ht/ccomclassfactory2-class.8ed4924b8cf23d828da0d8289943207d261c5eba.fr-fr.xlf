<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">22e8a43e7c140a4c217ad264efe482816f792e1d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\ccomclassfactory2-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9a480a3a5346779e5189b5d781e1f113c9dc168d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b9060c08c17da819a4208020986a4d997b1537bb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CComClassFactory2 Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CComClassFactory2 Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class implements the <bpt id="p1">[</bpt>IClassFactory2<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms692720)</ept> interface.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>license</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A class that implements the following static functions:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>static BOOL VerifyLicenseKey( BSTR<ept id="p1">**</ept> <ph id="ph1">`bstr`</ph> <bpt id="p2">**</bpt>);<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>static BOOL GetLicenseKey( DWORD<ept id="p1">**</ept> <ph id="ph1">`dwReserved`</ph> <bpt id="p2">**</bpt>, BSTR<ph id="ph2">\*</ph><ept id="p2">**</ept> <ph id="ph3">`pBstr`</ph> <bpt id="p3">**</bpt>);<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>static BOOL IsLicenseValid( );</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>CComClassFactory2::CreateInstance</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Creates an object of the specified CLSID.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>CComClassFactory2::CreateInstanceLic</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Given a license key, creates an object of the specified CLSID.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>CComClassFactory2::GetLicInfo</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Retrieves information describing the licensing capabilities of the class factory.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>CComClassFactory2::LockServer</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Locks the class factory in memory.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>CComClassFactory2::RequestLicKey</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Creates and returns a license key.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>implements the <bpt id="p1">[</bpt>IClassFactory2<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms692720)</ept> interface, which is an extension of <bpt id="p2">[</bpt>IClassFactory<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms694364)</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>IClassFactory2<ept id="p1">**</ept> controls object creation through a license.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A class factory executing on a licensed machine can provide a run-time license key.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This license key allows an application to instantiate objects when a full machine license does not exist.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>ATL objects normally acquire a class factory by deriving from <bpt id="p1">[</bpt>CComCoClass<ept id="p1">](../../atl/reference/ccomcoclass-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This class includes the macro <bpt id="p1">[</bpt>DECLARE_CLASSFACTORY<ept id="p1">](http://msdn.microsoft.com/library/51a6b925-07c0-4d3a-9174-0b8c808975e4)</ept>, which declares <bpt id="p2">[</bpt>CComClassFactory<ept id="p2">](../../atl/reference/ccomclassfactory-class.md)</ept> as the default class factory.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To use <ph id="ph1">`CComClassFactory2`</ph>, specify the <bpt id="p1">[</bpt>DECLARE_CLASSFACTORY2<ept id="p1">](http://msdn.microsoft.com/library/38a6c969-7297-4bb1-9ba6-1fe2d355b285)</ept> macro in your object's class definition.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>NVC_ATL_COM#2</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CMyLicense<ept id="p1">**</ept>, the template parameter to <ph id="ph1">`CComClassFactory2`</ph>, must implement the static functions <ph id="ph2">`VerifyLicenseKey`</ph>, <ph id="ph3">`GetLicenseKey`</ph>, and <ph id="ph4">`IsLicenseValid`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The following is an example of a simple license class:</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>NVC_ATL_COM#3</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>derives from both <bpt id="p1">**</bpt>CComClassFactory2Base<ept id="p1">**</ept> and <bpt id="p2">*</bpt>license<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CComClassFactory2Base<ept id="p1">**</ept>, in turn, derives from <bpt id="p2">**</bpt>IClassFactory2<ept id="p2">**</ept> and <bpt id="p3">**</bpt>CComObjectRootEx<ph id="ph1">\&lt;</ph> CComGlobalsThreadModel &gt;<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>CComObjectRootEx</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> atlcom.h</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>CComClassFactory2::CreateInstance</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Creates an object of the specified CLSID and retrieves an interface pointer to this object.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>[in] If the object is being created as part of an aggregate, then <ph id="ph1">`pUnkOuter`</ph> must be the outer unknown.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Otherwise, <ph id="ph1">`pUnkOuter`</ph> must be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>[in] The IID of the requested interface.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`pUnkOuter`</ph> is non- <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, <ph id="ph2">`riid`</ph> must be <bpt id="p2">**</bpt>IID_IUnknown<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>[out] A pointer to the interface pointer identified by <ph id="ph1">`riid`</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If the object does not support this interface, <ph id="ph1">`ppvObj`</ph> is set to <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Requires the machine to be fully licensed.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If a full machine license does not exist, call <bpt id="p1">[</bpt>CreateInstanceLic<ept id="p1">](#ccomclassfactory2__createinstancelic)</ept>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>CComClassFactory2::CreateInstanceLic</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Similar to <bpt id="p1">[</bpt>CreateInstance<ept id="p1">](#ccomclassfactory2__createinstance)</ept>, except that <ph id="ph1">`CreateInstanceLic`</ph> requires a license key.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>[in] If the object is being created as part of an aggregate, then <ph id="ph1">`pUnkOuter`</ph> must be the outer unknown.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Otherwise, <ph id="ph1">`pUnkOuter`</ph> must be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>pUnkReserved</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>[in] Not used.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Must be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>[in] The IID of the requested interface.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`pUnkOuter`</ph> is non- <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, <ph id="ph2">`riid`</ph> must be <bpt id="p2">**</bpt>IID_IUnknown<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>[in] The run-time license key previously obtained from a call to <ph id="ph1">`RequestLicKey`</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This key is required to create the object.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>[out] A pointer to the interface pointer specified by <ph id="ph1">`riid`</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If the object does not support this interface, <ph id="ph1">`ppvObject`</ph> is set to <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>You can obtain a license key using <bpt id="p1">[</bpt>RequestLicKey<ept id="p1">](#ccomclassfactory2__requestlickey)</ept>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>In order to create an object on an unlicensed machine, you must call <ph id="ph1">`CreateInstanceLic`</ph>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>CComClassFactory2::GetLicInfo</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Fills a <bpt id="p1">[</bpt>LICINFO<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms690590)</ept> structure with information that describes the class factory's licensing capabilities.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>pLicInfo</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>[out] Pointer to a <bpt id="p1">**</bpt>LICINFO<ept id="p1">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`fRuntimeKeyAvail`</ph> member of this structure indicates whether, given a license key, the class factory allows objects to be created on an unlicensed machine.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>fLicVerified<ept id="p1">*</ept> member indicates whether a full machine license exists.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>CComClassFactory2::LockServer</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Increments and decrements the module lock count by calling <bpt id="p1">**</bpt>_Module::Lock<ept id="p1">**</ept> and <bpt id="p2">**</bpt>_Module::Unlock<ept id="p2">**</ept>, respectively.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>[in] If <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>, the lock count is incremented; otherwise, the lock count is decremented.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>_Module<ept id="p1">**</ept> refers to the global instance of <bpt id="p2">[</bpt>CComModule<ept id="p2">](../../atl/reference/ccommodule-class.md)</ept> or a class derived from it.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Calling <ph id="ph1">`LockServer`</ph> allows a client to hold onto a class factory so that multiple objects can be quickly created.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>CComClassFactory2::RequestLicKey</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Creates and returns a license key, provided that the <ph id="ph1">`fRuntimeKeyAvail`</ph> member of the <bpt id="p1">[</bpt>LICINFO<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms690590)</ept> structure is <bpt id="p2">**</bpt>TRUE<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>[in] Not used.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Must be zero.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>[out] Pointer to the license key.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>A license key is required for calling <bpt id="p1">[</bpt>CreateInstanceLic<ept id="p1">](#ccomclassfactory2__createinstancelic)</ept> to create an object on an unlicensed machine.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`fRuntimeKeyAvail`</ph> is <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>, then objects can only be created on a fully licensed machine.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Call <bpt id="p1">[</bpt>GetLicInfo<ept id="p1">](#ccomclassfactory2__getlicinfo)</ept> to retrieve the value of <ph id="ph1">`fRuntimeKeyAvail`</ph>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>CComClassFactoryAutoThread Class</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>CComClassFactorySingleton Class</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>CComObjectRootEx Class</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>CComGlobalsThreadModel</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Class Overview</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>