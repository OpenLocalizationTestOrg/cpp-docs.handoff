<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f03871d1472c702bcfee3349bed1522bf8c75555</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\cpp\variant-t-variant-t.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">42b5166263ca9b4cf718cd7010db7598e7158057</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8500cde99ebb308cda341c0873bd51d6cc3a4dbf</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>_variant_t::_variant_t | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>_variant_t::_variant_t</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Microsoft Specific</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`_variant_t`</ph> object.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>varSrc</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>VARIANT<ept id="p1">**</ept> object to be copied into the new <ph id="ph1">`_variant_t`</ph> object.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>pVarSrc</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">**</bpt>VARIANT<ept id="p1">**</ept> object to be copied into the new <ph id="ph1">`_variant_t`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>var_t_Src</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`_variant_t`</ph> object to be copied into the new <ph id="ph2">`_variant_t`</ph> object.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If false, the supplied <bpt id="p1">**</bpt>VARIANT<ept id="p1">**</ept> object is attached to the new <ph id="ph1">`_variant_t`</ph> object without making a new copy by <bpt id="p2">**</bpt>VariantCopy<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>ISrc, sSrc</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An integer value to be copied into the new <ph id="ph1">`_variant_t`</ph> object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>VARTYPE<ept id="p1">**</ept> for the new <ph id="ph1">`_variant_t`</ph> object.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>fltSrc, dblSrc</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A numerical value to be copied into the new <ph id="ph1">`_variant_t`</ph> object.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>CY<ept id="p1">**</ept> object to be copied into the new <ph id="ph1">`_variant_t`</ph> object.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`_bstr_t`</ph> object to be copied into the new <ph id="ph2">`_variant_t`</ph> object.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>strSrc, wstrSrc</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A string to be copied into the new <ph id="ph1">`_variant_t`</ph> object.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`bool`</ph> value to be copied into the new <ph id="ph2">`_variant_t`</ph> object.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>COM interface pointer to a <bpt id="p1">**</bpt>VT_UNKNOWN<ept id="p1">**</ept> object to be encapsulated into the new <ph id="ph1">`_variant_t`</ph> object.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>COM interface pointer to a <bpt id="p1">**</bpt>VT_DISPATCH<ept id="p1">**</ept> object to be encapsulated into the new <ph id="ph1">`_variant_t`</ph> object.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>DECIMAL<ept id="p1">**</ept> value to be copied into the new <ph id="ph1">`_variant_t`</ph> object.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>BYTE<ept id="p1">**</ept> value to be copied into the new <ph id="ph1">`_variant_t`</ph> object.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`char`</ph> value to be copied into the new <ph id="ph2">`_variant_t`</ph> object.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>usSrc</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>unsigned short<ept id="p1">**</ept> value to be copied into the new <ph id="ph1">`_variant_t`</ph> object.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>ulSrc</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`unsigned long`</ph> value to be copied into the new <ph id="ph2">`_variant_t`</ph> object.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`int`</ph> value to be copied into the new <ph id="ph2">`_variant_t`</ph> object.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>uiSrc</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`unsigned int`</ph> value to be copied into the new <ph id="ph2">`_variant_t`</ph> object.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>i8Src</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An __<bpt id="p1">**</bpt>int64<ept id="p1">**</ept> value to be copied into the new <ph id="ph1">`_variant_t`</ph> object.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>ui8Src</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">**</bpt>unsigned __int64<ept id="p1">**</ept> value to be copied into the new <ph id="ph1">`_variant_t`</ph> object.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>_variant_t( )<ept id="p1">**</ept> Constructs an empty <ph id="ph1">`_variant_t`</ph> object, <ph id="ph2">`VT_EMPTY`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>_variant_t( VARIANT&amp;<ept id="p1">**</ept>  <bpt id="p2">*</bpt>varSrc<ept id="p2">*</ept>  <bpt id="p3">**</bpt>)<ept id="p3">**</ept> Constructs a <ph id="ph1">`_variant_t`</ph> object from a copy of the <bpt id="p4">**</bpt>VARIANT<ept id="p4">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The variant type is retained.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>_variant_t( VARIANT<ph id="ph1">\*</ph><ept id="p1">**</ept>  <bpt id="p2">*</bpt>pVarSrc<ept id="p2">*</ept>  <bpt id="p3">**</bpt>)<ept id="p3">**</ept> Constructs a <ph id="ph2">`_variant_t`</ph> object from a copy of the <bpt id="p4">**</bpt>VARIANT<ept id="p4">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The variant type is retained.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>_variant_t( _variant_t&amp;<ept id="p1">**</ept>  <bpt id="p2">*</bpt>var_t_Src<ept id="p2">*</ept>  <bpt id="p3">**</bpt>)<ept id="p3">**</ept> Constructs a <ph id="ph1">`_variant_t`</ph> object from another <ph id="ph2">`_variant_t`</ph> object.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The variant type is retained.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>_variant_t( VARIANT&amp;<ept id="p1">**</ept>  <bpt id="p2">*</bpt>varSrc<ept id="p2">*</ept> <bpt id="p3">**</bpt>, bool<ept id="p3">**</ept>  <ph id="ph1">`fCopy`</ph>  <bpt id="p4">**</bpt>)<ept id="p4">**</ept> Constructs a <ph id="ph2">`_variant_t`</ph> object from an existing <bpt id="p5">**</bpt>VARIANT<ept id="p5">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`fCopy`</ph> is <bpt id="p1">**</bpt>false<ept id="p1">**</ept>, the <bpt id="p2">**</bpt>VARIANT<ept id="p2">**</ept> object is attached to the new object without making a copy.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>_variant_t( short<ept id="p1">**</ept>  <bpt id="p2">*</bpt>sSrc<ept id="p2">*</ept> <bpt id="p3">**</bpt>, VARTYPE<ept id="p3">**</ept>  <ph id="ph1">`vtSrc`</ph>  <bpt id="p4">**</bpt>= VT_I2 )<ept id="p4">**</ept> Constructs a <ph id="ph2">`_variant_t`</ph> object of type <ph id="ph3">`VT_I2`</ph> or <ph id="ph4">`VT_BOOL`</ph> from a <bpt id="p5">**</bpt>short<ept id="p5">**</ept> integer value.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Any other <bpt id="p1">**</bpt>VARTYPE<ept id="p1">**</ept> results in an <ph id="ph1">`E_INVALIDARG`</ph> error.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>_variant_t( long<ept id="p1">**</ept>  <ph id="ph1">`lSrc`</ph> <bpt id="p2">**</bpt>, VARTYPE<ept id="p2">**</ept>  <ph id="ph2">`vtSrc`</ph>  <bpt id="p3">**</bpt>= VT_I4 )<ept id="p3">**</ept> Constructs a <ph id="ph3">`_variant_t`</ph> object of type <ph id="ph4">`VT_I4`</ph>, <ph id="ph5">`VT_BOOL`</ph>, or <ph id="ph6">`VT_ERROR`</ph> from a <bpt id="p4">**</bpt>long<ept id="p4">**</ept> integer value.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Any other <bpt id="p1">**</bpt>VARTYPE<ept id="p1">**</ept> results in an <ph id="ph1">`E_INVALIDARG`</ph> error.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>_variant_t( float<ept id="p1">**</ept>  <ph id="ph1">`fltSrc`</ph>  <bpt id="p2">**</bpt>)<ept id="p2">**</ept> Constructs a <ph id="ph2">`_variant_t`</ph> object of type <ph id="ph3">`VT_R4`</ph> from a <bpt id="p3">**</bpt>float<ept id="p3">**</ept> numerical value.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>_variant_t( double<ept id="p1">**</ept>  <ph id="ph1">`dblSrc`</ph> <bpt id="p2">**</bpt>, VARTYPE<ept id="p2">**</ept>  <ph id="ph2">`vtSrc`</ph>  <bpt id="p3">**</bpt>= VT_R8 )<ept id="p3">**</ept> Constructs a <ph id="ph3">`_variant_t`</ph> object of type <ph id="ph4">`VT_R8`</ph> or <ph id="ph5">`VT_DATE`</ph> from a <bpt id="p4">**</bpt>double<ept id="p4">**</ept> numerical value.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Any other <bpt id="p1">**</bpt>VARTYPE<ept id="p1">**</ept> results in an <ph id="ph1">`E_INVALIDARG`</ph> error.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>_variant_t( CY&amp;<ept id="p1">**</ept>  <ph id="ph1">`cySrc`</ph>  <bpt id="p2">**</bpt>)<ept id="p2">**</ept> Constructs a <ph id="ph2">`_variant_t`</ph> object of type <ph id="ph3">`VT_CY`</ph> from a <bpt id="p3">**</bpt>CY<ept id="p3">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>_variant_t( _bstr_t&amp;<ept id="p1">**</ept>  <ph id="ph1">`bstrSrc`</ph>  <bpt id="p2">**</bpt>)<ept id="p2">**</ept> Constructs a <ph id="ph2">`_variant_t`</ph> object of type <ph id="ph3">`VT_BSTR`</ph> from a <ph id="ph4">`_bstr_t`</ph> object.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">`BSTR`</ph> is allocated.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>_variant_t( wchar_t <ph id="ph1">\*</ph><ept id="p1">**</ept> <bpt id="p2">*</bpt>wstrSrc<ept id="p2">*</ept>  <bpt id="p3">**</bpt>)<ept id="p3">**</ept> Constructs a <ph id="ph2">`_variant_t`</ph> object of type <ph id="ph3">`VT_BSTR`</ph> from a Unicode string.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">`BSTR`</ph> is allocated.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>_variant_t( char<ph id="ph1">\*</ph><ept id="p1">**</ept>  <ph id="ph2">`strSrc`</ph>  <bpt id="p2">**</bpt>)<ept id="p2">**</ept> Constructs a <ph id="ph3">`_variant_t`</ph> object of type <ph id="ph4">`VT_BSTR`</ph> from a string.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">`BSTR`</ph> is allocated.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>_variant_t( bool<ept id="p1">**</ept>  <ph id="ph1">`bSrc`</ph>  <bpt id="p2">**</bpt>)<ept id="p2">**</ept> Constructs a <ph id="ph2">`_variant_t`</ph> object of type <ph id="ph3">`VT_BOOL`</ph> from a <ph id="ph4">`bool`</ph> value.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>_variant_t( IUnknown<ph id="ph1">\*</ph><ept id="p1">**</ept>  <ph id="ph2">`pIUknownSrc`</ph> <bpt id="p2">**</bpt>, bool<ept id="p2">**</ept>  <ph id="ph3">`fAddRef`</ph>  <bpt id="p3">**</bpt>= true )<ept id="p3">**</ept> Constructs a <ph id="ph4">`_variant_t`</ph> object of type <bpt id="p4">**</bpt>VT_UNKNOWN<ept id="p4">**</ept> from a COM interface pointer.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`fAddRef`</ph> is <bpt id="p1">**</bpt>true<ept id="p1">**</ept>, then <ph id="ph2">`AddRef`</ph> is called on the supplied interface pointer to match the call to <bpt id="p2">**</bpt>Release<ept id="p2">**</ept> that will occur when the <ph id="ph3">`_variant_t`</ph> object is destroyed.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>It is up to you to call <bpt id="p1">**</bpt>Release<ept id="p1">**</ept> on the supplied interface pointer.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`fAddRef`</ph> is <bpt id="p1">**</bpt>false<ept id="p1">**</ept>, this constructor takes ownership of the supplied interface pointer; do not call <bpt id="p2">**</bpt>Release<ept id="p2">**</ept> on the supplied interface pointer.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>_variant_t( IDispatch<ph id="ph1">\*</ph><ept id="p1">**</ept>  <ph id="ph2">`pDispSrc`</ph> <bpt id="p2">**</bpt>, bool<ept id="p2">**</ept>  <ph id="ph3">`fAddRef`</ph>  <bpt id="p3">**</bpt>= true )<ept id="p3">**</ept> Constructs a <ph id="ph4">`_variant_t`</ph> object of type <bpt id="p4">**</bpt>VT_DISPATCH<ept id="p4">**</ept> from a COM interface pointer.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`fAddRef`</ph> is <bpt id="p1">**</bpt>true<ept id="p1">**</ept>, then <ph id="ph2">`AddRef`</ph> is called on the supplied interface pointer to match the call to <bpt id="p2">**</bpt>Release<ept id="p2">**</ept> that will occur when the <ph id="ph3">`_variant_t`</ph> object is destroyed.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>It is up to you to call <bpt id="p1">**</bpt>Release<ept id="p1">**</ept> on the supplied interface pointer.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>fAddRef<ept id="p1">**</ept> is false, this constructor takes ownership of the supplied interface pointer; do not call <bpt id="p2">**</bpt>Release<ept id="p2">**</ept> on the supplied interface pointer.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>_variant_t( DECIMAL&amp;<ept id="p1">**</ept>  <ph id="ph1">`decSrc`</ph>  <bpt id="p2">**</bpt>)<ept id="p2">**</ept> Constructs a <ph id="ph2">`_variant_t`</ph> object of type <bpt id="p3">**</bpt>VT_DECIMAL<ept id="p3">**</ept> from a <bpt id="p4">**</bpt>DECIMAL<ept id="p4">**</ept> value.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>_variant_t( BYTE<ept id="p1">**</ept>  <ph id="ph1">`bSrc`</ph>  <bpt id="p2">**</bpt>)<ept id="p2">**</ept> Constructs a <ph id="ph2">`_variant_t`</ph> object of type <ph id="ph3">`VT_UI1`</ph> from a <bpt id="p3">**</bpt>BYTE<ept id="p3">**</ept> value.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>END Microsoft Specific</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>_variant_t Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>