<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">56a0c99c192b8294358365a872ecaeba0a0dd484</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\exceptions-examining-exception-contents.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c5ce2286d9cabcc2ac4f628281aa18d4eb430da0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9a2574387a9ce89c9ea73e5b479aeb7895bfac4f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Exceptions: Examining Exception Contents | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Exceptions: Examining Exception Contents</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Although a <bpt id="p1">**</bpt>catch<ept id="p1">**</ept> block's argument can be of almost any data type, the MFC functions throw exceptions of types derived from the class <ph id="ph1">`CException`</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To catch an exception thrown by an MFC function, then, you write a <bpt id="p1">**</bpt>catch<ept id="p1">**</ept> block whose argument is a pointer to a <ph id="ph1">`CException`</ph> object (or an object derived from <ph id="ph2">`CException`</ph>, such as <ph id="ph3">`CMemoryException`</ph>).</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Depending on the exact type of the exception, you can examine the data members of the exception object to gather information about the specific cause of the exception.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For example, the <ph id="ph1">`CFileException`</ph> type has the <ph id="ph2">`m_cause`</ph> data member, which contains an enumerated type that specifies the cause of the file exception.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Some examples of the possible return values are <bpt id="p1">**</bpt>CFileException::fileNotFound<ept id="p1">**</ept> and <bpt id="p2">**</bpt>CFileException::readOnly<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following example shows how to examine the contents of a <ph id="ph1">`CFileException`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Other exception types can be examined similarly.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>NVC_MFCExceptions#13</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Exceptions: Freeing Objects in Exceptions<ept id="p1">](../mfc/exceptions-freeing-objects-in-exceptions.md)</ept> and <bpt id="p2">[</bpt>Exceptions: Catching and Deleting Exceptions<ept id="p2">](../mfc/exceptions-catching-and-deleting-exceptions.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Exception Handling</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>