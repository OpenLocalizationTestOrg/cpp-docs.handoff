<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8adbfb1f21aa7f312fd30fdccda0a0555ebf2523</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl-mfc-shared\reference\csize-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">032a193401e0fd5ddcec21c83ad1d57732676bd8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2677ce8782f2e8600d8f0d86f90a495f0693a811</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CSize Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CSize Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Similar to the Windows <bpt id="p1">[</bpt>SIZE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd145106)</ept> structure, which implements a relative coordinate or position.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>CSize::CSize</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CSize`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Operators</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>CSize::operator -</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Subtracts two sizes.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>CSize::operator !=</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Checks for inequality between <ph id="ph1">`CSize`</ph> and a size.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>CSize::operator +</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Adds two sizes.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>CSize::operator +=</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Adds a size to <ph id="ph1">`CSize`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>CSize::operator -=</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Subtracts a size from <ph id="ph1">`CSize`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>CSize::operator ==</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Checks for equality between <ph id="ph1">`CSize`</ph> and a size.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This class is derived from the <bpt id="p1">**</bpt>SIZE<ept id="p1">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This means you can pass a <ph id="ph1">`CSize`</ph> in a parameter that calls for a <bpt id="p1">**</bpt>SIZE<ept id="p1">**</ept> and that the data members of the <bpt id="p2">**</bpt>SIZE<ept id="p2">**</ept> structure are accessible data members of <ph id="ph2">`CSize`</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>cx<ept id="p1">**</ept> and <bpt id="p2">**</bpt>cy<ept id="p2">**</ept> members of <bpt id="p3">**</bpt>SIZE<ept id="p3">**</ept> (and <ph id="ph1">`CSize`</ph>) are public.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In addition, <ph id="ph1">`CSize`</ph> implements member functions to manipulate the <bpt id="p1">**</bpt>SIZE<ept id="p1">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information on shared utility classes (like <ph id="ph1">`CSize`</ph>), see <bpt id="p1">[</bpt>Shared Classes<ept id="p1">](../../atl-mfc-shared/atl-mfc-shared-classes.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> atltypes.h</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>CSize::CSize</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CSize`</ph> object.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>initCX</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Sets the <bpt id="p1">**</bpt>cx<ept id="p1">**</ept> member for the <ph id="ph1">`CSize`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>initCY</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Sets the <bpt id="p1">**</bpt>cy<ept id="p1">**</ept> member for the <ph id="ph1">`CSize`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>SIZE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd145106)</ept> structure or <ph id="ph1">`CSize`</ph> object used to initialize <ph id="ph2">`CSize`</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>POINT<ept id="p1">](../../mfc/reference/point-structure1.md)</ept> structure or <ph id="ph1">`CPoint`</ph> object used to initialize <ph id="ph2">`CSize`</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>used to initialize <ph id="ph1">`CSize`</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The low-order word is the <bpt id="p1">**</bpt>cx<ept id="p1">**</ept> member and the high-order word is the <bpt id="p2">**</bpt>cy<ept id="p2">**</ept> member.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If no arguments are given, <bpt id="p1">**</bpt>cx<ept id="p1">**</ept> and <bpt id="p2">**</bpt>cy<ept id="p2">**</ept> are initialized to zero.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>NVC_ATLMFC_Utilities#97</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>CSize::operator ==</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Checks for equality between two sizes.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Returns nonzero if the sizes are equal, otherwize 0.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>NVC_ATLMFC_Utilities#98</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>CSize::operator !=</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Checks for inequality between two sizes.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Returns nonzero if the sizes are not equal, otherwise 0.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>NVC_ATLMFC_Utilities#99</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>CSize::operator +=</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Adds a size to this <ph id="ph1">`CSize`</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>NVC_ATLMFC_Utilities#100</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>CSize::operator -=</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Subtracts a size from this <ph id="ph1">`CSize`</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>NVC_ATLMFC_Utilities#101</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>CSize::operator +</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>These operators add this <ph id="ph1">`CSize`</ph> value to the value of parameter.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>See the following descriptions of the individual operators:</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>operator +(<ept id="p1">**</ept> <ph id="ph1">`size`</ph> <bpt id="p2">**</bpt>)<ept id="p2">**</ept>This operation adds two <ph id="ph2">`CSize`</ph> values.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>operator +(<ept id="p1">**</ept> <ph id="ph1">`point`</ph> <bpt id="p2">**</bpt>)<ept id="p2">**</ept>This operation offsets (moves) a <bpt id="p3">[</bpt>POINT<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/dd162805)</ept> (or <bpt id="p4">[</bpt>CPoint<ept id="p4">](../../atl-mfc-shared/reference/cpoint-class.md)</ept>) value by this <ph id="ph2">`CSize`</ph> value.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>cx<ept id="p1">**</ept> and <bpt id="p2">**</bpt>cy<ept id="p2">**</ept> members of this <ph id="ph1">`CSize`</ph> value are added to the <bpt id="p3">**</bpt>x<ept id="p3">**</ept> and <bpt id="p4">**</bpt>y<ept id="p4">**</ept> data members of the <bpt id="p5">**</bpt>POINT<ept id="p5">**</ept> value.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>It is analogous to the version of <bpt id="p1">[</bpt>CPoint::operator +<ept id="p1">](../../atl-mfc-shared/reference/cpoint-class.md#cpoint__operator__add)</ept> that takes a <bpt id="p2">[</bpt>SIZE<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/dd145106)</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>operator +(<ept id="p1">**</ept> <ph id="ph1">`lpRect`</ph> <bpt id="p2">**</bpt>)<ept id="p2">**</ept>This operation offsets (moves) a <bpt id="p3">[</bpt>RECT<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> (or <bpt id="p4">[</bpt>CRect<ept id="p4">](../../atl-mfc-shared/reference/crect-class.md)</ept>) value by this <ph id="ph2">`CSize`</ph> value.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>cx<ept id="p1">**</ept> and <bpt id="p2">**</bpt>cy<ept id="p2">**</ept> members of this <ph id="ph1">`CSize`</ph> value are added to the <bpt id="p3">**</bpt>left<ept id="p3">**</ept>, <bpt id="p4">**</bpt>top<ept id="p4">**</ept>, <bpt id="p5">**</bpt>right<ept id="p5">**</ept>, and <bpt id="p6">**</bpt>bottom<ept id="p6">**</ept> data members of the <ph id="ph2">`RECT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>It is analogous to the version of <bpt id="p1">[</bpt>CRect::operator +<ept id="p1">](../../atl-mfc-shared/reference/crect-class.md#crect__operator__add)</ept> that takes a <bpt id="p2">[</bpt>SIZE<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/dd145106)</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>NVC_ATLMFC_Utilities#102</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>CSize::operator -</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The first three of these operators subtract this <ph id="ph1">`CSize`</ph> value to the value of parameter.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The fourth operator, the unary minus, changes the sign of the <ph id="ph1">`CSize`</ph> value.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>See the following descriptions of the individual operators:</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>operator -(<ept id="p1">**</ept> <ph id="ph1">`size`</ph> <bpt id="p2">**</bpt>)<ept id="p2">**</ept>This operation subtracts two <ph id="ph2">`CSize`</ph> values.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>operator -(<ept id="p1">**</ept> <ph id="ph1">`point`</ph> <bpt id="p2">**</bpt>)<ept id="p2">**</ept>This operation offsets (moves) a <bpt id="p3">[</bpt>POINT<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/dd162805)</ept> or <bpt id="p4">[</bpt>CPoint<ept id="p4">](../../atl-mfc-shared/reference/cpoint-class.md)</ept> value by the additive inverse of this <ph id="ph2">`CSize`</ph> value.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>cx<ept id="p1">**</ept> and <bpt id="p2">**</bpt>cy<ept id="p2">**</ept> of this <ph id="ph1">`CSize`</ph> value are subtracted from the <bpt id="p3">**</bpt>x<ept id="p3">**</ept> and <bpt id="p4">**</bpt>y<ept id="p4">**</ept> data members of the <bpt id="p5">**</bpt>POINT<ept id="p5">**</ept> value.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>It is analogous to the version of <bpt id="p1">[</bpt>CPoint::operator -<ept id="p1">](../../atl-mfc-shared/reference/cpoint-class.md#cpoint__operator_-)</ept> that takes a <bpt id="p2">[</bpt>SIZE<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/dd145106)</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>operator -(<ept id="p1">**</ept> <ph id="ph1">`lpRect`</ph> <bpt id="p2">**</bpt>)<ept id="p2">**</ept>This operation offsets (moves) a <bpt id="p3">[</bpt>RECT<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> or <bpt id="p4">[</bpt>CRect<ept id="p4">](../../atl-mfc-shared/reference/crect-class.md)</ept> value by the additive inverse of this <ph id="ph2">`CSize`</ph> value.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>cx<ept id="p1">**</ept> and <bpt id="p2">**</bpt>cy<ept id="p2">**</ept> members of this <ph id="ph1">`CSize`</ph> value are subtracted from the <bpt id="p3">**</bpt>left<ept id="p3">**</ept>, <bpt id="p4">**</bpt>top<ept id="p4">**</ept>, <bpt id="p5">**</bpt>right<ept id="p5">**</ept>, and <bpt id="p6">**</bpt>bottom<ept id="p6">**</ept> data members of the <ph id="ph2">`RECT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>It is analogous to the version of <bpt id="p1">[</bpt>CRect::operator -<ept id="p1">](../../atl-mfc-shared/reference/crect-class.md#crect__operator_-)</ept> that takes a <bpt id="p2">[</bpt>SIZE<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/dd145106)</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>operator -( )<ept id="p1">**</ept>This operation returns the additive inverse of this <ph id="ph1">`CSize`</ph> value.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>NVC_ATLMFC_Utilities#103</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>MFC Sample MDI</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Hierarchy Chart</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>CRect Class</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>CPoint Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>