<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9cdd4bb43c40414b5ad35cab2f93f55c721b1063</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\sbcs-and-mbcs-data-types.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4c9daa501bbe7633a359a22f74f17e80b0d84284</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d29f024a0deb2f5b3eb0421b2042dbb06b444d6e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>SBCS and MBCS Data Types | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>SBCS and MBCS Data Types</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Any Microsoft <ph id="ph1">`MBCS`</ph> run-time library routine that handles only one multibyte character or one byte of a multibyte character expects an <ph id="ph2">`unsigned``int`</ph> argument (where 0x00 &lt;= character value &lt;= 0xFFFF and 0x00 &lt;= byte value &lt;= 0xFF ).</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`MBCS`</ph> routine that handles multibyte bytes or characters in a string context expects a multibyte-character string to be represented as an <ph id="ph2">`unsigned``char`</ph> pointer.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Each byte of a multibyte character can be represented in an 8-bit <ph id="ph1">`char`</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>However, an <ph id="ph1">`SBCS`</ph> or <ph id="ph2">`MBCS`</ph> single-byte character of type <ph id="ph3">`char`</ph> with a value greater than 0x7F is negative.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When such a character is converted directly to an <ph id="ph1">`int`</ph> or a <ph id="ph2">`long`</ph>, the result is sign-extended by the compiler and can therefore yield unexpected results.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Therefore it is best to represent a byte of a multibyte character as an 8-bit <ph id="ph1">`unsigned char`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Or, to avoid a negative result, simply convert a single-byte character of type <ph id="ph1">`char`</ph> to an <ph id="ph2">`unsigned char`</ph> before converting it to an <ph id="ph3">`int`</ph> or a <ph id="ph4">`long`</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Because some <ph id="ph1">`SBCS`</ph> string-handling functions take (signed) <ph id="ph2">`char*`</ph> parameters, a type mismatch compiler warning will result when <ph id="ph3">`_MBCS`</ph> is defined.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>There are three ways to avoid this warning, listed in order of efficiency:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Use the "type-safe" inline functions in TCHAR.H.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This is the default behavior.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Use the "direct" macros in TCHAR.H by defining <ph id="ph1">`_MB_MAP_DIRECT`</ph> on the command line.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If you do this, you must manually match types.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This is the fastest method but is not type-safe.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Use the "type-safe" statically linked library functions in TCHAR.H.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To do so, define the constant <ph id="ph1">`_NO_INLINING`</ph> on the command line.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This is the slowest method, but the most type-safe.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Internationalization</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Run-Time Routines by Category</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>