<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a24a83bec0e9d86cce6b086782576c732c9af322</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\data\odbc\dynaset.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5fbd85a5a316d5011afad2ca5a47fda6bb5b45a1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">66747c3a3e7bb51262b80d307612e408fb151fa0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Dynaset | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Dynaset</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic describes dynasets and discusses their <bpt id="p1">[</bpt>availability<ept id="p1">](#_core_availability_of_dynasets)</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic applies to the MFC ODBC classes, including <bpt id="p1">[</bpt>CRecordset<ept id="p1">](../../mfc/reference/crecordset-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For information about dynasets in the DAO classes, see <bpt id="p1">[</bpt>CDaoRecordset<ept id="p1">](../../mfc/reference/cdaorecordset-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>With DAO, you can open dynaset-type recordsets.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A dynaset is a recordset with dynamic properties.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>During its lifetime, a recordset object in dynaset mode (usually called a dynaset) stays synchronized with the data source in the following way.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In a multiuser environment, other users might edit or delete records that are in your dynaset or add records to the table your dynaset represents.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Records your application adds to or deletes from the recordset are reflected in your dynaset.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Records that other users add to the table will not be reflected in your dynaset until you rebuild the dynaset by calling its <bpt id="p1">**</bpt>Requery<ept id="p1">**</ept> member function.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When other users delete records, MFC code skips over the deletions in your recordset.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Other users' editing changes to existing records are reflected in your dynaset as soon as you scroll to the affected record.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Similarly, edits you make to records in a dynaset are reflected in dynasets in use by other users.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Records you add are not reflected in other users' dynasets until they requery their dynasets.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Records you delete are marked as "deleted" in other users' recordsets.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If you have multiple connections to the same database (multiple <ph id="ph1">`CDatabase`</ph> objects), recordsets associated with those connections have the same status as the recordsets of other users.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Dynasets are most valuable when data must be dynamic, as (for example) in an airline reservation system.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To use dynasets, you must have an ODBC driver for your data source that supports dynasets and the ODBC cursor library must not be loaded.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Availability of Dynasets<ept id="p1">](#_core_availability_of_dynasets)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To specify that a recordset is a dynaset, pass <bpt id="p1">**</bpt>CRecordset::dynaset<ept id="p1">**</ept> as the first parameter to the <bpt id="p2">**</bpt>Open<ept id="p2">**</ept> member function of your recordset object.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For updatable dynasets, your ODBC driver must support either positioned update statements or the <bpt id="p1">**</bpt>::SQLSetPos<ept id="p1">**</ept> ODBC API function.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If both are supported, MFC uses <bpt id="p1">**</bpt>::SQLSetPos<ept id="p1">**</ept> for efficiency.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Availability of Dynasets</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The MFC database classes support dynasets if the following requirements are met:</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The ODBC cursor library DLL must not be in use for this data source.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If the cursor library is used, it masks some functionality of the underlying ODBC driver that is necessary for dynaset support.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If you want to use dynasets (and your ODBC driver has the functionality required for dynasets, as described in the rest of this section), you can cause MFC not to load the cursor library when you create a <ph id="ph1">`CDatabase`</ph> object.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>ODBC<ept id="p1">](../../data/odbc/odbc-basics.md)</ept> and the <bpt id="p2">[</bpt>OpenEx<ept id="p2">](../../mfc/reference/cdatabase-class.md#cdatabase__openex)</ept> or <bpt id="p3">[</bpt>Open<ept id="p3">](../../mfc/reference/cdatabase-class.md#cdatabase__open)</ept> member function of class <ph id="ph1">`CDatabase`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In ODBC terminology, dynasets and snapshots are referred to as cursors.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A cursor is a mechanism used for keeping track of its position in a recordset.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The ODBC driver for your data source must support keyset-driven cursors.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Keyset-driven cursors manage data from a table by getting and storing a set of keys.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The keys are used to obtain current data from the table when the user scrolls onto a particular record.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To determine whether your driver provides this support, call the <bpt id="p1">**</bpt>::SQLGetInfo<ept id="p1">**</ept> ODBC API function with the <bpt id="p2">**</bpt>SQL_SCROLL_OPTIONS<ept id="p2">**</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If you try to open a dynaset without keyset support, you get a <ph id="ph1">`CDBException`</ph> with the return code value <bpt id="p1">**</bpt>AFX_SQL_ERROR_DYNASET_NOT_SUPPORTED<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The ODBC driver for your data source must support extended fetching.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Extended fetching is the ability to scroll backward as well as forward over the resulting records of your SQL query.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To determine whether your driver supports this ability, call the <bpt id="p1">**</bpt>::SQLGetFunctions<ept id="p1">**</ept> ODBC API function with the <bpt id="p2">**</bpt>SQL_API_SQLEXTENDEDFETCH<ept id="p2">**</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If you want updateable dynasets (or snapshots, for that matter), your ODBC driver must also support either the <bpt id="p1">**</bpt>::SQLSetPos<ept id="p1">**</ept> ODBC API function or positioned updates.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>::SQLSetPos<ept id="p1">**</ept> function allows MFC to update the data source without sending SQL statements.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If this support is available, MFC uses it in preference to making updates using SQL.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To determine whether your driver supports <bpt id="p1">**</bpt>::SQLSetPos<ept id="p1">**</ept>, call <bpt id="p2">**</bpt>::SQLGetInfo<ept id="p2">**</ept> with the <bpt id="p3">**</bpt>SQL_POS_OPERATIONS<ept id="p3">**</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Positioned updates use SQL syntax (of the form <bpt id="p1">**</bpt>WHERE CURRENT OF<ept id="p1">**</ept> <ph id="ph1">\&lt;</ph>cursorname&gt;) to identify a particular row in the table on the data source.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To determine whether your driver supports positioned updates, call <bpt id="p1">**</bpt>::SQLGetInfo<ept id="p1">**</ept> with the <bpt id="p2">**</bpt>SQL_POSITIONED_STATEMENTS<ept id="p2">**</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Generally, MFC dynasets (but not forward-only recordsets) require an ODBC driver with level 2 API conformance.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If the driver for your data source conforms to the level 1 API set, you can still use both updateable and read-only snapshots and forward-only recordsets, but not dynasets.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>However, a level 1 driver can support dynasets if it supports extended fetching and keyset-driven cursors.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For more information about ODBC conformance levels, see <bpt id="p1">[</bpt>ODBC<ept id="p1">](../../data/odbc/odbc-basics.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If you want to use both snapshots and dynasets, you must base them on two different <ph id="ph1">`CDatabase`</ph> objects (two different connections).</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Unlike snapshots, which use intermediate storage maintained by the ODBC cursor library, dynasets fetch a record directly from the data source as soon as you scroll to it.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This keeps the records originally selected by the dynaset synchronized with the data source.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For a list of ODBC drivers included in this version of Visual C++ and for information about obtaining additional drivers, see <bpt id="p1">[</bpt>ODBC Driver List<ept id="p1">](../../data/odbc/odbc-driver-list.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Open Database Connectivity (ODBC)</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>