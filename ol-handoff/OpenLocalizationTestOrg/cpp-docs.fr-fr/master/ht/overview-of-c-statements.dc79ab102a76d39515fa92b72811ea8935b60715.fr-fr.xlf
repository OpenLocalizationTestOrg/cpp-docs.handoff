<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5894e90cf85bf1110e2fc6780806ae00487b735e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-language\overview-of-c-statements.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">abccb63f1448b5a53b25368d4980e0132adcf7ba</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4d298cad920638ea7f12e3970e13ba4d03d1a506</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Overview of C Statements | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Overview of C Statements</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>C statements consist of tokens, expressions, and other statements.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A statement that forms a component of another statement is called the "body" of the enclosing statement.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Each statement type given by the following syntax is discussed in this section.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>statement<ept id="p1">*</ept>:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>labeled-statement</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>compound-statement</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>expression-statement</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>selection-statement</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>iteration-statement</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>jump-statement</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>try-except-statement</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>/* Microsoft Specific <ph id="ph1">\*/</ph><bpt id="p1">[</bpt>try-finally-statement<ept id="p1">](../c-language/try-finally-statement-c.md)</ept><ph id="ph2"> /\*</ph> Microsoft Specific</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Frequently the statement body is a "compound statement."</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A compound statement consists of other statements that can include keywords.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The compound statement is delimited by braces (<bpt id="p1">**</bpt>{ }<ept id="p1">**</ept>).</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>All other C statements end with a semicolon (<bpt id="p1">**</bpt>;<ept id="p1">**</ept>).</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The semicolon is a statement terminator.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The expression statement contains a C expression that can contain the arithmetic or logical operators introduced in <bpt id="p1">[</bpt>Expressions and Assignments<ept id="p1">](../c-language/expressions-and-assignments.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The null statement is an empty statement.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Any C statement can begin with an identifying label consisting of a name and a colon.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Since only the <ph id="ph1">`goto`</ph> statement recognizes statement labels, statement labels are discussed with <ph id="ph2">`goto`</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>The goto and Labeled Statements<ept id="p1">](../c-language/goto-and-labeled-statements-c.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Statements</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>