<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e858b526cb4154343f69cc1da816d1ad4755e9d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\windows\building-an-attributed-program.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">88ba2ab67900c1f7d62d2ae24ce984b3c31344ae</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">99df7118db59980b8b5cfefe912cc0b0e79e90fa</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Building an Attributed Program | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Building an Attributed Program</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>After you put Visual C++ attributes into your source code, you may want the Visual C++ compiler to produce a type library and .idl file for you.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The following linker options help you build .tlb and .idl files:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>/IDLOUT</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>/IGNOREIDL</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>/MIDL</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>/TLBOUT</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Some projects contain multiple independent .idl files.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>These are used to produce two or more .tlb files and optionally bind them into the resource block.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This scenario is not currently supported in Visual C++.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In addition, the Visual C++ linker will output all IDL-related attribute information to a single MIDL file.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>There will be no way to generate two type libraries from a single project.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Concepts</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>