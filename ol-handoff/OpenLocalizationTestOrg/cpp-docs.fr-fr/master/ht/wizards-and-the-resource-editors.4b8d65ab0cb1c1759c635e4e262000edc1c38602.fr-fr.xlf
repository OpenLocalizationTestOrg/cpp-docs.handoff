<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b76ae4e8d1af9328fad75cb0f427a380d716f81</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\wizards-and-the-resource-editors.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e88b38609fd4b51e1197577305dd8cebbdada597</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">93f9a0a4709ba07395661e53128a5f0743e63b74</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Wizards and the Resource Editors | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Wizards and the Resource Editors</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Visual C++ includes several wizards for use in MFC programming, along with many integrated resource editors.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For ActiveX controls programming, the <bpt id="p1">[</bpt>ActiveX Control Wizard<ept id="p1">](../mfc/reference/mfc-activex-control-wizard.md)</ept> serves a purpose much like that of the MFC Application Wizard.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>While you can write MFC applications without most of these tools, the tools greatly simplify and speed your work.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Use the MFC Application Wizard to Create an MFC Application</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>MFC Application Wizard<ept id="p1">](../mfc/reference/mfc-application-wizard.md)</ept> to create an MFC project in Visual C++, which can include OLE and database support.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Files in the project contain your application, document, view, and frame-window classes; standard resources, including menus and an optional toolbar; other required Windows files; and optional .rtf files containing standard Windows Help topics that you can revise and augment to create your program's help file.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Use Class View to Manage Classes and Windows Messages</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Class View helps you create handler functions for Windows messages and commands, create and manage classes, create class member variables, create Automation methods and properties, create database classes, and more.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Class View also helps you to override virtual functions in the MFC classes.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Select the class and the virtual function to override.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The rest of the process is similar to message handling, as described in the following paragraphs.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Applications running under Windows are <bpt id="p1">[</bpt>message driven<ept id="p1">](../mfc/message-handling-and-mapping.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>User actions and other events that occur in the running program cause Windows to send messages to the windows in the program.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For example, if the user clicks the mouse in a window, Windows sends a <ph id="ph1">`WM_LBUTTONDOWN`</ph> message when the left mouse button is pressed and a <ph id="ph2">`WM_LBUTTONUP`</ph> message when the button is released.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Windows also sends <bpt id="p1">**</bpt>WM_COMMAND<ept id="p1">**</ept> messages when the user selects commands from the menu bar.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In the MFC framework, various objects, such as documents, views, frame windows, document templates, and the application object, can "handle" messages.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Such an object provides a "handler function" as one of its member functions, and the framework maps the incoming message to its handler.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A large part of your programming task is choosing which messages to map to which objects and then implementing that mapping.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To do so, you use Class View and the Properties window.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The Properties window will create empty message-handler member functions, and you use the source code editor to implement the body of the handler.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can also create or edit classes (including classes of your own, not derived from MFC classes) and their members with Class View.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For more information on using Class View and about wizards that add code to a project, see <bpt id="p1">[</bpt>Adding Functionality with Code Wizards<ept id="p1">](../ide/adding-functionality-with-code-wizards-cpp.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Use the Resource Editors to Create and Edit Resources</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Use the Visual C++ <bpt id="p1">[</bpt>resource editors<ept id="p1">](../mfc/resource-editors.md)</ept> to create and edit menus, dialog boxes, custom controls, accelerator keys, bitmaps, icons, cursors, strings, and version resources.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>As of Visual C++ version 4.0, a toolbar editor makes creating toolbars much easier.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To help you even more, the Microsoft Foundation Class Library provides a file called COMMON.RES, which contains "clip art" resources that you can copy from COMMON.RES and paste into your own resource file.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>COMMON.RES includes toolbar buttons, common cursors, icons, and more.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can use, modify, and redistribute these resources in your application.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information about COMMON.RES, see the <bpt id="p1">[</bpt>Clipart sample<ept id="p1">](../visual-cpp-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The MFC Application Wizard, the Visual C++ wizards, resource editors, and the MFC framework do a lot of work for you and make managing your code much easier.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The bulk of your application-specific code is in your document and view classes.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Using the Classes to Write Applications for Windows</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>