<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3cc77375e16e7ce26e41fcfd8f35b55713ff4152</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\data\oledb\commands-and-tables.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c76b57c5b2aeb7d02a8c9beb646f10f8f1e684bb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b65a34f460548ab072abf851fd4fc1e75af4c51</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Commands and Tables | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Commands and Tables</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Commands and tables allow you to access rowsets; that is, open rowsets, execute commands, and bind columns.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>CCommand<ept id="p1">](../../data/oledb/ccommand-class.md)</ept> and <bpt id="p2">[</bpt>CTable<ept id="p2">](../../data/oledb/ctable-class.md)</ept> classes instantiate the command and table objects, respectively.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>These classes derive from <bpt id="p1">[</bpt>CAccessorRowset<ept id="p1">](../../data/oledb/caccessorrowset-class.md)</ept> as shown in the following figure.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>CCommand and CTable</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Command and Table Classes</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In the previous table, <ph id="ph1">`TAccessor`</ph> can be any accessor type listed in <bpt id="p1">[</bpt>Accessor Types<ept id="p1">](../../data/oledb/accessors-and-rowsets.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>TRowset<ept id="p1">*</ept> can be any rowset type listed in <bpt id="p2">[</bpt>Rowset Types<ept id="p2">](../../data/oledb/accessors-and-rowsets.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>TMultiple<ept id="p1">*</ept> specifies the result type (a single or multiple result set).</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>ATL OLE DB Consumer Wizard<ept id="p1">](../../atl/reference/atl-ole-db-consumer-wizard.md)</ept> lets you specify whether you want a command or table object.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For data sources without commands, you can use the <ph id="ph1">`CTable`</ph> class.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You generally use it for simple rowsets that specify no parameters and require no multiple results.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This simple class opens a table on a data source using a table name that you specify.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For data sources that support commands, you can use the <ph id="ph1">`CCommand`</ph> class instead.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To execute a command, call <bpt id="p1">[</bpt>Open<ept id="p1">](../../data/oledb/ccommand-open.md)</ept> on this class.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>As an alternative, you can call <ph id="ph1">`Prepare`</ph> to prepare a command that you want to execute more than once.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CCommand<ept id="p1">**</ept> has three template arguments: an accessor type, a rowset type, and a result type (<ph id="ph1">`CNoMultipleResults`</ph>, by default, or <ph id="ph2">`CMultipleResults`</ph>).</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you specify <ph id="ph1">`CMultipleResults`</ph>, the <ph id="ph2">`CCommand`</ph> class supports the <bpt id="p1">**</bpt>IMultipleResults<ept id="p1">**</ept> interface and handles multiple rowsets.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>DBVIEWER<ept id="p1">](http://msdn.microsoft.com/en-us/07620f99-c347-4d09-9ebc-2459e8049832)</ept> sample shows how to handle the multiple results.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>OLE DB Consumer Templates</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>