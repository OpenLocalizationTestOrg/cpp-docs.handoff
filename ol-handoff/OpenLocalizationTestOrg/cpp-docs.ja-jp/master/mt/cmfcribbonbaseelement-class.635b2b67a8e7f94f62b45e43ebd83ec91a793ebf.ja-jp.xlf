<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fd6ebfb3ac77f6efdee9c8035ff9eb5da929c2d2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\cmfcribbonbaseelement-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">52255264a44967404d760e67c6d1f966763adb3b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">21ca31e1ed7524c8049608f3cd28ce7ee51583ce</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CMFCRibbonBaseElement Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CMFCRibbonBaseElement Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CMFCRibbonBaseElement`</ph> class is the base class for all elements that you can add to a <bpt id="p1">[</bpt>ribbon bar<ept id="p1">](../../mfc/reference/cmfcribbonbar-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Examples of ribbon elements are ribbon buttons, ribbon check boxes, and ribbon combo boxes.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CMFCRibbonBaseElement`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::AddToKeyList<ept id="p1">](#cmfcribbonbaseelement__addtokeylist)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Adds a keytip for the ribbon element to an array of keytips.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::AddToListBox<ept id="p1">](#cmfcribbonbaseelement__addtolistbox)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Adds a ribbon element to the specified ribbon commands list box.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::CanBeAddedToQuickAccessToolBar<ept id="p1">](#cmfcribbonbaseelement__canbeaddedtoquickaccesstoolbar)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Indicates whether the ribbon element can be added to the quick access toolbar.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::CanBeCompacted<ept id="p1">](#cmfcribbonbaseelement__canbecompacted)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Indicates whether the size of the ribbon element can be compact.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::CanBeStretched<ept id="p1">](#cmfcribbonbaseelement__canbestretched)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Indicates whether the height of the ribbon element can increase vertically to the height of a ribbon row.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::CanBeStretchedHorizontally<ept id="p1">](#cmfcribbonbaseelement__canbestretchedhorizontally)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Indicates whether the width of the ribbon element can change.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::CleanUpSizes<ept id="p1">](#cmfcribbonbaseelement__cleanupsizes)</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Cleans up the dimension settings for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::ClosePopupMenu<ept id="p1">](#cmfcribbonbaseelement__closepopupmenu)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Closes the popup menu for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::CopyFrom<ept id="p1">](#cmfcribbonbaseelement__copyfrom)</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Copies the state of the specified <ph id="ph1">`CMFCRibbonBaseElement`</ph> to the current object.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::DestroyCtrl<ept id="p1">](#cmfcribbonbaseelement__destroyctrl)</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Destroys the ribbon element.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::DrawImage<ept id="p1">](#cmfcribbonbaseelement__drawimage)</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Draws the image for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::Find<ept id="p1">](#cmfcribbonbaseelement__find)</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Returns the specified pointer to the ribbon element if it points to the current object.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::FindByData<ept id="p1">](#cmfcribbonbaseelement__findbydata)</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the ribbon element if it contains the specified data.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::FindByID<ept id="p1">](#cmfcribbonbaseelement__findbyid)</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the ribbon element if that element is identified by the specified command ID.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::FindByOriginal<ept id="p1">](#cmfcribbonbaseelement__findbyoriginal)</ept></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the ribbon element if its original ribbon element matches the specified ribbon element.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::GetCompactSize<ept id="p1">](#cmfcribbonbaseelement__getcompactsize)</ept></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Returns the compact size of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::GetData<ept id="p1">](#cmfcribbonbaseelement__getdata)</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Retrieves the user-defined data associated with the ribbon element.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::GetDescription<ept id="p1">](#cmfcribbonbaseelement__getdescription)</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Returns the description of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::GetDroppedDown<ept id="p1">](#cmfcribbonbaseelement__getdroppeddown)</ept></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the ribbon element if its pop-up menu is dropped down.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::GetElements<ept id="p1">](#cmfcribbonbaseelement__getelements)</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Adds the current ribbon element to the specified array.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::GetElementsByID<ept id="p1">](#cmfcribbonbaseelement__getelementsbyid)</ept></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Adds the current ribbon element to the specified array if the current ribbon element contains the specified command ID.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::GetHighlighted<ept id="p1">](#cmfcribbonbaseelement__gethighlighted)</ept></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the ribbon element if it is highlighted.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::GetID<ept id="p1">](#cmfcribbonbaseelement__getid)</ept></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Returns the command ID of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::GetImageSize<ept id="p1">](#cmfcribbonbaseelement__getimagesize)</ept></source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Returns the image size of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::GetIntermediateSize<ept id="p1">](#cmfcribbonbaseelement__getintermediatesize)</ept></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Returns the size of the ribbon element in its intermediate state.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::GetKeys<ept id="p1">](#cmfcribbonbaseelement__getkeys)</ept></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Returns the keytip associated with the ribbon element.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::GetKeyTipRect<ept id="p1">](#cmfcribbonbaseelement__getkeytiprect)</ept></source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Retrieves the keytip boundary rectangle for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::GetKeyTipSize<ept id="p1">](#cmfcribbonbaseelement__getkeytipsize)</ept></source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Retrieves the size of the keytip text.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::GetLocationInGroup<ept id="p1">](#cmfcribbonbaseelement__getlocationingroup)</ept></source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Indicates the display location of the ribbon element in a ribbon group.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::GetMenuKeys<ept id="p1">](#cmfcribbonbaseelement__getmenukeys)</ept></source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Returns the keytips associated with a button.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::GetNotifyID<ept id="p1">](#cmfcribbonbaseelement__getnotifyid)</ept></source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Retrieves the notification command ID for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::GetOriginal<ept id="p1">](#cmfcribbonbaseelement__getoriginal)</ept></source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Retrieves the original ribbon element.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::GetParentCategory<ept id="p1">](#cmfcribbonbaseelement__getparentcategory)</ept></source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Retrieves the ribbon category for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::GetParentPanel<ept id="p1">](#cmfcribbonbaseelement__getparentpanel)</ept></source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Retrieves the ribbon panel that contains the ribbon element.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::GetParentRibbonBar<ept id="p1">](#cmfcribbonbaseelement__getparentribbonbar)</ept></source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Retrieves the parent ribbon bar for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::GetParentWnd<ept id="p1">](#cmfcribbonbaseelement__getparentwnd)</ept></source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Retrieves the parent window for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::GetPressed<ept id="p1">](#cmfcribbonbaseelement__getpressed)</ept></source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the ribbon element if the user currently presses it.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::GetQuickAccessToolBarID<ept id="p1">](#cmfcribbonbaseelement__getquickaccesstoolbarid)</ept></source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Retrieves the command ID of the ribbon element when it is located in the quick access toolbar.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::GetRect<ept id="p1">](#cmfcribbonbaseelement__getrect)</ept></source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Returns the bounding rectangle of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::GetRegularSize<ept id="p1">](#cmfcribbonbaseelement__getregularsize)</ept></source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Returns the regular size of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::GetSize<ept id="p1">](#cmfcribbonbaseelement__getsize)</ept></source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Returns the current size of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::GetText<ept id="p1">](#cmfcribbonbaseelement__gettext)</ept></source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Returns the text associated with the ribbon element.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::GetToolTipText<ept id="p1">](#cmfcribbonbaseelement__gettooltiptext)</ept></source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Returns tooltip text of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::GetTopLevelRibbonBar<ept id="p1">](#cmfcribbonbaseelement__gettoplevelribbonbar)</ept></source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Retrieves the top level ribbon bar for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::HasCompactMode<ept id="p1">](#cmfcribbonbaseelement__hascompactmode)</ept></source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Specifies whether the ribbon element has a compact mode.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::HasFocus<ept id="p1">](#cmfcribbonbaseelement__hasfocus)</ept></source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Indicates whether the parent element has keyboard focus.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::HasIntermediateMode<ept id="p1">](#cmfcribbonbaseelement__hasintermediatemode)</ept></source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Specifies whether the ribbon element has an intermediate mode.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::HasLargeMode<ept id="p1">](#cmfcribbonbaseelement__haslargemode)</ept></source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Specifies whether the ribbon element has a large mode.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::HasMenu<ept id="p1">](#cmfcribbonbaseelement__hasmenu)</ept></source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Indicates whether the ribbon element has a menu.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::HitTest<ept id="p1">](#cmfcribbonbaseelement__hittest)</ept></source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the ribbon element if the specified point is located in it.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::IsAlignByColumn<ept id="p1">](#cmfcribbonbaseelement__isalignbycolumn)</ept></source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Indicates whether the ribbon element is aligned vertically with other ribbon elements.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::IsAlwaysLargeImage<ept id="p1">](#cmfcribbonbaseelement__isalwayslargeimage)</ept></source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Indicates whether the ribbon element image size is always large.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::IsAutoRepeatMode<ept id="p1">](#cmfcribbonbaseelement__isautorepeatmode)</ept></source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Indicates whether the ribbon element is in auto repeat mode.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::IsChecked<ept id="p1">](#cmfcribbonbaseelement__ischecked)</ept></source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Specifies whether the ribbon element is checked.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::IsCompactMode<ept id="p1">](#cmfcribbonbaseelement__iscompactmode)</ept></source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Specifies whether the ribbon element is in a compact mode.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::IsDefaultMenuLook<ept id="p1">](#cmfcribbonbaseelement__isdefaultmenulook)</ept></source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::IsDisabled<ept id="p1">](#cmfcribbonbaseelement__isdisabled)</ept></source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Specifies whether the ribbon element is disabled.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::IsDroppedDown<ept id="p1">](#cmfcribbonbaseelement__isdroppeddown)</ept></source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Determines whether the ribbon element displays a popup menu and is dropped down.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::IsFocused<ept id="p1">](#cmfcribbonbaseelement__isfocused)</ept></source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Specifies whether the ribbon element has the focus.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::IsGalleryIcon<ept id="p1">](#cmfcribbonbaseelement__isgalleryicon)</ept></source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Indicates whether the ribbon element is contained in a ribbon gallery.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::IsHighlighted<ept id="p1">](#cmfcribbonbaseelement__ishighlighted)</ept></source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Specifies whether ribbon element is highlighted.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::IsIntermediateMode<ept id="p1">](#cmfcribbonbaseelement__isintermediatemode)</ept></source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Indicates whether the current image for the ribbon element is intermediate size.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::IsLargeMode<ept id="p1">](#cmfcribbonbaseelement__islargemode)</ept></source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Indicates whether the current image for the ribbon element is large sized.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::IsMenuMode<ept id="p1">](#cmfcribbonbaseelement__ismenumode)</ept></source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Indicates whether the ribbon element is contained in a menu.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::IsPressed<ept id="p1">](#cmfcribbonbaseelement__ispressed)</ept></source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Indicates whether the user has clicked the ribbon element.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::IsQATMode<ept id="p1">](#cmfcribbonbaseelement__isqatmode)</ept></source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Indicates whether the ribbon element is contained in the quick access toolbar.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::IsSeparator<ept id="p1">](#cmfcribbonbaseelement__isseparator)</ept></source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Indicates whether the ribbon element is a display separator.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::IsShowGroupBorder<ept id="p1">](#cmfcribbonbaseelement__isshowgroupborder)</ept></source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Indicates whether the ribbon element is contained in a group that displays a common border.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::IsShowTooltipOnBottom<ept id="p1">](#cmfcribbonbaseelement__isshowtooltiponbottom)</ept></source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Indicates whether the tooltip is displayed under the ribbon element.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::IsTabStop<ept id="p1">](#cmfcribbonbaseelement__istabstop)</ept></source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Indicates whether the ribbon element can be selected with the keyboard.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::IsTextAlwaysOnRight<ept id="p1">](#cmfcribbonbaseelement__istextalwaysonright)</ept></source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Indicates whether the text for the ribbon element is displayed on the right.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::IsVisible<ept id="p1">](#cmfcribbonbaseelement__isvisible)</ept></source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Indicates whether the ribbon element is currently displayed.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::IsWholeRowHeight<ept id="p1">](#cmfcribbonbaseelement__iswholerowheight)</ept></source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Indicates whether the display heigth of the ribbon element is the same as the display height of the ribbon panel that contains it.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::NotifyCommand<ept id="p1">](#cmfcribbonbaseelement__notifycommand)</ept></source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Sends a command notification to the parent window of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::NotifyHighlightListItem<ept id="p1">](#cmfcribbonbaseelement__notifyhighlightlistitem)</ept></source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Notifies the parent window of the ribbon bar when a user highlights a ribbon element that is located in a list.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::OnAddToQAToolbar<ept id="p1">](#cmfcribbonbaseelement__onaddtoqatoolbar)</ept></source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Adds the ribbon element to the specified quick access toolbar.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::OnAfterChangeRect<ept id="p1">](#cmfcribbonbaseelement__onafterchangerect)</ept></source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Updates the tooltip for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::OnAutoRepeat<ept id="p1">](#cmfcribbonbaseelement__onautorepeat)</ept></source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Updates the ribbon element in response to sustained user input.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::OnCalcTextSize<ept id="p1">](#cmfcribbonbaseelement__oncalctextsize)</ept></source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Calculates the size of the text for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::OnChangeMenuHighlight<ept id="p1">](#cmfcribbonbaseelement__onchangemenuhighlight)</ept></source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Called by the framework when the highlight changes for a ribbon element that is located in a menu.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::OnDraw<ept id="p1">](#cmfcribbonbaseelement__ondraw)</ept></source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Called by the framework to draw the ribbon element.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::OnDrawKeyTip<ept id="p1">](#cmfcribbonbaseelement__ondrawkeytip)</ept></source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Called by the framework to draw the keytip for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::OnDrawMenuImage<ept id="p1">](#cmfcribbonbaseelement__ondrawmenuimage)</ept></source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Called by the framework when the menu image for the ribbon element is drawn.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::OnDrawOnList<ept id="p1">](#cmfcribbonbaseelement__ondrawonlist)</ept></source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Called by the framework to draw the ribbon element in a commands list box.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::OnKey<ept id="p1">](#cmfcribbonbaseelement__onkey)</ept></source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Called by the framework when the user presses a keytip and the ribbon element has the focus.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::OnMenuKey<ept id="p1">](#cmfcribbonbaseelement__onmenukey)</ept></source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::OnRTLChanged<ept id="p1">](#cmfcribbonbaseelement__onrtlchanged)</ept></source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Called by the framework when the layout changes direction.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::OnShow<ept id="p1">](#cmfcribbonbaseelement__onshow)</ept></source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Called by the framework to show or hide the ribbon element.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::OnShowPopupMenu<ept id="p1">](#cmfcribbonbaseelement__onshowpopupmenu)</ept></source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Called by the framework when the ribbon element is going to display a popup menu.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::PostMenuCommand<ept id="p1">](#cmfcribbonbaseelement__postmenucommand)</ept></source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::Redraw<ept id="p1">](#cmfcribbonbaseelement__redraw)</ept></source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Updates the display for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::SetACCData<ept id="p1">](#cmfcribbonbaseelement__setaccdata)</ept></source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Sets the accessibility data for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::SetCompactMode<ept id="p1">](#cmfcribbonbaseelement__setcompactmode)</ept></source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Sets the display size for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::SetData<ept id="p1">](#cmfcribbonbaseelement__setdata)</ept></source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Associates a data item with the ribbon element.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::SetDefaultMenuLook<ept id="p1">](#cmfcribbonbaseelement__setdefaultmenulook)</ept></source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::SetDescription<ept id="p1">](#cmfcribbonbaseelement__setdescription)</ept></source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Sets the description for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::SetID<ept id="p1">](#cmfcribbonbaseelement__setid)</ept></source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Sets the command ID of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::SetInitialMode<ept id="p1">](#cmfcribbonbaseelement__setinitialmode)</ept></source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Sets the initial display size for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::SetKeys<ept id="p1">](#cmfcribbonbaseelement__setkeys)</ept></source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Sets a keytip for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::SetOriginal<ept id="p1">](#cmfcribbonbaseelement__setoriginal)</ept></source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Sets the original ribbon element for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::SetParentCategory<ept id="p1">](#cmfcribbonbaseelement__setparentcategory)</ept></source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Sets the parent category for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::SetParentMenu<ept id="p1">](#cmfcribbonbaseelement__setparentmenu)</ept></source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Sets the parent menu container for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::SetParentRibbonBar<ept id="p1">](#cmfcribbonbaseelement__setparentribbonbar)</ept></source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Sets the parent ribbon bar for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::SetRect<ept id="p1">](#cmfcribbonbaseelement__setrect)</ept></source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Sets the dimensions fot he display rectangle for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::SetText<ept id="p1">](#cmfcribbonbaseelement__settext)</ept></source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Sets the text for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::SetTextAlwaysOnRight<ept id="p1">](#cmfcribbonbaseelement__settextalwaysonright)</ept></source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Sets the text for the ribbon element to display on the right.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::SetToolTipText<ept id="p1">](#cmfcribbonbaseelement__settooltiptext)</ept></source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Sets the tooltip text for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::SetVisible<ept id="p1">](#cmfcribbonbaseelement__setvisible)</ept></source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Sets the visibility state of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::StretchHorizontally<ept id="p1">](#cmfcribbonbaseelement__stretchhorizontally)</ept></source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Stretches the width of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::StretchToWholeRow<ept id="p1">](#cmfcribbonbaseelement__stretchtowholerow)</ept></source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Changes the display height of the ribbon element to the specified row height.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::UpdateTooltipInfo<ept id="p1">](#cmfcribbonbaseelement__updatetooltipinfo)</ept></source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Updates the tooltip text by using the command resource for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Protected Methods</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::OnProcessKey<ept id="p1">](#cmfcribbonbaseelement__onprocesskey)</ept></source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Called by the framework when the user presses a shortcut key.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement::OnSetFocus<ept id="p1">](#cmfcribbonbaseelement__onsetfocus)</ept></source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Called by the framework when a ribbon element receives or loses the input focus.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CMFCRibbonBaseElement`</ph> class defines the properties that are common to all ribbon elements that include command ID, text label, tooltip text, element description, and state (which can be focused, highlighted, pressed, disabled, checked, or dropped down).</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The image size of a ribbon element is defined by the <ph id="ph1">`RibbonImageType`</ph> member, which can be one of the following values:</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Depending on its size, a ribbon element displays either a small or large image.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to use various methods in the <ph id="ph1">`CMFCRibbonBaseElement`</ph> class.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The example shows how to get a <ph id="ph1">`CMFCRibbonBaseElement`</ph> object from a <ph id="ph2">`CMFCRibbonStatusBar`</ph> class, set the description for the ribbon element, set the text, set a keytip, and set the tooltip text for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>This code snippet is part of the <bpt id="p1">[</bpt>Draw Client sample<ept id="p1">](../../visual-cpp-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_DrawClient#8<ept id="p2">](../../mfc/reference/codesnippet/cpp/cmfcribbonbaseelement-class_1.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_DrawClient#9<ept id="p2">](../../mfc/reference/codesnippet/cpp/cmfcribbonbaseelement-class_2.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CObject<ept id="p1">](../../mfc/reference/cobject-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBaseElement<ept id="p1">](../../mfc/reference/cmfcribbonbaseelement-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxbaseribbonelement.h</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__addtokeylist"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::AddToKeyList</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Adds a keytip for the ribbon element to an array of keytips.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`arElems`</ph></source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Reference to a <bpt id="p1">[</bpt>CArray<ept id="p1">](../../mfc/reference/carray-class.md)</ept> of keytips.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>When the ribbon keytips feature is enabled, the framework displays ribbon keytips when the user presses the ALT key or the F10 key.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__addtolistbox"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::AddToListBox</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Adds a ribbon element to the specified ribbon commands list box.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pWndListBox`</ph></source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Pointer to a commands list box.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bDeep`</ph></source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>This parameter is not used.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The zero-based index of the added ribbon element.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>The framework adds ribbon elements to a commands list box to enable the user to customize the user interface.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__canbeaddedtoquickaccesstoolbar"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::CanBeAddedToQuickAccessToolBar</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Indicates whether the ribbon element can be added to the quick access toolbar.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the element can be added; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__canbecompacted"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::CanBeCompacted</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Indicates whether the size of the ribbon element can be compact.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the size of the ribbon element can be compact; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>The size of a ribbon element can be compact, intermediate, or large.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__canbestretched"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::CanBeStretched</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Indicates whether the height of the ribbon element can increase vertically to the height of a ribbon row.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`TRUE`</ph>.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>By default this method always returns <ph id="ph1">`TRUE`</ph>.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Override this method to indicate whether the height of the ribbon element can increase vertically to the height of a ribbon row.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__canbestretchedhorizontally"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::CanBeStretchedHorizontally</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Indicates whether the width of the ribbon element can change.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>By default this method always returns <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Override this method to indicate whether the width of the ribbon element can change.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__cleanupsizes"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::CleanUpSizes</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>Cleans up the dimension settings for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>By default this method does nothing.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Override this method in a derived class to reset the dimension settings for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__closepopupmenu"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::ClosePopupMenu</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Closes the pop-up menu for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__copyfrom"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::CopyFrom</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Copies the state of the specified <bpt id="p1">[</bpt>CMFCRibbonBaseElement<ept id="p1">](../../mfc/reference/cmfcribbonbaseelement-class.md)</ept> to the current object.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`src`</ph></source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>The source <bpt id="p1">[</bpt>CMFCRibbonBaseElement<ept id="p1">](../../mfc/reference/cmfcribbonbaseelement-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__destroyctrl"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::DestroyCtrl</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Destroys the ribbon element.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>By default this method does nothing.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Override this method in a derived class to destroy the ribbon element.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__drawimage"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::DrawImage</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Draws the image for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pDC`</ph></source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Pointer to a device context.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`type`</ph></source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>An image type enumerated value.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>See the Remarks section for a list of possible values.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`rectImage`</ph></source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>The image rectangle.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>By default this method does nothing.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Override this method in a derived class to draw the image for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>The following table lists possible values for the <ph id="ph1">`type`</ph> parameter:</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>Large 32x32 pixel image size.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Small 16x16 pixel image size.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__find"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::Find</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Returns the specified pointer if it points to the current object.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pElement`</ph></source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Pointer to a ribbon element.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>A pointer to the ribbon element if <ph id="ph1">`pElement`</ph> points to the current object; otherwise <ph id="ph2">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__findbydata"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::FindByData</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the ribbon element if it contains the specified data.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`dwData`</ph></source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>The data associated with a ribbon element.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>A pointer to the ribbon element if it contains the specified data; otherwise <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__findbyid"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::FindByID</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the ribbon element if that element is identified by the specified command ID.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`uiCmdID`</ph></source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>Command ID for a ribbon element.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>A pointer to the ribbon element if that element is identified by the specified command ID; otherwise <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__findbyoriginal"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::FindByOriginal</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the current ribbon element if its original ribbon element matches the specified ribbon element.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pOriginal`</ph></source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>Pointer to a ribbon element.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>A pointer to the ribbon element if its original ribbon element matches the specified ribbon element; otherwise <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>Ribbon elements that are copied to another container retain a pointer to the original ribbon element.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__getcompactsize"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::GetCompactSize</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Returns the compact size of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pDC`</ph></source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>A pointer to a device context.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>The compact size of a ribbon element.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>The compact size means that the ribbon element is truncated (it displays a small image, or an image without a text).</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__getdata"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::GetData</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>Retrieves the user-defined data associated with the ribbon element.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>The user-defined data associated with the ribbon element.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__getdescription"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::GetDescription</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Returns the description of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>The ribbon element description.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>The description is displayed either on the status bar, or in a tooltip, or under the menu button if the ribbon element is located on the <bpt id="p1">[</bpt>CMFCRibbonMainPanel Class<ept id="p1">](../../mfc/reference/cmfcribbonmainpanel-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__getdroppeddown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::GetDroppedDown</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the ribbon element if its pop-up menu is dropped down.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>A pointer to the ribbon element if its pop-up menu is dropped down; otherwise <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__getelements"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::GetElements</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Adds the current ribbon element to the specified array.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>[in, out] <ph id="ph1">`arElements`</ph></source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>An array of ribbon elements.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__getelementsbyid"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::GetElementsByID</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>Adds the current ribbon element to the specified array if the current ribbon element contains the specified command ID.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`uiCmdID`</ph></source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>Command ID of a ribbon element.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`arElements`</ph></source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>An array of ribbon elements.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__gethighlighted"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::GetHighlighted</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the ribbon element if it is highlighted.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>A pointer to the ribbon element if it is highlighted; otherwise <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__getid"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::GetID</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>Returns the command ID of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>The command ID of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__getimagesize"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::GetImageSize</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>Returns the image size of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>The image size of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__getintermediatesize"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::GetIntermediateSize</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>Returns the size of the ribbon element in its intermediate state.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pDC`</ph></source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>A pointer to a device context.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>The size of the ribbon element in its intermediate state.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__getkeys"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::GetKeys</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>Returns the keytip associated with the ribbon element.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>A keytip associated with the ribbon element.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__getkeytiprect"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::GetKeyTipRect</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>Retrieves the keytip boundary rectangle for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pDC`</ph></source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>Pointer to a device context.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bIsMenu`</ph></source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> if the ribbon element displays a pop-up menu; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>Always returns a rectangle with 0 values.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>Override this method in a derived class to return the keytip boundary rectangle.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__getkeytipsize"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::GetKeyTipSize</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>Retrieves the size of the keytip text.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pDC`</ph></source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>Pointer to a device context.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>The size of the keytip text.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__getlocationingroup"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::GetLocationInGroup</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>Indicates the display location of the ribbon element in a ribbon group.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`RibbonElementLocation`</ph> enumerated value.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>The following table lists possible values.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>The ribbon element is not contained in a ribbon group.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>The ribbon element is displayed as the only item in a ribbon group.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>The ribbon element is displayed on the left end of a ribbon group.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>The ribbon element is displayed on the right end of a ribbon group.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>The ribbon element is not displayed on either end of a ribbon group.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>Ribbon element groups are only aligned horizontally.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__getmenukeys"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::GetMenuKeys</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>Returns the menu keytip for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>The menu keytip associated with the ribbon element.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>When invoked, a menu keytip displays a pop-up menu.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__getnotifyid"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::GetNotifyID</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>Retrieves the notification command ID for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>The notification command ID.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__getoriginal"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::GetOriginal</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>Retrieves the original ribbon element.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>A pointer to the original ribbon element.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>Ribbon elements that are copied to another container retain a pointer to the original ribbon element.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__getparentcategory"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::GetParentCategory</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>Retrieves the ribbon category for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>A pointer to the ribbon category.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__getparentpanel"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::GetParentPanel</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>Retrieves the ribbon panel that contains the ribbon element.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>A pointer to the ribbon panel that contains the ribbon element.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__getparentribbonbar"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::GetParentRibbonBar</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>Retrieves the parent ribbon bar for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>A pointer to the parent ribbon bar for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__getparentwnd"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::GetParentWnd</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>Retrieves the parent window for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>A pointer to the parent window for the ribbon element if the method was successful; otherwise, <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>The parent window for a ribbon element is a <bpt id="p1">[</bpt>CMFCRibbonBar Class<ept id="p1">](../../mfc/reference/cmfcribbonbar-class.md)</ept> or a <bpt id="p2">[</bpt>CMFCRibbonPanelMenuBar<ept id="p2">](http://msdn.microsoft.com/en-us/7bd4b986-8b7b-493e-9746-bd3161b78581)</ept>.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__getpressed"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::GetPressed</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the ribbon element if the user currently presses it.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>A pointer to the ribbon element if the user currently presses it; otherwise, <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__getquickaccesstoolbarid"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::GetQuickAccessToolBarID</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>Retrieves the command ID of the ribbon element when it is located in the quick access toolbar.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>The command ID of the ribbon element when it is located in the quick access toolbar.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__getrect"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::GetRect</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>Returns the bounding rectangle of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>The bounding rectangle of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>The position of the rectangle is in the coordinates of the parent Ribbon control.</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__getregularsize"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::GetRegularSize</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>Returns the regular size of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pDC`</ph></source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>A pointer to a device context.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>The regular size of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>The regular size is the maximal possible size of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__getsize"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::GetSize</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>Returns the current size of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pDC`</ph></source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>A pointer to a device context.</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>The current size of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__gettext"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::GetText</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>Returns the text associated with the ribbon element.</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>The text associated with the ribbon element.</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__gettooltiptext"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::GetToolTipText</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>Returns tooltip text of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>The tooltip text of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__gettoplevelribbonbar"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::GetTopLevelRibbonBar</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>Retrieves the top level ribbon bar for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>A pointer to the top level ribbon bar for the ribbon element if the method was successful; otherwise, <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__hascompactmode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::HasCompactMode</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>Specifies whether the ribbon element has a compact mode.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the ribbon element has a compact mode.</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FALSE`</ph> otherwise.</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>In the compact mode, an element displays a small image only.</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__hasintermediatemode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::HasIntermediateMode</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>Specifies whether the ribbon element has an intermediate mode.</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the ribbon element has an intermediate mode, <ph id="ph2">`FALSE`</ph> otherwise.</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>In the intermediate mode, an element displays a small image and text on the right of the image.</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__haslargemode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::HasLargeMode</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>Determines whether the ribbon element has a large mode.</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the ribbon element has a large mode.</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FALSE`</ph> otherwise.</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>In the large mode, an element can take the full height of the parent panel.</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__hasmenu"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::HasMenu</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>Indicates whether the ribbon element has a menu.</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>By default this method always returns <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>Override this method in a derived class to indicate whether the ribbon element has a menu.</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__hittest"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::HitTest</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the ribbon element if the specified point is located in it.</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`point`</ph></source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>This parameter is not used.</source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>A pointer to the ribbon element if it exists; otherwise <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>By default this method always returns a valid pointer to the ribbon element when it exists.</source>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>Override this method to indicate if the point resides in the ribbon element.</source>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__isalignbycolumn"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::IsAlignByColumn</source>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>Indicates whether the ribbon element is aligned vertically with other ribbon elements.</source>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`TRUE`</ph>.</source>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>By default this method always returns <ph id="ph1">`TRUE`</ph>.</source>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>Override this method in a derived class to indicate whether the derived ribbon element is aligned vertically with other ribbon elements.</source>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__isalwayslargeimage"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::IsAlwaysLargeImage</source>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>Indicates whether the ribbon element image size is always large.</source>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the ribbon element image size is always large; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source>Large image size is 32 x 32 pixels.</source>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__isautorepeatmode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::IsAutoRepeatMode</source>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>Indicates whether the ribbon element is in auto repeat mode.</source>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`nDelay`</ph></source>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source>This parameter is not used.</source>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source>By default this method always returns <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>Override this method to indicate whether the ribbon element is in auto repeat mode.</source>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>In auto repeat mode, the ribbon element responds at a set interval, measured in milliseconds, to sustained user input.</source>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__ischecked"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::IsChecked</source>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source>Specifies whether the ribbon element is checked.</source>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the ribbon element is checked; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__iscompactmode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::IsCompactMode</source>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>Specifies whether the ribbon element is in a compact mode.</source>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the ribbon element is in a compact mode; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__isdefaultmenulook"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::IsDefaultMenuLook</source>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source>Indicates whether the ribbon element is set to appear as a pop-up command.</source>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the ribbon element is set to appear as a pop-up command; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__isdisabled"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::IsDisabled</source>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>Specifies whether the ribbon element is disabled.</source>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the ribbon element is disabled; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__isdroppeddown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::IsDroppedDown</source>
        </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>Specifies whether the ribbon element displays a pop-up menu and is dropped down.</source>
        </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the ribbon element is dropped down and displays a pop-up menu; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__isfocused"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::IsFocused</source>
        </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source>Specifies whether the ribbon element has the focus.</source>
        </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the ribbon element has the focus; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__isgalleryicon"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::IsGalleryIcon</source>
        </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source>Indicates whether the ribbon element is contained in a ribbon gallery.</source>
        </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source>By default this method always returns <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source>Override this method in a derived class to indicate whether the ribbon element is contained in a ribbon gallery.</source>
        </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__ishighlighted"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::IsHighlighted</source>
        </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve">
          <source>Specifies whether ribbon element is highlighted.</source>
        </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the ribbon element is highlighted; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__isintermediatemode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::IsIntermediateMode</source>
        </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source>Indicates whether the current image for the ribbon element is intermediate size.</source>
        </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the image for the ribbon element is intermediate size; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>Intermediate image size is 16 x 16 pixels.</source>
        </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__islargemode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::IsLargeMode</source>
        </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve">
          <source>Indicates whether the current image for the ribbon element is large size.</source>
        </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the image for the ribbon element is large size; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve">
          <source>Large image size is 32 x 32 pixels.</source>
        </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__ismenumode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::IsMenuMode</source>
        </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source>Indicates whether the ribbon element is contained in a menu.</source>
        </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the ribbon element is contained in a menu; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__ispressed"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::IsPressed</source>
        </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source>Indicates whether the user has clicked the ribbon element.</source>
        </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the user has clicked the ribbon element; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__isqatmode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::IsQATMode</source>
        </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve">
          <source>Indicates whether the ribbon element is contained in the quick access toolbar.</source>
        </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the ribbon element is contained in the quick access toolbar; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__isseparator"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::IsSeparator</source>
        </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve">
          <source>Indicates whether the ribbon element is a display separator.</source>
        </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the ribbon element is a display separator; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__isshowgroupborder"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::IsShowGroupBorder</source>
        </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve">
          <source>Indicates whether the ribbon element is contained in a group that displays a common border.</source>
        </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the ribbon element is contained in a group that displays a common border; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__isshowtooltiponbottom"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::IsShowTooltipOnBottom</source>
        </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve">
          <source>Indicates whether the tooltip is displayed under the ribbon element.</source>
        </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the tooltip is displayed under the ribbon element; <ph id="ph2">`FALSE`</ph> if the tooltip is displayed near the pointer.</source>
        </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__istabstop"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::IsTabStop</source>
        </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve">
          <source>Indicates whether the ribbon element can be selected with the keyboard.</source>
        </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`TRUE`</ph>.</source>
        </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve">
          <source>By default this method always returns <ph id="ph1">`TRUE`</ph>.</source>
        </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve">
          <source>Override this method to indicate whether the ribbon element can be selected with the keyboard.</source>
        </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__istextalwaysonright"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::IsTextAlwaysOnRight</source>
        </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve">
          <source>Indicates whether the text for the ribbon element is displayed on the right.</source>
        </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the text for the ribbon element is displayed on the right; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__isvisible"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::IsVisible</source>
        </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve">
          <source>Indicates whether the ribbon element is currently displayed.</source>
        </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the ribbon element is currently displayed; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__iswholerowheight"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::IsWholeRowHeight</source>
        </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve">
          <source>Indicates whether the display height of the ribbon element is the same as the display height of the ribbon panel that contains it.</source>
        </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve">
          <source>By default this method always returns <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve">
          <source>Override this method to indicate whether the display height of the ribbon element is the same as the display height of the ribbon panel that contains it.</source>
        </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__notifycommand"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::NotifyCommand</source>
        </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve">
          <source>Sends a command notification to the parent window of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bWithDelay`</ph></source>
        </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> to add the command notification to the message queue of the parent window; <ph id="ph2">`FALSE`</ph> to send the message immediately to the parent window.</source>
        </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the message was sent; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__notifyhighlightlistitem"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::NotifyHighlightListItem</source>
        </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve">
          <source>Notifies the parent window of the ribbon bar when a user highlights a ribbon element that is located in a list.</source>
        </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`nIndex`</ph></source>
        </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve">
          <source>The index of the ribbon element in the list.</source>
        </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__onaddtoqatoolbar"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::OnAddToQAToolbar</source>
        </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve">
          <source>Adds the ribbon element to the specified quick access toolbar.</source>
        </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`qat`</ph></source>
        </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve">
          <source>The quick access toolbar.</source>
        </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`TRUE`</ph> indicating the ribbon element was added to the quick access toolbar.</source>
        </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__onafterchangerect"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::OnAfterChangeRect</source>
        </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve">
          <source>Updates the tooltip for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pDC`</ph></source>
        </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve">
          <source>This parameter is not used.</source>
        </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve">
          <source>By default this method updates the tooltip for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve">
          <source>Override this method to update the ribbon element after its display rectangle has changed.</source>
        </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__onautorepeat"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::OnAutoRepeat</source>
        </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve">
          <source>Updates the ribbon element in response to sustained user input.</source>
        </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve">
          <source>By default this method always return <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve">
          <source>Override this method to process sustained user input.</source>
        </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__oncalctextsize"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::OnCalcTextSize</source>
        </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve">
          <source>Calculates the size of the text for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pDC`</ph></source>
        </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve">
          <source>This parameter is not used.</source>
        </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve">
          <source>By default this method does nothing.</source>
        </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve">
          <source>Override this method to calculate the size of the text for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__onchangemenuhighlight"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::OnChangeMenuHighlight</source>
        </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve">
          <source>Called by the framework when the highlight changes for a ribbon element that is located in a menu.</source>
        </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pPanelMenuBar`</ph></source>
        </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve">
          <source>This parameter is not used.</source>
        </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pHot`</ph></source>
        </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve">
          <source>This parameter is not used.</source>
        </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve">
          <source>By default this method does nothing.</source>
        </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve">
          <source>Override this method to update a ribbon element that is located in a menu when the highlight changes.</source>
        </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__ondraw"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::OnDraw</source>
        </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve">
          <source>Called by the framework to draw the ribbon element.</source>
        </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pDC`</ph></source>
        </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve">
          <source>A pointer to a device context.</source>
        </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve">
          <source>Override this method in a derived class if you want to customize the drawing of a specific ribbon element.</source>
        </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__ondrawkeytip"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::OnDrawKeyTip</source>
        </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve">
          <source>Called by the framework to draw the keytip for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pDC`</ph></source>
        </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve">
          <source>Pointer to a device context.</source>
        </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`rect`</ph></source>
        </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve">
          <source>Boundary rectangle for the keytip.</source>
        </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bIsMenu`</ph></source>
        </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> if the keytip is for a pop-up menu button; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__ondrawmenuimage"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::OnDrawMenuImage</source>
        </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve">
          <source>Called by the framework when the menu image for the ribbon element is drawn.</source>
        </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pDC`</ph></source>
        </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve">
          <source>Pointer to a device context.</source>
        </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`rect`</ph></source>
        </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve">
          <source>Menu image rectangle.</source>
        </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`TRUE`</ph> to indicate the image was drawn.</source>
        </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__ondrawonlist"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::OnDrawOnList</source>
        </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve">
          <source>Called by the framework to draw the ribbon element in a commands list box.</source>
        </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pDC`</ph></source>
        </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve">
          <source>Pointer to a device context for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`strText`</ph></source>
        </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve">
          <source>The display text.</source>
        </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`nTextOffset`</ph></source>
        </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve">
          <source>Distance, in pixels, from the left side of the list box to the display text.</source>
        </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`rect`</ph></source>
        </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve">
          <source>The display rectangle for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bIsSelected`</ph></source>
        </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve">
          <source>This parameter is not used.</source>
        </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bHighlighted`</ph></source>
        </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve">
          <source>This parameter is not used.</source>
        </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve">
          <source>The commands list box displays ribbon elements to enable users to customize the quick access toolbar.</source>
        </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__onkey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::OnKey</source>
        </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve">
          <source>Called by the framework when the user presses a keytip and the ribbon element has the focus.</source>
        </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bIsMenuKey`</ph></source>
        </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> if the keytip displays a pop-up menu; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the event was handled; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__onmenukey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::OnMenuKey</source>
        </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve">
          <source>Called by the framework when the user presses a menu keytip on the main panel.</source>
        </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`nUpperChar`</ph></source>
        </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve">
          <source>This parameter is not used.</source>
        </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve">
          <source>By default this method always returns <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve">
          <source>Override this method to respond when a user presses a menu keytip on the main panel.</source>
        </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__onprocesskey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::OnProcessKey</source>
        </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve">
          <source>Called by the framework when the user presses a shortcut key.</source>
        </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`nChar`</ph></source>
        </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve">
          <source>This parameter is not used.</source>
        </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve">
          <source>Override this method if you want the ribbon element to process a shortcut key.</source>
        </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__onrtlchanged"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::OnRTLChanged</source>
        </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve">
          <source>Called by the framework when the layout changes direction.</source>
        </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bIsRTL`</ph></source>
        </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve">
          <source>This parameter is not used.</source>
        </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve">
          <source>By default this method does nothing.</source>
        </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve">
          <source>Override this method to adjust the ribbon element when the layout changes direction.</source>
        </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve">
          <source>The default layout direction is left-to-right.</source>
        </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__onsetfocus"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::OnSetFocus</source>
        </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve">
          <source>Called by the framework when a ribbon element receives or loses the input focus.</source>
        </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve">
          <source>Override this method in a derived class if you want your application to handle a change in the focus of a ribbon element.</source>
        </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__onshow"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::OnShow</source>
        </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve">
          <source>Called by the framework to show or hide the ribbon element.</source>
        </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bShow`</ph></source>
        </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve">
          <source>This parameter is not used.</source>
        </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve">
          <source>By default this method does nothing.</source>
        </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve">
          <source>Override this method to show or hide the ribbon element.</source>
        </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__onshowpopupmenu"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::OnShowPopupMenu</source>
        </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve">
          <source>Called by the framework before the ribbon element shows a pop-up menu.</source>
        </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve">
          <source>This method notifies the parent window of the ribbon bar that the ribbon element will show a pop-up menu.</source>
        </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__postmenucommand"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::PostMenuCommand</source>
        </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve">
          <source>Closes the pop-up menu for the ribbon element and sends a close message to the parent menu.</source>
        </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`uiCmdId`</ph></source>
        </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve">
          <source>The parameter is not used.</source>
        </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve">
          <source>The close message is only sent if the ribbon element is located on a pop-up menu.</source>
        </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__redraw"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::Redraw</source>
        </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve">
          <source>Updates the display for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve">
          <source>This method redraws the display rectangle for the ribbon element by calling <bpt id="p1">[</bpt>CWnd::RedrawWindow<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162911)</ept> with the <ph id="ph1">`RDW_INVALIDATE`</ph>, <ph id="ph2">`RDW_ERASE`</ph>, and <ph id="ph3">`RDW_UPDATENOW`</ph> flags set.</source>
        </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__setaccdata"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::SetACCData</source>
        </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve">
          <source>Sets the accessibility data for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve">
          <source>The parent window for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve">
          <source>The accessibility data for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`TRUE`</ph>.</source>
        </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve">
          <source>By default this method sets the accessibility data for the ribbon element and always returns <ph id="ph1">`TRUE`</ph>.</source>
        </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve">
          <source>Override this method to set the accessibility data and return a value that indicates success or failure.</source>
        </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__setcompactmode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::SetCompactMode</source>
        </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve">
          <source>Sets the display size for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bCompactMode`</ph></source>
        </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> to reduce the display size of the ribbon element; <ph id="ph2">`FALSE`</ph> to increase the display size of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve">
          <source>The following table summarizes the logic for this method.</source>
        </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve">
          <source>Current ribbon element size</source>
        </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve">
          <source>New ribbon element size</source>
        </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve">
          <source>Compact</source>
        </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve">
          <source>No change.</source>
        </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve">
          <source>Intermediate</source>
        </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve">
          <source>Compact if it is possible.</source>
        </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve">
          <source>Large</source>
        </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve">
          <source>Intermediate if it is possible.</source>
        </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve">
          <source>Compact</source>
        </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve">
          <source>Intermediate if it is possible; otherwise large.</source>
        </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__setdata"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::SetData</source>
        </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve">
          <source>Associates a data item with the ribbon element.</source>
        </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`dwData`</ph></source>
        </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve">
          <source>The data value.</source>
        </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__setdefaultmenulook"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::SetDefaultMenuLook</source>
        </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve">
          <source>Sets the ribbon element to appear as a pop-up command.</source>
        </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bIsDefaultMenuLook`</ph></source>
        </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> to set the ribbon element to appear as a pop-up command; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__setdescription"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::SetDescription</source>
        </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve">
          <source>Sets the description for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`lpszText`</ph></source>
        </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve">
          <source>The description for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve">
          <source>The framework displays the new description either on the status bar, or in the tooltip, or under the menu button.</source>
        </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__setid"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::SetID</source>
        </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve">
          <source>Sets the command ID of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`nID`</ph></source>
        </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve">
          <source>The command ID.</source>
        </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__setinitialmode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::SetInitialMode</source>
        </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve">
          <source>Sets the initial display size for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bOneRow`</ph></source>
        </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> to limit the display size for the ribbon element to compact or intermediate; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve">
          <source>The display size of ribbon elements can be compact, intermediate, or large.</source>
        </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__setkeys"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::SetKeys</source>
        </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve">
          <source>Sets the keytips for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`lpszKeys`</ph></source>
        </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve">
          <source>The keytip for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`lpszMenuKeys`</ph></source>
        </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve">
          <source>The keytip for the pop-up menu of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__setoriginal"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::SetOriginal</source>
        </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve">
          <source>Sets the original ribbon element for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pOriginal`</ph></source>
        </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve">
          <source>Pointer to a ribbon element.</source>
        </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve">
          <source>Ribbon elements that are copied to another container retain a pointer to the original ribbon element.</source>
        </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__setparentcategory"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::SetParentCategory</source>
        </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve">
          <source>Sets the parent category for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pParent`</ph></source>
        </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve">
          <source>Pointer to a ribbon category.</source>
        </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve">
          <source>The tabbed groups in ribbon controls are called categories.</source>
        </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__setparentmenu"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::SetParentMenu</source>
        </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve">
          <source>Sets the parent menu container for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pMenuBar`</ph></source>
        </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve">
          <source>The parent menu.</source>
        </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__setparentribbonbar"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::SetParentRibbonBar</source>
        </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve">
          <source>Sets the parent ribbon bar for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pRibbonBar`</ph></source>
        </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve">
          <source>Pointer to the parent ribbon bar.</source>
        </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__setrect"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::SetRect</source>
        </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve">
          <source>Sets the dimensions of the display rectangle for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`rect`</ph></source>
        </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve">
          <source>The dimensions of the rectangle.</source>
        </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__settext"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::SetText</source>
        </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve">
          <source>Sets the text and keytip for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`lpszText`</ph></source>
        </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve">
          <source>The text and keytip for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve">
          <source>To set the keytip for the ribbon element, append the newline escape sequence followed by the keytip characters to <ph id="ph1">`lpszText`</ph>.</source>
        </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__settextalwaysonright"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::SetTextAlwaysOnRight</source>
        </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve">
          <source>Sets the text for the ribbon element to display on the right.</source>
        </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bSet`</ph></source>
        </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> to display the text on the right; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__settooltiptext"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::SetToolTipText</source>
        </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve">
          <source>Sets the tooltip text for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`lpszText`</ph></source>
        </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve">
          <source>The tooltip text.</source>
        </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__setvisible"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::SetVisible</source>
        </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve">
          <source>Sets the visibility of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bIsVisible`</ph></source>
        </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> to display the ribbon element; <ph id="ph2">`FALSE`</ph> to hide the ribbon element.</source>
        </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__stretchhorizontally"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::StretchHorizontally</source>
        </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve">
          <source>Stretches the width of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve">
          <source>By default this method generates an assertion failure in debug builds and therefore should not be called.</source>
        </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve">
          <source>Override this method to stretch the width of the ribbon element.</source>
        </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__stretchtowholerow"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::StretchToWholeRow</source>
        </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve">
          <source>Changes the display height of the ribbon element to the specified row height.</source>
        </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pDC`</ph></source>
        </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve">
          <source>This parameter is not used.</source>
        </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`nHeight`</ph></source>
        </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve">
          <source>The height of the row.</source>
        </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the display height was set; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve">
          <source>Override this method to change the display height of the ribbon element to the specified row height.</source>
        </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__updatetooltipinfo"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::UpdateTooltipInfo</source>
        </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve">
          <source>Updates the tooltip text by using the command resource for the ribbon element.</source>
        </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbaseelement__hasfocus"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBaseElement::HasFocus</source>
        </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve">
          <source>Indicates whether the parent element has keyboard focus.</source>
        </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the ribbon element is focused; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Hierarchy Chart<ept id="p1">](../../mfc/hierarchy-chart.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Classes<ept id="p1">](../../mfc/reference/mfc-classes.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>