<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">63dcc7d53993d95ebe33f58c92042524550f4a3a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\cdynamicchain-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7f85774cac8215fb1ff450b534b3f23d31a89d22</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d95e35b1a9d5d54b01e0b42a940435478f7a43f5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CDynamicChain Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CDynamicChain Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class provides methods supporting the dynamic chaining of message maps.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This class and its members cannot be used in applications that execute in the Windows Runtime.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CDynamicChain::CDynamicChain<ept id="p1">](#cdynamicchain__cdynamicchain)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The constructor.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CDynamicChain::~CDynamicChain<ept id="p1">](#cdynamicchain___dtorcdynamicchain)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The destructor.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CDynamicChain::CallChain<ept id="p1">](#cdynamicchain__callchain)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Directs a Windows message to another object's message map.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CDynamicChain::RemoveChainEntry<ept id="p1">](#cdynamicchain__removechainentry)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Removes a message map entry from the collection.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CDynamicChain::SetChainEntry<ept id="p1">](#cdynamicchain__setchainentry)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Adds a message map entry to the collection or modifies an existing entry.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CDynamicChain`</ph> manages a collection of message maps, enabling a Windows message to be directed, at run time, to another object's message map.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To add support for dynamic chaining of message maps, do the following:</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Derive your class from <ph id="ph1">`CDynamicChain`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In the message map, specify the <bpt id="p1">[</bpt>CHAIN_MSG_MAP_DYNAMIC<ept id="p1">](http://msdn.microsoft.com/library/7e5c72b7-cb31-4f3b-8a1b-6293804af220)</ept> macro to chain to another object's default message map.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Derive every class you want to chain to from <bpt id="p1">[</bpt>CMessageMap<ept id="p1">](../../atl/reference/cmessagemap-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CMessageMap`</ph> allows an object to expose its message maps to other objects.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`CDynamicChain::SetChainEntry`</ph> to identify which object and which message map you want to chain to.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For example, suppose your class is defined as follows:</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_ATL_Windowing#88<ept id="p2">](../../atl/codesnippet/cpp/cdynamicchain-class_1.h)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The client then calls <ph id="ph1">`CMyWindow::SetChainEntry`</ph>:</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_ATL_Windowing#89<ept id="p2">](../../atl/codesnippet/cpp/cdynamicchain-class_2.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>where <ph id="ph1">`chainedObj`</ph> is the chained object and is an instance of a class derived from <ph id="ph2">`CMessageMap`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Now, if <ph id="ph1">`myCtl`</ph> receives a message that is not handled by <ph id="ph2">`OnPaint`</ph> or <ph id="ph3">`OnSetFocus`</ph>, the window procedure directs the message to <ph id="ph4">`chainedObj`</ph>'s default message map.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For more information about message map chaining, see <bpt id="p1">[</bpt>Message Maps<ept id="p1">](../../atl/message-maps-atl.md)</ept> in the article "ATL Window Classes."</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> atlwin.h</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cdynamicchain__callchain"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CDynamicChain::CallChain</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Directs the Windows message to another object's message map.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>[in] The unique identifier associated with the chained object and its message map.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>[in] The handle to the window receiving the message.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>[in] The message sent to the window.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>[in] Additional message-specific information.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>[in] Additional message-specific information.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>[out] The result of the message processing.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> if the message is fully processed; otherwise, <bpt id="p2">**</bpt>FALSE<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For the window procedure to invoke <ph id="ph1">`CallChain`</ph>, you must specify the <bpt id="p1">[</bpt>CHAIN_MSG_MAP_DYNAMIC<ept id="p1">](http://msdn.microsoft.com/library/7e5c72b7-cb31-4f3b-8a1b-6293804af220)</ept> macro in your message map.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For an example, see the <bpt id="p1">[</bpt>CDynamicChain<ept id="p1">](../../atl/reference/cdynamicchain-class.md)</ept> overview.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CallChain`</ph> requires a previous call to <bpt id="p1">[</bpt>SetChainEntry<ept id="p1">](#cdynamicchain__setchainentry)</ept> to associate the <ph id="ph2">`dwChainID`</ph> value with an object and its message map.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cdynamicchain__cdynamicchain"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CDynamicChain::CDynamicChain</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The constructor.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cdynamicchain___dtorcdynamicchain"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CDynamicChain::~CDynamicChain</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The destructor.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Frees all allocated resources.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cdynamicchain__removechainentry"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CDynamicChain::RemoveChainEntry</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Removes the specified message map from the collection.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>[in] The unique identifier associated with the chained object and its message map.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>You originally define this value through a call to <bpt id="p1">[</bpt>SetChainEntry<ept id="p1">](#cdynamicchain__setchainentry)</ept>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> if the message map is successfully removed from the collection.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Otherwise, <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cdynamicchain__setchainentry"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CDynamicChain::SetChainEntry</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Adds the specified message map to the collection.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>[in] The unique identifier associated with the chained object and its message map.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>[in] A pointer to the chained object declaring the message map.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This object must derive from <bpt id="p1">[</bpt>CMessageMap<ept id="p1">](../../atl/reference/cmessagemap-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>[in] The identifier of the message map in the chained object.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The default value is 0, which identifies the default message map declared with <bpt id="p1">[</bpt>BEGIN_MSG_MAP<ept id="p1">](http://msdn.microsoft.com/library/8bbb5af9-18b1-48c6-880e-166f599ee554)</ept>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>To specify an alternate message map declared with <bpt id="p1">[</bpt>ALT_MSG_MAP(msgMapID)<ept id="p1">](http://msdn.microsoft.com/library/2c8871bf-abc0-4d52-bcf7-6b2ab9eb5af8)</ept>, pass <ph id="ph1">`msgMapID`</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> if the message map is successfully added to the collection.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Otherwise, <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`dwChainID`</ph> value already exists in the collection, its associated object and message map are replaced by <ph id="ph2">`pObject`</ph> and <ph id="ph3">`dwMsgMapID`</ph>, respectively.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Otherwise, a new entry is added.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CWindowImpl Class<ept id="p1">](../../atl/reference/cwindowimpl-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Class Overview<ept id="p1">](../../atl/atl-class-overview.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>