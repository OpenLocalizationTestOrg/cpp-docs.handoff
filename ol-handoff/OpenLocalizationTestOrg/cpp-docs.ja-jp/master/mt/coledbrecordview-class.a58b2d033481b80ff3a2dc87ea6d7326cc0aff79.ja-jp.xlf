<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">03a08ee3e3168abccfa4bf65a2cc566c82a31358</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\coledbrecordview-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">80c35287d1ea92513823a74bc685a1f504128384</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">430786e5898c6aee09877c196e65468d7bd301d9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>COleDBRecordView Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>COleDBRecordView Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A view that displays database records in controls.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Protected Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COleDBRecordView::COleDBRecordView<ept id="p1">](#coledbrecordview__coledbrecordview)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`COleDBRecordView`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COleDBRecordView::OnGetRowset<ept id="p1">](#coledbrecordview__ongetrowset)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Returns a standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COleDBRecordView::OnMove<ept id="p1">](#coledbrecordview__onmove)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Updates the current record (if dirty) on the data source and then moves to the specified record (next, previous, first, or last).</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The view is a form view directly connected to a <ph id="ph1">`CRowset`</ph> object.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The view is created from a dialog template resource and displays the fields of the <ph id="ph1">`CRowset`</ph> object in the dialog template's controls.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`COleDBRecordView`</ph> object uses dialog data exchange (DDX), and the navigational functionality built into <ph id="ph2">`CRowset`</ph>, to automate the movement of data between the controls on the form and the fields of the rowset.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`COleDBRecordView`</ph> also supplies a default implementation for moving to the first, next, previous, or last record and an interface for updating the record currently on view.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can use DDX functions with <bpt id="p1">**</bpt>COleDbRecordView<ept id="p1">**</ept> to get data directly from the database recordset and display it in a dialog control.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You should use the <bpt id="p1">**</bpt>DDX_<ph id="ph1">\*</ph><ept id="p1">**</ept> methods (such as <ph id="ph2">`DDX_Text`</ph>), not the <bpt id="p2">**</bpt>DDX_Field<ph id="ph3">\*</ph><ept id="p2">**</ept> functions (such as <ph id="ph4">`DDX_FieldText`</ph>) with <bpt id="p3">**</bpt>COleDbRecordView<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`DDX_FieldText`</ph> will not work with <bpt id="p1">**</bpt>COleDbRecordView<ept id="p1">**</ept> because <ph id="ph2">`DDX_FieldText`</ph> takes an additional argument of type <bpt id="p2">**</bpt>CRecordset<ph id="ph3">\*</ph><ept id="p2">**</ept> (for <ph id="ph4">`CRecordView`</ph>) or <bpt id="p3">**</bpt>CDaoRecordset<ph id="ph5">\*</ph><ept id="p3">**</ept> (for <ph id="ph6">`CDaoRecordView`</ph>).</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If you are working with the Data Access Objects (DAO) classes rather than the OLE DB Consumer Template classes, use class <bpt id="p1">[</bpt>CDaoRecordView<ept id="p1">](../../mfc/reference/cdaorecordview-class.md)</ept> instead.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more information, see the article <bpt id="p1">[</bpt>Overview: Database Programming<ept id="p1">](../../data/data-access-programming-mfc-atl.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`COleDBRecordView`</ph> keeps track of the user's position in the rowset so that the record view can update the user interface.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When the user moves to either end of the rowset, the record view disables user interface objects â€” such as menu items or toolbar buttons â€” for moving further in the same direction.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For more information about rowset classes, see the <bpt id="p1">[</bpt>Using OLE DB Consumer Templates<ept id="p1">](../../data/oledb/ole-db-consumer-templates-cpp.md)</ept> article.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CObject<ept id="p1">](../../mfc/reference/cobject-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CCmdTarget<ept id="p1">](../../mfc/reference/ccmdtarget-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CWnd<ept id="p1">](../../mfc/reference/cwnd-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CView<ept id="p1">](../../mfc/reference/cview-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CScrollView<ept id="p1">](../../mfc/reference/cscrollview-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CFormView<ept id="p1">](../../mfc/reference/cformview-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxoledb.h</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="coledbrecordview__coledbrecordview"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  COleDBRecordView::COleDBRecordView</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`COleDBRecordView`</ph> object.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Contains a null-terminated string that is the name of a dialog-template resource.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Contains the ID number of a dialog-template resource.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>When you create an object of a type derived from <ph id="ph1">`COleDBRecordView`</ph>, invoke one of the constructors to create the view object and identify the dialog resource on which the view is based.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You can identify the resource either by name (pass a string as the argument to the constructor) or by its ID (pass an unsigned integer as the argument).</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Your derived class <bpt id="p1">*</bpt>must<ept id="p1">*</ept> supply its own constructor.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In the constructor, invoke the constructor, <ph id="ph1">`COleDBRecordView::COleDBRecordView`</ph>, with the resource name or ID as an argument.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="coledbrecordview__ongetrowset"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  COleDBRecordView::OnGetRowset</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Returns a handle for the <bpt id="p1">**</bpt>CRowset&lt;&gt;<ept id="p1">**</ept> object associated with the record view.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You must override this member function to construct or obtain a rowset object and return a handle to it.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If you declare your record view class with ClassWizard, the wizard writes a default override for you.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>ClassWizard's default implementation returns the rowset handle stored in the record view if one exists.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If not, it constructs a rowset object of the type you specified with ClassWizard and calls its <bpt id="p1">**</bpt>Open<ept id="p1">**</ept> member function to open the table or run the query, and then returns a handle to the object.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Previous to MFC 7.0, <ph id="ph1">`OnGetRowset`</ph> returned a pointer to <ph id="ph2">`CRowset`</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If you have code that calls <ph id="ph1">`OnGetRowset`</ph>, you need to change the return type to the templatized class <bpt id="p1">**</bpt>CRowset&lt;&gt;<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFCDatabase#38<ept id="p2">](../../mfc/codesnippet/cpp/coledbrecordview-class_1.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For more information and examples, see the article <bpt id="p1">[</bpt>Record Views: Using a Record View<ept id="p1">](../../data/using-a-record-view-mfc-data-access.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="coledbrecordview__onmove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  COleDBRecordView::OnMove</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Moves to a different record in the rowset and display its fields in the controls of the record view.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>One of the following standard command ID values:</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ID_RECORD_FIRST`</ph>Â Â Â Move to the first record in the recordset.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ID_RECORD_LAST`</ph>Â Â Â Move to the last record in the recordset.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ID_RECORD_NEXT`</ph>Â Â Â Move to the next record in the recordset.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ID_RECORD_PREV`</ph>Â Â Â Move to the previous record in the recordset.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Nonzero if the move was successful; otherwise 0 if the move request was denied.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The default implementation calls the appropriate <bpt id="p1">**</bpt>Move<ept id="p1">**</ept> member function of the <ph id="ph1">`CRowset`</ph> object associated with the record view.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>By default, <ph id="ph1">`OnMove`</ph> updates the current record on the data source if the user has changed it in the record view.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The Application Wizard creates a menu resource with First Record, Last Record, Next Record, and Previous Record menu items.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If you select the Dockable Toolbar option, The Application Wizard also creates a toolbar with buttons corresponding to these commands.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>If you move past the last record in the recordset, the record view continues to display the last record.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If you move backward past the first record, the record view continues to display the first record.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Hierarchy Chart<ept id="p1">](../../mfc/hierarchy-chart.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>