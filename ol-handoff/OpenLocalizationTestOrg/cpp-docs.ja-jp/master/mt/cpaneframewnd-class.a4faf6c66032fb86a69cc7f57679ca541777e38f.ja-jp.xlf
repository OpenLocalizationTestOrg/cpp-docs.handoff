<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3a8e5d562acb040f692e351e67ddb3ef6c8f5dd2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\cpaneframewnd-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4e249ccab3dfbd1976d6359ed9c1b019a68c4900</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c752d902cc47df59e39eefe07a6a00aed60b31ad</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CPaneFrameWnd Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CPaneFrameWnd Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Implements a mini-frame window that contains one pane.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The pane fills the client area of the window.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::AddPane<ept id="p1">](#cpaneframewnd__addpane)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Adds a pane.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::AddRemovePaneFromGlobalList<ept id="p1">](#cpaneframewnd__addremovepanefromgloballist)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Adds or removes a pane from the global list.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::AdjustLayout<ept id="p1">](#cpaneframewnd__adjustlayout)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Adjusts the layout of the mini-frame window.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::AdjustPaneFrames<ept id="p1">](#cpaneframewnd__adjustpaneframes)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::CalcBorderSize<ept id="p1">](#cpaneframewnd__calcbordersize)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Calculates the size of the borders for a mini-frame window.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::CalcExpectedDockedRect<ept id="p1">](#cpaneframewnd__calcexpecteddockedrect)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Calculate the expected rectangle of a docked window.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::CanBeAttached<ept id="p1">](#cpaneframewnd__canbeattached)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Determines whether the current pane can be docked to another pane or frame window.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::CanBeDockedToPane<ept id="p1">](#cpaneframewnd__canbedockedtopane)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Determines whether the mini-frame window can be docked to a pane.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::CheckGripperVisibility<ept id="p1">](#cpaneframewnd__checkgrippervisibility)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::ConvertToTabbedDocument<ept id="p1">](#cpaneframewnd__converttotabbeddocument)</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Converts the pane to a tabbed document.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::Create<ept id="p1">](#cpaneframewnd__create)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Creates a mini-frame window and attaches it to the <ph id="ph1">`CPaneFrameWnd`</ph> object.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::CreateEx<ept id="p1">](#cpaneframewnd__createex)</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Creates a mini-frame window and attaches it to the <ph id="ph1">`CPaneFrameWnd`</ph> object.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::DockPane<ept id="p1">](#cpaneframewnd__dockpane)</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Docks the pane.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::FindFloatingPaneByID<ept id="p1">](#cpaneframewnd__findfloatingpanebyid)</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Finds a pane with the specified control ID in the global list of floating panes.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::FrameFromPoint<ept id="p1">](#cpaneframewnd__framefrompoint)</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Finds the mini-frame window containing a user-supplied point.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::GetCaptionHeight<ept id="p1">](#cpaneframewnd__getcaptionheight)</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Returns the height of the mini-frame window caption.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::GetCaptionRect<ept id="p1">](#cpaneframewnd__getcaptionrect)</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Calculates the bounding rectangle of a mini-frame window caption.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::GetCaptionText<ept id="p1">](#cpaneframewnd__getcaptiontext)</ept></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Returns the caption text.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::GetDockingManager<ept id="p1">](#cpaneframewnd__getdockingmanager)</ept></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::GetDockingMode<ept id="p1">](#cpaneframewnd__getdockingmode)</ept></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Returns the docking mode.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::GetFirstVisiblePane<ept id="p1">](#cpaneframewnd__getfirstvisiblepane)</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Returns the first visible pane that is contained in a mini-frame window.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::GetHotPoint<ept id="p1">](#cpaneframewnd__gethotpoint)</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::GetPane<ept id="p1">](#cpaneframewnd__getpane)</ept></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Returns a pane that is contained in the mini-frame window.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::GetPaneCount<ept id="p1">](#cpaneframewnd__getpanecount)</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Returns the number of panes that are contained in a mini-frame window.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::GetParent<ept id="p1">](#cpaneframewnd__getparent)</ept></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::GetPinState<ept id="p1">](#cpaneframewnd__getpinstate)</ept></source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::GetRecentFloatingRect<ept id="p1">](#cpaneframewnd__getrecentfloatingrect)</ept></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::GetVisiblePaneCount<ept id="p1">](#cpaneframewnd__getvisiblepanecount)</ept></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Returns the number of visible panes that are contained in a mini-frame window.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::HitTest<ept id="p1">](#cpaneframewnd__hittest)</ept></source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Determines what part of a mini-frame window is at a given point.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::IsCaptured<ept id="p1">](#cpaneframewnd__iscaptured)</ept></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::IsDelayShow<ept id="p1">](#cpaneframewnd__isdelayshow)</ept></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::IsRollDown<ept id="p1">](#cpaneframewnd__isrolldown)</ept></source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Determines whether a mini-frame window should be rolled down.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::IsRollUp<ept id="p1">](#cpaneframewnd__isrollup)</ept></source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Determines whether a mini-frame window should be rolled up.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::KillDockingTimer<ept id="p1">](#cpaneframewnd__killdockingtimer)</ept></source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Stops the docking timer.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::LoadState<ept id="p1">](#cpaneframewnd__loadstate)</ept></source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Loads the pane's state from the registry.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::OnBeforeDock<ept id="p1">](#cpaneframewnd__onbeforedock)</ept></source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Determines if docking is possible.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::OnDockToRecentPos<ept id="p1">](#cpaneframewnd__ondocktorecentpos)</ept></source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Docks the mini-frame window at its most recent position.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::OnKillRollUpTimer<ept id="p1">](#cpaneframewnd__onkillrolluptimer)</ept></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Stops the rollup timer.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::OnMovePane<ept id="p1">](#cpaneframewnd__onmovepane)</ept></source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Moves the mini-frame window by a specified offset.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::OnPaneRecalcLayout<ept id="p1">](#cpaneframewnd__onpanerecalclayout)</ept></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Adjusts the layout of a contained pane.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::OnSetRollUpTimer<ept id="p1">](#cpaneframewnd__onsetrolluptimer)</ept></source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Sets the rollup timer.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::OnShowPane<ept id="p1">](#cpaneframewnd__onshowpane)</ept></source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Called by the framework when a pane in the mini-frame window is hidden or displayed.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::PaneFromPoint<ept id="p1">](#cpaneframewnd__panefrompoint)</ept></source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Returns a pane if it contains a user-supplied point inside a mini-frame window.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::Pin<ept id="p1">](#cpaneframewnd__pin)</ept></source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Used by class <bpt id="p1">[</bpt>CWinApp<ept id="p1">](../../mfc/reference/cwinapp-class.md)</ept> to translate window messages before they are dispatched to the <bpt id="p2">[</bpt>TranslateMessage<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms644955)</ept> and <bpt id="p3">[</bpt>DispatchMessage<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms644934)</ept> Windows functions.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::RedrawAll<ept id="p1">](#cpaneframewnd__redrawall)</ept></source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Redraws all mini-frame windows.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::RemoveNonValidPanes<ept id="p1">](#cpaneframewnd__removenonvalidpanes)</ept></source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Called by the framework to remove non-valid panes.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::RemovePane<ept id="p1">](#cpaneframewnd__removepane)</ept></source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Removes a pane from the mini-frame window.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::ReplacePane<ept id="p1">](#cpaneframewnd__replacepane)</ept></source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Replaces one pane with another.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::SaveState<ept id="p1">](#cpaneframewnd__savestate)</ept></source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Saves the pane's state to the registry.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Reads or writes this object from or to an archive.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::SetCaptionButtons<ept id="p1">](#cpaneframewnd__setcaptionbuttons)</ept></source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Sets caption buttons.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::SetDelayShow<ept id="p1">](#cpaneframewnd__setdelayshow)</ept></source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::SetDockingManager<ept id="p1">](#cpaneframewnd__setdockingmanager)</ept></source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::SetDockingTimer<ept id="p1">](#cpaneframewnd__setdockingtimer)</ept></source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Sets the docking timer.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::SetDockState<ept id="p1">](#cpaneframewnd__setdockstate)</ept></source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Sets the docking state.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::SetHotPoint<ept id="p1">](#cpaneframewnd__sethotpoint)</ept></source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::SetPreDockState<ept id="p1">](#cpaneframewnd__setpredockstate)</ept></source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Called by the framework to set the predocking state.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::SizeToContent<ept id="p1">](#cpaneframewnd__sizetocontent)</ept></source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Adjusts the size of a mini-frame window so that it is equivalent in size to a contained pane.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::StartTearOff<ept id="p1">](#cpaneframewnd__starttearoff)</ept></source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Tears off a menu.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::StoreRecentDockSiteInfo<ept id="p1">](#cpaneframewnd__storerecentdocksiteinfo)</ept></source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::StoreRecentTabRelatedInfo<ept id="p1">](#cpaneframewnd__storerecenttabrelatedinfo)</ept></source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Protected Methods</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::OnCheckRollState<ept id="p1">](#cpaneframewnd__oncheckrollstate)</ept></source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Determines whether a mini-frame window should be rolled up or down.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::OnDrawBorder<ept id="p1">](#cpaneframewnd__ondrawborder)</ept></source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Draws the borders of a mini-frame window.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Data Members</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd::m_bUseSaveBits<ept id="p1">](#cpaneframewnd__m_busesavebits)</ept></source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Specifies whether to register the window class with the <ph id="ph1">`CS_SAVEBITS`</ph> class style.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The framework automatically creates a <ph id="ph1">`CPaneFrameWnd`</ph> object when a pane is switched from a docked state to a floating state.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>A mini-frame window can be dragged with its contents visible (immediate docking) or using a drag rectangle (standard docking).</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The docking mode of the mini-frame's container pane determines the mini-frame's dragging behavior.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>CBasePane::GetDockingMode<ept id="p1">](../../mfc/reference/cbasepane-class.md#cbasepane__getdockingmode)</ept>.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>A mini-frame window displays buttons on the caption in accordance with the contained pane style.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>If the pane can be closed ( <bpt id="p1">[</bpt>CBasePane::CanBeClosed<ept id="p1">](../../mfc/reference/cbasepane-class.md#cbasepane__canbeclosed)</ept>), it displays a Close button.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>If the pane has the <ph id="ph1">`AFX_CBRS_AUTO_ROLLUP`</ph> style, it displays a pin.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>If you derive a class from <ph id="ph1">`CPaneFrameWnd`</ph>, you must tell the framework how to create it.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Either create the class by overriding <bpt id="p1">[</bpt>CPane::CreateDefaultMiniframe<ept id="p1">](../../mfc/reference/cpane-class.md#cpane__createdefaultminiframe)</ept>, or set the <ph id="ph1">`CPane::m_pMiniFrameRTC`</ph> member so that it points to the runtime class information for your class.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CObject<ept id="p1">](../../mfc/reference/cobject-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CCmdTarget<ept id="p1">](../../mfc/reference/ccmdtarget-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CWnd<ept id="p1">](../../mfc/reference/cwnd-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPaneFrameWnd<ept id="p1">](../../mfc/reference/cpaneframewnd-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxPaneFrameWnd.h</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__addpane"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::AddPane</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Adds a pane.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pWnd`</ph></source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The pane to add.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__addremovepanefromgloballist"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::AddRemovePaneFromGlobalList</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Adds or removes a pane from the global list.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pWnd`</ph></source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The pane to add or remove.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bAdd`</ph></source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>If non-zero, add the pane.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>If 0, remove the pane.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Nonzero if the method was successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__adjustlayout"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::AdjustLayout</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Adjusts the layout of the mini-frame window.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__adjustpaneframes"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::AdjustPaneFrames</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__calcbordersize"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::CalcBorderSize</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Calculates the size of the borders for a miniframe window.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>[out] <ph id="ph1">`rectBorderSize`</ph></source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Contains the size, in pixels, of the border of the miniframe window.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>This method is called by the framework to calculate the size of the border of a miniframe window.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The returned size depends on whether a miniframe window contains a toolbar or a <bpt id="p1">[</bpt>CDockablePane<ept id="p1">](../../mfc/reference/cdockablepane-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__calcexpecteddockedrect"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::CalcExpectedDockedRect</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Calculate the expected rectangle of a docked window.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pWndToDock`</ph></source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>A pointer to the window to dock.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`ptMouse`</ph></source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The mouse location.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>[out] <ph id="ph1">`rectResult`</ph></source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The calculated rectangle.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>[out] <ph id="ph1">`bDrawTab`</ph></source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`TRUE`</ph>, draw a tab.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`FALSE`</ph>, do not draw a tab.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>[out] <ph id="ph1">`ppTargetBar`</ph></source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>A pointer to the target pane.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>This method calculates the rectangle that a window would occupy if a user dragged the window to the point specified by <ph id="ph1">`ptMouse`</ph> and docked it there.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__canbeattached"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::CanBeAttached</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Determines whether the current pane can be docked to another pane or frame window.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the pane can be docked to another pane or frame window; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__canbedockedtopane"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::CanBeDockedToPane</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Determines whether the mini-frame window can be docked to a pane.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pDockingBar`</ph></source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>A pane.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Nonzero if the mini-frame can be docked to <ph id="ph1">`pDockingBar`</ph>; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__checkgrippervisibility"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::CheckGripperVisibility</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__converttotabbeddocument"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::ConvertToTabbedDocument</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Converts the pane to a tabbed document.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__create"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::Create</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Creates a miniframe window and attaches it to the <bpt id="p1">[</bpt>CPaneFrameWnd<ept id="p1">](../../mfc/reference/cpaneframewnd-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`lpszWindowName`</ph></source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Specifies the text to display on the miniframe window.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`dwStyle`</ph></source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Specifies the window style.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Window Styles<ept id="p1">](../../mfc/reference/window-styles.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`rect`</ph></source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Specifies the initial size and position of the miniframe window.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>[in] [out] <ph id="ph1">`pParentWnd`</ph></source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Specifies the parent frame of the miniframe window.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>This value must not be <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>[in] [out] <ph id="ph1">`pContext`</ph></source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Specifies user-defined context.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the window was created successfully; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>A miniframe window is created in two steps.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>First, the framework creates a <bpt id="p1">[</bpt>CPaneFrameWnd<ept id="p1">](../../mfc/reference/cpaneframewnd-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Second, it calls <ph id="ph1">`Create`</ph> to create the Windows miniframe window and attach it to the <ph id="ph2">`CPaneFrameWnd`</ph> object.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__createex"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::CreateEx</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Creates a miniframe window and attaches it to the <bpt id="p1">[</bpt>CPaneFrameWnd<ept id="p1">](../../mfc/reference/cpaneframewnd-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`dwStyleEx`</ph></source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Specifies the extended window style.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Extended Window Styles<ept id="p1">](../../mfc/reference/extended-window-styles.md)</ept></source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`lpszWindowName`</ph></source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Specifies the text to display on the miniframe window.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`dwStyle`</ph></source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Specifies the window style.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Window Styles<ept id="p1">](../../mfc/reference/window-styles.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`rect`</ph></source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Specifies the initial size and position of the miniframe window.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>[in] [out] <ph id="ph1">`pParentWnd`</ph></source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Specifies the parent frame of the miniframe window.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>This value must not be <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>[in] [out] <ph id="ph1">`pContext`</ph></source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Specifies user-defined context.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the window was created successfully; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>A miniframe window is created in two steps.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>First, the framework creates a <bpt id="p1">[</bpt>CPaneFrameWnd<ept id="p1">](../../mfc/reference/cpaneframewnd-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Second, it calls <ph id="ph1">`Create`</ph> to create the Windows miniframe window and attach it to the <ph id="ph2">`CPaneFrameWnd`</ph> object.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__dockpane"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::DockPane</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Docks the pane.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>[out] <ph id="ph1">`bWasDocked`</ph></source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> if the pane was already docked; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>If the operation was successful, the <ph id="ph1">`CDockablePane`</ph> that the pane was docked to; otherwise <ph id="ph2">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__findfloatingpanebyid"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::FindFloatingPaneByID</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Finds a pane with the specified control ID in the global list of floating panes.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`nID`</ph></source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Represents the control ID of the pane to find.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The pane with the specified control ID; otherwise, <ph id="ph1">`NULL`</ph>, if no pane has the specified control ID.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__framefrompoint"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::FrameFromPoint</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Finds the mini-frame window that contains the specified point.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pt`</ph></source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>The point, in screen coordinates.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`nSensitivity`</ph></source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Increase the search area of the mini-frame window by this size.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>A mini-frame window satisfies the search criteria if the given point falls in the increased area.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pFrameToExclude`</ph></source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Specifies a mini-frame window to exclude from the search.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bFloatMultiOnly`</ph></source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`TRUE`</ph>, only search mini-frame windows that have the <ph id="ph2">`CBRS_FLOAT_MULTI`</ph> style.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`FALSE`</ph>, search all mini-frame windows.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>A pointer to the mini-frame window that contains <ph id="ph1">`pt`</ph>; otherwise <ph id="ph2">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__getcaptionheight"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::GetCaptionHeight</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Returns the height of the mini-frame window caption.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>The height, in pixels, of the mini-frame window.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Call this method to determine the height of a mini-frame window.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>By default, the height is set to <ph id="ph1">`SM_CYSMCAPTION`</ph>.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>GetSystemMetrics Function<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms724385)</ept>.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__getcaptionrect"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::GetCaptionRect</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Calculates the bounding rectangle of a mini-frame window caption.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>[out] <ph id="ph1">`rectCaption`</ph></source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Contains the size and position of the mini-frame window caption, in screen coordinates.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>This method is called by the framework to calculate the bounding rectangle of a mini-frame window caption.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__getcaptiontext"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::GetCaptionText</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Returns the caption text.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The caption text of the mini-frame window.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>This method is called by the framework when it displays the caption text.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__getdockingmanager"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::GetDockingManager</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__getdockingmode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::GetDockingMode</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Returns the docking mode.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>The docking mode.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>One of the following values:</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__getfirstvisiblepane"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::GetFirstVisiblePane</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>Returns the first visible pane that is contained in a mini-frame window.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>The first pane in the mini-frame window, or <ph id="ph1">`NULL`</ph> if the mini-frame window contains no panes.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__gethotpoint"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::GetHotPoint</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__getpane"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::GetPane</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Returns a pane that is contained in the mini-frame window.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>The pane that is contained in the mini-frame, or <ph id="ph1">`NULL`</ph> if the mini-frame window contains no panes.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__getpanecount"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::GetPaneCount</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Returns the number of panes that are contained in a mini-frame window.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>The number of panes in the mini-frame window.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>This value can be zero.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__getparent"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::GetParent</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__getpinstate"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::GetPinState</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__getrecentfloatingrect"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::GetRecentFloatingRect</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__getvisiblepanecount"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::GetVisiblePaneCount</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>Returns the number of visible panes that are contained in a mini-frame window.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>The number of visible panes.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__hittest"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::HitTest</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>Determines what part of a mini-frame window is at a given point.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`point`</ph></source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>The point to test.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bDetectCaption`</ph></source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`TRUE`</ph>, check the point against the caption.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`FALSE`</ph>, ignore the caption.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>One of the following values:</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>Meaning</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>The point is outside the mini-frame window.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>The point is in the client area.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>The point is on the caption.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>The point is at the top.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>The point is at the top left.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>The point is at the top right.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>The point is at the left.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>The point is at the right.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>The point is at the bottom.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>The point is at the bottom left.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>The point is at the bottom right.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__iscaptured"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::IsCaptured</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__isdelayshow"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::IsDelayShow</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__isrolldown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::IsRollDown</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>Determines whether a mini-frame window should be rolled down.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the mini-frame window must be rolled down; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>This method is called by the framework to determine whether a mini-frame window should be rolled down.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>The rollup/rolldown feature is enabled for a mini-frame window if it contains at least one pane that has the <ph id="ph1">`AFX_CBRS_AUTO_ROLLUP`</ph> flag.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>This flag is set when a pane is created.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>CBasePane::CreateEx<ept id="p1">](../../mfc/reference/cbasepane-class.md#cbasepane__createex)</ept>.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>By default, the framework checks whether the mouse pointer is inside the mini-frame window bounding rectangle to determine whether the window has to be rolled down.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>You can override this behavior in a derived class.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__isrollup"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::IsRollUp</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>Determines whether a mini-frame window should be rolled up.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the mini-frame window must be rolled up; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>This method is called by the framework to determine whether a mini-frame window should be rolled up.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>The rollup/rolldown feature is enabled for a mini-frame window if it contains at least one pane that has the <ph id="ph1">`AFX_CBRS_AUTO_ROLLUP`</ph> flag.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>This flag is set when a pane is created.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>CBasePane::CreateEx<ept id="p1">](../../mfc/reference/cbasepane-class.md#cbasepane__createex)</ept>.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>By default, the framework checks whether the mouse pointer is inside the mini-frame window bounding rectangle to determine whether the window has to be rolled up.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>You can override this behavior in a derived class.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__killdockingtimer"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::KillDockingTimer</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>Stops the docking timer.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__loadstate"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::LoadState</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Loads the pane's state from the registry.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`lpszProfileName`</ph></source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>The profile name.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`uiID`</ph></source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>The pane ID.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the pane state was loaded successfully; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__m_busesavebits"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::m_bUseSaveBits</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>Specifies whether to register the window class that has the <ph id="ph1">`CS_SAVEBITS`</ph> class style.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>Set this static member to <ph id="ph1">`TRUE`</ph> to register the mini-frame window class that has the <ph id="ph2">`CS_SAVEBITS`</ph> style.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>This may help reduce flickering when a user drags the mini-frame window.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__onbeforedock"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::OnBeforeDock</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>Determines if docking is possible.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if docking is possible; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__oncheckrollstate"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::OnCheckRollState</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>Determines whether a mini-frame window should be rolled up or down.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>This method is called by the framework to determine whether a mini-frame window should be rolled up or down.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>By default, the framework calls <bpt id="p1">[</bpt>CPaneFrameWnd::IsRollUp<ept id="p1">](#cpaneframewnd__isrollup)</ept> and <bpt id="p2">[</bpt>CPaneFrameWnd::IsRollDown<ept id="p2">](#cpaneframewnd__isrolldown)</ept> and just stretches or restores the mini-frame window.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>You can override this method in a derived class to use a different visual effect.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__ondocktorecentpos"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::OnDockToRecentPos</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>Docks the mini-frame window at its most recent position.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__ondrawborder"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::OnDrawBorder</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>Draws the borders of a mini-frame window.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pDC`</ph></source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>The device context used to draw the border.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>This method is called by the framework to draw the borders of the mini-frame window.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__onkillrolluptimer"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::OnKillRollUpTimer</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>Stops the rollup timer.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__onmovepane"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::OnMovePane</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>Moves the mini-frame window by a specified offset.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pBar`</ph></source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>A pointer to a pane (ignored).</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`ptOffset`</ph></source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>The offset by which to move the pane.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__onpanerecalclayout"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::OnPaneRecalcLayout</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>Adjusts the layout of a pane inside a mini-frame window.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>The framework calls this method when it must adjust the layout of a pane inside the mini-frame window.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>By default, the pane is positioned to cover the complete client area of the mini-frame window.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__onsetrolluptimer"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::OnSetRollUpTimer</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>Sets the rollup timer.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__onshowpane"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::OnShowPane</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>Called by the framework when a pane in the mini-frame window is hidden or displayed.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pBar`</ph></source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>The pane that is being shown or hidden.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bShow`</ph></source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> if the pane is being shown; <ph id="ph2">`FALSE`</ph> if the pane is being hidden.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>Called by the framework when a pane in the mini-frame window is shown or hidden.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>The default implementation does nothing.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__pin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::Pin</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bPin`</ph></source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__panefrompoint"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::PaneFromPoint</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>Returns a pane if it contains a user-supplied point inside a mini-frame window.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`point`</ph></source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>The point that the user clicked, in screen coordinates.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`nSensitivity`</ph></source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>This parameter is not used.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bCheckVisibility`</ph></source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> to specify that only visible panes should be returned; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>The pane that the user clicked, or <ph id="ph1">`NULL`</ph> if no pane exists at that location.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>Call this method to obtain a pane that contains the given point.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__redrawall"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::RedrawAll</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>Redraws all mini-frame windows.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>This method updates all mini-frame windows by calling <bpt id="p1">[</bpt>CWnd::RedrawWindow<ept id="p1">](../../mfc/reference/cwnd-class.md#cwnd__redrawwindow)</ept> for each window.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__removenonvalidpanes"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::RemoveNonValidPanes</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>Called by the framework to remove non-valid panes.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__removepane"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::RemovePane</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>Removes a pane from the mini-frame window.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pWnd`</ph></source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>A pointer to the pane to remove.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bDestroy`</ph></source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>Specifies what happens to the mini-frame window.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`bDestroy`</ph> is <ph id="ph2">`TRUE`</ph>, this method destroys the mini-frame window immediately.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>If it is <ph id="ph1">`FALSE`</ph>, this method destroys the mini-frame window after a certain delay.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bNoDelayedDestroy`</ph></source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`TRUE`</ph>, delayed destruction is disabled.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`FALSE`</ph>, delayed destruction is enabled.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>The framework can destroy mini-frame windows immediately or after a certain delay.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>If you want to delay destruction of mini-frame windows, pass <ph id="ph1">`FALSE`</ph> in the <ph id="ph2">`bNoDelayedDestroy`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>Delayed destruction occurs when the framework processes the <ph id="ph1">`AFX_WM_CHECKEMPTYMINIFRAME`</ph> message.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__replacepane"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::ReplacePane</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>Replaces one pane with another.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pBarOrg`</ph></source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>A pointer to the original pane.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pBarReplaceWith`</ph></source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>A pointer to the pane that replaces the original pane.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__savestate"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::SaveState</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>Saves the pane's state to the registry.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`lpszProfileName`</ph></source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>The profile name.</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`uiID`</ph></source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>The pane ID.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the pane state was saved successfully; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__setcaptionbuttons"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::SetCaptionButtons</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>Sets caption buttons.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`dwButtons`</ph></source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>Bitwise-OR combination of the following values:</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__setdelayshow"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::SetDelayShow</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bDelayShow`</ph></source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__setdockingmanager"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::SetDockingManager</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pManager`</ph></source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__setdockingtimer"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::SetDockingTimer</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Sets the docking timer.</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`nTimeOut`</ph></source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>Timeout value in milliseconds.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__setdockstate"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::SetDockState</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>Sets the docking state.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pDockManager`</ph></source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>A pointer to a docking manager.</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__sethotpoint"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::SetHotPoint</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`ptNew`</ph></source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__setpredockstate"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::SetPreDockState</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>Called by the framework to set the predocking state.</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`preDockState`</ph></source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>Possible values:</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`PDS_NOTHING`</ph>,</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`PDS_DOCK_REGULAR`</ph>,</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pBarToDock`</ph></source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>A pointer to the pane to dock.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`dockMethod`</ph></source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>The docking method.</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>(This parameter is ignored.)</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the mini-frame window is undocked; <ph id="ph2">`FALSE`</ph> if it is docked.</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__sizetocontent"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::SizeToContent</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>Adjusts the size of a mini-frame window so that it is equivalent to a contained pane.</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>Call this method to adjust the size of a mini-frame window to the size of a contained pane.</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__starttearoff"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::StartTearOff</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>Tears off a menu.</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pMenu`</ph></source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>A pointer to a menu.</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the method was successful; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__storerecentdocksiteinfo"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::StoreRecentDockSiteInfo</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pBar`</ph></source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpaneframewnd__storerecenttabrelatedinfo"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPaneFrameWnd::StoreRecentTabRelatedInfo</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pDockingBar`</ph></source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pTabbedBar`</ph></source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Hierarchy Chart<ept id="p1">](../../mfc/hierarchy-chart.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Classes<ept id="p1">](../../mfc/reference/mfc-classes.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CWnd Class<ept id="p1">](../../mfc/reference/cwnd-class.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>