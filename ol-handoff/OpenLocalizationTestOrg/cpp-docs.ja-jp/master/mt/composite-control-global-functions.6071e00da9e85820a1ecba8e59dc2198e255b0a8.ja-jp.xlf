<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">913d8e1f9df5e258d247b05febc11ca7be7e263d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\composite-control-global-functions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6cb7b2c496aa43b224a6154ca586c1fa74a8791d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3ff432fc73e45df8ec1d580b815bffca73225df0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Composite Control Global Functions | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Composite Control Global Functions</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>These functions provide support for creating dialog boxes, and for creating, hosting and licensing ActiveX controls.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The functions listed in the following table cannot be used in applications that execute in the <ph id="ph1">[!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AtlAxDialogBox<ept id="p1">](#atlaxdialogbox)</ept></source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Creates a modal dialog box from a dialog template provided by the user.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The resulting dialog box can contain ActiveX controls.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AtlAxCreateDialog<ept id="p1">](#atlaxcreatedialog)</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Creates a modeless dialog box from a dialog template provided by the user.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The resulting dialog box can contain ActiveX controls.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AtlAxCreateControl<ept id="p1">](#atlaxcreatecontrol)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Creates an ActiveX control, initializes it, and hosts it in the specified window.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AtlAxCreateControlEx<ept id="p1">](#atlaxcreatecontrolex)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Creates an ActiveX control, initializes it, hosts it in the specified window, and retrieves an interface pointer (or pointers) from the control.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AtlAxCreateControlLic<ept id="p1">](#atlaxcreatecontrollic)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Creates a licensed ActiveX control, initializes it, and hosts it in the specified window.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AtlAxCreateControlLicEx<ept id="p1">](#atlaxcreatecontrollicex)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Creates a licensed ActiveX control, initializes it, hosts it in the specified window, and retrieves an interface pointer (or pointers) from the control.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AtlAxAttachControl<ept id="p1">](#atlaxattachcontrol)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Attaches a previously created control to the specified window.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AtlAxGetHost<ept id="p1">](#atlaxgethost)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Used to obtain a direct interface pointer to the container for a specified window (if any), given its handle.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AtlAxGetControl<ept id="p1">](#atlaxgetcontrol)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Used to obtain a direct interface pointer to the control contained inside a specified window (if any), given its handle.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AtlSetChildSite<ept id="p1">](#atlsetchildsite)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Initializes the <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> of the child site.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AtlAxWinInit<ept id="p1">](#atlaxwininit)</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Initializes the hosting code for AxWin objects.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AtlAxWinTerm<ept id="p1">](#atlaxwinterm)</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Uninitializes the hosting code for AxWin objects.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AtlGetObjectSourceInterface<ept id="p1">](#atlgetobjectsourceinterface)</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Returns information about the default source interface of an object.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="atlaxdialogbox"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  AtlAxDialogBox</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Creates a modal dialog box from a dialog template provided by the user.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>[in] Identifies an instance of the module whose executable file contains the dialog box template.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>[in] Identifies the dialog box template.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This parameter is either the pointer to a null-terminated character string that specifies the name of the dialog box template or an integer value that specifies the resource identifier of the dialog box template.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If the parameter specifies a resource identifier, its high-order word must be zero and its low-order word must contain the identifier.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt>MAKEINTRESOURCE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms648029)</ept> macro to create this value.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>[in] Identifies the window that owns the dialog box.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>[in] Points to the dialog box procedure.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For more information about the dialog box procedure, see <bpt id="p1">[</bpt>DialogProc<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms645469)</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>[in] Specifies the value to pass to the dialog box in the <bpt id="p1">**</bpt>lParam<ept id="p1">**</ept> parameter of the <bpt id="p2">**</bpt>WM_INITDIALOG<ept id="p2">**</ept> message.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>One of the standard HRESULT values.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To use <bpt id="p1">**</bpt>AtlAxDialogBox<ept id="p1">**</ept> with a dialog template that contains an ActiveX control, specify a valid <bpt id="p2">**</bpt>CLSID<ept id="p2">**</ept>, <bpt id="p3">**</bpt>APPID<ept id="p3">**</ept> or URL string as the <bpt id="p4">*</bpt>text<ept id="p4">*</ept> field of the <bpt id="p5">**</bpt>CONTROL<ept id="p5">**</ept> section of the dialog resource, along with "AtlAxWin80" as the <bpt id="p6">*</bpt>class name<ept id="p6">*</ept> field under the same section.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The following demonstrates what a valid <bpt id="p1">**</bpt>CONTROL<ept id="p1">**</ept> section might look like:</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For more information on editing resource scripts, see <bpt id="p1">[</bpt>How to: Open a Resource Script File in Text Format<ept id="p1">](../../windows/how-to-open-a-resource-script-file-in-text-format.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For more information on control resource-definition statements, see <bpt id="p1">[</bpt>Common Control Parameters<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa380902)</ept> under <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph><bpt id="p2">*</bpt>: SDK Tools<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For more information on dialog boxes in general, refer to <bpt id="p1">[</bpt>DialogBox<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms645452)</ept> and <bpt id="p2">[</bpt>CreateDialogParam<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms645445)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="atlaxcreatedialog"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  AtlAxCreateDialog</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Creates a modeless dialog box from a dialog template provided by the user.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>[in] Identifies an instance of the module whose executable file contains the dialog box template.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>[in] Identifies the dialog box template.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This parameter is either the pointer to a null-terminated character string that specifies the name of the dialog box template or an integer value that specifies the resource identifier of the dialog box template.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>If the parameter specifies a resource identifier, its high-order word must be zero and its low-order word must contain the identifier.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt>MAKEINTRESOURCE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms648029)</ept> macro to create this value.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>[in] Identifies the window that owns the dialog box.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>[in] Points to the dialog box procedure.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For more information about the dialog box procedure, see <bpt id="p1">[</bpt>DialogProc<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms645469)</ept>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>[in] Specifies the value to pass to the dialog box in the <bpt id="p1">**</bpt>lParam<ept id="p1">**</ept> parameter of the <bpt id="p2">**</bpt>WM_INITDIALOG<ept id="p2">**</ept> message.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>One of the standard HRESULT values.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The resulting dialog box can contain ActiveX controls.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CreateDialog<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms645434)</ept> and <bpt id="p2">[</bpt>CreateDialogParam<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms645445)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="atlaxcreatecontrol"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  AtlAxCreateControl</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Creates an ActiveX control, initializes it, and hosts it in the specified window.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A pointer to a string to be passed to the control.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Must be formatted in one of the following ways:</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>A ProgID such as "MSCAL.Calendar.7"</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>A CLSID such as "{8E27C92B-1264-101C-8A2F-040224009C02}"</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A URL such as "http://www.microsoft.com"</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A reference to an Active document such as "file://<ph id="ph1">\\</ph>\Documents\MyDoc.doc"</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A fragment of HTML such as "MSHTML:<ph id="ph1">\&lt;</ph>HTML&gt;<ph id="ph2">\&lt;</ph>BODY&gt;This is a line of text<ph id="ph3">\&lt;</ph>/BODY&gt;<ph id="ph4">\&lt;</ph>/HTML&gt;"</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>"MSHTML:" must precede the HTML fragment so that it is designated as being an MSHTML stream.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>[in] Handle to the window that the control will be attached to.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>[in] A pointer to a stream that is used to initialize the properties of the control.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>[out] The address of a pointer that will receive the <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> of the container.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>One of the standard HRESULT values.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>This global function gives you the same result as calling <bpt id="p1">[</bpt>AtlAxCreateControlEx<ept id="p1">](#atlaxcreatecontrolex)</ept>( <ph id="ph1">`lpszName`</ph><bpt id="p2">**</bpt>,<ept id="p2">**</ept> <ph id="ph2">`hWnd`</ph><bpt id="p3">**</bpt>,<ept id="p3">**</ept> <ph id="ph3">`pStream`</ph><bpt id="p4">**</bpt>, NULL, NULL, NULL, NULL<ept id="p4">**</ept> );.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>To create a licensed ActiveX control, see <bpt id="p1">[</bpt>AtlAxCreateControlLic<ept id="p1">](#atlaxcreatecontrollic)</ept>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="atlaxcreatecontrolex"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  AtlAxCreateControlEx</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Creates an ActiveX control, initializes it, and hosts it in the specified window.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>An interface pointer and event sink for the new control can also be created.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>A pointer to a string to be passed to the control.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Must be formatted in one of the following ways:</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A ProgID such as "MSCAL.Calendar.7"</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>A CLSID such as "{8E27C92B-1264-101C-8A2F-040224009C02}"</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>A URL such as "http://www.microsoft.com"</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>A reference to an Active document such as "file://<ph id="ph1">\\</ph>\Documents\MyDoc.doc"</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>A fragment of HTML such as "MSHTML:<ph id="ph1">\&lt;</ph>HTML&gt;<ph id="ph2">\&lt;</ph>BODY&gt;This is a line of text<ph id="ph3">\&lt;</ph>/BODY&gt;<ph id="ph4">\&lt;</ph>/HTML&gt;"</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>"MSHTML:" must precede the HTML fragment so that it is designated as being an MSHTML stream.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>[in] Handle to the window that the control will be attached to.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>[in] A pointer to a stream that is used to initialize the properties of the control.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>[out] The address of a pointer that will receive the <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> of the container.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>[out] The address of a pointer that will receive the <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> of the created control.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The interface identifier of an outgoing interface on the contained object.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>punkSink<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>A pointer to the <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> interface of the sink object to be connected to the connection point specified by <ph id="ph1">`iidSink`</ph> on the contained object after the contained object has been successfully created.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>One of the standard HRESULT values.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`AtlAxCreateControlEx`</ph> is similar to <bpt id="p1">[</bpt>AtlAxCreateControl<ept id="p1">](#atlaxcreatecontrol)</ept> but also allows you to receive an interface pointer to the newly created control and set up an event sink to receive events fired by the control.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>To create a licensed ActiveX control, see <bpt id="p1">[</bpt>AtlAxCreateControlLicEx<ept id="p1">](#atlaxcreatecontrollicex)</ept>.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="atlaxcreatecontrollic"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  AtlAxCreateControlLic</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Creates a licensed ActiveX control, initializes it, and hosts it in the specified window.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>A pointer to a string to be passed to the control.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Must be formatted in one of the following ways:</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>A ProgID such as "MSCAL.Calendar.7"</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>A CLSID such as "{8E27C92B-1264-101C-8A2F-040224009C02}"</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>A URL such as "http://www.microsoft.com"</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>A reference to an Active document such as "file://<ph id="ph1">\\</ph>\Documents\MyDoc.doc"</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>A fragment of HTML such as "MSHTML:<ph id="ph1">\&lt;</ph>HTML&gt;<ph id="ph2">\&lt;</ph>BODY&gt;This is a line of text<ph id="ph3">\&lt;</ph>/BODY&gt;<ph id="ph4">\&lt;</ph>/HTML&gt;"</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>"MSHTML:" must precede the HTML fragment so that it is designated as being an MSHTML stream.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Handle to the window that the control will be attached to.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>A pointer to a stream that is used to initialize the properties of the control.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The address of a pointer that will receive the <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> of the container.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The BSTR containing the license for the control.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>One of the standard HRESULT values.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Hosting ActiveX Controls Using ATL AXHost<ept id="p1">](../../atl/hosting-activex-controls-using-atl-axhost.md)</ept> for a sample of how to use <ph id="ph1">`AtlAxCreateControlLic`</ph>.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="atlaxcreatecontrollicex"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  AtlAxCreateControlLicEx</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Creates a licensed ActiveX control, initializes it, and hosts it in the specified window.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>An interface pointer and event sink for the new control can also be created.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>A pointer to a string to be passed to the control.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Must be formatted in one of the following ways:</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>A ProgID such as "MSCAL.Calendar.7"</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>A CLSID such as "{8E27C92B-1264-101C-8A2F-040224009C02}"</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>A URL such as "http://www.microsoft.com"</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>A reference to an Active document such as "file://<ph id="ph1">\\</ph>\Documents\MyDoc.doc"</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>A fragment of HTML such as "MSHTML:<ph id="ph1">\&lt;</ph>HTML&gt;<ph id="ph2">\&lt;</ph>BODY&gt;This is a line of text<ph id="ph3">\&lt;</ph>/BODY&gt;<ph id="ph4">\&lt;</ph>/HTML&gt;"</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>"MSHTML:" must precede the HTML fragment so that it is designated as being an MSHTML stream.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Handle to the window that the control will be attached to.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>A pointer to a stream that is used to initialize the properties of the control.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The address of a pointer that will receive the <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> of the container.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>[out] The address of a pointer that will receive the <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> of the created control.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The interface identifier of an outgoing interface on the contained object.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>punkSink<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>A pointer to the <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> interface of the sink object to be connected to the connection point specified by <ph id="ph1">`iidSink`</ph> on the contained object after the contained object has been successfully created.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The BSTR containing the license for the control.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>One of the standard HRESULT values.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`AtlAxCreateControlLicEx`</ph> is similar to <bpt id="p1">[</bpt>AtlAxCreateControlLic<ept id="p1">](#atlaxcreatecontrollic)</ept> but also allows you to receive an interface pointer to the newly created control and set up an event sink to receive events fired by the control.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Hosting ActiveX Controls Using ATL AXHost<ept id="p1">](../../atl/hosting-activex-controls-using-atl-axhost.md)</ept> for a sample of how to use <ph id="ph1">`AtlAxCreateControlLicEx`</ph>.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="atlaxattachcontrol"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  AtlAxAttachControl</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Attaches a previously created control to the specified window.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>[in] A pointer to the <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> of the control.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>[in] Handle to the window that will host the control.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>[out] A pointer to a pointer to the <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> of the container object.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>One of the standard HRESULT values.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>AtlAxCreateControlEx<ept id="p1">](#atlaxcreatecontrolex)</ept> and <bpt id="p2">[</bpt>AtlAxCreateControl<ept id="p2">](#atlaxcreatecontrol)</ept> to simultaneously create and attach a control.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The control object being attached must be correctly initialized before calling <ph id="ph1">`AtlAxAttachControl`</ph>.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="atlaxgethost"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  AtlAxGetHost</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Obtains a direct interface pointer to the container for a specified window (if any), given its handle.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>[in] A handle to the window that is hosting the control.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>[out] The <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> of the container of the control.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>One of the standard HRESULT values.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="atlaxgetcontrol"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  AtlAxGetControl</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Obtains a direct interface pointer to the control contained inside a specified window given its handle.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>[in] A handle to the window that is hosting the control.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>[out] The <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> of the control being hosted.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>One of the standard HRESULT values.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="atlsetchildsite"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  AtlSetChildSite</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Call this function to set the site of the child object to the <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> of the parent object.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>punkChild<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>[in] A pointer to the <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> interface of the child.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>[in] A pointer to the <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> interface of the parent.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>A standard HRESULT value.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="atlaxwininit"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  AtlAxWinInit</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>This function initializes ATL's control hosting code by registering the <bpt id="p1">**</bpt>"AtlAxWin80"<ept id="p1">**</ept> and <bpt id="p2">**</bpt>"AtlAxWinLic80"<ept id="p2">**</ept> window classes plus a couple of custom window messages.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Nonzero if the initialization of the control hosting code was successful; otherwise <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>This function must be called before using the ATL control hosting API.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Following a call to this function, the <bpt id="p1">**</bpt>"AtlAxWin"<ept id="p1">**</ept> window class can be used in calls to <bpt id="p2">[</bpt>CreateWindow<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms632679)</ept> or <bpt id="p3">[</bpt>CreateWindowEx<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms632680)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="atlaxwinterm"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  AtlAxWinTerm</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>This function uninitializes ATL's control hosting code by unregistering the <bpt id="p1">**</bpt>"AtlAxWin80"<ept id="p1">**</ept> and <bpt id="p2">**</bpt>"AtlAxWinLic80"<ept id="p2">**</ept> window classes.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Always returns <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>This function simply calls <bpt id="p1">[</bpt>UnregisterClass<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms644899)</ept> as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Call this function to clean up after all existing host windows have been destroyed if you called <bpt id="p1">[</bpt>AtlAxWinInit<ept id="p1">](#atlaxwininit)</ept> and you no longer need to create host windows.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>If you don't call this function, the window class will be unregistered automatically when the process terminates.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="atlgetobjectsourceinterface"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  AtlGetObjectSourceInterface</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Call this function to retrieve information about the default source interface of an object.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>[in] A pointer to the object for which information is to be returned.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>[out] A pointer to the LIBID of the type library containing the definition of the source interface.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>[out] A pointer to the interface ID of the object's default source interface.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>pdwMajor<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>[out] A pointer to the major version number of the type library containing the definition of the source interface.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>pdwMinor<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>[out] A pointer to the minor version number of the type library containing the definition of the source interface.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>A standard HRESULT value.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`AtlGetObjectSourceInterface`</ph> can provide you with the interface ID of the default source interface, along with the LIBID and major and minor version numbers of the type library describing that interface.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>For this function to successfully retrieve the requested information, the object represented by <ph id="ph1">`punkObj`</ph> must implement <ph id="ph2">`IDispatch`</ph> (and return type information through <bpt id="p1">**</bpt>IDispatch::GetTypeInfo<ept id="p1">**</ept>) plus it must also implement either <ph id="ph3">`IProvideClassInfo2`</ph> or <ph id="ph4">`IPersist`</ph>.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>The type information for the source interface must be in the same type library as the type information for <ph id="ph1">`IDispatch`</ph>.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The example below shows how you might define an event sink class, <ph id="ph1">`CEasySink`</ph>, that reduces the number of template arguments that you can pass to <ph id="ph2">`IDispEventImpl`</ph> to the bare essentials.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`EasyAdvise`</ph> and <ph id="ph2">`EasyUnadvise`</ph> use <ph id="ph3">`AtlGetObjectSourceInterface`</ph> to initialize the <bpt id="p1">[</bpt>IDispEventImpl<ept id="p1">](../../atl/reference/idispeventimpl-class.md)</ept> members before calling <bpt id="p2">[</bpt>DispEventAdvise<ept id="p2">](idispeventsimpleimpl-class.md#idispeventsimpleimpl__dispeventadvise)</ept> or <bpt id="p3">[</bpt>DispEventUnadvise<ept id="p3">](idispeventsimpleimpl-class.md#idispeventsimpleimpl__dispeventunadvise)</ept>.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_ATL_Windowing#93<ept id="p2">](../../atl/codesnippet/cpp/composite-control-global-functions_1.h)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Functions<ept id="p1">](../../atl/reference/atl-functions.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Composite Control Macros<ept id="p1">](../../atl/reference/composite-control-macros.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>