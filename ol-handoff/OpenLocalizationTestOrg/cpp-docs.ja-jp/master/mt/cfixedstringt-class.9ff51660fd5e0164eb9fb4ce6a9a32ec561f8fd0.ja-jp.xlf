<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c043e1b7be0671536f1fbc318046c2bfbe784a0f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl-mfc-shared\reference\cfixedstringt-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">301412193d2779d74bcadab1ae552fed7618a3bc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">051a93163b49d6eb35e364bbe8f692d26b917012</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CFixedStringT Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CFixedStringT Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class represents a string object with a fixed character buffer.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Used as the base class for the fixed string object and can be any <ph id="ph1">`CStringT`</ph>-based type.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Some examples include <ph id="ph1">`CString`</ph>, <ph id="ph2">`CStringA`</ph>, and <ph id="ph3">`CStringW`</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>t_nChars<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The number of characters stored in the buffer.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CFixedStringT::CFixedStringT<ept id="p1">](#cfixedstringt__cfixedstringt)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The constructor for the string object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Public Operators</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CFixedStringT::operator =<ept id="p1">](#cfixedstringt__operator__eq)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Assigns a new value to a <ph id="ph1">`CFixedStringT`</ph> object.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This class is an example of a custom string class based on <ph id="ph1">`CStringT`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Although quite similar, the two classes differ in implementation.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The major differences between <ph id="ph1">`CFixedStringT`</ph> and <ph id="ph2">`CStringT`</ph> are:</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The initial character buffer is allocated as part of the object and has size <bpt id="p1">*</bpt>t_nChars<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This allows the <bpt id="p1">**</bpt>CFixedString<ept id="p1">**</ept> object to occupy a contiguous memory chunk for performance purposes.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>However, if the contents of a <ph id="ph1">`CFixedStringT`</ph> object grows beyond <bpt id="p1">*</bpt>t_nChars<ept id="p1">*</ept>, the buffer is allocated dynamically.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The character buffer for a <ph id="ph1">`CFixedStringT`</ph> object is always the same length ( <bpt id="p1">*</bpt>t_nChars<ept id="p1">*</ept>).</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>There is no limitation on buffer size for <ph id="ph1">`CStringT`</ph> objects.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The memory manager for <ph id="ph1">`CFixedStringT`</ph> is customized such that sharing of a <bpt id="p1">[</bpt>CStringData<ept id="p1">](../../atl-mfc-shared/reference/cstringdata-class.md)</ept> object between two or more <ph id="ph2">`CFixedStringT`</ph> objectsis not allowed.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CStringT`</ph> objects do not have this limitation.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For more information on the customization of <ph id="ph1">`CFixedStringT`</ph> and memory management for string objects in general, see <bpt id="p1">[</bpt>Memory Management and CStringT<ept id="p1">](../../atl-mfc-shared/memory-management-with-cstringt.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> cstringt.h</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cfixedstringt__cfixedstringt"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CFixedStringT::CFixedStringT</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CFixedStringT`</ph> object.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A null-terminated string to be copied into this <ph id="ph1">`CFixedStringT`</ph> object.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An existing <ph id="ph1">`CFixedStringT`</ph> object to be copied into this <ph id="ph2">`CFixedStringT`</ph> object.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A pointer to the memory manager of the <ph id="ph1">`CFixedStringT`</ph> object.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more information on <ph id="ph1">`IAtlStringMgr`</ph> and memory management for <ph id="ph2">`CFixedStringT`</ph>, see <bpt id="p1">[</bpt>Memory Management and CStringT<ept id="p1">](../../atl-mfc-shared/memory-management-with-cstringt.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Because the constructors copy the input data into new allocated storage, you should be aware that memory exceptions may result.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Note that some of these constructors act as conversion functions.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cfixedstringt__operator__eq"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CFixedStringT::operator =</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Reinitializes an existing <ph id="ph1">`CFixedStringT`</ph> object with new data.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A null-terminated string to be copied into this <ph id="ph1">`CFixedStringT`</ph> object.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>An existing <ph id="ph1">`CFixedStringT`</ph> to be copied into this <ph id="ph2">`CFixedStringT`</ph> object.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>You should be aware that memory exceptions may occur whenever you use the assignment operator because new storage is often allocated to hold the resulting <ph id="ph1">`CFixedStringT`</ph> object.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CStringT Class<ept id="p1">](../../atl-mfc-shared/reference/cstringt-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Hierarchy Chart<ept id="p1">](../../mfc/hierarchy-chart.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>ATL/MFC Shared Classes<ept id="p1">](../../atl-mfc-shared/atl-mfc-shared-classes.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>