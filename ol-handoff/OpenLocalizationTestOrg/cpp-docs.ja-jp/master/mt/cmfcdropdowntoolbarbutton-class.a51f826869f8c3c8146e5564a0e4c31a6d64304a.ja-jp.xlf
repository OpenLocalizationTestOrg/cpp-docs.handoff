<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">949f82e26c46b9d9f7f3bcd13cc70b8313454818</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\cmfcdropdowntoolbarbutton-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f1c35b26a45b15e3da87e3da994a7633956be7ec</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9ed8113a9dfad336d9ba324b06fbacbab2018c83</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CMFCDropDownToolbarButton Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CMFCDropDownToolbarButton Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A type of toolbar button that behaves like a regular button when it is clicked.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>However, it opens a drop-down toolbar ( <bpt id="p1">[</bpt>CMFCDropDownToolBar Class<ept id="p1">](../../mfc/reference/cmfcdropdowntoolbar-class.md)</ept> if the user presses and holds the toolbar button down.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCDropDownToolbarButton::CMFCDropDownToolbarButton<ept id="p1">](#cmfcdropdowntoolbarbutton__cmfcdropdowntoolbarbutton)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CMFCDropDownToolbarButton`</ph> object.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Destructor.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCDropDownToolbarButton::CopyFrom<ept id="p1">](#cmfcdropdowntoolbarbutton__copyfrom)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Copies the properties of another toolbar button to the current button.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::CopyFrom<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__copyfrom)</ept>.)</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Used by the framework to create a dynamic instance of this class type.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCDropDownToolbarButton::DropDownToolbar<ept id="p1">](#cmfcdropdowntoolbarbutton__dropdowntoolbar)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Opens a drop-down toolbar.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCDropDownToolbarButton::ExportToMenuButton<ept id="p1">](#cmfcdropdowntoolbarbutton__exporttomenubutton)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Copies text from the toolbar button to a menu.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::ExportToMenuButton<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__exporttomenubutton)</ept>.)</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCDropDownToolbarButton::GetDropDownToolBar<ept id="p1">](#cmfcdropdowntoolbarbutton__getdropdowntoolbar)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Retrieves the drop-down toolbar that is associated with the button.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Used by the framework to obtain a pointer to the <bpt id="p1">[</bpt>CRuntimeClass<ept id="p1">](../../mfc/reference/cruntimeclass-structure.md)</ept> object that is associated with this class type.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCDropDownToolbarButton::IsDropDown<ept id="p1">](#cmfcdropdowntoolbarbutton__isdropdown)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Determines whether the drop-down toolbar is currently open.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCDropDownToolbarButton::IsExtraSize<ept id="p1">](#cmfcdropdowntoolbarbutton__isextrasize)</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Determines whether the button can be displayed with an extended border.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::IsExtraSize<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__isextrasize)</ept>.)</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCDropDownToolbarButton::OnCalculateSize<ept id="p1">](#cmfcdropdowntoolbarbutton__oncalculatesize)</ept></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Called by the framework to calculate the size of the button for the specified device context and docking state.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::OnCalculateSize<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__oncalculatesize)</ept>.)</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Called by the framework to handle the <bpt id="p1">[</bpt>WM_CANCELMODE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632615)</ept> message.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>(Overrides <ph id="ph1">`CMCToolBarButton::OnCancelMode`</ph>.)</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCDropDownToolbarButton::OnChangeParentWnd<ept id="p1">](#cmfcdropdowntoolbarbutton__onchangeparentwnd)</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Called by the framework when the button is inserted into a new toolbar.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::OnChangeParentWnd<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onchangeparentwnd)</ept>.)</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCDropDownToolbarButton::OnClick<ept id="p1">](#cmfcdropdowntoolbarbutton__onclick)</ept></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Called by the framework when the user clicks the mouse button.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::OnClick<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onclick)</ept>.)</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCDropDownToolbarButton::OnClickUp<ept id="p1">](#cmfcdropdowntoolbarbutton__onclickup)</ept></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Called by the framework when the user releases the mouse button.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::OnClickUp<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onclickup)</ept>.)</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCDropDownToolbarButton::OnContextHelp<ept id="p1">](#cmfcdropdowntoolbarbutton__oncontexthelp)</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Called by the framework when the parent toolbar handles a <ph id="ph1">`WM_HELPHITTEST`</ph> message.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::OnContextHelp<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__oncontexthelp)</ept>.)</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCDropDownToolbarButton::OnCustomizeMenu<ept id="p1">](#cmfcdropdowntoolbarbutton__oncustomizemenu)</ept></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Modifies the provided menu when the application displays a shortcut menu on the parent toolbar.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::OnCustomizeMenu<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__oncustomizemenu)</ept>.)</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCDropDownToolbarButton::OnDraw<ept id="p1">](#cmfcdropdowntoolbarbutton__ondraw)</ept></source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Called by the framework to draw the button by using the specified styles and options.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::OnDraw<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__ondraw)</ept>.)</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCDropDownToolbarButton::OnDrawOnCustomizeList<ept id="p1">](#cmfcdropdowntoolbarbutton__ondrawoncustomizelist)</ept></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Called by the framework to draw the button in the <bpt id="p1">**</bpt>Commands<ept id="p1">**</ept> pane of the <bpt id="p2">**</bpt>Customize<ept id="p2">**</ept> dialog box.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::OnDrawOnCustomizeList<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__ondrawoncustomizelist)</ept>.)</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCDropDownToolbarButton::Serialize<ept id="p1">](#cmfcdropdowntoolbarbutton__serialize)</ept></source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Reads this object from an archive or writes it to an archive.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::Serialize<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__serialize)</ept>.)</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCDropDownToolbarButton::SetDefaultCommand<ept id="p1">](#cmfcdropdowntoolbarbutton__setdefaultcommand)</ept></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Sets the default command that the framework uses when a user clicks the button.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Data Members</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCDropDownToolbarButton::m_uiShowBarDelay<ept id="p1">](#cmfcdropdowntoolbarbutton__m_uishowbardelay)</ept></source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Specifies the length of time that a user must hold the mouse button down before the drop-down toolbar appears.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CMFCDropDownToolBarButton`</ph> differs from an ordinary button in that it has a small arrow in the lower-right corner of the button.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>After the user selects a button from the drop-down toolbar, the framework displays its icon on the top-level toolbar button (the button with the small arrow in the lower-right corner).</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For information about how to implement a drop-down toolbar, see <bpt id="p1">[</bpt>CMFCDropDownToolBar Class<ept id="p1">](../../mfc/reference/cmfcdropdowntoolbar-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CMFCDropDownToolBarButton`</ph> object can be exported to a <bpt id="p1">[</bpt>CMFCToolBarMenuButton Class<ept id="p1">](../../mfc/reference/cmfctoolbarmenubutton-class.md)</ept> object and displayed as a menu button with a pop-up menu.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CObject<ept id="p1">](../../mfc/reference/cobject-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCToolBarButton<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCDropDownToolbarButton<ept id="p1">](../../mfc/reference/cmfcdropdowntoolbarbutton-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxdropdowntoolbar.h</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcdropdowntoolbarbutton__copyfrom"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCDropDownToolbarButton::CopyFrom</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Copies the properties of another toolbar button to the current button.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`src`</ph></source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>A reference to the source button from which to copy.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Call this method to copy another toolbar button to this toolbar button.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`src`</ph> must be of type <ph id="ph2">`CMFCDropDownToolbarButton`</ph>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcdropdowntoolbarbutton__cmfcdropdowntoolbarbutton"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCDropDownToolbarButton::CMFCDropDownToolbarButton</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CMFCDropDownToolbarButton`</ph> object.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`lpszName`</ph></source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The default text of the button.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pToolBar`</ph></source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>A pointer to the <ph id="ph1">`CMFCDropDownToolBar`</ph> object that is displayed when the user presses the button.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The second overload of the constructor copies to the drop-down button the first button from the toolbar that <ph id="ph1">`pToolBar`</ph> specifies.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Typically, a drop-down toolbar button uses the text from the most recently used button in the toolbar that <ph id="ph1">`pToolBar`</ph> specifies.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>It uses the text specified by <ph id="ph1">`lpszName`</ph> when the button is converted to a menu button or is displayed in the <bpt id="p1">**</bpt>Commands<ept id="p1">**</ept> tab of the <bpt id="p2">**</bpt>Customize<ept id="p2">**</ept> dialog box.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>For more information about the <bpt id="p1">**</bpt>Customize<ept id="p1">**</ept> dialog box, see <bpt id="p2">[</bpt>CMFCToolBarsCustomizeDialog Class<ept id="p2">](../../mfc/reference/cmfctoolbarscustomizedialog-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to construct an object of the <ph id="ph1">`CMFCDropDownToolbarButton`</ph> class.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This code snippet is part of the <bpt id="p1">[</bpt>Visual Studio Demo sample<ept id="p1">](../../visual-cpp-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_VisualStudioDemo#31<ept id="p2">](../../mfc/codesnippet/cpp/cmfcdropdowntoolbarbutton-class_1.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcdropdowntoolbarbutton__dropdowntoolbar"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCDropDownToolbarButton::DropDownToolbar</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Opens a drop-down toolbar.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pWnd`</ph></source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The parent window of the drop-down frame, or <ph id="ph1">`NULL`</ph> to use the parent window of the drop-down toolbar button.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Nonzero if the method is successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>CMFCDropDownToolbarButton::OnClick<ept id="p1">](#cmfcdropdowntoolbarbutton__onclick)</ept> method calls this method to open the drop-down toolbar when the user presses and holds the toolbar button down.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>This methods creates the drop-down toolbar by using the <bpt id="p1">[</bpt>CMFCDropDownFrame::Create<ept id="p1">](../../mfc/reference/cmfcdropdownframe-class.md#cmfcdropdownframe__create)</ept> method.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>If the parent toolbar is docked vertically, this method positions the drop-down toolbar either to the left-hand or right-hand side of the parent toolbar, depending on the fit.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Otherwise, this method positions the drop-down toolbar underneath the parent toolbar.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>This method fails if <ph id="ph1">`pWnd`</ph> is <ph id="ph2">`NULL`</ph> and the drop-down toolbar button does not have a parent window.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcdropdowntoolbarbutton__exporttomenubutton"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCDropDownToolbarButton::ExportToMenuButton</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Copies text from the toolbar button to a menu.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`menuButton`</ph></source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>A reference to the target menu button.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Nonzero if the method succeeds; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>This method calls the base class implementation ( <bpt id="p1">[</bpt>CMFCToolBarButton::ExportToMenuButton<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__exporttomenubutton)</ept>) and then appends to the target menu button a pop-up menu that contains each toolbar menu item in this button.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>This method does not append sub-menus to the pop-up menu.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>This method fails if the parent toolbar, <ph id="ph1">`m_pToolBar`</ph>, is <ph id="ph2">`NULL`</ph> or the base class implementation returns <ph id="ph3">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcdropdowntoolbarbutton__getdropdowntoolbar"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCDropDownToolbarButton::GetDropDownToolBar</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Retrieves the drop-down toolbar that is associated with the button.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The drop-down toolbar that is associated with the button.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>This method returns the <ph id="ph1">`m_pToolBar`</ph> data member.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcdropdowntoolbarbutton__isdropdown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCDropDownToolbarButton::IsDropDown</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Determines whether the drop-down toolbar is currently open.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Nonzero if the drop-down toolbar is currently open; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The framework opens the drop-down toolbar by using the <bpt id="p1">[</bpt>CMFCDropDownToolbarButton::DropDownToolbar<ept id="p1">](#cmfcdropdowntoolbarbutton__dropdowntoolbar)</ept> method.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The framework closes the drop-down toolbar when the user presses the left-mouse button in the non-client area of the drop-down toolbar.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcdropdowntoolbarbutton__isextrasize"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCDropDownToolbarButton::IsExtraSize</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Determines whether the button can be displayed with an extended border.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Nonzero if the toolbar button can be displayed with an extended border; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>For more information about extended borders, see <bpt id="p1">[</bpt>CMFCToolBarButton::IsExtraSize<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__isextrasize)</ept>.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcdropdowntoolbarbutton__m_uishowbardelay"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCDropDownToolbarButton::m_uiShowBarDelay</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Specifies the length of time that a user must hold the mouse button down before the drop-down toolbar appears.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The delay time is measured in milliseconds.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The default value is 500.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>You can set another delay by changing the value of this shared data member.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcdropdowntoolbarbutton__oncalculatesize"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCDropDownToolbarButton::OnCalculateSize</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Called by the framework to calculate the size of the button for the specified device context and docking state.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pDC`</ph></source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The device context that displays the button.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`sizeDefault`</ph></source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The default size of the button.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bHorz`</ph></source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The dock state of the parent toolbar.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>This parameter is <ph id="ph1">`TRUE`</ph> if the toolbar is docked horizontally or is floating, or <ph id="ph2">`FALSE`</ph> if the toolbar is docked vertically.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`SIZE`</ph> structure that contains the dimensions of the button, in pixels.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>This method extends the base class implementation ( <bpt id="p1">[</bpt>CMFCToolBarButton::OnCalculateSize<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__oncalculatesize)</ept>) by adding the width of the drop-down arrow to the horizontal dimension of the button size.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcdropdowntoolbarbutton__onchangeparentwnd"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCDropDownToolbarButton::OnChangeParentWnd</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Called by the framework when the button is inserted into a new toolbar.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pWndParent`</ph></source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The new parent window.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>This method overrides the base class implementation ( <bpt id="p1">[</bpt>CMFCToolBarButton::OnChangeParentWnd<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onchangeparentwnd)</ept>) by clearing the text label ( <bpt id="p2">[</bpt>CMFCToolBarButton::m_strText<ept id="p2">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__m_strtext)</ept>) and setting the <bpt id="p3">[</bpt>CMFCToolBarButton::m_bText<ept id="p3">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__m_btext)</ept> and <bpt id="p4">[</bpt>CMFCToolBarButton::m_bUserButton<ept id="p4">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__m_buserbutton)</ept> data members to <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcdropdowntoolbarbutton__onclick"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCDropDownToolbarButton::OnClick</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Called by the framework when the user clicks the mouse button.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pWnd`</ph></source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The parent window of the toolbar button.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bDelay`</ph></source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> if the message should be handled with a delay.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Nonzero if the button processes the click message; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>This method extends the base class implementation, <bpt id="p1">[</bpt>CMFCToolBarButton::OnClick<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onclick)</ept>, by updating the state of the drop-down toolbar.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>When a user clicks the toolbar button, this method creates a timer that waits the length of time specified by the <bpt id="p1">[</bpt>CMFCDropDownToolbarButton::m_uiShowBarDelay<ept id="p1">](#cmfcdropdowntoolbarbutton__m_uishowbardelay)</ept> data member and then opens the drop-down toolbar by using the <bpt id="p2">[</bpt>CMFCDropDownToolbarButton::DropDownToolbar<ept id="p2">](#cmfcdropdowntoolbarbutton__dropdowntoolbar)</ept> method.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>This method closes the drop-down toolbar the second time the user clicks the toolbar button.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcdropdowntoolbarbutton__onclickup"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCDropDownToolbarButton::OnClickUp</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Called by the framework when the user releases the mouse button.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Nonzero if the button processes the click message; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>This method extends the base class implementation, <bpt id="p1">[</bpt>CMFCToolBarButton::OnClickUp<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onclickup)</ept>, by updating the state of the drop-down toolbar.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>This method stops the drop-down toolbar timer if it is active.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>It closes the drop-down toolbar if it is open.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>For more information about the drop-down toolbar and drop-down toolbar timer, see <bpt id="p1">[</bpt>CMFCDropDownToolbarButton::OnClick<ept id="p1">](#cmfcdropdowntoolbarbutton__onclick)</ept>.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcdropdowntoolbarbutton__oncontexthelp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCDropDownToolbarButton::OnContextHelp</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Called by the framework when the parent toolbar handles a <ph id="ph1">`WM_HELPHITTEST`</ph> message.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pWnd`</ph></source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The parent window of the toolbar button.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Nonzero if the button processes the help message; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>This method extends the base class implementation ( <bpt id="p1">[</bpt>CMFCToolBarButton::OnContextHelp<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__oncontexthelp)</ept>) by calling the <bpt id="p2">[</bpt>CMFCDropDownToolbarButton::OnClick<ept id="p2">](#cmfcdropdowntoolbarbutton__onclick)</ept> method with <ph id="ph1">`bDelay`</ph> set to <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>This method returns the value that is returned by <bpt id="p1">[</bpt>CMFCDropDownToolbarButton::OnClick<ept id="p1">](#cmfcdropdowntoolbarbutton__onclick)</ept>.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>For more information about the <ph id="ph1">`WM_HELPHITTEST message, see`</ph> <bpt id="p1">[</bpt>TN028: Context-Sensitive Help Support<ept id="p1">](../../mfc/tn028-context-sensitive-help-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcdropdowntoolbarbutton__oncustomizemenu"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCDropDownToolbarButton::OnCustomizeMenu</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Modifies the provided menu when the application displays a shortcut menu on the parent toolbar.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pMenu`</ph></source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The menu to customize.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>This method returns <ph id="ph1">`TRUE`</ph>.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>This method extends the base class implementation ( <bpt id="p1">[</bpt>CMFCToolBarButton::OnCustomizeMenu<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__oncustomizemenu)</ept>) by disabling the following menu items:</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Copy Button Image<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Button Appearance<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Image<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Text<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Image and Text<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Override this method to modify the shortcut menu that the framework displays in customization mode.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcdropdowntoolbarbutton__ondraw"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCDropDownToolbarButton::OnDraw</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Called by the framework to draw the button by using the specified styles and options.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pDC`</ph></source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The device context that displays the button.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`rect`</ph></source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>The bounding rectangle of the button.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pImages`</ph></source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The collection of toolbar images that is associated with the button.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bHorz`</ph></source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The dock state of the parent toolbar.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>This parameter is <ph id="ph1">`TRUE`</ph> when the button is docked horizontally and <ph id="ph2">`FALSE`</ph> when the button is docked vertically.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bCustomizeMode`</ph></source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Specifies whether the toolbar is in customization mode.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>This parameter is <ph id="ph1">`TRUE`</ph> when the toolbar is in customization mode and <ph id="ph2">`FALSE`</ph> when the toolbar is not in customization mode.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bHighlight`</ph></source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Specifies whether the button is highlighted.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>This parameter is <ph id="ph1">`TRUE`</ph> when the button is highlighted and <ph id="ph2">`FALSE`</ph> when the button is not highlighted.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bDrawBorder`</ph></source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Specifies whether the button should display its border.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>This parameter is <ph id="ph1">`TRUE`</ph> when the button should display its border and <ph id="ph2">`FALSE`</ph> when the button should not display its border.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bGrayDisabledButtons`</ph></source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Specifies whether to shade disabled buttons or use the disabled images collection.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>This parameter is <ph id="ph1">`TRUE`</ph> when disabled buttons should be shaded and <ph id="ph2">`FALSE`</ph> when this method should use the disabled images collection.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Override this method to customize toolbar button drawing.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcdropdowntoolbarbutton__ondrawoncustomizelist"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCDropDownToolbarButton::OnDrawOnCustomizeList</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Called by the framework to draw the button in the <bpt id="p1">**</bpt>Commands<ept id="p1">**</ept> pane of the <bpt id="p2">**</bpt>Customize<ept id="p2">**</ept> dialog box.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pDC`</ph></source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The device context that displays the button.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`rect`</ph></source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The bounding rectangle of the button.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bSelected`</ph></source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Whether the button is selected.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>If this parameter is <ph id="ph1">`TRUE`</ph>, the button is selected.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>If this parameter is <ph id="ph1">`FALSE`</ph>, the button is not selected.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>The width, in pixels, of the button on the specified device context.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>This method is called by the customization dialog box ( <bpt id="p1">**</bpt>Commands<ept id="p1">**</ept> tab) when the button is required to display itself on the owner-draw list box.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>This method extends the base class implementation ( <bpt id="p1">[</bpt>CMFCToolBarButton::OnDrawOnCustomizeList<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__ondrawoncustomizelist)</ept>) by changing the text label of the button to the name of the button (that is,to the value of the <ph id="ph1">`lpszName`</ph> parameter that you passed to the constructor).</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcdropdowntoolbarbutton__serialize"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCDropDownToolbarButton::Serialize</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Reads this object from an archive or writes it to an archive.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`ar`</ph></source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CArchive`</ph> object from which or to which to serialize.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>This method extends the base class implementation ( <bpt id="p1">[</bpt>CMFCToolBarButton::Serialize<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__serialize)</ept>) by serializing the resource ID of the parent toolbar.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>When the archive is loading ( <bpt id="p1">[</bpt>CArchive::IsLoading<ept id="p1">](../../mfc/reference/carchive-class.md#carchive__isloading)</ept> returns a nonzero value), this method sets the <ph id="ph1">`m_pToolBar`</ph> data member to the toolbar that contains the serialized resource ID.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcdropdowntoolbarbutton__setdefaultcommand"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCDropDownToolbarButton::SetDefaultCommand</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Sets the default command that the framework uses when a user clicks the button.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`uiCmd`</ph></source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>The ID of the default command.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Call this method to specify a default command that the framework executes when the user clicks the button.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>An item with the command ID specified by <ph id="ph1">`uiCmd`</ph> must be located in the parent drop-down toolbar.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Hierarchy Chart<ept id="p1">](../../mfc/hierarchy-chart.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Classes<ept id="p1">](../../mfc/reference/mfc-classes.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CMFCDropDownToolBar Class<ept id="p1">](../../mfc/reference/cmfcdropdowntoolbar-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CMFCToolBar Class<ept id="p1">](../../mfc/reference/cmfctoolbar-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CMFCToolBarMenuButton Class<ept id="p1">](../../mfc/reference/cmfctoolbarmenubutton-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Walkthrough: Putting Controls On Toolbars<ept id="p1">](../../mfc/walkthrough-putting-controls-on-toolbars.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>