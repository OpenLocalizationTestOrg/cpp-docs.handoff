<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">579b5e8bccbb6dd1081582fe134f3e98300ff24a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl-mfc-shared\reference\iatlstringmgr-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fb5a1235ea68bc05ae8954b65ae2e44c98b39ef4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c8668ed06e15b09c7029bc379d5deab36797a88e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>IAtlStringMgr Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>IAtlStringMgr Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class represents the interface to a <ph id="ph1">`CStringT`</ph> memory manager.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Methods</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Allocate<ept id="p1">](#iatlstringmgr__allocate)</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Call this method to allocate a new string data structure.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Clone<ept id="p1">](#iatlstringmgr__clone)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Call this method to return a pointer to a new string manager for use with another instance of <ph id="ph1">`CSimpleStringT`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Free<ept id="p1">](#iatlstringmgr__free)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Call this method to free a string data structure.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>GetNilString<ept id="p1">](#iatlstringmgr__getnilstring)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the <ph id="ph1">`CStringData`</ph> object used by empty string objects.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Reallocate<ept id="p1">](#iatlstringmgr__reallocate)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Call this method to reallocate a string data structure.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This interface manages the memory used by the MFC-independent string classes; such as <bpt id="p1">[</bpt>CSimpleStringT<ept id="p1">](../../atl-mfc-shared/reference/csimplestringt-class.md)</ept>, <bpt id="p2">[</bpt>CStringT<ept id="p2">](../../atl-mfc-shared/reference/cstringt-class.md)</ept>, and <bpt id="p3">[</bpt>CFixedStringT<ept id="p3">](../../atl-mfc-shared/reference/cfixedstringt-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can also use this class to implement a custom memory manager for your custom string class.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Memory Management and CStringT<ept id="p1">](../../atl-mfc-shared/memory-management-with-cstringt.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> atlsimpstr.h</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iatlstringmgr__allocate"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAtlStringMgr::Allocate</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Allocates a new string data structure.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The number of characters in the new memory block.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The size (in bytes) of the character type used by the string manager.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the newly allocated memory block.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Do not signal a failed allocation by throwing an exception.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Instead, a failed allocation should be signaled by returning <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Call <bpt id="p1">[</bpt>IAtlStringMgr::Free<ept id="p1">](#iatlstringmgr__free)</ept> or <bpt id="p2">[</bpt>IAtlStringMgr::ReAllocate<ept id="p2">](#iatlstringmgr__reallocate)</ept> to free the memory allocated by this method.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For usage examples, see <bpt id="p1">[</bpt>Memory Management and CStringT<ept id="p1">](../../atl-mfc-shared/memory-management-with-cstringt.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iatlstringmgr__clone"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAtlStringMgr::Clone</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Returns a pointer to a new string manager for use with another instance of <ph id="ph1">`CSimpleStringT`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Returns a copy of the <ph id="ph1">`IAtlStringMgr`</ph> object.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Commonly called by the framework when a string manager is needed for a new string.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>In most cases, the <bpt id="p1">**</bpt>this<ept id="p1">**</ept> pointer is returned.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>However, if the memory manager does not support being used by multiple instances of <ph id="ph1">`CSimpleStringT`</ph>, a pointer to a sharable string manager should be returned.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For usage examples, see <bpt id="p1">[</bpt>Memory Management and CStringT<ept id="p1">](../../atl-mfc-shared/memory-management-with-cstringt.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iatlstringmgr__free"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAtlStringMgr::Free</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Frees a string data structure.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A pointer to the memory block to be freed.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Frees the specified memory block previously allocated by <bpt id="p1">[</bpt>Allocate<ept id="p1">](#iatlstringmgr__allocate)</ept> or <bpt id="p2">[</bpt>Reallocate<ept id="p2">](../../atl/reference/iatlmemmgr-class.md#iatlmemmgr__reallocate)</ept>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For usage examples, see <bpt id="p1">[</bpt>Memory Management and CStringT<ept id="p1">](../../atl-mfc-shared/memory-management-with-cstringt.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iatlstringmgr__getnilstring"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAtlStringMgr::GetNilString</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Returns a pointer to a string data structure for an empty string.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A pointer to the <ph id="ph1">`CStringData`</ph> object used to represent an empty string.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Call this function to return a representation of an empty string.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>When implementing a custom string manager, this function must never fail.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You can ensure this by embedding an instance of <bpt id="p1">**</bpt>CNilStringData<ept id="p1">**</ept> in the string manager class, and return a pointer to that instance.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For usage examples, see <bpt id="p1">[</bpt>Memory Management and CStringT<ept id="p1">](../../atl-mfc-shared/memory-management-with-cstringt.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iatlstringmgr__reallocate"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAtlStringMgr::Reallocate</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Reallocates a string data structure.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Pointer to the memory previously allocated by this memory manager.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The number of characters in the new memory block.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The size (in bytes) of the character type used by the string manager.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the start of the newly allocated memory block.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Call this function to resize the existing memory block specified by <ph id="ph1">`pData`</ph>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Call <bpt id="p1">[</bpt>IAtlStringMgr::Free<ept id="p1">](#iatlstringmgr__free)</ept> to free the memory allocated by this method.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For usage examples, see <bpt id="p1">[</bpt>Memory Management and CStringT<ept id="p1">](../../atl-mfc-shared/memory-management-with-cstringt.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Hierarchy Chart<ept id="p1">](../../mfc/hierarchy-chart.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>ATL/MFC Shared Classes<ept id="p1">](../../atl-mfc-shared/atl-mfc-shared-classes.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>