<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d8d7df1ecb7a35752aba58ea348355b73f1fd342</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\cftpfilefind-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d967cf370dc2eb616db798039c4779c82a0028c8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">179f4331669bc8b282530fba9e790a382edbcc45</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CFtpFileFind Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CFtpFileFind Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Aids in Internet file searches of FTP servers.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CFtpFileFind::CFtpFileFind<ept id="p1">](#cftpfilefind__cftpfilefind)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CFtpFileFind`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CFtpFileFind::FindFile<ept id="p1">](#cftpfilefind__findfile)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Finds a file on a FTP server.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CFtpFileFind::FindNextFile<ept id="p1">](#cftpfilefind__findnextfile)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Continues a file search from a previous call to <bpt id="p1">[</bpt>FindFile<ept id="p1">](#cftpfilefind__findfile)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CFtpFileFind::GetFileURL<ept id="p1">](#cftpfilefind__getfileurl)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets the URL, including path, of the found file.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CFtpFileFind`</ph> includes member functions that begin a search, locate a file, and return the URL or other descriptive information about the file.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Other MFC classes designed for Internet and local file searched include <bpt id="p1">[</bpt>CGopherFileFind<ept id="p1">](../../mfc/reference/cgopherfilefind-class.md)</ept> and <bpt id="p2">[</bpt>CFileFind<ept id="p2">](../../mfc/reference/cfilefind-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Together with <ph id="ph1">`CFtpFileFind`</ph>, these classes provide a seamless mechanism for the client to find specific files, regardless of the server protocol or file type (either a local machine or a remote server).</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Note that there is no MFC class for searching on HTTP servers because HTTP does not support the direct file manipulation required for searches.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For more information about how to use <ph id="ph1">`CFtpFileFind`</ph> and the other WinInet classes, see the article <bpt id="p1">[</bpt>Internet Programming with WinInet<ept id="p1">](../../mfc/win32-internet-extensions-wininet.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following code demonstrates how to enumerate all files in the current directory of the FTP server.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFCWinInet#8<ept id="p2">](../../mfc/codesnippet/cpp/cftpfilefind-class_1.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CObject<ept id="p1">](../../mfc/reference/cobject-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CFileFind<ept id="p1">](../../mfc/reference/cfilefind-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxinet.h</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cftpfilefind__cftpfilefind"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CFtpFileFind::CFtpFileFind</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This member function is called to construct a <ph id="ph1">`CFtpFileFind`</ph> object.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A pointer to a <ph id="ph1">`CFtpConnection`</ph> object.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You can obtain an FTP connection by calling <bpt id="p1">[</bpt>CInternetSession::GetFtpConnection<ept id="p1">](../../mfc/reference/cinternetsession-class.md#cinternetsession__getftpconnection)</ept>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The context identifier for the <ph id="ph1">`CFtpFileFind`</ph> object.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">**</bpt>Remarks<ept id="p1">**</ept> for more information about this parameter.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The default value for <ph id="ph1">`dwContext`</ph> is sent by MFC to the <ph id="ph2">`CFtpFileFind`</ph> object from the <bpt id="p1">[</bpt>CInternetSession<ept id="p1">](../../mfc/reference/cinternetsession-class.md)</ept> object that created the <ph id="ph3">`CFtpFileFind`</ph> object.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can override the default to set the context identifier to a value of your choosing.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The context identifier is returned to <bpt id="p1">[</bpt>CInternetSession::OnStatusCallback<ept id="p1">](../../mfc/reference/cinternetsession-class.md#cinternetsession__onstatuscallback)</ept> to provide status on the object with which it is identified.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>See the article <bpt id="p1">[</bpt>Internet First Steps: WinInet<ept id="p1">](../../mfc/wininet-basics.md)</ept> for more information about the context identifier.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>See the example in the <bpt id="p1">[</bpt>CFtpFileFind<ept id="p1">](../../mfc/reference/cftpfilefind-class.md)</ept> class overview.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cftpfilefind__findfile"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CFtpFileFind::FindFile</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Call this member function to find an FTP file.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A pointer to a string containing the name of the file to find.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, the call will perform a wildcard search (*).</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The flags describing how to handle this session.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>These flags can be combined with the bitwise OR operator (&amp;#124;) and are as follows:</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>INTERNET_FLAG_RELOAD   Get the data from the wire even if it is locally cached.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This is the default flag.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>INTERNET_FLAG_DONT_CACHE   Do not cache the data, either locally or in any gateways.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>INTERNET_FLAG_RAW_DATA   Override the default to return the raw data ( <bpt id="p1">[</bpt>WIN32_FIND_DATA<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa365740)</ept> structures for FTP).</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>INTERNET_FLAG_SECURE   Secures transactions on the wire with Secure Sockets Layer or PCT.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This flag is applicable to HTTP requests only.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>INTERNET_FLAG_EXISTING_CONNECT   If possible, reuse the existing connections to the server for new <bpt id="p1">**</bpt>FindFile<ept id="p1">**</ept> requests instead of creating a new session for each request.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>To get extended error information, call the Win32 function <bpt id="p1">[</bpt>GetLastError<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms679360)</ept>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>After calling <bpt id="p1">**</bpt>FindFile<ept id="p1">**</ept> to retrieve the first FTP file, you can call <bpt id="p2">[</bpt>FindNextFile<ept id="p2">](#cftpfilefind__findnextfile)</ept> to retrieve subsequent FTP files.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>See the example in the <bpt id="p1">[</bpt>CFtpFileFind<ept id="p1">](../../mfc/reference/cftpfilefind-class.md)</ept> class overview.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cftpfilefind__findnextfile"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CFtpFileFind::FindNextFile</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Call this member function to continue a file search begun with a call to the <bpt id="p1">[</bpt>FindFile<ept id="p1">](#cftpfilefind__findfile)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Nonzero if there are more files; zero if the file found is the last one in the directory or if an error occurred.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>To get extended error information, call the Win32 function <bpt id="p1">[</bpt>GetLastError<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms679360)</ept>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If the file found is the last file in the directory, or if no matching files can be found, the <ph id="ph1">`GetLastError`</ph> function returns ERROR_NO_MORE_FILES.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>You must call this function at least once before calling any attribute function (see <bpt id="p1">[</bpt>CFileFind::FindNextFile<ept id="p1">](../../mfc/reference/cfilefind-class.md#cfilefind__findnextfile)</ept>).</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FindNextFile`</ph> wraps the Win32 function <bpt id="p1">[</bpt>FindNextFile<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa364428)</ept>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>See the example in the <bpt id="p1">[</bpt>CFtpFileFind<ept id="p1">](../../mfc/reference/cftpfilefind-class.md)</ept> class overview.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cftpfilefind__getfileurl"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CFtpFileFind::GetFileURL</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Call this member function to get the URL of the specified file.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The file and path of the Universal Resource Locator (URL).</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`GetFileURL`</ph> is similar to the member function <bpt id="p1">[</bpt>CFileFind::GetFilePath<ept id="p1">](../../mfc/reference/cfilefind-class.md#cfilefind__getfilepath)</ept>, except that it returns the URL in the form <ph id="ph2">`ftp://moose/dir/file.txt`</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CFileFind Class<ept id="p1">](../../mfc/reference/cfilefind-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Hierarchy Chart<ept id="p1">](../../mfc/hierarchy-chart.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CGopherFileFind Class<ept id="p1">](../../mfc/reference/cgopherfilefind-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CInternetFile Class<ept id="p1">](../../mfc/reference/cinternetfile-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CGopherFile Class<ept id="p1">](../../mfc/reference/cgopherfile-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CHttpFile Class<ept id="p1">](../../mfc/reference/chttpfile-class.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>