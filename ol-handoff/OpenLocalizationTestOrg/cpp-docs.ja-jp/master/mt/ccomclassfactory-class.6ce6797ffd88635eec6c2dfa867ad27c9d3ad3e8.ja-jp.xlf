<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a9c4fe2e6a10df02ea67347a494808a0a0e8ce06</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\ccomclassfactory-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cfd00035e6f4a05f63e5d5ee3a9e55bfe7bcbbdc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6ddd039e14237edd160a5cf4b1610f3ea4067a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CComClassFactory Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CComClassFactory Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class implements the <bpt id="p1">[</bpt>IClassFactory<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms694364)</ept> interface.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComClassFactory::CreateInstance<ept id="p1">](#ccomclassfactory__createinstance)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Creates an object of the specified CLSID.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComClassFactory::LockServer<ept id="p1">](#ccomclassfactory__lockserver)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Locks the class factory in memory.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CComClassFactory`</ph> implements the <bpt id="p1">[</bpt>IClassFactory<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms694364)</ept> interface, which contains methods for creating an object of a particular CLSID, as well as locking the class factory in memory to allow new objects to be created more quickly.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>IClassFactory<ept id="p1">**</ept> must be implemented for every class that you register in the system registry and to which you assign a CLSID.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>ATL objects normally acquire a class factory by deriving from <bpt id="p1">[</bpt>CComCoClass<ept id="p1">](../../atl/reference/ccomcoclass-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This class includes the macro <bpt id="p1">[</bpt>DECLARE_CLASSFACTORY<ept id="p1">](http://msdn.microsoft.com/library/51a6b925-07c0-4d3a-9174-0b8c808975e4)</ept>, which declares <ph id="ph1">`CComClassFactory`</ph> as the default class factory.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To override this default, specify one of the <ph id="ph1">`DECLARE_CLASSFACTORY`</ph><bpt id="p1">*</bpt>XXX<ept id="p1">*</ept> macros in your class definition.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, the <bpt id="p1">[</bpt>DECLARE_CLASSFACTORY_EX<ept id="p1">](http://msdn.microsoft.com/library/4181ef00-0f30-4e19-b0ee-e7648062e926)</ept> macro uses the specified class for the class factory:</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_ATL_COM#8<ept id="p2">](../../atl/codesnippet/cpp/ccomclassfactory-class_1.h)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The above class definition specifies that <bpt id="p1">**</bpt>CMyClassFactory<ept id="p1">**</ept> will be used as the object's default class factory.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CMyClassFactory<ept id="p1">**</ept> must derive from <ph id="ph1">`CComClassFactory`</ph> and override <ph id="ph2">`CreateInstance`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>ATL provides three other macros that declare a class factory:</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>DECLARE_CLASSFACTORY2<ept id="p1">](http://msdn.microsoft.com/library/38a6c969-7297-4bb1-9ba6-1fe2d355b285)</ept> Uses <bpt id="p2">[</bpt>CComClassFactory2<ept id="p2">](../../atl/reference/ccomclassfactory2-class.md)</ept>, which controls creation through a license.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>DECLARE_CLASSFACTORY_AUTO_THREAD<ept id="p1">](http://msdn.microsoft.com/library/19d7105e-03e8-4412-9f5e-5384c8a5e18f)</ept> Uses <bpt id="p2">[</bpt>CComClassFactoryAutoThread<ept id="p2">](../../atl/reference/ccomclassfactoryautothread-class.md)</ept>, which creates objects in multiple apartments.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>DECLARE_CLASSFACTORY_SINGLETON<ept id="p1">](http://msdn.microsoft.com/library/0e4a3964-c03d-463e-884c-fe3b416db478)</ept> Uses <bpt id="p2">[</bpt>CComClassFactorySingleton<ept id="p2">](../../atl/reference/ccomclassfactorysingleton-class.md)</ept>, which constructs a single <bpt id="p3">[</bpt>CComObjectGlobal<ept id="p3">](../../atl/reference/ccomobjectglobal-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> atlcom.h</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccomclassfactory__createinstance"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CComClassFactory::CreateInstance</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Creates an object of the specified CLSID and retrieves an interface pointer to this object.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>[in] If the object is being created as part of an aggregate, then <ph id="ph1">`pUnkOuter`</ph> must be the outer unknown.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Otherwise, <ph id="ph1">`pUnkOuter`</ph> must be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>[in] The IID of the requested interface.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`pUnkOuter`</ph> is non- <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, <ph id="ph2">`riid`</ph> must be <bpt id="p2">**</bpt>IID_IUnknown<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>[out] A pointer to the interface pointer identified by <ph id="ph1">`riid`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If the object does not support this interface, <ph id="ph1">`ppvObj`</ph> is set to <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccomclassfactory__lockserver"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CComClassFactory::LockServer</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Increments and decrements the module lock count by calling <bpt id="p1">**</bpt>_Module::Lock<ept id="p1">**</ept> and <bpt id="p2">**</bpt>_Module::Unlock<ept id="p2">**</ept>, respectively.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>[in] If <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>, the lock count is incremented; otherwise, the lock count is decremented.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>_Module<ept id="p1">**</ept> refers to the global instance of <bpt id="p2">[</bpt>CComModule<ept id="p2">](../../atl/reference/ccommodule-class.md)</ept> or a class derived from it.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Calling <ph id="ph1">`LockServer`</ph> allows a client to hold onto a class factory so that multiple objects can be created quickly.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComObjectRootEx Class<ept id="p1">](../../atl/reference/ccomobjectrootex-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CComGlobalsThreadModel<ept id="p1">](atl-typedefs.md#ccomglobalsthreadmodel)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Class Overview<ept id="p1">](../../atl/atl-class-overview.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>