<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ee3e8d2546d6058955ff62844d8c1854662d7c67</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\caxdialogimpl-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">819d425e346abb0d87bc58fe9954636666969a77</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">30649ac1e9ee4623f42d6b53f62c72e7f124afd5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CAxDialogImpl Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CAxDialogImpl Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class implements a dialog box (modal or modeless) that hosts ActiveX controls.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This class and its members cannot be used in applications that execute in the Windows Runtime.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Your class, derived from <ph id="ph1">`CAxDialogImpl`</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>TBase<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The base window class for <bpt id="p1">**</bpt>CDialogImplBaseT<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAxDialogImpl::AdviseSinkMap<ept id="p1">](#caxdialogimpl__advisesinkmap)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Call this method to advise or unadvise all entries in the object's sink map event map.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAxDialogImpl::Create<ept id="p1">](#caxdialogimpl__create)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Call this method to create a modeless dialog box.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAxDialogImpl::DestroyWindow<ept id="p1">](#caxdialogimpl__destroywindow)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Call this method to destroy a modeless dialog box.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAxDialogImpl::DoModal<ept id="p1">](#caxdialogimpl__domodal)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Call this method to create a modal dialog box.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAxDialogImpl::EndDialog<ept id="p1">](#caxdialogimpl__enddialog)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Call this method to destroy a modal dialog box.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAxDialogImpl::GetDialogProc<ept id="p1">](#caxdialogimpl__getdialogproc)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Call this method to get a pointer to the <ph id="ph1">`DialogProc`</ph> callback function.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAxDialogImpl::GetIDD<ept id="p1">](#caxdialogimpl__getidd)</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Call this method to get the dialog template resource ID</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAxDialogImpl::IsDialogMessage<ept id="p1">](#caxdialogimpl__isdialogmessage)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Call this method to determine whether a message is intended for this dialog box and, if it is, process the message.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Protected Data Members</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAxDialogImpl::m_bModal<ept id="p1">](#caxdialogimpl__m_bmodal)</ept></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A variable that exists only in debug builds and is set to true if the dialog box is modal.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CAxDialogImpl`</ph> allows you to create a modal or modeless dialog box.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CAxDialogImpl`</ph> provides the dialog box procedure, which uses the default message map to direct messages to the appropriate handlers.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CAxDialogImpl`</ph> derives from <ph id="ph2">`CDialogImplBaseT`</ph>, which in turn derives from <bpt id="p1">*</bpt>TBase<ept id="p1">*</ept> (by default, <ph id="ph3">`CWindow`</ph>) and <ph id="ph4">`CMessageMap`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Your class must define an IDD member that specifies the dialog template resource ID.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For example, adding an ATL Dialog object using the <bpt id="p1">**</bpt>Add Class<ept id="p1">**</ept> dialog box automatically adds the following line to your class:</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_ATL_Windowing#41<ept id="p2">](../../atl/codesnippet/cpp/caxdialogimpl-class_1.h)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>where <ph id="ph1">`MyDialog`</ph> is the <bpt id="p1">**</bpt>Short name<ept id="p1">**</ept> entered in the ATL Dialog Wizard.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Implementing a Dialog Box<ept id="p1">](../../atl/implementing-a-dialog-box.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Note that an ActiveX control on a modal dialog box created with <ph id="ph1">`CAxDialogImpl`</ph> will not support accelerator keys.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To support accelerator keys on a dialog box created with <ph id="ph1">`CAxDialogImpl`</ph>, create a modeless dialog box and, using your own message loop, use <bpt id="p1">[</bpt>CAxDialogImpl::IsDialogMessage<ept id="p1">](#caxdialogimpl__isdialogmessage)</ept> after getting a message from the queue to handle an accelerator key.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more information on <ph id="ph1">`CAxDialogImpl`</ph>, see <bpt id="p1">[</bpt>ATL Control Containment FAQ<ept id="p1">](../../atl/atl-control-containment-faq.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMessageMap<ept id="p1">](../../atl/reference/cmessagemap-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> atlwin.h</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="caxdialogimpl__advisesinkmap"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CAxDialogImpl::AdviseSinkMap</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Call this method to advise or unadvise all entries in the object's sink map event map.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Set to true if all sink entries are to be advised; false if all sink entries are to be unadvised.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Returns S_OK on success, or an error HRESULT on failure.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="caxdialogimpl__create"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CAxDialogImpl::Create</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Call this method to create a modeless dialog box.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>[in] The handle to the owner window.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>[in] Specifies the value to pass to the dialog box in the <ph id="ph1">`lParam`</ph> parameter of the <bpt id="p1">**</bpt>WM_INITDIALOG<ept id="p1">**</ept> message.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>RECT&amp;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This parameter is not used.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This parameter is passed in by <ph id="ph1">`CComControl`</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The handle to the newly created dialog box.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This dialog box is automatically attached to the <ph id="ph1">`CAxDialogImpl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>To create a modal dialog box, call <bpt id="p1">[</bpt>DoModal<ept id="p1">](#caxdialogimpl__domodal)</ept>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The second override is provided only so dialog boxes can be used with <bpt id="p1">[</bpt>CComControl<ept id="p1">](../../atl/reference/ccomcontrol-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="caxdialogimpl__destroywindow"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CAxDialogImpl::DestroyWindow</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Call this method to destroy a modeless dialog box.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>TRUE if the window is successfully destroyed; otherwise FALSE.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Do not call <ph id="ph1">`DestroyWindow`</ph> to destroy a modal dialog box.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Call <bpt id="p1">[</bpt>EndDialog<ept id="p1">](#caxdialogimpl__enddialog)</ept> instead.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="caxdialogimpl__domodal"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CAxDialogImpl::DoModal</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Call this method to create a modal dialog box.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>[in] The handle to the owner window.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The default value is the return value of the <bpt id="p1">[</bpt>GetActiveWindow<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646292)</ept> Win32 function.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>[in] Specifies the value to pass to the dialog box in the <ph id="ph1">`lParam`</ph> parameter of the <bpt id="p1">**</bpt>WM_INITDIALOG<ept id="p1">**</ept> message.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>If successful, the value of the <ph id="ph1">`nRetCode`</ph> parameter specified in the call to <bpt id="p1">[</bpt>EndDialog<ept id="p1">](#caxdialogimpl__enddialog)</ept>; otherwise, -1.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>This dialog box is automatically attached to the <ph id="ph1">`CAxDialogImpl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>To create a modeless dialog box, call <bpt id="p1">[</bpt>Create<ept id="p1">](#caxdialogimpl__create)</ept>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="caxdialogimpl__enddialog"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CAxDialogImpl::EndDialog</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Call this method to destroy a modal dialog box.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>[in] The value to be returned by <bpt id="p1">[</bpt>DoModal<ept id="p1">](#caxdialogimpl__domodal)</ept>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>TRUE if the dialog box is destroyed; otherwise, FALSE.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`EndDialog`</ph> must be called through the dialog box procedure.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>After the dialog box is destroyed, Windows uses the value of <ph id="ph1">`nRetCode`</ph> as the return value for <ph id="ph2">`DoModal`</ph>, which created the dialog box.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Do not call <ph id="ph1">`EndDialog`</ph> to destroy a modeless dialog box.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Call <bpt id="p1">[</bpt>DestroyWindow<ept id="p1">](#caxdialogimpl__destroywindow)</ept> instead.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="caxdialogimpl__getdialogproc"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CAxDialogImpl::GetDialogProc</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Call this method to get a pointer to the <ph id="ph1">`DialogProc`</ph> callback function.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the <ph id="ph1">`DialogProc`</ph> callback function.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DialogProc`</ph> function is an application-defined callback function.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="caxdialogimpl__getidd"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CAxDialogImpl::GetIDD</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Call this method to get the dialog template resource ID.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Returns the dialog template resource ID.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="caxdialogimpl__isdialogmessage"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CAxDialogImpl::IsDialogMessage</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Call this method to determine whether a message is intended for this dialog box and, if it is, process the message.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>MSG<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms644958)</ept> structure that contains the message to be checked.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Returns TRUE if the message has been processed, FALSE otherwise.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This method is intended to be called from within a message loop.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="caxdialogimpl__m_bmodal"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CAxDialogImpl::m_bModal</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A variable that exists only in debug builds and is set to true if the dialog box is modal.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CDialogImpl Class<ept id="p1">](../../atl/reference/cdialogimpl-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Class Overview<ept id="p1">](../../atl/atl-class-overview.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>