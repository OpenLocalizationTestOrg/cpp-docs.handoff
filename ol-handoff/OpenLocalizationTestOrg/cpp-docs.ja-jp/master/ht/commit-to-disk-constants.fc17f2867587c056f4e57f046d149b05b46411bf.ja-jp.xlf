<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6c4d6f3335b576cb5cf6cf234390c919da2c3354</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\commit-to-disk-constants.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">74669d8b42fccb008bc74d04c0f3749ce720c9ae</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">55cb36b16155afbe807720deb757b84692d16aee</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Commit-To-Disk Constants | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Commit-To-Disk Constants</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Microsoft Specific</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>These Microsoft-specific constants specify whether the buffer associated with the open file is flushed to operating system buffers or to disk.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The mode is included in the string specifying the type of read/write access (<bpt id="p1">**</bpt>"r"<ept id="p1">**</ept>, <bpt id="p2">**</bpt>"w"<ept id="p2">**</ept>, <bpt id="p3">**</bpt>"a"<ept id="p3">**</ept>, <bpt id="p4">**</bpt>"r+"<ept id="p4">**</ept>, <bpt id="p5">**</bpt>"w+"<ept id="p5">**</ept>, <bpt id="p6">**</bpt>"a+"<ept id="p6">**</ept>).</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The commit-to-disk modes are as follows:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>c</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Writes the unwritten contents of the specified buffer to disk.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This commit-to-disk functionality only occurs at explicit calls to either the <bpt id="p1">[</bpt>fflush<ept id="p1">](../c-runtime-library/reference/fflush.md)</ept> or the <bpt id="p2">[</bpt>_flushall<ept id="p2">](../c-runtime-library/reference/flushall.md)</ept> function.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This mode is useful when dealing with sensitive data.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For example, if your program terminates after a call to <ph id="ph1">`fflush`</ph> or <ph id="ph2">`_flushall`</ph>, you can be sure that your data reached the operating system's buffers.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>However, unless a file is opened with the <bpt id="p1">**</bpt>c<ept id="p1">**</ept> option, the data might never make it to disk if the operating system also terminates.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>n</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Writes the unwritten contents of the specified buffer to the operating system's buffers.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The operating system can cache data and then determine an optimal time to write to disk.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Under many conditions, this behavior makes for efficient program behavior.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>However, if the retention of data is critical (such as bank transactions or airline ticket information) consider using the <bpt id="p1">**</bpt>c<ept id="p1">**</ept> option.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>n<ept id="p1">**</ept> mode is the default.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>c<ept id="p1">**</ept> and <bpt id="p2">**</bpt>n<ept id="p2">**</ept> options are not part of the ANSI standard for <ph id="ph1">`fopen`</ph>, but are Microsoft extensions and should not be used where ANSI portability is desired.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Using the Commit-to-Disk Feature with Existing Code</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>By default, calls to the <bpt id="p1">[</bpt>fflush<ept id="p1">](../c-runtime-library/reference/fflush.md)</ept> or <bpt id="p2">[</bpt>_flushall<ept id="p2">](../c-runtime-library/reference/flushall.md)</ept> library functions write data to buffers maintained by the operating system.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The operating system determines the optimal time to actually write the data to disk.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The commit-to-disk feature of the run-time library lets you ensure that critical data is written directly to disk rather than to the operating system's buffers.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can give this capability to an existing program without rewriting it by linking its object files with COMMODE.OBJ.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In the resulting executable file, calls to <ph id="ph1">`fflush`</ph> write the contents of the buffer directly to disk, and calls to <ph id="ph2">`_flushall`</ph> write the contents of all buffers to disk.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>These two functions are the only ones affected by COMMODE.OBJ.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>END Microsoft Specific</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Stream I/O</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>_fdopen, _wfdopen</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>fopen, _wfopen</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Global Constants</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>