<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9931d16f1ff3ea53110eacc0883693af89c3e59f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\understanding-window-traits.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8697cb1e0ed117de235e0bbf2bb1d7b2670c2043</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c610ec5f253b7695a83b25ff660695c593aaadf5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Understanding Window Traits | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Understanding Window Traits</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Window traits classes provide a simple method for standardizing the styles used for the creation of an ATL window object.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Window traits are accepted as template parameters by <bpt id="p1">[</bpt>CWindowImpl<ept id="p1">](../atl/reference/cwindowimpl-class.md)</ept> and other ATL window classes as a way of providing default window styles at the class level.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If the creator of a window instance doesn't provide styles explicitly in the call to <bpt id="p1">[</bpt>Create<ept id="p1">](../atl/reference/cwindowimpl-class.md#cwindowimpl__create)</ept>, you can use a traits class to ensure that the window is still created with the correct styles.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can even ensure that certain styles are set for all instances of that window class while permitting other styles to be set on a per-instance basis.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>ATL Window Traits Templates</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>ATL provides two window traits templates that allow you to set default styles at compile time using their template parameters.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Class</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>CWinTraits</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Use this template when you want to provide default window styles that will be used only when no other styles are specified in the call to <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The styles provided at run time take precedence over the styles set at compile time.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>CWinTraitsOR</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Use this class when you want to specify styles that must always be set for the window class.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The styles provided at run time are combined with the styles set at compile time using the bitwise OR operator.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In addition to these templates, ATL provides a number of predefined specializations of the <ph id="ph1">`CWinTraits`</ph> template for commonly used combinations of window styles.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>CWinTraits<ept id="p1">](../atl/reference/cwintraits-class.md)</ept> reference documentation for full details.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Custom Window Traits</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In the unlikely situation that specializing one of the templates provided by ATL isn't sufficient and you need to create your own traits class, you just need to create a class that implements two static functions: <ph id="ph1">`GetWndStyle`</ph> and <bpt id="p1">**</bpt>GetWndStyleEx<ept id="p1">**</ept>:</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#68</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Each of these functions will be passed some style value at run time which it can use to produce a new style value.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If your window traits class is being used as the template argument to an ATL window class, the style values passed to these static functions will be whatever was passed as the style arguments to <bpt id="p1">[</bpt>Create<ept id="p1">](../atl/reference/cwindowimpl-class.md#cwindowimpl__create)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Window Classes</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>