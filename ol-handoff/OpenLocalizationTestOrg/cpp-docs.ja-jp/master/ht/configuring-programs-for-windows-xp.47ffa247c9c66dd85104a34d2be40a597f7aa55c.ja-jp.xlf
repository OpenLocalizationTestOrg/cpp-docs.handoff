<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ebbe2c30c7a23ae65e95a632c670222737489bfd</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\build\configuring-programs-for-windows-xp.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d8b0eae58efb0ffdca65b91e6e4f2f8d80108b20</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2a0bab039605b56fcf2b8c3d03bd86268eec727c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Configuring Programs for Windows XP | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Configuring Programs for Windows XP</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Because Visual Studio supports multiple platform toolsets, you can target operating systems and runtime libraries that are not supported by the default toolset.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For example, by switching the platform toolset, you can use the C++11, C++14, and C++17 language enhancements supported by the Visual C++ compiler in Visual Studio to create apps that target <ph id="ph1">[!INCLUDE[winxp](../build/includes/winxp_md.md)]</ph> and <ph id="ph2">[!INCLUDE[WinXPSvr](../build/includes/winxpsvr_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can also use older platform toolsets to maintain binary-compatible legacy code and still take advantage of the latest features of the Visual Studio IDE.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If you are using <ph id="ph1">[!INCLUDE[vs_dev11_long](../build/includes/vs_dev11_long_md.md)]</ph>, you must install <ph id="ph2">[!INCLUDE[vs_dev11_long](../build/includes/vs_dev11_long_md.md)]</ph> Update 4 to add platform toolset support for <ph id="ph3">[!INCLUDE[winxp](../build/includes/winxp_md.md)]</ph> and <ph id="ph4">[!INCLUDE[WinXPSvr](../build/includes/winxpsvr_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To download and install a copy of <ph id="ph1">[!INCLUDE[vs_dev11_long](../build/includes/vs_dev11_long_md.md)]</ph> Update 4, see <bpt id="p1">[</bpt>Microsoft Visual Studio Express 2012 for Windows Desktop<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=265464)</ept> in the Microsoft Download Center.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Then install <bpt id="p1">[</bpt>Visual Studio 2012 Update 4<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=335900)</ept> to get the v110_xp platform toolset.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Use Windows Update to receive the latest software updates after installation.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Windows XP targeting experience</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The Windows XP platform toolset that's included in Visual Studio is a version of the <ph id="ph1">[!INCLUDE[win7](../build/includes/win7_md.md)]</ph> SDK that was included in <ph id="ph2">[!INCLUDE[vs_dev10_long](../build/includes/vs_dev10_long_md.md)]</ph>, but it uses the current C++ compiler.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>It also configures project properties to appropriate default values—for example, the specification of a compatible linker for down-level targeting.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Only Windows desktop apps that are created by using the Windows XP platform toolset run on <ph id="ph1">[!INCLUDE[winxp](../build/includes/winxp_md.md)]</ph> and <ph id="ph2">[!INCLUDE[WinXPSvr](../build/includes/winxpsvr_md.md)]</ph>, but those apps can also run on more recent Windows operating systems.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To target Windows XP</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, open the shortcut menu for your project, and then choose <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Property Pages<ept id="p1">**</ept> dialog box for the project, under <bpt id="p2">**</bpt>Configuration Properties<ept id="p2">**</ept>, <bpt id="p3">**</bpt>General<ept id="p3">**</ept>, set the <bpt id="p4">**</bpt>Platform Toolset<ept id="p4">**</ept> property to the desired Windows XP toolset.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For example, choose <bpt id="p1">**</bpt>Visual Studio 2015 – Windows XP (v140_xp)<ept id="p1">**</ept> to create code for <ph id="ph1">[!INCLUDE[winxp](../build/includes/winxp_md.md)]</ph> and <ph id="ph2">[!INCLUDE[WinXPSvr](../build/includes/winxpsvr_md.md)]</ph> by using the Microsoft Visual C++ 2015 compiler.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>C++ runtime support</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Along with the Windows XP platform toolset, the C Runtime Library (CRT), Standard Template Library (STL), Active Template Library (ATL), Concurrency Runtime Library (ConCRT), Parallel Patterns Library (PPL), Microsoft Foundation Class Library (MFC), and C++ AMP (C++ Accelerated Massive Programming) library include runtime support for <ph id="ph1">[!INCLUDE[winxp](../build/includes/winxp_md.md)]</ph> and <ph id="ph2">[!INCLUDE[WinXPSvr](../build/includes/winxpsvr_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For these operating systems, the minimum supported versions are <ph id="ph1">[!INCLUDE[winxp](../build/includes/winxp_md.md)]</ph> Service Pack 3 (SP3) for x86, <ph id="ph2">[!INCLUDE[winxp](../build/includes/winxp_md.md)]</ph> Service Pack 2 (SP2) for x64, and <ph id="ph3">[!INCLUDE[WinXPSvr](../build/includes/winxpsvr_md.md)]</ph> Service Pack 2 (SP2) for both x86 and x64.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>These libraries are supported by the platform toolsets installed by Visual Studio, depending on the target:</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Library</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Default platform toolset targeting Windows desktop apps</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Default platform toolset targeting <ph id="ph1">[!INCLUDE[win8_appname_long](../build/includes/win8_appname_long_md.md)]</ph> apps</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Windows XP platform toolset targeting <ph id="ph1">[!INCLUDE[winxp](../build/includes/winxp_md.md)]</ph>,</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>CRT</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>X</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>X</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>X</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>STL</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>X</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>X</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>X</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>ATL</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>X</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>X</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>X</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>ConCRT/PPL</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>X</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>X</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>X</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>MFC</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>X</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>X</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>C++ AMP</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>X</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>X</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Apps that are written in C++/CLI and target the .NET Framework 4 run on <ph id="ph1">[!INCLUDE[winxp](../build/includes/winxp_md.md)]</ph> and <ph id="ph2">[!INCLUDE[WinXPSvr](../build/includes/winxpsvr_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Differences between the toolsets</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Due to differences in platform and library support, the development experience for apps that use a Windows XP platform toolset is not as complete as for apps that use the default Visual Studio platform toolset.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>C++ language features</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Only C++ language features implemented in <ph id="ph1">[!INCLUDE[vs_dev11_long](../build/includes/vs_dev11_long_md.md)]</ph> are supported in apps that use the v110_xp platform toolset.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Only C++ language features implemented in <ph id="ph1">[!INCLUDE[vs_dev12](../atl-mfc-shared/includes/vs_dev12_md.md)]</ph> are supported in apps that use the v120_xp platform toolset.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Visual Studio uses the corresponding compiler when it builds using the older platform toolsets.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Use the most recent Windows XP platform toolset to take advantage of additional C++ language features implemented in that version of the compiler.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Remote debugging</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Remote Tools for Visual Studio doesn't support remote debugging on <ph id="ph1">[!INCLUDE[winxp](../build/includes/winxp_md.md)]</ph> or <ph id="ph2">[!INCLUDE[WinXPSvr](../build/includes/winxpsvr_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To debug an app when it's running on <ph id="ph1">[!INCLUDE[winxp](../build/includes/winxp_md.md)]</ph> or <ph id="ph2">[!INCLUDE[WinXPSvr](../build/includes/winxpsvr_md.md)]</ph>, you can use a debugger from an older version of Visual Studio to debug it locally or remotely.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This resembles the experience of debugging an app on Windows Vista, which is a runtime target of the platform toolset, but not a remote debugging target.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Static analysis</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The Windows XP platform toolsets don't support static analysis because the SAL annotations for the <ph id="ph1">[!INCLUDE[win7](../build/includes/win7_md.md)]</ph> SDK and the runtime libraries are incompatible.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>When you want to perform static analysis on an app that supports <ph id="ph1">[!INCLUDE[winxp](../build/includes/winxp_md.md)]</ph> or <ph id="ph2">[!INCLUDE[WinXPSvr](../build/includes/winxpsvr_md.md)]</ph>, you can temporarily switch the solution to target the default platform toolset to perform the analysis, and then switch back to the Windows XP platform toolset to build the app.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Debugging of DirectX graphics</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Because the Graphics Debugger does not support the Direct3D 9 API, it cannot be used to debug apps that use Direct3D on <ph id="ph1">[!INCLUDE[winxp](../build/includes/winxp_md.md)]</ph> or <ph id="ph2">[!INCLUDE[WinXPSvr](../build/includes/winxpsvr_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>However, if the app implements an alternative renderer that uses the Direct3D 10 or Direct3D 11 APIs, the Graphics Debugger can be used to diagnose problems with the use of those APIs.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Building HLSL</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>By default, the Windows XP toolset does not compile HLSL source code files.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To compile HLSL files, download and install the June 2010 DirectX SDK, and then set the project's VC directories to include it.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For more information, see the "DirectX SDK Does Not Register Include/Library Paths with Visual Studio 2010" section of the <bpt id="p1">[</bpt>June 2010 DirectX SDK download page<ept id="p1">](http://www.microsoft.com/download/details.aspx?displaylang=en&amp;id=6812)</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>