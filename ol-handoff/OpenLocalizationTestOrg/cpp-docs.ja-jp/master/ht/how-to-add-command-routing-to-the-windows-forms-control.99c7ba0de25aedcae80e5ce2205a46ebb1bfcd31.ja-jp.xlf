<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">46c09ce8f523b6bd4b95397d1a866120d53a1e19</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\dotnet\how-to-add-command-routing-to-the-windows-forms-control.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7f16b5071078b21864cb56874d606e691e1245a9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c0648577c9d041d175f29e66ec4937f75f9f44bd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Add Command Routing to the Windows Forms Control | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Add Command Routing to the Windows Forms Control</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CWinFormsView<ept id="p1">](../mfc/reference/cwinformsview-class.md)</ept> routes commands and update-command UI messages to the user control to allow it to handle MFC commands (for example, frame menu items and toolbar buttons).</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The user control uses <bpt id="p1">[</bpt>ICommandTarget::Initialize<ept id="p1">](../mfc/reference/icommandtarget-interface.md#icommandtarget__initialize)</ept> to store a reference to the command source object in <ph id="ph1">`m_CmdSrc`</ph>, as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To use <ph id="ph1">`ICommandTarget`</ph> you must add a reference to mfcmifc80.dll.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>handles several of the common MFC view notifications by forwarding them to the managed user control.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>These notifications include the <bpt id="p1">[</bpt>OnInitialUpdate<ept id="p1">](../mfc/reference/iview-interface.md#iview__oninitialupdate)</ept>, <bpt id="p2">[</bpt>OnUpdate<ept id="p2">](../mfc/reference/iview-interface.md#iview__onupdate)</ept> and <bpt id="p3">[</bpt>OnActivateView<ept id="p3">](../mfc/reference/iview-interface.md#iview__onactivateview)</ept> methods.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This topic assumes you have previously completed <bpt id="p1">[</bpt>How to: Create the User Control and Host in a Dialog Box<ept id="p1">](../dotnet/how-to-create-the-user-control-and-host-in-a-dialog-box.md)</ept> and <bpt id="p2">[</bpt>How to: Create the User Control and Host MDI View<ept id="p2">](../dotnet/how-to-create-the-user-control-and-host-mdi-view.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To create the MFC host application</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Open Windows Forms Control Library you created in <bpt id="p1">[</bpt>How to: Create the User Control and Host in a Dialog Box<ept id="p1">](../dotnet/how-to-create-the-user-control-and-host-in-a-dialog-box.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Add a reference to mfcmifc80.dll, which you can do by right-clicking the project node in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, selecting <bpt id="p2">**</bpt>Add<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Reference<ept id="p3">**</ept>, and then browsing to Microsoft Visual Studio 10.0\VC\atlmfc\lib.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Open UserControl1.Designer.cs and add the following using statement:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Also, in UserControl1.Designer.cs, change this line:</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>to this:</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Add this as the first line of the class definition for <ph id="ph1">`UserControl1`</ph>:</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Add the following method definitions to <ph id="ph1">`UserControl1`</ph> (we will create the ID of the MFC control in the next step):</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Open the MFC application you created in <bpt id="p1">[</bpt>How to: Create the User Control and Host MDI View<ept id="p1">](../dotnet/how-to-create-the-user-control-and-host-mdi-view.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Add a menu option that will invoke <ph id="ph1">`singleMenuHandler`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Go to <bpt id="p1">**</bpt>Resource View<ept id="p1">**</ept> (Ctrl+Shift+E), expand the <bpt id="p2">**</bpt>Menu<ept id="p2">**</ept> folder, and then double-click <bpt id="p3">**</bpt>IDR_MFC02TYPE<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This displays the menu editor.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Add a menu option at the bottom of the <bpt id="p1">**</bpt>View<ept id="p1">**</ept> menu.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Notice the ID of the menu option in the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Save the file.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, open the Resource.h file, copy the ID value for the menu option you just added, and paste that value as the first parameter to the <ph id="ph1">`m_CmdSrc.AddCommandHandler`</ph> call in the C# project's <ph id="ph2">`Initialize`</ph> method (replacing <ph id="ph3">`32771`</ph> if necessary).</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Build and run the project.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Build<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Build Solution<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Start without debugging<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Select the menu option you added.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Notice that the method in the .dll is called.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Hosting a Windows Forms User Control as an MFC View</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>ICommandSource Interface</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>ICommandTarget Interface</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>CommandHandler</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>