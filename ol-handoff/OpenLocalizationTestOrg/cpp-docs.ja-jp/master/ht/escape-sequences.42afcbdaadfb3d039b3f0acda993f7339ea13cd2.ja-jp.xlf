<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ff650161e8c6fb014209224b9b909c0bb1e99bf8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-language\escape-sequences.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5725d3fc3f18d899158c3962162b8b9fe72cfe30</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8bbac7e5b8aca4d36e4d21f9eb339b9c240f0290</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Escape Sequences | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Escape Sequences</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Character combinations consisting of a backslash (<bpt id="p1">**</bpt><ph id="ph1">\\</ph><ept id="p1">**</ept>) followed by a letter or by a combination of digits are called "escape sequences."</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To represent a newline character, single quotation mark, or certain other characters in a character constant, you must use escape sequences.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>An escape sequence is regarded as a single character and is therefore valid as a character constant.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Escape sequences are typically used to specify actions such as carriage returns and tab movements on terminals and printers.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>They are also used to provide literal representations of nonprinting characters and characters that usually have special meanings, such as the double quotation mark (<bpt id="p1">**</bpt>"<ept id="p1">**</ept>).</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following table lists the ANSI escape sequences and what they represent.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Note that the question mark preceded by a backslash (<bpt id="p1">**</bpt><ph id="ph1">\\</ph>?<ept id="p1">**</ept>) specifies a literal question mark in cases where the character sequence would be misinterpreted as a trigraph.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Trigraphs<ept id="p1">](../c-language/trigraphs.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Escape Sequences</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Escape Sequence</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Represents</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>\a</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Bell (alert)</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>\b</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Backspace</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>\f</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Formfeed</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>\n</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>New line</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>\r</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Carriage return</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>\t</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Horizontal tab</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>\v</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Vertical tab</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>'</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Single quotation mark</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>"</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Double quotation mark</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Backslash</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>?</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Literal question mark</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><ph id="ph1">\\</ph><ept id="p1">**</ept> <bpt id="p2">*</bpt>ooo<ept id="p2">*</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>ASCII character in octal notation</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>\x<ept id="p1">**</ept> <bpt id="p2">*</bpt>hh<ept id="p2">*</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>ASCII character in hexadecimal notation</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>\x<ept id="p1">**</ept> <bpt id="p2">*</bpt>hhhh<ept id="p2">*</ept></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Unicode character in hexadecimal notation if this escape sequence is used in a wide-character constant or a Unicode string literal.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`WCHAR f = L'\x4e00'`</ph> or <ph id="ph2">`WCHAR b[] = L"The Chinese character for one is \x4e00"`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Microsoft Specific</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If a backslash precedes a character that does not appear in the table, the compiler handles the undefined character as the character itself.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`\c`</ph> is treated as an <ph id="ph2">`c`</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>END Microsoft Specific</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Escape sequences allow you to send nongraphic control characters to a display device.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, the ESC character (<bpt id="p1">**</bpt>\033<ept id="p1">**</ept>) is often used as the first character of a control command for a terminal or printer.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Some escape sequences are device-specific.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For instance, the vertical-tab and formfeed escape sequences (<bpt id="p1">**</bpt>\v<ept id="p1">**</ept> and <bpt id="p2">**</bpt>\f<ept id="p2">**</ept>) do not affect screen output, but they do perform appropriate printer operations.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>You can also use the backslash (<bpt id="p1">**</bpt><ph id="ph1">\\</ph><ept id="p1">**</ept>) as a continuation character.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>When a newline character (equivalent to pressing the RETURN key) immediately follows the backslash, the compiler ignores the backslash and the newline character and treats the next line as part of the previous line.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This is useful primarily for preprocessor definitions longer than a single line.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>C Character Constants</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>