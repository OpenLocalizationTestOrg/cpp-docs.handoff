<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">30fa9e0ab287826d486a7fe239e501f1ef64437f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\creating-an-active-document-container-application.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">19343e284fcaed99e6a815b85c75615608a8bd73</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">27441554a9b75ddbc3d02146bae2ae79aec35d14</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Creating an Active Document Container Application | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Creating an Active Document Container Application</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The simplest and most recommended way to create an active document container application is to create an MFC EXE container application using the MFC Application Wizard, then modify the application to support active document containment.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To create an active document container application</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Project<ept id="p2">**</ept>from the <bpt id="p3">**</bpt>New<ept id="p3">**</ept> submenu.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>From the left pane, click <bpt id="p1">**</bpt>Visual C++<ept id="p1">**</ept> project type.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>MFC Application<ept id="p1">**</ept> from the right pane.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Name the project <ph id="ph1">`MyProj`</ph>, click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Compound Document Support<ept id="p1">**</ept> page.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Container<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Container/Full-server<ept id="p2">**</ept> option.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Active document container<ept id="p1">**</ept> check box.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Finish<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When the MFC Application Wizard finishes generating the application, open the following files using Solution Explorer:</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>MyProjview.cpp</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In MyProjview.cpp, make the following changes:</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">`CMyProjView::OnPreparePrinting`</ph>, replace the function contents with the following code:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>NVC_MFCDocView#56</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>provides printing support.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This code replaces <ph id="ph1">`DoPreparePrinting`</ph>, which is the default print preparation.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Active document containment provides an improved printing scheme:</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can first call the active document through its <ph id="ph1">`IPrint`</ph>interface and tell it to print itself.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This is different from previous OLE containment, in which the container had to render an image of the contained item onto the printer <ph id="ph1">`CDC`</ph>object.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If that fails, tell the contained item to print itself through its <ph id="ph1">`IOleCommandTarget`</ph>interface</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If that fails, make your own rendering of the item.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The static member functions <ph id="ph1">`COleDocObjectItem::OnPrint`</ph> and <ph id="ph2">`COleDocObjectItem::OnPreparePrinting`</ph>, as implemented in the previous code, handle this improved printing scheme.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Add any implementation of your own and build the application.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Active Document Containment</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>