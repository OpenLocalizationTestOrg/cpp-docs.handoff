<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c1753b0f4f017c6d02fc41c427285e6adae6521b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard-library\complex.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3420c84682dada51fec273218cd16a7e939ee675</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9dfc99171b075d6e62c4eda76955987c0413d8f8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>complex<ph id="ph1">&amp;gt;</ph> | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>complex</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Defines the container template class complex and its supporting templates.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A complex number is an ordered pair of real numbers.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In purely geometrical terms, the complex plane is the real, two-dimensional plane.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The special qualities of the complex plane that distinguish it from the real plane are due to its having an additional algebraic structure.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This algebraic structure has two fundamental operations:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Addition defined as (<bpt id="p1">*</bpt>a, b<ept id="p1">*</ept>) + (<bpt id="p2">*</bpt>c, d<ept id="p2">*</ept>) = (<bpt id="p3">*</bpt>a + c, b + d)<ept id="p3">*</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Multiplication defined as (<bpt id="p1">*</bpt>a, b<ept id="p1">*</ept>) <ph id="ph1">\*</ph> (<bpt id="p2">*</bpt>c, d<ept id="p2">*</ept>) = (<bpt id="p3">*</bpt>ac - bd, ad + bc<ept id="p3">*</ept>)</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The set of complex numbers with the operations of complex addition and complex multiplication are a field in the standard algebraic sense:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The operations of addition and multiplication are commutative and associative and multiplication distributes over addition exactly as it does with real addition and multiplication on the field of real numbers.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The complex number (<bpt id="p1">*</bpt>0, 0<ept id="p1">*</ept>) is the additive identity and (<bpt id="p2">*</bpt>1, 0<ept id="p2">*</ept>) is the multiplicative identity.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The additive inverse for a complex number (<bpt id="p1">*</bpt>a, b<ept id="p1">*</ept>) is (<bpt id="p2">*</bpt>-a, -b<ept id="p2">*</ept>), and the multiplicative inverse for all such complex numbers except (<bpt id="p3">*</bpt>0, 0<ept id="p3">*</ept>) is</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>(<bpt id="p1">*</bpt>a<ept id="p1">*</ept>/(<bpt id="p2">*</bpt>a<ept id="p2">*</ept><ph id="ph1">&lt;sup&gt;</ph>2<ph id="ph2">&lt;/sup&gt; + </ph><bpt id="p3">*</bpt>b<ept id="p3">*</ept><ph id="ph3">&lt;sup&gt;</ph>2<ph id="ph4">&lt;/sup&gt;</ph>), -<bpt id="p4">*</bpt>b<ept id="p4">*</ept>/(<bpt id="p5">*</bpt>a<ept id="p5">*</ept><ph id="ph5">&lt;sup&gt;</ph>2<ph id="ph6">&lt;/sup&gt; + </ph><bpt id="p6">*</bpt>b<ept id="p6">*</ept><ph id="ph7">&lt;sup&gt;</ph>2<ph id="ph8">&lt;/sup&gt;</ph>)</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>By representing a complex number <bpt id="p1">*</bpt>z = (a, b)<ept id="p1">*</ept> in the form <bpt id="p2">*</bpt>z = a + bi<ept id="p2">*</ept>, where <bpt id="p3">*</bpt>i<ept id="p3">*</ept><ph id="ph1">&lt;sup&gt;</ph>2<ph id="ph2">&lt;/sup&gt;</ph> <bpt id="p4">*</bpt><ph id="ph3">=</ph><ept id="p4">*</ept> -1, the rules for the algebra of the set of real numbers can be applied to the set of complex numbers and to their components.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>(1 + 2<bpt id="p1">*</bpt>i<ept id="p1">*</ept>) <ph id="ph1">\*</ph> (2 + 3<bpt id="p2">*</bpt>i<ept id="p2">*</ept>)    = 1<ph id="ph2">\*</ph>(2 + 3<bpt id="p3">*</bpt>i<ept id="p3">*</ept>) + 2<bpt id="p4">*</bpt>i<ept id="p4">*</ept><ph id="ph3">\*</ph>(2 + 3<bpt id="p5">*</bpt>i<ept id="p5">*</ept>) = (2 + 3<bpt id="p6">*</bpt>i<ept id="p6">*</ept>) + (4<bpt id="p7">*</bpt>i<ept id="p7">*</ept> + 6<bpt id="p8">*</bpt>i<ept id="p8">*</ept><ph id="ph4">&lt;sup&gt;</ph>2<ph id="ph5">&lt;/sup&gt;</ph>)</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>= (2 –6) + (3 + 4)<bpt id="p1">*</bpt>i<ept id="p1">*</ept> = -4 + 7<bpt id="p2">*</bpt>i<ept id="p2">*</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The system of complex numbers is a field, but it is not an ordered field.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>There is no ordering of the complex numbers as there is for the field or real numbers and its subsets, so inequalities cannot be applied to complex numbers as they are to real numbers which is an ordered field.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>There are three common forms of representing a complex number <bpt id="p1">*</bpt>z<ept id="p1">*</ept>:</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Cartesian: <bpt id="p1">*</bpt>z = a + bi<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Polar: <bpt id="p1">*</bpt>z = r<ept id="p1">*</ept> (cos <bpt id="p2">*</bpt>+ i<ept id="p2">*</ept>sin)</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Exponential: <bpt id="p1">*</bpt>z = r <ph id="ph1">\*</ph><ept id="p1">*</ept> exp()</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The terms used in these standard representations of a complex number are referred to as follows:</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The real Cartesian component or real part <bpt id="p1">*</bpt>a<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The imaginary Cartesian component or imaginary part <bpt id="p1">*</bpt>b<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The modulus or absolute value of a complex number Ρ.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The argument or phase angle .</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified, functions that can return multiple values are required to return a principal value for their arguments greater than –pi and less than or equal to +pi to keep them single valued.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>All angles need to be expressed in radians, where there are 2 pi radians (360 degrees) in a circle.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Functions</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>abs</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Calculates the modulus of a complex number.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>arg</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Extracts the argument from a complex number.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>conj</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Returns the complex conjugate of a complex number.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>cos</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Returns the cosine of a complex number.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>cosh</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Returns the hyperbolic cosine of a complex number.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>exp</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Returns the exponential function of a complex number.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>imag</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Extracts the imaginary component of a complex number.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>log</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Returns the natural logarithm of a complex number.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>log10</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Returns the base 10 logarithm of a complex number.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>norm</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Extracts the norm of a complex number.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>polar</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Returns the complex number, which corresponds to a specified modulus and argument, in Cartesian form.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>pow</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Evaluates the complex number obtained by raising a base that is a complex number to the power of another complex number.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>real</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Extracts the real component of a complex number.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>sin</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Returns the sine of a complex number.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>sinh</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Returns the hyperbolic sine of a complex number.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>sqrt</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Returns the square root of a complex number.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>tan</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Returns the tangent of a complex number.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>tanh</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Returns the hyperbolic tangent of a complex number.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Operators</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>operator!=</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Tests for inequality between two complex numbers, one or both of which may belong to the subset of the type for the real and imaginary parts.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>operator*</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Multiplies two complex numbers, one or both of which may belong to the subset of the type for the real and imaginary parts.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>operator+</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Adds two complex numbers, one or both of which may belong to the subset of the type for the real and imaginary parts.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>operator-</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Subtracts two complex numbers, one or both of which may belong to the subset of the type for the real and imaginary parts.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>operator/</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Divides two complex numbers, one or both of which may belong to the subset of the type for the real and imaginary parts.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>operator&lt;</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>A template function that inserts a complex number into the output stream.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>operator==</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Tests for equality between two complex numbers, one or both of which may belong to the subset of the type for the real and imaginary parts.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>operator&gt;&gt;</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A template function that extracts a complex value from the input stream.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Classes</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>complex<ph id="ph1">\&lt;</ph>double&gt;</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The explicitly specialized template class describes an object that stores an ordered pair of objects both of type <bpt id="p1">**</bpt>double<ept id="p1">**</ept><bpt id="p2">*</bpt>,<ept id="p2">*</ept> first representing the real part of a complex number and the second representing the imaginary part.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>complex<ph id="ph1">\&lt;</ph>float&gt;</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The explicitly specialized template class describes an object that stores an ordered pair of objects both of type <bpt id="p1">**</bpt>float<ept id="p1">**</ept><bpt id="p2">*</bpt>,<ept id="p2">*</ept> first representing the real part of a complex number and the second representing the imaginary part.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>complex<ph id="ph1">\&lt;</ph>long double&gt;</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The explicitly specialized template class describes an object that stores an ordered pair of objects both of type <ph id="ph1">`long double`</ph><bpt id="p1">*</bpt>,<ept id="p1">*</ept> first representing the real part of a complex number and the second representing the imaginary part.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>complex</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The template class describes an object used to represent the complex number system and perform complex arithmetic operations.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Literals</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">\&lt;</ph>complex&gt; header defines the following <bpt id="p1">[</bpt>user-defined literals<ept id="p1">](../cpp/user-defined-literals-cpp.md)</ept> which create a complex number with the real part being zero and the imaginary part being the value of the input parameter.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Returns</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Returns: <ph id="ph1">`complex&lt;double&gt;{0.0, static_cast&lt;double&gt;(d)}`</ph>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Returns: <ph id="ph1">`complex&lt;float&gt;{0.0f, static_cast&lt;float&gt;(d)}`</ph>.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Header Files Reference</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Thread Safety in the C++ Standard Library</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>