<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02835e9fef894ff015afa405a29d393347954eac</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\cnetaddressctrl-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">028adeace771836c6e41cf2caa8bf1aefe931015</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bb6646da3a0e14b84afaaad8c84dd8c7b6a85758</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CNetAddressCtrl Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CNetAddressCtrl Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CNetAddressCtrl`</ph> class represents the network address control, which you can use to input and validate the format of IPv4, IPv6, and named DNS addresses.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CNetAddressCtrl::CNetAddressCtrl<ept id="p1">](#cnetaddressctrl__cnetaddressctrl)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CNetAddressCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CNetAddressCtrl::Create<ept id="p1">](#cnetaddressctrl__create)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Creates a network address control with specified styles and attaches it to the current <ph id="ph1">`CNetAddressCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CNetAddressCtrl::CreateEx<ept id="p1">](#cnetaddressctrl__createex)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Creates a network address control with specified extended styles and attaches it to the current <ph id="ph1">`CNetAddressCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CNetAddressCtrl::DisplayErrorTip<ept id="p1">](#cnetaddressctrl__displayerrortip)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Displays an error balloon tip when the user enters an unsupported network address in the current network address control.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CNetAddressCtrl::GetAddress<ept id="p1">](#cnetaddressctrl__getaddress)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Retrieves a validated and parsed representation of the network address associated with the current network address control.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CNetAddressCtrl::GetAllowType<ept id="p1">](#cnetaddressctrl__getallowtype)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Retrieves the type of network address that the current network address control can support.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CNetAddressCtrl::SetAllowType<ept id="p1">](#cnetaddressctrl__setallowtype)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Sets the type of network address that the current network address control can support.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The network address control verifies that the format of the address the user enters is correct.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The control does not actually connect to the network address.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>CNetAddressCtrl::SetAllowType<ept id="p1">](#cnetaddressctrl__setallowtype)</ept> method specifies one or more types of address that the <bpt id="p2">[</bpt>CNetAddressCtrl::GetAddress<ept id="p2">](#cnetaddressctrl__getaddress)</ept> method can parse and verify.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>An address can be in the form of an IPv4, IPv6, or named address for a server, network, host, or broadcast message destination.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If the format of the address is incorrect, you can use the <bpt id="p1">[</bpt>CNetAddressCtrl::DisplayErrorTip<ept id="p1">](#cnetaddressctrl__displayerrortip)</ept> method to display an infotip message box that graphically points to the text box of the network address control and displays a predefined error message.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CNetAddressCtrl`</ph> class is derived from the <bpt id="p1">[</bpt>CEdit<ept id="p1">](../../mfc/reference/cedit-class.md)</ept> class.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Consequently, the network address control provides access to all Windows edit control messages.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The following figure depicts a dialog that contains a network address control.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The text box (1) for the network address control contains an invalid network address.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The infotip message (2) is displayed if the network address is invalid.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Dialog with a network address control and infotip.<ept id="p1">]</ept><bpt id="p2">(../../mfc/reference/media/cnetaddctrl.png "</bpt>cnetaddctrl<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The following code example is a portion of a dialog that validates a network address.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The event handlers for three radio buttons specify that the network address can be one of three address types.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The user enters an address in the text box of the network control, then presses a button to validate the address.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If the address is valid, a success message is displayed; otherwise, the predefined infotip error message is displayed.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CNetAddressCtrl_s1#1<ept id="p2">](../../mfc/reference/codesnippet/cpp/cnetaddressctrl-class_1.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The following code example from the dialog header file defines the <bpt id="p1">[</bpt>NC_ADDRESS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb773345)</ept> and <bpt id="p2">[</bpt>NET_ADDRESS_INFO<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/bb773346)</ept> variables that are required by the <bpt id="p3">[</bpt>CNetAddressCtrl::GetAddress<ept id="p3">](#cnetaddressctrl__getaddress)</ept> method.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CNetAddressCtrl_s1#2<ept id="p2">](../../mfc/reference/codesnippet/cpp/cnetaddressctrl-class_2.h)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CObject<ept id="p1">](../../mfc/reference/cobject-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CCmdTarget<ept id="p1">](../../mfc/reference/ccmdtarget-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CWnd<ept id="p1">](../../mfc/reference/cwnd-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CEdit<ept id="p1">](../../mfc/reference/cedit-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxcmn.h</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This class is supported in <ph id="ph1">[!INCLUDE[windowsver](../../build/reference/includes/windowsver_md.md)]</ph> and later.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Additional requirements for this class are described in <bpt id="p1">[</bpt>Build Requirements for Windows Vista Common Controls<ept id="p1">](../../mfc/build-requirements-for-windows-vista-common-controls.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cnetaddressctrl__cnetaddressctrl"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CNetAddressCtrl::CNetAddressCtrl</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CNetAddressCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>CNetAddressCtrl::Create<ept id="p1">](#cnetaddressctrl__create)</ept> or <bpt id="p2">[</bpt>CNetAddressCtrl::CreateEx<ept id="p2">](#cnetaddressctrl__createex)</ept> method to create a network control and attach it to the <ph id="ph1">`CNetAddressCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cnetaddressctrl__create"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CNetAddressCtrl::Create</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Creates a network address control with specified styles and attaches it to the current <ph id="ph1">`CNetAddressCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`dwStyle`</ph></source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A bitwise combination of styles to be applied to the control.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Edit Styles<ept id="p1">](../../mfc/reference/edit-styles.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`rect`</ph></source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">[</bpt>RECT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure that contains the position and size of the control.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pParentWnd`</ph></source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A non-null pointer to a <bpt id="p1">[</bpt>CWnd<ept id="p1">](../../mfc/reference/cwnd-class.md)</ept> object that is the parent window of the control.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`nID`</ph></source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The ID of the control.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if this method is successful; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cnetaddressctrl__createex"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CNetAddressCtrl::CreateEx</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Creates a network address control with specified extended styles and attaches it to the current <ph id="ph1">`CNetAddressCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`dwExStyle`</ph></source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A bitwise combination (OR) of extended styles to be applied to the control.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>For more information, see the <ph id="ph1">`dwExStyle`</ph> parameter of the <bpt id="p1">[</bpt>CreateWindowEx<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632680)</ept> function.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`dwStyle`</ph></source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>A bitwise combination (OR) of styles to be applied to the control.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Edit Styles<ept id="p1">](../../mfc/reference/edit-styles.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`rect`</ph></source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">[</bpt>RECT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure that contains the position and size of the control.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pParentWnd`</ph></source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>A non-null pointer to a <bpt id="p1">[</bpt>CWnd<ept id="p1">](../../mfc/reference/cwnd-class.md)</ept> object that is the parent window of the control.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`nID`</ph></source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The ID of the control.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if this method is successful; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cnetaddressctrl__displayerrortip"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CNetAddressCtrl::DisplayErrorTip</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Displays an error message in the balloon tip that is associated with the current network address control.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The value <ph id="ph1">`S_OK`</ph> if this method is successful; otherwise, an error code.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>CNetAddressCtrl::SetAllowType<ept id="p1">](#cnetaddressctrl__setallowtype)</ept> method to specify the types of addresses that the current network address control can support.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>CNetAddressCtrl::GetAddress<ept id="p1">](#cnetaddressctrl__getaddress)</ept> method to validate and parse the network address that the user enters.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>CNetAddressCtrl::DisplayErrorTip<ept id="p1">](#cnetaddressctrl__displayerrortip)</ept> method to display an error message infotip if the <bpt id="p2">[</bpt>CNetAddressCtrl::GetAddress<ept id="p2">](#cnetaddressctrl__getaddress)</ept> method is unsuccessful.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>This message invokes the <bpt id="p1">[</bpt>NetAddr_DisplayErrorTip<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774314)</ept> macro, which is described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>That macro sends the <ph id="ph1">`NCM_DISPLAYERRORTIP`</ph> message.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cnetaddressctrl__getaddress"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CNetAddressCtrl::GetAddress</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Retrieves a validated and parsed representation of the network address that is associated with the current network address control.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>[in, out] <ph id="ph1">`pAddress`</ph></source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Pointer to an <bpt id="p1">[</bpt>NC_ADDRESS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb773345)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">`pAddrInfo`</ph> member of this structure to the address of a <bpt id="p1">[</bpt>NET_ADDRESS_INFO<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb773346)</ept> structure before you call the GetAddress method.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The value <ph id="ph1">`S_OK`</ph> if this method is successful; otherwise, a COM error code.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>For more information about the possible error codes, see the Return Value section of the <bpt id="p1">[</bpt>NetAddr_GetAddress<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774316)</ept> macro.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>If this method is successful, the <bpt id="p1">[</bpt>NET_ADDRESS_INFO<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb773346)</ept> structure contains additional information about the network address.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>CNetAddressCtrl::SetAllowType<ept id="p1">](#cnetaddressctrl__setallowtype)</ept> method to specify the types of addresses the current network address control can support.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>CNetAddressCtrl::GetAddress<ept id="p1">](#cnetaddressctrl__getaddress)</ept> method to validate and parse the network address that the user enters.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>CNetAddressCtrl::DisplayErrorTip<ept id="p1">](#cnetaddressctrl__displayerrortip)</ept> method to display an error message infotip if the <bpt id="p2">[</bpt>CNetAddressCtrl::GetAddress<ept id="p2">](#cnetaddressctrl__getaddress)</ept> method is unsuccessful.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>This method invokes the <bpt id="p1">[</bpt>NetAddr_GetAddress<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774316)</ept> macro, which is described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>That macro sends the <ph id="ph1">`NCM_GETADDRESS`</ph> message.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cnetaddressctrl__getallowtype"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CNetAddressCtrl::GetAllowType</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Retrieves the type of network address that the current network address control can support.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>A bitwise combination (OR) of flags that specifies the types of addresses the network address control can support.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>NET_STRING<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb762586)</ept>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>This message invokes the <bpt id="p1">[</bpt>NetAddr_GetAllowType<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774318)</ept> macro, which is described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>That macro sends the <ph id="ph1">`NCM_GETALLOWTYPE`</ph> message.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cnetaddressctrl__setallowtype"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CNetAddressCtrl::SetAllowType</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Sets the type of network address that the current network address control can support.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`dwAddrMask`</ph></source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>A bitwise combination (OR) of flags that specifies the types of addresses the network address control can support.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>NET_STRING<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb762586)</ept>.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`S_OK`</ph> if this method is successful; otherwise, a COM error code.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>CNetAddressCtrl::SetAllowType<ept id="p1">](#cnetaddressctrl__setallowtype)</ept> method to specify the types of addresses that the current network address control can support.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>CNetAddressCtrl::GetAddress<ept id="p1">](#cnetaddressctrl__getaddress)</ept> method to validate and parse the network address that the user enters.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>CNetAddressCtrl::DisplayErrorTip<ept id="p1">](#cnetaddressctrl__displayerrortip)</ept> method to display an error message infotip if the <bpt id="p2">[</bpt>CNetAddressCtrl::GetAddress<ept id="p2">](#cnetaddressctrl__getaddress)</ept> method is unsuccessful.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>This message invokes the <bpt id="p1">[</bpt>NetAddr_SetAllowType<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774320)</ept> macro, which is described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>That macro sends the <ph id="ph1">`NCM_SETALLOWTYPE`</ph> message.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CNetAddressCtrl Class<ept id="p1">](../../mfc/reference/cnetaddressctrl-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Hierarchy Chart<ept id="p1">](../../mfc/hierarchy-chart.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CEdit Class<ept id="p1">](../../mfc/reference/cedit-class.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>