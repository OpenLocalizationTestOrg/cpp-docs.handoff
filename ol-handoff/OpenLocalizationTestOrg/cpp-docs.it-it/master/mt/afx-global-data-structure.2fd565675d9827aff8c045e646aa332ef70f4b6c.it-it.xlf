<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8857402361583b2fa0bd34e298e62b980fca825d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\afx-global-data-structure.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">adfacf5c9707628e485f3fb057b148ce8c8bc341</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4a1a219eb6a2c5f14fe18eed8bc708f382b0c699</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>AFX_GLOBAL_DATA Structure | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>AFX_GLOBAL_DATA Structure</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`AFX_GLOBAL_DATA`</ph> structure contains fields and methods that are used to manage the framework or customize the appearance and behavior of your application.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`AFX_GLOBAL_DATA`</ph> structure.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Destructor.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::CleanUp<ept id="p1">](#afx_global_data__cleanup)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Releases resources that are allocated by the framework, such as brushes, fonts, and DLLs.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::D2D1MakeRotateMatrix<ept id="p1">](#afx_global_data__d2d1makerotatematrix)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Creates a rotation transformation that rotates by a specified angle around a specified point.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::DrawParentBackground<ept id="p1">](#afx_global_data__drawparentbackground)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Draws the background of a control's parent in the specified area.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::DrawTextOnGlass<ept id="p1">](#afx_global_data__drawtextonglass)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Draws the specified text in the visual style of the specified theme.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::ExcludeTag<ept id="p1">](#afx_global_data__excludetag)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Removes the specified XML tag pair from a specified buffer.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::GetColor<ept id="p1">](#afx_global_data__getcolor)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Retrieves the current color of the specified user interface element.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::GetDirect2dFactory<ept id="p1">](#afx_global_data__getdirect2dfactory)</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the <ph id="ph1">`ID2D1Factory`</ph> interface that is stored in the global data.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If the interface is not initialized, it is created and has the default parameters.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::GetHandCursor<ept id="p1">](#afx_global_data__gethandcursor)</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Retrieves the predefined cursor that resembles a hand and whose identifier is <ph id="ph1">`IDC_HAND`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::GetITaskbarList<ept id="p1">](#afx_global_data__getitaskbarlist)</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Creates and stores in the global data a pointer to ITaskBarList interface.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::GetITaskbarList3<ept id="p1">](#afx_global_data__getitaskbarlist3)</ept></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Creates and stores in the global data a pointer to ITaskBarList3 interface.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::GetNonClientMetrics<ept id="p1">](#afx_global_data__getnonclientmetrics)</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Retrieves the metrics associated with the nonclient area of nonminimized windows.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::GetShellAutohideBars<ept id="p1">](#afx_global_data__getshellautohidebars)</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Determines positions of Shell auto hide bars.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::GetTextHeight<ept id="p1">](#afx_global_data__gettextheight)</ept></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Retrieves the height of text characters in the current font.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::GetWICFactory<ept id="p1">](#afx_global_data__getwicfactory)</ept></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the <ph id="ph1">`IWICImagingFactory`</ph> interface that is stored in the global data.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If the interface is not initialized, it is created and has the default parameters.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::GetWriteFactory<ept id="p1">](#afx_global_data__getwritefactory)</ept></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the <ph id="ph1">`IDWriteFactory`</ph> interface that is stored in the global data.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If the interface is not initialized, it is created and has the default parameters.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::IsD2DInitialized<ept id="p1">](#afx_global_data__isd2dinitialized)</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Initializes <ph id="ph1">`D2D`</ph>, <ph id="ph2">`DirectWrite`</ph>, and <ph id="ph3">`WIC`</ph> factories.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Call this method before the main window is initialized.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::Is32BitIcons<ept id="p1">](#afx_global_data__is32biticons)</ept></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Indicates whether predefined 32-bit icons are supported.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::IsD2DInitialized<ept id="p1">](#afx_global_data__isd2dinitialized)</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Determines whether the <ph id="ph1">`D2D`</ph> was initialized.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::IsDwmCompositionEnabled<ept id="p1">](#afx_global_data__isdwmcompositionenabled)</ept></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Provides a simple way to call the Windows <bpt id="p1">[</bpt>DwmIsCompositionEnabled<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa969518)</ept> method.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::IsHighContrastMode<ept id="p1">](#afx_global_data__ishighcontrastmode)</ept></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Indicates whether images are currently displayed in high contrast.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::OnSettingChange<ept id="p1">](#afx_global_data__onsettingchange)</ept></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Detects the current state of the desktop's menu animation and taskbar autohide features.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::RegisterWindowClass<ept id="p1">](#afx_global_data__registerwindowclass)</ept></source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Registers the specified MFC window class.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::ReleaseTaskBarRefs<ept id="p1">](#afx_global_data__releasetaskbarrefs)</ept></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Releases interfaces obtained through GetITaskbarList and GetITaskbarList3 methods.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::Resume<ept id="p1">](#afx_global_data__resume)</ept></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Reinitializes internal function pointers that access methods that support Windows <bpt id="p1">[</bpt>themes and visual styles<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/hh270423.aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::SetLayeredAttrib<ept id="p1">](#afx_global_data__setlayeredattrib)</ept></source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Provides a simple way to call the Windows <bpt id="p1">[</bpt>SetLayeredWindowAttributes<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms633540)</ept> method.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::SetMenuFont<ept id="p1">](#afx_global_data__setmenufont)</ept></source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Creates the specified logical font.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::ShellCreateItemFromParsingName<ept id="p1">](#afx_global_data__shellcreateitemfromparsingname)</ept></source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Creates and initializes a Shell item object from a parsing name.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::UpdateFonts<ept id="p1">](#afx_global_data__updatefonts)</ept></source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Reintializes the logical fonts that are used by the framework.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::UpdateSysColors<ept id="p1">](#afx_global_data__updatesyscolors)</ept></source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Initializes the colors, color depth, brushes, pens, and images that are used by the framework.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Protected Methods</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::EnableAccessibilitySupport<ept id="p1">](#afx_global_data__enableaccessibilitysupport)</ept></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Enables or disables Microsoft Active Accessibility support.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Active Accessibility provides reliable methods for exposing information about user interface elements.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::IsAccessibilitySupport<ept id="p1">](#afx_global_data__isaccessibilitysupport)</ept></source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Indicates whether Microsoft Active Accessibility support is enabled.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::IsWindowsLayerSupportAvailable<ept id="p1">](#afx_global_data__iswindowslayersupportavailable)</ept></source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Indicates whether the operating system supports layered windows.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Data Members</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::bIsOSAlphaBlendingSupport<ept id="p1">](#afx_global_data__bisosalphablendingsupport)</ept></source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Indicates whether the current operating system supports alpha blending.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::bIsWindows7<ept id="p1">](#afx_global_data__biswindows7)</ept></source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Indicates whether the application is being executed under Windows 7 OS or higher</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::clrActiveCaptionGradient<ept id="p1">](#afx_global_data__clractivecaptiongradient)</ept></source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Specifies gradient color of active caption.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Generally used for docking panes.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::clrInactiveCaptionGradient<ept id="p1">](#afx_global_data__clrinactivecaptiongradient)</ept></source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Specifies gradient color of inactive active caption.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Generally used for docking panes.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::m_bUseBuiltIn32BitIcons<ept id="p1">](#afx_global_data__m_busebuiltin32biticons)</ept></source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Indicates whether the framework uses predefined 32-bit color icons or icons of a lower resolution.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::m_bUseSystemFont<ept id="p1">](#afx_global_data__m_busesystemfont)</ept></source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Indicates whether a system font is used for menus, toolbars, and ribbons.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::m_hcurHand<ept id="p1">](#afx_global_data__m_hcurhand)</ept></source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Stores the handle for the hand cursor.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::m_hcurStretch<ept id="p1">](#afx_global_data__m_hcurstretch)</ept></source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Stores the handle for the horizontal stretch cursor.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::m_hcurStretchVert<ept id="p1">](#afx_global_data__m_hcurstretchvert)</ept></source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Stores the handle for the vertical stretch cursor.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::m_hiconTool<ept id="p1">](#afx_global_data__m_hicontool)</ept></source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Stores the handle for the tool icon.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::m_nAutoHideToolBarMargin<ept id="p1">](#afx_global_data__m_nautohidetoolbarmargin)</ept></source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Specifies the offset from the leftmost autohide toolbar to the left side of the docking bar.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::m_nAutoHideToolBarSpacing<ept id="p1">](#afx_global_data__m_nautohidetoolbarspacing)</ept></source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Specifies the gap between autohide toolbars.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::m_nDragFrameThicknessDock<ept id="p1">](#afx_global_data__m_ndragframethicknessdock)</ept></source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Specifies the thickness of the drag frame that is used to communicate the docked state.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA::m_nDragFrameThicknessFloat<ept id="p1">](#afx_global_data__m_ndragframethicknessfloat)</ept></source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Specifies the thickness of the drag frame that is used to communicate the floating state.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Most of the data in the <ph id="ph1">`AFX_GLOBAL_DATA`</ph> structure is initialized when your application starts.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA<ept id="p1">](../../mfc/reference/afx-global-data-structure.md)</ept></source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxglobals.h</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Hierarchy Chart<ept id="p1">](../../mfc/hierarchy-chart.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Structures, Styles, Callbacks, and Message Maps<ept id="p1">](../../mfc/reference/structures-styles-callbacks-and-message-maps.md)</ept></source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__bisosalphablendingsupport"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::bIsOSAlphaBlendingSupport</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Indicates whether the operating system supports alpha blending.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> indicates alpha blending is supported; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__cleanup"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::CleanUp</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Releases resources that are allocated by the framework, such as brushes, fonts, and DLLs.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__d2d1makerotatematrix"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::D2D1MakeRotateMatrix</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Creates a rotation transformation that rotates by a specified angle around a specified point.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The clockwise rotation angle, in degrees.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The point about which to rotate.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the new rotation transformation.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>You must allocate storage for this parameter.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Returns S_OK if successful, or an error value otherwise.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__drawparentbackground"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::DrawParentBackground</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Draws the background of a control's parent in the specified area.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pWnd`</ph></source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Pointer to a control's window.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pDC`</ph></source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Pointer to a device context.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`lpRect`</ph></source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Pointer to a rectangle that bounds the area to draw.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if this method is successful; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__drawtextonglass"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::DrawTextOnGlass</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Draws the specified text in the visual style of the specified theme.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`hTheme`</ph></source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Handle to the theme data of a window, or <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The framework uses the specified theme to draw the text if this parameter is not <ph id="ph1">`NULL`</ph> and themes are supported.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Otherwise, the framework does not use a theme to draw the text.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>OpenThemeData<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb759821)</ept> method to create an <ph id="ph1">`HTHEME`</ph>.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pDC`</ph></source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Pointer to a device context.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`iPartId`</ph></source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The control part that has the desired text appearance.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>For more information, see the Parts column of the table in <bpt id="p1">[</bpt>Parts and States<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb773210)</ept>.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>If this value is 0, the text is drawn in the default font, or a font selected into the device context.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`iStateId`</ph></source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The control state that has the desired text appearance.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>For more information, see the States column of the table in <bpt id="p1">[</bpt>Parts and States<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb773210)</ept>.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`strText`</ph></source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The text to draw.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`rect`</ph></source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The boundary of the area in which the specified text is drawn.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`dwFlags`</ph></source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>A bitwise combination (OR) of flags that specify how the specified text is drawn.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`hTheme`</ph> parameter is <ph id="ph2">`NULL`</ph> or if themes are not supported and enabled, the <ph id="ph3">`nFormat`</ph> parameter of the <bpt id="p1">[</bpt>CDC::DrawText<ept id="p1">](../../mfc/reference/cdc-class.md#cdc__drawtext)</ept> method describes the valid flags.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>If themes are supported, the <ph id="ph1">`dwFlags`</ph> parameter of the <bpt id="p1">[</bpt>DrawThemeTextEx<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb773317)</ept> method describes the valid flags.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`nGlowSize`</ph></source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The size of a glow effect that is drawn on the background before drawing the specified text.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The default value is 0.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`clrText`</ph></source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The color in which the specified text is drawn.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The default value is the default color.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if a theme is used to draw the specified text; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>A theme defines the visual style of an application.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>A theme is not used to draw the text if the <ph id="ph1">`hTheme`</ph> parameter is <ph id="ph2">`NULL`</ph>, or if the <bpt id="p1">[</bpt>DrawThemeTextEx<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb773317)</ept> method is not supported, or if <bpt id="p2">[</bpt>Desktop Window Manager<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/aa969540)</ept> (DWM) composition is disabled.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AFX_GLOBAL_DATA Structure<ept id="p1">](../../mfc/reference/afx-global-data-structure.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Hierarchy Chart<ept id="p1">](../../mfc/hierarchy-chart.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>COLORREF<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd183449)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Parts and States<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb773210)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CDC::DrawText<ept id="p1">](../../mfc/reference/cdc-class.md#cdc__drawtext)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>DrawThemeTextEx<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb773317)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Desktop Window Manager<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa969540)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Enable and Control DWM Composition<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa969538)</ept></source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__enableaccessibilitysupport"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::EnableAccessibilitySupport</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Enables or disables Microsoft Active Accessibility support.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bEnable`</ph></source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> to enable accessibility support; <ph id="ph2">`FALSE`</ph> to disable accessibility support.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`TRUE`</ph>.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Active Accessibility is a COM-based technology that improves the way programs and the Windows operating system work together with assistive technology products.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>It provides reliable methods for exposing information about user interface elements.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>However, a newer accessibility model called Microsoft UI Automation is now available.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>For a comparison of the two technologies, see <bpt id="p1">[</bpt>UI Automation and Microsoft Active Accessibility<ept id="p1">](http://msdn.microsoft.com/library/87bee662-0a3e-4232-a421-20e7a5968321)</ept>.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>AFX_GLOBAL_DATA::IsAccessibilitySupport<ept id="p1">](#afx_global_data__isaccessibilitysupport)</ept> method to determine whether Microsoft Active Accessibility support is enabled.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>UI Automation and Microsoft Active Accessibility<ept id="p1">](http://msdn.microsoft.com/library/87bee662-0a3e-4232-a421-20e7a5968321)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>AFX_GLOBAL_DATA::IsAccessibilitySupport<ept id="p1">](#afx_global_data__isaccessibilitysupport)</ept></source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__excludetag"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::ExcludeTag</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Removes the specified XML tag pair from a specified buffer.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`strBuffer`</ph></source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>A buffer of text.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`lpszTag`</ph></source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The name of a pair of opening and closing XML tags.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>[out] <ph id="ph1">`strTag`</ph></source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>When this method returns, the <ph id="ph1">`strTag`</ph> parameter contains the text that is between the opening and closing XML tags that are named by the <ph id="ph2">`lpszTag`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Any leading or trailing whitespace is trimmed from the result.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bIsCharsList`</ph></source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> to convert symbols for escape characters in the <ph id="ph2">`strTag`</ph> parameter into actual escape characters; <ph id="ph3">`FALSE`</ph> not to perform the conversion.The default value is <ph id="ph4">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>For more information, see Remarks.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if this method is successful; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>An XML tag pair consists of named opening and closing tags that indicate the start and end of a run of text in the specified buffer.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`strBuffer`</ph> parameter specifies the buffer, and the <ph id="ph2">`lpszTag`</ph> parameter specifies the name of the XML tags.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Use the symbols in the following table to encode a set of escape characters in the specified buffer.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Specify <ph id="ph1">`TRUE`</ph> for the <ph id="ph2">`bIsCharsList`</ph> parameter to convert the symbols in the <ph id="ph3">`strTag`</ph> parameter into actual escape characters.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The following table uses the <bpt id="p1">[</bpt>_T()<ept id="p1">](../../c-runtime-library/data-type-mappings.md)</ept> macro to specify the symbol and escape character strings.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Symbol</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Escape character</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>_T("<ph id="ph1">\\</ph>\t")</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>_T("\t")</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>_T("<ph id="ph1">\\</ph>\n")</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>_T("\n")</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>_T("<ph id="ph1">\\</ph>\r")</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>_T("\r")</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>_T("<ph id="ph1">\\</ph>\b")</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>_T("\b")</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>_T("LT")</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>_T("<ph id="ph1">\&lt;</ph>")</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>_T("GT")</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>_T("&gt;")</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>_T("AMP")</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>_T("&amp;")</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__getcolor"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::GetColor</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Retrieves the current color of the specified user interface element.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`nColor`</ph></source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>A value that specifies a user interface element whose color is retrieved.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>For a list of valid values, see the <ph id="ph1">`nIndex`</ph> parameter of the <bpt id="p1">[</bpt>GetSysColor<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms724371)</ept> method.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The RGB color value of the specified user interface element.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>For more information, see Remarks.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`nColor`</ph> parameter is out of range, the return value is zero.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Because zero is also a valid RGB value, you cannot use this method to determine whether a system color is supported by the current operating system.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Instead, use the <bpt id="p1">[</bpt>GetSysColorBrush<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd144927)</ept> method, which returns <ph id="ph1">`NULL`</ph> if the color is not supported.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>GetSysColor Function<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms724371)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>COLORREF<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd183449)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>GetSysColorBrush<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd144927)</ept></source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__getdirect2dfactory"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::GetDirect2dFactory</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the ID2D1Factory interface that is stored in the global data.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>If the interface is not initialized, it is created and has the default parameters.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>A pointer to ID2D1Factory interface if creation of a factory succeeds, or NULL if creation fails or current Operation System don't have D2D support.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__gethandcursor"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  AFX_GLOBAL_DATA::GetHandCursor</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Retrieves the predefined cursor that resembles a hand and whose identifier is <ph id="ph1">`IDC_HAND`</ph>.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The handle of the hand cursor.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__getnonclientmetrics"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::GetNonClientMetrics</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Retrieves the metrics associated with the nonclient area of nonminimized windows.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>[in, out] <ph id="ph1">`info`</ph></source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>NONCLIENTMETRICS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ff729175)</ept> structure that contains the scalable metrics associated with the nonclient area of a nonminimized window.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if this method succeeds; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>NONCLIENTMETRICS Structure<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ff729175)</ept></source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__gettextheight"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::GetTextHeight</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Retrieves the height of text characters in the current font.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bHorz`</ph></source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> to retrieve the height of characters when text runs horizontally; <ph id="ph2">`FALSE`</ph> to retrieve the height of characters when text runs vertically.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`TRUE`</ph>.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>The height of the current font, which is measured from its ascender to its descender.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__getwicfactory"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::GetWICFactory</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the IWICImagingFactory interface that is stored in the global data.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>If the interface is not initialized, it is created and has the default parameters.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>A pointer to IWICImagingFactory interface if creation of a factory succeeds, or NULL if creation fails or current Operation System don't have WIC support.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__getwritefactory"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::GetWriteFactory</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the IDWriteFactory interface that is stored in the global data.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>If the interface is not initialized, it is created and has the default parameters.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>A pointer to IDWriteFactory interface if creation of a factory succeeds, or NULL if creation fails or current Operation System don't have DirectWrite support.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__initd2d"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::InitD2D</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Initializes D2D, DirectWrite, and WIC factories.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Call this method before the main window is initialized.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>The threading model of the D2D factory and the resources it creates.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>A value that specifies whether the write factory object will be shared or isolated</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Returns TRUE if the factories were intilalizrd, FALSE - otherwise</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__is32biticons"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::Is32BitIcons</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Indicates whether predefined 32-bit icons are supported.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if predefined 32-bit icons are supported; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>This method returns <ph id="ph1">`TRUE`</ph> if the framework supports 32-bit built-in icons, and if the operating system supports 16 bits per pixel or more, and if images are not displayed in high contrast.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__isaccessibilitysupport"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::IsAccessibilitySupport</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Indicates whether Microsoft Active Accessibility support is enabled.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if accessibility support is enabled; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Microsoft Active Accessibility was the earlier solution for making applications accessible.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>Microsoft UI Automation is the new accessibility model for Microsoft Windows and is intended to address the needs of assistive technology products and automated testing tools.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>UI Automation and Microsoft Active Accessibility<ept id="p1">](http://msdn.microsoft.com/library/87bee662-0a3e-4232-a421-20e7a5968321)</ept>.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>AFX_GLOBAL_DATA::EnableAccessibilitySupport<ept id="p1">](#afx_global_data__enableaccessibilitysupport)</ept> method to enable or disable Active Accessibility support.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>UI Automation and Microsoft Active Accessibility<ept id="p1">](http://msdn.microsoft.com/library/87bee662-0a3e-4232-a421-20e7a5968321)</ept></source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__isd2dinitialized"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::IsD2DInitialized</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Determines whether the D2D was initialized</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>TRUE if D2D was initialized; otherwise FALSE.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__isdwmcompositionenabled"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::IsDwmCompositionEnabled</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>Provides a simple way to call the Windows <bpt id="p1">[</bpt>DwmIsCompositionEnabled<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa969518)</ept> method.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if <bpt id="p1">[</bpt>Desktop Window Manager<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa969540)</ept> (DWM) composition is enabled; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Desktop Window Manager<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa969540)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Enable and Control DWM Composition<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa969538)</ept></source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__ishighcontrastmode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::IsHighContrastMode</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Indicates whether images are currently displayed in high contrast.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if images are currently displayed in black or white high contrast mode; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>In black high contrast mode, edges facing the light are white and the background is black.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>In white high contrast mode, edges facing the light are black and the background is white.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__iswindowslayersupportavailable"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::IsWindowsLayerSupportAvailable</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Indicates whether the operating system supports layered windows.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if layered windows are supported; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>If layered windows are supported, <bpt id="p1">*</bpt>smart docking<ept id="p1">*</ept> markers use layered windows.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__m_busebuiltin32biticons"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::m_bUseBuiltIn32BitIcons</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>Indicates whether the framework uses predefined 32-bit color icons or icons of a lower resolution.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> specifies that the framework use 32-bit color icons; <ph id="ph2">`FALSE`</ph> specifies lower resolution icons.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`AFX_GLOBAL_DATA::AFX_GLOBAL_DATA`</ph> constructor initializes this member to <ph id="ph2">`TRUE`</ph>.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>This member must be set at application startup.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__m_busesystemfont"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::m_bUseSystemFont</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Indicates whether a system font is used for menus, toolbars, and ribbons.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> specifies to use a system font; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`AFX_GLOBAL_DATA::AFX_GLOBAL_DATA`</ph> constructor initializes this member to <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>Testing this member is not the only way for the framework to determine the font to use.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`AFX_GLOBAL_DATA::UpdateFonts`</ph> method also tests default and alternative fonts to determine what visual styles are available to be applied to menus, toolbars, and ribbons.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__m_hcurhand"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::m_hcurHand</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>Stores the handle for the hand cursor.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__m_hcurstretch"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::m_hcurStretch</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Stores the handle for the horizontal stretch cursor.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__m_hcurstretchvert"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::m_hcurStretchVert</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>Stores the handle for the vertical stretch cursor.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__m_hicontool"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::m_hiconTool</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>Stores the handle for the tool icon.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__m_nautohidetoolbarmargin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::m_nAutoHideToolBarMargin</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>Specifies the offset from the leftmost autohide toolbar to the left side of the dock bar.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`AFX_GLOBAL_DATA::AFX_GLOBAL_DATA`</ph> constructor initializes this member to 4 pixels.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__m_nautohidetoolbarspacing"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::m_nAutoHideToolBarSpacing</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>Specifies the gap between autohide toolbars.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`AFX_GLOBAL_DATA::AFX_GLOBAL_DATA`</ph> constructor initializes this member to 14 pixels.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__m_ndragframethicknessdock"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::m_nDragFrameThicknessDock</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>Specifies the thickness of the drag frame that is used to indicate the docked state.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`AFX_GLOBAL_DATA::AFX_GLOBAL_DATA`</ph> constructor initializes this member to 3 pixels.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__m_ndragframethicknessfloat"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::m_nDragFrameThicknessFloat</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Specifies the thickness of the drag frame that is used to indicate the floating state.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`AFX_GLOBAL_DATA::AFX_GLOBAL_DATA`</ph> constructor initializes this member to 4 pixels.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__onsettingchange"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::OnSettingChange</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>Detects the current state of the desktop's menu animation and taskbar autohide features.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>This method sets framework variables to the state of certain attributes of the user's desktop.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>This method detects the current state of the menu animation, menu fade, and task bar autohide features.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__registerwindowclass"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::RegisterWindowClass</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>Registers the specified MFC window class.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`lpszClassNamePrefix`</ph></source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>The name of the window class to register.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>The qualified name of the registered class if this method succeeds; otherwise, a <bpt id="p1">[</bpt>resource exception<ept id="p1">](http://msdn.microsoft.com/library/ddd99292-819b-4fa4-8371-b1954ed5856d)</ept>.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>The return value is a colon-delimited list of the <ph id="ph1">`lpszClassNamePrefix`</ph> parameter string, and the hexadecimal text representations of the handles of the current application instance; the application cursor, which is the arrow cursor whose identifier is IDC_ARROW; and the background brush.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>For more information about registering MFC window classes, see <bpt id="p1">[</bpt>AfxRegisterClass<ept id="p1">](../../mfc/reference/application-information-and-management.md#afxregisterclass)</ept>.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AfxRegisterClass<ept id="p1">](../../mfc/reference/application-information-and-management.md#afxregisterclass)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>AfxThrowResourceException<ept id="p1">](../../mfc/reference/exception-processing.md#afxthrowresourceexception)</ept></source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__resume"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::Resume</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>Reinitializes internal function pointers that access methods that support Windows themes and visual styles.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if this method succeeds; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>In debug mode, this method asserts if this method is unsuccessful.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>This method is called when the framework receives the <bpt id="p1">[</bpt>WM_POWERBROADCAST<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa373247)</ept> message.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__setlayeredattrib"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::SetLayeredAttrib</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>Provides a simple way to call the Windows <bpt id="p1">[</bpt>SetLayeredWindowAttributes<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms633540)</ept> method.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`hwnd`</ph></source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>Handle to the layered window.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`crKey`</ph></source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>The transparency color key that the <bpt id="p1">[</bpt>Desktop Window Manager<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa969540)</ept> uses to compose the layered window.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bAlpha`</ph></source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>The alpha value that is used to describe the opacity of the layered window.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`dwFlags`</ph></source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>A bitwise combination (OR) of flags that specify which method parameters to use.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Specify LWA_COLORKEY to use the <ph id="ph1">`crKey`</ph> parameter as the transparency color.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>Specify LWA_ALPHA to use the <ph id="ph1">`bAlpha`</ph> parameter to determine the opacity of the layered window.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if this method succeeds; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COLORREF<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd183449)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>SetLayeredWindowAttributes<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms633540)</ept></source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__setmenufont"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::SetMenuFont</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>Creates the specified logical font.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`lpLogFont`</ph></source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>Pointer to a structure that contains the attributes of a font.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bHorz`</ph></source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> to specify that the text runs horizontally; <ph id="ph2">`FALSE`</ph> to specify that the text runs vertically.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if this method succeeds; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>In debug mode, this method asserts if this method is unsuccessful.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>This method creates a horizontal regular font, an underlined font, and a bold font that is used in default menu items.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>This method optionally creates a regular vertical font.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>For more information about logical fonts, see <bpt id="p1">[</bpt>CFont::CreateFontIndirect<ept id="p1">](../../mfc/reference/cfont-class.md#cfont__createfontindirect)</ept>.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__updatefonts"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::UpdateFonts</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>Reintializes the logical fonts that are used by the framework.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>For more information about logical fonts, see <ph id="ph1">`CFont::CreateFontIndirect`</ph>.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__updatesyscolors"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::UpdateSysColors</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>Initializes the colors, color depth, brushes, pens, and images that are used by the framework.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__biswindows7"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::bIsWindows7</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>Indicates whether the application is being executed under Windows 7 or higher.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__clractivecaptiongradient"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::clrActiveCaptionGradient</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>Specifies the gradient color of the active caption.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>Generally used for docking panes.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__clrinactivecaptiongradient"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::clrInactiveCaptionGradient</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>Specifies the gradient color of the inactive caption.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>Generally used for docking panes.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__getitaskbarlist"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::GetITaskbarList</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>Creates and stores in the global data a pointer to the <ph id="ph1">`ITaskBarList`</ph> interface.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>A pointer to the <ph id="ph1">`ITaskbarList`</ph> interface if creation of a task bar list object succeeds; <ph id="ph2">`NULL`</ph> if creation fails or if the current Operation System is less than Windows 7.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__getitaskbarlist3"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::GetITaskbarList3</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>Creates and stores in the global data a pointer to the <ph id="ph1">`ITaskBarList3`</ph> interface.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>A pointer to the <ph id="ph1">`ITaskbarList3`</ph> interface if creation of a task bar list object succeeds; <ph id="ph2">`NULL`</ph> if creation fails or if the current Operation System is less than Windows 7.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__getshellautohidebars"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::GetShellAutohideBars</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>Determines positions of Shell auto hide bars.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>An integer value with encoded flags that specify positions of auto hide bars.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>It may combine the following values: AFX_AUTOHIDE_BOTTOM, AFX_AUTOHIDE_TOP, AFX_AUTOHIDE_LEFT, AFX_AUTOHIDE_RIGHT.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__releasetaskbarrefs"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::ReleaseTaskBarRefs</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>Releases interfaces obtained through the <ph id="ph1">`GetITaskbarList`</ph> and <ph id="ph2">`GetITaskbarList3`</ph> methods.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="afx_global_data__shellcreateitemfromparsingname"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> AFX_GLOBAL_DATA::ShellCreateItemFromParsingName</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>Creates and initializes a Shell item object from a parsing name.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>[in] A pointer to a display name.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>A pointer to a bind context that controls the parsing operation.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>A reference to an interface ID.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>[out] When this function returns, contains the interface pointer requested in <ph id="ph1">`riid`</ph>.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>This will typically be <ph id="ph1">`IShellItem`</ph> or <ph id="ph2">`IShellItem2`</ph>.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>Returns S_OK if successful; an error value otherwise.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>