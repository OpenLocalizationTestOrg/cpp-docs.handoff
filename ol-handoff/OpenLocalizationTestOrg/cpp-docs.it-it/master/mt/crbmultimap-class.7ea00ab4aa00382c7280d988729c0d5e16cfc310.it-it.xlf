<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">590344d23cd27b180b690936a25c0c61caf36885</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\crbmultimap-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a28f025d6659a58848dd14a20a765b84c578765c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ccde8edcbce46655f882c9765cf155a26cace6a9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CRBMultiMap Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CRBMultiMap Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class represents a mapping structure that allows each key can be associated with more than one value, using a Red-Black binary tree.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The key element type.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>V<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The value element type.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The code used to copy or move key elements.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CElementTraits Class<ept id="p1">](../../atl/reference/celementtraits-class.md)</ept> for more details.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The code used to copy or move value elements.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRBMultiMap::CRBMultiMap<ept id="p1">](#crbmultimap__crbmultimap)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The constructor.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRBMultiMap::~CRBMultiMap<ept id="p1">](#crbmultimap___dtorcrbmultimap)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The destructor.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRBMultiMap::FindFirstWithKey<ept id="p1">](#crbmultimap__findfirstwithkey)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Call this method to find the position of the first element with a given key.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRBMultiMap::GetNextValueWithKey<ept id="p1">](#crbmultimap__getnextvaluewithkey)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Call this method to get the value associated with a given key, and update the position value.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRBMultiMap::GetNextWithKey<ept id="p1">](#crbmultimap__getnextwithkey)</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Call this method to get the element associated with a given key, and update the position value.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRBMultiMap::Insert<ept id="p1">](#crbmultimap__insert)</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Call this method to insert an element pair into the map.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRBMultiMap::RemoveKey<ept id="p1">](#crbmultimap__removekey)</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Call this method to remove all of the key/value elements for a given key.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CRBMultiMap`</ph> provides support for a mapping array of any given type, managing an ordered array of key elements and values.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Unlike the <bpt id="p1">[</bpt>CRBMap<ept id="p1">](../../atl/reference/crbmap-class.md)</ept> class, each key can be associated with more than one value.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Elements (consisting of a key and a value) are stored in a binary tree structure, using the <bpt id="p1">[</bpt>CRBMultiMap::Insert<ept id="p1">](#crbmultimap__insert)</ept> method.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Elements can be removed using the <bpt id="p1">[</bpt>CRBMultiMap::RemoveKey<ept id="p1">](#crbmultimap__removekey)</ept> method, which deletes all elements which match the given key.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Traversing the tree is made possible with methods such as <bpt id="p1">[</bpt>CRBTree::GetHeadPosition<ept id="p1">](../../atl/reference/crbtree-class.md#crbtree__getheadposition)</ept>, <bpt id="p2">[</bpt>CRBTree::GetNext<ept id="p2">](../../atl/reference/crbtree-class.md#crbtree__getnext)</ept>, and <bpt id="p3">[</bpt>CRBTree::GetNextValue<ept id="p3">](../../atl/reference/crbtree-class.md#crbtree__getnextvalue)</ept>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Accessing the potentially multiple values per key is possible using the <bpt id="p1">[</bpt>CRBMultiMap::FindFirstWithKey<ept id="p1">](#crbmultimap__findfirstwithkey)</ept>, <bpt id="p2">[</bpt>CRBMultiMap::GetNextValueWithKey<ept id="p2">](#crbmultimap__getnextvaluewithkey)</ept>, and <bpt id="p3">[</bpt>CRBMultiMap::GetNextWithKey<ept id="p3">](#crbmultimap__getnextwithkey)</ept> methods.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CRBMultiMap::CRBMultiMap<ept id="p1">](#crbmultimap__crbmultimap)</ept> for an illustration of this in practice.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`KTraits`</ph> and <ph id="ph2">`VTraits`</ph> parameters are traits classes that contain any supplemental code needed to copy or move elements.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CRBMultiMap`</ph> is derived from <bpt id="p1">[</bpt>CRBTree<ept id="p1">](../../atl/reference/crbtree-class.md)</ept>, which implements a binary tree using the Red-Black algorithm.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An alternative to <ph id="ph1">`CRBMultiMap`</ph> and <ph id="ph2">`CRBMap`</ph> is offered by the <bpt id="p1">[</bpt>CAtlMap<ept id="p1">](../../atl/reference/catlmap-class.md)</ept> class.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When only a small number of elements needs to be stored, consider using the <bpt id="p1">[</bpt>CSimpleMap<ept id="p1">](../../atl/reference/csimplemap-class.md)</ept> class instead.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For a more complete discussion of the various collection classes and their features and performance characteristics, see <bpt id="p1">[</bpt>ATL Collection Classes<ept id="p1">](../../atl/atl-collection-classes.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRBTree<ept id="p1">](../../atl/reference/crbtree-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> atlcoll.h</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crbmultimap__crbmultimap"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRBMultiMap::CRBMultiMap</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The constructor.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The block size.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`nBlockSize`</ph> parameter is a measure of the amount of memory allocated when a new element is required.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Larger block sizes reduce calls to memory allocation routines, but use more resources.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The default will allocate space for 10 elements at a time.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>See the documentation for the base class <bpt id="p1">[</bpt>CRBTree<ept id="p1">](../../atl/reference/crbtree-class.md)</ept> for information on the other methods available.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_ATL_Utilities#85<ept id="p2">](../../atl/codesnippet/cpp/crbmultimap-class_1.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crbmultimap___dtorcrbmultimap"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRBMultiMap::~CRBMultiMap</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The destructor.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Frees any allocated resources.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>See the documentation for the base class <bpt id="p1">[</bpt>CRBTree<ept id="p1">](../../atl/reference/crbtree-class.md)</ept> for information on the other methods available.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crbmultimap__findfirstwithkey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRBMultiMap::FindFirstWithKey</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Call this method to find the position of the first element with a given key.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Specifies the key that identifies the element to be found.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Returns the POSITION of the first key/value element if the key is found, NULL otherwise.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A key in the <ph id="ph1">`CRBMultiMap`</ph> can have one or more associated values.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This method will provide the position value of the first value (which may, in fact, be the only value) associated with that particular key.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The position value returned can then be used with <bpt id="p1">[</bpt>CRBMultiMap::GetNextValueWithKey<ept id="p1">](#crbmultimap__getnextvaluewithkey)</ept> or <bpt id="p2">[</bpt>CRBMultiMap::GetNextWithKey<ept id="p2">](#crbmultimap__getnextwithkey)</ept> to obtain the value and update the position.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>See the documentation for the base class <bpt id="p1">[</bpt>CRBTree<ept id="p1">](../../atl/reference/crbtree-class.md)</ept> for information on the other methods available.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CRBMultiMap::CRBMultiMap<ept id="p1">](#crbmultimap__crbmultimap)</ept>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crbmultimap__getnextvaluewithkey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRBMultiMap::GetNextValueWithKey</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Call this method to get the value associated with a given key and update the position value.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The position value, obtained with either a call to <bpt id="p1">[</bpt>CRBMultiMap::FindFirstWithKey<ept id="p1">](#crbmultimap__findfirstwithkey)</ept> or <bpt id="p2">[</bpt>CRBMultiMap::GetNextWithKey<ept id="p2">](#crbmultimap__getnextwithkey)</ept>, or a previous call to <ph id="ph1">`GetNextValueWithKey`</ph>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Specifies the key that identifies the element to be found.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Returns the element pair associated with the given key.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The position value is updated to point to the next value associated with the key.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If no more values exist, the position value is set to NULL.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>See the documentation for the base class <bpt id="p1">[</bpt>CRBTree<ept id="p1">](../../atl/reference/crbtree-class.md)</ept> for information on the other methods available.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CRBMultiMap::CRBMultiMap<ept id="p1">](#crbmultimap__crbmultimap)</ept>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crbmultimap__getnextwithkey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRBMultiMap::GetNextWithKey</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Call this method to get the element associated with a given key and update the position value.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The position value, obtained with either a call to <bpt id="p1">[</bpt>CRBMultiMap::FindFirstWithKey<ept id="p1">](#crbmultimap__findfirstwithkey)</ept> or <bpt id="p2">[</bpt>CRBMultiMap::GetNextValueWithKey<ept id="p2">](#crbmultimap__getnextvaluewithkey)</ept>, or a previous call to <ph id="ph1">`GetNextWithKey`</ph>.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Specifies the key that identifies the element to be found.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Returns the next <bpt id="p1">[</bpt>CRBTree::CPair Class<ept id="p1">](crbtree-class.md#crbtree__cpair_class)</ept> element associated with the given key.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The position value is updated to point to the next value associated with the key.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>If no more values exist, the position value is set to NULL.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>See the documentation for the base class <bpt id="p1">[</bpt>CRBTree<ept id="p1">](../../atl/reference/crbtree-class.md)</ept> for information on the other methods available.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crbmultimap__insert"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRBMultiMap::Insert</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Call this method to insert an element pair into the map.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The key value to add to the <ph id="ph1">`CRBMultiMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>value<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The value to add to the <ph id="ph1">`CRBMultiMap`</ph> object, associated with <ph id="ph2">`key`</ph>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Returns the position of the key/value element pair in the <ph id="ph1">`CRBMultiMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>See the documentation for the base class <bpt id="p1">[</bpt>CRBTree<ept id="p1">](../../atl/reference/crbtree-class.md)</ept> for information on the other methods available.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CRBMultiMap::CRBMultiMap<ept id="p1">](#crbmultimap__crbmultimap)</ept>.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="crbmultimap__removekey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CRBMultiMap::RemoveKey</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Call this method to remove all of the key/value elements for a given key.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Specifies the key that identifies the element(s) to be deleted.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Returns the number of values associated with the given key.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`RemoveKey`</ph> deletes all of the key/value elements that have a key that matches <ph id="ph2">`key`</ph>.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>See the documentation for the base class <bpt id="p1">[</bpt>CRBTree<ept id="p1">](../../atl/reference/crbtree-class.md)</ept> for information on the other methods available.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CRBMultiMap::CRBMultiMap<ept id="p1">](#crbmultimap__crbmultimap)</ept>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CRBTree Class<ept id="p1">](../../atl/reference/crbtree-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CAtlMap Class<ept id="p1">](../../atl/reference/catlmap-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CRBMap Class<ept id="p1">](../../atl/reference/crbmap-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Class Overview<ept id="p1">](../../atl/atl-class-overview.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>