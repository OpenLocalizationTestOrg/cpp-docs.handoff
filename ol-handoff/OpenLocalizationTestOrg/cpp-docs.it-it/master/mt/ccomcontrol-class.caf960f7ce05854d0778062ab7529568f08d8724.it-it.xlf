<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">82dba1f79ce865e3d2876fd8d0c6c2f0bff80d9f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\ccomcontrol-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e4c612d7fe6b1baf017a5873da8fa12407e1dc0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0eeb65ffff9c8627a41c84f1d1afcd4f1cd3bbc0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CComControl Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CComControl Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class provides methods for creating and managing ATL controls.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This class and its members cannot be used in applications that execute in the Windows Runtime.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The class implementing the control.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>WinBase<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The base class that implements windowing functions.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Defaults to <bpt id="p1">[</bpt>CWindowImpl<ept id="p1">](../../atl/reference/cwindowimpl-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComControl::CComControl<ept id="p1">](#ccomcontrol__ccomcontrol)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Constructor.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComControl::ControlQueryInterface<ept id="p1">](#ccomcontrol__controlqueryinterface)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the requested interface.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComControl::CreateControlWindow<ept id="p1">](#ccomcontrol__createcontrolwindow)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Creates a window for the control.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComControl::FireOnChanged<ept id="p1">](#ccomcontrol__fireonchanged)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Notifies the container's sink that a control property has changed.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComControl::FireOnRequestEdit<ept id="p1">](#ccomcontrol__fireonrequestedit)</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Notifies the container's sink that a control property is about to change and that the object is asking the sink how to proceed.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComControl::MessageBox<ept id="p1">](#ccomcontrol__messagebox)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Call this method to create, display, and operate a message box.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CComControl`</ph> is a set of useful control helper functions and essential data members for ATL controls.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When you create a standard control or a DHTML control using the ATL Control Wizard, the wizard will automatically derive your class from <ph id="ph1">`CComControl`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CComControl`</ph> derives most of its methods from <bpt id="p1">[</bpt>CComControlBase<ept id="p1">](../../atl/reference/ccomcontrolbase-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information about creating a control, see the <bpt id="p1">[</bpt>ATL Tutorial<ept id="p1">](../../atl/active-template-library-atl-tutorial.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For more information about the ATL Project Wizard, see the article <bpt id="p1">[</bpt>Creating an ATL Project<ept id="p1">](../../atl/reference/creating-an-atl-project.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For a demonstration of <ph id="ph1">`CComControl`</ph> methods and data members, see the <bpt id="p1">[</bpt>CIRC<ept id="p1">](../../visual-cpp-samples.md)</ept> sample.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComControlBase<ept id="p1">](../../atl/reference/ccomcontrolbase-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> atlctl.h</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccomcontrol__ccomcontrol"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CComControl::CComControl</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The constructor.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Calls the <bpt id="p1">[</bpt>CComControlBase<ept id="p1">](ccomcontrolbase-class.md#ccomcontrolbase__ccomcontrolbase)</ept> constructor, passing the <ph id="ph1">`m_hWnd`</ph> data member inherited through <bpt id="p2">[</bpt>CWindowImpl<ept id="p2">](../../atl/reference/cwindowimpl-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccomcontrol__controlqueryinterface"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CComControl::ControlQueryInterface</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the requested interface.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>[in] The GUID of the interface being requested.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>[out] A pointer to the interface pointer identified by <ph id="ph1">`iid`</ph>, or <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> if the interface is not found.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Only handles interfaces in the COM map table.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_ATL_COM#15<ept id="p2">](../../atl/codesnippet/cpp/ccomcontrol-class_1.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccomcontrol__createcontrolwindow"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CComControl::CreateControlWindow</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>By default, creates a window for the control by calling <ph id="ph1">`CWindowImpl::Create`</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>[in] Handle to the parent or owner window.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A valid window handle must be supplied.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The control window is confined to the area of its parent window.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>[in] The initial size and position of the window to be created.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Override this method if you want to do something other than create a single window, for example, to create two windows, one of which becomes a toolbar for your control.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_ATL_COM#16<ept id="p2">](../../atl/codesnippet/cpp/ccomcontrol-class_2.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccomcontrol__fireonchanged"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CComControl::FireOnChanged</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Notifies the container's sink that a control property has changed.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>dispID<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>[in] Identifier of the property that has changed.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>One of the standard HRESULT values.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>If your control class derives from <bpt id="p1">[</bpt>IPropertyNotifySink<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms692638)</ept>, this method calls <bpt id="p2">[</bpt>CFirePropNotifyEvent::FireOnChanged<ept id="p2">](cfirepropnotifyevent-class.md#cfirepropnotifyevent__fireonchanged)</ept> to notify all connected <ph id="ph1">`IPropertyNotifySink`</ph> interfaces that the specified control property has changed.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If your control class does not derive from <ph id="ph1">`IPropertyNotifySink`</ph>, this method returns <ph id="ph2">`S_OK`</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This method is safe to call even if your control doesn't support connection points.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_ATL_COM#17<ept id="p2">](../../atl/codesnippet/cpp/ccomcontrol-class_3.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccomcontrol__fireonrequestedit"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CComControl::FireOnRequestEdit</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Notifies the container's sink that a control property is about to change and that the object is asking the sink how to proceed.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>dispID<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>[in] Identifier of the property about to change.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>One of the standard HRESULT values.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>If your control class derives from <bpt id="p1">[</bpt>IPropertyNotifySink<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms692638)</ept>, this method calls <bpt id="p2">[</bpt>CFirePropNotifyEvent::FireOnRequestEdit<ept id="p2">](cfirepropnotifyevent-class.md#cfirepropnotifyevent__fireonrequestedit)</ept> to notify all connected <ph id="ph1">`IPropertyNotifySink`</ph> interfaces that the specified control property is about to change.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>If your control class does not derive from <ph id="ph1">`IPropertyNotifySink`</ph>, this method returns <ph id="ph2">`S_OK`</ph>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>This method is safe to call even if your control doesn't support connection points.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_ATL_COM#18<ept id="p2">](../../atl/codesnippet/cpp/ccomcontrol-class_4.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ccomcontrol__messagebox"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CComControl::MessageBox</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Call this method to create, display, and operate a message box.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The text to be displayed in the message box.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The dialog box title.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>If NULL (the default), the title "Error" is used.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Specifies the contents and behavior of the dialog box.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>MessageBox<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms645505)</ept> entry in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> documentation for a list of the different message boxes available.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The default provides a simple <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> button.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Returns an integer value specifying one of the menu-item values listed under <bpt id="p1">[</bpt>MessageBox<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms645505)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> documentation.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`MessageBox`</ph> is useful both during development and as an easy way to display an error or warning message to the user.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CWindowImpl Class<ept id="p1">](../../atl/reference/cwindowimpl-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Class Overview<ept id="p1">](../../atl/atl-class-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CComControlBase Class<ept id="p1">](../../atl/reference/ccomcontrolbase-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CComCompositeControl Class<ept id="p1">](../../atl/reference/ccomcompositecontrol-class.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>