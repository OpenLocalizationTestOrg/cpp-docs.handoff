<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">15283efc416c6958f971990aa1d9f33fe095e2d7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\cbitmapbutton-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ef61d92363c36e6356968eac5205ff8d7d90c65d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e5f6a1d2c1d6b559281968c50fab36b90148873f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CBitmapButton Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CBitmapButton Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Creates pushbutton controls labeled with bitmapped images instead of text.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CBitmapButton::CBitmapButton<ept id="p1">](#cbitmapbutton__cbitmapbutton)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CBitmapButton`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CBitmapButton::AutoLoad<ept id="p1">](#cbitmapbutton__autoload)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Associates a button in a dialog box with an object of the <ph id="ph1">`CBitmapButton`</ph> class, loads the bitmap(s) by name, and sizes the button to fit the bitmap.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CBitmapButton::LoadBitmaps<ept id="p1">](#cbitmapbutton__loadbitmaps)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes the object by loading one or more named bitmap resources from the application's resource file and attaching the bitmaps to the object.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CBitmapButton::SizeToContent<ept id="p1">](#cbitmapbutton__sizetocontent)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Sizes the button to accommodate the bitmap.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CBitmapButton`</ph> objects contain up to four bitmaps, which contain images for the different states a button can assume: up (or normal), down (or selected), focused, and disabled.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Only the first bitmap is required; the others are optional.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Bitmap-button images include the border around the image as well as the image itself.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The border typically plays a part in showing the state of the button.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For example, the bitmap for the focused state usually is like the one for the up state but with a dashed rectangle inset from the border or a thick solid line at the border.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The bitmap for the disabled state usually resembles the one for the up state but has lower contrast (like a dimmed or grayed menu selection).</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>These bitmaps can be of any size, but all are treated as if they were the same size as the bitmap for the up state.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Various applications demand different combinations of bitmap images:</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Up</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Down</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Focused</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Disabled</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Application</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>×</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Bitmap</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>×</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>×</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Button without <bpt id="p1">**</bpt>WS_TABSTOP<ept id="p1">**</ept> style</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>×</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>×</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>×</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>×</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Dialog button with all states</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>×</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>×</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>×</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Dialog button with <bpt id="p1">**</bpt>WS_TABSTOP<ept id="p1">**</ept> style</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>When creating a bitmap-button control, set the <bpt id="p1">**</bpt>BS_OWNERDRAW<ept id="p1">**</ept> style to specify that the button is owner-drawn.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This causes Windows to send the <ph id="ph1">`WM_MEASUREITEM`</ph> and <ph id="ph2">`WM_DRAWITEM`</ph> messages for the button; the framework handles these messages and manages the appearance of the button for you.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To create a bitmap-button control in a window's client area</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Create one to four bitmap images for the button.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Construct the <bpt id="p1">[</bpt>CBitmapButton<ept id="p1">](#cbitmapbutton__cbitmapbutton)</ept> object.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Call the <bpt id="p1">[</bpt>Create<ept id="p1">](../../mfc/reference/cbutton-class.md#cbutton__create)</ept> function to create the Windows button control and attach it to the <ph id="ph1">`CBitmapButton`</ph> object.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Call the <bpt id="p1">[</bpt>LoadBitmaps<ept id="p1">](#cbitmapbutton__loadbitmaps)</ept> member function to load the bitmap resources after the bitmap button is constructed.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>To include a bitmap-button control in a dialog box</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Create one to four bitmap images for the button.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Create a dialog template with an owner-draw button positioned where you want the bitmap button.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The size of the button in the template does not matter.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Set the button's caption to a value such as " <bpt id="p1">**</bpt>MYIMAGE<ept id="p1">**</ept>" and define a symbol for the button such as <bpt id="p2">**</bpt>IDC_MYIMAGE<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>In your application's resource script, give each of the images created for the button an ID constructed by appending one of the letters "U," "D," "F," or "X" (for up, down, focused, and disabled) to the string used for the button caption in step 3.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For the button caption " <bpt id="p1">**</bpt>MYIMAGE<ept id="p1">**</ept>," for example, the IDs would be " <bpt id="p2">**</bpt>MYIMAGEU<ept id="p2">**</ept>," " <bpt id="p3">**</bpt>MYIMAGED<ept id="p3">**</ept>," " <bpt id="p4">**</bpt>MYIMAGEF<ept id="p4">**</ept>," and " <bpt id="p5">**</bpt>MYIMAGEX<ept id="p5">**</ept>."</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>You <bpt id="p1">**</bpt>must<ept id="p1">**</ept> specify the ID of your bitmaps within double quotes.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Otherwise the resource editor will assign an integer to the resource and MFC will fail when loading the image.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>In your application's dialog class (derived from <ph id="ph1">`CDialog`</ph>), add a <ph id="ph2">`CBitmapButton`</ph> member object.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`CDialog`</ph> object's <bpt id="p1">[</bpt>OnInitDialog<ept id="p1">](../../mfc/reference/cdialog-class.md#cdialog__oninitdialog)</ept> routine, call the <ph id="ph2">`CBitmapButton`</ph> object's <bpt id="p2">[</bpt>AutoLoad<ept id="p2">](#cbitmapbutton__autoload)</ept> function, using as parameters the button's control ID and the <ph id="ph3">`CDialog`</ph> object's <bpt id="p3">**</bpt>this<ept id="p3">**</ept> pointer.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If you want to handle Windows notification messages, such as <bpt id="p1">**</bpt>BN_CLICKED<ept id="p1">**</ept>, sent by a bitmap-button control to its parent (usually a class derived from <bpt id="p2">**</bpt>CDialog)<ept id="p2">**</ept>, add to the <ph id="ph1">`CDialog`</ph>-derived object a message-map entry and message-handler member function for each message.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The notifications sent by a <ph id="ph1">`CBitmapButton`</ph> object are the same as those sent by a <bpt id="p1">[</bpt>CButton<ept id="p1">](../../mfc/reference/cbutton-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The class <bpt id="p1">[</bpt>CToolBar<ept id="p1">](../../mfc/reference/ctoolbar-class.md)</ept> takes a different approach to bitmap buttons.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For more information on <ph id="ph1">`CBitmapButton`</ph>, see <bpt id="p1">[</bpt>Controls<ept id="p1">](../../mfc/controls-mfc.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CObject<ept id="p1">](../../mfc/reference/cobject-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CCmdTarget<ept id="p1">](../../mfc/reference/ccmdtarget-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CWnd<ept id="p1">](../../mfc/reference/cwnd-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CButton<ept id="p1">](../../mfc/reference/cbutton-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxext.h</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cbitmapbutton__autoload"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CBitmapButton::AutoLoad</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Associates a button in a dialog box with an object of the <ph id="ph1">`CBitmapButton`</ph> class, loads the bitmap(s) by name, and sizes the button to fit the bitmap.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The button's control ID.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Pointer to the object that owns the button.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`AutoLoad`</ph> function to initialize an owner-draw button in a dialog box as a bitmap button.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Instructions for using this function are in the remarks for the <bpt id="p1">[</bpt>CBitmapButton<ept id="p1">](../../mfc/reference/cbitmapbutton-class.md)</ept> class.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFCControlLadenDialog#75<ept id="p2">](../../mfc/codesnippet/cpp/cbitmapbutton-class_1.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cbitmapbutton__cbitmapbutton"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CBitmapButton::CBitmapButton</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">`CBitmapButton`</ph> object.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>After creating the C++ <ph id="ph1">`CBitmapButton`</ph> object, call <bpt id="p1">[</bpt>CButton::Create<ept id="p1">](../../mfc/reference/cbutton-class.md#cbutton__create)</ept> to create the Windows button control and attach it to the <ph id="ph2">`CBitmapButton`</ph> object.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFCControlLadenDialog#57<ept id="p2">](../../mfc/codesnippet/cpp/cbitmapbutton-class_2.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cbitmapbutton__loadbitmaps"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CBitmapButton::LoadBitmaps</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Use this function when you want to load bitmap images identified by their resource names or ID numbers, or when you cannot use the <ph id="ph1">`AutoLoad`</ph> function because, for example, you are creating a bitmap button that is not part of a dialog box.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>lpszBitmapResource<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Points to the null-terminated string that contains the name of the bitmap for a bitmap button's normal or "up" state.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>lpszBitmapResourceSel<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Points to the null-terminated string that contains the name of the bitmap for a bitmap button's selected or "down" state.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>May be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>lpszBitmapResourceFocus<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Points to the null-terminated string that contains the name of the bitmap for a bitmap button's focused state.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>May be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>lpszBitmapResourceDisabled<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Points to the null-terminated string that contains the name of the bitmap for a bitmap button's disabled state.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>May be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>nIDBitmapResource<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Specifies the resource ID number of the bitmap resource for a bitmap button's normal or "up" state.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>nIDBitmapResourceSel<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Specifies the resource ID number of the bitmap resource for a bitmap button's selected or "down" state.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>May be 0.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>nIDBitmapResourceFocus<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Specifies the resource ID number of the bitmap resource for a bitmap button's focused state.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>May be 0.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>nIDBitmapResourceDisabled<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Specifies the resource ID number of the bitmap resource for a bitmap button's disabled state.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>May be 0.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFCControlLadenDialog#58<ept id="p2">](../../mfc/codesnippet/cpp/cbitmapbutton-class_3.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cbitmapbutton__sizetocontent"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CBitmapButton::SizeToContent</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Call this function to resize a bitmap button to the size of the bitmap.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFCControlLadenDialog#59<ept id="p2">](../../mfc/codesnippet/cpp/cbitmapbutton-class_4.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>MFC Sample CTRLTEST<ept id="p1">](../../visual-cpp-samples.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CButton Class<ept id="p1">](../../mfc/reference/cbutton-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Hierarchy Chart<ept id="p1">](../../mfc/hierarchy-chart.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>