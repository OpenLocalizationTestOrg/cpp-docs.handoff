<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e683ec2f1844ab8fad62b00be1fa887a05f2bd28</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\assembler\inline\type-and-variable-sizes-in-inline-assembly.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b0114b263003ba00fbede6a4496704d4aa2b0ad</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f6609f2296a9efa0a1638a3ed4acc904d85edf71</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Type and Variable Sizes in Inline Assembly | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Type and Variable Sizes in Inline Assembly</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Microsoft Specific</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>LENGTH<ept id="p1">**</ept>, <bpt id="p2">**</bpt>SIZE<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>TYPE<ept id="p3">**</ept> operators have a limited meaning in inline assembly.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>They cannot be used at all with the <ph id="ph1">`DUP`</ph> operator (because you cannot define data with MASM directives or operators).</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>But you can use them to find the size of C or C++ variables or types:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>LENGTH<ept id="p1">**</ept> operator can return the number of elements in an array.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>It returns the value 1 for non-array variables.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>SIZE<ept id="p1">**</ept> operator can return the size of a C or C++ variable.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A variable's size is the product of its <bpt id="p1">**</bpt>LENGTH<ept id="p1">**</ept> and <bpt id="p2">**</bpt>TYPE<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>TYPE<ept id="p1">**</ept> operator can return the size of a C or C++ type or variable.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If the variable is an array, <bpt id="p1">**</bpt>TYPE<ept id="p1">**</ept> returns the size of a single element of the array.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For example, if your program has an 8-element <ph id="ph1">`int`</ph> array,</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>the following C and assembly expressions yield the size of <ph id="ph1">`arr`</ph> and its elements.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>__asm</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>C</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Size</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>LENGTH<ept id="p1">**</ept> arr</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>(arr)/<ph id="ph1">`sizeof`</ph>(arr[0])</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>8</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SIZE<ept id="p1">**</ept> arr</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>(arr)</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>32</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>TYPE<ept id="p1">**</ept> arr</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>(arr[0])</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>4</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>END Microsoft Specific</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Using Assembly Language in __asm Blocks</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>