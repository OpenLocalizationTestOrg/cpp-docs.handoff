<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eff295fada5384a6bd0900d3b627a658ab47105a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\coledatasource-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">75e24bf313ccb91b29a1c6ffa44fa1c1b860d22e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc3ae0f67bae2ca912856188d915666a22d6a872</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>COleDataSource Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>COleDataSource Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Acts as a cache into which an application places the data that it will offer during data transfer operations, such as Clipboard or drag-and-drop operations.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>COleDataSource::COleDataSource</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`COleDataSource`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>COleDataSource::CacheData</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Offers data in a specified format using a <bpt id="p1">**</bpt>STGMEDIUM<ept id="p1">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>COleDataSource::CacheGlobalData</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Offers data in a specified format using an <ph id="ph1">`HGLOBAL`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>COleDataSource::DelayRenderData</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Offers data in a specified format using delayed rendering.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>COleDataSource::DelayRenderFileData</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Offers data in a specified format in a <ph id="ph1">`CFile`</ph> pointer.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>COleDataSource::DelaySetData</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Called for every format that is supported in <ph id="ph1">`OnSetData`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>COleDataSource::DoDragDrop</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Performs drag-and-drop operations with a data source.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>COleDataSource::Empty</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Empties the <ph id="ph1">`COleDataSource`</ph> object of data.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>COleDataSource::FlushClipboard</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Renders all data to the Clipboard.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>COleDataSource::GetClipboardOwner</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Verifies that the data placed on the Clipboard is still there.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>COleDataSource::OnRenderData</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Retrieves data as part of delayed rendering.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>COleDataSource::OnRenderFileData</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Retrieves data into a <ph id="ph1">`CFile`</ph> as part of delayed rendering.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>COleDataSource::OnRenderGlobalData</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Retrieves data into an <ph id="ph1">`HGLOBAL`</ph> as part of delayed rendering.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>COleDataSource::OnSetData</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Called to replace the data in the <ph id="ph1">`COleDataSource`</ph> object.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>COleDataSource::SetClipboard</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Places a <ph id="ph1">`COleDataSource`</ph> object on the Clipboard.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can create OLE data sources directly.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Alternately, the <bpt id="p1">[</bpt>COleClientItem<ept id="p1">](../../mfc/reference/coleclientitem-class.md)</ept> and <bpt id="p2">[</bpt>COleServerItem<ept id="p2">](../../mfc/reference/coleserveritem-class.md)</ept> classes create OLE data sources in response to their <ph id="ph1">`CopyToClipboard`</ph> and <ph id="ph2">`DoDragDrop`</ph> member functions.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>COleServerItem::CopyToClipboard<ept id="p1">](../../mfc/reference/coleserveritem-class.md#coleserveritem__copytoclipboard)</ept> for a brief description.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Override the <ph id="ph1">`OnGetClipboardData`</ph> member function of your client item or server item class to add additional Clipboard formats to the data in the OLE data source created for the <ph id="ph2">`CopyToClipboard`</ph> or <ph id="ph3">`DoDragDrop`</ph> member function.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Whenever you want to prepare data for a transfer, you should create an object of this class and fill it with your data using the most appropriate method for your data.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The way it is inserted into a data source is directly affected by whether the data is supplied immediately (immediate rendering) or on demand (delayed rendering).</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For every Clipboard format in which you are providing data by passing the Clipboard format to be used (and an optional <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure), call <bpt id="p2">[</bpt>DelayRenderData<ept id="p2">](#coledatasource__delayrenderdata)</ept>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For more information about data sources and data transfer, see the article <bpt id="p1">[</bpt>Data Objects and Data Sources (OLE)<ept id="p1">](../../mfc/data-objects-and-data-sources-ole.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In addition, the article <bpt id="p1">[</bpt>Clipboard Topics<ept id="p1">](../../mfc/clipboard.md)</ept> describes the OLE Clipboard mechanism.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>CObject</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>CCmdTarget</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxole.h</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>COleDataSource::CacheData</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Call this function to specify a format in which data is offered during data transfer operations.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The Clipboard format in which the data is to be offered.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This parameter can be one of the predefined Clipboard formats or the value returned by the native Windows <bpt id="p1">[</bpt>RegisterClipboardFormat<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms649049)</ept> function.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Points to a <bpt id="p1">[</bpt>STGMEDIUM<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683812)</ept> structure containing the data in the format specified.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Points to a <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure describing the format in which the data is to be offered.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Provide a value for this parameter if you want to specify additional format information beyond the Clipboard format specified by <ph id="ph1">`cfFormat`</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If it is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, default values are used for the other fields in the <bpt id="p2">**</bpt>FORMATETC<ept id="p2">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>You must supply the data, because this function provides it by using immediate rendering.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The data is cached until needed.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Supply the data using a <bpt id="p1">[</bpt>STGMEDIUM<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683812)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>You can also use the <ph id="ph1">`CacheGlobalData`</ph> member function if the amount of data you are supplying is small enough to be transferred efficiently using an <ph id="ph2">`HGLOBAL`</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>After the call to <ph id="ph1">`CacheData`</ph> the <bpt id="p1">**</bpt>ptd<ept id="p1">**</ept> member of <ph id="ph2">`lpFormatEtc`</ph> and the contents of <ph id="ph3">`lpStgMedium`</ph> are owned by the data object, not by the caller.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To use delayed rendering, call the <bpt id="p1">[</bpt>DelayRenderData<ept id="p1">](#coledatasource__delayrenderdata)</ept> or <bpt id="p2">[</bpt>DelayRenderFileData<ept id="p2">](#coledatasource__delayrenderfiledata)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For more information on delayed rendering as handled by MFC, see the article <bpt id="p1">[</bpt>Data Objects and Data Sources: Manipulation<ept id="p1">](../../mfc/data-objects-and-data-sources-manipulation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>STGMEDIUM<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683812)</ept> and <bpt id="p2">[</bpt>FORMATETC<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structures in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph><bpt id="p3">*</bpt>.<ept id="p3">*</ept></source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>RegisterClipboardFormat<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms649049)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>COleDataSource::CacheGlobalData</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Call this function to specify a format in which data is offered during data transfer operations.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The Clipboard format in which the data is to be offered.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>This parameter can be one of the predefined Clipboard formats or the value returned by the native Windows <bpt id="p1">[</bpt>RegisterClipboardFormat<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms649049)</ept> function.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>hGlobal</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Handle to the global memory block containing the data in the format specified.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Points to a <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure describing the format in which the data is to be offered.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Provide a value for this parameter if you want to specify additional format information beyond the Clipboard format specified by <ph id="ph1">`cfFormat`</ph>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>If it is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, default values are used for the other fields in the <bpt id="p2">**</bpt>FORMATETC<ept id="p2">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>This function provides the data using immediate rendering, so you must supply the data when calling the function; the data is cached until needed.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`CacheData`</ph> member function if you are supplying a large amount of data or if you require a structured storage medium.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>To use delayed rendering, call the <bpt id="p1">[</bpt>DelayRenderData<ept id="p1">](#coledatasource__delayrenderdata)</ept> or <bpt id="p2">[</bpt>DelayRenderFileData<ept id="p2">](#coledatasource__delayrenderfiledata)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>For more information on delayed rendering as handled by MFC, see the article <bpt id="p1">[</bpt>Data Objects and Data Sources: Manipulation<ept id="p1">](../../mfc/data-objects-and-data-sources-manipulation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph><bpt id="p2">*</bpt>.<ept id="p2">*</ept></source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>RegisterClipboardFormat<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms649049)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>COleDataSource::COleDataSource</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`COleDataSource`</ph> object.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>COleDataSource::DelayRenderData</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Call this function to specify a format in which data is offered during data transfer operations.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The Clipboard format in which the data is to be offered.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>This parameter can be one of the predefined Clipboard formats or the value returned by the native Windows <bpt id="p1">[</bpt>RegisterClipboardFormat<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms649049)</ept> function.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Points to a <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure describing the format in which the data is to be offered.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Provide a value for this parameter if you want to specify additional format information beyond the Clipboard format specified by <ph id="ph1">`cfFormat`</ph>.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>If it is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, default values are used for the other fields in the <bpt id="p2">**</bpt>FORMATETC<ept id="p2">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>This function provides the data using delayed rendering, so the data is not supplied immediately.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>OnRenderData<ept id="p1">](#coledatasource__onrenderdata)</ept> or <bpt id="p2">[</bpt>OnRenderGlobalData<ept id="p2">](#coledatasource__onrenderglobaldata)</ept> member function is called to request the data.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Use this function if you are not going to supply your data through a <ph id="ph1">`CFile`</ph> object.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>If you are going to supply the data through a <ph id="ph1">`CFile`</ph> object, call the <bpt id="p1">[</bpt>DelayRenderFileData<ept id="p1">](#coledatasource__delayrenderfiledata)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>For more information on delayed rendering as handled by MFC, see the article <bpt id="p1">[</bpt>Data Objects and Data Sources: Manipulation<ept id="p1">](../../mfc/data-objects-and-data-sources-manipulation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>To use immediate rendering, call the <bpt id="p1">[</bpt>CacheData<ept id="p1">](#coledatasource__cachedata)</ept> or <bpt id="p2">[</bpt>CacheGlobalData<ept id="p2">](#coledatasource__cacheglobaldata)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph><bpt id="p2">*</bpt>.<ept id="p2">*</ept></source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>RegisterClipboardFormat<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms649049)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>COleDataSource::DelayRenderFileData</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Call this function to specify a format in which data is offered during data transfer operations.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The Clipboard format in which the data is to be offered.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>This parameter can be one of the predefined Clipboard formats or the value returned by the native Windows <bpt id="p1">[</bpt>RegisterClipboardFormat<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms649049)</ept> function.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Points to a <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure describing the format in which the data is to be offered.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Provide a value for this parameter if you want to specify additional format information beyond the Clipboard format specified by <ph id="ph1">`cfFormat`</ph>.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>If it is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, default values are used for the other fields in the <bpt id="p2">**</bpt>FORMATETC<ept id="p2">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>This function provides the data using delayed rendering, so the data is not supplied immediately.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>OnRenderFileData<ept id="p1">](#coledatasource__onrenderfiledata)</ept> member function is called to request the data.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Use this function if you are going to use a <ph id="ph1">`CFile`</ph> object to supply the data.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>If you are not going to use a <ph id="ph1">`CFile`</ph> object, call the <bpt id="p1">[</bpt>DelayRenderData<ept id="p1">](#coledatasource__delayrenderdata)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>For more information on delayed rendering as handled by MFC, see the article <bpt id="p1">[</bpt>Data Objects and Data Sources: Manipulation<ept id="p1">](../../mfc/data-objects-and-data-sources-manipulation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>To use immediate rendering, call the <bpt id="p1">[</bpt>CacheData<ept id="p1">](#coledatasource__cachedata)</ept> or <bpt id="p2">[</bpt>CacheGlobalData<ept id="p2">](#coledatasource__cacheglobaldata)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph><bpt id="p2">*</bpt>.<ept id="p2">*</ept></source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>RegisterClipboardFormat<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms649049)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>COleDataSource::DelaySetData</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Call this function to support changing the contents of the data source.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The Clipboard format in which the data is to be placed.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>This parameter can be one of the predefined Clipboard formats or the value returned by the native Windows <bpt id="p1">[</bpt>RegisterClipboardFormat<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms649049)</ept> function.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Points to a <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure describing the format in which the data is to be replaced.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Provide a value for this parameter if you want to specify additional format information beyond the Clipboard format specified by <ph id="ph1">`cfFormat`</ph>.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>If it is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, default values are used for the other fields in the <bpt id="p2">**</bpt>FORMATETC<ept id="p2">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>OnSetData<ept id="p1">](#coledatasource__onsetdata)</ept> will be called by the framework when this happens.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>This is only used when the framework returns the data source from <bpt id="p1">[</bpt>COleServerItem::GetDataSource<ept id="p1">](../../mfc/reference/coleserveritem-class.md#coleserveritem__getdatasource)</ept>.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`DelaySetData`</ph> is not called, your <ph id="ph2">`OnSetData`</ph> function will never be called.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>should be called for each Clipboard or <bpt id="p1">**</bpt>FORMATETC<ept id="p1">**</ept> format you support.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph><bpt id="p2">*</bpt>.<ept id="p2">*</ept></source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>RegisterClipboardFormat<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms649049)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>COleDataSource::DoDragDrop</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Call the <ph id="ph1">`DoDragDrop`</ph> member function to perform a drag-and-drop operation for this data source, typically in an <bpt id="p1">[</bpt>CWnd::OnLButtonDown<ept id="p1">](../../mfc/reference/cwnd-class.md#cwnd__onlbuttondown)</ept> handler.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Drag-and-drop operations that are allowed on this data source.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Can be one or more of the following:</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>A copy operation could be performed.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>A move operation could be performed.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>A link from the dropped data to the original data could be established.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Indicates that a drag scroll operation could occur.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Pointer to the rectangle that defines where the drag actually starts.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>For more information, see the following Remarks section.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>pDropSource</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Points to a drop source.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> then a default implementation of <bpt id="p2">[</bpt>COleDropSource<ept id="p2">](../../mfc/reference/coledropsource-class.md)</ept> will be used.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Drop effect generated by the drag-and-drop operation; otherwise <ph id="ph1">`DROPEFFECT_NONE`</ph> if the operation never begins because the user released the mouse button before leaving the supplied rectangle.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The drag-and-drop operation does not start immediately.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>It waits until the mouse cursor leaves the rectangle specified by <ph id="ph1">`lpRectStartDrag`</ph> or until a specified number of milliseconds have passed.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`lpRectStartDrag`</ph> is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, the size of the rectangle is one pixel.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The delay time is specified by a registry key setting.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>You can change the delay time by calling <bpt id="p1">[</bpt>CWinApp::WriteProfileString<ept id="p1">](../../mfc/reference/cwinapp-class.md#cwinapp__writeprofilestring)</ept> or <bpt id="p2">[</bpt>CWinApp::WriteProfileInt<ept id="p2">](../../mfc/reference/cwinapp-class.md#cwinapp__writeprofileint)</ept>.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>If you do not specify the delay time, a default value of 200 milliseconds is used.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Drag delay time is stored as follows:</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Windows NT   Drag delay time is stored in HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\NT\CurrentVersion\IniFileMapping\win.ini\Windows\DragDelay.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Windows 3.x   Drag delay time is stored in the WIN.INI file, under the [Windows} section.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Windows 95/98   Drag delay time is stored in a cached version of WIN.INI.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>For more information about how drag delay information is stored in either the registry or the .INI file, see <bpt id="p1">[</bpt>WriteProfileString<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms725504)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>For more information, see the article <bpt id="p1">[</bpt>Drag and Drop: Implementing a Drop Source<ept id="p1">](../../mfc/drag-and-drop-implementing-a-drop-source.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>COleDataSource::Empty</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Call this function to empty the <ph id="ph1">`COleDataSource`</ph> object of data.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Both cached and delay render formats are emptied so they can be reused.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>ReleaseStgMedium<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms693491)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>COleDataSource::FlushClipboard</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Renders data that is on the Clipboard, and then lets you paste data from the Clipboard after your application shuts down.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>SetClipboard<ept id="p1">](#coledatasource__setclipboard)</ept> to put data on the Clipboard.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>COleDataSource::GetClipboardOwner</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Determines whether the data on the Clipboard has changed since <bpt id="p1">[</bpt>SetClipboard<ept id="p1">](#coledatasource__setclipboard)</ept> was last called and, if so, identifies the current owner.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The data source currently on the Clipboard, or <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> if there is nothing on the Clipboard or if the Clipboard is not owned by the calling application.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>COleDataSource::OnRenderData</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Called by the framework to retrieve data in the specified format.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Points to the <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure specifying the format in which information is requested.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Points to a <bpt id="p1">[</bpt>STGMEDIUM<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683812)</ept> structure in which the data is to be returned.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The specified format is one previously placed in the <ph id="ph1">`COleDataSource`</ph> object using the <bpt id="p1">[</bpt>DelayRenderData<ept id="p1">](#coledatasource__delayrenderdata)</ept> or <bpt id="p2">[</bpt>DelayRenderFileData<ept id="p2">](#coledatasource__delayrenderfiledata)</ept> member function for delayed rendering.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The default implementation of this function will call <bpt id="p1">[</bpt>OnRenderFileData<ept id="p1">](#coledatasource__onrenderfiledata)</ept> or <bpt id="p2">[</bpt>OnRenderGlobalData<ept id="p2">](#coledatasource__onrenderglobaldata)</ept> if the supplied storage medium is either a file or memory, respectively.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>If neither of these formats are supplied, then the default implementation will return 0 and do nothing.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>For more information on delayed rendering as handled by MFC, see the article <bpt id="p1">[</bpt>Data Objects and Data Sources: Manipulation<ept id="p1">](../../mfc/data-objects-and-data-sources-manipulation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`lpStgMedium`-&gt; </ph><bpt id="p1">*</bpt>tymed<ept id="p1">*</ept> is <bpt id="p2">**</bpt>TYMED_NULL<ept id="p2">**</ept>, the <bpt id="p3">**</bpt>STGMEDIUM<ept id="p3">**</ept> should be allocated and filled as specified by <bpt id="p4">*</bpt>lpFormatEtc-&gt;tymed<ept id="p4">*</ept>.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>If it is not <bpt id="p1">**</bpt>TYMED_NULL<ept id="p1">**</ept>, the <bpt id="p2">**</bpt>STGMEDIUM<ept id="p2">**</ept> should be filled in place with the data.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>This is an advanced overridable.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Override this function to supply your data in the requested format and medium.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Depending on your data, you may want to override one of the other versions of this function instead.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>If your data is small and fixed in size, override <ph id="ph1">`OnRenderGlobalData`</ph>.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>If your data is in a file, or is of variable size, override <ph id="ph1">`OnRenderFileData`</ph>.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>STGMEDIUM<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683812)</ept> and <bpt id="p2">[</bpt>FORMATETC<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structures, the <bpt id="p3">[</bpt>TYMED<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms691227)</ept> enumeration type, and <bpt id="p4">[</bpt>IDataObject::GetData<ept id="p4">](http://msdn.microsoft.com/library/windows/desktop/ms678431)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph><bpt id="p5">*</bpt>.<ept id="p5">*</ept></source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>COleDataSource::OnRenderFileData</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Called by the framework to retrieve data in the specified format when the specified storage medium is a file.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Points to the <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure specifying the format in which information is requested.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Points to a <bpt id="p1">[</bpt>CFile<ept id="p1">](../../mfc/reference/cfile-class.md)</ept> object in which the data is to be rendered.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The specified format is one previously placed in the <ph id="ph1">`COleDataSource`</ph> object using the <bpt id="p1">[</bpt>DelayRenderData<ept id="p1">](#coledatasource__delayrenderdata)</ept> member function for delayed rendering.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The default implementation of this function simply returns <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>This is an advanced overridable.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Override this function to supply your data in the requested format and medium.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Depending on your data, you might want to override one of the other versions of this function instead.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>If you want to handle multiple storage media, override <bpt id="p1">[</bpt>OnRenderData<ept id="p1">](#coledatasource__onrenderdata)</ept>.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>If your data is in a file, or is of variable size, override <ph id="ph1">`OnRenderFileData`</ph>.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>For more information on delayed rendering as handled by MFC, see the article <bpt id="p1">[</bpt>Data Objects and Data Sources: Manipulation<ept id="p1">](../../mfc/data-objects-and-data-sources-manipulation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure and <bpt id="p2">[</bpt>IDataObject::GetData<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms678431)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph><bpt id="p3">*</bpt>.<ept id="p3">*</ept></source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>COleDataSource::OnRenderGlobalData</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Called by the framework to retrieve data in the specified format when the specified storage medium is global memory.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Points to the <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure specifying the format in which information is requested.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Points to a handle to global memory in which the data is to be returned.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>If one has not yet been allocated, this parameter can be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The specified format is one previously placed in the <ph id="ph1">`COleDataSource`</ph> object using the <bpt id="p1">[</bpt>DelayRenderData<ept id="p1">](#coledatasource__delayrenderdata)</ept> member function for delayed rendering.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The default implementation of this function simply returns <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`phGlobal`</ph> is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, then a new <ph id="ph2">`HGLOBAL`</ph> should be allocated and returned in <ph id="ph3">`phGlobal`</ph>.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Otherwise, the <ph id="ph1">`HGLOBAL`</ph> specified by <ph id="ph2">`phGlobal`</ph> should be filled with the data.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The amount of data placed in the <ph id="ph1">`HGLOBAL`</ph> must not exceed the current size of the memory block.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Also, the block cannot be reallocated to a larger size.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>This is an advanced overridable.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Override this function to supply your data in the requested format and medium.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Depending on your data, you may want to override one of the other versions of this function instead.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>If you want to handle multiple storage media, override <bpt id="p1">[</bpt>OnRenderData<ept id="p1">](#coledatasource__onrenderdata)</ept>.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>If your data is in a file, or is of variable size, override <bpt id="p1">[</bpt>OnRenderFileData<ept id="p1">](#coledatasource__onrenderfiledata)</ept>.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>For more information on delayed rendering as handled by MFC, see the article <bpt id="p1">[</bpt>Data Objects and Data Sources: Manipulation<ept id="p1">](../../mfc/data-objects-and-data-sources-manipulation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure and <bpt id="p2">[</bpt>IDataObject::GetData<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms678431)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph><bpt id="p3">*</bpt>.<ept id="p3">*</ept></source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>COleDataSource::OnSetData</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Called by the framework to set or replace the data in the <ph id="ph1">`COleDataSource`</ph> object in the specified format.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Points to the <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure specifying the format in which data is being replaced.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Points to the <bpt id="p1">[</bpt>STGMEDIUM<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683812)</ept> structure containing the data that will replace the current contents of the <ph id="ph1">`COleDataSource`</ph> object.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Indicates who has ownership of the storage medium after completing the function call.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The caller decides who is responsible for releasing the resources allocated on behalf of the storage medium.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The caller does this by setting <ph id="ph1">`bRelease`</ph>.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`bRelease`</ph> is nonzero, the data source takes ownership, freeing the medium when it has finished using it.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`bRelease`</ph> is 0, the caller retains ownership and the data source can use the storage medium only for the duration of the call.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The data source does not take ownership of the data until it has successfully obtained it.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>That is, it does not take ownership if <ph id="ph1">`OnSetData`</ph> returns 0.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>If the data source takes ownership, it frees the storage medium by calling the <bpt id="p1">[</bpt>ReleaseStgMedium<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms693491)</ept> function.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The default implementation does nothing.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Override this function to replace the data in the specified format.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>This is an advanced overridable.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>STGMEDIUM<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683812)</ept> and <bpt id="p2">[</bpt>FORMATETC<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structures and the <bpt id="p3">[</bpt>ReleaseStgMedium<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms693491)</ept> and <bpt id="p4">[</bpt>IDataObject::GetData<ept id="p4">](http://msdn.microsoft.com/library/windows/desktop/ms678431)</ept> functions in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph><bpt id="p5">*</bpt>.<ept id="p5">*</ept></source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>COleDataSource::SetClipboard</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Puts the data contained in the <ph id="ph1">`COleDataSource`</ph> object on the Clipboard after calling one of the following functions: <bpt id="p1">[</bpt>CacheData<ept id="p1">](#coledatasource__cachedata)</ept>, <bpt id="p2">[</bpt>CacheGlobalData<ept id="p2">](#coledatasource__cacheglobaldata)</ept>, <bpt id="p3">[</bpt>DelayRenderData<ept id="p3">](#coledatasource__delayrenderdata)</ept>, or <bpt id="p4">[</bpt>DelayRenderFileData<ept id="p4">](#coledatasource__delayrenderfiledata)</ept>.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>MFC Sample HIERSVR</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>MFC Sample OCLIENT</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>CCmdTarget Class</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Hierarchy Chart</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>COleDataObject Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>