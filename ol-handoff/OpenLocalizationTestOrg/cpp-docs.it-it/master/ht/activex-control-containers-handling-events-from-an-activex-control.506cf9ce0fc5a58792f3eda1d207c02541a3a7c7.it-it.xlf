<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3fac4f43ed642b99efd79de6da4b6e8e3b2cb689</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\activex-control-containers-handling-events-from-an-activex-control.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f040c5dd405a6dec1a5687ce659bc6a1ffd4d572</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c1714aa5947b62c78bc3bfff0edc6aeaf68b1982</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>ActiveX Control Containers: Handling Events from an ActiveX Control | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ActiveX Control Containers: Handling Events from an ActiveX Control</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This article discusses using the Properties window to install event handlers for ActiveX controls in an ActiveX control container.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The event handlers are used to receive notifications (from the control) of certain events and perform some action in response.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This notification is called "firing" the event.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This article uses a dialog-based ActiveX control container project named Container and an embedded control named Circ as examples in the procedures and code.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Using the Events button in the Properties window, you can create a map of events that can occur in your ActiveX control container application.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This map, called an "event sink map,'' is created and maintained by Visual C++ when you add event handlers to the control container class.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Each event handler, implemented with an event map entry, maps a specific event to a container event handler member function.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This event handler function is called when the specified event is fired by the ActiveX control object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information on event sink maps, see <bpt id="p1">[</bpt>Event Sink Maps<ept id="p1">](../mfc/reference/event-sink-maps.md)</ept> in the <bpt id="p2">*</bpt>Class Library Reference<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Event Handler Modifications to the Project</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When you use the Properties window to add event handlers, an event sink map is declared and defined in your project.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The following statements are added to the control .CPP file the first time an event handler is added.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This code declares an event sink map for the dialog box class (in this case, <ph id="ph1">`CContainerDlg`</ph>):</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>NVC_MFC_AxCont#8</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>NVC_MFC_AxCont#9</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>As you use the Properties window to add events, an event map entry (<ph id="ph1">`ON_EVENT`</ph>) is added to the event sink map and an event handler function is added to the container's implementation (.CPP) file.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following example declares an event handler, called <ph id="ph1">`OnClickInCircCtrl`</ph>, for the Circ control's <bpt id="p1">**</bpt>ClickIn<ept id="p1">**</ept> event:</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>NVC_MFC_AxCont#10</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In addition, the following template is added to the <ph id="ph1">`CContainerDlg`</ph> class implementation (.CPP) file for the event handler member function:</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>NVC_MFC_AxCont#11</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information on event sink macros, see <bpt id="p1">[</bpt>Event Sink Maps<ept id="p1">](../mfc/reference/event-sink-maps.md)</ept> in the <bpt id="p2">*</bpt>Class Library Reference<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To create an event handler function</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>From Class View, select the dialog class that contains the ActiveX control.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For this example, use <ph id="ph1">`CContainerDlg`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In the Properties window, click the <bpt id="p1">**</bpt>Events<ept id="p1">**</ept> button.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In the Properties window, select the control ID of the embedded ActiveX control.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For this example, use <ph id="ph1">`IDC_CIRCCTRL1`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The Properties window displays a list of events that can be fired by the embedded ActiveX control.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Any member function shown in bold already has handler functions assigned to it.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Select the event you want the dialog class to handle.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For this example, select <bpt id="p1">**</bpt>Click<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>From the drop-down list box on the right, select <bpt id="p1">**</bpt><ph id="ph1">\&lt;</ph>Add&gt; ClickCircctrl1<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Double-click the new handler function from Class View to jump to the event handler code in the implementation (.CPP) file of <ph id="ph1">`CContainerDlg`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>ActiveX Control Containers</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>