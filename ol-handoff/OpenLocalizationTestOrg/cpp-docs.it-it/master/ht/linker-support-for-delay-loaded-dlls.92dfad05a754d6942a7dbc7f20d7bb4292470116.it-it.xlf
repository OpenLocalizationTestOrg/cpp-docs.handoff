<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a13691cbb53567d7587a8e88b1d88e02ebfa2d1e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\build\reference\linker-support-for-delay-loaded-dlls.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">26626fddfdd032848808be557ce8ca1fd974e392</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9933ef9fbba509096eb4091d65cea75209f2b0b3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Linker Support for Delay-Loaded DLLs | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Linker Support for Delay-Loaded DLLs</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The Visual C++ linker now supports the delayed loading of DLLs.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This relieves you of the need to use the <ph id="ph1">[!INCLUDE[winsdkshort](../../atl-mfc-shared/reference/includes/winsdkshort_md.md)]</ph> functions <bpt id="p1">**</bpt>LoadLibrary<ept id="p1">**</ept> and <bpt id="p2">**</bpt>GetProcAddress<ept id="p2">**</ept> to implement DLL delayed loading.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Before Visual C++ 6.0, the only way to load a DLL at run time was by using <bpt id="p1">**</bpt>LoadLibrary<ept id="p1">**</ept> and <bpt id="p2">**</bpt>GetProcAddress<ept id="p2">**</ept>; the operating system would load the DLL when the executable or DLL using it was loaded.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Beginning with Visual C++ 6.0, when statically linking with a DLL, the linker provides options to delay load the DLL until the program calls a function in that DLL.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>An application can delay load a DLL using the <bpt id="p1">[</bpt>/DELAYLOAD (Delay Load Import)<ept id="p1">](../../build/reference/delayload-delay-load-import.md)</ept> linker option with a helper function (default implementation provided by Visual C++).</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The helper function will load the DLL at run time by calling <bpt id="p1">**</bpt>LoadLibrary<ept id="p1">**</ept> and <bpt id="p2">**</bpt>GetProcAddress<ept id="p2">**</ept> for you.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You should consider delay loading a DLL if:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Your program may not call a function in the DLL.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A function in the DLL may not get called until late in your program's execution.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The delayed loading of a DLL can be specified during the build of either a .EXE or .DLL project.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A .DLL project that delays the loading of one or more DLLs should not itself call a delay-loaded entry point in Dllmain.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The following topics describe delay loading DLLs:</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Specifying DLLs to Delay Load</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Explicitly Unloading a Delay-Loaded DLL</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Loading All Imports for a Delay-Loaded DLL</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Binding Imports</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Error Handling and Notification</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Dumping Delay-Loaded Imports</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Constraints of Delay Loading DLLs</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Understanding the Helper Function</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Developing Your Own Helper Function</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>DLLs in Visual C++</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Linking</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>