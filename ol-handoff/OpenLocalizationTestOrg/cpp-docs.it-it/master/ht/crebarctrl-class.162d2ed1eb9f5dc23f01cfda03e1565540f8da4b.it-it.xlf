<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d16362ffde61aadac0943104dfb8df4c950a3ee5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\crebarctrl-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3736f86e7c025f515a488dea54a543b617e14b02</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0ea3efd91c9a8717d530de00b79f77c93a169e2d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CReBarCtrl Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CReBarCtrl Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Encapsulates the functionality of a rebar control, which is a container for a child window.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::CReBarCtrl</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CReBarCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::BeginDrag</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Places the rebar control into drag-and-drop mode.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::Create</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Creates the rebar control and attaches it to the <ph id="ph1">`CReBarCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::CreateEx</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Creates a rebar control with the specified Windows extended styles and attaches it to a <ph id="ph1">`CReBarCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::DeleteBand</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Deletes a band from a rebar control.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::DragMove</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Updates the drag position in the rebar control after a call to <ph id="ph1">`BeginDrag`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::EndDrag</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Terminates the rebar control's drag-and-drop operation.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetBandBorders</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Retrieves the borders of a band.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetBandCount</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Retrieves the count of bands currently in the rebar control.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetBandInfo</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Retrieves information about a specified band in a rebar control.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetBandMargins</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Retrieves the margins of a band.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetBarHeight</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Retrieves the height of the rebar control.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetBarInfo</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Retrieves information about the rebar control and the image list it uses.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetBkColor</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Retrieves a rebar control's default background color.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetColorScheme</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Retrieves the <bpt id="p1">[</bpt>COLORSCHEME<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775502)</ept> structure associated with the rebar control.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetDropTarget</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Retrieves a rebar control's <ph id="ph1">`IDropTarget`</ph> interface pointer.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetExtendedStyle</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets the extended style of the current rebar control.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetImageList</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Retrieves the image list associated with a rebar control.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetPalette</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Retrieves the rebar control's current palette.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetRect</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Retrieves the bounding rectangle for a given band in a rebar control.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetRowCount</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Retrieves the number of band rows in a rebar control.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetRowHeight</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Retrieves the height of a specified row in a rebar control.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetTextColor</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Retrieves a rebar control's default text color.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetToolTips</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Retrieves the handle to any tool tip control associated with the rebar control.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::HitTest</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Determines which portion of a rebar band is at a given point on the screen, if a rebar band exists at that point.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::IDToIndex</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Converts a band identifier (ID) to a band index in a rebar control.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::InsertBand</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Inserts a new band in a rebar control.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::MaximizeBand</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Resizes a band in a rebar control to its largest size.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::MinimizeBand</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Resizes a band in a rebar control to its smallest size.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::MoveBand</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Moves a band from one index to another.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::PushChevron</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Programmatically pushes a chevron.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::RestoreBand</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Resizes a band in a rebar control to its ideal size.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::SetBandInfo</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Sets characteristics of an existing band in a rebar control.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::SetBandWidth</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Sets the width of the specified docked band in the current rebar control.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::SetBarInfo</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Sets the characteristics of a rebar control.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::SetBkColor</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Sets a rebar control's default background color.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::SetColorScheme</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Sets the color scheme for the buttons on a rebar control.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::SetExtendedStyle</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Sets the extended styles for the current rebar control.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::SetImageList</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Sets a rebar control's image list.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::SetOwner</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Sets a rebar control's owner window.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::SetPalette</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Sets the rebar control's current palette.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::SetTextColor</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Sets a rebar control's default text color.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::SetToolTips</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Associates a tool tip control with the rebar control.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::SetWindowTheme</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Sets the visual style of the rebar control.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::ShowBand</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Shows or hides a given band in a rebar control.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::SizeToRect</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Fits a rebar control to a specified rectangle.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The application in which the rebar control resides assigns the child window contained by the rebar control to the rebar band.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The child window is usually another common control.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Rebar controls contain one or more bands.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Each band can contain a combination of a gripper bar, a bitmap, a text label, and a child window.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The band can contain only one of each of these items.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The rebar control can display the child window over a specified background bitmap.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>All rebar control bands can be resized, except those that use the <bpt id="p1">**</bpt>RBBS_FIXEDSIZE<ept id="p1">**</ept> style.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>As you reposition or resize a rebar control band, the rebar control manages the size and position of the child window assigned to that band.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>To resize or change the order of bands within the control, click and drag a band's gripper bar.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The following illustration shows a rebar control that has three bands:</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Band 0 contains a flat, transparent toolbar control.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Band 1 contains both transparent standard and transparent dropdown buttons.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Band 2 contains a combo box and four standard buttons.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Example of a Rebar menu</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Rebar control</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Rebar controls support:</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Image lists.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Message-handling.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Custom draw functionality.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>A variety of control styles in addition to standard window styles.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>For a list of these styles, see <bpt id="p1">[</bpt>Rebar Control Styles<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774377)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using CReBarCtrl<ept id="p1">](../../mfc/using-crebarctrl.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>CObject</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>CCmdTarget</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>CWnd</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxcmn.h</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::BeginDrag</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_BEGINDRAG<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774429)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Zero-based index of the band that the drag-and-drop operation will affect.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`DWORD`</ph> value that contains the starting mouse coordinates.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The horizontal coordinate is contained in the LOWORD and the vertical coordinate is contained in the HIWORD.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>If you pass <ph id="ph1">`(DWORD)-1`</ph>, the rebar control will use the position of the mouse the last time the control's thread called <bpt id="p1">**</bpt>GetMessage<ept id="p1">**</ept> or <bpt id="p2">**</bpt>PeekMessage<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::Create</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Creates the rebar control and attaches it to the <ph id="ph1">`CReBarCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Specifies the combination of rebar control styles applied to the control.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Rebar Control Styles<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774377)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> for a list of supported styles.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">[</bpt>CRect<ept id="p1">](../../atl-mfc-shared/reference/crect-class.md)</ept> object or <bpt id="p2">[</bpt>RECT<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure, which is the position and size of the rebar control.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>CWnd<ept id="p1">](../../mfc/reference/cwnd-class.md)</ept> object that is the parent window of the rebar control.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>It must not be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Specifies the rebar control's control ID.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Nonzero if the object was created successfully; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Create a rebar control in two steps:</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Call <bpt id="p1">[</bpt>CReBarCtrl<ept id="p1">](#crebarctrl__crebarctrl)</ept> to construct a <ph id="ph1">`CReBarCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Call this member function, which creates the Windows rebar control and attaches it to the <ph id="ph1">`CReBarCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>When you call <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>, the common controls are initialized.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CReBarCtrl#3</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::CreateEx</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Creates a control (a child window) and associates it with the <ph id="ph1">`CReBarCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Specifies the extended style of the control being created.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>For a list of extended Windows styles, see the <ph id="ph1">`dwExStyle`</ph> parameter for <bpt id="p1">[</bpt>CreateWindowEx<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632680)</ept> in the <ph id="ph2">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Specifies the combination of rebar control styles applied to the control.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>For a list of supported styles, see <bpt id="p1">[</bpt>Rebar Control Styles<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774377)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">[</bpt>RECT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure describing the size and position of the window to be created, in client coordinates of <ph id="ph1">`pParentWnd`</ph>.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>A pointer to the window that is the control's parent.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The control's child-window ID.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`CreateEx`</ph> instead of <bpt id="p1">[</bpt>Create<ept id="p1">](#crebarctrl__create)</ept> to apply extended Windows styles, specified by the Windows extended style preface <bpt id="p2">**</bpt>WS_EX_<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::CReBarCtrl</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">`CReBarCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CReBarCtrl::Create<ept id="p1">](#crebarctrl__create)</ept>.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::DeleteBand</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_DELETEBAND<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774431)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Zero-based index of the band to be deleted.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Nonzero if the band deleted successfully; otherwise zero.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CReBarCtrl#4</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::DragMove</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_DRAGMOVE<ept id="p1">](https://msdn.microsoft.com/library/bb774433.aspx)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`DWORD`</ph> value that contains the new mouse coordinates.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The horizontal coordinate is contained in the LOWORD and the vertical coordinate is contained in the HIWORD.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>If you pass <ph id="ph1">`(DWORD)-1`</ph>, the rebar control will use the position of the mouse the last time the control's thread called <bpt id="p1">**</bpt>GetMessage<ept id="p1">**</ept> or <bpt id="p2">**</bpt>PeekMessage<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::EndDrag</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_ENDDRAG<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774435)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetBandBorders</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_GETBANDBORDERS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774437)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Zero-based index of the band for which the borders will be retrieved.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>RECT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure that will receive the band borders.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>If the rebar control has the <bpt id="p1">**</bpt>RBS_BANDBORDERS<ept id="p1">**</ept> style, each member of this structure will receive the number of pixels, on the corresponding side of the band, that constitute the border.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>If the rebar control does not have the <bpt id="p1">**</bpt>RBS_BANDBORDERS<ept id="p1">**</ept> style, only the left member of this structure receives valid information.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>For a description of rebar control styles, see <bpt id="p1">[</bpt>Rebar Control Styles<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774377)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetBandCount</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_GETBANDCOUNT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774439)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The number of bands assigned to the control.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetBandInfo</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_GETBANDINFO<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774451)</ept> as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Zero-based index of the band for which the information will be retrieved.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>REBARBANDINFO<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774393)</ept> structure to receive the band information.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>You must set the <ph id="ph1">`cbSize`</ph> member of this structure to <ph id="ph2">`sizeof(REBARBANDINFO)`</ph> and set the <bpt id="p1">**</bpt>fMask<ept id="p1">**</ept> member to the items you want to retrieve before sending this message.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise zero.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetBandMargins</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Retrieves the margins of the band.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>pMargins</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>MARGINS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb773244)</ept>structure that will receive the information.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>This member function emulates the functionality of the <bpt id="p1">[</bpt>RB_GETBANDMARGINS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774453)</ept> message, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetBarHeight</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Retrieves the height of the rebar bar.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Value that represents the height, in pixels, of the control.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetBarInfo</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_GETBARINFO<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774457)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>REBARINFO<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774395)</ept> structure that will receive the rebar control information.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>You must set the <ph id="ph1">`cbSize`</ph> member of this structure to <ph id="ph2">`sizeof(REBARINFO)`</ph> before sending this message.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise zero.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetBkColor</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_GETBKCOLOR<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774459)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>COLORREF<ept id="p1">**</ept> value that represent the current default background color.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetColorScheme</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Retrieves the <bpt id="p1">[</bpt>COLORSCHEME<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775502)</ept> structure for the rebar control.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>COLORSCHEME<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775502)</ept> structure, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise zero.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>COLORSCHEME<ept id="p1">**</ept> structure includes the button highlight color and the button shadow color.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetDropTarget</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_GETDROPTARGET<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774463)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>A pointer to an <bpt id="p1">[</bpt>IDropTarget<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms679679)</ept> interface.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetExtendedStyle</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Gets the extended styles of the current rebar control.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>A bitwise combination (OR) of flags that indicate the extended styles.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The possible flags are <ph id="ph1">`RBS_EX_SPLITTER`</ph> and <ph id="ph2">`RBS_EX_TRANSPARENT`</ph>.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>For more information, see the <ph id="ph1">`dwMask`</ph> parameter of the <bpt id="p1">[</bpt>CReBarCtrl::SetExtendedStyle<ept id="p1">](#crebarctrl__setextendedstyle)</ept> method.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>This method sends the <bpt id="p1">[</bpt>RB_GETEXTENDEDSTYLE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774433)</ept> message, which is described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetImageList</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">`CImageList`</ph> object associated with a rebar control.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>CImageList<ept id="p1">](../../mfc/reference/cimagelist-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> if no image list is set for the control.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>This member function uses size and mask information stored in the <bpt id="p1">[</bpt>REBARINFO<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774395)</ept> structure, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetPalette</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Retrieves the rebar control's current palette.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>CPalette<ept id="p1">](../../mfc/reference/cpalette-class.md)</ept> object specifying the rebar control's current palette.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Note that this member function uses a <ph id="ph1">`CPalette`</ph> object as its return value, rather than an <ph id="ph2">`HPALETTE`</ph>.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CReBarCtrl#5</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetRect</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_GETRECT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774469)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Zero-based index of a band in the rebar control.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>RECT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure that will receive the bounds of the rebar band.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise zero.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CReBarCtrl#6</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetRowCount</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_GETROWCOUNT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774471)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>UINT<ept id="p1">**</ept> value that represents the number of band rows in the control.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CReBarCtrl#7</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetRowHeight</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_GETROWHEIGHT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774473)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>uRow</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Zero-based index of the band that will have its height retrieved.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>UINT<ept id="p1">**</ept> value that represents the row height, in pixels.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CReBarCtrl#8</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetTextColor</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_GETTEXTCOLOR<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774475)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>COLORREF<ept id="p1">**</ept> value that represent the current default text color.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::GetToolTips</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_GETTOOLTIPS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774477)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>CToolTipCtrl<ept id="p1">](../../mfc/reference/ctooltipctrl-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>Note that the MFC implementation of <ph id="ph1">`GetToolTips`</ph> returns a pointer to a <ph id="ph2">`CToolTipCtrl`</ph>, rather than an <ph id="ph3">`HWND`</ph>.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::HitTest</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_HITTEST<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774494)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>prbht</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>RBHITTESTINFO<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774391)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>Before sending the message, the <bpt id="p1">**</bpt>pt<ept id="p1">**</ept> member of this structure must be initialized to the point that will be tested, in client coordinates.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>The zero-based index of the band at the given point, or -1 if no rebar band was at the point.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::IDToIndex</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_IDTOINDEX<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774496)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>uBandID</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>The application-defined identifier of the specified band, passed in the <bpt id="p1">**</bpt>wID<ept id="p1">**</ept> member of the <bpt id="p2">[</bpt>REBARBANDINFO<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/bb774393)</ept> structure when the band is inserted.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>The zero-based band index if successful, or -1 otherwise.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>If duplicate band indices exist, the first one is returned.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::InsertBand</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_INSERTBAND<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774498)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>uIndex</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Zero-based index of the location where the band will be inserted.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>If you set this parameter to -1, the control will add the new band at the last location.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>REBARBANDINFO<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774393)</ept> structure that defines the band to be inserted.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>You must set the <ph id="ph1">`cbSize`</ph> member of this structure to <ph id="ph2">`sizeof(REBARBANDINFO)`</ph> before calling this function.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise zero.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CReBarCtrl#9</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::MaximizeBand</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Resizes a band in a rebar control to its largest size.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Zero-based index of the band to be maximized.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_MAXIMIZEBAND<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774500)</ept> with <ph id="ph1">`fIdeal`</ph> set to 0, as described in the <ph id="ph2">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CReBarCtrl#10</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::MinimizeBand</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>Resizes a band in a rebar control to its smallest size.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Zero-based index of the band to be minimized.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_MINIMIZEBAND<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774502)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CReBarCtrl#11</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::MoveBand</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_MOVEBAND<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774504)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>uFrom</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Zero-based index of the band to be moved.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>uTo</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Zero-based index of the new band position.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>This parameter value must never be greater than the number of bands minus one.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>To obtain the number of bands, call <bpt id="p1">[</bpt>GetBandCount<ept id="p1">](#crebarctrl__getbandcount)</ept>.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise zero.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::PushChevron</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_PUSHCHEVRON<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774506)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Zero-based index of the band whose chevron is to be pushed.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>An application defined 32-bit value.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>See <ph id="ph1">`lAppValue`</ph> in <bpt id="p1">[</bpt>RB_PUSHCHEVRON<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774506)</ept> in the <ph id="ph2">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::RestoreBand</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>Resizes a band in a rebar control to its ideal size.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Zero-based index of the band to be maximized.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_MAXIMIZEBAND<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774500)</ept> with <ph id="ph1">`fIdeal`</ph> set to 1, as described in the <ph id="ph2">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CReBarCtrl#12</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::SetBandInfo</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_SETBANDINFO<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774508)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Zero-based index of the band to receive the new settings.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>REBARBANDINFO<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774393)</ept> structure that defines the band to be inserted.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>You must set the <ph id="ph1">`cbSize`</ph> member of this structure to <ph id="ph2">`sizeof(REBARBANDINFO)`</ph> before sending this message.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise zero.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CReBarCtrl#13</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::SetBandWidth</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Sets the width of the specified docked band in the current rebar control.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Zero-based index of a rebar band.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>New width of the rebar band, in pixels.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>if the method is successful; otherwise, <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>This method sends the <bpt id="p1">[</bpt>RB_SETBANDWIDTH<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774511)</ept> message, which is described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>The following code example defines the variable, <ph id="ph1">`m_rebar`</ph>, that is used to access the current rebar control.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>This variable is used in the next example.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CReBarCtrl_s1#1</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>The following code example sets each rebar band to be the same width.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CReBarCtrl_s1#2</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::SetBarInfo</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_SETBARINFO<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774513)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>REBARINFO<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774395)</ept> structure that contains the information to be set.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>You must set the <ph id="ph1">`cbSize`</ph> member of this structure to <ph id="ph2">`sizeof(REBARINFO)`</ph> before sending this message</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise zero.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CReBarCtrl#14</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::SetBkColor</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_SETBKCOLOR<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774515)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>COLORREF<ept id="p1">**</ept> value that represents the new default background color.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>COLORREF<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd183449)</ept> value that represents the previous default background color.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>See this topic for more information about when to set the background color, and how to set the default.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::SetColorScheme</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>Sets the color scheme for the buttons on a rebar control.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>COLORSCHEME<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775502)</ept> structure, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>COLORSCHEME<ept id="p1">**</ept> structure includes both the button highlight color and the button shadow color.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::SetExtendedStyle</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>Sets the extended styles for the current rebar control.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>A bitwise combination (OR) of flags that specify which flags in the <ph id="ph1">`dwStyleEx`</ph> parameter apply.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>Use one or more of the following values:</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>RBS_EX_SPLITTER: By default, show the splitter on the bottom in horizontal mode, and to the right in vertical mode.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>RBS_EX_TRANSPARENT: Forward the <bpt id="p1">[</bpt>WM_ERASEBKGND<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms648055)</ept> message to the parent window.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>A bitwise combination (OR) of flags that specify the styles to apply.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>To set a style, specify the same flag that is used in the <ph id="ph1">`dwMask`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>To reset a style, specify binary zero.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>The previous extended style.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>This method sends the <bpt id="p1">[</bpt>RB_SETEXTENDEDSTYLE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774519)</ept> message, which is described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::SetImageList</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>Assigns an image list to a rebar control.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>CImageList<ept id="p1">](../../mfc/reference/cimagelist-class.md)</ept> object containing the image list to be assigned to the rebar control.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise zero.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::SetOwner</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_SETPARENT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774522)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>A pointer to a <ph id="ph1">`CWnd`</ph> object to set as the owner of the rebar control.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>CWnd<ept id="p1">](../../mfc/reference/cwnd-class.md)</ept> object that is the current owner of the rebar control.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>Note that this member function uses pointers to <ph id="ph1">`CWnd`</ph> objects for both the current and selected owner of the rebar control, rather than handles to windows.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>This member function does not change the actual parent that was set when the control was created; rather it sends notification messages to the window you specify.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::SetPalette</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_SETPALETTE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774520)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>hPal</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`HPALETTE`</ph> that specifies the new palette that the rebar control will use.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>CPalette<ept id="p1">](../../mfc/reference/cpalette-class.md)</ept> object specifying the rebar control's previous palette.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Note that this member function uses a <ph id="ph1">`CPalette`</ph> object as its return value, rather than an <ph id="ph2">`HPALETTE`</ph>.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::SetTextColor</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_SETTEXTCOLOR<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774524)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>COLORREF<ept id="p1">**</ept> value that represents the new text color in the <ph id="ph1">`CReBarCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>COLORREF<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd183449)</ept> value representing the previous text color associated with the <ph id="ph1">`CReBarCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>It is provided to support text color flexibility in a rebar control.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::SetToolTips</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>Associates a tool tip control with a rebar control.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>pToolTip</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>CToolTipCtrl<ept id="p1">](../../mfc/reference/ctooltipctrl-class.md)</ept> object</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>You must destroy the <ph id="ph1">`CToolTipCtrl`</ph> object when you are done with it.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::SetWindowTheme</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>Sets the visual style of the rebar control.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>A pointer to a Unicode string that contains the rebar visual style to set.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>The return value is not used.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>This member function emulates the functionality of the <bpt id="p1">[</bpt>RB_SETWINDOWTHEME<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774530)</ept> message, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::ShowBand</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_SHOWBAND<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774532)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>Zero-based index of a band in the rebar control.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>fShow</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>Indicates if the band should be shown or hidden.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>If this value is <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>, the band will be shown.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>Otherwise, the band will be hidden.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise zero.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>CReBarCtrl::SizeToRect</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>Implements the behavior of the Win32 message <bpt id="p1">[</bpt>RB_SIZETORECT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774534)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">[</bpt>CRect<ept id="p1">](../../atl-mfc-shared/reference/crect-class.md)</ept> object that specifies the rectangle that the rebar control should be sized to.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise zero.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>Note that this member function uses a <ph id="ph1">`CRect`</ph> object as a parameter, rather than a <ph id="ph2">`RECT`</ph> structure.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>CWnd Class</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>Hierarchy Chart</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>