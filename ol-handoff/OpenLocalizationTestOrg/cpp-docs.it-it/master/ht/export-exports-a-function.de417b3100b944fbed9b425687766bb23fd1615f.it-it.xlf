<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e57d8c2afcc520375551be7f92c4eadbca78af2b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\build\reference\export-exports-a-function.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9f495dd1f97f034ba58896ec5c77cff30f2528a0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c0c57597232feb46fea624ecc380db87caf45fe1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>-EXPORT (Exports a Function) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>/EXPORT (Exports a Function)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>With this option, you can export a function from your program so that other programs can call the function.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can also export data.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Exports are usually defined in a DLL.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>entryname<ept id="p1">*</ept> is the name of the function or data item as it is to be used by the calling program.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>specifies an index into the exports table in the range 1 through 65,535; if you do not specify <ph id="ph1">`ordinal`</ph>, LINK assigns one.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>NONAME<ept id="p1">**</ept> keyword exports the function only as an ordinal, without an <bpt id="p2">*</bpt>entryname<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>DATA<ept id="p1">**</ept> keyword specifies that the exported item is a data item.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The data item in the client program must be declared using <bpt id="p1">**</bpt>extern __declspec(dllimport)<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>There are three methods for exporting a definition, listed in recommended order of use:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>__declspec(dllexport)<ept id="p1">](../../cpp/dllexport-dllimport.md)</ept> in the source code</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">[</bpt>EXPORTS<ept id="p1">](../../build/reference/exports.md)</ept> statement in a .def file</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An /EXPORT specification in a LINK command</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>All three methods can be used in the same program.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>When LINK builds a program that contains exports, it also creates an import library, unless an .exp file is used in the build.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>LINK uses decorated forms of identifiers.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The compiler decorates an identifier when it creates the .obj file.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">*</bpt>entryname<ept id="p1">*</ept> is specified to the linker in its undecorated form (as it appears in the source code), LINK attempts to match the name.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If it cannot find a unique match, LINK issues an error message.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>DUMPBIN<ept id="p1">](../../build/reference/dumpbin-reference.md)</ept> tool to get the <bpt id="p2">[</bpt>decorated names<ept id="p2">](../../build/reference/decorated-names.md)</ept> form of an identifier when you need to specify it to the linker.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Do not specify the decorated form of C identifiers that are declared <ph id="ph1">`__cdecl`</ph> or <ph id="ph2">`__stdcall`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To set this linker option in the Visual Studio development environment</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Open the project's <bpt id="p1">**</bpt>Property Pages<ept id="p1">**</ept> dialog box.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Setting Visual C++ Project Properties<ept id="p1">](../../ide/working-with-project-properties.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Linker<ept id="p1">**</ept> folder.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Command Line<ept id="p1">**</ept> property page.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Type the option into the <bpt id="p1">**</bpt>Additional Options<ept id="p1">**</ept> box.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To set this linker option programmatically</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>See &lt;xref:Microsoft.VisualStudio.VCProjectEngine.VCLinkerTool.AdditionalOptions%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Setting Linker Options</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Linker Options</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>