<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d4936a3cf089ba7acd0c8e2ff2654ede5b01c6b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\data\oledb\ole-db-programming-overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2c2a9b684bbb35e4fbc5bb6800a8d079e91e47d8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a42a634f6d15e03b25f183415967b56fccc78732</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>OLE DB Programming Overview | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>OLE DB Programming Overview</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>What is OLE DB, and what makes it distinct from other database technologies?</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>OLE DB is a high-performance, COM-based database technology produced by Microsoft.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>What sets OLE DB apart from other Microsoft database technologies is how it provides Universal Data Access.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Universal Data Access</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Universal Data Access provides a common way to access data regardless of the form in which it is stored.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In a typical business situation, a vast amount of information is stored outside of corporate databases.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This information is found in file systems (such as FAT or NTFS), indexed-sequential files, personal databases (such as Access), spreadsheets (such as Excel), project planning applications (such as Project), and e-mail (such as Outlook).</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Accessing this data using the various associated applications presents a major bottleneck in workflow or at least an annoyance.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Most companies find themselves in this situation and deal with the problem by consolidating the information in a database management system (DBMS).</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>However, such a move is expensive, time consuming, and in many cases not practical.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The alternative is to develop a Universal Data Access solution.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>OLE DB and ADO provide Universal Data Access capability.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Of the two, OLE DB is the more performance intensive and is recommended for use with Visual C++ applications.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Universal Data Access implies two capabilities: the first is distributed query or uniform access to multiple (distributed) data sources and the second is the ability to make non-DBMS data sources accessible to database applications.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Distributed query</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The ability to access data uniformly on multiple (that is, distributed) data sources.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The data sources can be of the same type (such as two separate Access databases) or of different types (such as a SQL Server database and an Access database).</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Uniformly means that you can meaningfully run the same query on all data sources.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Non-DBMS access</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The ability to make non-DBMS data sources accessible to database applications.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Examples of DBMS data sources include IMS, DB2, Oracle, SQL Server, Access, and Paradox.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Examples of non-DBMS data sources include information in file systems, e-mail, spreadsheets, and project management tools.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Consider a scenario in which a sales department needs to find all e-mail messages received within a one-week period from customers in a certain area.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This query might require a search on an e-mail application's mailbox file and a search on an Access table of customers to specify the customers' names.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>While Access is a DBMS application, Outlook is not.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>OLE DB allows you to develop applications that access diverse data sources, whether they are DBMS or not.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>OLE DB makes universal access possible by using COM interfaces that support the appropriate DBMS functionality for a given data source.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>COM reduces unnecessary duplication of services and maximized interoperability not only among data sources but also among other applications.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Benefits of COM</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This is where COM comes in.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>OLE DB is a set of COM interfaces.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>By accessing data through a uniform set of interfaces, you can organize a database into a matrix of cooperating components.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Based on the COM specification, OLE DB defines an extensible and maintainable collection of interfaces that factor and encapsulate consistent, reusable portions of DBMS functionality.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>These interfaces define the boundaries of DBMS components such as row containers, query processors, and transaction coordinators, which enable uniform transactional access to diverse information sources.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Typically, OLE DB applications are written as DLLs, but its COM implementation overcomes the disadvantages of DLLs (such as naming and version problems) by using componentized code.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In OLE DB, you call interfaces or access other components using their globally unique identifiers (GUIDs).</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Finally, COM keeps track of component usage by using reference counting.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When you call a method on an interface, the reference count is incremented; when the method returns, the reference count is decremented.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>When the count equals zero, the component to which the method belongs is released.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>OLE DB Programming</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>OLE DB Consumer Templates</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>OLE DB Provider Templates</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>OLE DB Templates</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>