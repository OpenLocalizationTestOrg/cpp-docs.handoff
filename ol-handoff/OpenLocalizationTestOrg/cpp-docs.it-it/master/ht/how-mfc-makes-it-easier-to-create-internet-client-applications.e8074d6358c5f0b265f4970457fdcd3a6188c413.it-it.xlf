<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8a917516c29126325cf8c19d3d1aa50aea51c17b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\how-mfc-makes-it-easier-to-create-internet-client-applications.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">539f7eac704b80f085212eae5f454dca7020a555</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9af915ff339a8a08d7b0566e19e7ee96e3aaf5ee</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How MFC Makes It Easier to Create Internet Client Applications | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How MFC Makes It Easier to Create Internet Client Applications</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The Microsoft Foundation Classes encapsulate the Win32 Internet Extension (WinInet) functions in a manner that provides a familiar context for MFC programmers.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>MFC provides three Internet file classes (<bpt id="p1">[</bpt>CInternetFile<ept id="p1">](../mfc/reference/cinternetfile-class.md)</ept>, <bpt id="p2">[</bpt>CHttpFile<ept id="p2">](../mfc/reference/chttpfile-class.md)</ept>, and <bpt id="p3">[</bpt>CGopherFile<ept id="p3">](../mfc/reference/cgopherfile-class.md)</ept>) derived from the <bpt id="p4">[</bpt>CStdioFile<ept id="p4">](../mfc/reference/cstdiofile-class.md)</ept> class.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Not only do these classes make retrieving and manipulating Internet data familiar to programmers who have used <ph id="ph1">`CStdioFile`</ph> for local files, but with these classes you can handle local files and Internet files in a consistent, transparent manner.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The MFC WinInet classes provide the same functionality as <ph id="ph1">`CStdioFile`</ph> for data that is transferred across the Internet.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>These classes abstract the Internet protocols for HTTP, FTP, and gopher into a high-level application programming interface, providing a fast and straightforward path to making applications Internet-aware.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, connecting to an FTP server still requires several steps at a low level, but as an MFC developer, you only need to make one call to <ph id="ph1">`CInternetSession::GetFTPConnection`</ph> to create that connection.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In addition, the MFC WinInet classes provide the following advantages:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Buffered I/O</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Type-safe handles for your data</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Default parameters for many functions</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Exception handling for common Internet errors</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Automatic cleanup of open handles and connections</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Win32 Internet Extensions (WinInet)</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>How WinInet Makes It Easier to Create Internet Client Applications</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>