<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">21d5e30a8908cc7226fd63f5fe4e83f7a80396f3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\preprocessor\execution-character-set.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c728976075727b52515157a7606af6a4485b90d1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d87e23421cb9cb59fdc371da4ed537c892e939f5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>execution_character_set | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>execution_character_set</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Specifies the execution character set used for string and character literals.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This directive is not needed for literals marked with the u8 prefix.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Specifies the target execution character set.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Currently the only target execution set supported is "utf-8".</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This compiler directive is obsolete in Visual Studio 2015 Update 2.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>We recommend that you use the <bpt id="p1">**</bpt>/execution-charset:utf-8<ept id="p1">**</ept> or <bpt id="p2">**</bpt>/utf-8<ept id="p2">**</ept> compiler options together with using the <ph id="ph1">`u8`</ph> prefix on narrow character and string literals that contain extended characters.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information about the <ph id="ph1">`u8`</ph> prefix, see <bpt id="p1">[</bpt>String and Character Literals<ept id="p1">](../cpp/string-and-character-literals-cpp.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For more information about the compiler options, see <bpt id="p1">[</bpt>/execution-charset (Set Execution Character Set)<ept id="p1">](../build/reference/execution-charset-set-execution-character-set.md)</ept> and <bpt id="p2">[</bpt>/utf-8 (Set Source and Executable character sets to UTF-8)<ept id="p2">](../build/reference/utf-8-set-source-and-executable-character-sets-to-utf-8.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`#pragma execution_character_set("utf-8")`</ph> directive tells the compiler to encode narrow character and narrow string literals in your source code as UTF-8 in the executable.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This output encoding is independent of the source file encoding used.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>By default, the compiler encodes narrow characters and narrow strings by using the current code page as the execution character set.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This means that Unicode or DBCS characters in a literal that are outside the range of the current code page are converted to the default replacement character in the output.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Unicode and DBCS characters are truncated to their low-order byte.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This is almost certainly not what you intend.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can specify UTF-8 encoding for literals in the source file by using a <ph id="ph1">`u8`</ph> prefix.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The compiler passes these UTF-8 encoded strings to the output unchanged.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Narrow character literals prefixed by using u8 must fit in one byte, or they are truncated on output.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>By default, Visual Studio uses the current code page as the source character set used to interpret your source code for output.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When a file is read in, Visual Studio interprets it according to the current code page unless the file code page was set, or unless a byte-order mark (BOM) or UTF-16 characters are detected at the beginning of the file.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Because UTF-8 can't be set as the current code page, when the automatic detection encounters source files encoded as UTF-8 without a BOM, Visual Studio assumes that they are encoded by using the current code page.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Characters in the source file that are outside the range of the specified or automatically detected code page can cause compiler warnings and errors.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Pragma Directives and the __Pragma Keyword</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>/execution-charset (Set Execution Character Set)</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>/utf-8 (Set Source and Executable character sets to UTF-8)</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>