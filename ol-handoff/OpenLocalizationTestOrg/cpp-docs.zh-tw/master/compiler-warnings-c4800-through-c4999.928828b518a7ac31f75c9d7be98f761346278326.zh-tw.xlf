<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a30a9d6a60890d0fbb4abf78df8fda4631340a6d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\error-messages\compiler-warnings\compiler-warnings-c4800-through-c4999.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">70974c65cd65e4813c7a34b6fcda39c4a49a6a13</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18f4607ee1fafd7872a58d9f8ee34ab85b12ee61</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Compiler Warnings C4800 Through C4999 | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Compiler Warnings C4800 Through C4999</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The articles in this part of the documentation contain information about a subset of the Visual C++ compiler warnings.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can access the information here or, in the Output window in Visual Studio, you can select an error number and then press the F1 key.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In This Section</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Warning</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Message</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 3) C4800</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>'type': forcing value to bool 'true' or 'false' (performance warning)</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4803</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>'method': the raise method has a different storage class from that of the event, 'event'</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4804</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>'operation': unsafe use of type 'bool' in operation</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4805</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>'operation': unsafe mix of type 'type' and type 'type' in operation</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4806</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>'operation': unsafe operation: no value of type 'type' promoted to type 'type' can equal the given constant</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4807</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>'operation': unsafe mix of type 'type' and signed bit field of type 'type'</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4808</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>case 'value' is not a valid value for switch condition of type 'bool'</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4809</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>switch statement has redundant 'default' label; all possible 'case' labels are given</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4810</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>value of pragma pack(show) == n</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4811</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>value of pragma conform(forScope, show) == value</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4812</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>obsolete declaration style: please use 'new_syntax' instead</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4813</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>'function': a friend function of a local class must have been previously declared</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 4) C4816</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>'param': parameter has a zero-sized array which will be truncated (unless the object is passed by reference)</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4817</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>'member': illegal use of '.' to access this member; compiler replaced with '-&gt;'</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4819</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The file contains a character that cannot be represented in the current code page (number).</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Save the file in Unicode format to prevent data loss</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 4) C4820</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>'bytes' bytes padding added after construct 'member_name'</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4821</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Unable to determine Unicode encoding type, please save the file with signature (BOM)</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4822</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>'member function': local class member function does not have a body</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 3) C4823</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>'function': uses pinning pointers but unwind semantics are not enabled.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Consider using /EHa</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 4) C4825</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 3) C4827</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A public 'ToString' method with 0 parameters should be marked as virtual and override</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4829</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Possibly incorrect parameters to function main.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Consider 'int main(Platform::Array<ph id="ph1">\&lt;</ph>Platform::String^&gt;^ argv)'</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4835</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>'variable': the initializer for exported data will not be run until managed code is first executed in the host assembly</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4838</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>conversion from 'type_1' to 'type_2' requires a narrowing conversion</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Compiler Warning C4867</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>'function': function call missing argument list; use 'call' to create a pointer to member</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Compiler Warning C4868</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>'file(line_number)' compiler may not enforce left-to-right evaluation order in braced initialization list</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 2) C4872</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>floating point division by zero detected when compiling the call graph for the concurrency::parallel_for_each at: '%s'</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4880</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>casting from 'const type_1' to 'type_2': casting away constness from a pointer or reference may result in undefined behavior in an amp restricted function</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 4) C4881</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>the constructor and/or the destructor will not be invoked for tile_static variable 'variable'</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4882</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>passing functors with non-const call operators to concurrency::parallel_for_each is deprecated</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Compiler warning C4900</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Il mismatch between 'tool1' version 'version1' and 'tool2' version 'version2'</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4905</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>wide string literal cast to 'LPSTR'</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4906</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>string literal cast to 'LPWSTR'</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4910</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>'<ph id="ph1">\&lt;</ph>identifier&gt;: '__declspec(dllexport)' and 'extern' are incompatible on an explicit instantiation</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4912</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>'attribute': attribute has undefined behavior on a nested UDT</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 4) C4913</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>user defined binary operator ',' exists but no overload could convert all operands, default built-in binary operator ',' used</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4916</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>in order to have a dispid, '%$S': must be introduced by an interface</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4917</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>'declarator': a GUID can only be associated with a class, interface or namespace</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 4) C4918</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>'character': invalid character in pragma optimization list</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4920</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>enum enum member member_1=value_1 already seen in enum enum as member_2=value_2</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 3) C4921</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>'%s': attribute value '%s' should not be multiply specified</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4925</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>'method': dispinterface method cannot be called from script</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4926</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>'identifier': symbol is already defined: attributes ignored</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4927</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>illegal conversion; more than one user-defined conversion has been implicitly applied</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4928</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>illegal copy-initialization; more than one user-defined conversion has been implicitly applied</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4929</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>'file': typelibrary contains a union; ignoring the 'embedded_idl' qualifier</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4930</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>'prototype': prototyped function not called (was a variable definition intended?)</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 4) C4931</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>we are assuming the type library was built for number-bit pointers</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 4) C4932</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>__identifier(identifier) and <ph id="ph1">\_</ph>_identifier(identifier) are indistinguishable</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4934</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>'__delegate(multicast)' is deprecated, use '<ph id="ph1">\_</ph>_delegate' instead</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4935</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>assembly access specifier modified from 'access'</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4936</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>this __declspec is supported only when compiled with /clr or /clr:pure</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 4) C4937</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>'text1' and 'text2' are indistinguishable as arguments to 'directive'</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 4) C4938</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>'var': Floating point reduction variable may cause inconsistent results under /fp:strict or #pragma fenv_access</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Compiler warning C4939</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>pragma vtordisp is deprecated and will be removed in a future release of Visual C++</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4944</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>'symbol': cannot import symbol from 'assembly1': as 'symbol' already exists in the current scope</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4945</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>'symbol': cannot import symbol from 'assembly1': as 'symbol' has already been imported from another assembly 'assembly2'</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4946</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>reinterpret_cast used between related classes: 'class1' and 'class2'</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4947</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>'type_or_member': marked as obsolete</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 2) C4948</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>return type of 'accessor' does not match the last parameter type of the corresponding setter</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1 and level 4) C4949</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>pragmas 'managed' and 'unmanaged' are meaningful only when compiled with '/clr[:option]'</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4950</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>'type_or_member': marked as obsolete</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Compiler warning C4951</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>'function' has been edited since profile data was collected, function profile data not used</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Compiler warning C4952</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>'function': no profile data found in program database 'pgd_file'</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Compiler warning C4953</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Inline 'function' has been edited since profile data was collected, profile data not used</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Compiler warning C4954</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>'function': not profiled (contains __int64 switch expression)</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Compiler warning C4955</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>'import2': import ignored; already imported from 'import1'</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4956</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>'type': this type is not verifiable</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4957</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>'cast': explicit cast from 'cast from' to 'cast_to' is not verifiable</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4958</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>'operation': pointer arithmetic is not verifiable</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4959</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>cannot define unmanaged type 'type' in /clr:safe because accessing its members yields unverifiable code</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Compiler warning C4960</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>'function' is too big to be profiled</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Compiler warning C4961</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>No profile data was merged into '.pgd file', profile-guided optimizations disabled</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Compiler warning C4962</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>'function': Profile-guided optimizations disabled because optimizations caused profile data to become inconsistent</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Compiler warning C4963</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>%s': no profile data found; different compiler options were used in instrumented build</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4964</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>No optimization options were specified; profile info will not be collected</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4965</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>implicit box of integer 0; use nullptr or explicit cast</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Compiler warning C4966</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>'%s' has __code_seg annotation with unsupported segment name, annotation ignored</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Compiler warning C4970</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>delegate constructor: target object ignored since '%$pS' is static</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4971</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Argument order: <ph id="ph1">\&lt;</ph>target object&gt;, <ph id="ph2">\&lt;</ph>target function&gt; for delegate constructor is deprecated, use <ph id="ph3">\&lt;</ph>target function&gt;, <ph id="ph4">\&lt;</ph>target object=""&gt;</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4972</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Directly modifying or treating the result of an unbox operation as an lvalue is unverifiable</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Compiler warning C4973</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>'%$S': marked as deprecated</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Compiler warning C4974</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>'%$S': marked as deprecated</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Compiler warning C4981</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Warbird: function '%$pD' marked as __forceinline not inlined because it contains exception semantics</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 3) C4985</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>symbol name': attributes not present on previous declaration.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Compiler Warning C4986</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>'%$pS': exception specification does not match previous declaration</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 4) C4987</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>nonstandard extension used: 'throw (...)'</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 4) C4988</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>'%$S': variable declared outside class/function scope</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Compiler warning C4989</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>'%s': type has conflicting definitions.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Compiler warning C4990</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Warbird: %s</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Compiler warning C4991</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Warbird: function '%$pD' marked as __forceinline not inlined because protection level of inlinee is greater than the parent</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Compiler warning C4992</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Warbird: function '%$pD' marked as __forceinline not inlined because it contains inline assembly which cannot be protected</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 3) C4995</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>'function': name was marked as #pragma deprecated</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 3) C4996</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>'%$pS': %$*</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4997</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>'class': coclass does not implement a COM interface or pseudo-interface</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4998</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>EXPECTATION FAILED: %s(%d)</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Compiler warning C4999</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>UNKNOWN WARNING %$N Please choose the Technical Support command on the Visual C++ %$N Help menu, or open the Technical Support help file for more information</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>