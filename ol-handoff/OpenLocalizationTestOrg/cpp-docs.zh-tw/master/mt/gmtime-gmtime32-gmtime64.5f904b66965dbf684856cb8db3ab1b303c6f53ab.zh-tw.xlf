<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">466b6f0922f9cfe94d1e7cc0acfdd6abd067b734</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\reference\gmtime-gmtime32-gmtime64.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ec890bfc425fa7e69e27492e38c5959716406379</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b33335f4a13177ef632253840ef366120cb3ab63</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>gmtime, _gmtime32, _gmtime64 | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>gmtime, _gmtime32, _gmtime64</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Converts a time value to a structure.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>More secure versions of these functions are available; see <bpt id="p1">[</bpt>gmtime_s, _gmtime32_s, _gmtime64_s<ept id="p1">](../../c-runtime-library/reference/gmtime-s-gmtime32-s-gmtime64-s.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Pointer to the stored time.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The time is represented as seconds elapsed since midnight (00:00:00), January 1, 1970, coordinated universal time (UTC).</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A pointer to a structure of type <bpt id="p1">[</bpt>tm<ept id="p1">](../../c-runtime-library/standard-types.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The fields of the returned structure hold the evaluated value of the <ph id="ph1">`timer`</ph> argument in UTC rather than in local time.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Each of the structure fields is of type <ph id="ph1">`int`</ph>, as follows:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Seconds after minute (0 – 59).</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Minutes after hour (0 – 59).</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Hours since midnight (0 – 23).</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Day of month (1 – 31).</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Month (0 – 11; January = 0).</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Year (current year minus 1900).</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Day of week (0 – 6; Sunday = 0).</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Day of year (0 – 365; January 1 = 0).</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Always 0 for <ph id="ph1">`gmtime`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Both the 32-bit and 64-bit versions of <ph id="ph1">`gmtime`</ph>, <ph id="ph2">`mktime`</ph>, <ph id="ph3">`mkgmtime`</ph>, and <ph id="ph4">`localtime`</ph> all use one common <ph id="ph5">`tm`</ph> structure per thread for the conversion.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Each call to one of these functions destroys the result of any previous call.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`timer`</ph> represents a date before midnight, January 1, 1970, <ph id="ph2">`gmtime`</ph> returns <ph id="ph3">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>There is no error return.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>, which uses the <ph id="ph1">`__time64_t`</ph> structure, enables dates to be expressed up through 23:59:59, December 31, 3000, UTC, whereas <ph id="ph2">`_gmtime32`</ph> only represent dates through 23:59:59 January 18, 2038, UTC.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Midnight, January 1, 1970, is the lower bound of the date range for both functions.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>is an inline function that evaluates to <ph id="ph1">`_gmtime64`</ph>, and <ph id="ph2">`time_t`</ph> is equivalent to <ph id="ph3">`__time64_t`</ph> unless <ph id="ph4">`_USE_32BIT_TIME_T`</ph> is defined.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If you must force the compiler to interpret <ph id="ph1">`time_t`</ph> as the old 32-bit <ph id="ph2">`time_t`</ph>, you can define <ph id="ph3">`_USE_32BIT_TIME_T`</ph>, but doing so causes <ph id="ph4">`gmtime`</ph> to be in-lined to <ph id="ph5">`_gmtime32`</ph> and <ph id="ph6">`time_t`</ph> to be defined as <ph id="ph7">`__time32_t`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>We recommend that you do not do this, because it is not allowed on 64-bit platforms and in any case your application may fail after January 18, 2038.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>These functions validate their parameters.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`timer`</ph> is a null pointer, or if the timer value is negative, these functions invoke an invalid parameter handler, as described in <bpt id="p1">[</bpt>Parameter Validation<ept id="p1">](../../c-runtime-library/parameter-validation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If execution is allowed to continue, the functions return <ph id="ph1">`NULL`</ph> and set <ph id="ph2">`errno`</ph> to <ph id="ph3">`EINVAL`</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`_gmtime32`</ph> function breaks down the <ph id="ph2">`timer`</ph> value and stores it in a statically allocated structure of type <ph id="ph3">`tm`</ph>, defined in TIME.H.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The value of <ph id="ph1">`timer`</ph> is typically obtained from a call to the <ph id="ph2">`time`</ph> function.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In most cases, the target environment tries to determine whether daylight savings time is in effect.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The C run-time library assumes that the United States rules for implementing the calculation of Daylight Saving Time (DST) are used.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Routine</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Required header</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>time.h&gt;</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>time.h&gt;</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>time.h&gt;</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For additional compatibility information, see <bpt id="p1">[</bpt>Compatibility<ept id="p1">](../../c-runtime-library/compatibility.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>.NET Framework Equivalent</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>System::DateTime::UtcNow</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>System::DateTime::ToUniversalTime</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Time Management</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>asctime, _wasctime</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>ctime, _ctime32, _ctime64, _wctime, _wctime32, _wctime64</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>_ftime, _ftime32, _ftime64</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>gmtime_s, _gmtime32_s, _gmtime64_s</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>localtime, _localtime32, _localtime64</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>_mkgmtime, _mkgmtime32, _mkgmtime64</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>mktime, _mktime32, _mktime64</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>time, _time32, _time64</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>