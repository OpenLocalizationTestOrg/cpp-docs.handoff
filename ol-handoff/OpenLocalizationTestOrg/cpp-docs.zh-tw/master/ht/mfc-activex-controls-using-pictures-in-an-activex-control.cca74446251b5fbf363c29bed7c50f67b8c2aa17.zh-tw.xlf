<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">08eff212029d2f07c3d71e759896f04189fcfc2d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\mfc-activex-controls-using-pictures-in-an-activex-control.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dbb5c4a50a235c0e7d99f4805ee4de72ac8450c0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d566373bb699d5782e856efb761913e4bc2f69be</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>MFC ActiveX Controls: Using Pictures in an ActiveX Control | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>MFC ActiveX Controls: Using Pictures in an ActiveX Control</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This article describes the common Picture type and how to implement it in your ActiveX control.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Topics include:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Overview of Custom Picture Properties</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Implementing a Custom Picture Property in Your ActiveX Control</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Additions to Your Control Project</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Overview of Custom Picture Properties</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A Picture type is one of a group of types common to some ActiveX controls.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Picture type handles metafiles, bitmaps, or icons and allows the user to specify a picture to be displayed in an ActiveX control.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Custom Picture properties are implemented using a picture object and Get/Set functions that allow the control user access to the Picture property.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Control users access the custom Picture property using the stock Picture property page.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In addition to the standard Picture type, Font and Color types are also available.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information on using the standard Font type in your ActiveX control, see the article <bpt id="p1">[</bpt>MFC ActiveX Controls: Using Fonts<ept id="p1">](../mfc/mfc-activex-controls-using-fonts.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The ActiveX control classes provide several components you can use to implement the Picture property within the control.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>These components include:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>CPictureHolder<ept id="p1">](../mfc/reference/cpictureholder-class.md)</ept> class.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This class provides easy access to the picture object and functionality for the item displayed by the custom Picture property.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Support for properties of type <bpt id="p1">**</bpt>LPPICTUREDISP<ept id="p1">**</ept>, implemented with Get/Set functions.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Using Class View you can quickly add a custom property, or properties, that supports the Picture type.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information on adding ActiveX control properties with Class View, see the article <bpt id="p1">[</bpt>MFC ActiveX Controls: Properties<ept id="p1">](../mfc/mfc-activex-controls-properties.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A property page that manipulates a control's Picture property or properties.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This property page is part of a group of stock property pages available to ActiveX controls.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For more information on ActiveX control property pages, see the article <bpt id="p1">[</bpt>MFC ActiveX Controls: Using Stock Property Pages<ept id="p1">](../mfc/mfc-activex-controls-using-stock-property-pages.md)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Implementing a Custom Picture Property in Your ActiveX Control</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When you have completed the steps outlined in this section, the control can display pictures chosen by its user.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The user can change the displayed picture using a property page that shows the current picture and has a Browse button that allows the user to the select different pictures.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A custom Picture property is implemented using a process similar to that used for implementing other properties, the main difference being that the custom property must support a Picture type.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Because the item of the Picture property must be drawn by the ActiveX control, a number of additions and modifications must be made to the property before it can be fully implemented.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To implement a custom Picture property, you must do the following:</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Add code to your control project<ept id="p1">](#_core_additions_to_your_control_project)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A standard Picture property page ID, a data member of type <ph id="ph1">`CPictureHolder`</ph>, and a custom property of type <bpt id="p1">**</bpt>LPPICTUREDISP<ept id="p1">**</ept> with a Get/Set implementation must be added.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Modify several functions in your control class<ept id="p1">](#_core_modifications_to_your_control_project)</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>These modifications will be made to several functions that are responsible for the drawing of your ActiveX control.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Additions to Your Control Project</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To add the property page ID for the standard Picture property page, insert the following line after the <ph id="ph1">`BEGIN_PROPPAGEIDS`</ph> macro in the control implementation file (.CPP):</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>NVC_MFC_AxPic#1</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You must also increment the count parameter of your <ph id="ph1">`BEGIN_PROPPAGEIDS`</ph> macro by one.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The following line illustrates this:</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>NVC_MFC_AxPic#2</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To add the <ph id="ph1">`CPictureHolder`</ph> data member to the control class, insert the following line under the protected section of the control class declaration in the control header file (.H):</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>NVC_MFC_AxPic#3</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>It is not necessary to name your data member <ph id="ph1">`m_pic`</ph>; any name will suffice.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Next, add a custom property that supports a Picture type:</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To add a custom picture property using the Add Property Wizard</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Load your control's project.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In Class View, expand the library node of your control.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Right-click the interface node for your control (the second node of the library node) to open the shortcut menu.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>From the shortcut menu, choose <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> and then <bpt id="p2">**</bpt>Add Property<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Property Name<ept id="p1">**</ept> box, type the property name.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For example purposes, <ph id="ph1">`ControlPicture`</ph> is used in this procedure.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Property Type<ept id="p1">**</ept> box, select <bpt id="p2">**</bpt>IPictureDisp<ph id="ph1">\*</ph><ept id="p2">**</ept> for the property type.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">**</bpt>Implementation Type<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>Get/Set Methods<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Type unique names for your Get and Set Functions or accept the default names.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>(In this example, the default names <ph id="ph1">`GetControlPicture`</ph> and <ph id="ph2">`SetControlPicture`</ph> are used.)</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Finish<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The Add Property Wizard adds the following code between the dispatch map comments in the control header (.H) file:</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>NVC_MFC_AxPic#4</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>In addition, the following code was inserted in the dispatch map of the control implementation (.CPP) file:</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>NVC_MFC_AxPic#5</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The Add Property Wizard also adds the following two stub functions in the control implementation file:</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>NVC_MFC_AxPic#6</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Your control class and function names might differ from the example above.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Modifications to Your Control Project</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>After you have made the necessary additions to your control project, you need to modify several functions that affect the rendering of your ActiveX control.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>These functions, <ph id="ph1">`OnResetState`</ph>, <ph id="ph2">`OnDraw`</ph>, and the Get/Set functions of a custom Picture property, are located in the control implementation file.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>(Note that in this example the control class is called <ph id="ph1">`CSampleCtrl`</ph>, the <ph id="ph2">`CPictureHolder`</ph> data member is called <ph id="ph3">`m_pic`</ph>, and the custom picture property name is <ph id="ph4">`ControlPicture`</ph>.)</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>In the control <ph id="ph1">`OnResetState`</ph> function, add the following optional line after the call to <ph id="ph2">`COleControl::OnResetState`</ph>:</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>NVC_MFC_AxPic#7</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This sets the control's picture to a blank picture.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>To draw the picture properly, make a call to <bpt id="p1">[</bpt>CPictureHolder::Render<ept id="p1">](../mfc/reference/cpictureholder-class.md#cpictureholder__render)</ept> in the control <ph id="ph1">`OnDraw`</ph> function.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Modify your function to resemble the following example:</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>NVC_MFC_AxPic#8</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>In the Get function of the control's custom picture property, add the following line:</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>NVC_MFC_AxPic#9</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>In the Set function of the control's custom Picture property, add the following lines:</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>NVC_MFC_AxPic#10</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The picture property must be made persistent so that information added at design time will show up at run time.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Add the following line to the <ph id="ph1">`COleControl`</ph>-derived class's <ph id="ph2">`DoPropExchange`</ph> function:</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>NVC_MFC_AxPic#11</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Your class and function names might differ from the example above.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>After you complete the modifications, rebuild your project to incorporate the new functionality of the custom Picture property and use Test Container to test the new property.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Testing Properties and Events with Test Container<ept id="p1">](../mfc/testing-properties-and-events-with-test-container.md)</ept> for information on how to access the test container.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>MFC ActiveX Controls</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>MFC ActiveX Controls: Using Fonts</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>MFC ActiveX Controls: Property Pages</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>