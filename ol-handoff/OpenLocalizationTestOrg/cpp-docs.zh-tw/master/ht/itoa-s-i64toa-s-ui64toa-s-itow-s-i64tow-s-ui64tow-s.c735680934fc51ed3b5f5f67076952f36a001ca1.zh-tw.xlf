<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">98aea0abaa4280d18599ea7e3f78f437e36358df</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\reference\itoa-s-i64toa-s-ui64toa-s-itow-s-i64tow-s-ui64tow-s.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">db83a04eb051e8c5c791fa146b5fd6e670385f54</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5a99aaade2edf0154317131aedf59dedd7fc525d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>_itoa_s, _i64toa_s, _ui64toa_s, _itow_s, _i64tow_s, _ui64tow_s | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>_itoa_s, _i64toa_s, _ui64toa_s, _itow_s, _i64tow_s, _ui64tow_s</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Converts an integer to a string.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>These are versions of <bpt id="p1">[</bpt>_itoa, _i64toa, _ui64toa, _itow, _i64tow, _ui64tow<ept id="p1">](../../c-runtime-library/reference/itoa-i64toa-ui64toa-itow-i64tow-ui64tow.md)</ept> with security enhancements as described in <bpt id="p2">[</bpt>Security Features in the CRT<ept id="p2">](../../c-runtime-library/security-features-in-the-crt.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Number to be converted.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>[out]</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Filled with the result of the conversion.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Size of the buffer in single-byte characters or wide characters.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Base of <ph id="ph1">`value`</ph>; which must be in the range 2â€“36.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Zero if successful; an error code on failure.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If any of the following conditions applies, the function invokes an invalid parameter handler, as described in <bpt id="p1">[</bpt>Parameter Validation<ept id="p1">](../../c-runtime-library/parameter-validation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Error Conditions</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>value</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>buffer</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>sizeInCharacters</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>radix</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Return</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>&lt;=0</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>&lt;= length of the result string required</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>&lt; 2 or <ph id="ph1">`radix`</ph> &gt; 36</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Security Issues</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>These functions can generate an access violation if <ph id="ph1">`buffer`</ph> does not point to valid memory and is not <ph id="ph2">`NULL`</ph>, or if the length of the buffer is not long enough to hold the result string.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Except for the parameters and return value, the <ph id="ph1">`_itoa_s`</ph> functions have the same behavior as the corresponding less secure versions.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In C++, using these functions is simplified by template overloads; the overloads can infer buffer length automatically (eliminating the need to specify a size argument) and they can automatically replace older, non-secure functions with their newer, secure counterparts.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Secure Template Overloads<ept id="p1">](../../c-runtime-library/secure-template-overloads.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The debug versions of these functions first fill the buffer with 0xFD.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To disable this behavior, use <bpt id="p1">[</bpt>_CrtSetDebugFillThreshold<ept id="p1">](../../c-runtime-library/reference/crtsetdebugfillthreshold.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Generic-Text Routine Mappings</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Tchar.h routine</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>_UNICODE and _MBCS not defined</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>_MBCS defined</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>_UNICODE defined</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Routine</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Required header</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>stdlib.h&gt;</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>stdlib.h&gt;</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>stdlib.h&gt;</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>stdlib.h&gt; or <ph id="ph1">\&lt;</ph>wchar.h&gt;</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>stdlib.h&gt; or <ph id="ph1">\&lt;</ph>wchar.h&gt;</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>stdlib.h&gt; or <ph id="ph1">\&lt;</ph>wchar.h&gt;</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For more compatibility information, see <bpt id="p1">[</bpt>Compatibility<ept id="p1">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Output</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>.NET Framework Equivalent</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>System::Convert::ToString</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Data Conversion</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>_ltoa, _ltow</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>_ultoa, _ultow</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>