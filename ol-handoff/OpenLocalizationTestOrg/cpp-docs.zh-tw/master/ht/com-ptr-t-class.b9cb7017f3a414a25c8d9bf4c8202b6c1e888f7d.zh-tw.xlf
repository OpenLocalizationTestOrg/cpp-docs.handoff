<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">15294419d1735be9e4f4746cc07c4b1526ebd434</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\cpp\com-ptr-t-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d6f6d2cc2390c03f007987ff29dd0fff8115869</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bb7fbc200dc840bbbfb528474dec7a140fc32882</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>_com_ptr_t Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>_com_ptr_t Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Microsoft Specific</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`_com_ptr_t`</ph> object encapsulates a COM interface pointer and is called a "smart" pointer.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This template class manages resource allocation and deallocation through function calls to the <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> member functions: <ph id="ph1">`QueryInterface`</ph>, <ph id="ph2">`AddRef`</ph>, and <bpt id="p2">**</bpt>Release<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A smart pointer is usually referenced by the typedef definition provided by the <bpt id="p1">**</bpt>_COM_SMARTPTR_TYPEDEF<ept id="p1">**</ept> macro.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This macro takes an interface name and the IID and declares a specialization of <ph id="ph1">`_com_ptr_t`</ph> with the name of the interface plus a suffix of <ph id="ph2">`Ptr`</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>declares the <ph id="ph1">`_com_ptr_t`</ph> specialization <bpt id="p1">**</bpt>IMyInterfacePtr<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A set of <bpt id="p1">[</bpt>function templates<ept id="p1">](../cpp/relational-function-templates.md)</ept>, not members of this template class, support comparisons with a smart pointer on the right side of the comparison operator.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Construction</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>_com_ptr_t</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`_com_ptr_t`</ph> object.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Low-Level Operations</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>AddRef</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Calls the <ph id="ph1">`AddRef`</ph> member function of <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> on the encapsulated interface pointer.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Attach</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Encapsulates a raw interface pointer of this smart pointer's type.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>CreateInstance</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Creates a new instance of an object given a <bpt id="p1">**</bpt>CLSID<ept id="p1">**</ept> or <bpt id="p2">**</bpt>ProgID<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Detach</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Extracts and returns the encapsulated interface pointer.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>GetActiveObject</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Attaches to an existing instance of an object given a <bpt id="p1">**</bpt>CLSID<ept id="p1">**</ept> or <bpt id="p2">**</bpt>ProgID<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>GetInterfacePtr</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Returns the encapsulated interface pointer.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>QueryInterface</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Calls the <ph id="ph1">`QueryInterface`</ph> member function of <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> on the encapsulated interface pointer.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Release</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Calls the <bpt id="p1">**</bpt>Release<ept id="p1">**</ept> member function of <bpt id="p2">**</bpt>IUnknown<ept id="p2">**</ept> on the encapsulated interface pointer.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Operators</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>operator =</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Assigns a new value to an existing <ph id="ph1">`_com_ptr_t`</ph> object.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>operators ==, !=, <ph id="ph1">\&lt;</ph>, &gt;, <ph id="ph2">\&lt;</ph>=, &gt;=</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Compare the smart pointer object to another smart pointer, raw interface pointer, or <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Extractors</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Extract the encapsulated COM interface pointer.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>END Microsoft Specific</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> comip.h</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Lib:<ept id="p1">**</ept> comsuppw.lib or comsuppwd.lib (see <bpt id="p2">[</bpt>/Zc:wchar_t (wchar_t Is Native Type)<ept id="p2">](../build/reference/zc-wchar-t-wchar-t-is-native-type.md)</ept> for more information)</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Compiler COM Support Classes</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>