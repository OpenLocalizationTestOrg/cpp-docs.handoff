<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">09f1e1a4b005c369d4d837bd2d265ecd36a72790</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\control-bars.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e4533e57b7907c57ffd03e7ed53505fce40ddf8f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">07f4103aff16aa8bef2a35f73dd377306a4ee15c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Control Bars | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Control Bars</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>"Control bar" is the general name for toolbars, status bars, and dialog bars.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>MFC classes <ph id="ph1">`CToolBar`</ph>, <ph id="ph2">`CStatusBar`</ph>, <ph id="ph3">`CDialogBar`</ph>, <ph id="ph4">`COleResizeBar`</ph>, and <bpt id="p1">**</bpt>CReBar<ept id="p1">**</ept> derive from class <bpt id="p2">[</bpt>CControlBar<ept id="p2">](../mfc/reference/ccontrolbar-class.md)</ept>, which implements their common functionality.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Control bars are windows that display rows of controls with which users can select options, execute commands, or obtain program information.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Types of control bars include toolbars, dialog bars, and status bars.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Toolbars, in class <bpt id="p1">[</bpt>CToolBar<ept id="p1">](../mfc/reference/ctoolbar-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Status bars, in class <bpt id="p1">[</bpt>CStatusBar<ept id="p1">](../mfc/reference/cstatusbar-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Dialog bars, in class <bpt id="p1">[</bpt>CDialogBar<ept id="p1">](../mfc/reference/cdialogbar-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Rebars, in class <bpt id="p1">[</bpt>CReBar<ept id="p1">](../mfc/reference/crebar-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>As of MFC version 4.0, toolbars, status bars, and tool tips are implemented using system functionality implemented in the comctl32.dll instead of the previous implementation specific to MFC.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In MFC version 6.0, <bpt id="p1">**</bpt>CReBar<ept id="p1">**</ept>, which also wraps comctl32.dll functionality, was added.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Brief introductions to the control-bar types follow.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For further information, see the links below.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Control Bars</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Control bars greatly enhance a program's usability by providing quick, one-step command actions.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Class <ph id="ph1">`CControlBar`</ph> provides the common functionality of all toolbars, status bars, and dialog bars.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>provides the functionality for positioning the control bar in its parent frame window.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Because a control bar is usually a child window of a parent frame window, it is a "sibling" to the client view or MDI client of the frame window.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A control-bar object uses information about its parent window's client rectangle to position itself.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Then it alters the parent's remaining client-window rectangle so that the client view or MDI client window fills the rest of the client window.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If a button on the control bar doesn't have a <bpt id="p1">**</bpt>COMMAND<ept id="p1">**</ept> or <bpt id="p2">**</bpt>UPDATE_COMMAND_UI<ept id="p2">**</ept> handler, the framework automatically disables the button.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Toolbars</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A toolbar is a control bar that displays a row of bitmapped buttons that carry out commands.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Pressing a toolbar button is equivalent to choosing a menu item; it calls the same handler mapped to a menu item if that menu item has the same ID as the toolbar button.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The buttons can be configured to appear and behave as pushbuttons, radio buttons, or check boxes.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A toolbar is usually aligned to the top of a frame window, but an MFC toolbar can "dock" to any side of its parent window or float in its own mini-frame window.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A toolbar can also "float" and you can change its size and drag it with a mouse.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A toolbar can also display tool tips as the user moves the mouse over the toolbar's buttons.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A tool tip is a tiny popup window that briefly describes the button's purpose.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>As of MFC version 4.0, class <bpt id="p1">[</bpt>CToolBar<ept id="p1">](../mfc/reference/ctoolbar-class.md)</ept> uses the Windows toolbar common control.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CToolBar`</ph> contains a <bpt id="p1">[</bpt>CToolBarCtrl<ept id="p1">](../mfc/reference/ctoolbarctrl-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Older toolbars are still supported, however.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>See the article <bpt id="p1">[</bpt>ToolBars<ept id="p1">](../mfc/mfc-toolbar-implementation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Status Bars</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A status bar is a control bar that contains text-output panes, or "indicators."</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The output panes are commonly used as message lines and as status indicators.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Message line examples include the command help-message lines that briefly explain the selected menu or toolbar command in the leftmost pane of the default status bar created by the MFC Application Wizard.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Status indicator examples include the SCROLL LOCK, NUM LOCK, and other keys.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Status bars are usually aligned to the bottom of a frame window.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>See class <bpt id="p1">[</bpt>CStatusBar<ept id="p1">](../mfc/reference/cstatusbar-class.md)</ept> and class <bpt id="p2">[</bpt>CStatusBarCtrl<ept id="p2">](../mfc/reference/cstatusbarctrl-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Dialog Bars</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A dialog bar is a control bar, based on a dialog-template resource, with the functionality of a modeless dialog box.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Dialog bars can contain Windows, custom, or ActiveX controls.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>As in a dialog box, the user can tab among the controls.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Dialog bars can be aligned to the top, bottom, left, or right side of a frame window and they can also be floated in their own frame window.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>See class <bpt id="p1">[</bpt>CDialogBar<ept id="p1">](../mfc/reference/cdialogbar-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Rebars</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>rebar<ept id="p1">](../mfc/using-crebarctrl.md)</ept> is a control bar that provides docking, layout, state, and persistence information for rebar controls.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A rebar object can contain a variety of child windows, usually other controls, including edit boxes, toolbars, and list boxes.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A rebar object can display its child windows over a specified bitmap.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>It can be automatically or manually resized by clicking or dragging its gripper bar.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>See class <bpt id="p1">[</bpt>CReBar<ept id="p1">](../mfc/reference/crebar-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>User Interface Elements</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>