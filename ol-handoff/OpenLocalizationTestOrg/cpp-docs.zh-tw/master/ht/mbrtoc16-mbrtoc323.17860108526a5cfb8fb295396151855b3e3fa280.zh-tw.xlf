<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae238729bdd2e7e659ad3742d9d5709a55923ab6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\reference\mbrtoc16-mbrtoc323.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b9b7ef879254a74c781ba4b39cd0e9f0994b17f0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5fc1753dbd452a6041de21927a80ac7312715e0d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>mbrtoc16, mbrtoc323 | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>mbrtoc16, mbrtoc32</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Translates the first multibyte character in a narrow string into the equivalent UTF-16 or UTF-32 character.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Pointer to the <ph id="ph1">`char16_t`</ph> or <ph id="ph2">`char32_t`</ph> equivalent of the multibyte character to convert.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If null, the function does not store a value.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Pointer to the multibyte character string to convert.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes in <ph id="ph1">`source`</ph> to examine for a character to convert.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This should be a value between one and the number of bytes, including any null terminator, remaining in <ph id="ph1">`source`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Pointer to a <ph id="ph1">`mbstate_t`</ph> conversion state object used to interpret the multibyte string to one or more output characters.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>On success, returns the value of the first of these conditions that applies, given the current <ph id="ph1">`state`</ph> value:</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Condition</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The next <ph id="ph1">`max_bytes`</ph> or fewer characters converted from <ph id="ph2">`source`</ph> correspond to the null wide character, which is the value stored if <ph id="ph3">`destination`</ph> is not null.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>contains the initial shift state.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Between 1 and <ph id="ph1">`max_bytes`</ph>, inclusive</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The value returned is the number of bytes of <ph id="ph1">`source`</ph> that complete a valid multibyte character.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The converted wide character is stored  if <ph id="ph1">`destination`</ph> is not null.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>-3</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The next wide character resulting from a previous call to the function has been stored in <ph id="ph1">`destination`</ph> if <ph id="ph2">`destination`</ph> is not null.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>No bytes from <ph id="ph1">`source`</ph> are consumed by this call to the function.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When  <ph id="ph1">`source`</ph> points to a multibyte character that requires more than one wide character to represent (for example, a surrogate pair), then the <ph id="ph2">`state`</ph> value is updated so that the next function call writes  out the additional character.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>-2</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The next <ph id="ph1">`max_bytes`</ph> bytes represent an incomplete, but potentially valid, multibyte character.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>No value is stored in <ph id="ph1">`destination`</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This result can occur if <ph id="ph1">`max_bytes`</ph> is zero.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>-1</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An encoding error has occurred.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The next <ph id="ph1">`max_bytes`</ph> or fewer bytes do not contribute to a complete and valid multibyte character.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>No value is stored in <ph id="ph1">`destination`</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>is stored in <ph id="ph1">`errno`</ph> and the conversion state <ph id="ph2">`state`</ph> is unspecified.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`mbrtoc16`</ph> function reads up to <ph id="ph2">`max_bytes`</ph> bytes from <ph id="ph3">`source`</ph> to find  the first complete, valid multibyte character, and then stores the equivalent UTF-16 character in <ph id="ph4">`destination`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The source bytes are interpreted according to the current thread multibyte locale.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If the multibyte character requires more than one UTF-16 output character, such as a surrogate pair, then the <ph id="ph1">`state`</ph> value is set to store the next UTF-16 character in <ph id="ph2">`destination`</ph> on the next call to <ph id="ph3">`mbrtoc16`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`mbrtoc32`</ph> function is identical, but output is stored as a UTF-32 character.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`source`</ph> is null, these functions return the equivalent of a call made using arguments of <ph id="ph2">`NULL`</ph> for <ph id="ph3">`destination`</ph>, <ph id="ph4">`""`</ph> for <ph id="ph5">`source`</ph>,  and <ph id="ph6">`1`</ph> for <ph id="ph7">`max_bytes`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The passed values of <ph id="ph1">`destination`</ph> and <ph id="ph2">`max_bytes`</ph> are ignored.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`source`</ph> is not null, the function starts at the beginning of the string and inspects up to <ph id="ph2">`max_bytes`</ph> bytes to determine the number of bytes required to complete the next multibyte character, including any shift sequences.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If the examined bytes contain a valid and complete multibyte character, the function converts the character into the equivalent 16-bit or 32-bit wide character or characters.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`destination`</ph> is not null, the function stores the first (and possibly only) result character in destination.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If additional output characters are required, a value is set in <ph id="ph1">`state`</ph>, so that subsequent calls to the function output the additional characters and return the value -3.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If no more output characters are required, then <ph id="ph1">`state`</ph> is set to the initial shift state.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Function</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>C header</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>C++ header</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>,</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>uchar.h&gt;</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>cuchar&gt;</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For additional compatibility information, see <bpt id="p1">[</bpt>Compatibility<ept id="p1">](../../c-runtime-library/compatibility.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Data Conversion</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Locale</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Interpretation of Multibyte-Character Sequences</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>c16rtomb, c32rtomb</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>mbrtowc</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>mbsrtowcs</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>mbsrtowcs_s</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>