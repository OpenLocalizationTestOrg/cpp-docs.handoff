<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b94bd7cfcbc2193e2560c852e5b5f7ebd0008b8d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\time-management.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">da02b84047dbbc1e9a90d4b6db8fc3641eca705e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d6a26cec8f870355a3273c5c4db8900406d7d304</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Time Management | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Time Management</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Use these functions to get the current time and convert, adjust, and store it as necessary.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The current time is the system time.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`_ftime`</ph> and <ph id="ph2">`localtime`</ph> routines use the <ph id="ph3">`TZ`</ph> environment variable.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`TZ`</ph> is not set, the run-time library attempts to use the time-zone information specified by the operating system.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If this information is unavailable, these functions use the default value of PST8PDT.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For more information on <ph id="ph1">`TZ`</ph>, see <bpt id="p1">[</bpt>_tzset<ept id="p1">](../c-runtime-library/reference/tzset.md)</ept>; also see <bpt id="p2">[</bpt>_daylight, timezone, and _tzname<ept id="p2">](../c-runtime-library/daylight-dstbias-timezone-and-tzname.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Time Routines</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Function</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Use</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>.NET Framework equivalent</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>asctime, _wasctime<ept id="p1">](../c-runtime-library/reference/asctime-wasctime.md)</ept>, <bpt id="p2">[</bpt>asctime_s, _wasctime_s<ept id="p2">](../c-runtime-library/reference/asctime-s-wasctime-s.md)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Convert time from type <ph id="ph1">`struct tm`</ph> to character string.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The versions of these functions with the <ph id="ph1">`_s`</ph> suffix are more secure.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System::DateTime::ToLongDateString<ept id="p1">](https://msdn.microsoft.com/en-us/library/system.datetime.tolongdatestring.aspx)</ept>, <bpt id="p2">[</bpt>System::DateTime::ToLongTimeString<ept id="p2">](https://msdn.microsoft.com/en-us/library/system.datetime.tolongtimestring.aspx)</ept>, <bpt id="p3">[</bpt>System::DateTime::ToShortDateString<ept id="p3">](https://msdn.microsoft.com/en-us/library/system.datetime.toshortdatestring.aspx)</ept>, <bpt id="p4">[</bpt>System::DateTime::ToShortTimeString<ept id="p4">](https://msdn.microsoft.com/en-us/library/system.datetime.toshorttimestring.aspx)</ept>, <bpt id="p5">[</bpt>System::DateTime::ToString<ept id="p5">](https://msdn.microsoft.com/en-us/library/system.datetime.tostring.aspx)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>clock</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Return elapsed wall-clock time for process.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Not applicable.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To call the standard C function, use <ph id="ph1">`PInvoke`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Platform Invoke Examples<ept id="p1">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ctime, _ctime32, _ctime64, _wctime, _wctime32, _wctime64<ept id="p1">](../c-runtime-library/reference/ctime-ctime32-ctime64-wctime-wctime32-wctime64.md)</ept>, <bpt id="p2">[</bpt>_ctime_s, _ctime32_s, _ctime64_s, _wctime_s, _wctime32_s, _wctime64_s<ept id="p2">](../c-runtime-library/reference/ctime-s-ctime32-s-ctime64-s-wctime-s-wctime32-s-wctime64-s.md)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Convert time from type <ph id="ph1">`time_t`</ph>, <ph id="ph2">`__time32_t`</ph> or <ph id="ph3">`__time64_t`</ph> to character string.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The versions of these functions with the <ph id="ph1">`_s`</ph> suffix are more secure.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System::DateTime::GetDateTimeFormats<ept id="p1">](https://msdn.microsoft.com/en-us/library/system.datetime.getdatetimeformats.aspx)</ept>, <bpt id="p2">[</bpt>System::DateTime::ToString<ept id="p2">](https://msdn.microsoft.com/en-us/library/system.datetime.tostring.aspx)</ept>, <bpt id="p3">[</bpt>System::DateTime::ToLongTimeString<ept id="p3">](https://msdn.microsoft.com/en-us/library/system.datetime.tolongtimestring.aspx)</ept>, <bpt id="p4">[</bpt>System::DateTime::ToShortTimeString<ept id="p4">](https://msdn.microsoft.com/en-us/library/system.datetime.toshorttimestring.aspx)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>difftime, _difftime32, _difftime64</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Compute difference between two times.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>System::DateTime::Subtract</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>_ftime, _ftime32, _ftime64<ept id="p1">](../c-runtime-library/reference/ftime-ftime32-ftime64.md)</ept>,<bpt id="p2">[</bpt>_ftime_s, _ftime32_s, _ftime64_s<ept id="p2">](../c-runtime-library/reference/ftime-s-ftime32-s-ftime64-s.md)</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Store current system time in variable of type <ph id="ph1">`struct _timeb`</ph> or type <ph id="ph2">`struct``__timeb64`</ph> The versions of these functions with the <ph id="ph3">`_s`</ph> suffix are more secure.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>System::DateTime::Now</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>_futime, _futime32, _futime64</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Set modification time on open file</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System::IO::File::SetLastAccessTime<ept id="p1">](https://msdn.microsoft.com/en-us/library/system.io.file.setlastaccesstime.aspx)</ept>, <bpt id="p2">[</bpt>System::IO::File::SetLastWriteTime<ept id="p2">](https://msdn.microsoft.com/en-us/library/system.io.file.setlastwritetime.aspx)</ept>, <bpt id="p3">[</bpt>System::IO::File::SetCreationTime<ept id="p3">](https://msdn.microsoft.com/en-us/library/system.io.file.setcreationtime.aspx)</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>gmtime, _gmtime32, _gmtime64<ept id="p1">](../c-runtime-library/reference/gmtime-gmtime32-gmtime64.md)</ept>, <bpt id="p2">[</bpt>gmtime_s, _gmtime32_s, _gmtime64_s<ept id="p2">](../c-runtime-library/reference/gmtime-s-gmtime32-s-gmtime64-s.md)</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Convert time from type <ph id="ph1">`time_t`</ph> to <ph id="ph2">`struct tm`</ph> or from type <ph id="ph3">`__time64_t`</ph> to <ph id="ph4">`struct tm`</ph>.The versions of these functions with the <ph id="ph5">`_s`</ph> suffix are more secure.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System::DateTime::UtcNow<ept id="p1">](https://msdn.microsoft.com/en-us/library/system.datetime.utcnow.aspx)</ept>, <bpt id="p2">[</bpt>System::DateTime::ToUniversalTime<ept id="p2">](https://msdn.microsoft.com/en-us/library/system.datetime.touniversaltime.aspx)</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>localtime, _localtime32, _localtime64<ept id="p1">](../c-runtime-library/reference/localtime-localtime32-localtime64.md)</ept>, <bpt id="p2">[</bpt>localtime_s, _localtime32_s, _localtime64_s<ept id="p2">](../c-runtime-library/reference/localtime-s-localtime32-s-localtime64-s.md)</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Convert time from type <ph id="ph1">`time_t`</ph> to <ph id="ph2">`struct tm`</ph> or from type <ph id="ph3">`__time64_t`</ph> to <ph id="ph4">`struct tm`</ph>with local correction.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The versions of these functions with the <ph id="ph1">`_s`</ph> suffix are more secure.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>System::DateTime::ToLocalTime</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>_mkgmtime, _mkgmtime32, _mkgmtime64</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Convert time to calendar value in Greenwich Mean Time.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>System::DateTime::ToUniversalTime</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>mktime, _mktime32, _mktime64</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Convert time to calendar value.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>System::DateTime::DateTime</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>_strdate, _wstrdate<ept id="p1">](../c-runtime-library/reference/strdate-wstrdate.md)</ept>, <bpt id="p2">[</bpt>_strdate_s, _wstrdate_s<ept id="p2">](../c-runtime-library/reference/strdate-s-wstrdate-s.md)</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Return current system date as string.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The versions of these functions with the <ph id="ph1">`_s`</ph> suffix are more secure.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Not applicable.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To call the standard C function, use <ph id="ph1">`PInvoke`</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Platform Invoke Examples<ept id="p1">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>strftime, wcsftime, _strftime_l, _wcsftime_l</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Format date-and-time string for international use.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System::DateTime::ToLongDateString<ept id="p1">](https://msdn.microsoft.com/en-us/library/system.datetime.tolongdatestring.aspx)</ept>, <bpt id="p2">[</bpt>System::DateTime::ToLongTimeString<ept id="p2">](https://msdn.microsoft.com/en-us/library/system.datetime.tolongtimestring.aspx)</ept>, <bpt id="p3">[</bpt>System::DateTime::ToShortDateString<ept id="p3">](https://msdn.microsoft.com/en-us/library/system.datetime.toshortdatestring.aspx)</ept>, <bpt id="p4">[</bpt>System::DateTime::ToShortTimeString<ept id="p4">](https://msdn.microsoft.com/en-us/library/system.datetime.toshorttimestring.aspx)</ept>, <bpt id="p5">[</bpt>System::DateTime::ToString<ept id="p5">](https://msdn.microsoft.com/en-us/library/system.datetime.tostring.aspx)</ept></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>_strtime, _wstrtime<ept id="p1">](../c-runtime-library/reference/strtime-wstrtime.md)</ept>, <bpt id="p2">[</bpt>_strtime_s, _wstrtime_s<ept id="p2">](../c-runtime-library/reference/strtime-s-wstrtime-s.md)</ept></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Return current system time as string.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The versions of these functions with the <ph id="ph1">`_s`</ph> suffix are more secure.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System::DateTime::ToLongDateString<ept id="p1">](https://msdn.microsoft.com/en-us/library/system.datetime.tolongdatestring.aspx)</ept>, <bpt id="p2">[</bpt>System::DateTime::ToLongTimeString<ept id="p2">](https://msdn.microsoft.com/en-us/library/system.datetime.tolongtimestring.aspx)</ept>, <bpt id="p3">[</bpt>System::DateTime::ToShortDateString<ept id="p3">](https://msdn.microsoft.com/en-us/library/system.datetime.toshortdatestring.aspx)</ept>, <bpt id="p4">[</bpt>System::DateTime::ToShortTimeString<ept id="p4">](https://msdn.microsoft.com/en-us/library/system.datetime.toshorttimestring.aspx)</ept>, <bpt id="p5">[</bpt>System::DateTime::ToString<ept id="p5">](https://msdn.microsoft.com/en-us/library/system.datetime.tostring.aspx)</ept></source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>time, _time32, _time64</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Get current system time as type <ph id="ph1">`time_t`</ph>, <ph id="ph2">`__time32_t`</ph> or as type <ph id="ph3">`__time64_t`</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Not applicable.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>To call the standard C function, use <ph id="ph1">`PInvoke`</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Platform Invoke Examples<ept id="p1">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>_tzset</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Set external time variables from environment time variable <ph id="ph1">`TZ`</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Not applicable.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>To call the standard C function, use <ph id="ph1">`PInvoke`</ph>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Platform Invoke Examples<ept id="p1">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>_utime, _utime32, _utime64, _wutime, _wutime32, _wutime64</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Set modification time for specified file using either current time or time value stored in structure.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Not applicable.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>To call the standard C function, use <ph id="ph1">`PInvoke`</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Platform Invoke Examples<ept id="p1">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>In all versions of Microsoft C/C++ except Microsoft C/C++ version 7.0, and in all versions of Visual C++, the time function returns the current time as the number of seconds elapsed since midnight on January 1, 1970.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>In Microsoft C/C++ version 7.0, <ph id="ph1">`time`</ph> returned the current time as the number of seconds elapsed since midnight on December 31, 1899.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>In versions of <ph id="ph1">[!INCLUDE[vcprvc](../build/includes/vcprvc_md.md)]</ph> and Microsoft C/C++ before Visual C++ 2005, <ph id="ph2">`time_t`</ph> was a <ph id="ph3">`long int`</ph> (32 bits) and hence could not be used for dates past 3:14:07 January 19, 2038, UTC.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>is now equivalent to <ph id="ph1">`__time64_t`</ph> by default, but defining <ph id="ph2">`_USE_32BIT_TIME_T`</ph> changes <ph id="ph3">`time_t`</ph> to <ph id="ph4">`__time32_t`</ph> and forces many time functions to call versions that take the 32-bit <ph id="ph5">`time_t`</ph>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Standard Types<ept id="p1">](../c-runtime-library/standard-types.md)</ept> and comments in the documentation for the individual time functions.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Run-Time Routines by Category</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>