<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fe5b8a6f3714ab56eb8a4d3c9596a55129fd78d3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\ccomsafedeletecriticalsection-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bbc5e9764e10390defc96898c5335ac6f18f4b1c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">274a9a0efa9e86a156e107395441176e89c2e74f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CComSafeDeleteCriticalSection Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CComSafeDeleteCriticalSection Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class provides methods for obtaining and releasing ownership of a critical section object.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>CComSafeDeleteCriticalSection::CComSafeDeleteCriticalSection</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The constructor.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>CComSafeDeleteCriticalSection::~CComSafeDeleteCriticalSection</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The destructor.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>CComSafeDeleteCriticalSection::Init</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Creates and initializes a critical section object.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>CComSafeDeleteCriticalSection::Lock</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Obtains ownership of the critical section object.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>CComSafeDeleteCriticalSection::Term</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Releases system resources used by the critical section object.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Data Members</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>m_bInitialized</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Flags whether the internal <bpt id="p1">**</bpt>CRITICAL_SECTION<ept id="p1">**</ept> object has been initialized.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>derives from the class <bpt id="p1">[</bpt>CComCriticalSection<ept id="p1">](../../atl/reference/ccomcriticalsection-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>However, <ph id="ph1">`CComSafeDeleteCriticalSection`</ph> provides additional safety mechanisms over <bpt id="p1">[</bpt>CComCriticalSection<ept id="p1">](../../atl/reference/ccomcriticalsection-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When an instance of <ph id="ph1">`CComSafeDeleteCriticalSection`</ph> goes out of scope or is explicitly deleted from memory, the underlying critical section object will automatically be cleaned up if it is still valid.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In addition, the <bpt id="p1">[</bpt>CComSafeDeleteCriticalSection::Term<ept id="p1">](#ccomsafedeletecriticalsection__term)</ept> method will exit gracefully if the underlying critical section object has not yet been allocated or has already been released from memory.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CComCriticalSection<ept id="p1">](../../atl/reference/ccomcriticalsection-class.md)</ept> for more information on critical section helper classes.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>CComCriticalSection</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> atlcore.h</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>CComSafeDeleteCriticalSection::CComSafeDeleteCriticalSection</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The constructor.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Sets the <bpt id="p1">[</bpt>m_bInitialized<ept id="p1">](#ccomsafedeletecriticalsection__m_binitialized)</ept> data member to <bpt id="p2">**</bpt>false<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>CComSafeDeleteCriticalSection::~CComSafeDeleteCriticalSection</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The destructor.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Releases the internal <bpt id="p1">**</bpt>CRITICAL_SECTION<ept id="p1">**</ept> object from memory if the <bpt id="p2">[</bpt>m_bInitialized<ept id="p2">](#ccomsafedeletecriticalsection__m_binitialized)</ept> data member is set to <bpt id="p3">**</bpt>true<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>CComSafeDeleteCriticalSection::Init</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Calls the base class implementation of <bpt id="p1">[</bpt>Init<ept id="p1">](/visualstudio/debugger/init)</ept> and sets <bpt id="p2">[</bpt>m_bInitialized<ept id="p2">](#ccomsafedeletecriticalsection__m_binitialized)</ept> to <bpt id="p3">**</bpt>true<ept id="p3">**</ept> if successful.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Returns the result of <bpt id="p1">[</bpt>CComCriticalSection::Init<ept id="p1">](../../atl/reference/ccomcriticalsection-class.md#ccomcriticalsection__init)</ept>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>CComSafeDeleteCriticalSection::Lock</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Calls the base class implementation of <bpt id="p1">[</bpt>Lock<ept id="p1">](ccomcriticalsection-class.md#ccomcriticalsection__lock)</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Returns the result of <bpt id="p1">[</bpt>CComCriticalSection::Lock<ept id="p1">](../../atl/reference/ccomcriticalsection-class.md#ccomcriticalsection__lock)</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This method assumes the <bpt id="p1">[</bpt>m_bInitialized<ept id="p1">](#ccomsafedeletecriticalsection__m_binitialized)</ept> data member is set to <bpt id="p2">**</bpt>true<ept id="p2">**</ept> upon entry.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>An assertion is generated in Debug builds if this condidtion is not met.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For more information on the behavior of the function, refer to <bpt id="p1">[</bpt>CComCriticalSection::Lock<ept id="p1">](../../atl/reference/ccomcriticalsection-class.md#ccomcriticalsection__lock)</ept>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>CComSafeDeleteCriticalSection::m_bInitialized</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Flags whether the internal <bpt id="p1">**</bpt>CRITICAL_SECTION<ept id="p1">**</ept> object has been initialized.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>m_bInitialized<ept id="p1">**</ept> data member is used to track validity of the underlying <bpt id="p2">**</bpt>CRITICAL_SECTION<ept id="p2">**</ept> object associated with the <bpt id="p3">[</bpt>CComSafeDeleteCriticalSection<ept id="p3">](../../atl/reference/ccomsafedeletecriticalsection-class.md)</ept> class.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The underlying <bpt id="p1">**</bpt>CRITICAL_SECTION<ept id="p1">**</ept> object will not be attempted to be released from memory if this flag is not set to <bpt id="p2">**</bpt>true<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>CComSafeDeleteCriticalSection::Term</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Calls the base class implementation of <bpt id="p1">[</bpt>CComCriticalSection::Term<ept id="p1">](../../atl/reference/ccomcriticalsection-class.md#ccomcriticalsection__term)</ept> if the internal <bpt id="p2">**</bpt>CRITICAL_SECTION<ept id="p2">**</ept> object is valid.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Returns the result of <bpt id="p1">[</bpt>CComCriticalSection::Term<ept id="p1">](../../atl/reference/ccomcriticalsection-class.md#ccomcriticalsection__term)</ept>, or <bpt id="p2">**</bpt>S_OK<ept id="p2">**</ept> if <bpt id="p3">[</bpt>m_bInitialized<ept id="p3">](#ccomsafedeletecriticalsection__m_binitialized)</ept> was set to <bpt id="p4">**</bpt>false<ept id="p4">**</ept> upon entry.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>It is safe to call this method even if the internal <bpt id="p1">**</bpt>CRITICAL_SECTION<ept id="p1">**</ept> object is not valid.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The destructor of this class calls this method if the <bpt id="p1">[</bpt>m_bInitialized<ept id="p1">](#ccomsafedeletecriticalsection__m_binitialized)</ept> data member is set to <bpt id="p2">**</bpt>true<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>CComCriticalSection Class</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Class Overview</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>