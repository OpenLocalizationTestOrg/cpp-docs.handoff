<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ab44402b9d97585427c2af7f6b3387d0e30ac865</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\cautorevertimpersonation-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9edb1f87b9b79216089767317cb884d5db54b0bc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a16b2503f3de658f615369061e11a35c85d89503</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CAutoRevertImpersonation Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CAutoRevertImpersonation Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class reverts <bpt id="p1">[</bpt>CAccessToken<ept id="p1">](../../atl/reference/caccesstoken-class.md)</ept> objects to a nonimpersonating state when it goes out of scope.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAutoRevertImpersonation::CAutoRevertImpersonation<ept id="p1">](#cautorevertimpersonation__cautorevertimpersonation)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs an <ph id="ph1">`CAutoRevertImpersonation`</ph> object</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAutoRevertImpersonation::~CAutoRevertImpersonation<ept id="p1">](#cautorevertimpersonation___dtorcautorevertimpersonation)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Destroys the object and reverts access token impersonation.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAutoRevertImpersonation::Attach<ept id="p1">](#cautorevertimpersonation__attach)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Automates the impersonation reversion of an access token.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAutoRevertImpersonation::Detach<ept id="p1">](#cautorevertimpersonation__detach)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Cancels the automatic impersonation reversion.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAutoRevertImpersonation::GetAccessToken<ept id="p1">](#cautorevertimpersonation__getaccesstoken)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Retrieves the access token current associated with this object.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">[</bpt>access token<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa374909)</ept> is an object that describes the security context of a process or thread and is allocated to each user logged onto a Windows NT or Windows 2000 system.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>These access tokens can be represented with the <ph id="ph1">`CAccessToken`</ph> class.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>It is sometimes necessary to impersonate access tokens.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This class is provided as a convenience, but it does not perform the impersonation of access tokens; it only performs the automatic reversion to a nonimpersonated state.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This is because token access impersonation can be performed several different ways.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For an introduction to the access control model in Windows, see <bpt id="p1">[</bpt>Access Control<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa374860)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> atlsecurity.h</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cautorevertimpersonation__attach"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CAutoRevertImpersonation::Attach</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Automates the impersonation reversion of an access token.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The address of the <bpt id="p1">[</bpt>CAccessToken<ept id="p1">](../../atl/reference/caccesstoken-class.md)</ept> object to be reverted automatically</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This method should only be used if the <bpt id="p1">[</bpt>CAutoRevertImpersonation<ept id="p1">](../../atl/reference/cautorevertimpersonation-class.md)</ept> object was created with a NULL <ph id="ph1">`CAccessToken`</ph> pointer, or if <bpt id="p2">[</bpt>Detach<ept id="p2">](#cautorevertimpersonation__detach)</ept> was called previously.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For simple cases, it is not necessary to use this method.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cautorevertimpersonation__cautorevertimpersonation"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CAutoRevertImpersonation::CAutoRevertImpersonation</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CAutoRevertImpersonation`</ph> object.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The address of the <bpt id="p1">[</bpt>CAccessToken<ept id="p1">](../../atl/reference/caccesstoken-class.md)</ept> object to be reverted automatically.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The actual impersonation of the access token should be performed separately from and preferably before the creation of a <ph id="ph1">`CAutoRevertImpersonation`</ph> object.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This impersonation will be reverted automatically when the <ph id="ph1">`CAutoRevertImpersonation`</ph> object goes out of scope.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cautorevertimpersonation___dtorcautorevertimpersonation"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CAutoRevertImpersonation::~CAutoRevertImpersonation</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Destroys the object and reverts access token impersonation.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Reverts any impersonation currently in effect for the <bpt id="p1">[</bpt>CAccessToken<ept id="p1">](../../atl/reference/caccesstoken-class.md)</ept> object provided either at construction or through the <bpt id="p2">[</bpt>Attach<ept id="p2">](#cautorevertimpersonation__attach)</ept> method.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If no <ph id="ph1">`CAccessToken`</ph> is associated, the destructor has no effect.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cautorevertimpersonation__detach"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CAutoRevertImpersonation::Detach</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Cancels the automatic impersonation reversion.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The address of the previously associated <bpt id="p1">[</bpt>CAccessToken<ept id="p1">](../../atl/reference/caccesstoken-class.md)</ept>, or NULL if no association existed.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Calling <bpt id="p1">**</bpt>Detach<ept id="p1">**</ept> prevents the <ph id="ph1">`CAutoRevertImpersonation`</ph> object from reverting any impersonation currently in effect for the <bpt id="p2">[</bpt>CAccessToken<ept id="p2">](../../atl/reference/caccesstoken-class.md)</ept> object associated with this object.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CAutoRevertImpersonation`</ph> can then be destroyed with no effect or reassociated to the same or another <ph id="ph2">`CAccessToken`</ph> object using <bpt id="p1">[</bpt>Attach<ept id="p1">](#cautorevertimpersonation__attach)</ept>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cautorevertimpersonation__getaccesstoken"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CAutoRevertImpersonation::GetAccessToken</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Retrieves the access token current associated with this object.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The address of the previously associated <bpt id="p1">[</bpt>CAccessToken<ept id="p1">](../../atl/reference/caccesstoken-class.md)</ept>, or NULL if no association existed.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If this method is called for the purposes that include the reversion of an impersonation of the <ph id="ph1">`CAccessToken`</ph> object, the <bpt id="p1">[</bpt>Detach<ept id="p1">](#cautorevertimpersonation__detach)</ept> method should be used instead.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ATLSecurity Sample<ept id="p1">](../../visual-cpp-samples.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Access Tokens<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa374909)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Class Overview<ept id="p1">](../../atl/atl-class-overview.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>