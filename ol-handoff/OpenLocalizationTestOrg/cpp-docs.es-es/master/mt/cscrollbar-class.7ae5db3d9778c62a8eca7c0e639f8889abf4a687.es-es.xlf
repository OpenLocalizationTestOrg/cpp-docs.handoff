<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e48e0b43236de6fa4d5f10a63a25d4b5380a7ee6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\cscrollbar-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c6a8fe6d744741df9c5ed496da1004c51b4861f7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fd0aa420faa0be436a2bcf64fab87a610ac4764a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CScrollBar Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CScrollBar Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Provides the functionality of a Windows scroll-bar control.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CScrollBar::CScrollBar<ept id="p1">](#cscrollbar__cscrollbar)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CScrollBar`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CScrollBar::Create<ept id="p1">](#cscrollbar__create)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Creates the Windows scroll bar and attaches it to the <ph id="ph1">`CScrollBar`</ph> object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CScrollBar::EnableScrollBar<ept id="p1">](#cscrollbar__enablescrollbar)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Enables or disables one or both arrows of a scroll bar.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CScrollBar::GetScrollBarInfo<ept id="p1">](#cscrollbar__getscrollbarinfo)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Retrieves information about the scroll bar using a <ph id="ph1">`SCROLLBARINFO`</ph> structure.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CScrollBar::GetScrollInfo<ept id="p1">](#cscrollbar__getscrollinfo)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Retrieves information about the scroll bar.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CScrollBar::GetScrollLimit<ept id="p1">](#cscrollbar__getscrolllimit)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Retrieves the limit of the scroll bar</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CScrollBar::GetScrollPos<ept id="p1">](#cscrollbar__getscrollpos)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Retrieves the current position of a scroll box.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CScrollBar::GetScrollRange<ept id="p1">](#cscrollbar__getscrollrange)</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Retrieves the current minimum and maximum scroll-bar positions for the given scroll bar.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CScrollBar::SetScrollInfo<ept id="p1">](#cscrollbar__setscrollinfo)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Sets information about the scroll bar.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CScrollBar::SetScrollPos<ept id="p1">](#cscrollbar__setscrollpos)</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Sets the current position of a scroll box.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CScrollBar::SetScrollRange<ept id="p1">](#cscrollbar__setscrollrange)</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Sets minimum and maximum position values for the given scroll bar.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CScrollBar::ShowScrollBar<ept id="p1">](#cscrollbar__showscrollbar)</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Shows or hides a scroll bar.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You create a scroll-bar control in two steps.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>First, call the constructor <ph id="ph1">`CScrollBar`</ph> to construct the <ph id="ph2">`CScrollBar`</ph> object, then call the <bpt id="p1">[</bpt>Create<ept id="p1">](#cscrollbar__create)</ept> member function to create the Windows scroll-bar control and attach it to the <ph id="ph3">`CScrollBar`</ph> object.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If you create a <ph id="ph1">`CScrollBar`</ph> object within a dialog box (through a dialog resource), the <ph id="ph2">`CScrollBar`</ph> is automatically destroyed when the user closes the dialog box.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If you create a <ph id="ph1">`CScrollBar`</ph> object within a window, you may also need to destroy it.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If you create the <ph id="ph1">`CScrollBar`</ph> object on the stack, it is destroyed automatically.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If you create the <ph id="ph1">`CScrollBar`</ph> object on the heap by using the <bpt id="p1">**</bpt>new<ept id="p1">**</ept> function, you must call <bpt id="p2">**</bpt>delete<ept id="p2">**</ept> on the object to destroy it when the user terminates the Windows scroll bar.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If you allocate any memory in the <ph id="ph1">`CScrollBar`</ph> object, override the <ph id="ph2">`CScrollBar`</ph> destructor to dispose of the allocations.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For related information about using <ph id="ph1">`CScrollBar`</ph>, see <bpt id="p1">[</bpt>Controls<ept id="p1">](../../mfc/controls-mfc.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CObject<ept id="p1">](../../mfc/reference/cobject-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CCmdTarget<ept id="p1">](../../mfc/reference/ccmdtarget-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CWnd<ept id="p1">](../../mfc/reference/cwnd-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxwin.h</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cscrollbar__create"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CScrollBar::Create</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Creates the Windows scroll bar and attaches it to the <ph id="ph1">`CScrollBar`</ph> object.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Specifies the scroll bar's style.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Apply any combination of <bpt id="p1">[</bpt>scroll-bar styles<ept id="p1">](../../mfc/reference/scroll-bar-styles.md)</ept> to the scroll bar.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Specifies the scroll bar's size and position.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Can be either a <ph id="ph1">`RECT`</ph> structure or a <ph id="ph2">`CRect`</ph> object.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Specifies the scroll bar's parent window, usually a <ph id="ph1">`CDialog`</ph> object.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>It must not be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The scroll bar's control ID.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You construct a <ph id="ph1">`CScrollBar`</ph> object in two steps.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>First, call the constructor, which constructs the <ph id="ph1">`CScrollBar`</ph> object; then call <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>, which creates and initializes the associated Windows scroll bar and attaches it to the <ph id="ph2">`CScrollBar`</ph> object.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Apply the following <bpt id="p1">[</bpt>window styles<ept id="p1">](../../mfc/reference/window-styles.md)</ept> to a scroll bar:</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>WS_CHILD<ept id="p1">**</ept> Always</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>WS_VISIBLE<ept id="p1">**</ept> Usually</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>WS_DISABLED<ept id="p1">**</ept> Rarely</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>WS_GROUP<ept id="p1">**</ept> To group controls</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CScrollBar#1<ept id="p2">](../../mfc/reference/codesnippet/cpp/cscrollbar-class_1.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cscrollbar__cscrollbar"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CScrollBar::CScrollBar</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CScrollBar`</ph> object.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>After constructing the object, call the <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> member function to create and initialize the Windows scroll bar.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CScrollBar#2<ept id="p2">](../../mfc/reference/codesnippet/cpp/cscrollbar-class_2.h)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cscrollbar__enablescrollbar"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CScrollBar::EnableScrollBar</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Enables or disables one or both arrows of a scroll bar.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Specifies whether the scroll arrows are enabled or disabled and which arrows are enabled or disabled.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This parameter can be one of the following values:</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ESB_ENABLE_BOTH<ept id="p1">**</ept> Enables both arrows of a scroll bar.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ESB_DISABLE_LTUP<ept id="p1">**</ept> Disables the left arrow of a horizontal scroll bar or the up arrow of a vertical scroll bar.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ESB_DISABLE_RTDN<ept id="p1">**</ept> Disables the right arrow of a horizontal scroll bar or the down arrow of a vertical scroll bar.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ESB_DISABLE_BOTH<ept id="p1">**</ept> Disables both arrows of a scroll bar.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Nonzero if the arrows are enabled or disabled as specified; otherwise 0, which indicates that the arrows are already in the requested state or that an error occurred.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CScrollBar::SetScrollRange<ept id="p1">](#cscrollbar__setscrollrange)</ept>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cscrollbar__getscrollbarinfo"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CScrollBar::GetScrollBarInfo</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Retrieves the information that the <bpt id="p1">**</bpt>SCROLLBARINFO<ept id="p1">**</ept> structure maintains about a scroll bar.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>pScrollInfo<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>A pointer to the <bpt id="p1">[</bpt>SCROLLBARINFO<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787535)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> on success, <bpt id="p2">**</bpt>FALSE<ept id="p2">**</ept> on failure.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This member function emulates the functionality of the <bpt id="p1">[</bpt>SBM_SCROLLBARINFO<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787545)</ept> message, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cscrollbar__getscrollinfo"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CScrollBar::GetScrollInfo</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Retrieves the information that the <ph id="ph1">`SCROLLINFO`</ph> structure maintains about a scroll bar.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>SCROLLINFO<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787537)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>See the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> for more information about this structure.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Specifies the scroll bar parameters to retrieve.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Typical usage, SIF_ALL, specifies a combination of SIF_PAGE, SIF_POS, SIF_TRACKPOS, and SIF_RANGE.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>See <ph id="ph1">`SCROLLINFO`</ph> for more information on the nMask values.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>If the message retrieved any values, the return is <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Otherwise, it is <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`GetScrollInfo`</ph> enables applications to use 32-bit scroll positions.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>SCROLLINFO<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787537)</ept> structure contains information about a scroll bar, including the minimum and maximum scrolling positions, the page size, and the position of the scroll box (the thumb).</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>See the <ph id="ph1">`SCROLLINFO`</ph> structure topic in the <ph id="ph2">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> for more information about changing the structure defaults.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The MFC Windows message handlers that indicate scroll bar position, <bpt id="p1">[</bpt>CWnd::OnHScroll<ept id="p1">](../../mfc/reference/cwnd-class.md#cwnd__onhscroll)</ept> and <bpt id="p2">[</bpt>CWnd::OnVScroll<ept id="p2">](../../mfc/reference/cwnd-class.md#cwnd__onvscroll)</ept>, provide only 16 bits of position data.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`GetScrollInfo`</ph> and <ph id="ph2">`SetScrollInfo`</ph> provide 32 bits of scroll bar position data.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Thus, an application can call <ph id="ph1">`GetScrollInfo`</ph> while processing either <ph id="ph2">`CWnd::OnHScroll`</ph> or <ph id="ph3">`CWnd::OnVScroll`</ph> to obtain 32-bit scroll bar position data.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CWnd::OnHScroll<ept id="p1">](../../mfc/reference/cwnd-class.md#cwnd__onhscroll)</ept>.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cscrollbar__getscrolllimit"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CScrollBar::GetScrollLimit</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Retrieves the maximum scrolling position of the scroll bar.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Specifies the maximum position of a scroll bar if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CWnd::OnHScroll<ept id="p1">](../../mfc/reference/cwnd-class.md#cwnd__onhscroll)</ept>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cscrollbar__getscrollpos"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CScrollBar::GetScrollPos</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Retrieves the current position of a scroll box.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Specifies the current position of the scroll box if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The current position is a relative value that depends on the current scrolling range.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>For example, if the scrolling range is 100 to 200 and the scroll box is in the middle of the bar, the current position is 150.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CWnd::OnHScroll<ept id="p1">](../../mfc/reference/cwnd-class.md#cwnd__onhscroll)</ept>.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cscrollbar__getscrollrange"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CScrollBar::GetScrollRange</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Copies the current minimum and maximum scroll-bar positions for the given scroll bar to the locations specified by <ph id="ph1">`lpMinPos`</ph> and <ph id="ph2">`lpMaxPos`</ph>.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Points to the integer variable that is to receive the minimum position.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Points to the integer variable that is to receive the maximum position.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The default range for a scroll-bar control is empty (both values are 0).</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CWnd::OnHScroll<ept id="p1">](../../mfc/reference/cwnd-class.md#cwnd__onhscroll)</ept>.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cscrollbar__setscrollinfo"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CScrollBar::SetScrollInfo</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Sets the information that the <ph id="ph1">`SCROLLINFO`</ph> structure maintains about a scroll bar.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>SCROLLINFO<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787537)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Specifies whether the scroll bar should be redrawn to reflect the new information.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`bRedraw`</ph> is <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>, the scroll bar is redrawn.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>If it is <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>, it is not redrawn.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The scroll bar is redrawn by default.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>If successful, the return is <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Otherwise, it is <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>You must provide the values required by the <ph id="ph1">`SCROLLINFO`</ph> structure parameters, including the flag values.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`SCROLLINFO`</ph> structure contains information about a scroll bar, including the minimum and maximum scrolling positions, the page size, and the position of the scroll box (the thumb).</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>SCROLLINFO<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb787537)</ept> structure topic in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> for more information about changing the structure defaults.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CScrollBar#3<ept id="p2">](../../mfc/reference/codesnippet/cpp/cscrollbar-class_3.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cscrollbar__setscrollpos"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CScrollBar::SetScrollPos</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Sets the current position of a scroll box to that specified by <ph id="ph1">`nPos`</ph> and, if specified, redraws the scroll bar to reflect the new position.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Specifies the new position for the scroll box.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>It must be within the scrolling range.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Specifies whether the scroll bar should be redrawn to reflect the new position.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`bRedraw`</ph> is <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>, the scroll bar is redrawn.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>If it is <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>, it is not redrawn.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The scroll bar is redrawn by default.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Specifies the previous position of the scroll box if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Set <ph id="ph1">`bRedraw`</ph> to <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept> whenever the scroll bar will be redrawn by a subsequent call to another function to avoid having the scroll bar redrawn twice within a short interval.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CScrollBar::SetScrollRange<ept id="p1">](#cscrollbar__setscrollrange)</ept>.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cscrollbar__setscrollrange"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CScrollBar::SetScrollRange</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Sets minimum and maximum position values for the given scroll bar.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Specifies the minimum scrolling position.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Specifies the maximum scrolling position.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Specifies whether the scroll bar should be redrawn to reflect the change.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`bRedraw`</ph> is <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>, the scroll bar is redrawn; if <bpt id="p2">**</bpt>FALSE<ept id="p2">**</ept>, it is not redrawn.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>It is redrawn by default.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Set <ph id="ph1">`nMinPos`</ph> and <ph id="ph2">`nMaxPos`</ph> to 0 to hide standard scroll bars.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Do not call this function to hide a scroll bar while processing a scroll-bar notification message.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>If a call to <ph id="ph1">`SetScrollRange`</ph> immediately follows a call to the <ph id="ph2">`SetScrollPos`</ph> member function, set <ph id="ph3">`bRedraw`</ph> in <ph id="ph4">`SetScrollPos`</ph> to 0 to prevent the scroll bar from being redrawn twice.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The difference between the values specified by <ph id="ph1">`nMinPos`</ph> and <ph id="ph2">`nMaxPos`</ph> must not be greater than 32,767.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The default range for a scroll-bar control is empty (both <ph id="ph1">`nMinPos`</ph> and <ph id="ph2">`nMaxPos`</ph> are 0).</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_CScrollBar#4<ept id="p2">](../../mfc/reference/codesnippet/cpp/cscrollbar-class_4.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cscrollbar__showscrollbar"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CScrollBar::ShowScrollBar</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Shows or hides a scroll bar.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Specifies whether the scroll bar is shown or hidden.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>If this parameter is <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>, the scroll bar is shown; otherwise it is hidden.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>An application should not call this function to hide a scroll bar while processing a scroll-bar notification message.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CScrollBar::Create<ept id="p1">](#cscrollbar__create)</ept>.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CWnd Class<ept id="p1">](../../mfc/reference/cwnd-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Hierarchy Chart<ept id="p1">](../../mfc/hierarchy-chart.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CWnd Class<ept id="p1">](../../mfc/reference/cwnd-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CButton Class<ept id="p1">](../../mfc/reference/cbutton-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CComboBox Class<ept id="p1">](../../mfc/reference/ccombobox-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CEdit Class<ept id="p1">](../../mfc/reference/cedit-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CListBox Class<ept id="p1">](../../mfc/reference/clistbox-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CStatic Class<ept id="p1">](../../mfc/reference/cstatic-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CDialog Class<ept id="p1">](../../mfc/reference/cdialog-class.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>