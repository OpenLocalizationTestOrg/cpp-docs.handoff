<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2f3a38c4ba6abd87ebf7644fce47d27253c73ed0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\cmdichildwndex-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">848e3f1aac8df5a47849fc0a24363068698483f3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c5b61c95640110006415e6418a5470f7a0e89703</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CMDIChildWndEx Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CMDIChildWndEx Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CMDIChildWndEx`</ph> class provides the functionality of a Windows multiple document interface (MDI) child window.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>It extends the functionality of <bpt id="p1">[</bpt>CMDIChildWnd Class<ept id="p1">](../../mfc/reference/cmdichildwnd-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The framework requires this class when an MDI application uses certain MFC classes.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::ActivateTopLevelFrame<ept id="p1">](#cmdichildwndex__activatetoplevelframe)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Called internally by the framework to activate top level frame when the application should be activated from a taskbar tab.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This method is not used or implemented.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::AddPane<ept id="p1">](#cmdichildwndex__addpane)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Adds a pane.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::AddTabbedPane<ept id="p1">](#cmdichildwndex__addtabbedpane)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Adds a tabbed pane.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::AdjustDockingLayout<ept id="p1">](#cmdichildwndex__adjustdockinglayout)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Adjusts the docking layout.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::CanShowOnMDITabs<ept id="p1">](#cmdichildwndex__canshowonmditabs)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::CanShowOnTaskBarTabs<ept id="p1">](#cmdichildwndex__canshowontaskbartabs)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Tells the framework whether this MDI child can be displayed on Windows 7 taskbar tabs.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::CanShowOnWindowsList<ept id="p1">](#cmdichildwndex__canshowonwindowslist)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`TRUE`</ph> if the MDI child window name can be displayed in the <bpt id="p1">[</bpt>CMFCWindowsManagerDialog Class<ept id="p1">](../../mfc/reference/cmfcwindowsmanagerdialog-class.md)</ept> dialog box.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Otherwise returns <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Called by the framework to create a dynamic instance of this class type.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::DockPane<ept id="p1">](#cmdichildwndex__dockpane)</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Docks a pane.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::DockPaneLeftOf<ept id="p1">](#cmdichildwndex__dockpaneleftof)</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Docks one pane to the left of another pane.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::EnableAutoHidePanes<ept id="p1">](#cmdichildwndex__enableautohidepanes)</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Enables auto-hide mode for panes when they are docked at the specified sides of the window.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::EnableDocking<ept id="p1">](#cmdichildwndex__enabledocking)</ept></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Enables docking of the child window to the main frame.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::EnableTaskbarThumbnailClipRect<ept id="p1">](#cmdichildwndex__enabletaskbarthumbnailcliprect)</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Enables or disables automatic selection of a portion of a window's client area to display  as that window's thumbnail in the taskbar.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::GetDockingManager<ept id="p1">](#cmdichildwndex__getdockingmanager)</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::GetDocumentName<ept id="p1">](#cmdichildwndex__getdocumentname)</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Returns the name of the document that is displayed in the MDI child window.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::GetFrameIcon<ept id="p1">](#cmdichildwndex__getframeicon)</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Called by the framework to retrieve the MDI child window icon.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::GetFrameText<ept id="p1">](#cmdichildwndex__getframetext)</ept></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Called by the framework to retrieve the text for the MDI child window.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::GetPane<ept id="p1">](#cmdichildwndex__getpane)</ept></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Finds a pane by the specified control ID.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::GetRelatedTabGroup<ept id="p1">](#cmdichildwndex__getrelatedtabgroup)</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::GetTabbedPane<ept id="p1">](#cmdichildwndex__gettabbedpane)</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Returns a pointer to an embedded docking pane that was converted to a tabbed document.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::GetTabProxyWnd<ept id="p1">](#cmdichildwndex__gettabproxywnd)</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Returns tab proxy window actually registered with Windows 7 taskbar tabs.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::GetTaskbarPreviewWnd<ept id="p1">](#cmdichildwndex__gettaskbarpreviewwnd)</ept></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Called by the framework when it needs to obtain a child window (usually a view or splitter window) to be displayed on Windows 7 taskbar tab thumbnail.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::GetTaskbarThumbnailClipRect<ept id="p1">](#cmdichildwndex__gettaskbarthumbnailcliprect)</ept></source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Called by the framework when it needs to select a portion of a window's client area to display  as that window's thumbnail in the taskbar.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Called by the framework to obtain a pointer to the <bpt id="p1">[</bpt>CRuntimeClass<ept id="p1">](../../mfc/reference/cruntimeclass-structure.md)</ept> object that is associated with this class type.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::GetToolbarButtonToolTipText<ept id="p1">](#cmdichildwndex__gettoolbarbuttontooltiptext)</ept></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Called by the framework to retrieve a tooltip for a toolbar button.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::InsertPane<ept id="p1">](#cmdichildwndex__insertpane)</ept></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Registers the specified pane with the docking manager.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::InvalidateIconicBitmaps<ept id="p1">](#cmdichildwndex__invalidateiconicbitmaps)</ept></source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Invalidates iconic bitmap representation of MDI child.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::IsPointNearDockSite<ept id="p1">](#cmdichildwndex__ispointneardocksite)</ept></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Determines whether a specified point is near the dock site.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::IsReadOnly<ept id="p1">](#cmdichildwndex__isreadonly)</ept></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`TRUE`</ph> if the document that is displayed in the child window is read-only.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Otherwise returns <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::IsRegisteredWithTaskbarTabs<ept id="p1">](#cmdichildwndex__isregisteredwithtaskbartabs)</ept></source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Returns TRUE if MDI child was successfully registered with Windows 7 taskbar tabs.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::IsTabbedPane<ept id="p1">](#cmdichildwndex__istabbedpane)</ept></source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`TRUE`</ph> if the MDI child window contains a docking pane.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Otherwise returns <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::IsTaskbarTabsSupportEnabled<ept id="p1">](#cmdichildwndex__istaskbartabssupportenabled)</ept></source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Tells whether the MDI child can appear on Windows 7 taskbar tabs.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::IsTaskbarThumbnailClipRectEnabled<ept id="p1">](#cmdichildwndex__istaskbarthumbnailcliprectenabled)</ept></source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Tells whether automatic selection of a portion of a window's client area to display  as that window's thumbnail in the taskbar is enabled or disabled.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::m_dwDefaultTaskbarTabPropertyFlags<ept id="p1">](#cmdichildwndex__m_dwdefaulttaskbartabpropertyflags)</ept></source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A combination of flags, which is passed by the framework to the SetTaskbarTabProperties method, when a tab (MDI child) is being registered with Windows 7 taskbar tabs.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The default combination is STPF_USEAPPTHUMBNAILWHENACTIVE &amp;#124; STPF_USEAPPPEEKWHENACTIVE.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::OnGetIconicLivePreviewBitmap<ept id="p1">](#cmdichildwndex__ongeticoniclivepreviewbitmap)</ept></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Called by the framework when it needs to obtain a bitmap for live preview of MDI child.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::OnGetIconicThumbnail<ept id="p1">](#cmdichildwndex__ongeticonicthumbnail)</ept></source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Called by the framework when it needs to obtain a bitmap for iconic thumbnail of MDI child.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::OnMoveMiniFrame<ept id="p1">](#cmdichildwndex__onmoveminiframe)</ept></source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Called by the framework to move a mini-frame window.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::OnPressTaskbarThmbnailCloseButton<ept id="p1">](#cmdichildwndex__onpresstaskbarthmbnailclosebutton)</ept></source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Called by the framework when the user presses close button on Taskbar tab thumbnail..</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::OnSetPreviewMode<ept id="p1">](#cmdichildwndex__onsetpreviewmode)</ept></source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Called by the framework to enter or exit print preview mode.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::OnTaskbarTabThumbnailActivate<ept id="p1">](#cmdichildwndex__ontaskbartabthumbnailactivate)</ept></source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Called by the framework when the Taskbar tab thumbnail should process WM_ACTIVATE message.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::OnTaskbarTabThumbnailMouseActivate<ept id="p1">](#cmdichildwndex__ontaskbartabthumbnailmouseactivate)</ept></source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Called by the framework when the Taskbar tab thumbnail should process WM_MOUSEACTIVATE message.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::OnTaskbarTabThumbnailStretch<ept id="p1">](#cmdichildwndex__ontaskbartabthumbnailstretch)</ept></source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Called by the framework when it needs to stretch a bitmap for Windows 7 taskbar tab thumbnail preview of MDI child.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::OnUpdateFrameTitle<ept id="p1">](#cmdichildwndex__onupdateframetitle)</ept></source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Called by the framework to update the frame title.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>(Overrides <ph id="ph1">`CMDIChildWnd::OnUpdateFrameTitle`</ph>.)</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::PaneFromPoint<ept id="p1">](#cmdichildwndex__panefrompoint)</ept></source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Returns the pane that contains the given point.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Used by class <bpt id="p1">[</bpt>CWinApp<ept id="p1">](../../mfc/reference/cwinapp-class.md)</ept> to translate window messages before they are dispatched to the <bpt id="p2">[</bpt>TranslateMessage<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms644955)</ept> and <bpt id="p3">[</bpt>DispatchMessage<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms644934)</ept> Windows functions.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CWnd::PreTranslateMessage<ept id="p1">](../../mfc/reference/cwnd-class.md#cwnd__pretranslatemessage)</ept>.)</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::RecalcLayout<ept id="p1">](#cmdichildwndex__recalclayout)</ept></source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Recalculates the layout of the window.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::RegisterTaskbarTab<ept id="p1">](#cmdichildwndex__registertaskbartab)</ept></source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Registers MDI child with Windows 7 taskbar tabs.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::RemovePaneFromDockManager<ept id="p1">](#cmdichildwndex__removepanefromdockmanager)</ept></source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Removes a pane from the docking manager.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::SetRelatedTabGroup<ept id="p1">](#cmdichildwndex__setrelatedtabgroup)</ept></source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::SetTaskbarTabActive<ept id="p1">](#cmdichildwndex__settaskbartabactive)</ept></source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Activates corresponding Windows 7 taskbar tab.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::SetTaskbarTabOrder<ept id="p1">](#cmdichildwndex__settaskbartaborder)</ept></source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Inserts MDI child before specified window on Windows 7 taskbar tabs.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::SetTaskbarTabProperties<ept id="p1">](#cmdichildwndex__settaskbartabproperties)</ept></source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Sets properties for a Windows 7 taskbar tab.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::SetTaskbarThumbnailClipRect<ept id="p1">](#cmdichildwndex__settaskbarthumbnailcliprect)</ept></source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Called internally by the framework to set clipping rectangle to select a portion of a window's client area to display  as that window's thumbnail in the taskbar.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::ShowPane<ept id="p1">](#cmdichildwndex__showpane)</ept></source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::UnregisterTaskbarTab<ept id="p1">](#cmdichildwndex__unregistertaskbartab)</ept></source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Removes MDI child from Windows 7 taskbar tabs.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx::UpdateTaskbarTabIcon<ept id="p1">](#cmdichildwndex__updatetaskbartabicon)</ept></source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Updates Windows 7 taskbar tab icon.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>To take advantage of extended docking features in MDI applications, derive the MDI child window class of your application from <ph id="ph1">`CMDIChildWndEx`</ph> instead of <bpt id="p1">[</bpt>CMDIChildWnd<ept id="p1">](../../mfc/reference/cmdichildwnd-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The following example derives a class from <ph id="ph1">`CMDIChildWndEx`</ph>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>This code snippet comes from the <bpt id="p1">[</bpt>VisualStudioDemo Sample: MFC Visual Studio Application<ept id="p1">](../../visual-cpp-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_VisualStudioDemo#3<ept id="p2">](../../mfc/codesnippet/cpp/cmdichildwndex-class_1.h)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CObject<ept id="p1">](../../mfc/reference/cobject-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CCmdTarget<ept id="p1">](../../mfc/reference/ccmdtarget-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CWnd<ept id="p1">](../../mfc/reference/cwnd-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CFrameWnd<ept id="p1">](../../mfc/reference/cframewnd-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWnd<ept id="p1">](../../mfc/reference/cmdichildwnd-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMDIChildWndEx<ept id="p1">](../../mfc/reference/cmdichildwndex-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxMDIChildWndEx.h</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__addpane"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::AddPane</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Adds a pane.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pControlBar`</ph></source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>A pointer to the pane.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bTail`</ph></source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> to add the pane to the end of the list of panes for the docking manager; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the pane was successfully registered with the docking manager; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__addtabbedpane"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::AddTabbedPane</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Adds a tabbed pane.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pControlBar`</ph></source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>A pointer to the pane.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__adjustdockinglayout"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::AdjustDockingLayout</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Adjusts the docking layout.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`hdwp`</ph></source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Handle to a deferred window position structure.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__canshowonmditabs"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::CanShowOnMDITabs</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__canshowonwindowslist"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::CanShowOnWindowsList</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Specifies whether the MDI child window name can be displayed in the <bpt id="p1">[</bpt>CMFCWindowsManagerDialog Class<ept id="p1">](../../mfc/reference/cmfcwindowsmanagerdialog-class.md)</ept> dialog box.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the window can be displayed in the <bpt id="p1">**</bpt>Windows<ept id="p1">**</ept> dialog box; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Override this method in a derived class and return <ph id="ph1">`FALSE`</ph> if the window should not be displayed in the <bpt id="p1">**</bpt>Windows<ept id="p1">**</ept> dialog box.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>This function is called from <ph id="ph1">`CMFCWindowsManagerDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__dockpane"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::DockPane</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Docks a pane.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pBar`</ph></source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>A pointer to the pane.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`nDockBarID`</ph></source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The ID of the pane.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`lpRect`</ph></source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>A pointer to a rectangle.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`lpRect`</ph> parameter is not used.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__dockpaneleftof"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::DockPaneLeftOf</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Docks one pane to the left of another pane.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>A pointer to the pane that is to be docked.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>A pointer to the pane that serves as the point of reference.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> on success, <ph id="ph2">`FALSE`</ph> on failure.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>This method takes the pane specified by <ph id="ph1">`pBar`</ph> and docks it at the left side of the pane specified by <ph id="ph2">`pLeftOf`</ph>.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Call this method when you want to dock several panes in predefined order.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__enableautohidepanes"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::EnableAutoHidePanes</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Enables auto-hide mode for panes when they are docked at the specified sides of the window.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`dwDockStyle`</ph></source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Specifies the sides of the main frame window that is enabled.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Use one or more of the following flags.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the method succeeds; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__enabledocking"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::EnableDocking</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Enables docking of the child window to the main frame.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`dwDockStyle`</ph></source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Specifies the docking alignment to enable.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the method succeeds; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Call this method to enable docking alignment to the main frame.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>You can pass a combination of CBRS_ALIGN_ flags (for more information, see <bpt id="p1">[</bpt>CControlBar::EnableDocking<ept id="p1">](../../mfc/reference/ccontrolbar-class.md#ccontrolbar__enabledocking)</ept>).</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__getdockingmanager"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::GetDockingManager</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__getdocumentname"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::GetDocumentName</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Returns the name of the document that is displayed in the MDI child window.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>A pointer to a string that contains the name of a document.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>A document is what the MDI child window displays.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Generally, the window displays data that is loaded from or saved to a file.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Therefore, the name of the document is the name of the file.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The default implementation of <ph id="ph1">`GetDocumentName`</ph> returns a string obtained from <ph id="ph2">`CDocument::GetPathName`</ph>.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>If the window displays a document that is not loaded from a file, override this method in a derived class and return a unique document identifier.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`GetDocumentName`</ph> is called by the framework when it saves the state of all opened documents.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>The returned string is written to the registry.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>When the framework is restoring state later, the document name is read from the registry and passed to <bpt id="p1">[</bpt>CMDIFrameWndEx::CreateDocumentWindow<ept id="p1">](../../mfc/reference/cmdiframewndex-class.md#cmdiframewndex__createdocumentwindow)</ept>.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Override this method in a <bpt id="p1">[</bpt>CMDIFrameWndEx<ept id="p1">](../../mfc/reference/cmdiframewndex-class.md)</ept>-derived class and create or open a document that has this name and read in the file that has this name.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>If the document is not based on a file, create the document based on the document identifier itself.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>You should do the preceding actions only if you intend to save and restore documents.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the use of the <ph id="ph1">`GetDocumentName`</ph> method.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>This code snippet comes from the <bpt id="p1">[</bpt>VisualStudioDemo Sample: MFC Visual Studio Application<ept id="p1">](../../visual-cpp-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_VisualStudioDemo#17<ept id="p2">](../../mfc/codesnippet/cpp/cmdichildwndex-class_2.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__getframeicon"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::GetFrameIcon</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Called by the framework to retrieve the icon of the MDI child window.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>A handle to the window icon.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>This method is called by the framework to determine what icon to display on the MDI tab that contains the MDI child frame window.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>By default this method returns the window icon.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Override <ph id="ph1">`GetFrameIcon`</ph> in a <ph id="ph2">`CMDIChildWndEx`</ph>-derived class to customize this behavior.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__getframetext"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::GetFrameText</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Called by the framework to retrieve the text for the MDI child window.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>A string that contains the frame window text.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>This method is called by the framework to determine what text to display on the MDI tab that contains the MDI child frame window.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>By default this method returns the window text.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Override <ph id="ph1">`GetFrameText`</ph> in a <ph id="ph2">`CMDIChildWndEx`</ph>-derived class to customize this behavior.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__getpane"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::GetPane</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Finds a pane by the specified control ID.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`nID`</ph></source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The control ID of the pane to find.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>A pointer to the pane if found, otherwise <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__getrelatedtabgroup"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::GetRelatedTabGroup</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__gettabbedpane"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::GetTabbedPane</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Returns a pointer to a docking pane that is part of a group of MDI tabbed documents.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>A pointer to a docking pane that is part of a group of MDI tabbed documents.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__gettoolbarbuttontooltiptext"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::GetToolbarButtonToolTipText</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Called by the framework to retrieve a tooltip for a toolbar button.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the tooltip has been displayed.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The default implementation returns <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Override this method if you want to display custom tool tips for toolbar buttons.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__insertpane"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::InsertPane</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Registers the specified pane with the docking manager.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pControlBar`</ph></source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>A pointer to the pane to insert.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pTarget`</ph></source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>A pointer to the adjacent pane.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bAfter`</ph></source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`TRUE`</ph>, <ph id="ph2">`pControlBar`</ph> is inserted after <ph id="ph3">`pTarget`</ph>.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`FALSE`</ph>, <ph id="ph2">`pControlBar`</ph> is inserted before <ph id="ph3">`pTarget`</ph>.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the method succeeds, <ph id="ph2">`FALSE`</ph> otherwise.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__ispointneardocksite"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::IsPointNearDockSite</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Determines whether a specified point is near the dock site.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`point`</ph></source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>The specified point.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`dwBarAlignment`</ph></source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Specifies which edge the point is near.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Possible values are <ph id="ph1">`CBRS_ALIGN_LEFT`</ph>, <ph id="ph2">`CBRS_ALIGN_RIGHT`</ph>, <ph id="ph3">`CBRS_ALIGN_TOP`</ph>, and <ph id="ph4">`CBRS_ALIGN_BOTTOM`</ph></source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bOuterEdge`</ph></source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> if the point is near the outer border of the dock site; <ph id="ph2">`FALSE`</ph> otherwise.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the point is near the dock site; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>The point is near the dock site when it is within the sensitivity set in the docking manager.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>The default sensitivity is 15 pixels.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__isreadonly"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::IsReadOnly</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Specifies whether the document that is displayed in the child window is read-only.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the document is read-only; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>This function is used to prevent saving of read-only documents.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>The following example demonstrates overriding the <ph id="ph1">`IsReadOnly`</ph> method.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>This code snippet comes from the <bpt id="p1">[</bpt>VisualStudioDemo Sample: MFC Visual Studio Application<ept id="p1">](../../visual-cpp-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_VisualStudioDemo#2<ept id="p2">](../../mfc/codesnippet/cpp/cmdichildwndex-class_3.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__istabbedpane"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::IsTabbedPane</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Specifies whether the MDI child window contains a docking pane.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the MDI child window contains a docking pane that was converted to a tabbed document; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__onmoveminiframe"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::OnMoveMiniFrame</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Called by the framework to move a mini-frame window.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pFrame`</ph></source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>A pointer to a mini-frame window.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the method succeeds, otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__onsetpreviewmode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::OnSetPreviewMode</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Called by the framework to enter or exit print preview mode.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bPreview`</ph></source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`TRUE`</ph>, enter print preview mode.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`FALSE`</ph>, exit print preview mode.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pState`</ph></source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>A pointer to the print preview state structure.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__onupdateframetitle"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::OnUpdateFrameTitle</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Called by the framework to update the frame title.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bAddToTitle`</ph></source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`TRUE`</ph>, add the document name to the title.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__panefrompoint"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::PaneFromPoint</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Returns the pane that contains the given point.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`point`</ph></source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>Specifies the point, in screen coordinates, to check.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`nSensitivity`</ph></source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Increase the search area by this amount.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>A pane satisfies the search criteria if the given point falls in the increased area.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bExactBar`</ph></source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> to ignore the <ph id="ph2">`nSensitivity`</ph> parameter; otherwise, <ph id="ph3">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pRTCBarType`</ph></source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>If not <ph id="ph1">`NULL`</ph>, the method searches only panes of the specified type.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`dwAlignment`</ph></source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>If a pane is found at the specified point, this parameter contains the side of the pane that was closest to the specified point.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>For more information, see the Remarks section.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>A pointer to the <ph id="ph1">`CBasePane`</ph>-derived object that contains the given point, or <ph id="ph2">`NULL`</ph> if no pane was found.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>Call this method to determine whether a pane contains the specified point according to the specified conditions such as runtime class and visibility.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>When the function returns and a pane was found, <ph id="ph1">`dwAlignment`</ph> contains the alignment of the specified point.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>For example, if the point was closest to the top of the pane, <ph id="ph1">`dwAlignment`</ph> is set to <ph id="ph2">`CBRS_ALIGN_TOP`</ph>.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__recalclayout"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::RecalcLayout</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>Recalculates the layout of the window.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bNotify`</ph></source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`TRUE`</ph>, the active in-place item for the window receives notification of the layout change.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__removepanefromdockmanager"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::RemovePaneFromDockManager</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Removes a pane from the docking manager.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pControlBar`</ph></source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>A pointer to the pane to remove.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bDestroy`</ph></source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`TRUE`</ph>, the removed pane is destroyed.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bAdjustLayout`</ph></source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`TRUE`</ph>, adjust the docking layout immediately.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bAutoHide`</ph></source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`TRUE`</ph>, the docking layout is related to the list of autohide bars.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`FALSE`</ph>, the docking layout is related to the list of regular panes.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pBarReplacement`</ph></source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>A pointer to a pane that replaces the removed pane.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__setrelatedtabgroup"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::SetRelatedTabGroup</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`p`</ph></source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__showpane"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::ShowPane</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pBar`</ph></source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bShow`</ph></source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bDelay`</ph></source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bActivate`</ph></source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__updatetaskbartabicon"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::UpdateTaskbarTabIcon</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Updates the Windows 7 taskbar tab icon.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>A handle to an icon to display on the Windows 7 taskbar tab.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__unregistertaskbartab"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::UnregisterTaskbarTab</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Removes the MDI child from Windows 7 taskbar tabs.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>Specifies whether this function needs to check the number of MDI children registered with MDI tabs.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>If this number is 0, then this function removes the clipping rectangle from the application's taskbar thumbnail.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__settaskbarthumbnailcliprect"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::SetTaskbarThumbnailClipRect</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>Called by the framework to set the clipping rectangle to select a portion of a window's client area to display as that window's thumbnail in the taskbar.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>Specifies the new clipping rectangle.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>If the rectangle is empty or null, the clipping is removed.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if successful; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__settaskbartabproperties"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::SetTaskbarTabProperties</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>Sets properties for a Windows 7 taskbar tab.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>A combination of STPFLAG values.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>ITaskbarList4::SetTabProperties<ept id="p1">](http://msdn.microsoft.com/library/dd562049\(vs.85\).aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__settaskbartaborder"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::SetTaskbarTabOrder</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>Inserts the MDI child before the specified window on Windows 7 taskbar tabs.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>A pointer to the MDI child window whose thumbnail is inserted to the left.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>This window must already be registered through <ph id="ph1">`RegisterTaskbarTab`</ph>.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>If this value is <ph id="ph1">`NULL`</ph>, the new thumbnail is added to the end of the list.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__settaskbartabactive"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::SetTaskbarTabActive</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>Activates the corresponding Windows 7 taskbar tab.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__registertaskbartab"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::RegisterTaskbarTab</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>Registers the MDI child with Windows 7 taskbar tabs.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>A pointer to the MDI child window whose thumbnail is inserted to the left.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>This window must already be registered through <ph id="ph1">`RegisterTaskbarTab`</ph>.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>If this value is <ph id="ph1">`NULL`</ph>, the new thumbnail is added to the end of the list.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__ontaskbartabthumbnailstretch"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::OnTaskbarTabThumbnailStretch</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>Called by the framework when it needs to stretch a bitmap for a Windows 7 taskbar tab thumbnail preview of the MDI child.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>A handle to a destination bitmap.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>Specifies the destination rectangle.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>A handle to a source bitmap.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>Specifies the source rectangle.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Requirementher or him him him him him him him <bpt id="p1">**</bpt>:<ept id="p1">**</ept> afxmdichildwndex.h</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__ontaskbartabthumbnailmouseactivate"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::OnTaskbarTabThumbnailMouseActivate</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>Called by the framework when the Taskbar tab thumbnail should process the WM_MOUSEACTIVATE message.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>Specifies a pointer to the top-level parent window of the window being activated.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>The pointer may be temporary and should not be stored.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>Specifies the hit-test area code.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>A hit test is a test that determines the location of the cursor.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>Specifies the mouse message number.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>The default implementation activates the related MDI child frame.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__ontaskbartabthumbnailactivate"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::OnTaskbarTabThumbnailActivate</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>Called by the framework when the Taskbar tab thumbnail should process the WM_ACTIVATE message.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>Specifies whether the <ph id="ph1">`CWnd`</ph> is being activated or deactivated.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>Pointer to the <ph id="ph1">`CWnd`</ph> being activated or deactivated.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>The pointer can be <ph id="ph1">`NULL`</ph>, and it may be temporary.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>Specifies the minimized state of the <ph id="ph1">`CWnd`</ph> being activated or deactivated.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>A value of <ph id="ph1">`TRUE`</ph> indicates the window is minimized.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>The default implementation activates the related MDI child frame.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__onpresstaskbarthmbnailclosebutton"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::OnPressTaskbarThmbnailCloseButton</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>Called by the framework when the user presses the close button on the Taskbar tab thumbnail.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__ongeticonicthumbnail"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::OnGetIconicThumbnail</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>Called by the framework when it needs to obtain a bitmap for the iconic thumbnail of the MDI child.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>Specifies the width of the required bitmap.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>Specifies the height of the required bitmap.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__ongeticoniclivepreviewbitmap"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::OnGetIconicLivePreviewBitmap</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>Called by the framework when it needs to obtain a bitmap for live preview of the MDI child.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>This parameter is <ph id="ph1">`TRUE`</ph> if the bitmap is requested for the MDI child, which is currently active and the main window is not minimized.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>The default processing in this case takes a snapshot of the main window.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>Specifies the location of the bitmap in the main (top level) window client coordinates.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>This point should be provided by the callee.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>If processed, returns a handle to a valid 32bpp bitmap, otherwise <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>Override this method in a derived class and return a valid 32bpp bitmap for live preview of MDI child.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>This method is called only when the MDI child is displayed on Windows 7 taskbar tabs.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>If you return <ph id="ph1">`NULL`</ph>, MFC calls the default handlers and obtains bitmaps using <ph id="ph2">`PrintClient`</ph> or <ph id="ph3">`PrintWindow`</ph>.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__m_dwdefaulttaskbartabpropertyflags"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::m_dwDefaultTaskbarTabPropertyFlags</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>A combination of flags, which is passed by the framework to the <ph id="ph1">`SetTaskbarTabProperties`</ph> method, when a tab (MDI child) is being registered with Windows 7 taskbar tabs.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>The default combination is STPF_USEAPPTHUMBNAILWHENACTIVE &amp;#124; STPF_USEAPPPEEKWHENACTIVE.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__istaskbarthumbnailcliprectenabled"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::IsTaskbarThumbnailClipRectEnabled</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>Tells whether automatic selection of a portion of a window's client area to display as that window's thumbnail in the taskbar is enabled or disabled.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`TRUE`</ph> if automatic selection of a portion of a window's client area to display is enabled; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__istaskbartabssupportenabled"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::IsTaskbarTabsSupportEnabled</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>Tells whether the MDI child can appear on Windows 7 taskbar tabs.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the MDI child can appear on Windows 7 taskbar tabs; <ph id="ph2">`FALSE`</ph> if the MDI child can not appear on Windows 7 taskbar tabs.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__isregisteredwithtaskbartabs"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::IsRegisteredWithTaskbarTabs</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`TRUE`</ph> if the MDI child was successfully registered with Windows 7 taskbar tabs.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the MDI child is registered with Windows 7 taskbar tabs; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__invalidateiconicbitmaps"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::InvalidateIconicBitmaps</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>Invalidates an iconic bitmap representation of a MDI child.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`FALSE`</ph> if Windows 7 taskbar support is disabled or the MDI child is not registered with Windows 7 taskbar tabs; otherwise returns <ph id="ph2">`TRUE`</ph>.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>Should be called when the live content or size of a MDI child has changed.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__gettaskbarthumbnailcliprect"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::GetTaskbarThumbnailClipRect</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>Called by the framework when it needs to select a portion of a window's client area to display as that window's thumbnail in the taskbar.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>A rectangle in windows coordinates.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>This rectangle is mapped to the client area of the top level frame.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>The rectangle should be empty to clear the clipping rectangle.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__gettaskbarpreviewwnd"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::GetTaskbarPreviewWnd</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>Called by the framework when it needs to obtain a child window (usually a view or splitter window) to be displayed on a Windows 7 taskbar tab thumbnail.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>Should return a valid pointer to a <ph id="ph1">`CWnd`</ph> object, whose preview should be displayed on a Windows 7 taskbar tab related to this MDI child.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>The default implementation returns a child window of this MDI child with AFX_IDW_PANE_FIRST control ID (which is usually a <ph id="ph1">`CView`</ph>-derived class).</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__gettabproxywnd"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::GetTabProxyWnd</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>Returns the tab proxy window registered with Windows 7 taskbar tabs.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>A pointer to a <ph id="ph1">`CMDITabProxyWnd`</ph> object, which is registered with Windows 7 taskbar tabs.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__enabletaskbarthumbnailcliprect"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::EnableTaskbarThumbnailClipRect</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>Enables or disables automatic selection of a portion of a window's client area to display as that window's thumbnail in the taskbar.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>Specifies whether to enable ( <ph id="ph1">`TRUE`</ph>), or disable ( <ph id="ph2">`FALSE`</ph>) automatic selection of a portion of a window's client area to display.</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__canshowontaskbartabs"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::CanShowOnTaskBarTabs</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>Tells the framework whether this MDI child can be displayed on Windows 7 taskbar tabs.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the content of the MDI child can be displayed on Windows 7 taskbar thumbnails.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>Override this method in a derived class and return <ph id="ph1">`FALSE`</ph> to disable the appearance of this MDI child on Windows 7 taskbar tabs.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmdichildwndex__activatetoplevelframe"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMDIChildWndEx::ActivateTopLevelFrame</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>Called by the framework to activate the top level frame when the application is activated from a taskbar tab.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Hierarchy Chart<ept id="p1">](../../mfc/hierarchy-chart.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Classes<ept id="p1">](../../mfc/reference/mfc-classes.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CMDIChildWnd Class<ept id="p1">](../../mfc/reference/cmdichildwnd-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CMFCWindowsManagerDialog Class<ept id="p1">](../../mfc/reference/cmfcwindowsmanagerdialog-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CMDIFrameWndEx Class<ept id="p1">](../../mfc/reference/cmdiframewndex-class.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>