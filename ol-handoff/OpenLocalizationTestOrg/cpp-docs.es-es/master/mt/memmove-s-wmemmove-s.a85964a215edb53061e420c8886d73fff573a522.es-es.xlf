<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5efa01223034edd13388890c71fbb5bbcd2b0489</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\reference\memmove-s-wmemmove-s.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6c1c79eb498f7041d29324b3317eea1d77432c48</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0688fe31ccff26c7a03817d7ca9765224a2f3258</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>memmove_s, wmemmove_s | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>memmove_s, wmemmove_s</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Moves one buffer to another.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>These are versions of <bpt id="p1">[</bpt>memmove, wmemmove<ept id="p1">](../../c-runtime-library/reference/memmove-wmemmove.md)</ept> with security enhancements as described in <bpt id="p2">[</bpt>Security Features in the CRT<ept id="p2">](../../c-runtime-library/security-features-in-the-crt.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Destination object.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Size of the destination buffer.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Source object.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Number of bytes (<ph id="ph1">`memmove_s`</ph>) or characters (<ph id="ph2">`wmemmove_s`</ph>) to copy.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Zero if successful; an error code on failure</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Error Conditions</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Contents of <ph id="ph1">`dest`</ph></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>not modified</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>not modified</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>not modified</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Copies <ph id="ph1">`count`</ph> bytes of characters from <ph id="ph2">`src`</ph> to <ph id="ph3">`dest`</ph><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If some regions of the source area and the destination overlap, <ph id="ph1">`memmove_s`</ph> ensures that the original source bytes in the overlapping region are copied before being overwritten.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`dest`</ph> or if <ph id="ph2">`src`</ph> is a null pointer, or if the destination string is too small, these functions invoke an invalid parameter handler, as described in <bpt id="p1">[</bpt>Parameter Validation<ept id="p1">](../../c-runtime-library/parameter-validation.md)</ept> .</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If execution is allowed to continue, these functions return <ph id="ph1">`EINVAL`</ph> and set <ph id="ph2">`errno`</ph> to <ph id="ph3">`EINVAL`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Routine</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Required header</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>string.h&gt;</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>wchar.h&gt;</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For additional compatibility information, see <bpt id="p1">[</bpt>Compatibility<ept id="p1">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Output</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>.NET Framework Equivalent</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System::Buffer::BlockCopy<ept id="p1">](https://msdn.microsoft.com/en-us/library/system.buffer.blockcopy.aspx)</ept></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Buffer Manipulation<ept id="p1">](../../c-runtime-library/buffer-manipulation.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>_memccpy<ept id="p1">](../../c-runtime-library/reference/memccpy.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>memcpy, wmemcpy<ept id="p1">](../../c-runtime-library/reference/memcpy-wmemcpy.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>strcpy_s, wcscpy_s, _mbscpy_s<ept id="p1">](../../c-runtime-library/reference/strcpy-s-wcscpy-s-mbscpy-s.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>strcpy, wcscpy, _mbscpy<ept id="p1">](../../c-runtime-library/reference/strcpy-wcscpy-mbscpy.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>strncpy_s, _strncpy_s_l, wcsncpy_s, _wcsncpy_s_l, _mbsncpy_s, _mbsncpy_s_l<ept id="p1">](../../c-runtime-library/reference/strncpy-s-strncpy-s-l-wcsncpy-s-wcsncpy-s-l-mbsncpy-s-mbsncpy-s-l.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>strncpy, _strncpy_l, wcsncpy, _wcsncpy_l, _mbsncpy, _mbsncpy_l<ept id="p1">](../../c-runtime-library/reference/strncpy-strncpy-l-wcsncpy-wcsncpy-l-mbsncpy-mbsncpy-l.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>