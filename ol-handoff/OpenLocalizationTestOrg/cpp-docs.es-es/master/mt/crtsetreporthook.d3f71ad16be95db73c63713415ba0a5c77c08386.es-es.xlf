<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">114fae864de9ad0b2a66ef12d814772288318609</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\reference\crtsetreporthook.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65557eccca3860a91bb4928a516ec9ad531a697c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">77c579da4bfb1b5f537df280863eee3e07bdaefe</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>_CrtSetReportHook | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>_CrtSetReportHook</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Installs a client-defined reporting function by hooking it into the C run-time debug reporting process (debug version only).</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>New client-defined reporting function to hook into the C run-time debug reporting process.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Returns the previous client-defined reporting function.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`_CrtSetReportHook`</ph> allows an application to use its own reporting function into the C run-time debug library reporting process.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>As a result, whenever <bpt id="p1">[</bpt>_CrtDbgReport<ept id="p1">](../../c-runtime-library/reference/crtdbgreport-crtdbgreportw.md)</ept> is called to generate a debug report, the application's reporting function is called first.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This functionality enables an application to perform operations such as filtering debug reports so it can focus on specific allocation types or send a report to destinations not available by using <ph id="ph1">`_CrtDbgReport`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When <bpt id="p1">[</bpt>_DEBUG<ept id="p1">](../../c-runtime-library/debug.md)</ept> is not defined, calls to <ph id="ph1">`_CrtSetReportHook`</ph> are removed during preprocessing.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For a more robust version of <ph id="ph1">`_CrtSetReportHook`</ph>, see <bpt id="p1">[</bpt>_CrtSetReportHook2<ept id="p1">](../../c-runtime-library/reference/crtsetreporthook2-crtsetreporthookw2.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`_CrtSetReportHook`</ph> function installs the new client-defined reporting function specified in <ph id="ph2">`reportHook`</ph> and returns the previous client-defined hook.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how a client-defined report hook should be prototyped:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>where <ph id="ph1">`reportType`</ph> is the debug report type (<ph id="ph2">`_CRT_WARN`</ph>, <ph id="ph3">`_CRT_ERROR`</ph>, or <ph id="ph4">`_CRT_ASSERT`</ph>), <ph id="ph5">`message`</ph> is the fully assembled debug user message to be contained in the report, and <ph id="ph6">`returnValue`</ph> is the value specified by the client-defined reporting function that should be returned by <ph id="ph7">`_CrtDbgReport`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For a complete description of the available report types, see the <bpt id="p1">[</bpt>_CrtSetReportMode<ept id="p1">](../../c-runtime-library/reference/crtsetreportmode.md)</ept> function.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If the client-defined reporting function completely handles the debug message such that no further reporting is required, then the function should return <ph id="ph1">`TRUE`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When the function returns <ph id="ph1">`FALSE`</ph>, <ph id="ph2">`_CrtDbgReport`</ph> is called to generate the debug report using the current settings for the report type, mode, and file.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In addition, by specifying the <ph id="ph1">`_CrtDbgReport`</ph> return value in <ph id="ph2">`returnValue`</ph>, the application can also control whether a debug break occurs.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For a complete description of how the debug report is configured and generated, see <ph id="ph1">`_CrtSetReportMode`</ph>, <bpt id="p1">[</bpt>_CrtSetReportFile<ept id="p1">](../../c-runtime-library/reference/crtsetreportfile.md)</ept>, and <ph id="ph2">`_CrtDbgReport`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information about using other hook-capable run-time functions and writing your own client-defined hook functions, see <bpt id="p1">[</bpt>Debug Hook Function Writing<ept id="p1">](/visualstudio/debugger/debug-hook-function-writing)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If your application is compiled with <ph id="ph1">`/clr`</ph> and the reporting function is called after the application has exited main, the CLR will throw an exception if the reporting function calls any CRT functions.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Routine</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Required header</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>crtdbg.h&gt;</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more compatibility information, see <bpt id="p1">[</bpt>Compatibility<ept id="p1">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Libraries</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Debug versions of <bpt id="p1">[</bpt>C run-time libraries<ept id="p1">](../../c-runtime-library/crt-library-features.md)</ept> only.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>.NET Framework Equivalent</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Not applicable.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To call the standard C function, use <ph id="ph1">`PInvoke`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Platform Invoke Examples<ept id="p1">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Debug Routines<ept id="p1">](../../c-runtime-library/debug-routines.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>_CrtGetReportHook<ept id="p1">](../../c-runtime-library/reference/crtgetreporthook.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>