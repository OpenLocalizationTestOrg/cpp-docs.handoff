<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b0301577a0499bbf0205d39d62db1406e4b6b39b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\parallel\openmp\2-6-5-flush-directive.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">097e02151661c3623baea3d7ad89049f6203d93e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">759b8ef76201a9255d62c477bd62bc3d071a48b3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>2.6.5 flush Directive | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>2.6.5 flush Directive</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>flush<ept id="p1">**</ept> directive, whether explicit or implied, specifies a "cross-thread" sequence point at which the implementation is required to ensure that all threads in a team have a consistent view of certain objects (specified below) in memory.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This means that previous evaluations of expressions that reference those objects are complete and subsequent evaluations have not yet begun.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For example, compilers must restore the values of the objects from registers to memory, and hardware may need to flush write buffers to memory and reload the values of the objects from memory.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The syntax of the <bpt id="p1">**</bpt>flush<ept id="p1">**</ept> directive is as follows:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If the objects that require synchronization can all be designated by variables, then those variables can be specified in the optional <bpt id="p1">*</bpt>variable-list<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>If a pointer is present in the <bpt id="p1">*</bpt>variable-list<ept id="p1">*</ept>, the pointer itself is flushed, not the object the pointer refers to.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>flush<ept id="p1">**</ept> directive without a <bpt id="p2">*</bpt>variable-list<ept id="p2">*</ept> synchronizes all shared objects except inaccessible objects with automatic storage duration.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>(This is likely to have more overhead than a <bpt id="p1">**</bpt>flush<ept id="p1">**</ept> with a <bpt id="p2">*</bpt>variable-list<ept id="p2">*</ept>.) A <bpt id="p3">**</bpt>flush<ept id="p3">**</ept> directive without a <bpt id="p4">*</bpt>variable-list<ept id="p4">*</ept> is implied for the following directives:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>At entry to and exit from <bpt id="p1">**</bpt>critical<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>At entry to and exit from</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>At entry to and exit from <bpt id="p1">**</bpt>parallel<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>At exit from <bpt id="p1">**</bpt>for<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>At exit from <bpt id="p1">**</bpt>sections<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>At exit from <bpt id="p1">**</bpt>single<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>At entry to and exit from <bpt id="p1">**</bpt>parallel for<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>At entry to and exit from <bpt id="p1">**</bpt>parallel sections<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The directive is not implied if a <ph id="ph1">`nowait`</ph> clause is present.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>It should be noted that the <bpt id="p1">**</bpt>flush<ept id="p1">**</ept> directive is not implied for any of the following:</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>At entry to <bpt id="p1">**</bpt>for<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>At entry to or exit from <bpt id="p1">**</bpt>master<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>At entry to <bpt id="p1">**</bpt>sections<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>At entry to <bpt id="p1">**</bpt>single<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A reference that accesses the value of an object with a volatile-qualified type behaves as if there were a <bpt id="p1">**</bpt>flush<ept id="p1">**</ept> directive specifying that object at the previous sequence point.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A reference that modifies the value of an object with a volatile-qualified type behaves as if there were a <bpt id="p1">**</bpt>flush<ept id="p1">**</ept> directive specifying that object at the subsequent sequence point.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Note that because the <bpt id="p1">**</bpt>flush<ept id="p1">**</ept> directive does not have a C language statement as part of its syntax, there are some restrictions on its placement within a program.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Appendix C<ept id="p1">](../../parallel/openmp/c-openmp-c-and-cpp-grammar.md)</ept> for the formal grammar.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The example below illustrates these restrictions.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Restrictions to the <bpt id="p1">**</bpt>flush<ept id="p1">**</ept> directive are as follows:</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A variable specified in a <bpt id="p1">**</bpt>flush<ept id="p1">**</ept> directive must not have a reference type.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>