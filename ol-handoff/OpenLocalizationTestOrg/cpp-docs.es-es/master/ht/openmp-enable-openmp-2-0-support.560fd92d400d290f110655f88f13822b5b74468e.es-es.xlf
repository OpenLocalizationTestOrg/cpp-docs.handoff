<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">57e8feec50aed67d7a69f1454c88f7f06e2f4740</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\build\reference\openmp-enable-openmp-2-0-support.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18f573062fb65958105f07b9862f3ca58cb46295</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0cc8418e35d299c1e8b1593f06680271a60d0597</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>-openmp (Enable OpenMP 2.0 Support) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>/openmp (Enable OpenMP 2.0 Support)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Causes the compiler to process <ph id="ph1">`#pragma`</ph><bpt id="p1">[</bpt>omp<ept id="p1">](../../preprocessor/omp.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>is used to specify <bpt id="p1">[</bpt>Directives<ept id="p1">](../../parallel/openmp/reference/openmp-directives.md)</ept> and <bpt id="p2">[</bpt>Clauses<ept id="p2">](../../parallel/openmp/reference/openmp-clauses.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>/openmp<ept id="p1">**</ept> is not specified in a compilation, the compiler ignores OpenMP clauses and directives.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>OpenMP Function<ept id="p1">](../../parallel/openmp/reference/openmp-functions.md)</ept> calls are processed by the compiler even if <bpt id="p2">**</bpt>/openmp<ept id="p2">**</ept> is not specified.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An application compiled with <bpt id="p1">**</bpt>/openmp<ept id="p1">**</ept> and using the <bpt id="p2">[</bpt>Libraries<ept id="p2">](../../parallel/openmp/reference/openmp-libraries.md)</ept> can only be run on Windows 2000 or later operating systems.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Applications compiled with <bpt id="p1">**</bpt>/openmp<ept id="p1">**</ept> and <bpt id="p2">**</bpt>/clr<ept id="p2">**</ept> can only be run in a single application domain process; multiple application domains are not supported.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>That is, when the module constructor (.cctor) is run, it will detect the process is compiled with <bpt id="p1">**</bpt>/openmp<ept id="p1">**</ept> and if the application is being loaded into a non-default runtime.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>appdomain<ept id="p1">](../../cpp/appdomain.md)</ept>, <bpt id="p2">[</bpt>/clr (Common Language Runtime Compilation)<ept id="p2">](../../build/reference/clr-common-language-runtime-compilation.md)</ept>, and <bpt id="p3">[</bpt>Initialization of Mixed Assemblies<ept id="p3">](../../dotnet/initialization-of-mixed-assemblies.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If you attempt to load an application compiled with <bpt id="p1">**</bpt>/openmp<ept id="p1">**</ept> and <bpt id="p2">**</bpt>/clr<ept id="p2">**</ept> into a non-default application domain, a &lt;xref:System.TypeInitializationException&gt; exception will be thrown outside the debugger and a OpenMPWithMultipleAppdomainsException exception will be thrown in the debugger.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>These exceptions can also be raised in the following situations:</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If your application compiled with <bpt id="p1">**</bpt>/clr<ept id="p1">**</ept>, but not with <bpt id="p2">**</bpt>/openmp<ept id="p2">**</ept>, is loaded into a non-default application domain but where the process includes an application that was compiled with <bpt id="p3">**</bpt>/openmp<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If you pass your <bpt id="p1">**</bpt>/clr<ept id="p1">**</ept> application to a utility, such as regasm.exe (<bpt id="p2">[</bpt>Regasm.exe (Assembly Registration Tool)<ept id="p2">](http://msdn.microsoft.com/Library/e190e342-36ef-4651-a0b4-0e8c2c0281cb)</ept>), which loads its target assemblies into a non-default application domain.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The common language runtime's code access security doesnâ€™t work in OpenMP regions.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If you apply a CLR code access security attribute outside a parallel region, it won't be in effect in the parallel region.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Microsoft advises that you do not write <bpt id="p1">**</bpt>/openmp<ept id="p1">**</ept> applications that allows partially trusted callers, using &lt;xref:System.Security.AllowPartiallyTrustedCallersAttribute&gt;, or any CLR code access security attributes.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To set this compiler option in the Visual Studio development environment</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Open the project's <bpt id="p1">**</bpt>Property Pages<ept id="p1">**</ept> dialog box.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Working with Project Properties<ept id="p1">](../../ide/working-with-project-properties.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Expand the <bpt id="p1">**</bpt>Configuration Properties<ept id="p1">**</ept> node.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Expand the <bpt id="p1">**</bpt>C/C++<ept id="p1">**</ept> node.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Language<ept id="p1">**</ept> property page.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Modify the <bpt id="p1">**</bpt>OpenMP Support<ept id="p1">**</ept> property.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To set this compiler option programmatically</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>See &lt;xref:Microsoft.VisualStudio.VCProjectEngine.VCCLCompilerTool.OpenMP%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The following sample shows some of the effects of threadpool startup versus using the threadpool after it started up.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Assuming an x64, single core, dual processor the threadpool takes about 16ms to startup.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>After that though there is very little cost for the threadpool.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When you compile with <bpt id="p1">**</bpt>/openmp<ept id="p1">**</ept>, the second call to test2 never runs any longer than if you compile with <bpt id="p2">**</bpt>/openmp-<ept id="p2">**</ept>, as there is no threadpool startup.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>At a million iterations the <bpt id="p1">**</bpt>/openmp<ept id="p1">**</ept> version is faster than the <bpt id="p2">**</bpt>/openmp-<ept id="p2">**</ept> version for the second call to test2, and at 25 iterations both <bpt id="p3">**</bpt>/openmp-<ept id="p3">**</ept> and <bpt id="p4">**</bpt>/openmp<ept id="p4">**</ept> versions register less than the clock granularity.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>So if you have only one loop in your application and it runs in less than 15ms (adjusted for the approximate overhead on your machine), <bpt id="p1">**</bpt>/openmp<ept id="p1">**</ept> may not be appropriate, but if it's anything more than that, you may want to consider using <bpt id="p2">**</bpt>/openmp<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Compiler Options</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Setting Compiler Options</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>