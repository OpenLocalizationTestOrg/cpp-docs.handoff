<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ee47facbb174be62f0fa38719e4104270eba065b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\build\reference\zc-forscope-force-conformance-in-for-loop-scope.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fb26ff41b239d59d9a6c7ac9d874efc776a84cf5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4efef4a8563cfb5cacd5963865a5740a65a16403</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>-Zc:forScope (Force Conformance in for Loop Scope) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>/Zc:forScope (Force Conformance in for Loop Scope)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Used to implement standard C++ behavior for <bpt id="p1">[</bpt>for<ept id="p1">](../../cpp/for-statement-cpp.md)</ept> loops with Microsoft extensions (<bpt id="p2">[</bpt>/Ze<ept id="p2">](../../build/reference/za-ze-disable-language-extensions.md)</ept>).</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/Zc:forScope<ept id="p1">**</ept> is on by default.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>/Zc:forScope-<ept id="p1">**</ept> option is deprecated and will be removed in a future release.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Use of <bpt id="p1">**</bpt>/Zc:forScope-<ept id="p1">**</ept> generates deprecation warning D9035.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Standard behavior is to let a <bpt id="p1">**</bpt>for<ept id="p1">**</ept> loop's initializer go out of scope after the <bpt id="p2">**</bpt>for<ept id="p2">**</ept> loop.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Under <bpt id="p1">**</bpt>/Zc:forScope-<ept id="p1">**</ept> and <bpt id="p2">[</bpt>/Ze<ept id="p2">](../../build/reference/za-ze-disable-language-extensions.md)</ept>, the <bpt id="p3">**</bpt>for<ept id="p3">**</ept> loop's initializer remains in scope until the local scope ends.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following code compiles under <bpt id="p1">**</bpt>/Ze<ept id="p1">**</ept> but not under <bpt id="p2">**</bpt>/Za<ept id="p2">**</ept>:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If you use <bpt id="p1">**</bpt>/Zc:forScope-<ept id="p1">**</ept>, warning C4288 (off by default) is generated if a variable is in scope because of a declaration that was made in a previous scope.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To demonstrate this, remove the <ph id="ph1">`//`</ph> characters in the example code to declare <ph id="ph2">`int i`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can modify the run-time behavior of <bpt id="p1">**</bpt>/Zc:forScope<ept id="p1">**</ept> by using the <bpt id="p2">[</bpt>conform<ept id="p2">](../../preprocessor/conform.md)</ept> pragma.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If you use <bpt id="p1">**</bpt>/Zc:forScope-<ept id="p1">**</ept> in a project that has an existing .pch file, a warning is generated, <bpt id="p2">**</bpt>/Zc:forScope-<ept id="p2">**</ept> is ignored, and compilation continues by using the existing .pch files.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If you want a new .pch file generated, use <bpt id="p1">[</bpt>/Yc (Create Precompiled Header File)<ept id="p1">](../../build/reference/yc-create-precompiled-header-file.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information about conformance issues in Visual C++, see <bpt id="p1">[</bpt>Nonstandard Behavior<ept id="p1">](../../cpp/nonstandard-behavior.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To set this compiler option in the Visual Studio development environment</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Open the project's <bpt id="p1">**</bpt>Property Pages<ept id="p1">**</ept> dialog box.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Working with Project Properties<ept id="p1">](../../ide/working-with-project-properties.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In the navigation pane, open the <bpt id="p1">**</bpt>Configuration Properties<ept id="p1">**</ept>, <bpt id="p2">**</bpt>C/C++<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Language<ept id="p3">**</ept> property page.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Modify the <bpt id="p1">**</bpt>Force Conformance in For Loop Scope<ept id="p1">**</ept> property.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To set this compiler option programmatically</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>See &lt;xref:Microsoft.VisualStudio.VCProjectEngine.VCCLCompilerTool.ForceConformanceInForLoopScope%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>/Zc (Conformance)</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>/Za, /Ze (Disable Language Extensions)</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>