<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">63e0cd5efa17948de7c37e7e4fea0fa034672826</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\ide\implementing-a-connection-point-visual-cpp.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a207c2eba377785b513a53f9f7bce4b317ce5550</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ac08e34a95aeb2d449a9316d69d055f389acdb26</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implementing a Connection Point (Visual C++) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Implementing a Connection Point (Visual C++)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To implement a connection point using the Implement Connection Point Wizard, you must have created a project as an ATL COM application or as an MFC application that contains ATL support.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt>ATL Project Wizard<ept id="p1">](../atl/reference/atl-project-wizard.md)</ept> to create an ATL application, or <bpt id="p2">[</bpt>add an ATL object to your MFC application<ept id="p2">](../mfc/reference/adding-atl-support-to-your-mfc-project.md)</ept> to implement ATL support for an MFC application.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For information about implementing connection points for an MFC project, see <bpt id="p1">[</bpt>Connection Points<ept id="p1">](../mfc/connection-points.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Once you create the project, to implement a connection point, you must first add an ATL object.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Adding Objects and Controls to an ATL Project<ept id="p1">](../atl/reference/adding-objects-and-controls-to-an-atl-project.md)</ept> for a list of wizards that add objects to your ATL project.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The wizard does not support ATL dialogs, XML Web services created with ATL Server, performance objects, or performance counters.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A connectable object (that is, a source) can expose a connection point for each of its outgoing interfaces.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Each outgoing interface can be implemented by a client on an object (that is, a sink).</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>ATL Connection Points<ept id="p1">](../atl/atl-connection-points.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To implement a connection point</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In Class View, right-click the class name for your ATL object.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> from the shortcut menu, and then click <bpt id="p2">**</bpt>Add Connection Point<ept id="p2">**</ept> to display the <bpt id="p3">[</bpt>Implement Connection Point Wizard<ept id="p3">](../ide/implement-connection-point-wizard.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Select the connection point interfaces to implement from the appropriate type libraries and click <bpt id="p1">**</bpt>Finish<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In Class View, examine the proxy classes created for each connection point.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The classes appear as CProxy<bpt id="p1">*</bpt>InterfaceName<ept id="p1">*</ept><ph id="ph1">\&lt;</ph>T&gt; and are derived from <bpt id="p2">[</bpt>IConnectionPointImpl<ept id="p2">](../atl/reference/iconnectionpointimpl-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Double-click the connection point class to display the definition of the connection point's class.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you implement a connection point for your own project's interface, the following definition appears</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If you implement a local interface, methods and properties appear in the class body.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If you implement a connection point for another interface, the definition includes the interface's methods, each preceded by <ph id="ph1">`Fire_`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Adding Functionality with Code Wizards</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Adding Connection Points to an Object</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>