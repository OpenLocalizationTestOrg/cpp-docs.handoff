<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a3451b838cb62a01576cab3175ca22058211410d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\atl-collections-and-enumerators.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">50f4fb5ebfa8d37d06d7fbf361435f15f01b030c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5f560b4b3fce81a152b9a81c9cd431a64757a24f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>ATL Collections and Enumerators | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ATL Collections and Enumerators</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`collection`</ph> is a COM object that provides an interface that allows access to a group of data items (raw data or other objects).</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>An interface that follows the standards for providing access to a group of objects is known as a <bpt id="p1">*</bpt>collection interface<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>At a minimum, collection interfaces must provide a <bpt id="p1">**</bpt>Count<ept id="p1">**</ept> property that returns the number of items in the collection, an <bpt id="p2">**</bpt>Item<ept id="p2">**</ept> property that returns an item from the collection based on an index, and a <ph id="ph1">`_NewEnum`</ph> property that returns an enumerator for the collection.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Optionally, collection interfaces can provide <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Remove<ept id="p2">**</ept> methods to allow items to be inserted into or deleted from the collection, and a <bpt id="p3">**</bpt>Clear<ept id="p3">**</ept> method to remove all items.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`enumerator`</ph> is a COM object that provides an interface for iterating through items in a collection.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Enumerator interfaces provide serial access to the elements of a collection via four required methods: <ph id="ph1">`Next`</ph>, <bpt id="p1">**</bpt>Skip<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Reset<ept id="p2">**</ept>, and <ph id="ph2">`Clone`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can learn more about enumerator interfaces by reading about the archetypal (but entirely imaginary) <bpt id="p1">[</bpt>IEnumXXXX<ept id="p1">](https://msdn.microsoft.com/library/ms680089.aspx)</ept> interface.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In This Section</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>ATL Collection and Enumerator Classes</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Briefly describes and provides links to the ATL classes that will help you implement collections and enumerators.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Design Principles for Collection and Enumerator Interfaces</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Discusses the different design principles behind each type of interface.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Implementing an STL-Based Collection</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An extended example that walks you through the implementation of a Standard Template Library (STL)-based collection.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Related Sections</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>ATL</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Provides links to conceptual topics on how to program using the Active Template Library.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>ATLCollections Sample</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A sample that demonstrates the use of <ph id="ph1">`ICollectionOnSTLImpl`</ph> and <ph id="ph2">`CComEnumOnSTL`</ph>, and the implementation of custom copy policy classes.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Concepts</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>