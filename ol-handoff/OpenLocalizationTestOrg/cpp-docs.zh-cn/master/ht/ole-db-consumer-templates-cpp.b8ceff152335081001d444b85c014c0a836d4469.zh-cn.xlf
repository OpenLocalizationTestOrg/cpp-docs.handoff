<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3d5ce309d605e01155318ff37dd48132591da178</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\data\oledb\ole-db-consumer-templates-cpp.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">97625f7827882b28afde7b2824b0493aeb71d200</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1204cf5fe346e01f59f61c98fe7b4456c85de13e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>OLE DB Consumer Templates (C++) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>OLE DB Consumer Templates (C++)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The OLE DB Consumer Templates support the OLE DB version 2.6 specification.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>(The OLE DB Consumer Templates are tested against OLE DB 2.6 but do not support every interface in the specification.) The Consumer Templates minimize the amount of code you must write to implement an OLE DB consumer.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The templates provide:</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Easy access to OLE DB features and easy integration with ATL and MFC.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>An easy binding model for database parameters and columns.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Native C/C++ data types for OLE DB programming.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To use the OLE DB Templates, you should be familiar with C++ templates, COM, and the OLE DB interfaces.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If you are not familiar with OLE DB, see <bpt id="p1">[</bpt>OLE DB Programmer's Reference<ept id="p1">](https://msdn.microsoft.com/en-us/library/ms718124.aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The OLE DB Templates support the existing OLE DB object model rather than adding a new object model.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The top-layer classes in the OLE DB Consumer Templates parallel the components defined in the OLE DB specification.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The design of the OLE DB Consumer Templates includes advanced features such as multiple accessors on a rowset.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The use of templates and multiple inheritance makes the library small and flexible.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>How OLE DB Consumers Access Data</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Consumers use several kinds of objects, which are described in the following topics:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Data Sources and Sessions</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Accessors and Rowsets</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Commands and Tables</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>User Records</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Before the consumer does anything, you first select an OLE DB provider that is appropriate for the type of database you need to access (for example, SQL, Oracle, ODBC, and MSDS).</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To do this, you typically use an enumerator (see <bpt id="p1">[</bpt>CEnumerator<ept id="p1">](../../data/oledb/cenumerator-class.md)</ept> as mentioned in <bpt id="p2">[</bpt>Data Sources and Sessions<ept id="p2">](../../data/oledb/data-sources-and-sessions.md)</ept>).</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>data source object<ept id="p1">](../../data/oledb/data-sources-and-sessions.md)</ept> provides the connection information necessary to connect to the data source you selected.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The data source object also contains authentication information (such as login names and passwords), which is used to give users permission to access the data source.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The data source object makes a connection to the database and then creates one or more session objects.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Each <bpt id="p1">[</bpt>session object<ept id="p1">](../../data/oledb/data-sources-and-sessions.md)</ept> manages its own interactions with the database (that is, querying and retrieving data) and performs these transactions independently of other existing sessions.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The session creates the rowset and command objects.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>command object<ept id="p1">](../../data/oledb/commands-and-tables.md)</ept> allows users to interact with the database, for example, using SQL commands.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>rowset object<ept id="p1">](../../data/oledb/accessors-and-rowsets.md)</ept> is a set of data through which you can navigate and in which you can <bpt id="p2">[</bpt>update, delete, and insert rows<ept id="p2">](../../data/oledb/updating-rowsets.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>An OLE DB consumer binds columns in the database tables with local variables; to do this, it uses an <bpt id="p1">[</bpt>accessor<ept id="p1">](../../data/oledb/accessors-and-rowsets.md)</ept>, which contains a map of how data is stored within the consumer.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The map consists of a set of bindings between table columns and local buffers (variables) in the consumer application.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>One important concept when working with consumers is that you declare two classes in a consumer: the <bpt id="p1">[</bpt>command (or table) class<ept id="p1">](../../data/oledb/commands-and-tables.md)</ept> and the <bpt id="p2">[</bpt>user record class<ept id="p2">](../../data/oledb/user-records.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You access the rowset through the command (or table) class, which inherits from both an accessor class and a rowset class.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The user record class contains the rowset binding map previously described.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For more information, see the following topics:</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Creating an OLE DB Consumer</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Common OLE DB Consumer Scenarios (Examples)</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>OLE DB Programming</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Data Access</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>OLE DB SDK Documentation</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>OLE DB Programmer's Reference</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>