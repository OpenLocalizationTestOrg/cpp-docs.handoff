<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b4dda011d165950d92dcc17eddb60e082ba78d61</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\cprogressctrl-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">30174b33c574788394aa73def044cee532b6efa5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65c49f3e58bb1cead2b21fe412f04a636d949f3e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CProgressCtrl Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CProgressCtrl Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Provides the functionality of the Windows common progress bar control.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::CProgressCtrl</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CProgressCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::Create</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Creates a progress bar control and attaches it to a <ph id="ph1">`CProgressCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::CreateEx</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Creates a progress control with the specified Windows extended styles and attaches it to a <ph id="ph1">`CProgressCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::GetBarColor</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets the color of the progress indicator bar for the current progress bar control.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::GetBkColor</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets the background color of the current progress bar.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::GetPos</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets the current position of the progress bar.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::GetRange</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets the lower and upper limits of the range of the progress bar control.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::GetState</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets the state of the current progress bar control.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::GetStep</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Retrieves the step increment for the progress bar of the current progress bar control.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::OffsetPos</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Advances the current position of a progress bar control by a specified increment and redraws the bar to reflect the new position.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::SetBarColor</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Sets the color of the progress indicator bar in the current progress bar control.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::SetBkColor</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Sets the background color for the progress bar.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::SetMarquee</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Turns marquee mode on or off for the current progress bar control.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::SetPos</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Sets the current position for a progress bar control and redraws the bar to reflect the new position.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::SetRange</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Sets the minimum and maximum ranges for a progress bar control and redraws the bar to reflect the new ranges.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::SetState</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Sets the state of the current progress bar control.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::SetStep</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Specifies the step increment for a progress bar control.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::StepIt</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Advances the current position for a progress bar control by the step increment (see <bpt id="p1">[</bpt>SetStep<ept id="p1">](#cprogressctrl__setstep)</ept>) and redraws the bar to reflect the new position.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A progress bar control is a window that an application can use to indicate the progress of a lengthy operation.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>It consists of a rectangle that is gradually filled, from left to right, with the system highlight color as an operation progresses.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A progress bar control has a range and a current position.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The range represents the total duration of the operation, and the current position represents the progress the application has made toward completing the operation.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The window procedure uses the range and the current position to determine the percentage of the progress bar to fill with the highlight color.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Because the range and current position values are expressed as signed integers, the possible range of current position values is from â€“2,147,483,648 to 2,147,483,647 inclusive.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For more information on using <ph id="ph1">`CProgressCtrl`</ph>, see <bpt id="p1">[</bpt>Controls<ept id="p1">](../../mfc/controls-mfc.md)</ept> and <bpt id="p2">[</bpt>Using CProgressCtrl<ept id="p2">](../../mfc/using-cprogressctrl.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>CObject</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>CCmdTarget</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>CWnd</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxcmn.h</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::CProgressCtrl</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CProgressCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>After constructing the <ph id="ph1">`CProgressCtrl`</ph> object, call <ph id="ph2">`CProgressCtrl::Create`</ph> to create the progress bar control.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CProgressCtrl#1</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::Create</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Creates a progress bar control and attaches it to a <ph id="ph1">`CProgressCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Specifies the progress bar control's style.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Apply any combination of window stylesdescribed in <bpt id="p1">[</bpt>CreateWindow<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632679)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>, in addition to the following progress bar control styles, to the control:</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Displays progress information vertically, top to bottom.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Without this flag, the progress bar control displays horizontally, left to right.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Displays gradual, smooth filling in the progress bar control.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Without this flag, the control will fill with blocks.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Specifies the progress bar control's size and position.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>It can be either a <bpt id="p1">[</bpt>CRect<ept id="p1">](../../atl-mfc-shared/reference/crect-class.md)</ept> object or a <bpt id="p2">[</bpt>RECT<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Because the control must be a child window, the specified coordinates are relative to the client area of the <ph id="ph1">`pParentWnd`</ph>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Specifies the progress bar control's parent window, usually a <ph id="ph1">`CDialog`</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>It must not be <bpt id="p1">**</bpt>NULL.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Specifies the progress bar control's ID.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> if the <ph id="ph1">`CProgressCtrl`</ph> object is successfully created; otherwise <bpt id="p2">**</bpt>FALSE<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>You construct a <ph id="ph1">`CProgressCtrl`</ph> object in two steps.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>First, call the constructor, which creates the <ph id="ph1">`CProgressCtrl`</ph> object, and then call <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>, which creates the progress bar control.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CProgressCtrl#2</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::CreateEx</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Creates a control (a child window) and associates it with the <ph id="ph1">`CProgressCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Specifies the extended style of the control being created.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For a list of extended Windows styles, see the <ph id="ph1">`dwExStyle`</ph> parameter for <bpt id="p1">[</bpt>CreateWindowEx<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632680)</ept> in the <ph id="ph2">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Specifies the progress bar control's style.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Apply any combination of window styles described in <bpt id="p1">[</bpt>CreateWindow<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632679)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">[</bpt>RECT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure describing the size and position of the window to be created, in client coordinates of <ph id="ph1">`pParentWnd`</ph>.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>A pointer to the window that is the control's parent.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The control's child-window ID.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`CreateEx`</ph> instead of <bpt id="p1">[</bpt>Create<ept id="p1">](#cprogressctrl__create)</ept> to apply extended Windows styles, specified by the Windows extended style preface <bpt id="p2">**</bpt>WS_EX_<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::GetBarColor</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Gets the color of the progress indicator bar for the current progress bar control.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The color of the current progress bar, represented as a <bpt id="p1">[</bpt>COLORREF<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd183449)</ept> value, or <ph id="ph1">`CLR_DEFAULT`</ph> if the progress indicator bar color is the default color.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>This method sends the <bpt id="p1">[</bpt>PBM_GETBARCOLOR<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb760826)</ept> message, which is described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::GetBkColor</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Gets the background color of the current progress bar.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The background color of the current progress bar, represented as a <bpt id="p1">[</bpt>COLORREF<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd183449)</ept> value.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>This method sends the <bpt id="p1">[</bpt>PBM_GETBKCOLOR<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb760828)</ept> message, which is described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::GetPos</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Retrieves the current position of the progress bar.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The position of the progress bar control.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The position of the progress bar control is not the physical location on the screen, but rather is between the upper and lower range indicated in <bpt id="p1">[</bpt>SetRange<ept id="p1">](#cprogressctrl__setrange)</ept>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CProgressCtrl#3</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::GetRange</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Gets the current lower and upper limits, or range, of the progress bar control.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>A reference to an integer receiving the lower limit of the progress bar control.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>A reference to an integer receiving the upper limit of the progress bar control.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>This function copies the values of the lower and upper limits to the integers referenced by <ph id="ph1">`nLower`</ph> and <ph id="ph2">`nUpper`</ph>, respectively.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CProgressCtrl#4</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::GetState</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Gets the state of the current progress bar control.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The state of the current progress bar control, which is one of the following values:</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>State</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>In progress</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Error</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Paused</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>This method sends the <bpt id="p1">[</bpt>PBM_GETSTATE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb760834)</ept> message, which is described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The following code example defines the variable, <ph id="ph1">`m_progressCtrl`</ph>, that is used to programmatically access the progress bar control.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>This variable is used in the next example.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CProgressCtrl_s1#9</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The following code example retrieves the state of the current progress bar control.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CProgressCtrl_s1#5</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::GetStep</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Retrieves the step increment for the progress bar of the current progress bar control.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The step increment of the progress bar.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The step increment is the amount by which a call to <bpt id="p1">[</bpt>CProgressCtrl::StepIt<ept id="p1">](#cprogressctrl__stepit)</ept> increases the current position of the progress bar.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>This method sends the <bpt id="p1">[</bpt>PBM_GETSTEP<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb760836)</ept> message, which is described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The following code example defines the variable, <ph id="ph1">`m_progressCtrl`</ph>, that is used to programmatically access the progress bar control.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>This variable is used in the next example.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CProgressCtrl_s1#9</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The following code example retrieves the step increment of the current progress bar control.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CProgressCtrl_s1#3</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::OffsetPos</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Advances the progress bar control's current position by the increment specified by <ph id="ph1">`nPos`</ph> and redraws the bar to reflect the new position.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Amount to advance the position.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The previous position of the progress bar control.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CProgressCtrl#5</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::SetBarColor</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Sets the color of the progress indicator bar in the current progress bar control.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>COLORREF<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd183449)</ept> value that specifies the new color of the progress indicator bar.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Specify <ph id="ph1">`CLR_DEFAULT`</ph> to cause the progress bar to use its default color.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The previous color of the progress indicator bar, represented as a <bpt id="p1">[</bpt>COLORREF<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd183449)</ept> value, or <ph id="ph1">`CLR_DEFAULT`</ph> if the color of the progress indicator bar is the default color.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`SetBarColor`</ph> method sets the progress bar color only if a <ph id="ph2">[!INCLUDE[windowsver](../../build/reference/includes/windowsver_md.md)]</ph><bpt id="p1">[</bpt>theme<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/hh270423.aspx)</ept> is not in effect.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>This method sends the <bpt id="p1">[</bpt>PBM_SETBARCOLOR<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb760838)</ept> message, which is described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The following code example defines the variable, <ph id="ph1">`m_progressCtrl`</ph>, that is used to programmatically access the progress bar control.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>This variable is used in the next example.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CProgressCtrl_s1#9</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The following code example changes the color of the progress bar to red, green, blue, or the default.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CProgressCtrl_s1#1</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::SetBkColor</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Sets the background color for the progress bar.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>COLORREF<ept id="p1">**</ept> value that specifies the new background color.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Specify the <ph id="ph1">`CLR_DEFAULT`</ph> value to use the default background color for the progress bar.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>COLORREF<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd183449)</ept> value indicating the previous background color, or <bpt id="p2">**</bpt>CLR_DEFAULT<ept id="p2">**</ept> if the background color is the default color.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CProgressCtrl#6</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::SetMarquee</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Turns marquee mode on or off for the current progress bar control.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>to turn marquee mode on, or <ph id="ph1">`false`</ph> to turn marquee mode off.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Time in milliseconds between updates of the marquee animation.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>This method always returns <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>When marquee mode is turned on, the progress bar is animated and scrolls like a sign on a theater marquee.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>This method sends the <bpt id="p1">[</bpt>PBM_SETMARQUEE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb760842)</ept> message, which is described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The following code example defines the variable, <ph id="ph1">`m_progressCtrl`</ph>, that is used to programmatically access the progress bar control.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>This variable is used in the next example.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CProgressCtrl_s1#9</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The following code example starts and stops the marquee scrolling animation.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CProgressCtrl_s1#2</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::SetPos</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Sets the progress bar control's current position as specified by <ph id="ph1">`nPos`</ph> and redraws the bar to reflect the new position.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>New position of the progress bar control.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>The previous position of the progress bar control.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The position of the progress bar control is not the physical location on the screen, but rather is between the upper and lower range indicated in <bpt id="p1">[</bpt>SetRange<ept id="p1">](#cprogressctrl__setrange)</ept>.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CProgressCtrl#7</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::SetRange</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Sets the upper and lower limits of the progress bar control's range and redraws the bar to reflect the new ranges.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Specifies the lower limit of the range (default is zero).</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Specifies the upper limit of the range (default is 100).</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>The member function <ph id="ph1">`SetRange32`</ph> sets the 32-bit range for the progress control.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CProgressCtrl#8</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::SetState</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Sets the state of the current progress bar control.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The state to set the progress bar.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Use one of the following values:</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>- In progress</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>- Error</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>- Paused</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The previous state of the current progress bar control.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>This method sends the <bpt id="p1">[</bpt>PBM_SETSTATE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb760850)</ept> message, which is described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The following code example defines the variable, <ph id="ph1">`m_progressCtrl`</ph>, that is used to programmatically access the progress bar control.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>This variable is used in the next example.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CProgressCtrl_s1#9</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The following code example sets the state of the current progress bar control to Paused or In Progress.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CProgressCtrl_s1#4</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::SetStep</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Specifies the step increment for a progress bar control.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>nStep</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>New step increment.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The previous step increment.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>The step increment is the amount by which a call to <ph id="ph1">`CProgressCtrl::StepIt`</ph> increases the progress bar's current position.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The default step increment is 10.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CProgressCtrl#9</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>CProgressCtrl::StepIt</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Advances the current position for a progress bar control by the step increment and redraws the bar to reflect the new position.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>The previous position of the progress bar control.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>The step increment is set by the <ph id="ph1">`CProgressCtrl::SetStep`</ph> member function.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>NVC_MFC_CProgressCtrl#10</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>MFC Sample CMNCTRL2</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>CWnd Class</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Hierarchy Chart</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>