<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">107acbd04816f204bb6a551369c3452220950b8d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\methods-of-creating-a-toolbar.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ccb6e0e1a1a151ffe6837dc4c365a98e2f74dea4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3293a3259f21ff85542d4b53355166dac902bc8f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Methods of Creating a Toolbar | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Methods of Creating a Toolbar</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>MFC provides two classes to create toolbars: <bpt id="p1">[</bpt>CToolBar<ept id="p1">](../mfc/reference/ctoolbar-class.md)</ept> and <bpt id="p2">[</bpt>CToolBarCtrl<ept id="p2">](../mfc/reference/ctoolbarctrl-class.md)</ept> (which wraps the Windows common control API).</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>provides all of the functionality of the toolbar common control, and it handles many of the required common control settings and structures for you; however, your resulting executable usually will be larger than that created by using <ph id="ph1">`CToolBarCtrl`</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>usually results in a smaller executable, and you may prefer to use <ph id="ph1">`CToolBarCtrl`</ph> if you do not intend to integrate the toolbar into the MFC architecture.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If you plan to use <ph id="ph1">`CToolBarCtrl`</ph> and integrate the toolbar into the MFC architecture, you must take additional care to communicate toolbar control manipulations to MFC.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This communication is not difficult; however, it is additional work that is unneeded when you use <ph id="ph1">`CToolBar`</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Visual C++ provides two ways to take advantage of the toolbar common control.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Create the toolbar using <ph id="ph1">`CToolBar`</ph>, and then call <bpt id="p1">[</bpt>CToolBar::GetToolBarCtrl<ept id="p1">](../mfc/reference/ctoolbar-class.md#ctoolbar__gettoolbarctrl)</ept> to get access to the <ph id="ph2">`CToolBarCtrl`</ph> member functions.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Create the toolbar using <bpt id="p1">[</bpt>CToolBarCtrl<ept id="p1">](../mfc/reference/ctoolbarctrl-class.md)</ept>'s constructor.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Either method will give you access to the member functions of the toolbar control.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When you call <ph id="ph1">`CToolBar::GetToolBarCtrl`</ph>, it returns a reference to a <ph id="ph2">`CToolBarCtrl`</ph> object so you can use either set of member functions.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CToolBar<ept id="p1">](../mfc/reference/ctoolbar-class.md)</ept> for information on constructing and creating a toolbar using <ph id="ph1">`CToolBar`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Using CToolBarCtrl</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Controls</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>