<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="tr-tr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6e22ef89b92a5b584979abbd370f82b482cf74e0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\error-messages\compiler-warnings\compiler-warning-level-1-c4750.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aff5d0218793a9af72811619fcc50d87ce266c9c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">396054e4d9b049a6502b3ededbb9a0ea46d139da</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4750 | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4750</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>'identifier': function with _alloca() inlined into a loop</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The 'identifier' function forces inline expansion of the <bpt id="p1">[</bpt>_alloca<ept id="p1">](../../c-runtime-library/reference/alloca.md)</ept> function within a loop, which might cause a stack overflow when the loop is executed.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To correct this error</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Ensure that the 'identifier' function is not modified with the <bpt id="p1">[</bpt>__forceinline<ept id="p1">](../../cpp/inline-functions-cpp.md)</ept> specifier.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Ensure that the 'identifier' function does not contain a <bpt id="p1">[</bpt>_alloca<ept id="p1">](../../c-runtime-library/reference/alloca.md)</ept> function that is contained in a loop.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Do not specify the <bpt id="p1">[</bpt>/O1<ept id="p1">](../../build/reference/o1-o2-minimize-size-maximize-speed.md)</ept>, <bpt id="p2">[</bpt>/O2<ept id="p2">](../../build/reference/o1-o2-minimize-size-maximize-speed.md)</ept>, <bpt id="p3">[</bpt>/Ox<ept id="p3">](../../build/reference/ox-full-optimization.md)</ept>, or <bpt id="p4">[</bpt>/Og<ept id="p4">](../../build/reference/og-global-optimizations.md)</ept> compilation switch.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Place the <bpt id="p1">[</bpt>_alloca<ept id="p1">](../../c-runtime-library/reference/alloca.md)</ept> function in a <bpt id="p2">[</bpt>try-except statement<ept id="p2">](../../cpp/try-except-statement.md)</ept> that will catch a stack overflow.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following code example calls <ph id="ph1">`MyFunction`</ph> in a loop, and <ph id="ph2">`MyFunction`</ph> calls the <ph id="ph3">`_alloca`</ph> function.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`__forceinline`</ph> modifier causes the inline expansion of the <ph id="ph2">`_alloca`</ph> function.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>_alloca</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>