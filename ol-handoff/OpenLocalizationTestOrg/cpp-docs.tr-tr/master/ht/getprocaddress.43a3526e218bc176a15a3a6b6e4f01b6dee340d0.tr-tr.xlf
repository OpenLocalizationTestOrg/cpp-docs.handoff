<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="tr-tr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ebe97454ff25961661becfe7aa7c3d04e86b16e7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\build\getprocaddress.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4cbe4f9efd3c9185cf16bc82974b5b3aef012e44</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a43d25e71b3f26ebe7d6b6946a661a9bf87597d5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>GetProcAddress | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>GetProcAddress</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Processes explicitly linking to a DLL call <bpt id="p1">[</bpt>GetProcAddress<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683212)</ept> to obtain the address of an exported function in the DLL.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You use the returned function pointer to call the DLL function.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>GetProcAddress<ept id="p1">**</ept> takes as parameters the DLL module handle (returned by either <bpt id="p2">**</bpt>LoadLibrary<ept id="p2">**</ept>, <ph id="ph1">`AfxLoadLibrary`</ph>, or <bpt id="p3">**</bpt>GetModuleHandle<ept id="p3">**</ept>) and takes either the name of the function you want to call or the function's export ordinal.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Because you are calling the DLL function through a pointer and there is no compile-time type checking, make sure that the parameters to the function are correct so that you do not overstep the memory allocated on the stack and cause an access violation.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>One way to help provide type-safety is to look at the function prototypes of the exported functions and create matching typedefs for the function pointers.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>How you specify the function you want when calling <bpt id="p1">**</bpt>GetProcAddress<ept id="p1">**</ept> depends on how the DLL was built.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can only obtain the export ordinal if the DLL you are linking to is built with a module definition (.def) file and if the ordinals are listed with the functions in the <bpt id="p1">**</bpt>EXPORTS<ept id="p1">**</ept> section of the DLL's .def file.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Calling <bpt id="p1">**</bpt>GetProcAddress<ept id="p1">**</ept> with an export ordinal, as opposed to the function name, is slightly faster if the DLL has many exported functions because the export ordinals serve as indexes into the DLL's export table.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>With an export ordinal, <bpt id="p1">**</bpt>GetProcAddress<ept id="p1">**</ept> can locate the function directly as opposed to comparing the specified name to the function names in the DLL's export table.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>However, you should call <bpt id="p1">**</bpt>GetProcAddress<ept id="p1">**</ept> with an export ordinal only if you have control over assigning the ordinals to the exported functions in the .def file.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>What do you want to do?</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Link implicitly</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Determine which linking method to use</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>What do you want to know more about?</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>LoadLibrary and AfxLoadLibrary</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>FreeLibrary</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Exporting from a DLL Using DEF Files</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>DLLs in Visual C++</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>