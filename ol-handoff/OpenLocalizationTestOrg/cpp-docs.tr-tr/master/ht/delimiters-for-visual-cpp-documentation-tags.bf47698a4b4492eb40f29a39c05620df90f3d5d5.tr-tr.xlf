<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="tr-tr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fbb578e9cafdeba7c2b068cf7b38614d80c01a34</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\ide\delimiters-for-visual-cpp-documentation-tags.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">42ec5d2f3fe44e2e67a0646fe95a68f6ddd8251a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cb5b7e3ef30eb307c41a55f94935efd4e3879fb8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Delimiters for Visual C++ Documentation Tags | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Delimiters for Visual C++ Documentation Tags</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The use of documentation tags requires delimiters, which indicate to the compiler where a documentation comment begins and ends.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can use the following kinds of delimiters with the XML documentation tags:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This is the form that is shown in documentation examples and used by the Visual C++ project templates.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>These are multiline delimiters.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>There are some formatting rules when using the <ph id="ph1">`/** */`</ph> delimiters:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For the line that contains the <ph id="ph1">`/**`</ph> delimiter, if the remainder of the line is white space, the line is not processed for comments.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If the first character is white space, that white space character is ignored and the rest of the line is processed.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Otherwise, the entire text of the line after the <ph id="ph1">`/**`</ph> delimiter is processed as part of the comment.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For the line that contains the <ph id="ph1">`*/`</ph> delimiter, if there is only white space up to the <ph id="ph2">`*/`</ph> delimiter, that line is ignored.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Otherwise, the text on the line up to the <ph id="ph1">`*/`</ph> delimiter is processed as part of the comment, subject to the pattern-matching rules described in the following bullet.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For the lines after the one that begins with the <ph id="ph1">`/**`</ph> delimiter, the compiler looks for a common pattern at the beginning of each line that consists of optional white space and an asterisk (<ph id="ph2">`*`</ph>), followed by more optional white space.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If the compiler finds a common set of characters at the beginning of each line, it will ignore that pattern for all lines after the <ph id="ph1">`/**`</ph> delimiter, up to and possibly including the line that contains the <ph id="ph2">`*/`</ph> delimiter.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Some examples:</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The only part of the following comment that will be processed is the line that begins with <ph id="ph1">`&lt;summary&gt;`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following two tag formats will produce the same comments:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The compiler applies a pattern of " * " to ignore at the beginning of the second and third lines.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The compiler finds no pattern in this comment because there is no asterisk on the second line.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Therefore, all text on the second and third lines, up till the <ph id="ph1">`*/`</ph>, will be processed as part of the comment.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The compiler finds no pattern in this comment for two reasons.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>First, there is no line that begins with a consistent number of spaces before the asterisk.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Second, the fifth line begins with a tab, which does not match spaces.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Therefore, all text from the second line until the <ph id="ph1">`*/`</ph> will be processed as part of the comment.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>XML Documentation</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>