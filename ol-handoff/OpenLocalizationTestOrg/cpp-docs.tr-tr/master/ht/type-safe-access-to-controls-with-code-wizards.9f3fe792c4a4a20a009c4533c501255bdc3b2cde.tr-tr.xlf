<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="tr-tr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b53c9ad50b42efa0a1ed496e92d1d56abb2d8a19</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\type-safe-access-to-controls-with-code-wizards.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d2e1cdf8935dceb4df12324463897f905b9e1714</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">24ee3d680847d39046bcc517bad23482091323a4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Type-Safe Access to Controls With Code Wizards | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Type-Safe Access to Controls With Code Wizards</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>If you are familiar with DDX features, you can use the Control property in the <bpt id="p1">[</bpt>Add Member Variable Wizard<ept id="p1">](../ide/add-member-variable-wizard.md)</ept> to create type-safe access.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This approach is easier than creating controls without code wizards.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If you simply want access to a control's value, DDX provides it.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If you want to do more than access a control's value, use the Add Member Variable Wizard to add a member variable of the appropriate class to your dialog class.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Attach this member variable to the Control property.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Member variables can have a Control property instead of a Value property.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The Value property refers to the type of data returned from the control, such as <ph id="ph1">`CString`</ph> or <ph id="ph2">`int`</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Control property enables direct access to the control through a data member whose type is one of the control classes in MFC, such as <ph id="ph1">`CButton`</ph> or <ph id="ph2">`CEdit`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For a given control, you can, if you wish, have multiple member variables with the Value property and at most one member variable with the Control property.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can have only one MFC object mapped to a control because multiple objects attached to a control, or any other window, would lead to an ambiguity in the message map.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can use this object to call any member functions for the control object.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Such calls affect the control in the dialog box.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, for a check-box control represented by a variable <ph id="ph1">`m_Checkbox`</ph>, of type <ph id="ph2">`CButton`</ph>, you could call:</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>NVC_MFCControlLadenDialog#52</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Here the member variable <ph id="ph1">`m_Checkbox`</ph> serves the same purpose as the member function <ph id="ph2">`GetMyCheckbox`</ph> shown in <bpt id="p1">[</bpt>Type-Safe Access to Controls Without Code Wizards<ept id="p1">](../mfc/type-safe-access-to-controls-without-code-wizards.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If the check box is not an auto check box, you would still need a handler in your dialog class for the <bpt id="p1">**</bpt>BN_CLICKED<ept id="p1">**</ept> control-notification message when the button is clicked.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more information about controls, see <bpt id="p1">[</bpt>Controls<ept id="p1">](../mfc/controls-mfc.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Type-Safe Access to Controls in a Dialog Box</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Life Cycle of a Dialog Box</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Type-Safe Access to Controls Without Code Wizards</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>