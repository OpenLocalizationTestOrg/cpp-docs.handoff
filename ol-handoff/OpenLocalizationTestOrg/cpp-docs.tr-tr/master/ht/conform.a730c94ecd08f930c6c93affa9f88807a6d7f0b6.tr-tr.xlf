<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="tr-tr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">08a46cf89921cb1f030488069c500cb50a442181</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\preprocessor\conform.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a244cc14af181ec065cc761ee07cb398bd8acdc1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b45cf3402464eae540aaa3cba3690b4044e3b432</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>conform | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>conform</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>C++ Specific</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Specifies the run-time behavior of the <bpt id="p1">[</bpt>/Zc:forScope<ept id="p1">](../build/reference/zc-forscope-force-conformance-in-for-loop-scope.md)</ept> compiler option.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Specifies the name of the compiler option to be modified.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The only valid <bpt id="p1">*</bpt>name<ept id="p1">*</ept> is <ph id="ph1">`forScope`</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>show<ept id="p1">**</ept> (optional)</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Causes the current setting of <bpt id="p1">*</bpt>name<ept id="p1">*</ept> (true or false) to be displayed by means of a warning message during compilation.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`#pragma conform(forScope, show)`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>on, off<ept id="p1">**</ept>(optional)</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Setting <bpt id="p1">*</bpt>name<ept id="p1">*</ept> to <bpt id="p2">**</bpt>on<ept id="p2">**</ept> enables the <bpt id="p3">[</bpt>/Zc:forScope<ept id="p3">](../build/reference/zc-forscope-force-conformance-in-for-loop-scope.md)</ept> compiler option.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">**</bpt>off<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>push<ept id="p1">**</ept> (optional)</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Pushes the current value of <bpt id="p1">*</bpt>name<ept id="p1">*</ept> onto the internal compiler stack.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If you specify <bpt id="p1">*</bpt>identifier<ept id="p1">*</ept>, you can specify the <bpt id="p2">**</bpt>on<ept id="p2">**</ept> or <bpt id="p3">**</bpt>off<ept id="p3">**</ept> value for <bpt id="p4">*</bpt>name<ept id="p4">*</ept> to be pushed onto the stack.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`#pragma conform(forScope, push, myname, on)`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>pop<ept id="p1">**</ept> (optional)</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Sets the value of <bpt id="p1">*</bpt>name<ept id="p1">*</ept> to the value at the top of the internal compiler stack and then pops the stack.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If identifier is specified with <bpt id="p1">**</bpt>pop<ept id="p1">**</ept>, the stack will be popped back until it finds the record with <bpt id="p2">*</bpt>identifier<ept id="p2">*</ept>, which will also be popped; the current value for <bpt id="p3">*</bpt>name<ept id="p3">*</ept> in the next record on the stack becomes the new value for <bpt id="p4">*</bpt>name<ept id="p4">*</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If you specify pop with an <bpt id="p1">*</bpt>identifier<ept id="p1">*</ept> that is not in a record on the stack, the <bpt id="p2">**</bpt>pop<ept id="p2">**</ept> is ignored.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>identifier<ept id="p1">*</ept>(optional)</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Can be included with a <bpt id="p1">**</bpt>push<ept id="p1">**</ept> or <bpt id="p2">**</bpt>pop<ept id="p2">**</ept> command.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">*</bpt>identifier<ept id="p1">*</ept> is used, then an <bpt id="p2">**</bpt>on<ept id="p2">**</ept> or <bpt id="p3">**</bpt>off<ept id="p3">**</ept> specifier can also be used.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Pragma Directives and the __Pragma Keyword</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>