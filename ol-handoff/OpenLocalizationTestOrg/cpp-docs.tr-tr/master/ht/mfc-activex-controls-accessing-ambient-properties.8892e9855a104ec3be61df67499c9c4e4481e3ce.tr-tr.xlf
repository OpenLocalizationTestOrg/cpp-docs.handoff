<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="tr-tr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a94a91d01bbc0b0468c5ebdf112cb301db8be025</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\mfc-activex-controls-accessing-ambient-properties.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9ee4ac3462b74c7a4b8f58e3c4b5864cc65435f4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ede5c10320cac308f8efb27eefb09f9de7730a04</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>MFC ActiveX Controls: Accessing Ambient Properties | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>MFC ActiveX Controls: Accessing Ambient Properties</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This article discusses how an ActiveX control can access the ambient properties of its control container.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A control can obtain information about its container by accessing the container's ambient properties.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>These properties expose visual characteristics, such as the container's background color, the current font used by the container, and operational characteristics, such as whether the container is currently in user mode or designer mode.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A control can use ambient properties to tailor its appearance and behavior to the particular container in which it is embedded.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>However, a control should never assume that its container will support any particular ambient property.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In fact, some containers may not support any ambient properties at all.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In the absence of an ambient property, a control should assume a reasonable default value.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To access an ambient property, make a call to <bpt id="p1">[</bpt>COleControl::GetAmbientProperty<ept id="p1">](../mfc/reference/colecontrol-class.md#colecontrol__getambientproperty)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This function expects the dispatch ID for the ambient property as the first parameter (the file OLECTL.H defines dispatch IDs for the standard set of ambient properties).</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The parameters of the <ph id="ph1">`GetAmbientProperty`</ph> function are the dispatch ID, a variant tag indicating the expected property type, and a pointer to memory where the value should be returned.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The type of data to which this pointer refers will vary depending on the variant tag.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The function returns <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> if the container supports the property, otherwise it returns <bpt id="p2">**</bpt>FALSE<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The following code example obtains the value of the ambient property called "UserMode."</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If the property is not supported by the container, a default value of <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> is assumed:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>NVC_MFC_AxUI#30</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For your convenience, <ph id="ph1">`COleControl`</ph> supplies helper functions that access many of the commonly used ambient properties and return appropriate defaults when the properties are not available.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>These helper functions are as follows:</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>COleControl::AmbientBackColor</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>AmbientDisplayName</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>AmbientFont</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Caller must call <bpt id="p1">**</bpt>Release( )<ept id="p1">**</ept> on the returned font.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>AmbientForeColor</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>AmbientLocaleID</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>AmbientScaleUnits</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>AmbientTextAlign</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>AmbientUserMode</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>AmbientUIDead</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>AmbientShowHatching</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>AmbientShowGrabHandles</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If the value of an ambient property changes (through some action of the container), the <bpt id="p1">**</bpt>OnAmbientPropertyChanged<ept id="p1">**</ept> member function of the control is called.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Override this member function to handle such a notification.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The parameter for <bpt id="p1">**</bpt>OnAmbientPropertyChanged<ept id="p1">**</ept> is the dispatch ID of the affected ambient property.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The value of this dispatch ID may be <bpt id="p1">**</bpt>DISPID_UNKNOWN<ept id="p1">**</ept>, which indicates that one or more ambient properties has changed, but information about which properties were affected is unavailable.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>MFC ActiveX Controls</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>