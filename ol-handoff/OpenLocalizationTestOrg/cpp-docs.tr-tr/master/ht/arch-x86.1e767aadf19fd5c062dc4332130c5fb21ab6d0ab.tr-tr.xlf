<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="tr-tr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f3b7f04bc073d1c26c2bd4e2b6641a82aff1bc9a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\build\reference\arch-x86.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9443e462e4e84bf6e0088492cbac3b4ba631f540</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">32fcafaa749a21f00aa55d2ac793b56c849f872c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>-arch (x86) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>/arch (x86)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Specifies the architecture for code generation on x86.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Also see <bpt id="p1">[</bpt>/arch (x64)<ept id="p1">](../../build/reference/arch-x64.md)</ept> and <bpt id="p2">[</bpt>/arch (ARM)<ept id="p2">](../../build/reference/arch-arm.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Arguments</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>/arch:IA32</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Specifies no enhanced instructions and also specifies x87 for floating-point calculations.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>/arch:SSE</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Enables the use of SSE instructions.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>/arch:SSE2</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Enables the use of SSE2 instructions.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This is the default instruction on x86 platforms if no <bpt id="p1">**</bpt>/arch<ept id="p1">**</ept> option is specified.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>/arch:AVX</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Enables the use of Intel Advanced Vector Extensions instructions.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>/arch:AVX2</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Enables the use of Intel Advanced Vector Extensions 2 instructions.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The SSE and SSE2 instructions exist on various Intel and AMD processors.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The AVX instructions exist on Intel Sandy Bridge processors and AMD Bulldozer processors.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>AVX2 instructions are supported by Intel Haswell and Broadwell processors and AMD Excavator-based processors.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`_M_IX86_FP`</ph>, <ph id="ph2">`__AVX__`</ph> and <ph id="ph3">`__AVX2__`</ph> macros indicate which, if any, <bpt id="p1">**</bpt>/arch<ept id="p1">**</ept> compiler option was used.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Predefined Macros<ept id="p1">](../../preprocessor/predefined-macros.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>/arch:AVX2<ept id="p1">**</ept> option and <ph id="ph1">`__AVX2__`</ph> macro were introduced in Visual Studio 2013 Update 2, version 12.0.34567.1.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The optimizer chooses when and how to use the SSE and SSE2 instructions when <bpt id="p1">**</bpt>/arch<ept id="p1">**</ept> is specified.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>It uses SSE and SSE2 instructions for some scalar floating-point computations when it determines that it is faster to use the SSE/SSE2 instructions and registers instead of the x87 floating-point register stack.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>As a result, your code may actually use a mixture of both x87 and SSE/SSE2 for floating-point computations.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Also, with <bpt id="p1">**</bpt>/arch:SSE2<ept id="p1">**</ept>, SSE2 instructions can be used for some 64-bit integer operations.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In addition to using the SSE and SSE2 instructions, the compiler also uses other instructions that are present on the processor revisions that support SSE and SSE2.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>An example is the CMOV instruction that first appeared on the Pentium Pro revision of the Intel processors.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Because the x86 compiler generates code that uses SSE2 instructions by default, you must specify <bpt id="p1">**</bpt>/arch:IA32<ept id="p1">**</ept> to disable generation of SSE and SSE2 instructions for x86 processors.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/arch<ept id="p1">**</ept> only affects code generation for native functions.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When you use <bpt id="p1">[</bpt>/clr<ept id="p1">](../../build/reference/clr-common-language-runtime-compilation.md)</ept> to compile, <bpt id="p2">**</bpt>/arch<ept id="p2">**</ept> has no effect on code generation for managed functions.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/arch<ept id="p1">**</ept> and <bpt id="p2">[</bpt>/QIfist<ept id="p2">](../../build/reference/qifist-suppress-ftol.md)</ept> cannot be used on the same compiland.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In particular, if you do not use <ph id="ph1">`_controlfp`</ph> to modify the FP control word, then the run-time startup code sets the x87 FPU control word precision-control field to 53-bits.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Therefore, every float and double operation in an expression uses a 53-bit significand and a 15-bit exponent.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>However, every SSE single-precision operation uses a 24-bit significand and an 8-bit exponent, and SSE2 double-precision operations use a 53-bit significand and an 11-bit exponent.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>_control87, _controlfp, <ph id="ph1">\_</ph>_control87_2<ept id="p1">](../../c-runtime-library/reference/control87-controlfp-control87-2.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>These differences are possible in one expression tree, but not in cases where a user assignment is involved after each subexpression.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Consider the following:</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Against:</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To set this compiler option for AVX, AVX2, IA32, SSE, or SSE2 in Visual Studio</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">**</bpt>Property Pages<ept id="p1">**</ept> dialog box for the project.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Working with Project Properties<ept id="p1">](../../ide/working-with-project-properties.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Configuration Properties<ept id="p1">**</ept>, <bpt id="p2">**</bpt>C/C++<ept id="p2">**</ept> folder.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Code Generation<ept id="p1">**</ept> property page.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Modify the <bpt id="p1">**</bpt>Enable Enhanced Instruction Set<ept id="p1">**</ept> property.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To set this compiler option programmatically</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>See &lt;xref:Microsoft.VisualStudio.VCProjectEngine.VCCLCompilerTool.EnableEnhancedInstructionSet%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>/arch (Minimum CPU Architecture)</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Compiler Options</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Setting Compiler Options</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>