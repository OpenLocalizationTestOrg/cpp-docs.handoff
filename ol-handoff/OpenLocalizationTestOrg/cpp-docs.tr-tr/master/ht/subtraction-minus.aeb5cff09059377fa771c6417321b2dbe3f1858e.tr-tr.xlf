<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="tr-tr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d5fb124d1b9cd1ea38baddbadad6d0ea2f3a9aba</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-language\subtraction-minus.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f93bc7bb24ad554341b6bb43d901bced824b682b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">897f5a35a4e6a3a6f413c6a47d75afcd1b1a7d05</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Subtraction (–) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Subtraction (–)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The subtraction operator (<bpt id="p1">**</bpt>–<ept id="p1">**</ept>) subtracts the second operand from the first.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Both operands can be either integral or floating types, or one operand can be a pointer and the other an integer.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When two pointers are subtracted, the difference is converted to a signed integral value by dividing the difference by the size of a value of the type that the pointers address.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The size of the integral value is defined by the type <bpt id="p1">**</bpt>ptrdiff_t<ept id="p1">**</ept> in the standard include file STDDEF.H.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The result represents the number of memory positions of that type between the two addresses.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The result is only guaranteed to be meaningful for two elements of the same array, as discussed in <bpt id="p1">[</bpt>Pointer Arithmetic<ept id="p1">](../c-language/pointer-arithmetic.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When an integer value is subtracted from a pointer value, the subtraction operator converts the integer value (<bpt id="p1">*</bpt>i<ept id="p1">*</ept>) by multiplying it by the size of the value that the pointer addresses.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>After conversion, the integer value represents <bpt id="p1">*</bpt>i<ept id="p1">*</ept> memory positions, where each position has the length specified by the pointer type.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When the converted integer value is subtracted from the pointer value, the result is the memory address <bpt id="p1">*</bpt>i<ept id="p1">*</ept> positions before the original address.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The new pointer points to a value of the type addressed by the original pointer value.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>C Additive Operators</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>