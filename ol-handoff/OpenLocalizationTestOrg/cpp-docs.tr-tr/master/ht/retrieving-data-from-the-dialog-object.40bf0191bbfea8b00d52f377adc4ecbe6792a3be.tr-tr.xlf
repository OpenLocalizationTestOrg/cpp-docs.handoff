<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="tr-tr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8368737d926fcca21339189b13c84476d8309ede</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\retrieving-data-from-the-dialog-object.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3778914f1872e7336a205d43d17d249a27c993c4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">deb70cba5cbc0ba66c781fa04387c55c397fafab</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Retrieving Data from the Dialog Object | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Retrieving Data from the Dialog Object</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The framework provides an easy way to initialize the values of controls in a dialog box and to retrieve values from the controls.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The more laborious manual approach is to call functions such as the <ph id="ph1">`SetDlgItemText`</ph> and <ph id="ph2">`GetDlgItemText`</ph> member functions of class <ph id="ph3">`CWnd`</ph>, which apply to control windows.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>With these functions, you access each control individually to set or get its value, calling functions such as <ph id="ph1">`SetWindowText`</ph> and <ph id="ph2">`GetWindowText`</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The framework's approach automates both initialization and retrieval.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Dialog data exchange (DDX) lets you exchange data between the controls in the dialog box and member variables in the dialog object more easily.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This exchange works both ways.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To initialize the controls in the dialog box, you can set the values of data members in the dialog object, and the framework will transfer the values to the controls before the dialog box is displayed.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Then you can at any time update the dialog data members with data entered by the user.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>At that point, you can use the data by referring to the data member variables.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can also arrange for the values of dialog controls to be validated automatically with dialog data validation (DDV).</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>DDX and DDV are explained in more detail in <bpt id="p1">[</bpt>Dialog Data Exchange and Validation<ept id="p1">](../mfc/dialog-data-exchange-and-validation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For a modal dialog box, you can retrieve any data the user entered when <ph id="ph1">`DoModal`</ph> returns <bpt id="p1">**</bpt>IDOK<ept id="p1">**</ept> but before the dialog object is destroyed.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For a modeless dialog box, you can retrieve data from the dialog object at any time by calling <ph id="ph1">`UpdateData`</ph> with the argument <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> and then accessing dialog class member variables.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This subject is discussed in more detail in <bpt id="p1">[</bpt>Dialog Data Exchange and Validation<ept id="p1">](../mfc/dialog-data-exchange-and-validation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Life Cycle of a Dialog Box</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>