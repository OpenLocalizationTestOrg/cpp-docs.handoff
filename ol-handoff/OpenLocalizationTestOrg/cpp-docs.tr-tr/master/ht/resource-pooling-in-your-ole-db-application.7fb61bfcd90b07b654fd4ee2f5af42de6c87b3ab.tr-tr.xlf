<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="tr-tr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b0c91a63650eb07463bc3523354c2df7f294cc8e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\data\oledb\resource-pooling-in-your-ole-db-application.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b476ead677d2d9867d21dae47559cc0d9efb338d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">75cfffad35eee1721d3bf337358df136f6773c52</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Resource Pooling in Your OLE DB Application | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Resource Pooling in Your OLE DB Application</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To leverage pooling in your application, you must make sure OLE DB services are invoked by obtaining your data source through <bpt id="p1">**</bpt>IDataInitialize<ept id="p1">**</ept> or <bpt id="p2">**</bpt>IDBPromptInitialize<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If you directly use <ph id="ph1">`CoCreateInstance`</ph> to invoke the provider based on the provider's CLSID, no OLE DB services are invoked.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The OLE DB services maintain pools of connected data sources as long as a reference to <bpt id="p1">**</bpt>IDataInitialize<ept id="p1">**</ept> or <bpt id="p2">**</bpt>IDBPromptInitialize<ept id="p2">**</ept> is held or as long as there is a connection in use.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Pools are also maintained automatically within a COM+ 1.0 Services or Internet Information Services (IIS) environment.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If your application takes advantage of pooling outside of a COM+ 1.0 Services or IIS environment, you should keep a reference to <bpt id="p1">**</bpt>IDataInitialize<ept id="p1">**</ept> or <bpt id="p2">**</bpt>IDBPromptInitialize<ept id="p2">**</ept> or hold onto at least one connection.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To make sure that the pool does not get destroyed when the last connection is released by the application, keep the reference or hold on to the connection for the lifetime of your application.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>OLE DB services identify the pool from which the connection is drawn at the time that <ph id="ph1">`Initialize`</ph> is called.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>After the connection is drawn from a pool, it cannot be moved to a different pool.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Therefore, avoid doing things in your application that change initialization information, such as calling <ph id="ph1">`UnInitialize`</ph> or calling <ph id="ph2">`QueryInterface`</ph> for a provider-specific interface before calling <ph id="ph3">`Initialize`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Also, connections established with a prompt value other than <bpt id="p1">**</bpt>DBPROMPT_NOPROMPT<ept id="p1">**</ept> are not pooled.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>However, the initialization string retrieved from a connection established through prompting can be used to establish additional pooled connections to the same data source.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Some providers must make a separate connection for each session.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>These additional connections must be separately enlisted in the distributed transaction, if one exists.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>OLE DB services caches and reuses a single session per data source, but if the application requests more than one session at a time from a single data source, the provider might end up making additional connections and doing additional transaction enlistments that are not pooled.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>It is actually more efficient to create a separate data source for each session in a pooled environment than to create multiple sessions from a single data source.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Finally, because ADO automatically makes use of OLE DB services, you can use ADO to establish connections and the pooling and enlistment happen automatically.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>OLE DB Resource Pooling and Services</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>