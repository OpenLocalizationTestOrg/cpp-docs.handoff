<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="tr-tr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bb62c0c4e5b2965438539b17ec5a2c465e647ed7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard-library\vector-functions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">512ddde6dc06e3d919c86e83a41d10db1b5e8003</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">10a95aad92205963abed33d544674aba001a0c78</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&amp;lt;</ph>vector<ph id="ph2">&amp;gt;</ph> functions | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&amp;lt;</ph>vector<ph id="ph2">&amp;gt;</ph> functions</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="swap"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  swap</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Exchanges the elements of two vectors.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The vector providing the elements to be swapped, or the vector whose elements are to be exchanged with those of the vector <ph id="ph1">` left`</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The vector whose elements are to be exchanged with those of the vector <ph id="ph1">` right`</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The template function is an algorithm specialized on the container class vector to execute the member function <ph id="ph1">` left.`</ph> <bpt id="p1">[</bpt>vector::swap<ept id="p1">](../standard-library/vector-class.md)</ept> <bpt id="p2">*</bpt>( right<ept id="p2">*</ept>).</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>These are instances of the partial ordering of function templates by the compiler.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When template functions are overloaded in such a way that the match of the template with the function call is not unique, then the compiler will select the most specialized version of the template function.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The general version of the template function, <bpt id="p1">**</bpt>template<ept id="p1">**</ept> <ph id="ph1">\&lt;</ph> <bpt id="p2">**</bpt>class T<ept id="p2">**</ept><ph id="ph2">&gt; </ph><bpt id="p3">**</bpt>void swap<ept id="p3">**</ept>( <bpt id="p4">**</bpt>T&amp;<ept id="p4">**</ept>, <bpt id="p5">**</bpt>T&amp;<ept id="p5">**</ept>), in the algorithm class works by assignment and is a slow operation.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The specialized version in each container is much faster as it can work with the internal representation of the container class.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>See the code example for member function <bpt id="p1">[</bpt>vector::swap<ept id="p1">](../standard-library/vector-class.md)</ept> for an example that uses the template version of <ph id="ph1">`swap`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>vector&gt;<ept id="p1">](../standard-library/vector.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>