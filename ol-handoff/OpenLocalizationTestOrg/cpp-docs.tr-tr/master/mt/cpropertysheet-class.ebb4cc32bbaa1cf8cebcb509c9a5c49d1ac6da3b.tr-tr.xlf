<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="tr-tr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">92fb46cd13056b9a02e94e2f15f65666f4ad705e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\cpropertysheet-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1c6670dc74f5f59cdf445847208e72ddf5cb8f03</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3648e4e71c8dcdc62766edc40fab6c200656a961</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CPropertySheet Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CPropertySheet Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Represents property sheets, also known as tab dialog boxes.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPropertySheet::CPropertySheet<ept id="p1">](#cpropertysheet__cpropertysheet)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CPropertySheet`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPropertySheet::AddPage<ept id="p1">](#cpropertysheet__addpage)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Adds a page to the property sheet.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPropertySheet::Construct<ept id="p1">](#cpropertysheet__construct)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CPropertySheet`</ph> object.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPropertySheet::Create<ept id="p1">](#cpropertysheet__create)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Displays a modeless property sheet.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPropertySheet::DoModal<ept id="p1">](#cpropertysheet__domodal)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Displays a modal property sheet.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPropertySheet::EnableStackedTabs<ept id="p1">](#cpropertysheet__enablestackedtabs)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Indicates whether the property sheet uses stacked or scrolling tabs.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPropertySheet::EndDialog<ept id="p1">](#cpropertysheet__enddialog)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Terminates the property sheet.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPropertySheet::GetActiveIndex<ept id="p1">](#cpropertysheet__getactiveindex)</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Retrieves the index of the active page of the property sheet.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPropertySheet::GetActivePage<ept id="p1">](#cpropertysheet__getactivepage)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Returns the active page object.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPropertySheet::GetPage<ept id="p1">](#cpropertysheet__getpage)</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the specified page.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPropertySheet::GetPageCount<ept id="p1">](#cpropertysheet__getpagecount)</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Retrieves the number of pages in the property sheet.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPropertySheet::GetPageIndex<ept id="p1">](#cpropertysheet__getpageindex)</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Retrieves the index of the specified page of the property sheet.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPropertySheet::GetTabControl<ept id="p1">](#cpropertysheet__gettabcontrol)</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to a tab control.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPropertySheet::MapDialogRect<ept id="p1">](#cpropertysheet__mapdialogrect)</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Converts the dialog-box units of a rectangle to screen units.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPropertySheet::OnInitDialog<ept id="p1">](#cpropertysheet__oninitdialog)</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Override to augment property sheet initialization.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPropertySheet::PressButton<ept id="p1">](#cpropertysheet__pressbutton)</ept></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Simulates the choice of the specified button in a property sheet.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPropertySheet::RemovePage<ept id="p1">](#cpropertysheet__removepage)</ept></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Removes a page from the property sheet.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPropertySheet::SetActivePage<ept id="p1">](#cpropertysheet__setactivepage)</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Programmatically sets the active page object.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPropertySheet::SetFinishText<ept id="p1">](#cpropertysheet__setfinishtext)</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Sets the text for the Finish button.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPropertySheet::SetTitle<ept id="p1">](#cpropertysheet__settitle)</ept></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Sets the caption of the property sheet.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPropertySheet::SetWizardButtons<ept id="p1">](#cpropertysheet__setwizardbuttons)</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Enables the wizard buttons.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPropertySheet::SetWizardMode<ept id="p1">](#cpropertysheet__setwizardmode)</ept></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Enables the wizard mode.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Public Data Members</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPropertySheet::m_psh<ept id="p1">](#cpropertysheet__m_psh)</ept></source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The Windows <bpt id="p1">[</bpt>PROPSHEETHEADER<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774546)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Provides access to basic property sheet parameters.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A property sheet consists of a <ph id="ph1">`CPropertySheet`</ph> object and one or more <bpt id="p1">[</bpt>CPropertyPage<ept id="p1">](../../mfc/reference/cpropertypage-class.md)</ept> objects.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The framework displays a property sheet as a window with a set of tab indices and an area that contains the currently selected page.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The user navigates to a specific page by using the appropriate tab.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CPropertySheet`</ph> provides support for the expanded <bpt id="p1">[</bpt>PROPSHEETHEADER<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774546)</ept> structure introduced in <ph id="ph2">[!INCLUDE[Win98](../../mfc/reference/includes/win98_md.md)]</ph> and Windows NT 2000.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The structure contains additional flags and members that support using a "watermark" background bitmap.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To display these new images automatically in your property sheet object, pass valid values for the bitmap and palette images in the call to <bpt id="p1">[</bpt>CPropertySheet::Construct<ept id="p1">](#cpropertysheet__construct)</ept> or <bpt id="p2">[</bpt>CPropertySheet::CPropertySheet<ept id="p2">](#cpropertysheet__cpropertysheet)</ept>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Even though <ph id="ph1">`CPropertySheet`</ph> is not derived from <bpt id="p1">[</bpt>CDialog<ept id="p1">](../../mfc/reference/cdialog-class.md)</ept>, managing a <ph id="ph2">`CPropertySheet`</ph> object is like managing a <ph id="ph3">`CDialog`</ph> object.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For example, creation of a property sheet requires two-part construction: call the constructor, and then call <bpt id="p1">[</bpt>DoModal<ept id="p1">](#cpropertysheet__domodal)</ept> for a modal property sheet or <bpt id="p2">[</bpt>Create<ept id="p2">](#cpropertysheet__create)</ept> for a modeless property sheet.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CPropertySheet`</ph> has two types of constructors: <bpt id="p1">[</bpt>CPropertySheet::Construct<ept id="p1">](#cpropertysheet__construct)</ept> and <bpt id="p2">[</bpt>CPropertySheet::CPropertySheet<ept id="p2">](#cpropertysheet__cpropertysheet)</ept>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>When you construct a <ph id="ph1">`CPropertySheet`</ph> object, some <bpt id="p1">[</bpt>Window Styles<ept id="p1">](../../mfc/reference/window-styles.md)</ept> can cause a first-chance exception to occur.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This results from the system trying to change the style of the property sheet before the sheet is created.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>To avoid this exception, make sure that you set the following styles when you create your <ph id="ph1">`CPropertySheet`</ph>:</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>DS_3DLOOK</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>DS_CONTROL</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>WS_CHILD</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>WS_TABSTOP</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The following styles are optional, and will not cause the first-chance exception:</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>DS_SHELLFONT</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>DS_LOCALEDIT</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>WS_CLIPCHILDREN</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Any other <ph id="ph1">`Window Styles`</ph> are forbidden and you should not enable them.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Exchanging data between a <ph id="ph1">`CPropertySheet`</ph> object and an external object is similar to exchanging data with a <ph id="ph2">`CDialog`</ph> object.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The important difference is that the settings of a property sheet are typically member variables of the <ph id="ph1">`CPropertyPage`</ph> objects rather than of the <ph id="ph2">`CPropertySheet`</ph> object itself.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>You can create a type of tab dialog box called a wizard, which consists of a property sheet with a sequence of property pages that guide the user through the steps of an operation, such as setting up a device or creating a newsletter.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>In a wizard-type tab dialog box, the property pages do not have tabs, and only one property page is visible at a time.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Also, instead of having <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Apply Now<ept id="p2">**</ept> buttons, a wizard-type tab dialog box has a <bpt id="p3">**</bpt>Back<ept id="p3">**</ept> button, a <bpt id="p4">**</bpt>Next<ept id="p4">**</ept> or <bpt id="p5">**</bpt>Finish<ept id="p5">**</ept> button, a <bpt id="p6">**</bpt>Cancel<ept id="p6">**</ept> button, and a <bpt id="p7">**</bpt>Help<ept id="p7">**</ept> button.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>To create a wizard-type dialog box, follow the same steps that you would follow to create a standard property sheet, but call <bpt id="p1">[</bpt>SetWizardMode<ept id="p1">](#cpropertysheet__setwizardmode)</ept> before you call <bpt id="p2">[</bpt>DoModal<ept id="p2">](#cpropertysheet__domodal)</ept>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>To enable the wizard buttons, call <bpt id="p1">[</bpt>SetWizardButtons<ept id="p1">](#cpropertysheet__setwizardbuttons)</ept>, using flags to customize their function and appearance.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>To enable the <bpt id="p1">**</bpt>Finish<ept id="p1">**</ept> button, call <bpt id="p2">[</bpt>SetFinishText<ept id="p2">](#cpropertysheet__setfinishtext)</ept> after the user has taken action on the last page of the wizard.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For more information about how to use <ph id="ph1">`CPropertySheet`</ph> objects, see the article <bpt id="p1">[</bpt>Property Sheets and Property Pages<ept id="p1">](../../mfc/property-sheets-and-property-pages-in-mfc.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Also, see Knowledge Base article Q146916 : HOWTO: Create a Modeless CPropertySheet with Standard Buttons and article Q300606 : HOWTO: Design a Resizable MFC Property Sheet.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CObject<ept id="p1">](../../mfc/reference/cobject-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CCmdTarget<ept id="p1">](../../mfc/reference/ccmdtarget-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CWnd<ept id="p1">](../../mfc/reference/cwnd-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxdlgs.h</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpropertysheet__addpage"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPropertySheet::AddPage</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Adds the supplied page with the rightmost tab in the property sheet.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Points to the page to be added to the property sheet.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Cannot be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Add pages to the property sheet in the left-to-right order you want them to appear.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`AddPage`</ph> adds the <bpt id="p1">[</bpt>CPropertyPage<ept id="p1">](../../mfc/reference/cpropertypage-class.md#cpropertypage__cpropertypage)</ept> object to the <ph id="ph2">`CPropertySheet`</ph> object's list of pages but does not actually create the window for the page.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The framework postpones creation of the window for the page until the user selects that page.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>When you add a property page using <ph id="ph1">`AddPage`</ph>, the <ph id="ph2">`CPropertySheet`</ph> is the parent of the <ph id="ph3">`CPropertyPage`</ph>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>To gain access to the property sheet from the property page, call <bpt id="p1">[</bpt>CWnd::GetParent<ept id="p1">](../../mfc/reference/cwnd-class.md#cwnd__getparent)</ept>.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>It is not necessary to wait until creation of the property sheet window to call <ph id="ph1">`AddPage`</ph>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Typically, you will call <ph id="ph1">`AddPage`</ph> before calling <bpt id="p1">[</bpt>DoModal<ept id="p1">](#cpropertysheet__domodal)</ept> or <bpt id="p2">[</bpt>Create<ept id="p2">](#cpropertysheet__create)</ept>.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If you call <ph id="ph1">`AddPage`</ph> after displaying the property page, the tab row will reflect the newly added page.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFCDocView#129<ept id="p2">](../../mfc/codesnippet/cpp/cpropertysheet-class_1.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpropertysheet__construct"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPropertySheet::Construct</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CPropertySheet`</ph> object.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>ID of the caption to be used for the property sheet.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Pointer to the parent window of the property sheet.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, the parent window will be the main window of the application.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The index of the page that will initially be on top.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Default is the first page added to the sheet.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Pointer to a string containing the caption to be used for the property sheet.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Cannot be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Handle to the watermark bitmap of the property page.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Handle to the palette of the watermark bitmap and/or header bitmap.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Handle to the header bitmap of the property page.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Call this member function if one of the class constructors has not already been called.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>For example, call <ph id="ph1">`Construct`</ph> when you declare or allocate arrays of <ph id="ph2">`CPropertySheet`</ph> objects.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>In the case of arrays, you must call <ph id="ph1">`Construct`</ph> for each member in the array.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>To display the property sheet, call <bpt id="p1">[</bpt>DoModal<ept id="p1">](#cpropertysheet__domodal)</ept> or <bpt id="p2">[</bpt>Create<ept id="p2">](#cpropertysheet__create)</ept>.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The string contained in the first parameter will be placed in the caption bar for the property sheet.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>You can display watermark and/or header images automatically if you use the third or fourth prototypes of <ph id="ph1">`Construct`</ph>, listed above, and you pass valid values for the <ph id="ph2">`hbmWatermark`</ph>, <ph id="ph3">`hpalWatermark`</ph>, and/or <ph id="ph4">`hbmHeader`</ph> parameters.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The following example demonstrates under what circumstances you would call <ph id="ph1">`Construct`</ph>.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFCDocView#130<ept id="p2">](../../mfc/codesnippet/cpp/cpropertysheet-class_2.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpropertysheet__cpropertysheet"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPropertySheet::CPropertySheet</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CPropertySheet`</ph> object.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>ID of the caption to be used for the property sheet.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Points to the parent window of the property sheet.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, the parent window will be the main window of the application.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The index of the page that will initially be on top.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Default is the first page added to the sheet.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Points to a string containing the caption to be used for the property sheet.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Cannot be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>A handle to the background bitmap of the property sheet.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>A handle to the palette of the watermark bitmap and/or header bitmap.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>A handle to the header bitmap of the property page.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>To display the property sheet, call <bpt id="p1">[</bpt>DoModal<ept id="p1">](#cpropertysheet__domodal)</ept> or <bpt id="p2">[</bpt>Create<ept id="p2">](#cpropertysheet__create)</ept>.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The string contained in the first parameter will be placed in the caption bar for the property sheet.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>If you have multiple parameters (for example, if you are using an array), use <bpt id="p1">[</bpt>Construct<ept id="p1">](#cpropertysheet__construct)</ept> instead of <ph id="ph1">`CPropertySheet`</ph>.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>You can display watermark and/or header images automatically if you use the third or fourth prototypes of <ph id="ph1">`CPropertySheet`</ph>, above, and you pass valid values for the <ph id="ph2">`hbmWatermark`</ph>, <ph id="ph3">`hpalWatermark`</ph>, and/or <ph id="ph4">`hbmHeader`</ph> parameters.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFCDocView#131<ept id="p2">](../../mfc/codesnippet/cpp/cpropertysheet-class_3.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpropertysheet__create"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPropertySheet::Create</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Displays a modeless property sheet.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Points to parent window.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, parent is the desktop.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Window styles for property sheet.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>For a complete list of available styles, see <bpt id="p1">[</bpt>Window Styles<ept id="p1">](../../mfc/reference/window-styles.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Extended window styles for property sheet.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>For a complete list of available styles, see <bpt id="p1">[</bpt>Extended Window Styles<ept id="p1">](../../mfc/reference/extended-window-styles.md)</ept></source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Nonzero if the property sheet is created successfully; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The call to <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> can be inside the constructor, or you can call it after the constructor is invoked.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The default style, expressed by passing –1 as <ph id="ph1">`dwStyle`</ph>, is actually <bpt id="p1">**</bpt>WS_SYSMENU&amp;#124;<ept id="p1">**</ept><ph id="ph2">`WS_POPUP`</ph><bpt id="p2">**</bpt>&amp;#124;WS_CAPTION&amp;#124;DS_MODALFRAME&amp;#124;DS_CONTEXTHELP&amp;#124;WS_VISIBLE<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The default extended window style, expressed by passing 0 as <ph id="ph1">`dwExStyle`</ph>, is actually <bpt id="p1">**</bpt>WS_EX_DLGMODALFRAME<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> member function returns immediately after creating the property sheet.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>To destroy the property sheet, call <bpt id="p1">[</bpt>CWnd::DestroyWindow<ept id="p1">](../../mfc/reference/cwnd-class.md#cwnd__destroywindow)</ept>.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Modeless property sheets displayed with a call to <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> do not have OK, Cancel, Apply Now, and Help buttons as modal property sheets do.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Desired buttons must be created by the user.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>To display a modal property sheet, call <bpt id="p1">[</bpt>DoModal<ept id="p1">](#cpropertysheet__domodal)</ept> instead.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFCDocView#132<ept id="p2">](../../mfc/codesnippet/cpp/cpropertysheet-class_4.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFCDocView#133<ept id="p2">](../../mfc/codesnippet/cpp/cpropertysheet-class_5.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpropertysheet__domodal"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPropertySheet::DoModal</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Displays a modal property sheet.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`IDOK`</ph> or <ph id="ph2">`IDCANCEL`</ph> if the function was successful; otherwise 0 or -1.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>If the property sheet has been established as a wizard (see <bpt id="p1">[</bpt>SetWizardMode<ept id="p1">](#cpropertysheet__setwizardmode)</ept>), <ph id="ph1">`DoModal`</ph> returns either <ph id="ph2">`ID_WIZFINISH`</ph> or <ph id="ph3">`IDCANCEL`</ph>.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The return value corresponds to the ID of the control that closed the property sheet.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>After this function returns, the windows corresponding to the property sheet and all the pages will have been destroyed.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The objects themselves will still exist.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Typically, you will retrieve data from the <bpt id="p1">[</bpt>CPropertyPage<ept id="p1">](../../mfc/reference/cpropertypage-class.md)</ept> objects after <ph id="ph1">`DoModal`</ph> returns <ph id="ph2">`IDOK`</ph>.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>To display a modeless property sheet, call <bpt id="p1">[</bpt>Create<ept id="p1">](#cpropertysheet__create)</ept> instead.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>When a property page is created from its corresponding dialog resource, it can cause a first-chance exception.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>This results from the property page changing the style of the dialog resource to the required style before the page is created.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Because resources are generally read-only, this causes an exception.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The system handles the exception, and makes a copy of the modified resource.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The first-chance exception can therefore be ignored.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>This exception must be handled by the operating system if you are compiling with the asynchronous exception handling model.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>For more information about exception handling models, see <bpt id="p1">[</bpt>/EH (Exception Handling Model)<ept id="p1">](../../build/reference/eh-exception-handling-model.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>In this case, do not wrap calls to <ph id="ph1">`CPropertySheet::DoModal`</ph> with a C++ try-catch block in which the catch handles all exceptions, for example, <ph id="ph2">`catch (...)`</ph>.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>This block would handle the exception intended for the operating system, and cause unpredictable behavior.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>However, you can safely use C++ exception handling with specific exception types or structured exception handling where the Access Violation exception is passed through to the operating system.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>To avoid generating this first-chance exception, you can manually guarantee that the property sheet has the correct <bpt id="p1">[</bpt>Window Styles<ept id="p1">](../../mfc/reference/window-styles.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>You need to set the following styles for a property sheet:</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>DS_3DLOOK</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>DS_CONTROL</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>WS_CHILD</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>WS_TABSTOP</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>You can use the following optional styles without causing a first-chance exception:</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>DS_SHELLFONT</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>DS_LOCALEDIT</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>WS_CLIPCHILDREN</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Disable all other Windows styles because they are not compatible with property sheets.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>This advice does not apply to extended styles.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Setting these standard styles appropriately will guarantee that the property sheet does not have to be modified and will avoid generating the first-chance exception.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CPropertySheet::AddPage<ept id="p1">](#cpropertysheet__addpage)</ept>.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpropertysheet__enablestackedtabs"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPropertySheet::EnableStackedTabs</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Indicates whether to stack rows of tabs in a property sheet.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Indicates whether stacked tabs are enabled in the property sheet.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Disable stacked rows of tags by setting <ph id="ph1">`bStacked`</ph> to <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>By default, if a property sheet has more tabs than will fit in a single row in the width of the property sheet, the tabs will stack in multiple rows.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>To use scrolling tabs instead of stacking tabs, call <ph id="ph1">`EnableStackedTabs`</ph> with <ph id="ph2">`bStacked`</ph> set to <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept> before calling <bpt id="p2">[</bpt>DoModal<ept id="p2">](#cpropertysheet__domodal)</ept> or <bpt id="p3">[</bpt>Create<ept id="p3">](#cpropertysheet__create)</ept>.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>You must call <ph id="ph1">`EnableStackedTabs`</ph> when you create a modal or a modeless property sheet.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>To incorporate this style in a <ph id="ph1">`CPropertySheet`</ph>-derived class, write a message handler for <ph id="ph2">`WM_CREATE`</ph>.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>In the overridden version of <bpt id="p1">[</bpt>CWnd::OnCreate<ept id="p1">](../../mfc/reference/cwnd-class.md#cwnd__oncreate)</ept>, call <bpt id="p2">**</bpt>EnableStackedTabs( FALSE )<ept id="p2">**</ept> before calling the base class implementation.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFCDocView#134<ept id="p2">](../../mfc/codesnippet/cpp/cpropertysheet-class_6.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpropertysheet__enddialog"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPropertySheet::EndDialog</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Terminates the property sheet.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>nEndID<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Identifier to be used as return value of the property sheet.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>This member function is called by the framework when the OK, Cancel, or Close button is pressed.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Call this member function if an event occurs that should close the property sheet.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>This member function is only used with a modal dialog box.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CPropertySheet::PressButton<ept id="p1">](#cpropertysheet__pressbutton)</ept>.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpropertysheet__getactiveindex"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPropertySheet::GetActiveIndex</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Gets the index number of the property sheet window's active page and then uses the returned index number as the parameter for <ph id="ph1">`GetPage`</ph>.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The index number of the active page.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CPropertySheet::GetActivePage<ept id="p1">](#cpropertysheet__getactivepage)</ept>.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpropertysheet__getactivepage"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPropertySheet::GetActivePage</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Retrieves the property sheet window's active page.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The pointer to the active page.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Use this member function to perform some action on the active page.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFCDocView#135<ept id="p2">](../../mfc/codesnippet/cpp/cpropertysheet-class_7.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpropertysheet__getpage"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPropertySheet::GetPage</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the specified page in this property sheet.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Index of the desired page, starting at 0.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Must be between 0 and one less than the number of pages in the property sheet, inclusive.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The pointer to the page corresponding to the <ph id="ph1">`nPage`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CPropertyPage::OnWizardFinish<ept id="p1">](../../mfc/reference/cpropertypage-class.md#cpropertypage__onwizardfinish)</ept>.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpropertysheet__getpagecount"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPropertySheet::GetPageCount</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Determines the number of pages currently in the property sheet.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The number of pages in the property sheet.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CPropertyPage::OnWizardFinish<ept id="p1">](../../mfc/reference/cpropertypage-class.md#cpropertypage__onwizardfinish)</ept>.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpropertysheet__getpageindex"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPropertySheet::GetPageIndex</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Retrieves the index number of the specified page in the property sheet.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Points to the page with the index to be found.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Cannot be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The index number of a page.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>For example, you would use <ph id="ph1">`GetPageIndex`</ph> to get the page index in order to use <bpt id="p1">[</bpt>SetActivePage<ept id="p1">](#cpropertysheet__setactivepage)</ept> or <bpt id="p2">[</bpt>GetPage<ept id="p2">](#cpropertysheet__getpage)</ept>.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CPropertySheet::GetActivePage<ept id="p1">](#cpropertysheet__getactivepage)</ept>.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpropertysheet__gettabcontrol"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPropertySheet::GetTabControl</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to a tab control to do something specific to the tab control (that is, to use any of the APIs in <bpt id="p1">[</bpt>CTabCtrl<ept id="p1">](../../mfc/reference/ctabctrl-class.md)</ept>).</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>A pointer to a tab control.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>For example, call this member function if you want to add bitmaps to each of the tabs during initialization.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFCDocView#136<ept id="p2">](../../mfc/codesnippet/cpp/cpropertysheet-class_8.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpropertysheet__m_psh"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPropertySheet::m_psh</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>A structure whose members store the characteristics of <bpt id="p1">[</bpt>PROPSHEETHEADER<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774546)</ept>.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Use this structure to initialize the appearance of the property sheet after it is constructed but before it is displayed with the <bpt id="p1">[</bpt>DoModal<ept id="p1">](#cpropertysheet__domodal)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>For example, set the <ph id="ph1">`dwSize`</ph> member of <ph id="ph2">`m_psh`</ph> to the size you want the property sheet to have.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>For more information on this structure, including a listing of its members, see <bpt id="p1">**</bpt>PROPSHEETHEADER<ept id="p1">**</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFCDocView#143<ept id="p2">](../../mfc/codesnippet/cpp/cpropertysheet-class_9.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpropertysheet__mapdialogrect"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPropertySheet::MapDialogRect</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Converts the dialog-box units of a rectangle to screen units.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Points to a <bpt id="p1">[</bpt>RECT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure or <bpt id="p2">[</bpt>CRect<ept id="p2">](../../atl-mfc-shared/reference/crect-class.md)</ept> object that contains the dialog-box coordinates to be converted.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Dialog-box units are stated in terms of the current dialog-box base unit derived from the average width and height of characters in the font used for dialog-box text.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>One horizontal unit is one-fourth of the dialog-box base-width unit, and one vertical unit is one-eighth of the dialog-box base height unit.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>GetDialogBaseUnits<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms645475)</ept> Windows function returns size information for the system font, but you can specify a different font for each property sheet if you use the <bpt id="p2">**</bpt>DS_SETFONT<ept id="p2">**</ept> style in the resource-definition file.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>MapDialogRect<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms645502)</ept> Windows function, described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>, uses the appropriate font for this dialog box.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`MapDialogRect`</ph> member function replaces the dialog-box units in <ph id="ph2">`lpRect`</ph> with screen units (pixels) so that the rectangle can be used to create a dialog box or position a control within a box.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpropertysheet__oninitdialog"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPropertySheet::OnInitDialog</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Overrides to augment property sheet initialization.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Specifies whether the application has set the input focus to one of the controls in the property sheet.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>OnInitDialog<ept id="p1">**</ept> returns nonzero, Windows sets the input focus to the first control in the property sheet.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>The application can return 0 only if it has explicitly set the input focus to one of the controls in the property sheet.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>This member function is called in response to the <bpt id="p1">**</bpt>WM_INITDIALOG<ept id="p1">**</ept> message.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>This message is sent to the property sheet during the <bpt id="p1">[</bpt>Create<ept id="p1">](#cpropertysheet__create)</ept> or <bpt id="p2">[</bpt>DoModal<ept id="p2">](#cpropertysheet__domodal)</ept> calls, which occur immediately before the property sheet is displayed.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Override this member function if you need to perform special processing when the property sheet is initialized.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>In the overridden version, first call the base class <ph id="ph1">`OnInitDialog`</ph> but disregard its return value.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>You will normally return <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> from your overridden member function.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>You do not need a message-map entry for this member function.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpropertysheet__pressbutton"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPropertySheet::PressButton</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Simulates the choice of the specified button in a property sheet.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>nButton : Identifies the button to be pressed.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>This parameter can be one of the following values:</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>PSBTN_BACK<ept id="p1">**</ept> Chooses the Back button.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>PSBTN_NEXT<ept id="p1">**</ept> Chooses the Next button.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>PSBTN_FINISH<ept id="p1">**</ept> Chooses the Finish button.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>PSBTN_OK<ept id="p1">**</ept> Chooses the OK button.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>PSBTN_APPLYNOW<ept id="p1">**</ept> Chooses the Apply Now button.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>PSBTN_CANCEL<ept id="p1">**</ept> Chooses the Cancel button.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>PSBTN_HELP<ept id="p1">**</ept> Chooses the Help button.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>PSM_PRESSBUTTON<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774597)</ept> for more information about the Windows SDK Pressbutton message.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>A call to <ph id="ph1">`PressButton`</ph> will not send the <bpt id="p1">[</bpt>PSN_APPLY<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb774552)</ept> notification from a property page to the framework.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>To send this notification, call <bpt id="p1">[</bpt>CPropertyPage::OnOK<ept id="p1">](../../mfc/reference/cpropertypage-class.md#cpropertypage__onok)</ept>.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFCDocView#137<ept id="p2">](../../mfc/codesnippet/cpp/cpropertysheet-class_10.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpropertysheet__removepage"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPropertySheet::RemovePage</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>Removes a page from the property sheet and destroys the associated window.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Points to the page to be removed from the property sheet.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>Cannot be <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>Index of the page to be removed.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Must be between 0 and one less than the number of pages in the property sheet, inclusive.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>CPropertyPage<ept id="p1">](../../mfc/reference/cpropertypage-class.md)</ept> object itself is not destroyed until the owner of the <ph id="ph1">`CPropertySheet`</ph> window is closed.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpropertysheet__setactivepage"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPropertySheet::SetActivePage</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Changes the active page.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Index of the page to set.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>It must be between 0 and one less than the number of pages in the property sheet, inclusive.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Points to the page to set in the property sheet.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>It cannot be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>Nonzero if the property sheet is activated successfully; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>For example, use <ph id="ph1">`SetActivePage`</ph> if a user's action on one page should cause another page to become the active page.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CPropertySheet::GetActivePage<ept id="p1">](#cpropertysheet__getactivepage)</ept>.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpropertysheet__setfinishtext"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPropertySheet::SetFinishText</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>Sets the text in the Finish command button.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>Points to the text to be displayed on the Finish command button.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`SetFinishText`</ph> to display the text on the Finish command button and hide the Next and Back buttons after the user completes action on the last page of the wizard.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFCDocView#138<ept id="p2">](../../mfc/codesnippet/cpp/cpropertysheet-class_11.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpropertysheet__settitle"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPropertySheet::SetTitle</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Specifies the property sheet's caption (the text displayed in the title bar of a frame window).</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>Specifies the style of the property sheet title.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>The style must be specified at 0 or as <bpt id="p1">**</bpt>PSH_PROPTITLE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>If the style is set as <bpt id="p1">**</bpt>PSH_PROPTITLE<ept id="p1">**</ept>, the word "Properties" appears after the text specified as the caption.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>For example, calling <ph id="ph1">`SetTitle`</ph>("Simple", <bpt id="p1">**</bpt>PSH_PROPTITLE<ept id="p1">**</ept>) will result in a property sheet caption of "Simple Properties."</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>Points to the text to be used as the caption in the title bar of the property sheet.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>By default, a property sheet uses the caption parameter in the property sheet constructor.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFCDocView#139<ept id="p2">](../../mfc/codesnippet/cpp/cpropertysheet-class_12.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpropertysheet__setwizardbuttons"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPropertySheet::SetWizardButtons</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>Enables or disables the Back, Next, or Finish button in a wizard property sheet.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>A set of flags that customize the function and appearance of the wizard buttons.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>This parameter can be a combination of the following values:</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>PSWIZB_BACK<ept id="p1">**</ept> Back button</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>PSWIZB_NEXT<ept id="p1">**</ept> Next button</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>PSWIZB_FINISH<ept id="p1">**</ept> Finish button</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>PSWIZB_DISABLEDFINISH<ept id="p1">**</ept> Disabled Finish button</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`SetWizardButtons`</ph> only after the dialog is open; you can't call <ph id="ph2">`SetWizardButtons`</ph> before you call <bpt id="p1">[</bpt>DoModal<ept id="p1">](#cpropertysheet__domodal)</ept>.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>Typically, you should call <ph id="ph1">`SetWizardButtons`</ph> from <bpt id="p1">[</bpt>CPropertyPage::OnSetActive<ept id="p1">](../../mfc/reference/cpropertypage-class.md#cpropertypage__onsetactive)</ept>.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>If you want to change the text on the Finish button or hide the Next and Back buttons once the user has completed the wizard, call <bpt id="p1">[</bpt>SetFinishText<ept id="p1">](#cpropertysheet__setfinishtext)</ept>.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>Note that the same button is shared for Finish and Next.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>You can display a Finish or a Next button at one time, but not both.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CPropertySheet`</ph> has three wizard property pages: <ph id="ph2">`CStylePage`</ph>, <ph id="ph3">`CColorPage`</ph>, and <ph id="ph4">`CShapePage`</ph>.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>The code fragment below shows how to enable and disable the <bpt id="p1">**</bpt>Back<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Next<ept id="p2">**</ept> buttons on the wizard property page.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFCDocView#140<ept id="p2">](../../mfc/codesnippet/cpp/cpropertysheet-class_13.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFCDocView#141<ept id="p2">](../../mfc/codesnippet/cpp/cpropertysheet-class_14.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFCDocView#138<ept id="p2">](../../mfc/codesnippet/cpp/cpropertysheet-class_11.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cpropertysheet__setwizardmode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPropertySheet::SetWizardMode</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>Establishes a property page as a wizard.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>A key characteristic of a wizard property page is that the user navigates using Next or Finish, Back, and Cancel buttons instead of tabs.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`SetWizardMode`</ph> before calling <bpt id="p1">[</bpt>DoModal<ept id="p1">](#cpropertysheet__domodal)</ept>.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>After you call <ph id="ph1">`SetWizardMode`</ph>, <ph id="ph2">`DoModal`</ph> will return either <bpt id="p1">**</bpt>ID_WIZFINISH<ept id="p1">**</ept> (if the user closes with the Finish button) or <bpt id="p2">**</bpt>IDCANCEL<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`SetWizardMode`</ph> sets the PSH_WIZARD flag.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFCDocView#142<ept id="p2">](../../mfc/codesnippet/cpp/cpropertysheet-class_15.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>MFC Sample CMNCTRL1<ept id="p1">](../../visual-cpp-samples.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>MFC Sample CMNCTRL2<ept id="p1">](../../visual-cpp-samples.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>MFC Sample PROPDLG<ept id="p1">](../../visual-cpp-samples.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>MFC Sample SNAPVW<ept id="p1">](../../visual-cpp-samples.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CWnd Class<ept id="p1">](../../mfc/reference/cwnd-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Hierarchy Chart<ept id="p1">](../../mfc/hierarchy-chart.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>