<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="tr-tr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fb523127f60c4e8cd45b2525749b536ad55849b0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\parallel\concrt\reference\iresourcemanager-structure.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">75607f76ec4d9ab8ad6c96a182d9013577c4b709</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eda136c2ea947770ff076537df8a93be61f083a3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>IResourceManager Structure | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>IResourceManager Structure</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>An interface to the Concurrency Runtime's Resource Manager.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This is the interface by which schedulers communicate with the Resource Manager.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Public Enumerations</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IResourceManager::OSVersion Enumeration<ept id="p1">](#osversion)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>An enumerated type that represents the operating system version.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IResourceManager::CreateNodeTopology Method<ept id="p1">](#createnodetopology)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Present only in debug builds of the runtime, this method is a test hook designed to facilitate testing of the Resource Manager on varying hardware topologies, without requiring actual hardware matching the configuration.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>With retail builds of the runtime, this method will return without performing any action.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IResourceManager::GetAvailableNodeCount Method<ept id="p1">](#getavailablenodecount)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Returns the number of nodes available to the Resource Manager.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IResourceManager::GetFirstNode Method<ept id="p1">](#getfirstnode)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Returns the first node in enumeration order as defined by the Resource Manager.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IResourceManager::Reference Method<ept id="p1">](#reference)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Increments the reference count on the Resource Manager instance.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IResourceManager::RegisterScheduler Method<ept id="p1">](#registerscheduler)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Registers a scheduler with the Resource Manager.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Once the scheduler is registered, it should communicate with the Resource Manager using the <ph id="ph1">`ISchedulerProxy`</ph> interface that is returned.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IResourceManager::Release Method<ept id="p1">](#release)</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Decrements the reference count on the Resource Manager instance.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The Resource Manager is destroyed when its reference count goes to <ph id="ph1">`0`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>CreateResourceManager<ept id="p1">](concurrency-namespace-functions.md)</ept> function to obtain an interface to the singleton Resource Manager instance.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The method increments a reference count on the Resource Manager, and you should invoke the <bpt id="p1">[</bpt>IResourceManager::Release<ept id="p1">](#release)</ept> method to release the reference when you are done with Resource Manager.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Typically, each scheduler you create will invoke this method during creation, and release the reference to the Resource Manager after it shuts down.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> concrtrm.h</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Namespace:<ept id="p1">**</ept> concurrency</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="createnodetopology"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IResourceManager::CreateNodeTopology Method</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Present only in debug builds of the runtime, this method is a test hook designed to facilitate testing of the Resource Manager on varying hardware topologies, without requiring actual hardware matching the configuration.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>With retail builds of the runtime, this method will return without performing any action.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The number of processor nodes being simulated.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An array that specifies the number of cores on each node.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A matrix specifying the node distance between any two nodes.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This parameter can have the value <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>An array that specifies the processor group each node belongs to.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>invalid_argument<ept id="p1">](../../../standard-library/invalid-argument-class.md)</ept> is thrown if the parameter <ph id="ph1">`nodeCount`</ph> has the value <ph id="ph2">`0`</ph> was passed in, or if the parameter <ph id="ph3">`pCoreCount`</ph> has the value <ph id="ph4">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>invalid_operation<ept id="p1">](invalid-operation-class.md)</ept> is thrown if this method is called while other schedulers exist in the process.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="getavailablenodecount"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IResourceManager::GetAvailableNodeCount Method</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Returns the number of nodes available to the Resource Manager.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The number of nodes available to the Resource Manager.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="getfirstnode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IResourceManager::GetFirstNode Method</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Returns the first node in enumeration order as defined by the Resource Manager.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The first node in enumeration order as defined by the Resource Manager.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iresourcemanager__osversion"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IResourceManager::OSVersion Enumeration</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>An enumerated type that represents the operating system version.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="reference"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IResourceManager::Reference Method</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Increments the reference count on the Resource Manager instance.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The resulting reference count.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="registerscheduler"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IResourceManager::RegisterScheduler Method</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Registers a scheduler with the Resource Manager.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Once the scheduler is registered, it should communicate with the Resource Manager using the <ph id="ph1">`ISchedulerProxy`</ph> interface that is returned.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`IScheduler`</ph> interface to the scheduler to be registered.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The version of communication interface the scheduler is using to communicate with the Resource Manager.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Using a version allows the Resource Manager to evolve the communication interface while allowing schedulers to obtain access to older features.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Schedulers that wish to use Resource Manager features present in Visual Studio 2010 should use the version <ph id="ph1">`CONCRT_RM_VERSION_1`</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ISchedulerProxy`</ph> interface the Resource Manager has associated with your scheduler.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Your scheduler should use this interface to communicate with Resource Manager from this point on.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Use this method to initiate communication with the Resource Manager.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The method associates the <ph id="ph1">`IScheduler`</ph> interface for your scheduler with an <ph id="ph2">`ISchedulerProxy`</ph> interface and hands it back to you.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>You can use the returned interface to request execution resources for use by your scheduler, or to subscribe threads with the Resource Manager.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The Resource Manager will use policy elements from the scheduler policy returned by the <bpt id="p1">[</bpt>IScheduler::GetPolicy<ept id="p1">](ischeduler-structure.md#getpolicy)</ept> method to determine what type of threads the scheduler will need to execute work.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If your <ph id="ph1">`SchedulerKind`</ph> policy key has the value <ph id="ph2">`UmsThreadDefault`</ph> and the value is read back out of the policy as the value <ph id="ph3">`UmsThreadDefault`</ph>, the <ph id="ph4">`IScheduler`</ph> interface passed to the method must be an <ph id="ph5">`IUMSScheduler`</ph> interface.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The method throws an <ph id="ph1">`invalid_argument`</ph> exception if the parameter <ph id="ph2">`pScheduler`</ph> has the value <ph id="ph3">`NULL`</ph> or if the parameter <ph id="ph4">`version`</ph> is not a valid version for the communication interface.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="release"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IResourceManager::Release Method</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Decrements the reference count on the Resource Manager instance.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The Resource Manager is destroyed when its reference count goes to <ph id="ph1">`0`</ph>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The resulting reference count.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>concurrency Namespace<ept id="p1">](concurrency-namespace.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>ISchedulerProxy Structure<ept id="p1">](ischedulerproxy-structure.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>IScheduler Structure<ept id="p1">](ischeduler-structure.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>