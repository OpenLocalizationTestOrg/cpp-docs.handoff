<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6a345e7400b8ab2d95675c3fdd4305a08bbee985</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\cmfcoutlookbar-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7a4ad7d2de0ae0a63a970186936291adf60067bf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">551d0249624e4eea463e52a2adb9a19abfabdaa5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A tabbed pane with the visual appearance of the <bpt id="p1">**</bpt>Navigation Pane<ept id="p1">**</ept> in Microsoft Outlook 2000 or Outlook 2003.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CMFCOutlookBar`</ph> object contains a <bpt id="p1">[</bpt>CMFCOutlookBarTabCtrl Class<ept id="p1">](../../mfc/reference/cmfcoutlookbartabctrl-class.md)</ept> object and a series of tabs.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The tabs can be either <bpt id="p1">[</bpt>CMFCOutlookBarPane Class<ept id="p1">](../../mfc/reference/cmfcoutlookbarpane-class.md)</ept> objects or <ph id="ph1">`CWnd`</ph>-derived objects.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To the user, the Outlook bar appears as a series of buttons and a display area.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When the user clicks a button, the corresponding control or button pane is displayed.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Default constructor.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Destructor.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::AllowDestroyEmptyTabbedPane</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Specifies whether an empty tabbed pane can be destroyed.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CBaseTabbedPane::AllowDestroyEmptyTabbedPane<ept id="p1">](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__allowdestroyemptytabbedpane)</ept>.)</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::CanAcceptPane</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Determines whether another pane can be docked to the Outlook bar pane.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>(Overrides CDockablePane::CanAcceptPane.)</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::CanSetCaptionTextToTabName</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Determines whether the caption for the tabbed pane displays the same text as the active tab.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CBaseTabbedPane::CanSetCaptionTextToTabName<ept id="p1">](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__cansetcaptiontexttotabname)</ept>.)</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::Create</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Creates the Outlook bar control.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::CreateCustomPage</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Creates a custom Outlook bar tab.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Used by the framework to create a dynamic instance of this class type.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::DoesAllowDynInsertBefore</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Determines whether a user can dock a control bar at the outer edge of the Outlook bar.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::FloatTab</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Floats a pane, but only if the pane currently resides in a detachable tab.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CBaseTabbedPane::FloatTab<ept id="p1">](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__floattab)</ept>.)</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::GetButtonsFont</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Returns the font of the text on the buttons of the Outlook bar.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::GetTabArea</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Returns the size and position of the tab areas on the Outlook bar.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CBaseTabbedPane::GetTabArea<ept id="p1">](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__gettabarea)</ept>.)</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Used by the framework to obtain a pointer to the <bpt id="p1">[</bpt>CRuntimeClass<ept id="p1">](../../mfc/reference/cruntimeclass-structure.md)</ept> object that is associated with this class type.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::IsMode2003</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Determines whether the behavior of the Outlook bar mimics that of Microsoft Office Outlook 2003 (see Remarks).</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::OnAfterAnimation</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Called by <bpt id="p1">[</bpt>CMFCOutlookBarTabCtrl::SetActiveTab<ept id="p1">](../../mfc/reference/cmfcoutlookbartabctrl-class.md#cmfcoutlookbartabctrl__setactivetab)</ept> after the active tab has been set using animation.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::OnBeforeAnimation</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Called by <bpt id="p1">[</bpt>CMFCOutlookBarTabCtrl::SetActiveTab<ept id="p1">](../../mfc/reference/cmfcoutlookbartabctrl-class.md#cmfcoutlookbartabctrl__setactivetab)</ept> before a tab page is set as the active tab using animation.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::OnScroll</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Called by the framework if the Outlook bar is scrolling up or down.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::RemoveCustomPage</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Removes a custom Outlook bar tab.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::SetButtonsFont</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Sets the font of the text on the buttons of the Outlook bar.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::SetMode2003</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Specifies whether the behavior of the Outlook bar mimics that of Outlook 2003 (see Remarks).</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For an example of an Outlook bar, see the <bpt id="p1">[</bpt>OutlookDemo Sample: MFC OutlookDemo Application<ept id="p1">](../../visual-cpp-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Implementing the Outlook Bar</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To use the <ph id="ph1">`CMFCOutlookBar`</ph> control in your application, follow these steps:</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Embed a <ph id="ph1">`CMFCOutlookBar`</ph> object into the main frame window class.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>When processing the <ph id="ph1">`WM_CREATE`</ph> message in the main frame, call the <bpt id="p1">[</bpt>CMFCOutlookBar::Create<ept id="p1">](#cmfcoutlookbar__create)</ept> method to create the Outlook bar tab control.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Obtain a pointer to the underlying <ph id="ph1">`CMFCOutlookBarTabCtrl`</ph> by using <bpt id="p1">[</bpt>CBaseTabbedPane::GetUnderlyingWindow<ept id="p1">](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__getunderlyingwindow)</ept>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Create a <bpt id="p1">[</bpt>CMFCOutlookBarPane Class<ept id="p1">](../../mfc/reference/cmfcoutlookbarpane-class.md)</ept> object for each tab that contains buttons.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Call <bpt id="p1">[</bpt>CMFCOutlookBarTabCtrl::AddTab<ept id="p1">](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__addtab)</ept> to add each new tab.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">`bDetachable`</ph> parameter to <ph id="ph2">`FALSE`</ph> to make a page non-detachable.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Or, use <bpt id="p1">[</bpt>CMFCOutlookBarTabCtrl::AddControl<ept id="p1">](../../mfc/reference/cmfcoutlookbartabctrl-class.md#cmfcoutlookbartabctrl__addcontrol)</ept> to add detachable pages.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To add a <ph id="ph1">`CWnd`</ph>-derived control (for example, <bpt id="p1">[</bpt>CMFCShellTreeCtrl Class<ept id="p1">](../../mfc/reference/cmfcshelltreectrl-class.md)</ept>) as a tab, create the control and call <bpt id="p2">[</bpt>CMFCOutlookBarTabCtrl::AddTab<ept id="p2">](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__addtab)</ept> to add it to the Outlook bar.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You should use unique control IDs for each <bpt id="p1">[</bpt>CMFCOutlookBarPane Class<ept id="p1">](../../mfc/reference/cmfcoutlookbarpane-class.md)</ept> object and for each <ph id="ph1">`CWnd`</ph>-derived object.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>To dynamically add or delete new pages at runtime, use <bpt id="p1">[</bpt>CMFCOutlookBar::CreateCustomPage<ept id="p1">](#cmfcoutlookbar__createcustompage)</ept> and <bpt id="p2">[</bpt>CMFCOutlookBar::RemoveCustomPage<ept id="p2">](#cmfcoutlookbar__removecustompage)</ept>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Outlook 2003 Mode</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>In Outlook 2003 mode, the tab buttons are positioned at the bottom of the Outlook bar pane.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>When there is not sufficient room to display the buttons, they are displayed as icons in a toolbar-like area along the bottom of the pane.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>CMFCOutlookBar::SetMode2003<ept id="p1">](#cmfcoutlookbar__setmode2003)</ept> to enable Outlook 2003 mode.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>CMFCOutlookBarTabCtrl::SetToolbarImageList<ept id="p1">](../../mfc/reference/cmfcoutlookbartabctrl-class.md#cmfcoutlookbartabctrl__settoolbarimagelist)</ept> to set the bitmap that contains the icons that are displayed on the bottom of the Outlook bar.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The icons in the bitmap must be ordered by tab index.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>CObject</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>CCmdTarget</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>CWnd</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>CBasePane</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>CPane</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>CDockablePane</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>CBaseTabbedPane</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxoutlookbar.h</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::AllowDestroyEmptyTabbedPane</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Specifies whether an empty tabbed pane can be destroyed.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>if an empty tabbed pane can be destroyed; otherwise, <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The default implementation always returns <ph id="ph1">`TRUE`</ph>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>If an empty tabbed pane cannot be destroyed, the framework hides it instead.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::CanAcceptPane</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Determines whether another pane can be docked to the Outlook bar pane.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>A pointer to another pane that is being docked to this pane.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>if another pane can be docked to the Outlook bar pane; otherwise <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>If the Outlook bar is in Outlook 2003 mode, docking is not supported, so the return value is <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`pBar`</ph> parameter is <ph id="ph2">`NULL`</ph>, this method returns <ph id="ph3">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Otherwise, this method behaves as the base method <bpt id="p1">[</bpt>CBasePane::CanAcceptPane<ept id="p1">](../../mfc/reference/cbasepane-class.md#cbasepane__canacceptpane)</ept>, except that even if docking is not enabled, an Outlook bar can still enable another Outlook bar to be docked over it.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::CanSetCaptionTextToTabName</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Determines whether the caption for the tabbed pane displays the same text as the active tab.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>if the Outlook bar window caption is automatically set to the text of the active tab; otherwise <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>CBaseTabbedPane::EnableSetCaptionTextToTabName<ept id="p1">](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__enablesetcaptiontexttotabname)</ept> to enable or disable this functionality.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>In Outlook 2003 mode, this setting is always enabled.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::Create</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Creates the Outlook bar control.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Specifies the window caption.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Specifies a pointer to a parent window.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>It must not be NULL.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Specifies the outlook bar size and position in pixels.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Specifies the control ID.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Must be distinct from other control IDs used in the application.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Specifies the desired control bar style.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>For possible values, see <bpt id="p1">[</bpt>Window Styles<ept id="p1">](../../mfc/reference/window-styles.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Specifies the special library-defined styles.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Create context.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Nonzero if the method is successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>You construct a <ph id="ph1">`CMFCOutlookBar`</ph> object in two steps.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>First call the constructor, and then call <ph id="ph1">`Create`</ph>, which creates the outlook bar control and attaches it to the <ph id="ph2">`CMFCOutlookBar`</ph> object.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CBasePane::CreateEx<ept id="p1">](../../mfc/reference/cbasepane-class.md#cbasepane__createex)</ept> for the list of the available library-defined styles to be specified by <ph id="ph1">`dwControlBarStyle`</ph>.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to use the <ph id="ph1">`Create`</ph> method of the <ph id="ph2">`CMFCOutlookBar`</ph> class.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>This code snippet is part of the <bpt id="p1">[</bpt>Outlook Multi Views sample<ept id="p1">](../../visual-cpp-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>NVC_MFC_OutlookMultiViews#1</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>NVC_MFC_OutlookMultiViews#2</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::CreateCustomPage</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Creates a custom Outlook bar tab.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The page label.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`TRUE`</ph>, the page becomes active upon creation.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>A combination of CBRS_ALIGN_ flags that specifies the enabled docking sides when the page is detached.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`TRUE`</ph>, the text labels are enabled for the buttons that reside on the page.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>A pointer to the newly created page, or <ph id="ph1">`NULL`</ph> if the creation failed.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Use this method to enable the users to create custom Outlook bar pages.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>You can create up to 100 pages per application.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The page control IDs start from 0xF000.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The creation fails if the total number of custom Outlook bar pages exceeds 100.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>CMFCOutlookBar::RemoveCustomPage<ept id="p1">](#cmfcoutlookbar__removecustompage)</ept> to delete custom pages.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::DoesAllowDynInsertBefore</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Specifies whether a user can dock a pane at the outer edge of the Outlook bar.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The default implementation returns <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The framework calls the <ph id="ph1">`DoesAllowDynInsertBefore`</ph> method when it looks for a location to dock a dynamic pane.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>If the function returns <ph id="ph1">`FALSE`</ph>, the framework does not allow the docking of any dynamic pane at the outer edges of the pane.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Usually, you create an Outlook bar as a static non-floating control.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>You can override this function in a derived class and return <ph id="ph1">`TRUE`</ph> to change this behavior.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Because dynamic panes check the status of docked static panes when docking, you should dock dynamic panes after static panes whenever possible.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::FloatTab</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Floats a pane.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>A pointer to the pane to float.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The zero-based index of the tab to float.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Specifies the method to use to make the pane float.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>CBaseTabbedPane::FloatTab<ept id="p1">](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__floattab)</ept>.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>to hide the pane before floating; otherwise, <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Unlike the base class version of this method, this parameter does not have a default value.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>if the pane floated; otherwise, <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>This method is like <bpt id="p1">[</bpt>CBaseTabbedPane::FloatTab<ept id="p1">](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__floattab)</ept> except that it does not enable the last remaining tab on an Outlook bar control to float.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::GetButtonsFont</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Returns the font of the text on the page button tabs of the Outlook bar.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>A pointer to the font object that is used to display text on Outlook bar page button tabs.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Use this function to retrieve the font that is used to display the text on Outlook page button tabs.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>You can set the font by calling on <bpt id="p1">[</bpt>CMFCOutlookBar::SetButtonsFont<ept id="p1">](#cmfcoutlookbar__setbuttonsfont)</ept>.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::GetTabArea</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Determines the size and position of the tab areas on the Outlook bar.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>[out]</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Contains the size and position (in the client coordinates) of the top tab area when the function returns.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>[out]</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Contains the size and position (in the client coordinates) of the bottom tab area when the function returns.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The framework calls this method to determine the type of docking to the target pane.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>When the framework determines that the user drags the pane to be docked over the tab area of the target pane, it tries to add the first pane as a new tab of the target pane.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Otherwise, it tries to dock the first pane at an appropriate side of the target pane.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The framework creates a new container with a slider to accommodate the additional docked pane.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The default implementation of <ph id="ph1">`GetTabArea`</ph> returns the whole client area of the Outlook bar if the Outlook bar is static; that is, if the Outlook bar cannot float.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Otherwise, it returns the area that page buttons take at the top and bottom of the Outlook bar control.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Override this method in class derived from <ph id="ph1">`CMFCOutlookBar`</ph> to change this behavior.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::IsMode2003</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Specifies whether the behavior of the Outlook bar mimics that of Microsoft Office Outlook 2003.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Nonzero if the Outlook bar is running in Microsoft Office 2003 mode; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>You can enable this mode by using <bpt id="p1">[</bpt>CMFCOutlookBar::SetMode2003<ept id="p1">](#cmfcoutlookbar__setmode2003)</ept>.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::OnAfterAnimation</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Called by <bpt id="p1">[</bpt>CMFCOutlookBarTabCtrl::SetActiveTab<ept id="p1">](../../mfc/reference/cmfcoutlookbartabctrl-class.md#cmfcoutlookbartabctrl__setactivetab)</ept> after the active tab has been set using animation.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The zero-based index of the tab page that has been made active.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The visual effect of setting the active tab depends on whether you have enabled animation.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>CMFCOutlookBarTabCtrl::EnableAnimation<ept id="p1">](../../mfc/reference/cmfcoutlookbartabctrl-class.md#cmfcoutlookbartabctrl__enableanimation)</ept>.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::OnBeforeAnimation</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Called by <bpt id="p1">[</bpt>CMFCOutlookBarTabCtrl::SetActiveTab<ept id="p1">](../../mfc/reference/cmfcoutlookbartabctrl-class.md#cmfcoutlookbartabctrl__setactivetab)</ept> before a tab page is set as the active tab using animation.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The zero-based index of the tab page that is about to be set active.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`TRUE`</ph> if animation should be used in setting the new active tab, or <ph id="ph2">`FALSE`</ph> if animation should be disabled.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::OnScroll</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Called by the framework if the Outlook bar is scrolling up or down.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>if the Outlook bar is scrolling down, or <ph id="ph1">`FALSE`</ph> if it is scrolling up.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::RemoveCustomPage</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Removes a custom Outlook bar tab page.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Zero-based index of the page in the parent Outlook window.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Pointerto the parent Outlook window.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Nonzero if the custom page has been removed successfully; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Call this function to delete custom pages.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>When the page is removed its control ID is returned to the pool of available IDs.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>You must provide a pointer to <bpt id="p1">[</bpt>CMFCOutlookBarTabCtrl Class<ept id="p1">](../../mfc/reference/cmfcoutlookbartabctrl-class.md)</ept> object in which the page to be removed currently resides.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Note that a user can move detachable pages between different Outlook bars, but the information about a custom page resides in the Outlook bar object for which you have called <bpt id="p1">[</bpt>CMFCOutlookBar::CreateCustomPage<ept id="p1">](#cmfcoutlookbar__createcustompage)</ept>.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>CBaseTabbedPane::GetUnderlyingWindow<ept id="p1">](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__getunderlyingwindow)</ept> to obtain a pointer to the Outlook window.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::SetButtonsFont</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Sets the font of the text on the buttons of the Outlook bar.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Specifies the new font.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`TRUE`</ph>, the Outlook bar will be redrawn.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Use this method to set a font for the text displayed on outlook tab page buttons.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBar::SetMode2003</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Specifies whether the behavior of the Outlook bar mimics that of Outlook 2003.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>If TRUE, Office 2003 mode is enabled.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Use this function to enable or disable Office 2003 mode.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>In this mode, the Outlook bar has an additional toolbar with a customization button.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>The behavior of the Outlook bar conforms to the behavior of the Outlook bar in Microsoft Office 2003.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>By default, this mode is disabled.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>This function must be called before <bpt id="p1">[</bpt>CMFCOutlookBar::Create<ept id="p1">](#cmfcoutlookbar__create)</ept>.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Hierarchy Chart</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Classes</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>CBaseTabbedPane Class</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBarTabCtrl Class</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>CMFCOutlookBarPane Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>