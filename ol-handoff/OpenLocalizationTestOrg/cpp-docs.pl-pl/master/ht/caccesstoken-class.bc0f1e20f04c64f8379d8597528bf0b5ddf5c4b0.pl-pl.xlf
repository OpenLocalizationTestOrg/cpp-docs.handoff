<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e8ed708cdb63fae48baa942a917c67de10249a45</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\caccesstoken-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b926e4160703a7371e1da493f68264035e804995</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fe55f8a1a60b9e7f8e9b0a0a3a7a575618fa3723</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CAccessToken Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CAccessToken Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class is a wrapper for an access token.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This class and its members cannot be used in applications that execute in the Windows Runtime.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>CAccessToken::~CAccessToken</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The destructor.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>CAccessToken::Attach</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Call this method to take ownership of the given access token handle.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>CAccessToken::CheckTokenMembership</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Call this method to determine if a specified SID is enabled in the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>CAccessToken::CreateImpersonationToken</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Call this method to create a new impersonation access token.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>CAccessToken::CreatePrimaryToken</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Call this method to create a new primary token.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>CAccessToken::CreateProcessAsUser</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Call this method to create a new process running in the security context of the user represented by the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>CAccessToken::CreateRestrictedToken</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Call this method to create a new, restricted <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>CAccessToken::Detach</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Call this method to revoke ownership of the access token.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>CAccessToken::DisablePrivilege</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Call this method to disable a privilege in the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>CAccessToken::DisablePrivileges</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Call this method to disable one or more privileges in the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>CAccessToken::EnablePrivilege</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Call this method to enable a privilege in the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>CAccessToken::EnablePrivileges</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Call this method to enable one or more privileges in the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetDefaultDacl</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Call this method to return the <ph id="ph1">`CAccessToken`</ph> object's default DACL.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetEffectiveToken</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Call this method to get the <ph id="ph1">`CAccessToken`</ph> object equal to the access token in effect for the current thread.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetGroups</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Call this method to return the <ph id="ph1">`CAccessToken`</ph> object's token groups.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetHandle</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Call this method to retrieve a handle to the access token.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetImpersonationLevel</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Call this method to get the impersonation level from the access token.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetLogonSessionId</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Call this method to get the Logon Session ID associated with the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetLogonSid</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Call this method to get the Logon SID associated with the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetOwner</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Call this method to get the owner associated with the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetPrimaryGroup</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Call this method to get the primary group associated with the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetPrivileges</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Call this method to get the privileges associated with the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetProcessToken</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Call this method to initialize the <ph id="ph1">`CAccessToken`</ph> with the access token from the given process.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetProfile</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Call this method to get the handle pointing to the user profile associated with the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetSource</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Call this method to get the source of the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetStatistics</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Call this method to get information associated with the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetTerminalServicesSessionId</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Call this method to get the Terminal Services Session ID associated with the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetThreadToken</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Call this method to initialize the <ph id="ph1">`CAccessToken`</ph> with the token from the given thread.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetTokenId</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Call this method to get the Token ID associated with the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetType</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Call this method to get the token type of the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetUser</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Call this method to identify the user associated with the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>CAccessToken::HKeyCurrentUser</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Call this method to get the handle pointing to the user profile associated with the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>CAccessToken::Impersonate</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Call this method to assign an impersonation <ph id="ph1">`CAccessToken`</ph> to a thread.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>CAccessToken::ImpersonateLoggedOnUser</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Call this method to allow the calling thread to impersonate the security context of a logged-on user.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>CAccessToken::IsTokenRestricted</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Call this method to test if the <ph id="ph1">`CAccessToken`</ph> object contains a list of restricted SIDs.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>CAccessToken::LoadUserProfile</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Call this method to load the user profile associated with the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>CAccessToken::LogonUser</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Call this method to create a logon session for the user associated with the given credentials.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>CAccessToken::OpenCOMClientToken</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Call this method from within a COM server handling a call from a client to initialize the <ph id="ph1">`CAccessToken`</ph> with the access token from the COM client.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>CAccessToken::OpenNamedPipeClientToken</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Call this method from within a server taking requests over a named pipe to initialize the <ph id="ph1">`CAccessToken`</ph> with the access token from the client.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>CAccessToken::OpenRPCClientToken</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Call this method from within a server handling a call from an RPC client to initialize the <ph id="ph1">`CAccessToken`</ph> with the access token from the client.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>CAccessToken::OpenThreadToken</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Call this method to set the impersonation level and then initialize the <ph id="ph1">`CAccessToken`</ph> with the token from the given thread.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>CAccessToken::PrivilegeCheck</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Call this method to determine whether a specified set of privileges are enabled in the <bpt id="p1">**</bpt>CAccessToken<ept id="p1">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>CAccessToken::Revert</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Call this method to stop a thread that is using an impersonation token.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>CAccessToken::SetDefaultDacl</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Call this method to set the default DACL of the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>CAccessToken::SetOwner</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Call this method to set the owner of the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>CAccessToken::SetPrimaryGroup</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Call this method to set the primary group of the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">[</bpt>access token<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa374909)</ept> is an object that describes the security context of a process or thread and is allocated to each user logged onto a Windows NT or Windows 2000 system.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>For an introduction to the access control model in Windows, see <bpt id="p1">[</bpt>Access Control<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa374860)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> atlsecurity.h</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>CAccessToken::Attach</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Call this method to take ownership of the given access token handle.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>hToken</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>A handle to the access token.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>In debug builds, an assertion error will occur if the <ph id="ph1">`CAccessToken`</ph> object already has ownership of an access token.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>CAccessToken::~CAccessToken</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The destructor.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Frees all allocated resources.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>CAccessToken::CheckTokenMembership</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Call this method to determine if a specified SID is enabled in the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Reference to a <bpt id="p1">[</bpt>CSid Class<ept id="p1">](../../atl/reference/csid-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Pointer to a variable that receives the results of the check.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CheckTokenMembership`</ph> method checks for the presence of the SID in the user and group SIDs of the access token.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>If the SID is present and has the SE_GROUP_ENABLED attribute, <bpt id="p1">*</bpt>pbIsMember<ept id="p1">*</ept> is set to true; otherwise, it is set to false.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>In debug builds, an assertion error will occur if <ph id="ph1">`pbIsMember`</ph> is not a valid pointer.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CAccessToken`</ph> object must be an impersonation token and not a primary token.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>CAccessToken::CreateImpersonationToken</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Call this method to create an impersonation access token.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Pointer to the new <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Specifies a <bpt id="p1">[</bpt>SECURITY_IMPERSONATION_LEVEL<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa379572)</ept> enumerated type that supplies the impersonation level of the new token.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>calls <bpt id="p1">[</bpt>DuplicateToken<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa446616)</ept> to create a new impersonation token.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>CAccessToken::CreatePrimaryToken</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Call this method to create a new primary token.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>pPri</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Pointer to the new <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Specifies the requested access rights for the new token.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The default, MAXIMUM_ALLOWED, requests all access rights that are valid for the caller.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Access Rights and Access Masks<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa374902)</ept> for more on access rights.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>pTokenAttributes</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>SECURITY_ATTRIBUTES<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa379560)</ept> structure that specifies a security descriptor for the new token and determines whether child processes can inherit the token.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">*</bpt>pTokenAttributes<ept id="p1">*</ept> is NULL, the token gets a default security descriptor and the handle cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>calls <bpt id="p1">[</bpt>DuplicateTokenEx<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa446617)</ept> to create a new primary token.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>CAccessToken::CreateProcessAsUser</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Call this method to create a new process running in the security context of the user represented by the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>pApplicationName</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Pointer to a null-terminated string that specifies the module to execute.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>This parameter may not be NULL.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>pCommandLine</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Pointer to a null-terminated string that specifies the command line to execute.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>pProcessInformation</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>PROCESS_INFORMATION<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms684873)</ept> structure that receives identification information about the new process.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>pStartupInfo</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>STARTUPINFO<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms686331)</ept> structure that specifies how the main window for the new process should appear.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Specifies additional flags that control the priority class and the creation of the process.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>See the Win32 function <bpt id="p1">[</bpt>CreateProcessAsUser<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682429)</ept> for a list of flags.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>bLoadProfile</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>If true, the user's profile is loaded with <bpt id="p1">[</bpt>LoadUserProfile<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb762281)</ept>.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>pProcessAttributes</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>SECURITY_ATTRIBUTES<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa379560)</ept> structure that specifies a security descriptor for the new process and determines whether child processes can inherit the returned handle.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">*</bpt>pProcessAttributes<ept id="p1">*</ept> is NULL, the process gets a default security descriptor and the handle cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>pThreadAttributes</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>SECURITY_ATTRIBUTES<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa379560)</ept> structure that specifies a security descriptor for the new thread and determines whether child processes can inherit the returned handle.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">*</bpt>pThreadAttributes<ept id="p1">*</ept> is NULL, the thread gets a default security descriptor and the handle cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>bInherit</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Indicates whether the new process inherits handles from the calling process.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>If true, each inheritable open handle in the calling process is inherited by the new process.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Inherited handles have the same value and access privileges as the original handles.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>pCurrentDirectory</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Pointer to a null-terminated string that specifies the current drive and directory for the new process.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The string must be a full path that includes a drive letter.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>If this parameter is NULL, the new process will have the same current drive and directory as the calling process.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CreateProcessAsUser<ept id="p1">**</ept> uses the <ph id="ph1">`CreateProcessAsUser`</ph> Win32 function to create a new process that runs in the security context of the user represented by the <ph id="ph2">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>See the description of the <bpt id="p1">[</bpt>CreateProcessAsUser<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682429)</ept> function for a full discussion of the parameters required.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>For this method to succeed, the <ph id="ph1">`CAccessToken`</ph> object must hold AssignPrimaryToken (unless it is a restricted token) and IncreaseQuota privileges.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>CAccessToken::CreateRestrictedToken</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Call this method to create a new, restricted <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>pRestrictedToken</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The new, restricted <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CTokenGroups`</ph> object that specifies the deny-only SIDs.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>SidsToRestrict</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CTokenGroups`</ph> object that specifies the restricting SIDs.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CTokenPrivileges`</ph> object that specifies the privileges to delete in the restricted token.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The default creates an empty object.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>uses the <bpt id="p1">[</bpt>CreateRestrictedToken<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa446583)</ept> Win32 function to create a new <ph id="ph1">`CAccessToken`</ph> object, with restrictions.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>This method is only available on Windows 2000 or later.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>When using <ph id="ph1">`CreateRestrictedToken`</ph>, ensure the following: the existing token is valid (and not entered by the user) and <ph id="ph2">`SidsToDisable`</ph> and <ph id="ph3">`PrivilegesToDelete`</ph> are both valid (and not entered by the user).</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>If the method returns false, deny functionality.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>CAccessToken::Detach</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Call this method to revoke ownership of the access token.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Returns the handle to the <ph id="ph1">`CAccessToken`</ph> which has been detached.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>This method revokes the <ph id="ph1">`CAccessToken`</ph>'s ownership of the access token.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>CAccessToken::DisablePrivilege</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Call this method to disable a privilege in the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Pointer to a string containing the privilege to disable in the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Pointer to a <ph id="ph1">`CTokenPrivileges`</ph> object which will contain the previous state of the privileges.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>CAccessToken::DisablePrivileges</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Call this method to disable one or more privileges in the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Pointer to an array of strings containing the privileges to disable in the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Pointer to a <ph id="ph1">`CTokenPrivileges`</ph> object which will contain the previous state of the privileges.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>CAccessToken::EnablePrivilege</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Call this method to enable a privilege in the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Pointer to a string containing the privilege to enable in the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Pointer to a <ph id="ph1">`CTokenPrivileges`</ph> object which will contain the previous state of the privileges.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>CAccessToken::EnablePrivileges</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Call this method to enable one or more privileges in the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Pointer to an array of strings containing the privileges to enable in the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Pointer to a <ph id="ph1">`CTokenPrivileges`</ph> object which will contain the previous state of the privileges.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetDefaultDacl</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Call this method to return the <ph id="ph1">`CAccessToken`</ph> object's default DACL.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>CDacl Class<ept id="p1">](../../atl/reference/cdacl-class.md)</ept> object which will receive the <bpt id="p2">**</bpt>CAccessToken<ept id="p2">**</ept> object's default DACL.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Returns true if the default DACL has been recovered, false otherwise.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetEffectiveToken</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Call this method to get the <ph id="ph1">`CAccessToken`</ph> object equal to the access token in effect for the current thread.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Specifies an access mask that specifies the requested types of access to the access token.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>These requested access types are compared with the token's DACL to determine which accesses are granted or denied.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetGroups</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Call this method to return the <ph id="ph1">`CAccessToken`</ph> object's token groups.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>pGroups</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>CTokenGroups Class<ept id="p1">](../../atl/reference/ctokengroups-class.md)</ept> object which will receive the group information.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetHandle</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Call this method to retrieve a handle to the access token.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Returns a handle to the <ph id="ph1">`CAccessToken`</ph> object's access token.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetImpersonationLevel</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Call this method to get the impersonation level from the access token.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>pImpersonationLevel</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>SECURITY_IMPERSONATION_LEVEL<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa379572)</ept> enumeration type which will receive the impersonation level information.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetLogonSessionId</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Call this method to get the Logon Session ID associated with the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>LUID<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa379261)</ept> which will receive the Logon Session ID.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>In debug builds, an assertion error will occur if <ph id="ph1">`pluid`</ph> is an invalid value.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetLogonSid</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Call this method to get the Logon SID associated with the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>CSid Class<ept id="p1">](../../atl/reference/csid-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>In debug builds, an assertion error will occur if <bpt id="p1">*</bpt>pSid<ept id="p1">*</ept> is an invalid value.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetOwner</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Call this method to get the owner associated with the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>CSid Class<ept id="p1">](../../atl/reference/csid-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The owner is set by default on any objects created while this access token is in effect.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetPrimaryGroup</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Call this method to get the primary group associated with the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>CSid Class<ept id="p1">](../../atl/reference/csid-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>The group is set by default on any objects created while this access token is in effect.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetPrivileges</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>Call this method to get the privileges associated with the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>CTokenPrivileges Class<ept id="p1">](../../atl/reference/ctokenprivileges-class.md)</ept> object which will receive the privileges.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetProcessToken</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Call this method to initialize the <ph id="ph1">`CAccessToken`</ph> with the access token from the given process.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>Specifies an access mask that specifies the requested types of access to the access token.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>These requested access types are compared with the token's DACL to determine which accesses are granted or denied.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>hProcess</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>Handle to the process whose access token is opened.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>If the default value of <ph id="ph1">`NULL`</ph> is used, the current process is used.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`true`</ph> on success, <ph id="ph2">`false`</ph> on failure.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Calls the <bpt id="p1">[</bpt>OpenProcessToken<ept id="p1">](http://msdn.microsoft.com/library/aa379295\(vs.85\).aspx)</ept> Win32 function.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetProfile</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Call this method to get the handle pointing to the user profile associated with the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Returns a handle pointing to the user profile, or NULL if no profile exists.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetSource</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>Call this method to get the source of the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>pSource</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>TOKEN_SOURCE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa379631)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetStatistics</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>Call this method to get information associated with the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>pStatistics</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>TOKEN_STATISTICS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa379632)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetTerminalServicesSessionId</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>Call this method to get the Terminal Services Session ID associated with the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>pdwSessionId</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>The Terminal Services Session ID.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetThreadToken</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Call this method to initialize the <ph id="ph1">`CAccessToken`</ph> with the token from the given thread.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Specifies an access mask that specifies the requested types of access to the access token.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>These requested access types are compared with the token's DACL to determine which accesses are granted or denied.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>Handle to the thread whose access token is opened.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>Indicates whether the access check is to be made against the security context of the thread calling the <ph id="ph1">`GetThreadToken`</ph> method or against the security context of the process for the calling thread.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>If this parameter is false, the access check is performed using the security context for the calling thread.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>If the thread is impersonating a client, this security context can be that of a client process.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>If this parameter is true, the access check is made using the security context of the process for the calling thread.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetTokenId</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>Call this method to get the Token ID associated with the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>LUID<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa379261)</ept> which will receive the Token ID.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetType</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>Call this method to get the token type of the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>Address of the <bpt id="p1">[</bpt>TOKEN_TYPE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa379633)</ept> variable that, on success, receives the type of the token.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>TOKEN_TYPE<ept id="p1">**</ept> enumeration type contains values that differentiate between a primary token and an impersonation token.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>CAccessToken::GetUser</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Call this method to identify the user associated with the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>CSid Class<ept id="p1">](../../atl/reference/csid-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>CAccessToken::HKeyCurrentUser</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Call this method to get the handle pointing to the user profile associated with the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>Returns a handle pointing to the user profile, or NULL if no profile exists.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>CAccessToken::Impersonate</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>Call this method to assign an impersonation <ph id="ph1">`CAccessToken`</ph> to a thread.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>Handle to the thread to assign the impersonation token to.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>This handle must have been opened with TOKEN_IMPERSONATE access rights.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`hThread`</ph> is NULL, the method causes the thread to stop using an impersonation token.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>In debug builds, an assertion error will occur if <ph id="ph1">`CAccessToken`</ph> does not have a valid pointer to a token.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>CAutoRevertImpersonation class<ept id="p1">](../../atl/reference/cautorevertimpersonation-class.md)</ept> can be used to automatically revert impersonated access tokens.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>CAccessToken::ImpersonateLoggedOnUser</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>Call this method to allow the calling thread to impersonate the security context of a logged-on user.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>If a call to an impersonation function fails for any reason, the client is not impersonated and the client request is made in the security context of the process from which the call was made.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>If the process is running as a highly privileged account, or as a member of an administrative group, the user might be able to perform actions he or she would otherwise be disallowed.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>Therefore, the return value for this function should always be confirmed.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>CAccessToken::IsTokenRestricted</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>Call this method to test if the <ph id="ph1">`CAccessToken`</ph> object contains a list of restricted SIDs.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>Returns true if the object contains a list of restricting SIDs, false if there are no restricting SIDs or if the method fails.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>CAccessToken::LoadUserProfile</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>Call this method to load the user profile associated with the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>In debug builds, an assertion error will occur if the <ph id="ph1">`CAccessToken`</ph> does not contain a valid token, or if a user profile already exists.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>CAccessToken::LogonUser</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Call this method to create a logon session for the user associated with the given credentials.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>Pointer to a null-terminated string that specifies the user name.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>This is the name of the user account to log on to.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>pszDomain</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>Pointer to a null-terminated string that specifies the name of the domain or server whose account database contains the <ph id="ph1">`pszUserName`</ph> account.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>Pointer to a null-terminated string that specifies the clear-text password for the user account specified by <ph id="ph1">`pszUserName`</ph>.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>dwLogonType</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>Specifies the type of logon operation to perform.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>LogonUser<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa378184)</ept> for more details.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>dwLogonProvider</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Specifies the logon provider.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>LogonUser<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa378184)</ept> for more details.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>The access token resulting from the logon will be associated with the <ph id="ph1">`CAccessToken`</ph>.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>For this method to succeed, the <ph id="ph1">`CAccessToken`</ph> object must hold SE_TCB_NAME privileges, identifying the holder as part of the trusted computer base.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>LogonUser<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa378184)</ept> for more information regarding the privileges required.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>CAccessToken::OpenCOMClientToken</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>Call this method from within a COM server handling a call from a client to initialize the <ph id="ph1">`CAccessToken`</ph> with the access token from the COM client.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>Specifies an access mask that specifies the requested types of access to the access token.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>These requested access types are compared with the token's DACL to determine which accesses are granted or denied.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>If true, the current thread will impersonate the calling COM client if this call completes successfully.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>If false, the access token will be opened, but the thread will not have an impersonation token when this call completes.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>Indicates whether the access check is to be made against the security context of the thread calling the <bpt id="p1">[</bpt>GetThreadToken<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683182)</ept> method or against the security context of the process for the calling thread.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>If this parameter is false, the access check is performed using the security context for the calling thread.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>If the thread is impersonating a client, this security context can be that of a client process.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>If this parameter is true, the access check is made using the security context of the process for the calling thread.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>CAutoRevertImpersonation Class<ept id="p1">](../../atl/reference/cautorevertimpersonation-class.md)</ept> can be used to automatically revert impersonated access tokens created by setting the <ph id="ph1">`bImpersonate`</ph> flag to <bpt id="p2">*</bpt>true<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>CAccessToken::OpenNamedPipeClientToken</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>Call this method from within a server taking requests over a named pipe to initialize the <ph id="ph1">`CAccessToken`</ph> with the access token from the client.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>hPipe</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>Handle to a named pipe.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>Specifies an access mask that specifies the requested types of access to the access token.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>These requested access types are compared with the token's DACL to determine which accesses are granted or denied.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>If true, the current thread will impersonate the calling pipe client if this call completes successfully.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>If false, the access token will be opened, but the thread will not have an impersonation token when this call completes.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>Indicates whether the access check is to be made against the security context of the thread calling the <bpt id="p1">[</bpt>GetThreadToken<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683182)</ept> method or against the security context of the process for the calling thread.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>If this parameter is false, the access check is performed using the security context for the calling thread.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>If the thread is impersonating a client, this security context can be that of a client process.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>If this parameter is true, the access check is made using the security context of the process for the calling thread.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>CAutoRevertImpersonation Class<ept id="p1">](../../atl/reference/cautorevertimpersonation-class.md)</ept> can be used to automatically revert impersonated access tokens created by setting the <ph id="ph1">`bImpersonate`</ph> flag to <bpt id="p2">*</bpt>true<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>CAccessToken::OpenRPCClientToken</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>Call this method from within a server handling a call from an RPC client to initialize the <ph id="ph1">`CAccessToken`</ph> with the access token from the client.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>BindingHandle</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>Binding handle on the server that represents a binding to a client.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>Specifies an access mask that specifies the requested types of access to the access token.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>These requested access types are compared with the token's DACL to determine which accesses are granted or denied.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>If true, the current thread will impersonate the calling RPC client if this call completes successfully.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>If false, the access token will be opened, but the thread will not have an impersonation token when this call completes.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>Indicates whether the access check is to be made against the security context of the thread calling the <bpt id="p1">[</bpt>GetThreadToken<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683182)</ept> method or against the security context of the process for the calling thread.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>If this parameter is false, the access check is performed using the security context for the calling thread.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>If the thread is impersonating a client, this security context can be that of a client process.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>If this parameter is true, the access check is made using the security context of the process for the calling thread.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>CAutoRevertImpersonation Class<ept id="p1">](../../atl/reference/cautorevertimpersonation-class.md)</ept> can be used to automatically revert impersonated access tokens created by setting the <ph id="ph1">`bImpersonate`</ph> flag to <bpt id="p2">*</bpt>true<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>CAccessToken::OpenThreadToken</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>Call this method to set the impersonation level and then initialize the <ph id="ph1">`CAccessToken`</ph> with the token from the given thread.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>Specifies an access mask that specifies the requested types of access to the access token.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>These requested access types are compared with the token's DACL to determine which accesses are granted or denied.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>If true, the thread will be left at the requested impersonation level after this method completes.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>If false, the thread will revert to its original impersonation level.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>Indicates whether the access check is to be made against the security context of the thread calling the <bpt id="p1">[</bpt>GetThreadToken<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683182)</ept> method or against the security context of the process for the calling thread.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>If this parameter is false, the access check is performed using the security context for the calling thread.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>If the thread is impersonating a client, this security context can be that of a client process.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>If this parameter is true, the access check is made using the security context of the process for the calling thread.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>Specifies a <bpt id="p1">[</bpt>SECURITY_IMPERSONATION_LEVEL<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa379572)</ept> enumerated type that supplies the impersonation level of the token.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>is similar to <bpt id="p1">[</bpt>CAccessToken::GetThreadToken<ept id="p1">](#caccesstoken__getthreadtoken)</ept>, but sets the impersonation level before initializing the <ph id="ph1">`CAccessToken`</ph> from the thread's access token.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>CAutoRevertImpersonation Class<ept id="p1">](../../atl/reference/cautorevertimpersonation-class.md)</ept> can be used to automatically revert impersonated access tokens created by setting the <ph id="ph1">`bImpersonate`</ph> flag to <bpt id="p2">*</bpt>true<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>CAccessToken::PrivilegeCheck</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>Call this method to determine whether a specified set of privileges are enabled in the <bpt id="p1">**</bpt>CAccessToken<ept id="p1">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>RequiredPrivileges</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>PRIVILEGE_SET<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa379307)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>pbResult</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>Pointer to a value the method sets to indicate whether any or all of the specified privilege are enabled in the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`PrivilegeCheck`</ph> returns, the <bpt id="p1">**</bpt>Attributes<ept id="p1">**</ept> member of each <bpt id="p2">[</bpt>LUID_AND_ATTRIBUTES<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/aa379263)</ept> structure is set to SE_PRIVILEGE_USED_FOR_ACCESS if the corresponding privilege is enabled.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>This method calls the <bpt id="p1">[</bpt>PrivilegeCheck<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa379304)</ept> Win32 function.</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>CAccessToken::Revert</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>Call this method to stop a thread from using an impersonation token.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>Handle to the thread to revert from impersonation.</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">*</bpt>hThread<ept id="p1">*</ept> is NULL, the current thread is assumed.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>The reversion of impersonation tokens can be performed automatically with the <bpt id="p1">[</bpt>CAutoRevertImpersonation Class<ept id="p1">](../../atl/reference/cautorevertimpersonation-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>CAccessToken::SetDefaultDacl</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>Call this method to set the default DACL of the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>The new default <bpt id="p1">[</bpt>CDacl Class<ept id="p1">](../../atl/reference/cdacl-class.md)</ept> information.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>The default DACL is the DACL that is used by default when new objects are created with this access token in effect.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>CAccessToken::SetOwner</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>Call this method to set the owner of the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>CSid Class<ept id="p1">](../../atl/reference/csid-class.md)</ept> object containing the owner information.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>The owner is the default owner that is used for new objects created while this access token is in effect.</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>CAccessToken::SetPrimaryGroup</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>Call this method to set the primary group of the <ph id="ph1">`CAccessToken`</ph> object.</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>CSid Class<ept id="p1">](../../atl/reference/csid-class.md)</ept> object containing the primary group information.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>The primary group is the default group for new objects created while this access token is in effect.</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>ATLSecurity Sample</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>Access Tokens</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>Class Overview</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>