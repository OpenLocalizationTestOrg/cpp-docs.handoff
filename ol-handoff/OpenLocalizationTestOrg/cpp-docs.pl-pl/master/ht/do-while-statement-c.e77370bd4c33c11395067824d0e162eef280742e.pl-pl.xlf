<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d420139385967f3253a73257ae76153ec8e1f53</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-language\do-while-statement-c.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7e6835681417be3b5d8328a7aa985637aafe294d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">79ff4baabda1e876e1b2768352d99d41bf6cf2bd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>do-while Statement (C) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>do-while Statement (C)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`do-while`</ph> statement lets you repeat a statement or compound statement until a specified expression becomes false.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>iteration-statement<ept id="p1">*</ept>:</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt>do<ept id="p1">**</ept>  <bpt id="p2">*</bpt>statement<ept id="p2">*</ept>  <bpt id="p3">**</bpt>while (<ept id="p3">**</ept>  <bpt id="p4">*</bpt>expression<ept id="p4">*</ept>  <bpt id="p5">**</bpt>) ;<ept id="p5">**</ept></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>expression<ept id="p1">*</ept> in a <ph id="ph1">`do-while`</ph> statement is evaluated after the body of the loop is executed.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Therefore, the body of the loop is always executed at least once.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>expression<ept id="p1">*</ept> must have arithmetic or pointer type.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Execution proceeds as follows:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The statement body is executed.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Next, <bpt id="p1">*</bpt>expression<ept id="p1">*</ept> is evaluated.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">*</bpt>expression<ept id="p1">*</ept> is false, the <ph id="ph1">`do-while`</ph> statement terminates and control passes to the next statement in the program.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">*</bpt>expression<ept id="p1">*</ept> is true (nonzero), the process is repeated, beginning with step 1.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`do-while`</ph> statement can also terminate when a <bpt id="p1">**</bpt>break<ept id="p1">**</ept>, <ph id="ph2">`goto`</ph>, or <ph id="ph3">`return`</ph> statement is executed within the statement body.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This is an example of the <ph id="ph1">`do-while`</ph> statement:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In this <ph id="ph1">`do-while`</ph> statement, the two statements <ph id="ph2">`y = f( x );`</ph> and <ph id="ph3">`x--;`</ph> are executed, regardless of the initial value of <ph id="ph4">`x`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Then <ph id="ph1">`x &gt; 0`</ph> is evaluated.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`x`</ph> is greater than 0, the statement body is executed again and <ph id="ph2">`x &gt; 0`</ph> is reevaluated.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The statement body is executed repeatedly as long as <ph id="ph1">`x`</ph> remains greater than 0.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Execution of the <ph id="ph1">`do-while`</ph> statement terminates when <ph id="ph2">`x`</ph> becomes 0 or negative.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The body of the loop is executed at least once.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>do-while Statement (C++)</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>