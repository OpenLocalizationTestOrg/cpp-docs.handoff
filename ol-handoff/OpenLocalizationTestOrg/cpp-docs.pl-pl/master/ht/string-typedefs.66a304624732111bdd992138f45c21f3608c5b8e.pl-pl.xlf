<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">135be13d2c1cdc4c7b21013789a9a081ada78379</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard-library\string-typedefs.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d3c1c7c956aadd0f667ac649abd180c39a5f2608</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">19a8c24ae772737a88c0c6c36638cab32e28e3cd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>string<ph id="ph1">&amp;gt;</ph> typedefs | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>string<ph id="ph1">&amp;gt;</ph> typedefs</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>string</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>u16string</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>u32string</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>wstring</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>string</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A type that describes a specialization of the template class <bpt id="p1">[</bpt>basic_string<ept id="p1">](../standard-library/basic-string-class.md)</ept> with elements of type <ph id="ph1">`char`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Other typedefs that specialize <ph id="ph1">`basic_string`</ph> include <bpt id="p1">[</bpt>wstring<ept id="p1">](../standard-library/string-typedefs.md#wstring)</ept>, <bpt id="p2">[</bpt>u16string<ept id="p2">](../standard-library/string-typedefs.md#u16string)</ept>, and <bpt id="p3">[</bpt>u32string<ept id="p3">](../standard-library/string-typedefs.md#u32string)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following are equivalent declarations:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For a list of string constructors, see <bpt id="p1">[</bpt>basic_string::basic_string<ept id="p1">](../standard-library/basic-string-class.md#basic_string__basic_string)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>u16string</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A type that describes a specialization of the template class <bpt id="p1">[</bpt>basic_string<ept id="p1">](../standard-library/basic-string-class.md)</ept> with elements of type <ph id="ph1">`char16_t`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Other typedefs that specialize <ph id="ph1">`basic_string`</ph> include <bpt id="p1">[</bpt>wstring<ept id="p1">](../standard-library/string-typedefs.md#wstring)</ept>, <bpt id="p2">[</bpt>string<ept id="p2">](../standard-library/string-typedefs.md#string)</ept>, and <bpt id="p3">[</bpt>u32string<ept id="p3">](../standard-library/string-typedefs.md#u32string)</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For a list of string constructors, see <bpt id="p1">[</bpt>basic_string::basic_string<ept id="p1">](../standard-library/basic-string-class.md#basic_string__basic_string)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>u32string</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A type that describes a specialization of the template class <bpt id="p1">[</bpt>basic_string<ept id="p1">](../standard-library/basic-string-class.md)</ept> with elements of type <ph id="ph1">`char32_t`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Other typedefs that specialize <ph id="ph1">`basic_string`</ph> include <bpt id="p1">[</bpt>string<ept id="p1">](../standard-library/string-typedefs.md#string)</ept>, <bpt id="p2">[</bpt>u16string<ept id="p2">](../standard-library/string-typedefs.md#u16string)</ept>, and <bpt id="p3">[</bpt>wstring<ept id="p3">](../standard-library/string-typedefs.md#wstring)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For a list of string constructors, see <bpt id="p1">[</bpt>basic_string::basic_string<ept id="p1">](../standard-library/basic-string-class.md#basic_string__basic_string)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>wstring</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A type that describes a specialization of the template class <bpt id="p1">[</bpt>basic_string<ept id="p1">](../standard-library/basic-string-class.md)</ept> with elements of type <ph id="ph1">`wchar_t`</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Other typedefs that specialize <ph id="ph1">`basic_string`</ph> include <bpt id="p1">[</bpt>string<ept id="p1">](../standard-library/string-typedefs.md#string)</ept>, <bpt id="p2">[</bpt>u16string<ept id="p2">](../standard-library/string-typedefs.md#u16string)</ept>, and <bpt id="p3">[</bpt>u32string<ept id="p3">](../standard-library/string-typedefs.md#u32string)</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following are equivalent declarations:</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For a list of string constructors, see <bpt id="p1">[</bpt>basic_string::basic_string<ept id="p1">](../standard-library/basic-string-class.md#basic_string__basic_string)</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The size of <ph id="ph1">`wchar_t`</ph> is implementation-defined.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If your code depends on <ph id="ph1">`wchar_t`</ph> to be a certain size, check your platform's implementation (for example, with <ph id="ph2">`sizeof(wchar_t)`</ph>).</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If you need a string character type with a width that is guaranteed to remain the same on all platforms, use <bpt id="p1">[</bpt>string<ept id="p1">](../standard-library/string-typedefs.md#string)</ept>, <bpt id="p2">[</bpt>u16string<ept id="p2">](../standard-library/string-typedefs.md#u16string)</ept>, or <bpt id="p3">[</bpt>u32string<ept id="p3">](../standard-library/string-typedefs.md#u32string)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>string&gt;</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>