<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9aa18b0d230fcd3b5888b958d0709f9b6c567d50</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard-library\ostrstream-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7dfe8a187996d69ce6e5d37e9852c63f19f33421</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fe8bd5c6c454e897f11d9ecc88fe6ac8e5b07b59</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>ostrstream Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ostrstream Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Describes an object that controls insertion of elements and encoded objects into a stream buffer of class <bpt id="p1">[</bpt>strstreambuf<ept id="p1">](../standard-library/strstreambuf-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The object stores an object of class <ph id="ph1">`strstreambuf`</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This class is deprecated.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Consider using <bpt id="p1">[</bpt>ostringstream<ept id="p1">](../standard-library/sstream-typedefs.md#ostringstream)</ept> or <bpt id="p2">[</bpt>wostringstream<ept id="p2">](../standard-library/sstream-typedefs.md#wostringstream)</ept> instead.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Constructors</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>ostrstream</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Constructs an object of type <ph id="ph1">`ostrstream`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Member Functions</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>freeze</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Causes a stream buffer to be unavailable through stream buffer operations.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>pcount</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Returns a count of the number of elements written to the controlled sequence.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>rdbuf</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the stream's associated <ph id="ph1">`strstreambuf`</ph> object.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>str</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Calls <bpt id="p1">[</bpt>freeze<ept id="p1">](../standard-library/strstreambuf-class.md#strstreambuf__freeze)</ept>, and then returns a pointer to the beginning of the controlled sequence.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> <ph id="ph1">\&lt;</ph>strstream&gt;</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Namespace:<ept id="p1">**</ept> std</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>ostrstream::freeze</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Causes a stream buffer to be unavailable through stream buffer operations.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`bool`</ph> indicating whether you want the stream to be frozen.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The member function calls <bpt id="p1">[</bpt>rdbuf<ept id="p1">](#ostrstream__rdbuf)</ept><ph id="ph1"> -&gt; </ph><bpt id="p2">[</bpt>freeze<ept id="p2">](../standard-library/strstreambuf-class.md#strstreambuf__freeze)</ept>(_ <bpt id="p3">*</bpt>Freezeit<ept id="p3">*</ept>).</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>strstream::freeze<ept id="p1">](../standard-library/strstreambuf-class.md#strstreambuf__freeze)</ept> for an example that uses <bpt id="p2">**</bpt>freeze<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>ostrstream::ostrstream</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Constructs an object of type <ph id="ph1">`ostrstream`</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The buffer.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The size of the buffer in bytes.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The input and output mode of the buffer.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>ios_base::openmode<ept id="p1">](../standard-library/ios-base-class.md#ios_base__openmode)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Both constructors initialize the base class by calling <bpt id="p1">[</bpt>ostream<ept id="p1">](../standard-library/ostream-typedefs.md#ostream)</ept>( <bpt id="p2">**</bpt>sb<ept id="p2">**</ept>), where <bpt id="p3">**</bpt>sb<ept id="p3">**</ept> is the stored object of class <bpt id="p4">[</bpt>strstreambuf<ept id="p4">](../standard-library/strstreambuf-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The first constructor also initializes <bpt id="p1">**</bpt>sb<ept id="p1">**</ept> by calling <ph id="ph1">`strstreambuf`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The second constructor initializes the base class one of two ways:</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`_Mode` &amp; </ph><bpt id="p1">**</bpt>ios_base::app<ept id="p1">**</ept>== 0, then <ph id="ph2">`ptr`</ph> must designate the first element of an array of <ph id="ph3">`count`</ph> elements, and the constructor calls <ph id="ph4">`strstreambuf`</ph>( <ph id="ph5">`ptr`</ph>, <ph id="ph6">`count`</ph>, <ph id="ph7">`ptr`</ph>).</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Otherwise, <ph id="ph1">`ptr`</ph> must designate the first element of an array of count elements that contains a C string whose first element is designated by <ph id="ph2">`ptr`</ph>, and the constructor calls <ph id="ph3">`strstreambuf`</ph>( <ph id="ph4">`ptr`</ph>, <ph id="ph5">`count`</ph>, <ph id="ph6">`ptr` + `strlen`</ph>( <ph id="ph7">`ptr`</ph>) ).</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>ostrstream::pcount</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Returns a count of the number of elements written to the controlled sequence.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The number of elements written to the controlled sequence.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The member function returns <bpt id="p1">[</bpt>rdbuf<ept id="p1">](#ostrstream__rdbuf)</ept><ph id="ph1"> -&gt; </ph><bpt id="p2">[</bpt>pcount<ept id="p2">](../standard-library/strstreambuf-class.md#strstreambuf__pcount)</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>strstream::pcount<ept id="p1">](../standard-library/strstreambuf-class.md#strstreambuf__pcount)</ept> for a sample that uses <ph id="ph1">`pcount`</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>ostrstream::rdbuf</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the stream's associated strstreambuf object.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A pointer to the stream's associated strstreambuf object.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The member function returns the address of the stored stream buffer of type <bpt id="p1">**</bpt>pointer<ept id="p1">**</ept> to <bpt id="p2">[</bpt>strstreambuf<ept id="p2">](../standard-library/strstreambuf-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>strstreambuf::pcount<ept id="p1">](../standard-library/strstreambuf-class.md#strstreambuf__pcount)</ept> for a sample that uses <ph id="ph1">`rdbuf`</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>ostrstream::str</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Calls <bpt id="p1">[</bpt>freeze<ept id="p1">](../standard-library/strstreambuf-class.md#strstreambuf__freeze)</ept>, and then returns a pointer to the beginning of the controlled sequence.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A pointer to the beginning of the controlled sequence.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The member function returns <bpt id="p1">[</bpt>rdbuf<ept id="p1">](#ostrstream__rdbuf)</ept><ph id="ph1"> -&gt; </ph><bpt id="p2">[</bpt>str<ept id="p2">](../standard-library/strstreambuf-class.md#strstreambuf__str)</ept>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>strstream::str<ept id="p1">](../standard-library/strstreambuf-class.md#strstreambuf__str)</ept> for a sample that uses <bpt id="p2">**</bpt>str<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>ostream</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Thread Safety in the C++ Standard Library</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>iostream Programming</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>iostreams Conventions</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>