<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">03f8129dad57cb632afcdb9ae76abb2780547df6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\build\reference\cl-invokes-the-linker.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">617f4f2af6bdc539d8029a72101efcb26b283416</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5af77f1c2c349cc5c702d871e1b4e5f2891f5fce</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CL Invokes the Linker | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CL Invokes the Linker</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>CL automatically invokes the linker after compiling unless the /c option is used.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>CL passes to the linker the names of .obj files created during compiling and the names of any other files specified on the command line.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The linker uses the options listed in the LINK environment variable.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can use the /link option to specify linker options on the CL command line.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Options that follow the /link option override those in the LINK environment variable.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The options in the following table suppress linking.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Option</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>/c</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Compile without linking</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>/E, /EP, /P</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Preprocess without compiling or linking</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>/Zg</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Generate function prototypes</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>/Zs</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Check syntax</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For further details about linking, see <bpt id="p1">[</bpt>Linker Options<ept id="p1">](../../build/reference/linker-options.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Assume that you are compiling three C source files: MAIN.c, MOD1.c, and MOD2.c.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Each file includes a call to a function defined in a different file:</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>MAIN.c calls the function <ph id="ph1">`func1`</ph> in MOD1.c and the function <ph id="ph2">`func2`</ph> in MOD2.c.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>MOD1.c calls the standard library functions <ph id="ph1">`printf_s`</ph> and <ph id="ph2">`scanf_s`</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>MOD2.c calls graphics functions named <ph id="ph1">`myline`</ph> and <ph id="ph2">`mycircle`</ph>, which are defined in a library named MYGRAPH.lib.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>To build this program, compile with the following command line:</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>CL first compiles the C source files and creates the object files MAIN.obj, MOD1.obj, and MOD2.obj.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The compiler places the name of the standard library in each .obj file.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more details, see <bpt id="p1">[</bpt>Use Run-Time Library<ept id="p1">](../../build/reference/md-mt-ld-use-run-time-library.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>CL passes the names of the .obj files, along with the name MYGRAPH.lib, to the linker.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The linker resolves the external references as follows:</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In MAIN.obj, the reference to <ph id="ph1">`func1`</ph> is resolved using the definition in MOD1.obj; the reference to <ph id="ph2">`func2`</ph> is resolved using the definition in MOD2.obj.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In MOD1.obj, the references to <ph id="ph1">`printf_s`</ph> and <ph id="ph2">`scanf_s`</ph> are resolved using the definitions in the library that the linker finds named within MOD1.obj.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In MOD2.obj, the references to <ph id="ph1">`myline`</ph> and <ph id="ph2">`mycircle`</ph> are resolved using the definitions in MYGRAPH.lib.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Compiler Options</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Setting Compiler Options</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>