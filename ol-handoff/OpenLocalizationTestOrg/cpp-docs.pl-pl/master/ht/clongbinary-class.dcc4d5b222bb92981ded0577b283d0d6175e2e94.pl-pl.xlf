<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">268db0e78906f61dab56bf4d16a300f7868c87b5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\clongbinary-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b4a0b2ec2bd7248a5d8b384a227e43046e473855</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eb1dd1507ff1b58be612b2426c0191e1b6ec13e7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CLongBinary Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CLongBinary Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Simplifies working with very large binary data objects (often called BLOBs, or "binary large objects") in a database.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>CLongBinary::CLongBinary</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CLongBinary`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Data Members</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>CLongBinary::m_dwDataLength</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Contains the actual size in bytes of the data object whose handle is stored in <ph id="ph1">`m_hData`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>CLongBinary::m_hData</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Contains a Windows <ph id="ph1">`HGLOBAL`</ph> handle to the actual image object.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, a record field in a SQL table might contain a bitmap representing a picture.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CLongBinary`</ph> object stores such an object and keeps track of its size.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In general, it is better practice now to use <bpt id="p1">[</bpt>CByteArray<ept id="p1">](../../mfc/reference/cbytearray-class.md)</ept> in conjunction with the <bpt id="p2">[</bpt>DFX_Binary<ept id="p2">](http://msdn.microsoft.com/library/678021a3-2e46-44d7-8528-71bb692dcc07)</ept> function.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can still use <ph id="ph1">`CLongBinary`</ph>, but in general <ph id="ph2">`CByteArray`</ph> provides more functionality under Win32, since there is no longer the size limitation encountered with 16-bit <ph id="ph3">`CByteArray`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This advice applies to programming with Data Access Objects (DAO) as well as Open Database Connectivity (ODBC).</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To use a <ph id="ph1">`CLongBinary`</ph> object, declare a field data member of type <ph id="ph2">`CLongBinary`</ph> in your recordset class.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This member will be an embedded member of the recordset class and will be constructed when the recordset is constructed.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>After the <ph id="ph1">`CLongBinary`</ph> object is constructed, the record field exchange (RFX) mechanism loads the data object from a field in the current record on the data source and stores it back to the record when the record is updated.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>RFX queries the data source for the size of the binary large object, allocates storage for it (via the <ph id="ph1">`CLongBinary`</ph> object's <ph id="ph2">`m_hData`</ph> data member), and stores an <ph id="ph3">`HGLOBAL`</ph> handle to the data in <ph id="ph4">`m_hData`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>RFX also stores the actual size of the data object in the <ph id="ph1">`m_dwDataLength`</ph> data member.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Work with the data in the object through <ph id="ph1">`m_hData`</ph>, using the same techniques you would normally use to manipulate the data stored in a Windows <ph id="ph2">`HGLOBAL`</ph> handle.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>When you destroy your recordset, the embedded <ph id="ph1">`CLongBinary`</ph> object is also destroyed, and its destructor deallocates the <ph id="ph2">`HGLOBAL`</ph> data handle.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information about large objects and the use of <ph id="ph1">`CLongBinary`</ph>, see the articles <bpt id="p1">[</bpt>Recordset (ODBC)<ept id="p1">](../../data/odbc/recordset-odbc.md)</ept> and <bpt id="p2">[</bpt>Recordset: Working with Large Data Items (ODBC)<ept id="p2">](../../data/odbc/recordset-working-with-large-data-items-odbc.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>CObject</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxdb_.h</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>CLongBinary::CLongBinary</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CLongBinary`</ph> object.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>CLongBinary::m_dwDataLength</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Stores the actual size in bytes of the data stored in the <ph id="ph1">`HGLOBAL`</ph> handle in <ph id="ph2">`m_hData`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This size may be smaller than the size of the memory block allocated for the data.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Call the Win32 <bpt id="p1">[</bpt>GLobalSize<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa366593)</ept> function to get the allocated size.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>CLongBinary::m_hData</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Stores a Windows <ph id="ph1">`HGLOBAL`</ph> handle to the actual binary large object data.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>CObject Class</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Hierarchy Chart</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>CRecordset Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>