<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3233901702ba5cceef1426322e157c934791c63a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\catlmap-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">28e4e47c1d309a3a34f0e8a27aa916fefd67ed94</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e50ac213153373264b5b79b452b1edd12d150b07</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CAtlMap Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CAtlMap Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class provides methods for creating and managing a map object.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The key element type.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>V</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The value element type.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The code used to copy or move key elements.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CElementTraits Class<ept id="p1">](../../atl/reference/celementtraits-class.md)</ept> for more details.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The code used to copy or move value elements.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Public Typedefs</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>CAtlMap::KINARGTYPE</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Type used when a key is passed as an input argument</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>CAtlMap::KOUTARGTYPE</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Type used when a key is returned as an output argument.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>CAtlMap::VINARGTYPE</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Type used when a value is passed as an input argument.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>CAtlMap::VOUTARGTYPE</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Type used when a value is passed as an output argument.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Public Classes</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>CAtlMap::CPair Class</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A class containing the key and value elements.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>CPair Data Members</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>CPair::m_key</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The data member storing the key element.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>CPair::m_value</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The data member storing the value element.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>CAtlMap::CAtlMap</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The constructor.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>CAtlMap::~CAtlMap</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The destructor.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>CAtlMap::AssertValid</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Call this method to cause an ASSERT if the <ph id="ph1">`CAtlMap`</ph> is not valid.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>CAtlMap::DisableAutoRehash</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Call this method to disable automatic rehashing of the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>CAtlMap::EnableAutoRehash</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Call this method to enable automatic rehashing of the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>CAtlMap::GetAt</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Call this method to return the element at a specified position in the map.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>CAtlMap::GetCount</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Call this method to retrieve the number of elements in the map.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>CAtlMap::GetHashTableSize</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Call this method to determine the number of bins in the map's hash table.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>CAtlMap::GetKeyAt</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Call this method to retrieve the key stored at the given position in the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>CAtlMap::GetNext</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Call this method to obtain a pointer to the next element pair stored in the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>CAtlMap::GetNextAssoc</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Gets the next element for iterating.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>CAtlMap::GetNextKey</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Call this method to retrieve the next key from the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>CAtlMap::GetNextValue</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Call this method to get the next value from the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>CAtlMap::GetStartPosition</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Call this method to start a map iteration.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>CAtlMap::GetValueAt</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Call this method to retrieve the value stored at a given position in the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>CAtlMap::InitHashTable</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Call this method to initialize the hash table.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>CAtlMap::IsEmpty</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Call this method to test for an empty map object.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>CAtlMap::Lookup</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Call this method to look up keys or values in the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>CAtlMap::Rehash</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Call this method to rehash the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>CAtlMap::RemoveAll</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Call this method to remove all elements from the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>CAtlMap::RemoveAtPos</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Call this method to remove the element at the given position in the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>CAtlMap::RemoveKey</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Call this method to remove an element from the <ph id="ph1">`CAtlMap`</ph> object, given the key.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>CAtlMap::SetAt</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Call this method to insert an element pair into the map.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>CAtlMap::SetOptimalLoad</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Call this method to set the optimal load of the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>CAtlMap::SetValueAt</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Call this method to change the value stored at a given position in the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Public Operators</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>CAtlMap::operator</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Replaces or adds a new element to the <ph id="ph1">`CAtlMap`</ph>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>provides support for a mapping array of any given type, managing an unordered array of key elements and their associated values.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Elements (consisting of a key and a value) are stored using a hashing algorithm, allowing a large amount of data to be efficiently stored and retrieved.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`KTraits`</ph> and <ph id="ph2">`VTraits`</ph> parameters are traits classes that contain any supplemental code needed to copy or move elements.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>An alternative to <ph id="ph1">`CAtlMap`</ph> is offered by the <bpt id="p1">[</bpt>CRBMap<ept id="p1">](../../atl/reference/crbmap-class.md)</ept> class.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>also stores key/value pairs, but exhibits different performance characteristics.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The time taken to insert an item, look up a key, or delete a key from a <ph id="ph1">`CRBMap`</ph> object is of order <bpt id="p1">*</bpt>log(n)<ept id="p1">*</ept>, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is the number of elements.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">`CAtlMap`</ph>, all of these operations typically take a constant time, although worst-case scenarios might be of order <bpt id="p1">*</bpt>n<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Therefore, in a typical case, <ph id="ph1">`CAtlMap`</ph> is faster.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The other difference between <ph id="ph1">`CRBMap`</ph> and <ph id="ph2">`CAtlMap`</ph> becomes apparent when iterating through the stored elements.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>In a <ph id="ph1">`CRBMap`</ph>, the elements are visited in a sorted order.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>In a <ph id="ph1">`CAtlMap`</ph>, the elements are not ordered, and no order can be inferred.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>When a small number of elements need to be stored, consider using the <bpt id="p1">[</bpt>CSimpleMap<ept id="p1">](../../atl/reference/csimplemap-class.md)</ept> class instead.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>ATL Collection Classes<ept id="p1">](../../atl/atl-collection-classes.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> atlcoll.h</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>CAtlMap::AssertValid</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Call this method to cause an ASSERT if the <ph id="ph1">`CAtlMap`</ph> object is not valid.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>In debug builds, this method will cause an ASSERT if the <ph id="ph1">`CAtlMap`</ph> object is not valid.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CAtlMap::CAtlMap<ept id="p1">](#catlmap__catlmap)</ept>.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>CAtlMap::CAtlMap</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The constructor.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The number of bins providing pointers to the stored elements.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>See Remarks later in this topic for an explanation of bins.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The optimal load ratio.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The lower threshold for the load ratio.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The upper threshold for the load ratio.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The block size.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>references all of its stored elements by first creating an index using a hashing algorithm on the key.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>This index references a "bin" which contains a pointer to the stored elements.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>If the bin is already in use, a linked-list is created to access the subsequent elements.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Traversing a list is slower than directly accessing the correct element, and so the map structure needs to balance storage requirements against performance.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The default parameters have been chosen to give good results in most cases.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The load ratio is the ratio of the number of bins to the number of elements stored in the map object.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>When the map structure is recalculated, the <bpt id="p1">*</bpt>fOptimalLoad<ept id="p1">*</ept> parameter value will be used to calculate the number of bins required.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>This value can be changed using the <bpt id="p1">[</bpt>CAtlMap::SetOptimalLoad<ept id="p1">](#catlmap__setoptimalload)</ept> method.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`fLoThreshold`</ph> parameter is the lower value that the load ratio can reach before <ph id="ph2">`CAtlMap`</ph> will recalculate the optimal size of the map.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`fHiThreshold`</ph> parameter is the upper value that the load ratio can reach before the <ph id="ph2">`CAtlMap`</ph> object will recalculate the optimal size of the map.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>This recalculation process (known as rehashing) is enabled by default.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>If you want to disable this process, perhaps when entering a lot of data at one time, call the <bpt id="p1">[</bpt>CAtlMap::DisableAutoRehash<ept id="p1">](#catlmap__disableautorehash)</ept> method.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Reactivate it with the <bpt id="p1">[</bpt>CAtlMap::EnableAutoRehash<ept id="p1">](#catlmap__enableautorehash)</ept> method.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`nBlockSize`</ph> parameter is a measure of the amount of memory allocated when a new element is required.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Larger block sizes reduce calls to memory allocation routines, but use more resources.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Before any data can be stored, it is necessary to initialize the hash table with a call to <bpt id="p1">[</bpt>CAtlMap::InitHashTable<ept id="p1">](#catlmap__inithashtable)</ept>.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Utilities#72</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>CAtlMap::~CAtlMap</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The destructor.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Frees any allocated resources.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>CAtlMap::CPair Class</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>A class containing the key and value elements.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>This class is used by the methods <bpt id="p1">[</bpt>CAtlMap::GetNext<ept id="p1">](#catlmap__getnext)</ept> and <bpt id="p2">[</bpt>CAtlMap::Lookup<ept id="p2">](#catlmap__lookup)</ept> to access the key and value elements stored in the mapping structure.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>CAtlMap::DisableAutoRehash</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Call this method to disable automatic rehashing of the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>When automatic rehashing is enabled (which it is by default), the number of bins in the hash table will automatically be recalculated if the load value (the ratio of the number of bins to the number of elements stored in the array) exceeds the maximum or minimum values specified at the time the map was created.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>is most useful when a large number of elements will be added to the map at once.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Instead of triggering the rehashing process every time the limits are exceeded, it is more efficient to call <ph id="ph1">`DisableAutoRehash`</ph>, add the elements, and finally call <bpt id="p1">[</bpt>CAtlMap::EnableAutoRehash<ept id="p1">](#catlmap__enableautorehash)</ept>.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>CAtlMap::EnableAutoRehash</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Call this method to enable automatic rehashing of the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>When automatic rehashing is enabled (which it is by default), the number of bins in the hash table will automatically be recalculated if the load value (the ratio of the number of bins to the number of elements stored in the array) exceeds the maximum or minimum values specified at the time the map is created.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>EnableAutoRefresh<ept id="p1">**</ept> is most often used after a call to <bpt id="p2">[</bpt>CAtlMap::DisableAutoRehash<ept id="p2">](#catlmap__disableautorehash)</ept>.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>CAtlMap::GetAt</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Call this method to return the element at a specified position in the map.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The position counter, returned by a previous call to <bpt id="p1">[</bpt>CAtlMap::GetNextAssoc<ept id="p1">](#catlmap__getnextassoc)</ept> or <bpt id="p2">[</bpt>CAtlMap::GetStartPosition<ept id="p2">](#catlmap__getstartposition)</ept>.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Template parameter specifying the type of the map's key.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>value</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Template parameter specifying the type of the map's value.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the current pair of key/value elements stored in the map.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>In debug builds, an assertion error will occur if <ph id="ph1">`pos`</ph> is equal to NULL.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>CAtlMap::GetCount</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Call this method to retrieve the number of elements in the map.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in the map object.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>A single element is a key/value pair.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CAtlMap::CAtlMap<ept id="p1">](#catlmap__catlmap)</ept>.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>CAtlMap::GetHashTableSize</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Call this method to determine the number of bins in the map's hash table.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Returns the number of bins in the hash table.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CAtlMap::CAtlMap<ept id="p1">](#catlmap__catlmap)</ept> for an explanation.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>CAtlMap::GetKeyAt</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Call this method to retrieve the key stored at the given position in the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The position counter, returned by a previous call to <bpt id="p1">[</bpt>CAtlMap::GetNextAssoc<ept id="p1">](#catlmap__getnextassoc)</ept> or <bpt id="p2">[</bpt>CAtlMap::GetStartPosition<ept id="p2">](#catlmap__getstartposition)</ept>.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Returns a reference to the key stored at the given position in the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CAtlMap::CAtlMap<ept id="p1">](#catlmap__catlmap)</ept>.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>CAtlMap::GetNext</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Call this method to obtain a pointer to the next element pair stored in the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The position counter, returned by a previous call to <bpt id="p1">[</bpt>CAtlMap::GetNextAssoc<ept id="p1">](#catlmap__getnextassoc)</ept> or <bpt id="p2">[</bpt>CAtlMap::GetStartPosition<ept id="p2">](#catlmap__getstartposition)</ept>.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the next pair of key/value elements stored in the map.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`pos`</ph> position counter is updated after each call.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>If the retrieved element is the last in the map, <ph id="ph1">`pos`</ph> is set to NULL.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>CAtlMap::GetNextAssoc</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Gets the next element for iterating.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The position counter, returned by a previous call to <bpt id="p1">[</bpt>CAtlMap::GetNextAssoc<ept id="p1">](#catlmap__getnextassoc)</ept> or <bpt id="p2">[</bpt>CAtlMap::GetStartPosition<ept id="p2">](#catlmap__getstartposition)</ept>.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Template parameter specifying the type of the map's key.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>value</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Template parameter specifying the type of the map's value.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`pos`</ph> position counter is updated after each call.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>If the retrieved element is the last in the map, <ph id="ph1">`pos`</ph> is set to NULL.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>CAtlMap::GetNextKey</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Call this method to retrieve the next key from the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The position counter, returned by a previous call to <bpt id="p1">[</bpt>CAtlMap::GetNextAssoc<ept id="p1">](#catlmap__getnextassoc)</ept> or <bpt id="p2">[</bpt>CAtlMap::GetStartPosition<ept id="p2">](#catlmap__getstartposition)</ept>.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Returns a reference to the next key in the map.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Updates the current position counter, <ph id="ph1">`pos`</ph>.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>If there are no more entries in the map, the position counter is set to NULL.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>CAtlMap::GetNextValue</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Call this method to get the next value from the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The position counter, returned by a previous call to <bpt id="p1">[</bpt>CAtlMap::GetNextAssoc<ept id="p1">](#catlmap__getnextassoc)</ept> or <bpt id="p2">[</bpt>CAtlMap::GetStartPosition<ept id="p2">](#catlmap__getstartposition)</ept>.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Returns a reference to the next value in the map.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Updates the current position counter, <ph id="ph1">`pos`</ph>.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>If there are no more entries in the map, the position counter is set to NULL.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CAtlMap::CAtlMap<ept id="p1">](#catlmap__catlmap)</ept>.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>CAtlMap::GetStartPosition</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Call this method to start a map iteration.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Returns the start position, or NULL is returned if the map is empty.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Call this method to start a map iteration by returning a <bpt id="p1">**</bpt>POSITION<ept id="p1">**</ept> value that can be passed to the <ph id="ph1">`GetNextAssoc`</ph> method.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The iteration sequence is not predictable</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CAtlMap::CAtlMap<ept id="p1">](#catlmap__catlmap)</ept>.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>CAtlMap::GetValueAt</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Call this method to retrieve the value stored at a given position in the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The position counter, returned by a previous call to <bpt id="p1">[</bpt>CAtlMap::GetNextAssoc<ept id="p1">](#catlmap__getnextassoc)</ept> or <bpt id="p2">[</bpt>CAtlMap::GetStartPosition<ept id="p2">](#catlmap__getstartposition)</ept>.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Returns a reference to the value stored at the given position in the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>CAtlMap::InitHashTable</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Call this method to initialize the hash table.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>The number of bins used by the hash table.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CAtlMap::CAtlMap<ept id="p1">](#catlmap__catlmap)</ept> for an explanation.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>A flag indication when memory should be allocated.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">**</bpt>true<ept id="p1">**</ept> on successful initialization, <bpt id="p2">**</bpt>false<ept id="p2">**</ept> on failure.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>must be called before any elements are stored in the hash table.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>If this method is not called explicitly, it will be called automatically the first time an element is added using the bin count specified by the <bpt id="p1">**</bpt>CAtlMap<ept id="p1">**</ept> constructor.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Otherwise, the map will be initialized using the new bin count specified by the <ph id="ph1">`nBins`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`bAllocNow`</ph> parameter is false, the memory required by the hash table will not be allocated until it is first required.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>This can be useful if it is uncertain if the map will be used.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CAtlMap::CAtlMap<ept id="p1">](#catlmap__catlmap)</ept>.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>CAtlMap::IsEmpty</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Call this method to test for an empty map object.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">**</bpt>true<ept id="p1">**</ept> if the map is empty, <bpt id="p2">**</bpt>false<ept id="p2">**</ept> otherwise.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>CAtlMap::KINARGTYPE</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Type used when a key is passed as an input argument.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>CAtlMap::KOUTARGTYPE</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Type used when a key is returned as an output argument.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>CAtlMap::Lookup</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Call this method to look up keys or values in the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Specifies the key that identifies the element to be looked up.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>value</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Variable that receives the looked-up value.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>The first form of the method returns true if the key is found, otherwise false.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>The second and third forms return a pointer to a <bpt id="p1">[</bpt>CPair<ept id="p1">](#catlmap__cpair_class)</ept> which can be used as a position for calls to <bpt id="p2">[</bpt>CAtlMap::GetNext<ept id="p2">](#catlmap__getnext)</ept> and so on.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>uses a hashing algorithm to quickly find the map element containing a key that exactly matches the given key parameter.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>CAtlMap::operator</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Replaces or adds a new element to the <ph id="ph1">`CAtlMap`</ph>.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>The key of the element to add or replace.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Returns a reference to the value associated with the given key.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>If the key already exists, the element is replaced.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>If the key does not exist, a new element is added.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CAtlMap::CAtlMap<ept id="p1">](#catlmap__catlmap)</ept>.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>CAtlMap::Rehash</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Call this method to rehash the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The new number of bins to use in the hash table.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CAtlMap::CAtlMap<ept id="p1">](#catlmap__catlmap)</ept> for an explanation.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`nBins`</ph> is 0, <ph id="ph2">`CAtlMap`</ph> calculates a reasonable number based on the number of elements in the map and the optimal load setting.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>Normally the rehashing process is automatic, but if <bpt id="p1">[</bpt>CAtlMap::DisableAutoRehash<ept id="p1">](#catlmap__disableautorehash)</ept> has been called, this method will perform the necessary resizing.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>CAtlMap::RemoveAll</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Call this method to remove all elements from the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Clears out the <ph id="ph1">`CAtlMap`</ph> object, freeing the memory used to store the elements.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>CAtlMap::RemoveAtPos</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>Call this method to remove the element at the given position in the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>The position counter, returned by a previous call to <bpt id="p1">[</bpt>CAtlMap::GetNextAssoc<ept id="p1">](#catlmap__getnextassoc)</ept> or <bpt id="p2">[</bpt>CAtlMap::GetStartPosition<ept id="p2">](#catlmap__getstartposition)</ept>.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Removes the key/value pair stored at the specified position.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>The memory used to store the element is freed.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>The POSITION referenced by <ph id="ph1">`pos`</ph> becomes invalid, and while the POSITION of any other elements in the map remains valid, they do not necessarily retain the same order.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>CAtlMap::RemoveKey</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>Call this method to remove an element from the <ph id="ph1">`CAtlMap`</ph> object, given the key.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>The key corresponding to the element pair you want to remove.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">**</bpt>true<ept id="p1">**</ept> if the key is found and removed, <bpt id="p2">**</bpt>false<ept id="p2">**</ept> on failure.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CAtlMap::CAtlMap<ept id="p1">](#catlmap__catlmap)</ept>.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>CAtlMap::SetAt</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Call this method to insert an element pair into the map.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>The key value to add to the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>value</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>The value to add to the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>Returns the position of the key/value element pair in the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>replaces an existing element if a matching key is found.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>If the key is not found, a new key/value pair is created.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>CAtlMap::SetOptimalLoad</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>Call this method to set the optimal load of the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>The optimal load ratio.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>The lower threshold for the load ratio.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>The upper threshold for the load ratio.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>Flag indicating if the hash table should be recalculated.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>This method redefines the optimal load value for the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CAtlMap::CAtlMap<ept id="p1">](#catlmap__catlmap)</ept> for a discussion of the various parameters.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`bRehashNow`</ph> is true, and the number of elements is outside the minimum and maximum values, the hash table is recalculated.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>CAtlMap::SetValueAt</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Call this method to change the value stored at a given position in the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>The position counter, returned by a previous call to <bpt id="p1">[</bpt>CAtlMap::GetNextAssoc<ept id="p1">](#catlmap__getnextassoc)</ept> or <bpt id="p2">[</bpt>CAtlMap::GetStartPosition<ept id="p2">](#catlmap__getstartposition)</ept>.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>value</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>The value to add to the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>Changes the value element stored at the given position in the <ph id="ph1">`CAtlMap`</ph> object.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>CAtlMap::VINARGTYPE</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>Type used when a value is passed as an input argument.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>CAtlMap::VOUTARGTYPE</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>Type used when a value is passed as an output argument.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>CAtlMap::CPair::m_key</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>The data member storing the key element.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>The key element type.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>CAtlMap::CPair::m_value</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>The data member storing the value element.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>V</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>The value element type.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Marquee Sample</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>UpdatePV Sample</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>Class Overview</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>