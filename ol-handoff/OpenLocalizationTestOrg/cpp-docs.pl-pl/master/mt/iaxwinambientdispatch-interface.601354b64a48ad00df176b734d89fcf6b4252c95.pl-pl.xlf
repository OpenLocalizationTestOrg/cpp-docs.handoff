<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f976fecd9c8b0343d56977de143a8093b8700fcf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\iaxwinambientdispatch-interface.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f80b261e85ace731782b14ca65dbc4eb7b991b40</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">93ab5624499e3e2b0c1764e014a4ca7f1c41314f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>IAxWinAmbientDispatch Interface | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>IAxWinAmbientDispatch Interface</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This interface provides methods for specifying characteristics of the hosted control or container.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This class and its members cannot be used in applications that execute in the <ph id="ph1">[!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Methods</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>get_AllowContextMenu<ept id="p1">](#iaxwinambientdispatch__get_allowcontextmenu)</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>AllowContextMenu<ept id="p1">**</ept> property specifies whether the hosted control is allowed to display its own context menu.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>get_AllowShowUI<ept id="p1">](#iaxwinambientdispatch__get_allowshowui)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>AllowShowUI<ept id="p1">**</ept> property specifies whether the hosted control is allowed to display its own user interface.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>get_AllowWindowlessActivation<ept id="p1">](#iaxwinambientdispatch__get_allowwindowlessactivation)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>AllowWindowlessActivation<ept id="p1">**</ept> property specifies whether the container will allow windowless activation.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>get_BackColor<ept id="p1">](#iaxwinambientdispatch__get_backcolor)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`BackColor`</ph> property specifies the ambient background color of the container.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>get_DisplayAsDefault<ept id="p1">](#iaxwinambientdispatch__get_displayasdefault)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>DisplayAsDefault<ept id="p1">**</ept> is an ambient property that allows a control to find out if it is the default control.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>get_DocHostDoubleClickFlags<ept id="p1">](#iaxwinambientdispatch__get_dochostdoubleclickflags)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>DocHostDoubleClickFlags<ept id="p1">**</ept> property specifies the operation that should take place in response to a double-click.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>get_DocHostFlags<ept id="p1">](#iaxwinambientdispatch__get_dochostflags)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>DocHostFlags<ept id="p1">**</ept> property specifies the user interface capabilities of the host object.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>get_Font<ept id="p1">](#iaxwinambientdispatch__get_font)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Font<ept id="p1">**</ept> property specifies the ambient font of the container.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>get_ForeColor<ept id="p1">](#iaxwinambientdispatch__get_forecolor)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ForeColor`</ph> property specifies the ambient foreground color of the container.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>get_LocaleID<ept id="p1">](#iaxwinambientdispatch__get_localeid)</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>LocaleID<ept id="p1">**</ept> property specifies the ambient locale ID of the container.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>get_MessageReflect<ept id="p1">](#iaxwinambientdispatch__get_messagereflect)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>MessageReflect<ept id="p1">**</ept> ambient property specifies whether the container will reflect messages to the hosted control.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>get_OptionKeyPath<ept id="p1">](#iaxwinambientdispatch__get_optionkeypath)</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>OptionKeyPath<ept id="p1">**</ept> property specifies the registry key path to user settings.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>get_ShowGrabHandles<ept id="p1">](#iaxwinambientdispatch__get_showgrabhandles)</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ShowGrabHandles<ept id="p1">**</ept> ambient property allows the control to find out if it should draw itself with grab handles.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>get_ShowHatching<ept id="p1">](#iaxwinambientdispatch__get_showhatching)</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ShowHatching<ept id="p1">**</ept> ambient property allows the control to find out if it should draw itself hatched.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>get_UserMode<ept id="p1">](#iaxwinambientdispatch__get_usermode)</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>UserMode<ept id="p1">**</ept> property specifies the ambient user mode of the container.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>put_AllowContextMenu<ept id="p1">](#iaxwinambientdispatch__put_allowcontextmenu)</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>AllowContextMenu<ept id="p1">**</ept> property specifies whether the hosted control is allowed to display its own context menu.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>put_AllowShowUI<ept id="p1">](#iaxwinambientdispatch__put_allowshowui)</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>AllowShowUI<ept id="p1">**</ept> property specifies whether the hosted control is allowed to display its own user interface.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>put_AllowWindowlessActivation<ept id="p1">](#iaxwinambientdispatch__put_allowwindowlessactivation)</ept></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>AllowWindowlessActivation<ept id="p1">**</ept> property specifies whether the container will allow windowless activation.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>put_BackColor<ept id="p1">](#iaxwinambientdispatch__put_backcolor)</ept></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`BackColor`</ph> property specifies the ambient background color of the container.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>put_DisplayAsDefault<ept id="p1">](#iaxwinambientdispatch__put_displayasdefault)</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>DisplayAsDefault<ept id="p1">**</ept> is an ambient property that allows a control to find out if it is the default control.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>put_DocHostDoubleClickFlags<ept id="p1">](#iaxwinambientdispatch__put_dochostdoubleclickflags)</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>DocHostDoubleClickFlags<ept id="p1">**</ept> property specifies the operation that should take place in response to a double-click.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>put_DocHostFlags<ept id="p1">](#iaxwinambientdispatch__put_dochostflags)</ept></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>DocHostFlags<ept id="p1">**</ept> property specifies the user interface capabilities of the host object.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>put_Font<ept id="p1">](#iaxwinambientdispatch__put_font)</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Font<ept id="p1">**</ept> property specifies the ambient font of the container.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>put_ForeColor<ept id="p1">](#iaxwinambientdispatch__put_forecolor)</ept></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ForeColor`</ph> property specifies the ambient foreground color of the container.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>put_LocaleID<ept id="p1">](#iaxwinambientdispatch__put_localeid)</ept></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>LocaleID<ept id="p1">**</ept> property specifies the ambient locale ID of the container.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>put_MessageReflect<ept id="p1">](#iaxwinambientdispatch__put_messagereflect)</ept></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>MessageReflect<ept id="p1">**</ept> ambient property specifies whether the container will reflect messages to the hosted control.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>put_OptionKeyPath<ept id="p1">](#iaxwinambientdispatch__put_optionkeypath)</ept></source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>OptionKeyPath<ept id="p1">**</ept> property specifies the registry key path to user settings.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>put_UserMode<ept id="p1">](#iaxwinambientdispatch__put_usermode)</ept></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>UserMode<ept id="p1">**</ept> property specifies the ambient user mode of the container.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This interface is exposed by ATL's ActiveX control hosting objects.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Call the methods on this interface to set the ambient properties available to the hosted control or to specify other aspects of the container's behavior.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>To supplement the properties provided by <ph id="ph1">`IAxWinAmbientDispatch`</ph>, use <bpt id="p1">[</bpt>IAxWinAmbientDispatchEx<ept id="p1">](../../atl/reference/iaxwinambientdispatchex-interface.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AXHost<ept id="p1">](https://msdn.microsoft.com/library/system.windows.forms.axhost.aspx)</ept> will try to load type information about <ph id="ph1">`IAxWinAmbientDispatch`</ph> and <ph id="ph2">`IAxWinAmbientDispatchEx`</ph> from the typelib that contains the code.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If you are linking to ATL90.dll, <bpt id="p1">**</bpt>AXHost<ept id="p1">**</ept> will load the type information from the typelib in the DLL.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Hosting ActiveX Controls Using ATL AXHost<ept id="p1">](../../atl/hosting-activex-controls-using-atl-axhost.md)</ept> for more details.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The definition of this interface is available in a number of forms, as shown in the table below.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Definition Type</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>File</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>IDL</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>atliface.idl</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Type Library</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>ATL.dll</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>C++</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>atliface.h (also included in ATLBase.h)</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iaxwinambientdispatch__get_allowcontextmenu"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAxWinAmbientDispatch::get_AllowContextMenu</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>AllowContextMenu<ept id="p1">**</ept> property specifies whether the hosted control is allowed to display its own context menu.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>pbAllowContextMenu<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>[out] The address of a variable to receive the current value of this property.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The ATL host object implementation uses <ph id="ph1">`VARIANT_TRUE`</ph> as the default value of this property.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iaxwinambientdispatch__get_allowshowui"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAxWinAmbientDispatch::get_AllowShowUI</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>AllowShowUI<ept id="p1">**</ept> property specifies whether the hosted control is allowed to display its own user interface.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>pbAllowShowUI<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>[out] The address of a variable to receive the current value of this property.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The ATL host object implementation uses <bpt id="p1">**</bpt>VARIANT_FALSE<ept id="p1">**</ept> as the default value of this property.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iaxwinambientdispatch__get_allowwindowlessactivation"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAxWinAmbientDispatch::get_AllowWindowlessActivation</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>AllowWindowlessActivation<ept id="p1">**</ept> property specifies whether the container will allow windowless activation.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>pbAllowWindowless<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>[out] The address of a variable to receive the current value of this property.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The ATL host object implementation uses <ph id="ph1">`VARIANT_TRUE`</ph> as the default value of this property.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iaxwinambientdispatch__get_backcolor"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAxWinAmbientDispatch::get_BackColor</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`BackColor`</ph> property specifies the ambient background color of the container.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>pclrBackground<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>[out] The address of a variable to receive the current value of this property.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The ATL host object implementation uses <bpt id="p1">**</bpt>COLOR_BTNFACE<ept id="p1">**</ept> or <bpt id="p2">**</bpt>COLOR_WINDOW<ept id="p2">**</ept> as the default value of this property (depending on whether the parent of the host window is a dialog or not).</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iaxwinambientdispatch__get_displayasdefault"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAxWinAmbientDispatch::get_DisplayAsDefault</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>DisplayAsDefault<ept id="p1">**</ept> is an ambient property that allows a control to find out if it is the default control.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>pbDisplayAsDefault<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>[out] The address of a variable to receive the current value of this property.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The ATL host object implementation uses <bpt id="p1">**</bpt>VARIANT_FALSE<ept id="p1">**</ept> as the default value of this property.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iaxwinambientdispatch__get_dochostdoubleclickflags"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAxWinAmbientDispatch::get_DocHostDoubleClickFlags</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>DocHostDoubleClickFlags<ept id="p1">**</ept> property specifies the operation that should take place in response to a double-click.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>pdwDocHostDoubleClickFlags<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>[out] The address of a variable to receive the current value of this property.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The ATL host object implementation uses <bpt id="p1">**</bpt>DOCHOSTUIDBLCLK_DEFAULT<ept id="p1">**</ept> as the default value of this property.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iaxwinambientdispatch__get_dochostflags"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAxWinAmbientDispatch::get_DocHostFlags</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>DocHostFlags<ept id="p1">**</ept> property specifies the user interface capabilities of the host object.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>pdwDocHostFlags<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>[out] The address of a variable to receive the current value of this property.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The ATL host object implementation uses <bpt id="p1">**</bpt>DOCHOSTUIFLAG_NO3DBORDER<ept id="p1">**</ept> as the default value of this property.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iaxwinambientdispatch__get_font"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAxWinAmbientDispatch::get_Font</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Font<ept id="p1">**</ept> property specifies the ambient font of the container.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>[out] The address of an <bpt id="p1">**</bpt>IFontDisp<ept id="p1">**</ept> interface pointer used to receive the current value of this property.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The ATL host object implementation uses the default GUI font or the system font as the default value of this property.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iaxwinambientdispatch__get_forecolor"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAxWinAmbientDispatch::get_ForeColor</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ForeColor`</ph> property specifies the ambient foreground color of the container.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>pclrForeground<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>[out] The address of a variable to receive the current value of this property.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The ATL host object implementation uses the system window text color as the default value of this property.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iaxwinambientdispatch__get_localeid"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAxWinAmbientDispatch::get_LocaleID</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>LocaleID<ept id="p1">**</ept> property specifies the ambient locale ID of the container.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>plcidLocaleID<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>[out] The address of a variable to receive the current value of this property.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The ATL host object implementation uses the user's default locale as the default value of this property.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>With this method you can discover the Ambient LocalID, that is, the LocaleID of the program your control is being used in.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Once you know the LocaleID, you can call code to load locale-specific captions, error message text, and so forth from a resource file or satellite DLL.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iaxwinambientdispatch__get_messagereflect"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAxWinAmbientDispatch::get_MessageReflect</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>MessageReflect<ept id="p1">**</ept> ambient property specifies whether the container will reflect messages to the hosted control.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>pbMessageReflect<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>[out] The address of a variable to receive the current value of this property.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The ATL host object implementation uses <ph id="ph1">`VARIANT_TRUE`</ph> as the default value of this property.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iaxwinambientdispatch__get_optionkeypath"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAxWinAmbientDispatch::get_OptionKeyPath</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>OptionKeyPath<ept id="p1">**</ept> property specifies the registry key path to user settings.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>pbstrOptionKeyPath<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>[out] The address of a variable to receive the current value of this property.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iaxwinambientdispatch__get_showgrabhandles"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAxWinAmbientDispatch::get_ShowGrabHandles</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ShowGrabHandles<ept id="p1">**</ept> ambient property allows the control to find out if it should draw itself with grab handles.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>pbShowGrabHandles<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>[out] The address of a variable to receive the current value of this property.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The ATL host object implementation always returns <bpt id="p1">**</bpt>VARIANT_FALSE<ept id="p1">**</ept> as the value of this property.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iaxwinambientdispatch__get_showhatching"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAxWinAmbientDispatch::get_ShowHatching</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ShowHatching<ept id="p1">**</ept> ambient property allows the control to find out if it should draw itself hatched.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>pbShowHatching<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>[out] The address of a variable to receive the current value of this property.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The ATL host object implementation always returns <bpt id="p1">**</bpt>VARIANT_FALSE<ept id="p1">**</ept> as the value of this property.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iaxwinambientdispatch__get_usermode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAxWinAmbientDispatch::get_UserMode</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>UserMode<ept id="p1">**</ept> property specifies the ambient user mode of the container.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>pbUserMode<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>[out] The address of a variable to receive the current value of this property.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The ATL host object implementation uses <ph id="ph1">`VARIANT_TRUE`</ph> as the default value of this property.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iaxwinambientdispatch__put_allowcontextmenu"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAxWinAmbientDispatch::put_AllowContextMenu</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>AllowContextMenu<ept id="p1">**</ept> property specifies whether the hosted control is allowed to display its own context menu.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>bAllowContextMenu<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>[in] The new value of this property.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The ATL host object implementation uses <ph id="ph1">`VARIANT_TRUE`</ph> as the default value of this property.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iaxwinambientdispatch__put_allowshowui"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAxWinAmbientDispatch::put_AllowShowUI</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>AllowShowUI<ept id="p1">**</ept> property specifies whether the hosted control is allowed to display its own user interface.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>bAllowShowUI<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>[in] The new value of this property.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The ATL host object implementation uses <bpt id="p1">**</bpt>VARIANT_FALSE<ept id="p1">**</ept> as the default value of this property.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iaxwinambientdispatch__put_allowwindowlessactivation"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAxWinAmbientDispatch::put_AllowWindowlessActivation</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>AllowWindowlessActivation<ept id="p1">**</ept> property specifies whether the container will allow windowless activation.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>bAllowWindowless<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>[in] The new value of this property.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The ATL host object implementation uses <ph id="ph1">`VARIANT_TRUE`</ph> as the default value of this property.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iaxwinambientdispatch__put_backcolor"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAxWinAmbientDispatch::put_BackColor</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`BackColor`</ph> property specifies the ambient background color of the container.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>clrBackground<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>[in] The new value of this property.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The ATL host object implementation uses <bpt id="p1">**</bpt>COLOR_BTNFACE<ept id="p1">**</ept> or <bpt id="p2">**</bpt>COLOR_WINDOW<ept id="p2">**</ept> as the default value of this property (depending on whether the parent of the host window is a dialog or not).</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iaxwinambientdispatch__put_displayasdefault"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAxWinAmbientDispatch::put_DisplayAsDefault</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>DisplayAsDefault<ept id="p1">**</ept> is an ambient property that allows a control to find out if it is the default control.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>[in] The new value of this property.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The ATL host object implementation uses <bpt id="p1">**</bpt>VARIANT_FALSE<ept id="p1">**</ept> as the default value of this property.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iaxwinambientdispatch__put_dochostdoubleclickflags"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAxWinAmbientDispatch::put_DocHostDoubleClickFlags</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>DocHostDoubleClickFlags<ept id="p1">**</ept> property specifies the operation that should take place in response to a double-click.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>dwDocHostDoubleClickFlags<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>[in] The new value of this property.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>The ATL host object implementation uses <bpt id="p1">**</bpt>DOCHOSTUIDBLCLK_DEFAULT<ept id="p1">**</ept> as the default value of this property.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iaxwinambientdispatch__put_dochostflags"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAxWinAmbientDispatch::put_DocHostFlags</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>DocHostFlags<ept id="p1">**</ept> property specifies the user interface capabilities of the host object.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>dwDocHostFlags<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>[in] The new value of this property.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>The ATL host object implementation uses <bpt id="p1">**</bpt>DOCHOSTUIFLAG_NO3DBORDER<ept id="p1">**</ept> as the default value of this property.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iaxwinambientdispatch__put_font"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAxWinAmbientDispatch::put_Font</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Font<ept id="p1">**</ept> property specifies the ambient font of the container.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>[in] The new value of this property.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>The ATL host object implementation uses the default GUI font or the system font as the default value of this property.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iaxwinambientdispatch__put_forecolor"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAxWinAmbientDispatch::put_ForeColor</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ForeColor`</ph> property specifies the ambient foreground color of the container.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>clrForeground<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>[in] The new value of this property.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>The ATL host object implementation uses the system window text color as the default value of this property.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iaxwinambientdispatch__put_localeid"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAxWinAmbientDispatch::put_LocaleID</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>LocaleID<ept id="p1">**</ept> property specifies the ambient locale ID of the container.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>lcidLocaleID<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>[in] The new value of this property.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The ATL host object implementation uses the user's default locale as the default value of this property.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iaxwinambientdispatch__put_messagereflect"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAxWinAmbientDispatch::put_MessageReflect</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>MessageReflect<ept id="p1">**</ept> ambient property specifies whether the container will reflect messages to the hosted control.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>[in] The new value of this property.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>The ATL host object implementation uses <ph id="ph1">`VARIANT_TRUE`</ph> as the default value of this property.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iaxwinambientdispatch__put_optionkeypath"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAxWinAmbientDispatch::put_OptionKeyPath</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>OptionKeyPath<ept id="p1">**</ept> property specifies the registry key path to user settings.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>bstrOptionKeyPath<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>[in] The new value of this property.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="iaxwinambientdispatch__put_usermode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  IAxWinAmbientDispatch::put_UserMode</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>UserMode<ept id="p1">**</ept> property specifies the ambient user mode of the container.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>[in] The new value of this property.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph> value.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>The ATL host object implementation uses <ph id="ph1">`VARIANT_TRUE`</ph> as the default value of this property.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IAxWinAmbientDispatchEx Interface<ept id="p1">](../../atl/reference/iaxwinambientdispatchex-interface.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>IAxWinHostWindow Interface<ept id="p1">](../../atl/reference/iaxwinhostwindow-interface.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CAxWindow::QueryHost<ept id="p1">](../../atl/reference/caxwindow-class.md#caxwindow__queryhost)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>AtlAxGetHost<ept id="p1">](http://msdn.microsoft.com/library/ad1f4f16-608d-4e96-8d30-04d4ca906a7b)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>