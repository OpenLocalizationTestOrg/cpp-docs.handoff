<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d376df1d1bc5f118c8353707a288c81f120bf4f0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard-library\piecewise-linear-distribution-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c538b2089d0584a5dced17413257aaf8d56cb297</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b3ae74c483b627eec5ce6800b6e865581026c51f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>piecewise_linear_distribution Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>piecewise_linear_distribution Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Generates a piecewise linear distribution that has varying-width intervals with linearly varying probability in each interval.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The floating point result type, defaults to <ph id="ph1">`double`</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For possible types, see <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>random&gt;<ept id="p1">](../standard-library/random.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This sampling distribution has varying-width intervals with linearly varying probability in each interval.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For information about other sampling distributions, see <bpt id="p1">[</bpt>piecewise_constant_distribution<ept id="p1">](../standard-library/piecewise-constant-distribution-class.md)</ept> and <bpt id="p2">[</bpt>discrete_distribution<ept id="p2">](../standard-library/discrete-distribution-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following table links to articles about individual members:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>piecewise_linear_distribution::piecewise_linear_distribution<ept id="p1">](#piecewise_linear_distribution__piecewise_linear_distribution)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>piecewise_linear_distribution::param_type<ept id="p1">](#piecewise_linear_distribution__param_type)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The property function <ph id="ph1">`intervals()`</ph> returns a <ph id="ph2">`vector&lt;RealType&gt;`</ph> with the set of stored intervals of the distribution.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The property function <ph id="ph1">`densities()`</ph> returns a <ph id="ph2">`vector&lt;RealType&gt;`</ph> with the stored densities for each interval set, which are calculated according to the weights provided in the constructor parameters.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For more information about distribution classes and their members, see <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>random&gt;<ept id="p1">](../standard-library/random.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Output</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> <ph id="ph1">\&lt;</ph>random&gt;</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Namespace:<ept id="p1">**</ept> std</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="piecewise_linear_distribution__piecewise_linear_distribution"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  piecewise_linear_distribution::piecewise_linear_distribution</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Constructs the distribution.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>An input iterator of the first element in the distribution range.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An input iterator of the last element in the distribution range.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An input iterator of the first element in the weights range.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">[</bpt>initializer_list<ept id="p1">](../cpp/initializers.md)</ept> with the intervals of the distribution.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The number of elements in the distribution range.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The lowest value in the distribution range.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The highest value in the distribution range.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Must be greater than <ph id="ph1">`xmin`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The object representing the probability function for the distribution.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Both the parameter and the return value must be convertible to <ph id="ph1">`double`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The parameter structure used to construct the distribution.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The default constructor sets the stored parameters such that there is one interval, 0 to 1, with a probability density of 1.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The iterator range constructor</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>constructs a distribution object with itnervals from iterators over the sequence [ <ph id="ph1">`firstI`</ph>, <ph id="ph2">`lastI`</ph>) and a matching weight sequence starting at <ph id="ph3">`firstW`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The initializer list constructor</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>constructs a distribution object with intervals from the intializer list <ph id="ph1">`intervals`</ph> and weights generated from the function <ph id="ph2">`weightfunc`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The constructor defined as</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>constructs a distribution object with <ph id="ph1">`count`</ph> intervals distributed uniformly over [ <ph id="ph2">`xmin,xmax`</ph>], assigning each interval weights according to the function <ph id="ph3">`weightfunc`</ph>, and <ph id="ph4">`weightfunc`</ph> must accept one parameter and have a return value, both of which are convertible to <ph id="ph5">`double`</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Precondition:<ept id="p1">**</ept><ph id="ph1">`xmin &lt; xmax`</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The constructor defined as</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>constructs a distribution object using <ph id="ph1">`parm`</ph> as the stored parameter structure.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="piecewise_linear_distribution__param_type"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  piecewise_linear_distribution::param_type</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Stores all the parameters of the distribution.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>See parent topic <bpt id="p1">[</bpt>piecewise_linear_distribution Class<ept id="p1">](../standard-library/piecewise-linear-distribution-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Precondition:<ept id="p1">**</ept> <ph id="ph1">`xmin &lt; xmax`</ph></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This structure can be passed to the distribution's class constructor at instantiation, to the <ph id="ph1">`param()`</ph> member function to set the stored parameters of an existing distribution, and to <ph id="ph2">`operator()`</ph> to be used in place of the stored parameters.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>random&gt;<ept id="p1">](../standard-library/random.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>