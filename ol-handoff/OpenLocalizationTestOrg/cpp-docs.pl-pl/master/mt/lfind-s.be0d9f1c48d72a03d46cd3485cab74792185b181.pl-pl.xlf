<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ec0ffca965e1d2f0fad2ee1bd4d551a10e234a01</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\reference\lfind-s.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">82952b9ce962f5650e1f0d44bb82164632750ec5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1acedf9cded65e4dd86e29f7074b31d261dd2830</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>_lfind_s | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>_lfind_s</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Performs a linear search for the specified key.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A version of <bpt id="p1">[</bpt>_lfind<ept id="p1">](../../c-runtime-library/reference/lfind.md)</ept> with security enhancements as described in <bpt id="p2">[</bpt>Security Features in the CRT<ept id="p2">](../../c-runtime-library/security-features-in-the-crt.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Object to search for.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Pointer to the base of search data.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Number of array elements.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Size of array elements in bytes.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Pointer to comparison routine.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The first parameter is the <ph id="ph1">`context`</ph> pointer.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The second parameter is a pointer to key for search.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The third parameter is a pointer to array element to be compared with key.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A pointer to an object that might be accessed in the comparison function.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If the key is found, <ph id="ph1">`_lfind_s`</ph> returns a pointer to the element of the array at <ph id="ph2">`base`</ph> that matches <ph id="ph3">`key`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If the key is not found, <ph id="ph1">`_lfind_s`</ph> returns <ph id="ph2">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If invalid parameters are passed to the function, the invalid parameter handler is invoked, as described in <bpt id="p1">[</bpt>Parameter Validation<ept id="p1">](../../c-runtime-library/parameter-validation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If execution is allowed to continue, <ph id="ph1">`errno`</ph> is set to <ph id="ph2">`EINVAL`</ph> and the function returns <ph id="ph3">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Error Conditions</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>key</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>base</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>compare</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>num</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>size</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>errno</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>!= 0</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>zero</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>an</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`_lfind_s`</ph> function performs a linear search for the value <ph id="ph2">`key`</ph> in an array of <ph id="ph3">`num`</ph> elements, each of <ph id="ph4">`width`</ph> bytes.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Unlike <ph id="ph1">`bsearch_s`</ph>, <ph id="ph2">`_lfind_s`</ph> does not require the array to be sorted.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`base`</ph> argument is a pointer to the base of the array to be searched.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`compare`</ph> argument is a pointer to a user-supplied routine that compares two array elements and then returns a value specifying their relationship.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`_lfind_s`</ph> calls the <ph id="ph2">`compare`</ph> routine one or more times during the search, passing the <ph id="ph3">`context`</ph> pointer and pointers to two array elements on each call.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`compare`</ph> routine must compare the elements then return nonzero (meaning that the elements are different) or 0 (meaning the elements are identical).</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`_lfind_s`</ph> is similar to <ph id="ph2">`_lfind`</ph> except for the addition of the <ph id="ph3">`context`</ph> pointer to the arguments of the comparison function and the parameter list of the function.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`context`</ph> pointer can be useful if the searched data structure is part of an object and the <ph id="ph2">`compare`</ph> function needs to access members of the object.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`compare`</ph> function can cast the void pointer into the appropriate object type and access members of that object.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The addition of the <ph id="ph1">`context`</ph> parameter makes <ph id="ph2">`_lfind_s`</ph> more secure because additional context can be used to avoid reentrancy bugs associated with using static variables to make data available to the <ph id="ph3">`compare`</ph> function.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Routine</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Required header</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>search.h&gt;</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For more compatibility information, see <bpt id="p1">[</bpt>Compatibility<ept id="p1">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>.NET Framework Equivalent</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.ArrayList.Contains%2A&gt;</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Searching and Sorting<ept id="p1">](../../c-runtime-library/searching-and-sorting.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>bsearch_s<ept id="p1">](../../c-runtime-library/reference/bsearch-s.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>_lsearch_s<ept id="p1">](../../c-runtime-library/reference/lsearch-s.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>qsort_s<ept id="p1">](../../c-runtime-library/reference/qsort-s.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>_lfind<ept id="p1">](../../c-runtime-library/reference/lfind.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>