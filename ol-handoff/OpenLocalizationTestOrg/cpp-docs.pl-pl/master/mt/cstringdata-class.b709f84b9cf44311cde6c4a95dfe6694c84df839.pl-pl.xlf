<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">96011849f0ca8ae404ab22e0847f68bb0a338529</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl-mfc-shared\reference\cstringdata-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a1d6c19cfa4ea0da1e729d03d31d8e6a5541bd84</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">860e54e8393916cdb8ad15971c1d2c7acef15ee4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CStringData Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CStringData Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class represents the data of a string object.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Methods</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AddRef<ept id="p1">](#cstringdata__addref)</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Increments the reference count of the string data object.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>data<ept id="p1">](#cstringdata__data)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Retrieves the character data of a string object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IsLocked<ept id="p1">](#cstringdata__islocked)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Determines if the buffer of the associated string object is locked.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IsShared<ept id="p1">](#cstringdata__isshared)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Determines if the buffer of the associated string object is currently shared.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Lock<ept id="p1">](#cstringdata__lock)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Locks the buffer of the associated string object.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Release<ept id="p1">](#cstringdata__release)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Releases the specified string object.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Unlock<ept id="p1">](#cstringdata__unlock)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Unlocks the buffer of the associated string object.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Data Members</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>nAllocLength<ept id="p1">](#cstringdata__nalloclength)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Length of allocated data in <ph id="ph1">`XCHAR`</ph>s (not including terminating null)</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>nDataLength<ept id="p1">](#cstringdata__ndatalength)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Length of currently used data in <ph id="ph1">`XCHAR`</ph>s (not including terminating null)</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>nRefs<ept id="p1">](#cstringdata__nrefs)</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The current reference count of the object.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>pStringMgr<ept id="p1">](#cstringdata__pstringmgr)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A pointer to the string manager of this string object.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This class should only be used by developers implementing custom string managers.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For more information on custom string managers, see <bpt id="p1">[</bpt>Memory Management and CStringT<ept id="p1">](../../atl-mfc-shared/memory-management-with-cstringt.md)</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This class encapsulates various types of information and data associated with a higher string object, such as <bpt id="p1">[</bpt>CStringT<ept id="p1">](../../atl-mfc-shared/reference/cstringt-class.md)</ept>, <bpt id="p2">[</bpt>CSimpleStringT<ept id="p2">](../../atl-mfc-shared/reference/csimplestringt-class.md)</ept>, or <bpt id="p3">[</bpt>CFixedStringT<ept id="p3">](../../atl-mfc-shared/reference/cfixedstringt-class.md)</ept> objects.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Every higher string object contains a pointer to its associated <ph id="ph1">`CStringData`</ph> object, allowing multiple string objects to point to the same string data object.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This relationship is represented by the reference count ( <ph id="ph1">`nRefs`</ph>) of the <ph id="ph2">`CStringData`</ph> object.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In certain cases, a string type (such as <bpt id="p1">**</bpt>CFixedString<ept id="p1">**</ept>) will not share a string data object with more than one higher string object.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For more information on this, see <bpt id="p1">[</bpt>Memory Management and CStringT<ept id="p1">](../../atl-mfc-shared/memory-management-with-cstringt.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This data is composed of:</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The memory manager (of type <bpt id="p1">[</bpt>IAtlStringMgr<ept id="p1">](../../atl-mfc-shared/reference/iatlstringmgr-class.md)</ept>) of the string.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The current length ( <bpt id="p1">[</bpt>nDataLength<ept id="p1">](#cstringdata__ndatalength)</ept>) of the string.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The allocated length ( <bpt id="p1">[</bpt>nAllocLength<ept id="p1">](#cstringdata__nalloclength)</ept>) of the string.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For performance reasons, this can differ from the current string length</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The current reference count ( <bpt id="p1">[</bpt>nRefs<ept id="p1">](#cstringdata__nrefs)</ept>) of the <ph id="ph1">`CStringData`</ph> object.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This value is used in determining how many string objects are sharing the same <ph id="ph1">`CStringData`</ph> object.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The actual character buffer ( <bpt id="p1">[</bpt>data<ept id="p1">](#cstringdata__data)</ept>) of the string.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The actual character buffer of the string object is allocated by the string manager and is appended to the <ph id="ph1">`CStringData`</ph> object.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> atlsimpstr.h</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cstringdata__addref"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CStringData::AddRef</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Increments the reference count of the string object.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Increments the reference count of the string object.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Do not call this method on a string with a negative reference count, since a negative count indicates that the string buffer is locked.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cstringdata__data"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CStringData::data</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the character buffer of a string object.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A pointer to the character buffer of the string object.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Call this function to return the current character buffer of the associated string object.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This buffer is not allocated by the <ph id="ph1">`CStringData`</ph> object but by the string manager when needed.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>When allocated, the buffer is appended to the string data object.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cstringdata__islocked"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CStringData::IsLocked</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Determines if the character buffer is locked.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">**</bpt>true<ept id="p1">**</ept> if the buffer is locked; otherwise <bpt id="p2">**</bpt>false<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Call this function to determine if the character buffer of a string object is currently locked.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cstringdata__isshared"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CStringData::IsShared</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Determines if the character buffer is shared.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">**</bpt>true<ept id="p1">**</ept> if the buffer is shared; otherwise <bpt id="p2">**</bpt>false<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Call this function to determine if the character buffer of a string data object is currently shared among multiple string objects.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cstringdata__lock"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CStringData::Lock</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Locks the character buffer of the associated string object.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Call this function to lock the character buffer of the string data object.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Locking and unlocking is used when direct access to the character buffer is required by the developer.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A good example of locking is demonstrated by the <bpt id="p1">[</bpt>LockBuffer<ept id="p1">](../../atl-mfc-shared/reference/csimplestringt-class.md#csimplestringt__lockbuffer)</ept> and <bpt id="p2">[</bpt>UnlockBuffer<ept id="p2">](../../atl-mfc-shared/reference/csimplestringt-class.md#csimplestringt__unlockbuffer)</ept> methods of <ph id="ph1">`CSimpleStringT`</ph>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A character buffer can only be locked if the buffer is not shared among higher string objects.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cstringdata__nalloclength"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CStringData::nAllocLength</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Length of the allocated character buffer.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Stores the length of the allocated data buffer in <ph id="ph1">`XCHAR`</ph>s (not including terminating null).</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cstringdata__ndatalength"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CStringData::nDataLength</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Current length of the string object.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Stores the length of currently used data in <ph id="ph1">`XCHAR`</ph>s (not including terminating null).</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cstringdata__nrefs"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CStringData::nRefs</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Reference count of the string data object.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Stores the reference count of the string data object.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This count indicates the number of higher string objects that are associated with the string data object.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>A negative value indicates that the string data object is currently locked.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cstringdata__pstringmgr"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CStringData::pStringMgr</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The memory manager of the associated string object.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Stores the memory manager for the associated string object.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>For more information on memory managers and strings, see <bpt id="p1">[</bpt>Memory Management and CStringT<ept id="p1">](../../atl-mfc-shared/memory-management-with-cstringt.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cstringdata__release"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CStringData::Release</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Decrements the reference count of the string data object.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Call this function to decrement the reference count, freeing the <ph id="ph1">`CStringData`</ph> structure if the reference count hits zero.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>This is commonly done when a string object is deleted, and therefore no longer needs to reference the string data object.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>For example, the following code would call <ph id="ph1">`CStringData::Release`</ph> for the string data object associated with <ph id="ph2">`str1`</ph>:</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_ATLMFC_Utilities#104<ept id="p2">](../../atl-mfc-shared/codesnippet/cpp/cstringdata-class_1.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cstringdata__unlock"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CStringData::Unlock</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Unlocks the character buffer of the associated string object.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Call this function to unlock the character buffer of the string data object.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Once a buffer is unlocked, it is shareable and can be reference counted.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Each call to <ph id="ph1">`Lock`</ph> must be matched by a corresponding call to <ph id="ph2">`Unlock`</ph>.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Locking and unlocking is used when the developer must ensure that the string data not be shared.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>A good example of locking is demonstrated by the <bpt id="p1">[</bpt>LockBuffer<ept id="p1">](../../atl-mfc-shared/reference/csimplestringt-class.md#csimplestringt__lockbuffer)</ept> and <bpt id="p2">[</bpt>UnlockBuffer<ept id="p2">](../../atl-mfc-shared/reference/csimplestringt-class.md#csimplestringt__unlockbuffer)</ept> methods of <ph id="ph1">`CSimpleStringT`</ph>.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Hierarchy Chart<ept id="p1">](../../mfc/hierarchy-chart.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>ATL/MFC Shared Classes<ept id="p1">](../../atl-mfc-shared/atl-mfc-shared-classes.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>