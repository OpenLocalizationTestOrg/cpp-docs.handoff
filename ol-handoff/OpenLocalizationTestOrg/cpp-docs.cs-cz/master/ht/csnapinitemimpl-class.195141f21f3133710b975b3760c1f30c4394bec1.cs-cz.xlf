<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">79b2a5be6e19480bd530ce54f2c0e4a069ad730a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\csnapinitemimpl-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">25200ae398d6c2aeada15c6b411b69ac06541414</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cd52dc3e2eff5bbd96015499f475e3dcc700ddd5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class provides methods for implementing a snap-in node object.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This class and its members cannot be used in applications that execute in the Windows Runtime.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Your class, derived from <ph id="ph1">`CSnapInItemImpl`</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>bIsExtension</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt>TRUE<ept id="p1">**</ept> if the object is a snap-in extension; otherwise <bpt id="p2">**</bpt>FALSE<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::CSnapInItemImpl</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Constructor.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::AddMenuItems</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Adds menu items to a context menu.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::Command</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Called by the console when a custom menu item is selected.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::CreatePropertyPages</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Adds pages to the property sheet of the snap-in.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::FillData</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Copies information on the snap-in object into a specified stream.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::GetResultPaneInfo</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Retrieves the <bpt id="p1">**</bpt>RESULTDATAITEM<ept id="p1">**</ept> structure of the snap-in.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::GetResultViewType</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Determines the type of view used by the result pane.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::GetScopePaneInfo</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Retrieves the <bpt id="p1">**</bpt>SCOPEDATAITEM<ept id="p1">**</ept> structure of the snap-in.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::Notify</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Called by the console to notify the snap-in of actions taken by the user.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::QueryPagesFor</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Called to see if the snap-in node supports property pages.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::SetMenuInsertionFlags</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Modifies the menu insertion flags for a snap-in object.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::SetToolbarButtonInfo</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Sets the information of the specified toolbar button.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::UpdateMenuState</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Updates the state of a context menu item.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::UpdateToolbarButton</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Updates the state of the specified toolbar button.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Public Data Members</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::m_bstrDisplayName</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The name of the snap-in object.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::m_resultDataItem</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The Windows <bpt id="p1">**</bpt>RESULTDATAITEM<ept id="p1">**</ept> structure used by the <ph id="ph1">`CSnapInItemImpl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::m_scopeDataItem</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The Windows <bpt id="p1">**</bpt>SCOPEDATAITEM<ept id="p1">**</ept> structure used by the <ph id="ph1">`CSnapInItemImpl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>provides a basic implementation for a snap-in node object, such as adding menu items and toolbars, and forwarding commands for the snap-in node to the appropriate handler function.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>These features are implemented using several different interfaces and map types.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The default implementation handles notifications sent to the node object by determining the correct instance of the derived class and then forwarding the message to the correct instance.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> atlsnap.h</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::AddMenuItems</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This method implements the Win32 function <bpt id="p1">[</bpt>IExtendContextMenu::AddMenuItems<ept id="p1">](http://msdn.microsoft.com/library/aa814841)</ept>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>piCallback</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>[in] Pointer to the <bpt id="p1">**</bpt>IContextMenuCallback<ept id="p1">**</ept> that can add items to the context menu.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>[in, out] Identifies Microsoft Management Console (MMC)-defined, menu-item insertion points that can be used.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This can be a combination of the following flags:</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CCM_INSERTIONALLOWED_TOP<ept id="p1">**</ept> Items can be inserted at the top of a context menu.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CCM_INSERTIONALLOWED_NEW<ept id="p1">**</ept> Items can be inserted in the Create New submenu.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CCM_INSERTIONALLOWED_TASK<ept id="p1">**</ept> Items can be inserted in the Task submenu.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CCM_INSERTIONALLOWED_VIEW<ept id="p1">**</ept> Items can be inserted in the toolbar view menu or in the View submenu of the result pane context menu.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>[in] Specifies the type of object.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>It can have one of the following values:</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CCT_SCOPE<ept id="p1">**</ept> Data object for scope pane context.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CCT_RESULT<ept id="p1">**</ept> Data object for result pane context.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CCT_SNAPIN_MANAGER<ept id="p1">**</ept> Data object for snap-in manager context.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CCT_UNINITIALIZED<ept id="p1">**</ept> Data object has an invalid type.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::Command</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This method implements the Win32 function <bpt id="p1">[</bpt>IExtendContextMenu::Command<ept id="p1">](http://msdn.microsoft.com/library/aa814842)</ept>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>lCommandID</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>[in] Specifies the command identifier of the menu item.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>[in] Specifies the type of object.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>It can have one of the following values:</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CCT_SCOPE<ept id="p1">**</ept> Data object for scope pane context.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CCT_RESULT<ept id="p1">**</ept> Data object for result pane context.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CCT_SNAPIN_MANAGER<ept id="p1">**</ept> Data object for snap-in manager context.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CCT_UNINITIALIZED<ept id="p1">**</ept> Data object has an invalid type.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::CreatePropertyPages</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>This method implements the Win32 function <bpt id="p1">[</bpt>IExtendPropertySheet::CreatePropertyPages<ept id="p1">](http://msdn.microsoft.com/library/aa814846)</ept>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>lpProvider</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>[in] Pointer to the <bpt id="p1">**</bpt>IPropertySheetCallback<ept id="p1">**</ept> interface.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>handle</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>[in] Specifies the handle used to route the <bpt id="p1">**</bpt>MMCN_PROPERTY_CHANGE<ept id="p1">**</ept> notification message to the appropriate data class.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>pUnk</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>[in] Pointer to the <bpt id="p1">**</bpt>IExtendPropertySheet<ept id="p1">**</ept> interface on the object that contains context information about the node.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>[in] Specifies the type of object.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>It can have one of the following values:</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CCT_SCOPE<ept id="p1">**</ept> Data object for scope pane context.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CCT_RESULT<ept id="p1">**</ept> Data object for result pane context.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CCT_SNAPIN_MANAGER<ept id="p1">**</ept> Data object for snap-in manager context.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CCT_UNINITIALIZED<ept id="p1">**</ept> Data object has an invalid type.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::CSnapInItemImpl</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CSnapInItemImpl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::FillData</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>This function is called to retrieve information about the item.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>[in] The format (text, rich text, or rich text with OLE items) of the Clipboard.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>[in] A pointer to the stream containing the object data.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>To properly implement this function, copy the correct information into the stream ( <ph id="ph1">`pStream`</ph>), depending on the Clipboard format indicated by <ph id="ph2">`cf`</ph>.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::GetResultViewType</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Call this function to retrieve the type of view for the result pane of the snap-in object.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>ppViewType</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>[out] Pointer to the address of the returned view type.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>pViewOptions</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>[out] Pointer to the <bpt id="p1">**</bpt>MMC_VIEW_OPTIONS<ept id="p1">**</ept> enumeration, which provides the console with options specified by the owning snap-in.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>This value can be one of the following:</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MMC_VIEW_OPTIONS_NOLISTVIEWS<ept id="p1">**</ept> = 0x00000001   Tells the console to refrain from presenting standard list view choices in the <bpt id="p2">**</bpt>View<ept id="p2">**</ept> menu.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Allows the snap-in to display its own custom views only in the result view pane.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>This is the only option flag defined at this time.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MMC_VIEW_OPTIONS_NONE<ept id="p1">**</ept> = 0   Allows the default view options.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::GetScopePaneInfo</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Call this function to retrieve the <bpt id="p1">**</bpt>SCOPEDATAITEM<ept id="p1">**</ept> structure of the snap-in.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>pScopeDataItem</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>[out] A pointer to the <bpt id="p1">**</bpt>SCOPEDATAITEM<ept id="p1">**</ept> structure of the <ph id="ph1">`CSnapInItemImpl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::GetResultPaneInfo</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Call this function to retrieve the <bpt id="p1">**</bpt>RESULTDATAITEM<ept id="p1">**</ept> structure of the snap-in.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>pResultDataItem</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>[out] A pointer to the <bpt id="p1">**</bpt>RESULTDATAITEM<ept id="p1">**</ept> structure of the <ph id="ph1">`CSnapInItemImpl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::m_bstrDisplayName</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Contains the string displayed for the node item.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::m_scopeDataItem</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`SCOPEDATAITEM`</ph> structure of the snap-in data object.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::m_resultDataItem</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>RESULTDATAITEM<ept id="p1">](http://msdn.microsoft.com/library/aa815165)</ept> structure of the snap-in data object.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::Notify</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Called when the snap-in object is acted upon by the user.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>[in] Identifies an action taken by a user.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The following notifications are possible:</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MMCN_ACTIVATE<ept id="p1">**</ept> Sent when a window is being activated and deactivated.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MMCN_ADD_IMAGES<ept id="p1">**</ept> Sent to add images to the result pane.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MMCN_BTN_CLICK<ept id="p1">**</ept> Sent when the user clicks one of the toolbar buttons.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MMCN_CLICK<ept id="p1">**</ept> Sent when a user clicks a mouse button on a list view item.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MMCN_DBLCLICK<ept id="p1">**</ept> Sent when a user double clicks a mouse button on a list view item.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MMCN_DELETE<ept id="p1">**</ept> Sent to inform the snap-in that the object should be deleted.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MMCN_EXPAND<ept id="p1">**</ept> Sent when a folder needs to be expanded or contracted.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MMCN_MINIMIZED<ept id="p1">**</ept> Sent when a window is being minimized or maximized.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MMCN_PROPERTY_CHANGE<ept id="p1">**</ept> Sent to notify a snap-in object that the snap-in object's view is about to change.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MMCN_REMOVE_CHILDREN<ept id="p1">**</ept> Sent when the snap-in must delete the entire subtree it has added below the specified node.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MMCN_RENAME<ept id="p1">**</ept> Sent the first time to query for a rename and the second time to do the rename.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MMCN_SELECT<ept id="p1">**</ept> Sent when an item in the scope or result view pane is selected.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MMCN_SHOW<ept id="p1">**</ept> Sent when a scope item is selected or deselected for the first time.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MMCN_VIEW_CHANGE<ept id="p1">**</ept> Sent when the snap-in can update all views when a change occurs.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>[in] Depends on the notification type.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>[in] Depends on the notification type.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>pComponentData</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>[out] A pointer to the object implementing <bpt id="p1">**</bpt>IComponentData<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>This parameter is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> if the notification is not being forwarded from <bpt id="p2">**</bpt>IComponentData::Notify<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>pComponent</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>[out] A pointer to the object that implements <bpt id="p1">**</bpt>IComponent<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>This parameter is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> if the notification is not being forwarded from <bpt id="p2">**</bpt>IComponent::Notify<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>[in] Specifies the type of object.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>It can have one of the following values:</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CCT_SCOPE<ept id="p1">**</ept> Data object for scope pane context.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CCT_RESULT<ept id="p1">**</ept> Data object for result pane context.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CCT_SNAPIN_MANAGER<ept id="p1">**</ept> Data object for snap-in manager context.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CCT_UNINITIALIZED<ept id="p1">**</ept> Data object has an invalid type.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::QueryPagesFor</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Called to see if the snap-in node supports property pages.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::SetMenuInsertionFlags</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Call this function to modify the menu insertion flags, specified by <ph id="ph1">`pInsertionAllowed`</ph>, for the snap-in object.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>bBeforeInsertion</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>[in] Nonzero if the function should be called before items are added to the context menu; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>[in, out] Identifies Microsoft Management Console (MMC)-defined, menu-item insertion points that can be used.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>This can be a combination of the following flags:</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CCM_INSERTIONALLOWED_TOP<ept id="p1">**</ept> Items can be inserted at the top of a context menu.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CCM_INSERTIONALLOWED_NEW<ept id="p1">**</ept> Items can be inserted in the Create New submenu.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CCM_INSERTIONALLOWED_TASK<ept id="p1">**</ept> Items can be inserted in the Task submenu.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CCM_INSERTIONALLOWED_VIEW<ept id="p1">**</ept> Items can be inserted in the toolbar view menu or in the View submenu of the result pane context menu.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>If you are developing a primary snap-in, you can reset any of the insertion flags as a way of restricting the kind of menu items that a third-party extension can add.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>For example, the primary snap-in can clear the <bpt id="p1">**</bpt>CCM_INSERTIONALLOWED_NEW<ept id="p1">**</ept> flag to prevent extensions from adding their own Create New menu items.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>You should not attempt to set bits in <ph id="ph1">`pInsertionAllowed`</ph> that were originally cleared.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Future versions of MMC may use bits not currently defined so you should not change bits that are currently not defined.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::SetToolbarButtonInfo</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Call this function to modify any toolbar button styles, of the snap-in object, before the toolbar is created.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>[in] The ID of the toolbar button to be set.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>[in] The state flags of the button.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Can be one or more of the following:</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The button has the <bpt id="p1">**</bpt>TBSTYLE_CHECKED<ept id="p1">**</ept> style and is being pressed.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The button accepts user input.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>A button that does not have this state does not accept user input and is grayed.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The button is not visible and cannot receive user input.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The button is grayed.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The button is being pressed.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>A line break follows the button.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The button must also have the <ph id="ph1">`TBSTATE_ENABLED`</ph>.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>fsType</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>[in] The state flags of the button.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Can be one or more of the following:</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Creates a standard push button.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Creates a button that toggles between the pressed and not-pressed states each time the user clicks it.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The button has a different background color when it is in the pressed state.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Creates a check button that stays pressed until another button in the group is pressed.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Creates a button that stays pressed until another button in the group is pressed.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Creates a separator, providing a small gap between button groups.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>A button that has this style does not receive user input.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::UpdateMenuState</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Call this function to modify a menu item before it is inserted into the context menu of the snap-in object.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>[in] The ID of the menu item to be set.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>[in] A pointer to the string for the menu item to be updated.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>[in] Specifies the new state flags.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>This can be a combination of the following flags:</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MF_POPUP<ept id="p1">**</ept> Specifies that this is a submenu within the context menu.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Menu items, insertion points, and further submenus may be added to this submenu using its <bpt id="p1">**</bpt>lCommandID<ept id="p1">**</ept> as their <bpt id="p2">**</bpt>IInsertionPointID<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MF_BITMAP<ept id="p1">**</ept> and <ph id="ph1">`MF_OWNERDRAW`</ph> These flags are not permitted and will result in a return value of <ph id="ph2">`E_INVALIDARG`</ph>.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MF_SEPARATOR<ept id="p1">**</ept> Draws a horizontal dividing line.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Only <bpt id="p1">**</bpt>IContextMenuProvider<ept id="p1">**</ept> is allowed to add menu items with <bpt id="p2">**</bpt>MF_SEPARATOR<ept id="p2">**</ept> set.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MF_CHECKED<ept id="p1">**</ept> Places a check mark next to the menu item.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MF_DISABLED<ept id="p1">**</ept> Disables the menu item so it cannot be selected, but the flag does not gray it.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Enables the menu item so it can be selected, restoring it from its grayed state.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MF_GRAYED<ept id="p1">**</ept> Disables the menu item, graying it so it cannot be selected.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MF_MENUBARBREAK<ept id="p1">**</ept> Functions the same as the <bpt id="p2">**</bpt>MF_MENUBREAK<ept id="p2">**</ept> flag for a menu bar.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>For a drop-down menu, submenu, or shortcut menu, the new column is separated from the old column by a vertical line.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MF_MENUBREAK<ept id="p1">**</ept> Places the item on a new line (for a menu bar) or in a new column (for a drop-down menu, submenu, or shortcut menu) without separating columns.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MF_UNCHECKED<ept id="p1">**</ept> Does not place a check mark next to the item (default).</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The following groups of flags cannot be used together:</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MF_DISABLED<ept id="p1">**</ept>, <ph id="ph1">`MF_ENABLED`</ph>, and <bpt id="p2">**</bpt>MF_GRAYED<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MF_MENUBARBREAK<ept id="p1">**</ept> and <bpt id="p2">**</bpt>MF_MENUBREAK<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MF_CHECKED<ept id="p1">**</ept> and <bpt id="p2">**</bpt>MF_UNCHECKED<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>CSnapInItemImpl::UpdateToolbarButton</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Call this function to modify a toolbar button, of the snap-in object, before it is displayed.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Specifies the button ID of the toolbar button to be updated.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Specifies a toolbar button state.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>If this state is to be set, return <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>This can be a combination of the following flags:</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ENABLED<ept id="p1">**</ept> The button accepts user input.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>A button that does not have this state does not accept user input and is grayed.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CHECKED<ept id="p1">**</ept> The button has the <bpt id="p2">**</bpt>CHECKED<ept id="p2">**</ept> style and is being pressed.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>HIDDEN<ept id="p1">**</ept> The button is not visible and cannot receive user input.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>INDETERMINATE<ept id="p1">**</ept> The button is grayed.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>BUTTONPRESSED<ept id="p1">**</ept> The button is being pressed.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Class Overview</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>