<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a425865c36179326d18943cadabbef0b1fc3146d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\text\locales-and-code-pages.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dc1b4b25a39cbda32cb38caabfa312e767c6be73</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ab9e63e5d097af65366631f30345db61b7c47132</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Locales and Code Pages | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Locales and Code Pages</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A locale ID reflects the local conventions and language for a particular geographical region.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A given language might be spoken in more than one country/region; for example, Portuguese is spoken in Brazil as well as in Portugal.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Conversely, a country/region might have more than one official language.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For example, Canada has two languages: English and French.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Thus, Canada has two distinct locales: Canadian-English and Canadian-French.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Some locale-dependent categories include the formatting of dates and the display format for monetary values.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The language determines the text and data formatting conventions, while the country/region determines the local conventions.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Every language has a unique mapping, represented by code pages, which includes characters other than those in the alphabet (such as punctuation marks and numbers).</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A code page is a character set and is related to the language.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>As such, a <bpt id="p1">[</bpt>locale<ept id="p1">](../c-runtime-library/locale.md)</ept> is a unique combination of language, country/region, and code page.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The locale and code page setting can be changed at run time by calling the <bpt id="p1">[</bpt>setlocale<ept id="p1">](../c-runtime-library/reference/setlocale-wsetlocale.md)</ept> function.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Different languages might use different code pages.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, the ANSI code page 1252 is used for English and most European languages, and the ANSI code page 932 is used for Japanese Kanji.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Virtually all code pages share the ASCII character set for the lowest 128 characters (0x00 to 0x7F).</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Any single-byte code page can be represented in a table (with 256 entries) as a mapping of byte values to characters (including numbers and punctuation marks), or glyphs.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Any multibyte code page can also be represented as a very large table (with 64K entries) of double-byte values to characters.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In practice, however, it are usually represented as a table for the first 256 (single-byte) characters and as ranges for the double-byte values.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For more information about code pages, see <bpt id="p1">[</bpt>Code Pages<ept id="p1">](../c-runtime-library/code-pages.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The C run-time library has two types of internal code pages: locale and multibyte.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can change the current code page during program execution (see the documentation for the <bpt id="p1">[</bpt>setlocale<ept id="p1">](../c-runtime-library/reference/setlocale-wsetlocale.md)</ept> and <bpt id="p2">[</bpt>_setmbcp<ept id="p2">](../c-runtime-library/reference/setmbcp.md)</ept> functions).</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Also, the run-time library might obtain and use the value of the operating system code page.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In Windows 2000, the operating system code page is the "system default ANSI" code page.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This code page is constant for the duration of the program's execution.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When the locale code page changes, the behavior of the locale-dependent set of functions changes to that dictated by the chosen code page.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>By default, all locale-dependent functions begin execution with a locale code page unique to the "C" locale.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can change the internal locale code page (as well as other locale-specific properties) by calling the <ph id="ph1">`setlocale`</ph> function.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A call to <ph id="ph1">`setlocale`</ph>(LC_ALL, "") sets the locale to that indicated by the operating system user locale.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Similarly, when the multibyte code page changes, the behavior of the multibyte functions changes to that dictated by the chosen code page.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>By default, all multibyte functions begin execution with a multibyte code page corresponding to the operating system's default code page.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You can change the internal multibyte code page by calling the <ph id="ph1">`_setmbcp`</ph> function.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The C run-time function <ph id="ph1">`setlocale`</ph> sets, changes, or queries some or all of the current program's locale information.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>_wsetlocale<ept id="p1">](../c-runtime-library/reference/setlocale-wsetlocale.md)</ept> routine is a wide-character version of <ph id="ph1">`setlocale`</ph>; the arguments and return values of <ph id="ph2">`_wsetlocale`</ph> are wide-character strings.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Unicode and MBCS</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Benefits of Character Set Portability</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>