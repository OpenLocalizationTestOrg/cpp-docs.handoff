<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d51596a70b0b79d39fee3095fc2b28fdd7c697f3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard-library\atomic-flag-structure.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">15e1196a8fd4b8c2e24517df86d2fef7dcb9ff8f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2bdd995264814d07464b7275fda67fedca65d931</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>atomic_flag Structure | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>atomic_flag Structure</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Describes an object that atomically sets and clears a <ph id="ph1">`bool`</ph> flag.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Operations on atomic flags are always lock-free.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>atomic_flag::clear Method</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Sets the stored flag to <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>atomic_flag::test_and_set Method</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Sets the stored flag to <ph id="ph1">`true`</ph> and returns the initial flag value.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>objects can be passed to the non-member functions <bpt id="p1">[</bpt>atomic_flag_clear<ept id="p1">](../standard-library/atomic-functions.md#atomic_flag_clear_function)</ept>, <bpt id="p2">[</bpt>atomic_flag_clear_explicit<ept id="p2">](../standard-library/atomic-functions.md#atomic_flag_clear_explicit_function)</ept>, <bpt id="p3">[</bpt>atomic_flag_test_and_set<ept id="p3">](../standard-library/atomic-functions.md#atomic_flag_test_and_set_function)</ept>, and <bpt id="p4">[</bpt>atomic_flag_test_and_set_explicit<ept id="p4">](../standard-library/atomic-functions.md#atomic_flag_test_and_set_explicit_function)</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>They can be initialized by using the value <ph id="ph1">`ATOMIC_FLAG_INIT`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> atomic</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Namespace:<ept id="p1">**</ept> std</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>atomic_flag::clear Method</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Sets the <ph id="ph1">`bool`</ph> flag that is stored in <ph id="ph2">`*this`</ph> to <ph id="ph3">`false`</ph>, within the specified <bpt id="p1">[</bpt>memory_order<ept id="p1">](../standard-library/atomic-enums.md#memory_order_enum)</ept> constraints.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>memory_order<ept id="p1">](../standard-library/atomic-enums.md#memory_order_enum)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>atomic_flag::test_and_set Method</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Sets the <ph id="ph1">`bool`</ph> flag that is stored in <ph id="ph2">`*this`</ph> to <ph id="ph3">`true`</ph>, within the specified <bpt id="p1">[</bpt>memory_order<ept id="p1">](../standard-library/atomic-enums.md#memory_order_enum)</ept> constraints.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>memory_order<ept id="p1">](../standard-library/atomic-enums.md#memory_order_enum)</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The initial value of the flag that is stored in <ph id="ph1">`*this`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>atomic&gt;</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>