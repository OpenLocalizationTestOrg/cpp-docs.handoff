<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ed03f6e864e9d1d260250ec5ae8b442ee6caaede</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\build\reference\building-an-import-library-and-export-file.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">47d96bffd67b8e30e46f6995f4bb07a398fd831f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7a2ea121b326d06c461e74b494bd2c759438add4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Building an Import Library and Export File | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Building an Import Library and Export File</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To build an import library and export file, use the following syntax:</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When /DEF is specified, LIB creates the output files from export specifications that are passed in the LIB command.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>There are three methods for specifying exports, listed in recommended order of use:</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>__declspec(dllexport)<ept id="p1">**</ept> definition in one of the <bpt id="p2">*</bpt>objfiles<ept id="p2">*</ept> or <bpt id="p3">*</bpt>libraries<ept id="p3">*</ept></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A specification of /EXPORT:<bpt id="p1">*</bpt>name<ept id="p1">*</ept> on the LIB command line</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A definition in an <bpt id="p1">**</bpt>EXPORTS<ept id="p1">**</ept> statement in a</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>These are the same methods you use to specify exports when linking an exporting program.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A program can use more than one method.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can specify parts of the LIB command (such as multiple <bpt id="p1">*</bpt>objfiles<ept id="p1">*</ept> or /EXPORT specifications) in a command file in the LIB command, just as you can in a LINK command.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following options apply to building an import library and export file:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>/OUT: <bpt id="p1">*</bpt>import<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Overrides the default output file name for the <bpt id="p1">*</bpt>import<ept id="p1">*</ept> library being created.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When /OUT is not specified, the default name is the base name of the first object file or library in the LIB command and the extension .lib.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The export file is given the same base name as the import library and the extension .exp.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>/EXPORT: <bpt id="p1">*</bpt>entryname<ept id="p1">*</ept>[= <bpt id="p2">*</bpt>internalname<ept id="p2">*</ept>][,@ <ph id="ph1">`ordinal`</ph>[, <bpt id="p3">**</bpt>NONAME<ept id="p3">**</ept>]][, <bpt id="p4">**</bpt>DATA<ept id="p4">**</ept>]</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Exports a function from your program to allow other programs to call the function.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can also export data (using the <bpt id="p1">**</bpt>DATA<ept id="p1">**</ept> keyword).</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Exports are usually defined in a DLL.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>entryname<ept id="p1">*</ept> is the name of the function or data item as it is to be used by the calling program.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Optionally, you can specify the <bpt id="p1">*</bpt>internalname<ept id="p1">*</ept> as the function known in the defining program; by default, <bpt id="p2">*</bpt>internalname<ept id="p2">*</ept> is the same as <bpt id="p3">*</bpt>entryname<ept id="p3">*</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ordinal`</ph> specifies an index into the export table in the range 1 through 65,535; if you do not specify <ph id="ph2">`ordinal`</ph>, LIB assigns one.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>NONAME<ept id="p1">**</ept> keyword exports the function only as an ordinal, without an <bpt id="p2">*</bpt>entryname<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>DATA<ept id="p1">**</ept> keyword is used to export data-only objects.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>/INCLUDE:</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Adds the specified symbol to the symbol table.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This option is useful for forcing the use of a library object that otherwise would not be included.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Note that if you create your import library in a preliminary step, before creating your .dll, you must pass the same set of object files when building the .dll, as you passed when building the import library.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Working with Import Libraries and Export Files</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>