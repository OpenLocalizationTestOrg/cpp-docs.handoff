<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ebfcc6dca6854e3373f133013d91e1867810d3e6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\reference\gmtime-s-gmtime32-s-gmtime64-s.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0e33413fa4e9199fc5a16616fcd489cfc462ad53</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">067e50ed75e17f76ca588cedc8697417e27a83ca</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>gmtime_s, _gmtime32_s, _gmtime64_s | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>gmtime_s, _gmtime32_s, _gmtime64_s</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Converts a time value to a structure.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>These are versions of <bpt id="p1">[</bpt>_gmtime32, _gmtime64<ept id="p1">](../../c-runtime-library/reference/gmtime-gmtime32-gmtime64.md)</ept> with security enhancements as described in <bpt id="p2">[</bpt>Security Features in the CRT<ept id="p2">](../../c-runtime-library/security-features-in-the-crt.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Pointer to a <ph id="ph1">`tm`</ph> structure.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The fields of the returned structure hold the evaluated value of the <ph id="ph1">`timer`</ph> argument in UTC rather than in local time.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Pointer to stored time.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The time is represented as seconds elapsed since midnight (00:00:00), January 1, 1970, coordinated universal time (UTC).</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Zero if successful.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The return value is an error code if there is a failure.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Error codes are defined in Errno.h; for a listing of these errors, see <bpt id="p1">[</bpt>errno<ept id="p1">](../../c-runtime-library/errno-constants.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Error Conditions</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Return</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Value in</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>any</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Not modified.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Not <ph id="ph1">`NULL`</ph> (points to valid memory)</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>All fields set to -1.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Not</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>&lt; 0</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>All fields set to -1.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In the case of the first two error conditions, the invalid parameter handler is invoked, as described in <bpt id="p1">[</bpt>Parameter Validation<ept id="p1">](../../c-runtime-library/parameter-validation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If execution is allowed to continue, these functions set <ph id="ph1">`errno`</ph> to <ph id="ph2">`EINVAL`</ph> and return <ph id="ph3">`EINVAL`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`_gmtime32_s`</ph> function breaks down the <ph id="ph2">`time`</ph> value and stores it in a structure of type <ph id="ph3">`tm`</ph>, defined in Time.h.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The address of the structure is passed in <ph id="ph1">`_tm`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The value of <ph id="ph1">`time`</ph> is usually obtained from a call to the <ph id="ph2">`time`</ph> function.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The target environment should try to determine whether daylight savings time is in effect.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The C run-time library assumes the United States rules for implementing the calculation of daylight saving time .</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Each of the structure fields is of type <ph id="ph1">`int`</ph>, as shown in the following table.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Seconds after minute (0 – 59).</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Minutes after hour (0 – 59).</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Hours since midnight (0 – 23).</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Day of month (1 – 31).</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Month (0 – 11; January = 0).</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Year (current year minus 1900).</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Day of week (0 – 6; Sunday = 0).</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Day of year (0 – 365; January 1 = 0).</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Always 0 for <ph id="ph1">`gmtime`</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>, which uses the <ph id="ph1">`__time64_t`</ph> structure, allows dates to be expressed up through 23:59:59, December 31, 3000, UTC; whereas <ph id="ph2">`gmtime32_s`</ph> only represent dates through 23:59:59 January 18, 2038, UTC.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Midnight, January 1, 1970, is the lower bound of the date range for both these functions.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>is an inline function which evaluates to <ph id="ph1">`_gmtime64_s`</ph> and <ph id="ph2">`time_t`</ph> is equivalent to <ph id="ph3">`__time64_t`</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If you need to force the compiler to interpret <ph id="ph1">`time_t`</ph> as the old 32-bit <ph id="ph2">`time_t`</ph>, you can define <ph id="ph3">`_USE_32BIT_TIME_T`</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Doing this will cause <ph id="ph1">`gmtime_s`</ph> to be in-lined to <ph id="ph2">`_gmtime32_s`</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This is not recommended because your application may fail after January 18, 2038, and it is not allowed on 64-bit platforms.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Routine</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Required header</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>time.h&gt;</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>time.h&gt;</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>time.h&gt;</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For more compatibility information, see <bpt id="p1">[</bpt>Compatibility<ept id="p1">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>.NET Framework Equivalent</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>System::DateTime::UtcNow</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>System::DateTime::ToUniversalTime</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Time Management</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>asctime_s, _wasctime_s</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>ctime, _ctime32, _ctime64, _wctime, _wctime32, _wctime64</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>_ftime, _ftime32, _ftime64</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>gmtime, _gmtime32, _gmtime64</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>localtime_s, _localtime32_s, _localtime64_s</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>_mkgmtime, _mkgmtime32, _mkgmtime64</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>mktime, _mktime32, _mktime64</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>time, _time32, _time64</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>