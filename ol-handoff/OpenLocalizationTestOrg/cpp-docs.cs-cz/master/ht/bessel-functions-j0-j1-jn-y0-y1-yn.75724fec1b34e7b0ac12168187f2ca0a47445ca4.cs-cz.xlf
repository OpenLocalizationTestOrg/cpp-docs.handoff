<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7cb98af91dfd1a83ecc924b541a055cf1c857523</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\reference\bessel-functions-j0-j1-jn-y0-y1-yn.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b99c8b8e07dca47d5d898d6973bad4a061178f71</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">81df210f81af31c718524d67c46777957b53bb60</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Bessel Functions: _j0, _j1, _jn, _y0, _y1, _yn | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Bessel Functions: _j0, _j1, _jn, _y0, _y1, _yn</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Computes the Bessel function of the first or second kind, of orders 0, 1, or n.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The Bessel functions are commonly used in the mathematics of electromagnetic wave theory.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Floating-point value.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Integer order of Bessel function.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Each of these routines returns a Bessel function of <ph id="ph1">`x`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`x`</ph> is negative in the <ph id="ph2">`_y0`</ph>, <ph id="ph3">`_y1`</ph>, or <ph id="ph4">`_yn`</ph> functions, the routine sets <ph id="ph5">`errno`</ph> to <ph id="ph6">`EDOM`</ph>, prints a <ph id="ph7">`_DOMAIN`</ph> error message to <ph id="ph8">`stderr`</ph>, and returns <ph id="ph9">`_HUGE_VAL`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can modify error handling by using <ph id="ph1">`_matherr`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`_j0`</ph>, <ph id="ph2">`_j1`</ph>, and <ph id="ph3">`_jn`</ph> routines return Bessel functions of the first kind: orders 0, 1, and n, respectively.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Input</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>SEH Exception</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Matherr Exception</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>± <ph id="ph1">`QNAN`</ph>,</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`_y0`</ph>, <ph id="ph2">`_y1`</ph>, and <ph id="ph3">`_yn`</ph> routines return Bessel functions of the second kind: orders 0, 1, and n, respectively.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Input</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>SEH Exception</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Matherr Exception</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>± <ph id="ph1">`QNAN`</ph>,</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>± 0</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>&amp;#124;x&amp;#124;&lt;0.0</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Routine</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Required header</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>, <ph id="ph1">`_j1`</ph>, <ph id="ph2">`_jn`</ph>, <ph id="ph3">`_y0`</ph>, <ph id="ph4">`_y1`</ph>,</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>cmath&gt; (C++), <ph id="ph1">\&lt;</ph>math.h&gt; (C, C++)</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For additional compatibility information, see <bpt id="p1">[</bpt>Compatibility<ept id="p1">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Floating-Point Support</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>_matherr</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>