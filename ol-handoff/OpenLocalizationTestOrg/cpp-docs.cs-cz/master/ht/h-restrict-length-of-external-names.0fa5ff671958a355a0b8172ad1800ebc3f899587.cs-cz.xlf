<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1389f9081eb719077a6006debed7571c88c26a5f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\build\reference\h-restrict-length-of-external-names.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fc9d32c1e477bd962e81c0c1812a0dea95213c98</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c566938825b51c3238a33b96f24a49ccc43c4241</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>-H (Restrict Length of External Names) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>/H (Restrict Length of External Names)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Restricts the length of external names.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Arguments</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Specifies the maximum length of external names allowed in a program.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>By default, the length of external (public) names is 2,047 characters.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This is true for C and C++ programs.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Using <bpt id="p1">**</bpt>/H<ept id="p1">**</ept> can only decrease the maximum allowable length of identifiers, not increase it.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A space between <bpt id="p1">**</bpt>/H<ept id="p1">**</ept> and <ph id="ph1">`number`</ph> is optional.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If a program contains external names longer than <ph id="ph1">`number`</ph>, the extra characters are ignored.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If you compile a program without <bpt id="p1">**</bpt>/H<ept id="p1">**</ept> and if an identifier contains more than 2,047 characters, the compiler will generate <bpt id="p2">[</bpt>Fatal Error C1064<ept id="p2">](../../error-messages/compiler-errors-1/fatal-error-c1064.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The limit on length includes any compiler-created leading underscore (_) or at sign (@).</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>These characters are part of the identifier and take a significant location.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The compiler adds a leading underscore (_) to names modified by the <ph id="ph1">`__cdecl`</ph> (default) and <ph id="ph2">`__stdcall`</ph> calling conventions, and a leading at sign (@) to names modified by the <ph id="ph3">`__fastcall`</ph> calling convention.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The compiler appends argument size information to names modified by the <ph id="ph1">`__fastcall`</ph> and <ph id="ph2">`__stdcall`</ph> calling conventions, and adds type information to C++ names.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You may find <bpt id="p1">**</bpt>/H<ept id="p1">**</ept> useful:</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When you create mixed-language or portable programs.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When you use tools that impose limits on the length of external identifiers.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When you want to restrict the amount of space that symbols use in a debug build.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following example shows how using <bpt id="p1">**</bpt>/H<ept id="p1">**</ept> can actually introduce errors if identifier lengths are limited too much:</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You must also be careful when using the <bpt id="p1">**</bpt>/H<ept id="p1">**</ept> option because of predefined compiler identifiers.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If the maximum identifier length is too small, certain predefined identifiers will be unresolved as well as certain library function calls.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For example, if the <ph id="ph1">`printf`</ph> function is used and the option <bpt id="p1">**</bpt>/H5<ept id="p1">**</ept> is specified at compile time, the symbol <bpt id="p2">**</bpt>_prin<ept id="p2">**</ept> will be created in order to reference <ph id="ph2">`printf`</ph>, and this will not be found in the library.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Use of <bpt id="p1">**</bpt>/H<ept id="p1">**</ept> is incompatible with <bpt id="p2">[</bpt>/GL (Whole Program Optimization)<ept id="p2">](../../build/reference/gl-whole-program-optimization.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/H<ept id="p1">**</ept> is deprecated; the maximum length limits have been increased and <bpt id="p2">**</bpt>/H<ept id="p2">**</ept> is no longer needed.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Deprecated Compiler Options in Visual C++ 2005<ept id="p1">](http://msdn.microsoft.com/en-us/aa59fce3-50b8-4f66-9aeb-ce09a7a84cce)</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To set this compiler option in the Visual Studio development environment</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Open the project's <bpt id="p1">**</bpt>Property Pages<ept id="p1">**</ept> dialog box.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Working with Project Properties<ept id="p1">](../../ide/working-with-project-properties.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>C/C++<ept id="p1">**</ept> folder.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Command Line<ept id="p1">**</ept> property page.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Type the compiler option in the <bpt id="p1">**</bpt>Additional Options<ept id="p1">**</ept> box.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To set this compiler option programmatically</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>See &lt;xref:Microsoft.VisualStudio.VCProjectEngine.VCCLCompilerTool.AdditionalOptions%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Compiler Options</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Setting Compiler Options</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>