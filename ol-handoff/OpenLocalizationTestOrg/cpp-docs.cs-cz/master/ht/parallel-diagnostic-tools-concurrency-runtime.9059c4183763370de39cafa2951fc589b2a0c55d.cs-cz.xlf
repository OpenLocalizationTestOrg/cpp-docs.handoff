<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b44c286817eaaba2ddef3d31f66afefb1b41a46</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\parallel\concrt\parallel-diagnostic-tools-concurrency-runtime.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fd55294e9c7b0285c81abb6152bc9125e65cea15</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fa44a468b074944eceb52e1609e43514bd6b6d1a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Parallel Diagnostic Tools (Concurrency Runtime) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Parallel Diagnostic Tools (Concurrency Runtime)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>provides extensive support for debugging and profiling multi-threaded applications.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Debugging</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The Visual Studio debugger includes the <bpt id="p1">**</bpt>Parallel Stacks<ept id="p1">**</ept> window, <bpt id="p2">**</bpt>Parallel Tasks<ept id="p2">**</ept> window, and <bpt id="p3">**</bpt>Parallel Watch<ept id="p3">**</ept> window.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Debugging a Parallel Application<ept id="p1">](http://msdn.microsoft.com/library/2820ac4c-c893-4d87-8c62-83981d561493)</ept> and <bpt id="p2">[</bpt>How to: Use the Parallel Watch Window<ept id="p2">](http://msdn.microsoft.com/library/28004d9b-420c-48f7-b80e-ab1519802558)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Profiling</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The profiling tools provide three data views that display graphical, tabular and numerical information about how a multi-threaded application interacts with itself and with other programs.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The views enable you to quickly identify areas of concern, and to navigate from points on the graphical displays to call stacks, call sites, and source code.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Concurrency Visualizer<ept id="p1">](/visualstudio/profiling/concurrency-visualizer)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Event Tracing</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The Concurrency Runtime uses <bpt id="p1">[</bpt>Event Tracing for Windows<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb968803)</ept> (ETW) to notify instrumentation tools, such as profilers, when various events occur.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>These events include when a scheduler is activated or deactivated, when a context begins, ends, blocks, unblocks, or yields, and when a parallel algorithm begins or ends.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Tools such as the <bpt id="p1">[</bpt>Concurrency Visualizer<ept id="p1">](/visualstudio/profiling/concurrency-visualizer)</ept> utilize this functionality; therefore, you typically do not have to work with these events directly.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>However, these events are useful when you are developing a custom profiler or when you use event tracing tools such as <bpt id="p1">[</bpt>Xperf<ept id="p1">](http://go.microsoft.com/fwlink/linkid=160628)</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The Concurrency Runtime raises these events only when tracing is enabled.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Call the <bpt id="p1">[</bpt>concurrency::EnableTracing<ept id="p1">](reference/concurrency-namespace-functions.md#enabletracing)</ept> function to enable event tracing and the <bpt id="p2">[</bpt>concurrency::DisableTracing<ept id="p2">](reference/concurrency-namespace-functions.md#disabletracing)</ept> function to disable tracing.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The following table describes the events that the runtime raises when event tracing is enabled:</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Event</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>concurrency::ConcRT_ProviderGuid<ept id="p1">](reference/concurrency-namespace-constants1.md#concrt_providerguid)</ept>|The ETW provider identifier for the Concurrency Runtime.|</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>concurrency::ContextEventGuid<ept id="p1">](reference/concurrency-namespace-constants1.md#contexteventguid)</ept>|Marks events that are related to contexts.|</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>concurrency::PPLParallelForEventGuid<ept id="p1">](reference/concurrency-namespace-constants1.md#pplparallelforeventguid)</ept>|Marks the entrance and exit to calls to the <bpt id="p2">[</bpt>concurrency::parallel_for<ept id="p2">](reference/concurrency-namespace-functions.md#parallel_for)</ept> algorithm.|</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>concurrency::PPLParallelForeachEventGuid<ept id="p1">](reference/concurrency-namespace-constants1.md#pplparallelforeacheventguid)</ept>|Marks the entrance and exit to calls to the <bpt id="p2">[</bpt>concurrency::parallel_for_each<ept id="p2">](reference/concurrency-namespace-functions.md#parallel_for_each)</ept> algorithm.|</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>concurrency::PPLParallelInvokeEventGuid<ept id="p1">](reference/concurrency-namespace-constants1.md#pplparallelinvokeeventguid)</ept>|Marks the entrance and exit to calls to the <bpt id="p2">[</bpt>concurrency::parallel_invoke<ept id="p2">](reference/concurrency-namespace-functions.md#parallel_invoke)</ept> algorithm.|</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>concurrency::SchedulerEventGuid<ept id="p1">](reference/concurrency-namespace-constants1.md#schedulereventguid)</ept>|Marks events that are related to the <bpt id="p2">[</bpt>Task Scheduler<ept id="p2">](../../parallel/concrt/task-scheduler-concurrency-runtime.md)</ept>.|</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>concurrency::VirtualProcessorEventGuid<ept id="p1">](reference/concurrency-namespace-constants1.md#virtualprocessoreventguid)</ept>|Marks events that are related to virtual processors.|</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The Concurrency Runtime defines, but does not currently raise, the following events.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The runtime reserves these events for future use:</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>concurrency::ConcRTEventGuid</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>concurrency::ScheduleGroupEventGuid</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>concurrency::ChoreEventGuid</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>concurrency::LockEventGuid</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>concurrency::ResourceManagerEventGuid</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>concurrency::ConcRT_EventType<ept id="p1">](reference/concurrency-namespace-enums.md#concrt_eventtype)</ept> enumeration specifies the possible operations that an event tracks.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For example, at the entrance of the <ph id="ph1">`parallel_for`</ph> algorithm, the runtime raises the <ph id="ph2">`PPLParallelForEventGuid`</ph> event and provides <ph id="ph3">`CONCRT_EVENT_START`</ph> as the operation.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Before the <ph id="ph1">`parallel_for`</ph> algorithm returns, the runtime again raises the <ph id="ph2">`PPLParallelForEventGuid`</ph> event and provides <ph id="ph3">`CONCRT_EVENT_END`</ph> as the operation.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to enable tracing for a call to <ph id="ph1">`parallel_for`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The runtime does not trace the first call to <ph id="ph1">`parallel_for`</ph> because tracing it not enabled.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The call to <ph id="ph1">`EnableTracing`</ph> enables the runtime to trace the second call to <ph id="ph2">`parallel_for`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>concrt-etw#1</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The runtime tracks the number of times that you call <ph id="ph1">`EnableTracing`</ph> and <ph id="ph2">`DisableTracing`</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Therefore, if you call <ph id="ph1">`EnableTracing`</ph> multiple times, you must call <ph id="ph2">`DisableTracing`</ph> the same number of times in order to disable tracing.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Concurrency Runtime</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>