<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b802c9320ce4127685cbd8bebe73d4d7d557eb03</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\reference\getdcwd-wgetdcwd.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a5e7209973b7e55282d8b662e75a5d26d70ec870</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a99f4f91ba150a403fd2adbdd49d7ed84b8cd3e9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>_getdcwd, _wgetdcwd | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>_getdcwd, _wgetdcwd</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Gets the full path of the current working directory on the specified drive.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A non-negative integer that specifies the drive (0 = default drive, 1 = A, 2 = B, and so on).</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If the specified drive is not available, or the kind of drive (for example, removable, fixed, CD-ROM, RAM disk, or network drive) cannot be determined, the invalid-parameter handler, which is described in <bpt id="p1">[</bpt>Parameter Validation<ept id="p1">](../../c-runtime-library/parameter-validation.md)</ept>, is invoked.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Storage location for the path, or <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> is specified, this function allocates a buffer of at least <ph id="ph1">`maxlen`</ph> size by using <bpt id="p2">**</bpt>malloc<ept id="p2">**</ept>, and the return value of <ph id="ph2">`_getdcwd`</ph> is a pointer to the allocated buffer.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The buffer can be freed by calling <ph id="ph1">`free`</ph> and passing it the pointer.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A nonzero positive integer that specifies the maximum length of the path, in characters: <ph id="ph1">`char`</ph> for <ph id="ph2">`_getdcwd`</ph> and <ph id="ph3">`wchar_t`</ph> for <ph id="ph4">`_wgetdcwd`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`maxlen`</ph> is not greater than zero, the invalid-parameter handler, which is described in <bpt id="p1">[</bpt>Parameter Validation<ept id="p1">](../../c-runtime-library/parameter-validation.md)</ept>, is invoked.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Pointer to a string that represents the full path of the current working directory on the specified drive, or <ph id="ph1">`NULL`</ph>, which indicates an error.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`buffer`</ph> is specified as <ph id="ph2">`NULL`</ph> and there is insufficient memory to allocate <ph id="ph3">`maxlen`</ph> characters, an error occurs and <ph id="ph4">`errno`</ph> is set to <ph id="ph5">`ENOMEM`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If the length of the path,  which includes the terminating null character, exceeds <ph id="ph1">`maxlen`</ph>, an error occurs and <ph id="ph2">`errno`</ph> is set to <ph id="ph3">`ERANGE`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information about these error codes, see <bpt id="p1">[</bpt>errno, _doserrno, _sys_errlist, and _sys_nerr<ept id="p1">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`_getdcwd`</ph> function gets the full path of the current working directory on the specified drive and stores it at <ph id="ph2">`buffer`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If the current working directory is set to the root, the string ends with a backslash (<ph id="ph1">\\</ph>).</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If the current working directory is set to a directory other than the root, the string ends with the name of the directory and not with a backslash.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>is a wide-character version of <ph id="ph1">`_getdcwd`</ph>, and its <ph id="ph2">`buffer`</ph> parameter and return value are wide-character strings.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Otherwise, <ph id="ph1">`_wgetdcwd`</ph> and <ph id="ph2">`_getdcwd`</ph> behave identically.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This function is thread-safe even though it depends on <bpt id="p1">**</bpt>GetFullPathName<ept id="p1">**</ept>, which is itself not thread-safe.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>However, you can violate thread safety if your multithreaded application calls both this function and <bpt id="p1">**</bpt>GetFullPathName<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For more information, go to <bpt id="p1">[</bpt>MSDN Library<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=150542)</ept> and then search for <bpt id="p2">**</bpt>GetFullPathName<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The version of this function that has the <ph id="ph1">`_nolock`</ph> suffix behaves identically to this function except that it is not thread-safe and is not protected from interference by other threads.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>_getdcwd_nolock, _wgetdcwd_nolock<ept id="p1">](../../c-runtime-library/reference/getdcwd-nolock-wgetdcwd-nolock.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`_DEBUG`</ph> and <ph id="ph2">`_CRTDBG_MAP_ALLOC`</ph> are defined, calls to <ph id="ph3">`_getdcwd`</ph> and <ph id="ph4">`_wgetdcwd`</ph> are replaced by calls to <ph id="ph5">`_getdcwd_dbg`</ph> and <ph id="ph6">`_wgetdcwd_dbg`</ph> so that you can debug memory allocations.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For more information, see<bpt id="p1">[</bpt>_getdcwd_dbg, _wgetdcwd_dbg<ept id="p1">](../../c-runtime-library/reference/getdcwd-dbg-wgetdcwd-dbg.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Generic-Text Routine Mappings</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Tchar.h routine</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>_UNICODE and _MBCS not defined</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>_MBCS defined</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>_UNICODE defined</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Routine</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Required header</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>direct.h&gt;</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>direct.h&gt; or <ph id="ph1">\&lt;</ph>wchar.h&gt;</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For more compatibility information, see <bpt id="p1">[</bpt>Compatibility<ept id="p1">](../../c-runtime-library/compatibility.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>See the example in <bpt id="p1">[</bpt>_getdrive<ept id="p1">](../../c-runtime-library/reference/getdrive.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>.NET Framework Equivalent</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>System::Environment::CurrentDirectory</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Directory Control</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>_chdir, _wchdir</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>_getcwd, _wgetcwd</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>_getdrive</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>_mkdir, _wmkdir</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>_rmdir, _wrmdir</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>