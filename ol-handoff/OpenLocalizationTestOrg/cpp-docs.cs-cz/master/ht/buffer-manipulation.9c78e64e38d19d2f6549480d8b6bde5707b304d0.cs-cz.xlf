<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9173ba5acba320ad96c06102dee3cbafb8ef307a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\buffer-manipulation.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">405018fa70d09430826e15c38b33b65bd0400a2c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aa479071f12dabf82c91011cd1355af2d77ff955</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Buffer Manipulation | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Buffer Manipulation</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Use these routines to work with areas of memory on a byte-by-byte basis.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Buffer-Manipulation Routines</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Routine</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Use</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>.NET Framework equivalent</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>_memccpy</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Copy characters from one buffer to another until given character or given number of characters has been copied</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System::Buffer::BlockCopy<ept id="p1">](https://msdn.microsoft.com/en-us/library/system.buffer.blockcopy.aspx)</ept>, <bpt id="p2">[</bpt>System::String::Copy<ept id="p2">](https://msdn.microsoft.com/en-us/library/system.string.copy.aspx)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>memchr, wmemchr</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Return pointer to first occurrence, within specified number of characters, of given character in buffer</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Not applicable.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To call the standard C function, use <ph id="ph1">`PInvoke`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Platform Invoke Examples<ept id="p1">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>memcmp, wmemcmp</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Compare specified number of characters from two buffers</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System::String::Compare<ept id="p1">](https://msdn.microsoft.com/en-us/library/system.string.compare.aspx)</ept>, <bpt id="p2">[</bpt>System::String::Equals<ept id="p2">](https://msdn.microsoft.com/en-us/library/system.string.equals.aspx)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>memcpy, wmemcpy<ept id="p1">](../c-runtime-library/reference/memcpy-wmemcpy.md)</ept>, <bpt id="p2">[</bpt>memcpy_s, wmemcpy_s<ept id="p2">](../c-runtime-library/reference/memcpy-s-wmemcpy-s.md)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Copy specified number of characters from one buffer to another</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System::Buffer::BlockCopy<ept id="p1">](https://msdn.microsoft.com/en-us/library/system.buffer.blockcopy.aspx)</ept>, <bpt id="p2">[</bpt>System::String::Copy<ept id="p2">](https://msdn.microsoft.com/en-us/library/system.string.copy.aspx)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>_memicmp, _memicmp_l</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Compare specified number of characters from two buffers without regard to case</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System::String::Compare<ept id="p1">](https://msdn.microsoft.com/en-us/library/system.string.compare.aspx)</ept>, <bpt id="p2">[</bpt>System::String::Equals<ept id="p2">](https://msdn.microsoft.com/en-us/library/system.string.equals.aspx)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>memmove, wmemmove<ept id="p1">](../c-runtime-library/reference/memmove-wmemmove.md)</ept>,<bpt id="p2">[</bpt>memmove_s, wmemmove_s<ept id="p2">](../c-runtime-library/reference/memmove-s-wmemmove-s.md)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Copy specified number of characters from one buffer to another</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>System::Buffer::BlockCopy</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>memset, wmemset</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Use given character to initialize specified number of bytes in the buffer</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>System::Buffer::SetByte</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>_swab</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Swap bytes of data and store them at specified location</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Not applicable.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To call the standard C function, use <ph id="ph1">`PInvoke`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Platform Invoke Examples<ept id="p1">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When the source and target areas overlap, only <ph id="ph1">`memmove`</ph> is guaranteed to copy the full source properly.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Run-Time Routines by Category</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>