<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d2f3273c493c3a70ba5f21e69533082de4e3b9a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\coletemplateserver-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4f500cc58855221d70c447d35ab46bbc9c046dbd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ecd52ab36389458930030b8bff3fce2e13015ae5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>COleTemplateServer Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>COleTemplateServer Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Used for OLE visual editing servers, automation servers, and link containers (applications that support links to embeddings).</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>COleTemplateServer::COleTemplateServer</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`COleTemplateServer`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>COleTemplateServer::ConnectTemplate</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Connects a document template to the underlying <ph id="ph1">`COleObjectFactory`</ph> object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>COleTemplateServer::Unregister</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Unregisters the associated document template.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>COleTemplateServer::UpdateRegistry</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Registers the document type with the OLE system registry.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This class is derived from the class <bpt id="p1">[</bpt>COleObjectFactory<ept id="p1">](../../mfc/reference/coleobjectfactory-class.md)</ept>; usually, you can use <ph id="ph1">`COleTemplateServer`</ph> directly rather than deriving your own class.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>uses a <bpt id="p1">[</bpt>CDocTemplate<ept id="p1">](../../mfc/reference/cdoctemplate-class.md)</ept> object to manage the server documents.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`COleTemplateServer`</ph> when implementing a full server, that is, a server that can be run as a standalone application.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Full servers are typically multiple document interface (MDI) applications, although single document interface (SDI) applications are supported.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>One <ph id="ph1">`COleTemplateServer`</ph> object is needed for each type of server document an application supports; that is, if your server application supports both worksheets and charts, you must have two <ph id="ph2">`COleTemplateServer`</ph> objects.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>overrides the <ph id="ph1">`OnCreateInstance`</ph> member function defined by <ph id="ph2">`COleObjectFactory`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This member function is called by the framework to create a C++ object of the proper type.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information about servers, see the article <bpt id="p1">[</bpt>Servers: Implementing a Server<ept id="p1">](../../mfc/servers-implementing-a-server.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>CObject</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>CCmdTarget</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>COleObjectFactory</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxdisp.h</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>COleTemplateServer::COleTemplateServer</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`COleTemplateServer`</ph> object.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For a brief description of the use of the <ph id="ph1">`COleTemplateServer`</ph> class, see the <bpt id="p1">[</bpt>COleLinkingDoc<ept id="p1">](../../mfc/reference/colelinkingdoc-class.md)</ept> class overview.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>COleTemplateServer::ConnectTemplate</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Connects the document template pointed to by <ph id="ph1">`pDocTemplate`</ph> to the underlying <bpt id="p1">[</bpt>COleObjectFactory<ept id="p1">](../../mfc/reference/coleobjectfactory-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Reference to the OLE class ID that the template requests.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Pointer to the document template.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Indicates whether a single instance of the application can support multiple instantiations.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>, multiple instances of the application are launched for each request to create an object.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>CLSID Key<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms691424)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>COleTemplateServer::Unregister</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Unregisters the associated document template.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>TRUE if successful; otherwise FALSE.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>EnterRemarks</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>COleTemplateServer::UpdateRegistry</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Loads file-type information from the document-template string and places that information in the OLE system registry.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A value from the <bpt id="p1">**</bpt>OLE_APPTYPE<ept id="p1">**</ept> enumeration, which is defined in AFXDISP.H.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>It can have any one of the following values:</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Server has full server user-interface.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Server supports only embedding.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Container supports links to embedded objects.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Object is <ph id="ph1">`IDispatch`</ph>-capable.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>OAT_DOC_OBJECT_SERVER<ept id="p1">**</ept> Server supports both embedding and the Document Object component model.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A list of entries that is written into the registry only if no entries exist.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A list of entries that is written into the registry regardless of whether any preceding entries exist.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Determines whether the class is to be registered.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`bRegister`</ph> is <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>, the class is registered with the system registry.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Otherwise, it unregisters the class.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The registration information is loaded by means of a call to <bpt id="p1">[</bpt>CDocTemplate::GetDocString<ept id="p1">](../../mfc/reference/cdoctemplate-class.md#cdoctemplate__getdocstring)</ept>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The substrings retrieved are those identified by the indexes <bpt id="p1">**</bpt>regFileTypeId<ept id="p1">**</ept>, <bpt id="p2">**</bpt>regFileTypeName<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>fileNewName<ept id="p3">**</ept>, as described in the <ph id="ph1">`GetDocString`</ph> reference pages.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">**</bpt>regFileTypeId<ept id="p1">**</ept> substring is empty or if the call to <ph id="ph1">`GetDocString`</ph> fails for any other reason, this function fails and the file information is not entered in the registry.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The information in the arguments <ph id="ph1">`rglpszRegister`</ph> and <ph id="ph2">`rglpszOverwrite`</ph> is written to the registry through a call to <bpt id="p1">[</bpt>AfxOleRegisterServerClass<ept id="p1">](application-control.md#afxoleregisterserverclass)</ept>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The default information, which is registered when the two arguments are <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, is suitable for most applications.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For information on the structure of the information in these arguments, see <ph id="ph1">`AfxOleRegisterServerClass`</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Implementing the IDispatch Interface<ept id="p1">](http://msdn.microsoft.com/en-us/0e171f7f-0022-4e9b-ac8e-98192828e945)</ept>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>MFC Sample HIERSVR</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>COleObjectFactory Class</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Hierarchy Chart</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>COleServerDoc Class</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>COleServerItem Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>