<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">719684f22b501b257293ea56db9ebe3107810837</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\colelinkingdoc-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d20f5a70db1c04cf9d20d9669c994d62ee1dfeaf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">391c2533d8231e65dc6b46c5f9706b3c77906a94</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>COleLinkingDoc Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>COleLinkingDoc Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The base class for OLE container documents that support linking to the embedded items they contain.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>COleLinkingDoc::COleLinkingDoc</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`COleLinkingDoc`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>COleLinkingDoc::Register</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Registers the document with the OLE system DLLs.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>COleLinkingDoc::Revoke</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Revokes the document's registration.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Protected Methods</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>COleLinkingDoc::OnFindEmbeddedItem</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Finds the specified embedded item.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>COleLinkingDoc::OnGetLinkedItem</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Finds the specified linked item.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A container application that supports linking to embedded items is called a "link container."</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>OCLIENT<ept id="p1">](../../visual-cpp-samples.md)</ept> sample application is an example of a link container.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When a linked item's source is an embedded item in another document, that containing document must be loaded in order for the embedded item to be edited.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For this reason, a link container must be able to be launched by another container application when the user wants to edit the source of a linked item.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Your application must also use the <bpt id="p1">[</bpt>COleTemplateServer<ept id="p1">](../../mfc/reference/coletemplateserver-class.md)</ept> class so that it can create documents when launched programmatically.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To make your container a link container, derive your document class from <ph id="ph1">`COleLinkingDoc`</ph> instead of <bpt id="p1">[</bpt>COleDocument<ept id="p1">](../../mfc/reference/coledocument-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>As with any other OLE container, you must design your class for storing the application's native data as well as embedded or linked items.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Also, you must design data structures for storing your native data.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If you define a <ph id="ph1">`CDocItem`</ph>-derived class for your application's native data, you can use the interface defined by <ph id="ph2">`COleDocument`</ph> to store your native data as well as your OLE data.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To allow your application to be launched programmatically by another container, declare a <ph id="ph1">`COleTemplateServer`</ph> object as a member of your application's <ph id="ph2">`CWinApp`</ph>-derived class:</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>NVC_MFCOleContainer#23</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`InitInstance`</ph> member function of your <ph id="ph2">`CWinApp`</ph>-derived class, create a document template and specify your <ph id="ph3">`COleLinkingDoc`</ph>-derived class as the document class:</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>NVC_MFCOleContainer#24</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Connect your <ph id="ph1">`COleTemplateServer`</ph> object to your document templates by calling the object's <ph id="ph2">`ConnectTemplate`</ph> member function, and register all class objects with the OLE system by calling <bpt id="p1">**</bpt>COleTemplateServer::RegisterAll<ept id="p1">**</ept>:</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>NVC_MFCOleContainer#25</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For a sample <ph id="ph1">`CWinApp`</ph>-derived class definition and <ph id="ph2">`InitInstance`</ph> function, see OCLIENT.H and OCLIENT.CPP in the MFC sample <bpt id="p1">[</bpt>OCLIENT<ept id="p1">](../../visual-cpp-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more information on using <ph id="ph1">`COleLinkingDoc`</ph>, see the articles <bpt id="p1">[</bpt>Containers: Implementing a Container<ept id="p1">](../../mfc/containers-implementing-a-container.md)</ept> and <bpt id="p2">[</bpt>Containers: Advanced Features<ept id="p2">](../../mfc/containers-advanced-features.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>CObject</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>CCmdTarget</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>CDocument</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>COleDocument</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxole.h</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>COleLinkingDoc::COleLinkingDoc</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`COleLinkingDoc`</ph> object without beginning communications with the OLE system DLLs.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>You must call the <ph id="ph1">`Register`</ph> member function to inform OLE that the document is open.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>COleLinkingDoc::OnFindEmbeddedItem</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Called by the framework to determine whether the document contains an embedded OLE item with the specified name.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Pointer to the name of the embedded OLE item requested.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A pointer to the specified item; <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> if the item is not found.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The default implementation searches the list of embedded items for an item with the specified name (the name comparison is case sensitive).</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Override this function if you have your own method of storing or naming embedded OLE items.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>COleLinkingDoc::OnGetLinkedItem</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Called by the framework to check whether the document contains a linked server item with the specified name.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Pointer to the name of the linked OLE item requested.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>A pointer to the specified item; <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> if the item is not found.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The default <ph id="ph1">`COleLinkingDoc`</ph> implementation always returns <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This function is overriden in the derived class <ph id="ph1">`COleServerDoc`</ph> to search the list of OLE server items for a linked item with the specified name (the name comparison is case sensitive).</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Override this function if you have implemented your own method of storing or retrieving linked server items.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>COleLinkingDoc::Register</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Informs the OLE system DLLs that the document is open.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>pFactory</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Pointer to an OLE factory object (can be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>).</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Pointer to the fully qualified path of the container document.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Nonzero if the document is successfully registered; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Call this function when creating or opening a named file to register the document with the OLE system DLLs.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>There is no need to call this function if the document represents an embedded item.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>If you are using <ph id="ph1">`COleTemplateServer`</ph> in your application, <ph id="ph2">`Register`</ph> is called for you by <ph id="ph3">`COleLinkingDoc`</ph>'s implementation of <ph id="ph4">`OnNewDocument`</ph>, <ph id="ph5">`OnOpenDocument`</ph>, and <ph id="ph6">`OnSaveDocument`</ph>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>COleLinkingDoc::Revoke</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Informs the OLE system DLLs that the document is no longer open.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Call this function to revoke the document's registration with the OLE system DLLs.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>You should call this function when closing a named file, but you usually do not need to call it directly.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>is called for you by <ph id="ph1">`COleLinkingDoc`</ph>'s implementation of <ph id="ph2">`OnCloseDocument`</ph>, <ph id="ph3">`OnNewDocument`</ph>, <ph id="ph4">`OnOpenDocument`</ph>, and <ph id="ph5">`OnSaveDocument`</ph>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>MFC Sample OCLIENT</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>COleDocument Class</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Hierarchy Chart</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>CDocTemplate Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>