<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">87a424d50b0a3377f3bb25107e37cb346dc8ee30</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl-mfc-shared\reference\cimage-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">af9ae8f04a9eb8c9318a21af8a1d0d7b5a1c3a9c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8905affc5722d2e3c0271d0367a30655d0ee5b50</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CImage Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CImage Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>provides enhanced bitmap support, including the ability to load and save images in JPEG, GIF, BMP, and Portable Network Graphics (PNG) formats.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This class and its members cannot be used in applications that execute in the Windows Runtime.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>CImage::CImage</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The constructor.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>CImage::AlphaBlend</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Displays bitmaps that have transparent or semitransparent pixels.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>CImage::Attach</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Attaches an <ph id="ph1">`HBITMAP`</ph> to a <ph id="ph2">`CImage`</ph> object.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Can be used with either non-DIB section bitmaps or DIB section bitmaps.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>CImage::BitBlt</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Copies a bitmap from the source device context to this current device context.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>CImage::Create</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Creates a DIB section bitmap and attaches it to the previously constructed <ph id="ph1">`CImage`</ph> object.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>CImage::CreateEx</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Creates a DIB section bitmap (with additional parameters) and attaches it to the previously constructed <ph id="ph1">`CImage`</ph> object.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>CImage::Destroy</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Detaches the bitmap from the <ph id="ph1">`CImage`</ph> object and destroys the bitmap.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>CImage::Detach</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Detaches the bitmap from a <ph id="ph1">`CImage`</ph> object.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>CImage::Draw</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Copies a bitmap from a source rectangle into a destination rectangle.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Draw<ept id="p1">**</ept> stretches or compresses the bitmap to fit the dimensions of the destination rectangle, if necessary, and handles alpha blending and transparent colors.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>CImage::GetBits</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the actual pixel values of the bitmap.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>CImage::GetBPP</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Retrieves the bits per pixel.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>CImage::GetColorTable</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Retrieves red, green, blue (RGB) color values from a range of entries in the color table.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>CImage::GetDC</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Retrieves the device context into which the current bitmap is selected.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>CImage::GetExporterFilterString</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Finds the available image formats and their descriptions.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>CImage::GetHeight</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Retrieves the height of the current image in pixels.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>CImage::GetImporterFilterString</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Finds the available image formats and their descriptions.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>CImage::GetMaxColorTableEntries</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Retrieves the maximum number of entries in the color table.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>CImage::GetPitch</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Retrieves the pitch of the current image, in bytes.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>CImage::GetPixel</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Retrieves the color of the pixel specified by <bpt id="p1">*</bpt>x<ept id="p1">*</ept> and <bpt id="p2">*</bpt>y<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>CImage::GetPixelAddress</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Retrieves the address of a given pixel.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>CImage::GetTransparentColor</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Retrieves the position of the transparent color in the color table.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>CImage::GetWidth</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Retrieves the width of the current image in pixels.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>CImage::IsDIBSection</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Determines if the attached bitmap is a DIB section.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>CImage::IsIndexed</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Indicates that a bitmap's colors are mapped to an indexed palette.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>CImage::IsNull</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Indicates if a source bitmap is currently loaded.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>CImage::IsTransparencySupported</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Indicates whether the application supports transparent bitmaps and was compiled for Windows 2000 or later.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>CImage::Load</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Loads an image from the specified file.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>CImage::LoadFromResource</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Loads an image from the specified resource.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>CImage::MaskBlt</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Combines the color data for the source and destination bitmaps using the specified mask and raster operation.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>CImage::PlgBlt</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Performs a bit-block transfer from a rectangle in a source device context into a parallelogram in a destination device context.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>CImage::ReleaseDC</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Releases the device context that was retrieved with <bpt id="p1">[</bpt>CImage::GetDC<ept id="p1">](#cimage__getdc)</ept>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>CImage::ReleaseGDIPlus</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Releases resources used by GDI+.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Must be called to free resources created by a global <ph id="ph1">`CImage`</ph> object.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>CImage::Save</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Saves an image as the specified type.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Save<ept id="p1">**</ept> cannot specify image options.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>CImage::SetColorTable</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Sets red, green, blue RGB) color values in a range of entries in the color table of the DIB section.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>CImage::SetPixel</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Sets the pixel at the specified coordinates to the specified color.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>CImage::SetPixelIndexed</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Sets the pixel at the specified coordinates to the color at the specified index of the palette.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>CImage::SetPixelRGB</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Sets the pixel at the specified coordinates to the specified red, green, blue (RGB) value.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>CImage::SetTransparentColor</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Sets the index of the color to be treated as transparent.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Only one color in a palette can be transparent.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>CImage::StretchBlt</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Copies a bitmap from a source rectangle into a destination rectangle, stretching or compressing the bitmap to fit the dimensions of the destination rectangle, if necessary.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>CImage::TransparentBlt</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Copies a bitmap with transparent color from the source device context to this current device context.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Public Operators</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>CImage::operator HBITMAP</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Returns the Windows handle attached to the <ph id="ph1">`CImage`</ph> object.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>takes bitmaps that are either device-independent bitmap (DIB) sections or not; however, you can use <bpt id="p1">[</bpt>Create<ept id="p1">](#cimage__create)</ept> or <bpt id="p2">[</bpt>CImage::Load<ept id="p2">](#cimage__load)</ept> with only DIB sections.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You can attach a non-DIB section bitmap to a <ph id="ph1">`CImage`</ph> object using <bpt id="p1">[</bpt>Attach<ept id="p1">](#cimage__attach)</ept>, but then you cannot use the following <ph id="ph2">`CImage`</ph> methods, which support only DIB section bitmaps:</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>GetBits</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>GetColorTable</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>GetMaxColorTableEntries</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>GetPitch</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>GetPixelAddress</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>IsIndexed</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>SetColorTable</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>To determine if an attached bitmap is a DIB section, call <bpt id="p1">[</bpt>IsDibSection<ept id="p1">](#cimage__isdibsection)</ept><bpt id="p2">**</bpt>.<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> In Visual Studio .NET 2003, this class keeps a count of the number of <ph id="ph1">`CImage`</ph> objects created.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Whenever the count goes to 0, the function <bpt id="p1">**</bpt>GdiplusShutdown<ept id="p1">**</ept> is automatically called to release resources used by GDI+.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>This ensures that any <ph id="ph1">`CImage`</ph> objects created directly or indirectly by DLLs are always destroyed properly and that <bpt id="p1">**</bpt>GdiplusShutdown<ept id="p1">**</ept> is not called from <ph id="ph2">`DllMain`</ph>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Using global <ph id="ph1">`CImage`</ph> objects in a DLL is not recommended.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>If you need to use a global <ph id="ph1">`CImage`</ph> object in a DLL, call <bpt id="p1">[</bpt>CImage::ReleaseGDIPlus<ept id="p1">](#cimage__releasegdiplus)</ept> to explicitly release resources used by GDI+.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>cannot be selected into a new <bpt id="p1">[</bpt>CDC<ept id="p1">](../../mfc/reference/cdc-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>creates its own <bpt id="p1">**</bpt>HDC<ept id="p1">**</ept> for the image.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Because an <ph id="ph1">`HBITMAP`</ph> can only be selected into one <bpt id="p1">**</bpt>HDC<ept id="p1">**</ept> at a time, the <ph id="ph2">`HBITMAP`</ph> associated with the <ph id="ph3">`CImage`</ph> cannot be selected into another <bpt id="p2">**</bpt>HDC<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>If you need a <ph id="ph1">`CDC`</ph>, retrieve the <bpt id="p1">**</bpt>HDC<ept id="p1">**</ept> from the <ph id="ph2">`CImage`</ph> and give it to [CDC::FromHandle](../../mfc/reference/cdc-class.md#cdc__fromhandle.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>When you use <ph id="ph1">`CImage`</ph> in an MFC project, note which member functions in your project expect a pointer to a <bpt id="p1">[</bpt>CBitmap<ept id="p1">](../../mfc/reference/cbitmap-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>If you want to use <ph id="ph1">`CImage`</ph> with such a function, like <bpt id="p1">[</bpt>CMenu::AppendMenu<ept id="p1">](../../mfc/reference/cmenu-class.md#cmenu__appendmenu)</ept>, use <bpt id="p2">[</bpt>CBitmap::FromHandle<ept id="p2">](../../mfc/reference/cbitmap-class.md#cbitmap__fromhandle)</ept>, pass it your <ph id="ph2">`CImage`</ph> <ph id="ph3">`HBITMAP`</ph>, and use the returned <ph id="ph4">`CBitmap*`</ph>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Through <ph id="ph1">`CImage`</ph>, you have access to the actual bits of a DIB section.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>You can use a <ph id="ph1">`CImage`</ph> object anywhere you previously used a Win32 HBITMAP or DIB section.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The following <ph id="ph1">`CImage`</ph> methods have limitations on their use:</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Method</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Limitation</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>PlgBlt</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Works with only Windows NT 4.0 or later.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Will not work on applications running on Windows 95/98 or later.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>MaskBlt</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Works with only Windows NT 4.0 or later.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Will not work on applications running on Windows 95/98 or later.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>AlphaBlend</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Works with only Windows 2000, Windows 98, and later systems.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>TransparentBlt</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Works with only Windows 2000, Windows 98, and later systems.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Draw</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Supports transparency with only Windows 2000, Windows 98, and later systems.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>You can use <ph id="ph1">`CImage`</ph> from either MFC or ATL.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>When you create a project using <ph id="ph1">`CImage`</ph>, you must define <ph id="ph2">`CString`</ph> before you include <ph id="ph3">`atlimage.h`</ph>.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>If your project uses ATL without MFC, include <ph id="ph1">`atlstr.h`</ph> before you include <ph id="ph2">`atlimage.h`</ph>.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>If your project uses MFC (or if it is an ATL project with MFC support), include <ph id="ph1">`afxstr.h`</ph> before you include <ph id="ph2">`atlimage.h`</ph>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Likewise, you must include <ph id="ph1">`atlimage.h`</ph> before you include <ph id="ph2">`atlimpl.cpp`</ph>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>To accomplish this easily, include <ph id="ph1">`atlimage.h`</ph> in your <ph id="ph2">`stdafx.h`</ph>.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> atlimage.h</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>CImage::AlphaBlend</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Displays bitmaps that have transparent or semitransparent pixels.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Handle to the destination device context.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The x-coordinate, in logical units, of the upper left corner of the destination rectangle.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The y-coordinate, in logical units, of the upper left corner of the destination rectangle.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>bSrcAlpha</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>An alpha transparency value to be used on the entire source bitmap.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The default 0xff (255) assumes that your image is opaque, and that you want to use per-pixel alpha values only.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The alpha-blending function for source and destination bitmaps, a global alpha value to be applied to the entire source bitmap, and format information for the source bitmap.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The source and destination blend functions are currently limited to <bpt id="p1">**</bpt>AC_SRC_OVER<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">[</bpt>POINT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162805)</ept> structure that identifies the upper left corner of the destination rectangle, in logical units.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The width, in logical units, of the destination rectangle.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The height, in logical units, of the destination rectangle.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The logical x-coordinate of the upper left corner of the source rectangle.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The logical y-coordinate of the upper left corner of the source rectangle.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The width, in logical units, of the source rectangle.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The height, in logical units, of the source rectangle.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">[</bpt>RECT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure, identifying the destination.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>A reference to a <ph id="ph1">`RECT`</ph> structure, identifying the source.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Alpha-blend bitmaps support color blending on a per-pixel basis.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`bBlendOp`</ph> is set to the default of <bpt id="p1">**</bpt>AC_SRC_OVER<ept id="p1">**</ept>, the source bitmap is placed over the destination bitmap based on the alpha values of the source pixels.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>CImage::Attach</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Attaches <ph id="ph1">`hBitmap`</ph> to a <ph id="ph2">`CImage`</ph> object.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>A handle to an <ph id="ph1">`HBITMAP`</ph>.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>eOrientation</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Specifies the orientation of the bitmap.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Can be one of the following:</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>DIBOR_DEFAULT<ept id="p1">**</ept> The orientation of the bitmap is determined by the operating system.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>However, this may not always have the intended results on all operating systems.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>For more information on this, see the following Knowledge Base article ( <bpt id="p1">**</bpt>Q186586<ept id="p1">**</ept>): PRB: GetObject() Always Returns Positive Height For DIB Sections.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>DIBOR_BOTTOMUP<ept id="p1">**</ept> The lines of the bitmap are in reverse order.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>This causes <bpt id="p1">[</bpt>CImage::GetBits<ept id="p1">](#cimage__getbits)</ept> to return a pointer near the end of the bitmap buffer and <bpt id="p2">[</bpt>CImage::GetPitch<ept id="p2">](#cimage__getpitch)</ept> to return a negative number.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>DIBOR_TOPDOWN<ept id="p1">**</ept>  The lines of the bitmap are in top to bottom order.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>This causes <bpt id="p1">[</bpt>CImage::GetBits<ept id="p1">](#cimage__getbits)</ept> to return a pointer to the first byte of the bitmap buffer and <bpt id="p2">[</bpt>CImage::GetPitch<ept id="p2">](#cimage__getpitch)</ept> to return a positive number.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The bitmap can be either a non-DIB section bitmap or a DIB section bitmap.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>IsDIBSection<ept id="p1">](#cimage__isdibsection)</ept> for a list of methods that you can use only with DIB section bitmaps.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>CImage::BitBlt</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Copies a bitmap from the source device context to this current device context.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The destination <bpt id="p1">**</bpt>HDC<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The logical x-coordinate of the upper left corner of the destination rectangle.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The logical y-coordinate of the upper left corner of the destination rectangle.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The raster operation to be performed.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Raster-operation codes define exactly how to combine the bits of the source, the destination, and the pattern (as defined by the currently selected brush) to form the destination.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>BitBlt<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd183370)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](./includes/winsdk_md.md)]</ph> for a list of other raster-operation codes and their descriptions.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>POINT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162805)</ept> structure indicating the upper left corner of the destination rectangle.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The width, in logical units, of the destination rectangle.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The height, in logical units, of the destination rectangle.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The logical x-coordinate of the upper left corner of the source rectangle.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The logical y-coordinate of the upper left corner of the source rectangle.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>RECT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure indicating the destination rectangle.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>POINT<ept id="p1">**</ept> structure indicating the upper left corner of the source rectangle.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise zero.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>BitBlt<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd183370)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](./includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>CImage::CImage</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CImage`</ph> object.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Once you have constructed the object, call <bpt id="p1">[</bpt>Create<ept id="p1">](#cimage__create)</ept>, <bpt id="p2">[</bpt>Load<ept id="p2">](#cimage__load)</ept>, <bpt id="p3">[</bpt>LoadFromResource<ept id="p3">](#cimage__loadfromresource)</ept>, or <bpt id="p4">[</bpt>Attach<ept id="p4">](#cimage__attach)</ept> to attach a bitmap to the object.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> In Visual Studio, this class keeps a count of the number of <ph id="ph1">`CImage`</ph> objects created.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Whenever the count goes to 0, the function <bpt id="p1">**</bpt>GdiplusShutdown<ept id="p1">**</ept> is automatically called to release resources used by GDI+.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>This ensures that any <ph id="ph1">`CImage`</ph> objects created directly or indirectly by DLLs are always destroyed properly and that <bpt id="p1">**</bpt>GdiplusShutdown<ept id="p1">**</ept> is not called from DllMain.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Using global <ph id="ph1">`CImage`</ph> objects in a DLL is not recommended.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>If you need to use a global <ph id="ph1">`CImage`</ph> object in a DLL, call <bpt id="p1">[</bpt>CImage::ReleaseGDIPlus<ept id="p1">](#cimage__releasegdiplus)</ept> to explicitly release resources used by GDI+.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>CImage::Create</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">`CImage`</ph> bitmap and attach it to the previously constructed <ph id="ph2">`CImage`</ph> object.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The width of the <ph id="ph1">`CImage`</ph> bitmap, in pixels.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The height of the <ph id="ph1">`CImage`</ph> bitmap, in pixels.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`nHeight`</ph> is positive, the bitmap is a bottom-up DIB and its origin is the lower left corner.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`nHeight`</ph> is negative, the bitmap is a top-down DIB and its origin is the upper left corner.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The numbers of bits per pixel in the bitmap.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Usually 4, 8, 16, 24, or 32.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Can be 1 for monochrome bitmaps or masks.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Specifies if the bitmap object has an alpha channel.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Can be a combination of zero or more of the following values:</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>createAlphaChannel<ept id="p1">**</ept> Can only be used if <ph id="ph1">`nBPP`</ph> is 32, and <ph id="ph2">`eCompression`</ph> is <bpt id="p2">**</bpt>BI_RGB<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>If specified, the created image has an alpha (transparency) value for each pixel, stored in the 4th byte of each pixel (unused in a non-alpha 32-bit image).</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>This alpha channel is automatically used when calling <bpt id="p1">[</bpt>CImage::AlphaBlend<ept id="p1">](#cimage__alphablend)</ept>.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>In calls to <bpt id="p1">[</bpt>CImage::Draw<ept id="p1">](#cimage__draw)</ept>, images with an alpha channel are automatically alpha blended to the destination.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>CImage::CreateEx</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">`CImage`</ph> bitmap and attach it to the previously constructed <ph id="ph2">`CImage`</ph> object.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The width of the <ph id="ph1">`CImage`</ph> bitmap, in pixels.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The height of the <ph id="ph1">`CImage`</ph> bitmap, in pixels.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`nHeight`</ph> is positive, the bitmap is a bottom-up DIB and its origin is the lower left corner.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`nHeight`</ph> is negative, the bitmap is a top-down DIB and its origin is the upper left corner.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The numbers of bits per pixel in the bitmap.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Usually 4, 8, 16, 24, or 32.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Can be 1 for monochrome bitmaps or masks.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Specifies the type of compression for a compressed bottom-up bitmap (top-down DIBs cannot be compressed).</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Can be one of the following values:</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>BI_RGB<ept id="p1">**</ept> The format is uncompressed.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Specifying this value when calling <ph id="ph1">`CImage::CreateEx`</ph> is equivalent to calling <ph id="ph2">`CImage::Create`</ph>.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>BI_BITFIELDS<ept id="p1">**</ept> The format is uncompressed and the color table consists of three <ph id="ph1">`DWORD`</ph> color masks that specify the red, green, and blue components, respectively, of each pixel.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>This is valid when used with 16- and 32-bpp bitmaps.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>pdwBitfields</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Only used if <ph id="ph1">`eCompression`</ph> is set to <bpt id="p1">**</bpt>BI_BITFIELDS<ept id="p1">**</ept>, otherwise it must be <bpt id="p2">**</bpt>NULL<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>A pointer to an array of three <ph id="ph1">`DWORD`</ph> bitmasks, specifying which bits of each pixel are used for the red, green, and blue components of the color, respectively.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>For information on restrictions for the bitfields, see <bpt id="p1">[</bpt>BITMAPINFOHEADER<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd183376)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](./includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Specifies if the bitmap object has an alpha channel.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Can be a combination of zero or more of the following values:</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>createAlphaChannel<ept id="p1">**</ept> Can only be used if <ph id="ph1">`nBPP`</ph> is 32, and <ph id="ph2">`eCompression`</ph> is <bpt id="p2">**</bpt>BI_RGB<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>If specified, the created image has an alpha (transparency) value for each pixel, stored in the 4th byte of each pixel (unused in a non-alpha 32-bit image).</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>This alpha channel is automatically used when calling <bpt id="p1">[</bpt>CImage::AlphaBlend<ept id="p1">](#cimage__alphablend)</ept>.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>In calls to <bpt id="p1">[</bpt>CImage::Draw<ept id="p1">](#cimage__draw)</ept>, images with an alpha channel are automatically alpha blended to the destination.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> if successful.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Otherwise <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>The following example creates a 100x100 pixel bitmap, using 16 bits to encode each pixel.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>In a given 16-bit pixel, bits 0-3 encode the red component, bits 4-7 encode green, and bits 8-11 encode blue.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The remaining 4 bits are unused.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>CImage::Destroy</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Detaches the bitmap from the <ph id="ph1">`CImage`</ph> object and destroys the bitmap.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>CImage::Detach</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Detaches a bitmap from a <ph id="ph1">`CImage`</ph> object.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>A handle to the bitmap detached, or <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> if no bitmap is attached.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>CImage::Draw</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Copies a bitmap from the source device context to the current device context.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>A handle to the destination device context.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>The x-coordinate, in logical units, of the upper left corner of the destination rectangle.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The y-coordinate, in logical units, of the upper left corner of the destination rectangle.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>The width, in logical units, of the destination rectangle.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>The height, in logical units, of the destination rectangle.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>The x-coordinate, in logical units, of the upper left corner of the source rectangle.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>The y-coordinate, in logical units, of the upper left corner of the source rectangle.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>The width, in logical units, of the source rectangle.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>The height, in logical units, of the source rectangle.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">[</bpt>RECT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure, identifying the destination.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>A reference to a <ph id="ph1">`RECT`</ph> structure, identifying the source.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">[</bpt>POINT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162805)</ept> structure that identifies the upper left corner of the destination rectangle, in logical units.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Draw<ept id="p1">**</ept> performs the same operation as <bpt id="p2">[</bpt>StretchBlt<ept id="p2">](#cimage__stretchblt)</ept>, unless the image contains a transparent color or alpha channel.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>In that case, <bpt id="p1">**</bpt>Draw<ept id="p1">**</ept> performs the same operation as either <bpt id="p2">[</bpt>TransparentBlt<ept id="p2">](#cimage__transparentblt)</ept> or <bpt id="p3">[</bpt>AlphaBlend<ept id="p3">](#cimage__alphablend)</ept> as required.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>For versions of <bpt id="p1">**</bpt>Draw<ept id="p1">**</ept> that do not specify a source rectangle, the entire source image is the default.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>For the version of <bpt id="p1">**</bpt>Draw<ept id="p1">**</ept> that does not specify a size for the destination rectangle, the size of the source image is the default and no stretching or shrinking occurs.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>CImage::GetBits</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the actual bit values of a given pixel in a bitmap.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>A pointer to the bitmap buffer.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>If the bitmap is a bottom-up DIB, the pointer points near the end of the buffer.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>If the bitmap is a top-down DIB, the pointer points to the first byte of the buffer.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Using this pointer, along with the value returned by <bpt id="p1">[</bpt>GetPitch<ept id="p1">](#cimage__getpitch)</ept>, you can locate and change individual pixels in an image.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>This method supports only DIB section bitmaps; consequently, you access the pixels of a <ph id="ph1">`CImage`</ph> object the same way you would the pixels of a DIB section.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>The returned pointer points to the pixel at the location (0, 0).</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>CImage::GetBPP</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>Retrieves the bits-per-pixel value.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>The number of bits per pixel.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>This value determines the number of bits that define each pixel and the maximum number of colors in the bitmap.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>The bits per pixel is usually 1, 4, 8, 16, 24, or 32.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">**</bpt>biBitCount<ept id="p1">**</ept> member of <bpt id="p2">[</bpt>BITMAPINFOHEADER<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/dd183376)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](./includes/winsdk_md.md)]</ph> for more information about this value.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>CImage::GetColorTable</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>Retrieves red, green, blue (RGB) color values from a range of entries in the palette of the DIB section.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>The color table index of the first entry to retrieve.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The number of color table entries to retrieve.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>A pointer to the array of <bpt id="p1">[</bpt>RGBQUAD<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162938)</ept> structures to retrieve the color table entries.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>CImage::GetDC</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Retrieves the device context that currently has the image selected into it.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>A handle to a device context.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>For each call to <ph id="ph1">`GetDC`</ph>, you must have a subsequent call to <bpt id="p1">[</bpt>ReleaseDC<ept id="p1">](#cimage__releasedc)</ept>.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>CImage::GetExporterFilterString</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Finds image formats available for saving images.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>strExporters</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">**</bpt>CSimpleString<ept id="p1">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">**</bpt>Remarks<ept id="p1">**</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>An array of GUIDs, with each element corresponding to one of the file types in the string.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>In the example in <ph id="ph1">`pszAllFilesDescription`</ph> below, <ph id="ph2">`aguidFileTypes`</ph>[0] is <ph id="ph3">`GUID_NULL`</ph> and the remaining array values are the image file formats supported by the current operating system.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>For a complete list of constants, see <bpt id="p1">**</bpt>Image File Format Constants<ept id="p1">**</ept> in the <ph id="ph1">[!INCLUDE[winSDK](./includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>If this parameter is not <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, the filter string will have one additional filter at the beginning of the list.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>This filter will have the current value of <ph id="ph1">`pszAllFilesDescription`</ph> for its description, and accepts files of any extension supported by any other exporter in the list.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>Set of bit flags specifying which file types to exclude from the list.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Allowable flags are:</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>excludeGIF<ept id="p1">**</ept> = 0x01   Excludes GIF files.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>excludeBMP<ept id="p1">**</ept> = 0x02   Excludes BMP (Windows Bitmap) files.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>excludeEMF<ept id="p1">**</ept> = 0x04   Excludes EMF (Enhanced Metafile) files.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>excludeWMF<ept id="p1">**</ept> = 0x08   Excludes WMF (Windows Metafile) files.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>excludeJPEG<ept id="p1">**</ept> = 0x10   Excludes JPEG files.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>excludePNG<ept id="p1">**</ept> = 0x20   Excludes PNG files.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>excludeTIFF<ept id="p1">**</ept> = 0x40   Excludes TIFF files.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>excludeIcon<ept id="p1">**</ept> = 0x80   Excludes ICO (Windows Icon) files.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>excludeOther<ept id="p1">**</ept> = 0x80000000   Excludes any other file type not listed above.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>excludeDefaultLoad<ept id="p1">**</ept> = 0   For load, all file types are included by default</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>excludeDefaultSave<ept id="p1">**</ept><ph id="ph1"> = </ph><bpt id="p2">**</bpt>excludeIcon &amp;#124; excludeEMF &amp;#124; excludeWMF<ept id="p2">**</ept> For saving, these files are excluded by default because they usually have special requirements.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>The separator used between the image formats.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">**</bpt>Remarks<ept id="p1">**</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph>.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>You can pass the resulting format string to your MFC <bpt id="p1">[</bpt>CFileDialog<ept id="p1">](../../mfc/reference/cfiledialog-class.md)</ept> object to expose the file extensions of the available image formats in the File Save As dialog box.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>The parameter <bpt id="p1">*</bpt>strExporter<ept id="p1">*</ept> has the format:</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>file description0&amp;#124;<ph id="ph1">\*</ph>.ext0&amp;#124;filedescription1&amp;#124;<ph id="ph2">\*</ph>.ext1&amp;#124;...file description <bpt id="p1">*</bpt>n<ept id="p1">*</ept>&amp;#124;<ph id="ph3">\*</ph>.ext <bpt id="p2">*</bpt>n<ept id="p2">*</ept>&amp;#124;&amp;#124;</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>where '&amp;#124;' is the separator character specified by <ph id="ph1">`chSeparator`</ph>.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Use the default separator '&amp;#124;' if you pass this string to an MFC <ph id="ph1">`CFileDialog`</ph> object.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>Use the null separator '\0' if you pass this string to a common File Save dialog box.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>CImage::GetHeight</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Retrieves the height, in pixels, of an image.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>The height, in pixels, of an image.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>CImage::GetImporterFilterString</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>Finds image formats available for loading images.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>strImporters</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">**</bpt>CSimpleString<ept id="p1">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">**</bpt>Remarks<ept id="p1">**</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>An array of GUIDs, with each element corresponding to one of the file types in the string.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>In the example in <ph id="ph1">`pszAllFilesDescription`</ph> below, <ph id="ph2">`aguidFileTypes`</ph>[0] is <ph id="ph3">`GUID_NULL`</ph> with the remaining array values are the image file formats supported by the current operating system.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>For a complete list of constants, see <bpt id="p1">**</bpt>Image File Format Constants<ept id="p1">**</ept> in the <ph id="ph1">[!INCLUDE[winSDK](./includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>If this parameter is not <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, the filter string will have one additional filter at the beginning of the list.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>This filter will have the current value of <ph id="ph1">`pszAllFilesDescription`</ph> for its description, and accepts files of any extension supported by any other exporter in the list.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>Set of bit flags specifying which file types to exclude from the list.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>Allowable flags are:</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>excludeGIF<ept id="p1">**</ept> = 0x01   Excludes GIF files.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>excludeBMP<ept id="p1">**</ept> = 0x02   Excludes BMP (Windows Bitmap) files.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>excludeEMF<ept id="p1">**</ept> = 0x04   Excludes EMF (Enhanced Metafile) files.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>excludeWMF<ept id="p1">**</ept> = 0x08   Excludes WMF (Windows Metafile) files.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>excludeJPEG<ept id="p1">**</ept> = 0x10   Excludes JPEG files.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>excludePNG<ept id="p1">**</ept> = 0x20   Excludes PNG files.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>excludeTIFF<ept id="p1">**</ept> = 0x40   Excludes TIFF files.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>excludeIcon<ept id="p1">**</ept> = 0x80   Excludes ICO (Windows Icon) files.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>excludeOther<ept id="p1">**</ept> = 0x80000000   Excludes any other file type not listed above.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>excludeDefaultLoad<ept id="p1">**</ept> = 0   For load, all file types are included by default</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>excludeDefaultSave<ept id="p1">**</ept><ph id="ph1"> = </ph><bpt id="p2">**</bpt>excludeIcon &amp;#124; excludeEMF &amp;#124; excludeWMF<ept id="p2">**</ept> For saving, these files are excluded by default because they usually have special requirements.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>The separator used between the image formats.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">**</bpt>Remarks<ept id="p1">**</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>You can pass the resulting format string to your MFC <bpt id="p1">[</bpt>CFileDialog<ept id="p1">](../../mfc/reference/cfiledialog-class.md)</ept> object to expose the file extensions of the available image formats in the <bpt id="p2">**</bpt>File Open<ept id="p2">**</ept> dialog box.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>The parameter <bpt id="p1">*</bpt>strImporter<ept id="p1">*</ept> has the format:</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>file description0&amp;#124;<ph id="ph1">\*</ph>.ext0&amp;#124;filedescription1&amp;#124;<ph id="ph2">\*</ph>.ext1&amp;#124;...file description <bpt id="p1">*</bpt>n<ept id="p1">*</ept>&amp;#124;<ph id="ph3">\*</ph>.ext <bpt id="p2">*</bpt>n<ept id="p2">*</ept>&amp;#124;&amp;#124;</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>where '&amp;#124;' is the separator character specified by <ph id="ph1">`chSeparator`</ph>.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>Use the default separator '&amp;#124;' if you pass this string to an MFC <ph id="ph1">`CFileDialog`</ph> object.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>Use the null separator '\0' if you pass this string to a common <bpt id="p1">**</bpt>File Open<ept id="p1">**</ept> dialog box.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>CImage::GetMaxColorTableEntries</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>Retrieves the maximum number of entries in the color table.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>The number of entries in the color table.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>This method supports only DIB section bitmaps.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>CImage::GetPitch</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>Retrieves the pitch of an image.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>The pitch of the image.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>If the return value is negative, the bitmap is a bottom-up DIB and its origin is the lower left corner.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>If the return value is positive, the bitmap is a top-down DIB and its origin is the upper left corner.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>The pitch is the distance, in bytes, between two memory addresses that represent the beginning of one bitmap line and the beginning of the next bitmap line.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>Because pitch is measured in bytes, the pitch of an image helps you to determine the pixel format.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>The pitch can also include additional memory, reserved for the bitmap.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`GetPitch`</ph> with <bpt id="p1">[</bpt>GetBits<ept id="p1">](#cimage__getbits)</ept> to find individual pixels of an image.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>This method supports only DIB section bitmaps.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>CImage::GetPixel</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Retrieves the color of the pixel at the location specified by <bpt id="p1">*</bpt>x<ept id="p1">*</ept> and <bpt id="p2">*</bpt>y<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>x</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>The x-coordinate of the pixel.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>y</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>The y-coordinate of the pixel.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>The red, green, blue (RGB) value of the pixel.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>If the pixel is outside of the current clipping region, the return value is <bpt id="p1">**</bpt>CLR_INVALID<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>CImage::GetPixelAddress</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>Retrieves the exact address of a pixel.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>x</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>The x-coordinate of the pixel.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>y</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>The y-coordinate of the pixel.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>The address is determined according to the coordinates of a pixel, the pitch of the bitmap, and the bits per pixel.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>For formats that have less than 8 bits per pixel, this method returns the address of the byte containing the pixel.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>For example, if your image format has 4 bits per pixel, <ph id="ph1">`GetPixelAddress`</ph> returns the address of the first pixel in the byte, and you must calculate for 2 pixels per byte.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>This method supports only DIB section bitmaps.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>CImage::GetTransparentColor</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>Retrieves the indexed location of the transparent color in the color palette.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>The index of the transparent color.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>CImage::GetWidth</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>Retrieves the width, in pixels, of an image.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>The width of the bitmap, in pixels.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>CImage::IsDIBSection</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>Determines if the attached bitmap is a DIB section.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>true<ept id="p1">**</ept> if the attached bitmap is a DIB section.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>Otherwise <bpt id="p1">**</bpt>false<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>If the bitmap is not a DIB section, you cannot use the following <ph id="ph1">`CImage`</ph> methods, which support only DIB section bitmaps:</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>GetBits</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>GetColorTable</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>GetMaxColorTableEntries</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>GetPitch</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>GetPixelAddress</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>IsIndexed</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>SetColorTable</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>CImage::IsIndexed</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>Determines whether a bitmap's pixels are mapped to a color palette.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>true<ept id="p1">**</ept> if indexed; otherwise <bpt id="p2">**</bpt>false<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>This method returns <bpt id="p1">**</bpt>true<ept id="p1">**</ept> only if the bitmap is 8-bit (256 colors) or less.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>This method supports only DIB section bitmaps.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>CImage::IsNull</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>Determines if a bitmap is currently loaded.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>This method returns <bpt id="p1">**</bpt>True<ept id="p1">**</ept> if a bitmap is not currently loaded; otherwise <bpt id="p2">**</bpt>False<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>CImage::IsTransparencySupported</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>Indicates whether the application supports transparent bitmaps and was compiled for Windows 2000 or later.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>Nonzero if the current platform supports transparency.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>Otherwise 0.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>If the return value is nonzero, and transparency is supported, a call to <bpt id="p1">[</bpt>AlphaBlend<ept id="p1">](#cimage__alphablend)</ept>, <bpt id="p2">[</bpt>TransparentBlt<ept id="p2">](#cimage__transparentblt)</ept>, or <bpt id="p3">[</bpt>Draw<ept id="p3">](#cimage__draw)</ept> will handle transparent colors.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>If the application is compiled for use with operating systems before Windows 2000 or Windows 98, this method will always return 0, even on newer operating systems.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>CImage::Load</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>Loads an image.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>A pointer to a string containing the name of the image file to load.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>A pointer to a stream containing the name of the image file to load.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph>.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>Loads the image specified by <bpt id="p1">*</bpt>pszFileName<ept id="p1">*</ept> or <ph id="ph1">`pStream`</ph>.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>Valid image types are BMP, GIF, JPEG, PNG, and TIFF.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>CImage::LoadFromResource</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>Loads an image from a <ph id="ph1">`BITMAP`</ph> resource.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>Handle to an instance of the module that contains the image to be loaded.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>A pointer to the string containing the name of the resource containing the image to load.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>The ID of the resource to load.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>The resource must be of type <ph id="ph1">`BITMAP`</ph>.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>CImage::MaskBlt</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>Combines the color data for the source and destination bitmaps using the specified mask and raster operation.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>The handle to the module whose executable contains the resource.</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>The x-coordinate, in logical units, of the upper left corner of the destination rectangle.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>The y-coordinate, in logical units, of the upper left corner of the destination rectangle.</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>The width, in logical units, of the destination rectangle and source bitmap.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>The height, in logical units, of the destination rectangle and source bitmap.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>The logical x-coordinate of the upper left corner of the source bitmap.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>The logical y-coordinate of the upper left corner of the source bitmap.</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>Handle to the monochrome mask bitmap combined with the color bitmap in the source device context.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>The horizontal pixel offset for the mask bitmap specified by the <ph id="ph1">`hbmMask`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>The vertical pixel offset for the mask bitmap specified by the <ph id="ph1">`hbmMask`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Specifies both foreground and background ternary raster operation codes that the method uses to control the combination of source and destination data.</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>The background raster operation code is stored in the high-order byte of the high-order word of this value; the foreground raster operation code is stored in the low-order byte of the high-order word of this value; the low-order word of this value is ignored, and should be zero.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>For a discussion of foreground and background in the context of this method, see <ph id="ph1">`MaskBlt`</ph> in the <ph id="ph2">[!INCLUDE[winSDK](./includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>For a list of common raster operation codes, see <ph id="ph1">`BitBlt`</ph> in the <ph id="ph2">[!INCLUDE[winSDK](./includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>A reference to a <ph id="ph1">`RECT`</ph> structure, identifying the destination.</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`POINT`</ph> structure indicating the upper left corner of the source rectangle.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>POINT<ept id="p1">**</ept> structure indicating the upper left corner of the mask bitmap.</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">**</bpt>POINT<ept id="p1">**</ept> structure that identifies the upper left corner of the destination rectangle, in logical units.</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>Nonzero if successful, otherwise 0.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>This method applies to Windows NT, versions 4.0 and later only.</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>CImage::operator HBITMAP</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>Use this operator to get the attached Windows GDI handle of the <ph id="ph1">`CImage`</ph> object.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>This operator is a casting operator, which supports direct use of an <ph id="ph1">`HBITMAP`</ph> object.</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>CImage::PlgBlt</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>Performs a bit-block transfer from a rectangle in a source device context into a parallelogram in a destination device context.</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>A handle to the destination device context.</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>pPoints</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>A pointer to an array of three points in logical space that identify three corners of the destination parallelogram.</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>The upper left corner of the source rectangle is mapped to the first point in this array, the upper-right corner to the second point in this array, and the lower left corner to the third point.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>The lower-right corner of the source rectangle is mapped to the implicit fourth point in the parallelogram.</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>A handle to an optional monochrome bitmap that is used to mask the colors of the source rectangle.</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>The x-coordinate, in logical units, of the upper left corner of the source rectangle.</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>The y-coordinate, in logical units, of the upper left corner of the source rectangle.</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>The width, in logical units, of the source rectangle.</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>The height, in logical units, of the source rectangle.</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>The x-coordinate of the upper left corner of the monochrome bitmap.</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>The y-coordinate of the upper left corner of the monochrome bitmap.</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">[</bpt>RECT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure specifying the coordinates of the source rectangle.</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>POINT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162805)</ept> structure indicating the upper left corner of the mask bitmap.</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>Nonzero if successful, otherwise 0.</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`hbmMask`</ph> identifies a valid monochrome bitmap, <bpt id="p1">**</bpt>PlgBit<ept id="p1">**</ept> uses this bitmap to mask the bits of color data from the source rectangle.</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>This method applies to Windows NT, versions 4.0 and later only.</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>PlgBlt<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162804)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](./includes/winsdk_md.md)]</ph> for more detailed information.</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>CImage::ReleaseDC</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>Releases the device context.</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>Because only one bitmap can be selected into a device context at a time, you must call <ph id="ph1">`ReleaseDC`</ph> for each call to <bpt id="p1">[</bpt>GetDC<ept id="p1">](#cimage__getdc)</ept>.</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>CImage::ReleaseGDIPlus</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>Releases resources used by GDI+.</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>This method must be called to free resources allocated by a global <ph id="ph1">`CImage`</ph> object.</source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CImage::CImage<ept id="p1">](#cimage__cimage)</ept>.</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>CImage::Save</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>Saves an image to the specified stream or file on disk.</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>A pointer to a COM IStream object containing the file image data.</source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>pszFileName</source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>A pointer to the file name for the image.</source>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>The file type to save the image as.</source>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>Can be one of the following:</source>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ImageFormatBMP<ept id="p1">**</ept> An uncompressed bitmap image.</source>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ImageFormatPNG<ept id="p1">**</ept> A Portable Network Graphic (PNG) compressed image.</source>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ImageFormatJPEG<ept id="p1">**</ept> A JPEG compressed image.</source>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ImageFormatGIF<ept id="p1">**</ept> A GIF compressed image.</source>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>For a complete list of constants, see <bpt id="p1">**</bpt>Image File Format Constants<ept id="p1">**</ept> in the <ph id="ph1">[!INCLUDE[winSDK](./includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>A standard <ph id="ph1">`HRESULT`</ph>.</source>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>Call this function to save the image using a specified name and type.</source>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`guidFileType`</ph> parameter is not included, the file name's file extension will be used to determine the image format.</source>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>If no extension is provided, the image will be saved in BMP format.</source>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source>CImage::SetColorTable</source>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source>Sets the red, green, blue (RGB) color values for a range of entries in the palette of the DIB section.</source>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source>The color table index of the first entry to set.</source>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source>The number of color table entries to set.</source>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>A pointer to the array of <bpt id="p1">[</bpt>RGBQUAD<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162938)</ept> structures to set the color table entries.</source>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source>This method supports only DIB section bitmaps.</source>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source>CImage::SetPixel</source>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>Sets the color of a pixel at a given location in the bitmap.</source>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source>x</source>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source>The horizontal location of the pixel to set.</source>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>y</source>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>The vertical location of the pixel to set.</source>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>The color to which you set the pixel.</source>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>This method fails if the pixel coordinates lie outside of the selected clipping region.</source>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source>CImage::SetPixelIndexed</source>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source>Sets the pixel color to the color located at <ph id="ph1">`iIndex`</ph> in the color palette.</source>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>x</source>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve">
          <source>The horizontal location of the pixel to set.</source>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source>y</source>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source>The vertical location of the pixel to set.</source>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve">
          <source>The index of a color in the color palette.</source>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source>CImage::SetPixelRGB</source>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>Sets the pixel at the locations specified by <bpt id="p1">*</bpt>x<ept id="p1">*</ept> and <bpt id="p2">*</bpt>y<ept id="p2">*</ept> to the colors indicated by <bpt id="p3">*</bpt>r<ept id="p3">*</ept>, <bpt id="p4">*</bpt>g<ept id="p4">*</ept>, and <bpt id="p5">*</bpt>b<ept id="p5">*</ept>, in a red, green, blue (RGB) image.</source>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>x</source>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>The horizontal location of the pixel to set.</source>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve">
          <source>y</source>
        </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source>The vertical location of the pixel to set.</source>
        </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>r</source>
        </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>The intensity of the red color.</source>
        </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source>g</source>
        </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve">
          <source>The intensity of the green color.</source>
        </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source>b</source>
        </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source>The intensity of the blue color.</source>
        </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>The red, green, and blue parameters are each represented by a number between 0 and 255.</source>
        </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source>If you set all three parameters to zero, the combined resulting color is black.</source>
        </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve">
          <source>If you set all three parameters to 255, the combined resulting color is white.</source>
        </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>CImage::SetTransparentColor</source>
        </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source>Sets a color at a given indexed location as transparent.</source>
        </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source>iTransparentColor</source>
        </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve">
          <source>The index, in a color palette, of the color to set to transparent.</source>
        </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve">
          <source>If –1, no color is set to transparent.</source>
        </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve">
          <source>The index of the color previously set as transparent.</source>
        </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source>CImage::StretchBlt</source>
        </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source>Copies a bitmap from the source device context to this current device context.</source>
        </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source>A handle to the destination device context.</source>
        </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source>The x-coordinate, in logical units, of the upper left corner of the destination rectangle.</source>
        </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve">
          <source>The y-coordinate, in logical units, of the upper left corner of the destination rectangle.</source>
        </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>The width, in logical units, of the destination rectangle.</source>
        </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source>The height, in logical units, of the destination rectangle.</source>
        </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve">
          <source>The raster operation to be performed.</source>
        </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve">
          <source>Raster-operation codes define exactly how to combine the bits of the source, the destination, and the pattern (as defined by the currently selected brush) to form the destination.</source>
        </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>BitBlt<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd183370)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](./includes/winsdk_md.md)]</ph> for a list of other raster-operation codes and their descriptions.</source>
        </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">[</bpt>RECT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure, identifying the destination.</source>
        </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve">
          <source>The x-coordinate, in logical units, of the upper left corner of the source rectangle.</source>
        </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve">
          <source>The y-coordinate, in logical units, of the upper left corner of the source rectangle.</source>
        </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source>The width, in logical units, of the source rectangle.</source>
        </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>The height, in logical units, of the source rectangle.</source>
        </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve">
          <source>A reference to a <ph id="ph1">`RECT`</ph> structure, identifying the source.</source>
        </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source>Nonzero if successful, otherwise 0.</source>
        </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>StretchBlt<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd145120)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](./includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve">
          <source>CImage::TransparentBlt</source>
        </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve">
          <source>Copies a bitmap from the source device context to this current device context.</source>
        </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve">
          <source>A handle to the destination device context.</source>
        </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve">
          <source>The x-coordinate, in logical units, of the upper left corner of the destination rectangle.</source>
        </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve">
          <source>The y-coordinate, in logical units, of the upper left corner of the destination rectangle.</source>
        </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve">
          <source>The width, in logical units, of the destination rectangle.</source>
        </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve">
          <source>The height, in logical units, of the destination rectangle.</source>
        </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve">
          <source>crTransparent</source>
        </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve">
          <source>The color in the source bitmap to treat as transparent.</source>
        </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>CLR_INVALID<ept id="p1">**</ept>, indicating that the color currently set as the transparent color of the image should be used.</source>
        </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">[</bpt>RECT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure, identifying the destination.</source>
        </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve">
          <source>The x-coordinate, in logical units, of the upper left corner of the source rectangle.</source>
        </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve">
          <source>The y-coordinate, in logical units, of the upper left corner of the source rectangle.</source>
        </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve">
          <source>The width, in logical units, of the source rectangle.</source>
        </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve">
          <source>The height, in logical units, of the source rectangle.</source>
        </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve">
          <source>A reference to a <ph id="ph1">`RECT`</ph> structure, identifying the source.</source>
        </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> if successful, otherwise <bpt id="p2">**</bpt>FALSE<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve">
          <source>is supported for source bitmaps of 4 bits per pixel and 8 bits per pixel.</source>
        </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>CImage::AlphaBlend<ept id="p1">](#cimage__alphablend)</ept> to specify 32 bits-per-pixel bitmaps with transparency.</source>
        </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve">
          <source>MMXSwarm Sample</source>
        </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve">
          <source>SimpleImage Sample</source>
        </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve">
          <source>Device-Independent Bitmaps</source>
        </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve">
          <source>CreateDIBSection</source>
        </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>ATL COM Desktop Components<ept id="p1">](../../atl/atl-com-desktop-components.md)</ept><ph id="ph1">
</ph><bpt id="p2"> [</bpt>Device-Independent Bitmaps<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/dd183562)</ept></source>
        </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve">
          <source>CreateDIBSection</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>