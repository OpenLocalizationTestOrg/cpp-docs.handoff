<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8bfa8f5404b7313022c4baa14232bd2f90b5dd0e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\catlfile-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">22b5ba28aa265ba3c3d426897820070b5f0e8a33</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4fff8ad3d20c2ea112cd356e6b042d653b221f09</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CAtlFile Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CAtlFile Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class provides a thin wrapper around the Windows file-handling API.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This class and its members cannot be used in applications that execute in the Windows Runtime.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlFile::CAtlFile<ept id="p1">](#catlfile__catlfile)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The constructor.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlFile::Create<ept id="p1">](#catlfile__create)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Call this method to create or open a file.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlFile::Flush<ept id="p1">](#catlfile__flush)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Call this method to clear the buffers for the file and cause all buffered data to be written to the file.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlFile::GetOverlappedResult<ept id="p1">](#catlfile__getoverlappedresult)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Call this method to get the results of an overlapped operation on the file.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlFile::GetPosition<ept id="p1">](#catlfile__getposition)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Call this method to get the current file pointer position from the file.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlFile::GetSize<ept id="p1">](#catlfile__getsize)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Call this method to get the size in bytes of the file.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlFile::LockRange<ept id="p1">](#catlfile__lockrange)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Call this method to lock a region in the file to prevent other processes from accessing it.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlFile::Read<ept id="p1">](#catlfile__read)</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Call this method to read data from a file starting at the position indicated by the file pointer.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlFile::Seek<ept id="p1">](#catlfile__seek)</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Call this method to move the file pointer of the file.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlFile::SetSize<ept id="p1">](#catlfile__setsize)</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Call this method to set the size of the file.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlFile::UnlockRange<ept id="p1">](#catlfile__unlockrange)</ept></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Call this method to unlock a region of the file.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlFile::Write<ept id="p1">](#catlfile__write)</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Call this method to write data to the file starting at the position indicated by the file pointer.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Protected Data Members</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CAtlFile::m_pTM<ept id="p1">](#catlfile__m_ptm)</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Pointer to <ph id="ph1">`CAtlTransactionManager`</ph> object</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Use this class when file-handling needs are relatively simple, but more abstraction than the Windows API provides is required, without including MFC dependencies.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CHandle<ept id="p1">](../../atl/reference/chandle-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> atlfile.h</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="catlfile__catlfile"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CAtlFile::CAtlFile</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The constructor.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The file object.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The file handle.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Pointer to CAtlTransactionManager object</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The copy constructor transfers ownership of the file handle from the original <ph id="ph1">`CAtlFile`</ph> object to the newly constructed object.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="catlfile__create"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CAtlFile::Create</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Call this method to create or open a file.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>szFilename<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The file name.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The desired access.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>See <ph id="ph1">`dwDesiredAccess`</ph> in <bpt id="p1">[</bpt>CreateFile<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa363858)</ept> in the <ph id="ph2">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The share mode.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>See <ph id="ph1">`dwShareMode`</ph> in <bpt id="p1">**</bpt>CreateFile<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The creation disposition.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>See <ph id="ph1">`dwCreationDisposition`</ph> in <bpt id="p1">**</bpt>CreateFile<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The flags and attributes.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>See <ph id="ph1">`dwFlagsAndAttributes`</ph> in <bpt id="p1">**</bpt>CreateFile<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The security attributes.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">*</bpt>lpSecurityAttributes<ept id="p1">*</ept> in <bpt id="p2">**</bpt>CreateFile<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The template file.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>See <ph id="ph1">`hTemplateFile`</ph> in <bpt id="p1">**</bpt>CreateFile<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`S_OK`</ph> on success, or an error <ph id="ph2">`HRESULT`</ph> on failure.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Calls <bpt id="p1">[</bpt>CreateFile<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa363858)</ept> to create or open the file.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="catlfile__flush"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CAtlFile::Flush</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Call this method to clear the buffers for the file and cause all buffered data to be written to the file.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`S_OK`</ph> on success, or an error <ph id="ph2">`HRESULT`</ph> on failure.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Calls <bpt id="p1">[</bpt>FlushFileBuffers<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa364439)</ept> to flush buffered data to the file.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="catlfile__getoverlappedresult"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CAtlFile::GetOverlappedResult</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Call this method to get the results of an overlapped operation on the file.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The overlapped structure.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>See <ph id="ph1">`lpOverlapped`</ph> in <bpt id="p1">[</bpt>GetOverlappedResult<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683209)</ept> in the <ph id="ph2">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>dwBytesTransferred<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The bytes transferred.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">*</bpt>lpNumberOfBytesTransferred<ept id="p1">*</ept> in <ph id="ph1">`GetOverlappedResult`</ph>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The wait option.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>See <ph id="ph1">`bWait`</ph> in <ph id="ph2">`GetOverlappedResult`</ph>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`S_OK`</ph> on success, or an error <ph id="ph2">`HRESULT`</ph> on failure.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Calls <bpt id="p1">[</bpt>GetOverlappedResult<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683209)</ept> to get the results of an overlapped operation on the file.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="catlfile__getposition"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CAtlFile::GetPosition</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Call this method to get the current file pointer position.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The position in bytes.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`S_OK`</ph> on success, or an error <ph id="ph2">`HRESULT`</ph> on failure.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Calls <bpt id="p1">[</bpt>SetFilePointer<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa365541)</ept> to get the current file pointer position.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="catlfile__getsize"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CAtlFile::GetSize</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Call this method to get the size in bytes of the file.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The number of bytes in the file.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`S_OK`</ph> on success, or an error <ph id="ph2">`HRESULT`</ph> on failure.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Calls <bpt id="p1">[</bpt>GetFileSize<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa364955)</ept> to get the size in bytes of the file.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="catlfile__lockrange"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CAtlFile::LockRange</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Call this method to lock a region in the file to prevent other processes from accessing it.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The position in the file where the lock should begin.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The length of the byte range to be locked.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`S_OK`</ph> on success, or an error <ph id="ph2">`HRESULT`</ph> on failure.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Calls <bpt id="p1">[</bpt>LockFile<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa365202)</ept> to lock a region in the file.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Locking bytes in a file prevents access to those bytes by other processes.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>You can lock more than one region of a file, but no overlapping regions are allowed.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>When you unlock a region, using <bpt id="p1">[</bpt>CAtlFile::UnlockRange<ept id="p1">](#catlfile__unlockrange)</ept>, the byte range must correspond exactly to the region that was previously locked.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`LockRange`</ph> does not merge adjacent regions; if two locked regions are adjacent, you must unlock each separately.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="catlfile__m_ptm"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CAtlFile::m_pTM</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Pointer to a <ph id="ph1">`CAtlTransactionManager`</ph> object.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="catlfile__read"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CAtlFile::Read</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Call this method to read data from a file starting at the position indicated by the file pointer.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Pointer to the buffer that will receive the data read from the file.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The buffer size in bytes.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The number of bytes read.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The overlapped structure.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>See <ph id="ph1">`lpOverlapped`</ph> in <bpt id="p1">[</bpt>ReadFile<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa365467)</ept> in the <ph id="ph2">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The completion routine.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">*</bpt>lpCompletionRoutine<ept id="p1">*</ept> in <bpt id="p2">[</bpt>ReadFileEx<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/aa365468)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`S_OK`</ph> on success, or an error <ph id="ph2">`HRESULT`</ph> on failure.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The first three forms call <bpt id="p1">[</bpt>ReadFile<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa365467)</ept>, the last <bpt id="p2">[</bpt>ReadFileEx<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/aa365468)</ept> to read data from the file.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>CAtlFile::Seek<ept id="p1">](#catlfile__seek)</ept> to move the file pointer.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="catlfile__seek"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CAtlFile::Seek</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Call this method to move the file pointer of the file.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The offset from the starting point given by <ph id="ph1">`dwFrom`</ph>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The starting point (FILE_BEGIN, FILE_CURRENT, or FILE_END).</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`S_OK`</ph> on success, or an error <ph id="ph2">`HRESULT`</ph> on failure.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Calls <bpt id="p1">[</bpt>SetFilePointer<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa365541)</ept> to move the file pointer.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="catlfile__setsize"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CAtlFile::SetSize</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Call this method to set the size of the file.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The new length of the file in bytes.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`S_OK`</ph> on success, or an error <ph id="ph2">`HRESULT`</ph> on failure.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Calls <bpt id="p1">[</bpt>SetFilePointer<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa365541)</ept> and <bpt id="p2">[</bpt>SetEndOfFile<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/aa365531)</ept> to set the size of the file.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>On return, the file pointer is positioned at the end of the file.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="catlfile__unlockrange"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CAtlFile::UnlockRange</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Call this method to unlock a region of the file.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The position in the file where the unlock should begin.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The length of the byte range to be unlocked.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`S_OK`</ph> on success, or an error <ph id="ph2">`HRESULT`</ph> on failure.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Calls <bpt id="p1">[</bpt>UnlockFile<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa365715)</ept> to unlock a region of the file.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="catlfile__write"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CAtlFile::Write</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Call this method to write data to the file starting at the position indicated by the file pointer.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The buffer containing the data to be written to the file.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The number of bytes to be transferred from the buffer.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The overlapped structure.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>See <ph id="ph1">`lpOverlapped`</ph> in <bpt id="p1">[</bpt>WriteFile<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa365747)</ept> in the <ph id="ph2">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The completion routine.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">*</bpt>lpCompletionRoutine<ept id="p1">*</ept> in <bpt id="p2">[</bpt>WriteFileEx<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/aa365748)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The bytes written.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`S_OK`</ph> on success, or an error <ph id="ph2">`HRESULT`</ph> on failure.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The first three forms call <bpt id="p1">[</bpt>WriteFile<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa365747)</ept>, the last calls <bpt id="p2">[</bpt>WriteFileEx<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/aa365748)</ept> to write data to the file.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>CAtlFile::Seek<ept id="p1">](#catlfile__seek)</ept> to move the file pointer.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Marquee Sample<ept id="p1">](../../visual-cpp-samples.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Class Overview<ept id="p1">](../../atl/atl-class-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CHandle Class<ept id="p1">](../../atl/reference/chandle-class.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>