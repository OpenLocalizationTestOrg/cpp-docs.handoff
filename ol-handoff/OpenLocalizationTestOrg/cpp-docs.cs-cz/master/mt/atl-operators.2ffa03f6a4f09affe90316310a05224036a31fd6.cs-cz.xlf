<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">204d743c336c47e2f13b35510debef7bd041558f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\atl-operators.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6bc35174482ebd0eca2f63733d5ff8d81e705bf7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3ecd7c18068ee5952454ea04f4168157abc422f9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>ATL Operators | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ATL Operators</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This section contains the reference topics for the ATL global operators.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Operator</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>operator ==<ept id="p1">](#operator_eq_eq)</ept></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Compares two <ph id="ph1">`CSid`</ph> objects or <ph id="ph2">`SID`</ph> structures for equality.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>operator !=<ept id="p1">](#operator_neq)</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Compares two <ph id="ph1">`CSid`</ph> objects or <ph id="ph2">`SID`</ph> structures for inequality.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>operator &lt;<ept id="p1">](#operator_lt)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Tests if the <ph id="ph1">`CSid`</ph> object or <ph id="ph2">`SID`</ph> structure on the left side of the operator is less than the <ph id="ph3">`CSid`</ph> object or <ph id="ph4">`SID`</ph> structure on the right side (for STL compatibility).</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>operator &gt;<ept id="p1">](#operator_gt)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Tests if the <ph id="ph1">`CSid`</ph> object or <ph id="ph2">`SID`</ph> structure on the left side of the operator is greater than the <ph id="ph3">`CSid`</ph> object or <ph id="ph4">`SID`</ph> structure on the right side (for STL compatibility).</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>operator &lt;=<ept id="p1">](#operator_lt__eq)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Tests if the <ph id="ph1">`CSid`</ph> object or <ph id="ph2">`SID`</ph> structure on the left side of the operator is less than or equal to the <ph id="ph3">`CSid`</ph> object or <ph id="ph4">`SID`</ph> structure on the right side (for STL compatibility).</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>operator &gt;=<ept id="p1">](#operator_gt__eq)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Tests if the <ph id="ph1">`CSid`</ph> object or <ph id="ph2">`SID`</ph> structure on the left side of the operator is greater than or equal to the <ph id="ph3">`CSid`</ph> object or <ph id="ph4">`SID`</ph> structure on the right side (for STL compatibility).</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>These operators are all defined in the file atlsecurity.h.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="operator_eq_eq"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  operator ==</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Compares <ph id="ph1">`CSid`</ph> objects or <ph id="ph2">`SID`</ph> (security identifier) structures for equality.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">`CSid`</ph> object or <ph id="ph2">`SID`</ph> structure to compare.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The second <ph id="ph1">`CSid`</ph> object or <ph id="ph2">`SID`</ph> structure to compare.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">**</bpt>true<ept id="p1">**</ept> if the objects are equal, <bpt id="p2">**</bpt>false<ept id="p2">**</ept> if they are not equal.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="operator_neq"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  operator !=</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Compares <ph id="ph1">`CSid`</ph> objects or <ph id="ph2">`SID`</ph> (security identifier) structures for inequality.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">`CSid`</ph> object or <ph id="ph2">`SID`</ph> structure to compare.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The second <ph id="ph1">`CSid`</ph> object or <ph id="ph2">`SID`</ph> structure to compare.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">**</bpt>true<ept id="p1">**</ept> if the objects are not equal, <bpt id="p2">**</bpt>false<ept id="p2">**</ept> if they are equal.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="operator_lt"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  operator &lt;</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Tests if the <ph id="ph1">`CSid`</ph> object or <ph id="ph2">`SID`</ph> structure on the left side of the operator is less than the <ph id="ph3">`CSid`</ph> object or <ph id="ph4">`SID`</ph> structure on the right side (for STL compatibility).</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">`CSid`</ph> object or <ph id="ph2">`SID`</ph> structure to compare.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The second <ph id="ph1">`CSid`</ph> object or <ph id="ph2">`SID`</ph> structure to compare.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">**</bpt>true<ept id="p1">**</ept> if the address of the <ph id="ph1">`lhs`</ph> object is less than the address of the <ph id="ph2">`rhs`</ph> object, <bpt id="p2">**</bpt>false<ept id="p2">**</ept> otherwise.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This operator acts on the address of the <ph id="ph1">`CSid`</ph> object or <ph id="ph2">`SID`</ph> structure, and is implemented to provide compatibility with STL collection classes.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="operator_gt"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  operator &gt;</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Tests if the <ph id="ph1">`CSid`</ph> object or <ph id="ph2">`SID`</ph> structure on the left side of the operator is greater than the <ph id="ph3">`CSid`</ph> object or <ph id="ph4">`SID`</ph> structure on the right side (for STL compatibility).</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">`CSid`</ph> object or <ph id="ph2">`SID`</ph> structure to compare.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The second <ph id="ph1">`CSid`</ph> object or <ph id="ph2">`SID`</ph> structure to compare.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">**</bpt>true<ept id="p1">**</ept> if the address of the <ph id="ph1">`lhs`</ph> is greater than the address of the <ph id="ph2">`rhs`</ph>, <bpt id="p2">**</bpt>false<ept id="p2">**</ept> otherwise.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This operator acts on the address of the <ph id="ph1">`CSid`</ph> object or <ph id="ph2">`SID`</ph> structure, and is implemented to provide compatibility with STL collection classes.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="operator_lt__eq"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  operator &lt;=</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Tests if the <ph id="ph1">`CSid`</ph> object or <ph id="ph2">`SID`</ph> structure on the left side of the operator is less than or equal to the <ph id="ph3">`CSid`</ph> object or <ph id="ph4">`SID`</ph> structure on the right side (for STL compatibility).</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">`CSid`</ph> object or <ph id="ph2">`SID`</ph> structure to compare.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The second <ph id="ph1">`CSid`</ph> object or <ph id="ph2">`SID`</ph> structure to compare.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">**</bpt>true<ept id="p1">**</ept> if the address of the <ph id="ph1">`lhs`</ph> is less than or equal to the address of the <ph id="ph2">`rhs`</ph>, <bpt id="p2">**</bpt>false<ept id="p2">**</ept> otherwise.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This operator acts on the address of the <ph id="ph1">`CSid`</ph> object or <ph id="ph2">`SID`</ph> structure, and is implemented to provide compatibility with STL collection classes.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="operator_gt__eq"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  operator &gt;=</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Tests if the <ph id="ph1">`CSid`</ph> object or <ph id="ph2">`SID`</ph> structure on the left side of the operator is greater than or equal to the <ph id="ph3">`CSid`</ph> object or <ph id="ph4">`SID`</ph> structure on the right side (for STL compatibility).</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">`CSid`</ph> object or <ph id="ph2">`SID`</ph> structure to compare.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The second <ph id="ph1">`CSid`</ph> object or <ph id="ph2">`SID`</ph> structure to compare.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">**</bpt>true<ept id="p1">**</ept> if the address of the <ph id="ph1">`lhs`</ph> is greater than or equal to the address of the <ph id="ph2">`rhs`</ph>, <bpt id="p2">**</bpt>false<ept id="p2">**</ept> otherwise.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This operator acts on the address of the <ph id="ph1">`CSid`</ph> object or <ph id="ph2">`SID`</ph> structure, and is implemented to provide compatibility with STL collection classes.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>