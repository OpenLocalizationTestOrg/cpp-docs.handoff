<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3d3830fb8c9c36cc5524fced2ea798569341ecf9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\cmfcribbonbar-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1c89380cee8f4790a6a8e3f2bb337b4f3f9ec45a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b8e4545e0af91be7f2d157b1f4e522e95fa613aa</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CMFCRibbonBar Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CMFCRibbonBar Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CMFCRibbonBar`</ph> class implements a ribbon bar similar to that used in Office 2007.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Default constructor.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::ActivateContextCategory<ept id="p1">](#cmfcribbonbar__activatecontextcategory)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Activates a context category that is already visible.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::AddCategory<ept id="p1">](#cmfcribbonbar__addcategory)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Adds a new ribbon category to the ribbon.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::AddContextCategory<ept id="p1">](#cmfcribbonbar__addcontextcategory)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Adds a context category.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::AddMainCategory<ept id="p1">](#cmfcribbonbar__addmaincategory)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Adds a new main ribbon category.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::AddPrintPreviewCategory<ept id="p1">](#cmfcribbonbar__addprintpreviewcategory)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::AddQATOnlyCategory<ept id="p1">](#cmfcribbonbar__addqatonlycategory)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::AddToTabs<ept id="p1">](#cmfcribbonbar__addtotabs)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Add a ribbon element to the right side of a ribbon bar.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::CreateEx<ept id="p1">](#cmfcribbonbar__createex)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Creates a control bar and attaches it to the <bpt id="p1">[</bpt>CPane<ept id="p1">](../../mfc/reference/cpane-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CPane::CreateEx<ept id="p1">](../../mfc/reference/cpane-class.md#cpane__createex)</ept>.)</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::Create<ept id="p1">](#cmfcribbonbar__create)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Creates a ribbon bar control and attaches it to a ribbon bar.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::DeactivateKeyboardFocus<ept id="p1">](#cmfcribbonbar__deactivatekeyboardfocus)</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::DrawMenuImage<ept id="p1">](#cmfcribbonbar__drawmenuimage)</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::DWMCompositionChanged<ept id="p1">](#cmfcribbonbar__dwmcompositionchanged)</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::EnableKeyTips<ept id="p1">](#cmfcribbonbar__enablekeytips)</ept></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Enable or disable key tips for the ribbon control.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::EnablePrintPreview<ept id="p1">](#cmfcribbonbar__enableprintpreview)</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Enable the <bpt id="p1">**</bpt>Print Preview<ept id="p1">**</ept> tab.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::EnableToolTips<ept id="p1">](#cmfcribbonbar__enabletooltips)</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Enables or disables tooltips and tooltip descriptions on the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::FindByData<ept id="p1">](#cmfcribbonbar__findbydata)</ept></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Find a ribbon element by using data that a user specifies.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::FindByID<ept id="p1">](#cmfcribbonbar__findbyid)</ept></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Finds a ribbon element that has the specified command id.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::FindCategoryIndexByData<ept id="p1">](#cmfcribbonbar__findcategoryindexbydata)</ept></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Finds the index of the ribbon category that contains the user-defined data.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::ForceRecalcLayout<ept id="p1">](#cmfcribbonbar__forcerecalclayout)</ept></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::GetActiveCategory<ept id="p1">](#cmfcribbonbar__getactivecategory)</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Gets a pointer to an active category.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::GetCaptionHeight<ept id="p1">](#cmfcribbonbar__getcaptionheight)</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Returns the caption height.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CBasePane::GetCaptionHeight<ept id="p1">](../../mfc/reference/cbasepane-class.md#cbasepane__getcaptionheight)</ept>.)</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::GetCategory<ept id="p1">](#cmfcribbonbar__getcategory)</ept></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets the pointer to a category located at a specified index.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::GetCategoryCount<ept id="p1">](#cmfcribbonbar__getcategorycount)</ept></source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Gets the number of the ribbon categories in the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::GetCategoryHeight<ept id="p1">](#cmfcribbonbar__getcategoryheight)</ept></source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::GetCategoryIndex<ept id="p1">](#cmfcribbonbar__getcategoryindex)</ept></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Returns the index of a ribbon category.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::GetContextName<ept id="p1">](#cmfcribbonbar__getcontextname)</ept></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Retrieves the name of the context category caption that you specify by using an ID.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::GetDroppedDown<ept id="p1">](#cmfcribbonbar__getdroppeddown)</ept></source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::GetElementsByID<ept id="p1">](#cmfcribbonbar__getelementsbyid)</ept></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets an array that contains the pointers to all the ribbon elements that have the specified ID.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::GetApplicationButton<ept id="p1">](#cmfcribbonbar__getapplicationbutton)</ept></source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Gets a pointer to a ribbon button.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::GetFocused<ept id="p1">](#cmfcribbonbar__getfocused)</ept></source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Returns a focused element.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::GetHideFlags<ept id="p1">](#cmfcribbonbar__gethideflags)</ept></source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::GetItemIDsList<ept id="p1">](#cmfcribbonbar__getitemidslist)</ept></source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::GetKeyboardNavigationLevel<ept id="p1">](#cmfcribbonbar__getkeyboardnavigationlevel)</ept></source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::GetKeyboardNavLevelCurrent<ept id="p1">](#cmfcribbonbar__getkeyboardnavlevelcurrent)</ept></source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::GetKeyboardNavLevelParent<ept id="p1">](#cmfcribbonbar__getkeyboardnavlevelparent)</ept></source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::GetMainCategory<ept id="p1">](#cmfcribbonbar__getmaincategory)</ept></source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the ribbon category that is currently selected.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::GetQATCommandsLocation<ept id="p1">](#cmfcribbonbar__getqatcommandslocation)</ept></source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::GetQATDroppedDown<ept id="p1">](#cmfcribbonbar__getqatdroppeddown)</ept></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::GetQuickAccessCommands<ept id="p1">](#cmfcribbonbar__getquickaccesscommands)</ept></source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Fills a list that contains the command IDs of all the elements that appear on the Quick Access Toolbar.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::GetQuickAccessToolbarLocation<ept id="p1">](#cmfcribbonbar__getquickaccesstoolbarlocation)</ept></source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::GetTabTrancateRatio<ept id="p1">](#cmfcribbonbar__gettabtrancateratio)</ept></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::GetTooltipFixedWidthLargeImage<ept id="p1">](#cmfcribbonbar__gettooltipfixedwidthlargeimage)</ept></source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::GetTooltipFixedWidthRegular<ept id="p1">](#cmfcribbonbar__gettooltipfixedwidthregular)</ept></source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::GetVisibleCategoryCount<ept id="p1">](#cmfcribbonbar__getvisiblecategorycount)</ept></source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::HideAllContextCategories<ept id="p1">](#cmfcribbonbar__hideallcontextcategories)</ept></source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Hides all the categories that are active and visible.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::HideKeyTips<ept id="p1">](#cmfcribbonbar__hidekeytips)</ept></source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::HitTest<ept id="p1">](#cmfcribbonbar__hittest)</ept></source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Finds a pointer to the ribbon element that is located at the specified point in the ribbon bar's client coordinates.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::IsKeyTipEnabled<ept id="p1">](#cmfcribbonbar__iskeytipenabled)</ept></source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Determines whether keytips are enabled.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::IsMainRibbonBar<ept id="p1">](#cmfcribbonbar__ismainribbonbar)</ept></source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::IsPrintPreviewEnabled<ept id="p1">](#cmfcribbonbar__isprintpreviewenabled)</ept></source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Determines whether the <bpt id="p1">**</bpt>Print Preview<ept id="p1">**</ept> tab is enabled.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::IsQATEmpty<ept id="p1">](#cmfcribbonbar__isqatempty)</ept></source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::IsQuickAccessToolbarOnTop<ept id="p1">](#cmfcribbonbar__isquickaccesstoolbarontop)</ept></source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Specifies whether the Quick Access Toolbar is located above the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::IsReplaceFrameCaption<ept id="p1">](#cmfcribbonbar__isreplaceframecaption)</ept></source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Determines whether the ribbon bar replaces the main frame caption, or is added below the frame caption.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::IsShowGroupBorder<ept id="p1">](#cmfcribbonbar__isshowgroupborder)</ept></source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::IsToolTipDescrEnabled<ept id="p1">](#cmfcribbonbar__istooltipdescrenabled)</ept></source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Determines whether the tooltip descriptions are enabled.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::IsToolTipEnabled<ept id="p1">](#cmfcribbonbar__istooltipenabled)</ept></source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Determines whether the tooltips for the ribbon bar are enabled.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::IsTransparentCaption<ept id="p1">](#cmfcribbonbar__istransparentcaption)</ept></source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::IsWindows7Look<ept id="p1">](#cmfcribbonbar__iswindows7look)</ept></source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Indicates whether the ribbon has Windows 7-style look (small rectangular application button).</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::LoadFromResource<ept id="p1">](#cmfcribbonbar__loadfromresource)</ept></source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Overloaded.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Loads a Ribbon Bar from application resources.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::OnClickButton<ept id="p1">](#cmfcribbonbar__onclickbutton)</ept></source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::OnEditContextMenu<ept id="p1">](#cmfcribbonbar__oneditcontextmenu)</ept></source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::OnRTLChanged<ept id="p1">](#cmfcribbonbar__onrtlchanged)</ept></source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>(Overrides <ph id="ph1">`CPane::OnRTLChanged`</ph>.)</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::OnSetAccData<ept id="p1">](#cmfcribbonbar__onsetaccdata)</ept></source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CBasePane::OnSetAccData<ept id="p1">](../../mfc/reference/cbasepane-class.md#cbasepane__onsetaccdata)</ept>.)</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::OnShowRibbonContextMenu<ept id="p1">](#cmfcribbonbar__onshowribboncontextmenu)</ept></source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::OnShowRibbonQATMenu<ept id="p1">](#cmfcribbonbar__onshowribbonqatmenu)</ept></source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::OnSysKeyDown<ept id="p1">](#cmfcribbonbar__onsyskeydown)</ept></source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::OnSysKeyUp<ept id="p1">](#cmfcribbonbar__onsyskeyup)</ept></source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::PopTooltip<ept id="p1">](#cmfcribbonbar__poptooltip)</ept></source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::PreTranslateMessage<ept id="p1">](#cmfcribbonbar__pretranslatemessage)</ept></source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>(Overrides <ph id="ph1">`CBasePane::PreTranslateMessage`</ph>.)</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::RecalcLayout<ept id="p1">](#cmfcribbonbar__recalclayout)</ept></source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CPane::RecalcLayout<ept id="p1">](../../mfc/reference/cpane-class.md#cpane__recalclayout)</ept>.)</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::RemoveAllCategories<ept id="p1">](#cmfcribbonbar__removeallcategories)</ept></source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Removes all the ribbon categories from the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::RemoveAllFromTabs<ept id="p1">](#cmfcribbonbar__removeallfromtabs)</ept></source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Removes all ribbon elements from the tab area.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::RemoveCategory<ept id="p1">](#cmfcribbonbar__removecategory)</ept></source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Removes the ribbon category that is located at the specified index.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::SaveToXMLBuffer<ept id="p1">](#cmfcribbonbar__savetoxmlbuffer)</ept></source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Saves the Ribbon Bar to a buffer.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::SaveToXMLFile<ept id="p1">](#cmfcribbonbar__savetoxmlfile)</ept></source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Saves the Ribbon Bar to XML file.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::SetActiveCategory<ept id="p1">](#cmfcribbonbar__setactivecategory)</ept></source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Sets a specified ribbon category to active.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::SetActiveMDIChild<ept id="p1">](#cmfcribbonbar__setactivemdichild)</ept></source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::SetElementKeys<ept id="p1">](#cmfcribbonbar__setelementkeys)</ept></source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Sets the specified keytips for all ribbon elements that have the specified command ID.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::SetApplicationButton<ept id="p1">](#cmfcribbonbar__setapplicationbutton)</ept></source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Assigns an application ribbon button to the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::SetKeyboardNavigationLevel<ept id="p1">](#cmfcribbonbar__setkeyboardnavigationlevel)</ept></source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::SetMaximizeMode<ept id="p1">](#cmfcribbonbar__setmaximizemode)</ept></source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::SetQuickAccessCommands<ept id="p1">](#cmfcribbonbar__setquickaccesscommands)</ept></source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Adds one or more ribbon elements to the Quick Access Toolbar.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::SetQuickAccessDefaultState<ept id="p1">](#cmfcribbonbar__setquickaccessdefaultstate)</ept></source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Specifies the default state for the Quick Access Toolbar.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::SetQuickAccessToolbarOnTop<ept id="p1">](#cmfcribbonbar__setquickaccesstoolbarontop)</ept></source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Positions the Quick Access Toolbar (QAT) above or below the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::SetTooltipFixedWidth<ept id="p1">](#cmfcribbonbar__settooltipfixedwidth)</ept></source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::SetWindows7Look<ept id="p1">](#cmfcribbonbar__setwindows7look)</ept></source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Enable/disable ribbon Windows 7-style look (small rectangular application button)</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::ShowCategory<ept id="p1">](#cmfcribbonbar__showcategory)</ept></source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Shows or hides the specified ribbon category.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::ShowContextCategories<ept id="p1">](#cmfcribbonbar__showcontextcategories)</ept></source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Shows or hides the context categories that have the specified ID.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::ShowKeyTips<ept id="p1">](#cmfcribbonbar__showkeytips)</ept></source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::ToggleMimimizeState<ept id="p1">](#cmfcribbonbar__togglemimimizestate)</ept></source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Toggles the ribbon bar between the minimized and maximized states..</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar::TranslateChar<ept id="p1">](#cmfcribbonbar__translatechar)</ept></source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Microsoft introduced the Office Fluent Ribbon when it simultaneously released Microsoft Office 2007.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>This ribbon bar is not just a new control.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>It represents a new user-interface paradigm.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The ribbon is a pane that contains a set of tabs called categories.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Each category is logically split into ribbon panels and each panel can contain various controls and command buttons.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The elements that appear on the ribbon bar expand and contract to make the best use of available space.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>For example, if a ribbon panel has insufficient space to display its elements, it becomes a menu button that displays subitems on a pop-up menu.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The ribbon bar behaves as a static (non-floating) control bar and can be docked at the top of a frame.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">`CMFCRibbonStatusBar`</ph> class to implement a status bar similar to the one used in Office 2007.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>A ribbon category contains (and displays) a group of <bpt id="p1">[</bpt>ribbon panels<ept id="p1">](../../mfc/reference/cmfcribbonpanel-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Each ribbon panel contains one or more ribbon elements, which are derived from <bpt id="p1">[</bpt>CMFCRibbonBaseElement<ept id="p1">](../../mfc/reference/cmfcribbonbaseelement-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>For information about how to add a ribbon bar to your existing MFC application, see <bpt id="p1">[</bpt>Walkthrough: Updating the MFC Scribble Application<ept id="p1">](../../mfc/walkthrough-updating-the-mfc-scribble-application-part-1.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CObject<ept id="p1">](../../mfc/reference/cobject-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CCmdTarget<ept id="p1">](../../mfc/reference/ccmdtarget-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CWnd<ept id="p1">](../../mfc/reference/cwnd-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CBasePane<ept id="p1">](../../mfc/reference/cbasepane-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPane<ept id="p1">](../../mfc/reference/cpane-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCRibbonBar<ept id="p1">](../../mfc/reference/cmfcribbonbar-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxribbonbar.h</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__activatecontextcategory"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::ActivateContextCategory</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Activates a context category that is already visible.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`uiContextID`</ph></source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The context category ID.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if a context category with <ph id="ph2">`uiContextID`</ph> is found and activated; otherwise <ph id="ph3">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__addcategory"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::AddCategory</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Creates and initializes a new ribbon category for the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`lpszName`</ph></source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Name of the ribbon category.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`uiSmallImagesResID`</ph></source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Resource ID of the small image list for the ribbon category.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`uiLargeImagesResID`</ph></source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Resource ID of the large image list for the ribbon category.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`sizeSmallImage`</ph></source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Specifies the size of small images for the ribbon category.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`sizeLargeImage`</ph></source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Specifies the size of large images for the ribbon category.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`nInsertAt`</ph></source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Zero based index of the category location.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pRTI`</ph></source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>CMFCRibbonCategory Class<ept id="p1">](../../mfc/reference/cmfcribboncategory-class.md)</ept> run-time class to dynamically create a ribbon category at run-time.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>A pointer to the new ribbon category if the method was successful; otherwise, <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`pRTI`</ph> parameter is not <ph id="ph2">`NULL`</ph>, the new ribbon category is created dynamically using the run-time class.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to use the <ph id="ph1">`AddCategory`</ph> method in the <ph id="ph2">`CMFCRibbonBar`</ph> class.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_RibbonApp#5<ept id="p2">](../../mfc/reference/codesnippet/cpp/cmfcribbonbar-class_1.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__addcontextcategory"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::AddContextCategory</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Creates and initializes a new context category for the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`lpszName`</ph></source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Name of the category.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`lpszContextName`</ph></source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Name of the context category caption.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`uiContextID`</ph></source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Context ID.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`clrContext`</ph></source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Color of the context category caption.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`uiSmallImagesResID`</ph></source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Resource ID of the small image of a context category.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`uiLargeImagesResID`</ph></source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Resource ID of the large image of a context category.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`sizeSmallImage`</ph></source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Size of a small image.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`sizeLargeImage`</ph></source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Size of a large image.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pRTI`</ph></source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Pointer to a runtime class.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>A pointer to the newly created category, or <ph id="ph1">`NULL`</ph> if the <ph id="ph2">`CreateObject`</ph> method of <ph id="ph3">`pRTI`</ph> cannot create the specified category.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Use this function to add a context category.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Context categories are a special type of category that can be shown or hidden at runtime, depending on the current application context.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>For example, when the user selects an object, you can display special tabs with context categories which you use to change the specific selected object.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The color of a context category can be one of the following values:</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>AFX_CategoryColor_None</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>AFX_CategoryColor_Red</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>AFX_CategoryColor_Orange</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>AFX_CategoryColor_Yellow</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>AFX_CategoryColor_Green</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>AFX_CategoryColor_Blue</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>AFX_CategoryColor_Indigo</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>AFX_CategoryColor_Violet</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__addmaincategory"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::AddMainCategory</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Creates a new main ribbon category for the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`lpszName`</ph></source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Name of the main ribbon category.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`uiSmallImagesResID`</ph></source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Resource ID of small images.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`uiLargeImagesResID`</ph></source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Resource ID of large images.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`sizeSmallImage`</ph></source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The size of small images.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`sizeLargeImage`</ph></source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The size of large images.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Pointer to the new main ribbon category if the method was successful; otherwise, <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>If a main ribbon category already exists, it is deleted.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to use the <ph id="ph1">`AddMainCategory`</ph> method in the <ph id="ph2">`CMFCRibbonBar`</ph> class.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_RibbonApp#4<ept id="p2">](../../mfc/reference/codesnippet/cpp/cmfcribbonbar-class_2.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__addprintpreviewcategory"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::AddPrintPreviewCategory</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Creates a print preview category on the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>A pointer to the new ribbon category if the method was successful; otherwise, <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>This method creates a ribbon category and the controls that it needs in order to provide a print preview.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__addqatonlycategory"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::AddQATOnlyCategory</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Creates a quick access toolbar ribbon category.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`lpszName`</ph></source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Name of the category.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`uiSmallImagesResID`</ph></source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Resource ID of the image list for the category.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`sizeSmallImage`</ph></source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Size of images for ribbon elements in the category.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>A pointer to the new category if the method was successful; otherwise, <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>The quick access toolbar ribbon category is only used on the quick access toolbar customization dialog box.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__addtotabs"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::AddToTabs</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Adds the specified ribbon element to the tabs row of the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pElement`</ph></source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Pointer to a ribbon element.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>The ribbon element is positioned before any system buttons.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__cmfcribbonbar"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::CMFCRibbonBar</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Constructs and initializes a <bpt id="p1">[</bpt>CMFCRibbonBar<ept id="p1">](../../mfc/reference/cmfcribbonbar-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bReplaceFrameCaption`</ph></source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> for the ribbon bar to replace the caption of the main frame window; <ph id="ph2">`FALSE`</ph> to locate the ribbon bar under the caption of the main frame window.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__create"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::Create</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>Creates a window for the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pParentWnd`</ph></source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>Pointer to the parent window for the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`dwStyle`</ph></source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>A logical combination of styles for the new window.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`nID`</ph></source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>ID of the new window.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the window was created; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to use the <ph id="ph1">`Create`</ph> method of the <ph id="ph2">`CMFCRibbonBar`</ph> class.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_RibbonApp#1<ept id="p2">](../../mfc/reference/codesnippet/cpp/cmfcribbonbar-class_3.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__createex"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::CreateEx</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Creates a window for the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pParentWnd`</ph></source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Pointer to the parent window for the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`dwCtrlStyle`</ph></source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>This parameter is not used.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`dwStyle`</ph></source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>A logical combination of styles for the new window.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`nID`</ph></source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>ID of the new window.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the window was created; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__deactivatekeyboardfocus"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::DeactivateKeyboardFocus</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Closes all keytip controls on the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bSetFocus`</ph></source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> to set the focus to the parent window of the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__drawmenuimage"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::DrawMenuImage</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>Draws the image for a menu button.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pDC`</ph></source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>Pointer to a device context for the menu button.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pMenuItem`</ph></source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Pointer to a toolbar menu button.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`rectImage`</ph></source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>The display rectangle for a menu button.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the image was drawn; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__dwmcompositionchanged"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::DWMCompositionChanged</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Adjusts the display of the ribbon bar when Desktop Window Manager (DWM) composition is enabled or disabled.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__enablekeytips"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::EnableKeyTips</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>Enables or disables the keytip feature for the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bEnable`</ph></source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> to enable the keytips feature; <ph id="ph2">`FALSE`</ph> to disable the keytips feature.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>When you enable this feature, key tips are displayed when the user presses the ALT or F10 button.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>When the user presses ALT key, key tips are displayed with a 200 millisecond delay.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>This delay allows for shortcuts to be executed so that the pressed ALT key does not interfere with other combinations that include the ALT key.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__enableprintpreview"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::EnablePrintPreview</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Enables or disables the <bpt id="p1">**</bpt>Print Preview<ept id="p1">**</ept> feature.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bEnable`</ph></source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> to enable the <bpt id="p1">**</bpt>Print Preview<ept id="p1">**</ept> feature; <ph id="ph2">`FALSE`</ph> to disable the <bpt id="p2">**</bpt>Print Preview<ept id="p2">**</ept> feature.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`bEnable`</ph> is <ph id="ph2">`FALSE`</ph> and a print preview category exists, it is deleted.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>By default the <bpt id="p1">**</bpt>Print Preview<ept id="p1">**</ept> feature is enabled.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__enabletooltips"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::EnableToolTips</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>Enables or disables tooltips and optional tooltip descriptions on the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bEnable`</ph></source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> to enable tooltips on the ribbon bar; <ph id="ph2">`FALSE`</ph> to disable tooltips on the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bEnableDescr`</ph></source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> to enable tooltip descriptions on the tooltip; <ph id="ph2">`FALSE`</ph> to disable tooltip descriptions on the tooltip.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`bEnable`</ph> parameter determines whether tooltips are displayed when the mouse hovers over a ribbon element.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`bEnableDescr`</ph> parameter determines whether additional descriptive text appears with the tooltip text.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__findbydata"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::FindByData</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to a ribbon element if it has the specified data and visibility.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`dwData`</ph></source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>The data associated with a ribbon element.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bVisibleOnly`</ph></source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> to search visible ribbon elements only; <ph id="ph2">`FALSE`</ph> to search all ribbon elements.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>A pointer to a ribbon element if it has the specified data and visibility; otherwise <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>A ribbon element is any control that you can add to the ribbon, such as a ribbon button, or a ribbon category, or a ribbon slider.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__findbyid"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::FindByID</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the ribbon element that has the specified command ID and search values.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`uiCmdID`</ph></source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Command ID for a ribbon element.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bVisibleOnly`</ph></source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> to search visible ribbon elements only; <ph id="ph2">`FALSE`</ph> to search all ribbon elements.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bExcludeQAT`</ph></source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> to exclude quick access toolbar elements from the search; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>A pointer to a ribbon element if it has the specified command ID and search values; otherwise, <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>A ribbon element is any ribbon control that can be added to the ribbon, such as a ribbon button, or a ribbon category, or a ribbon slider.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>In general, there can be more than one ribbon element that has the same command ID.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>If you want to obtain pointers to all ribbon elements that use a specified command ID, use the <bpt id="p1">[</bpt>CMFCRibbonBar::GetElementsByID<ept id="p1">](#cmfcribbonbar__getelementsbyid)</ept> method.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__findcategoryindexbydata"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::FindCategoryIndexByData</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>Retrieves the index of the ribbon category that contains the specified data.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`dwData`</ph></source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>The data associated with a ribbon category.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>The zero-based index of a ribbon category if the method was successful; otherwise -1.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__forcerecalclayout"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::ForceRecalcLayout</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>Adjusts the layout of all items in the ribbon bar and parent window and redraws the whole window.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__getactivecategory"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::GetActiveCategory</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the active ribbon category.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>A pointer to the active ribbon category; or <ph id="ph1">`NULL`</ph> if no category is active.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>A category is active if it has the focus.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>By default, the active category is the first category on the left side of the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>The main category is displayed when the user presses the application button and it cannot be the active category.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__getapplicationbutton"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::GetApplicationButton</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the application button.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>A pointer to the application button; or <ph id="ph1">`NULL`</ph> if the button has not been set.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__getcaptionheight"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::GetCaptionHeight</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Retrieves the height of the caption area for the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>The height, in pixels, of the caption area for the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__getcategory"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::GetCategory</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the ribbon category at the specified index.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`nIndex`</ph></source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>The zero-based index of a ribbon category in the list of ribbon categories that is contained in the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>A pointer to the ribbon category at the specified index; otherwise, <ph id="ph1">`NULL`</ph> if <ph id="ph2">`nIndex`</ph> was out of range.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__getcategorycount"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::GetCategoryCount</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>Retrieves the number of ribbon categories in the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>The number of the ribbon categories in the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__getcategoryheight"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::GetCategoryHeight</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>Retrieves the height of the category.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>The height of the category.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>The category height includes the height of the category tab.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__getcategoryindex"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::GetCategoryIndex</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>Retrieves the index of the specified ribbon category.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pCategory`</ph></source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>Pointer to a ribbon category.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>The zero-based index of a ribbon category specified by <ph id="ph1">`pCategory`</ph>; or -1 if the ribbon category is not found.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__getcontextname"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::GetContextName</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>Retrieves the name of the context category caption specified by a context ID.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`uiContextID`</ph></source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>A ribbon category context ID.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>[out] <ph id="ph1">`strName`</ph></source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>The name of a context category caption.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the method was successful; otherwise, <ph id="ph2">`FALSE`</ph> if <ph id="ph3">`uiContextID`</ph> was zero or the context category caption was not found.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__getdroppeddown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::GetDroppedDown</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>Retrieves the ribbon element that is currently dropped down.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>The ribbon element that is currently dropped down; or <ph id="ph1">`NULL`</ph> if no ribbon element is currently dropped down.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__getelementsbyid"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::GetElementsByID</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>Retrieves an array of pointers to all ribbon elements that have a specific command ID.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`uiCmdID`</ph></source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>Command ID of a ribbon element.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>[out] <ph id="ph1">`arButtons`</ph></source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>An array of pointers to ribbon elements.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>Multiple ribbon elements can have the same command ID because some ribbon elements can be copied to the quick access toolbar.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__gethideflags"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::GetHideFlags</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>Retrieves the flags that indicate how much of the ribbon bar is visible.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>The flags that indicate how much of the ribbon bar is visible.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>The following table lists the possible combination of flags for the return value:</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>The ribbon bar is minimized vertically and only the category tabs, main button, and quick access toolbar are visible.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>The width of the ribbon bar is less than the minimum width and is completely hidden.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__getitemidslist"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::GetItemIDsList</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>Retrieves the command IDs for the specified collection of ribbon elements on the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>[out] <ph id="ph1">`lstItems`</ph></source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>The list of command IDs for ribbon elements that are contained in the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bHiddenOnly`</ph></source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> to exclude ribbon elements that are displayed; <ph id="ph2">`FALSE`</ph> to include all ribbon elements in the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__getkeyboardnavigationlevel"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::GetKeyboardNavigationLevel</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>Retrieves the current navigation level as the user presses the keytips that are contained on the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>The current navigation level as the user presses the keytips that are contained on the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>The following table lists possible return values:</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>-1</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>Keytips are not displayed.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>Keytips are displayed.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>User has pressed a displayed keytip.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__getkeyboardnavlevelcurrent"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::GetKeyboardNavLevelCurrent</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>Retrieves the current keyboard navigation object on the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>The current keyboard navigation object on the ribbon bar; otherwise <ph id="ph1">`NULL`</ph> if no object currently displays keytips.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>The object that is currently displaying keytips is the current keyboard navigation object.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__getkeyboardnavlevelparent"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::GetKeyboardNavLevelParent</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>Retrieves the parent keyboard navigation object on the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>The parent keyboard navigation object on the ribbon bar; otherwise <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>When the user presses a keytip on the ribbon bar, the current keyboard navigation object becomes the parent keyboard navigation object.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__getmaincategory"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::GetMainCategory</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the main ribbon category.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>A pointer to the main ribbon category.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>The main ribbon category contains the main ribbon panel.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__getqatcommandslocation"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::GetQATCommandsLocation</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>Retrieves the display rectangle for the commands section of the quick access toolbar.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>The display rectangle for the commands section of the quick access toolbar.</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>The commands section of the display rectangle does not include the customization button.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__getqatdroppeddown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::GetQATDroppedDown</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the ribbon element on the quick access toolbar that has its pop-up menu dropped down.</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>A pointer to the ribbon element on the quick access toolbar that has its pop-up menu dropped down.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__getquickaccesscommands"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::GetQuickAccessCommands</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>Retrieves a list of command IDs for the ribbon elements on the quick access toolbar.</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>[out] <ph id="ph1">`lstCommands`</ph></source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>The list of command IDs for the ribbon elements on the quick access toolbar.</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>The list does not contain ribbon elements that are control separators.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__getquickaccesstoolbarlocation"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::GetQuickAccessToolbarLocation</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>Retrieves the display rectangle for the quick access toolbar.</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>The display rectangle for the quick access toolbar.</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__gettabtrancateratio"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::GetTabTrancateRatio</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>Retrieves the percent size reduction in the display width of the category tabs.</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>The percent size reduction in the display width of the category tabs.</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>Category tabs are reduced in width when there is not enough width on the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__gettooltipfixedwidthlargeimage"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::GetTooltipFixedWidthLargeImage</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>Retrieves the large size of tooltip width for the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>The large size of tooltip width in pixels.</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>If the large size of tooltip width is 0, the width varies.</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__gettooltipfixedwidthregular"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::GetTooltipFixedWidthRegular</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>Retrieves the regular size of tooltip width for the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>The regular size of tooltip width in pixels.</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>If the regular size of tooltip width is 0, the width varies.</source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__getvisiblecategorycount"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::GetVisibleCategoryCount</source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>Retrieves the number of visible categories on the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>The number of visible categories on the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__hideallcontextcategories"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::HideAllContextCategories</source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>Hides all the context categories on the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if at least one context category was hidden; otherwise, <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>If a context category is active, the active category is reset to the first visible category in the category list.</source>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__hidekeytips"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::HideKeyTips</source>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>Hides all keytips on the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__hittest"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::HitTest</source>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the ribbon element specified by the location of the point.</source>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`point`</ph></source>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>Location of the point in ribbon bar coordinates.</source>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bCheckActiveCategory`</ph></source>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> to search the active category; <ph id="ph2">`FALSE`</ph> not to search the active category.</source>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bCheckPanelCaption`</ph></source>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> to test the caption of the ribbon panel with the point located in it; <ph id="ph2">`FALSE`</ph> not to test the caption of the ribbon panel with the point located in it.</source>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source>See the Remarks section for more information.</source>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source>A pointer to the ribbon element located at the specified point; otherwise <ph id="ph1">`NULL`</ph> if the point is not located in a ribbon element.</source>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source>The caption of the ribbon panel with the point located in it is not tested unless the <ph id="ph1">`bCheckActiveCategory`</ph> parameter is <ph id="ph2">`TRUE`</ph>.</source>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__iskeytipenabled"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::IsKeyTipEnabled</source>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source>Indicates whether the keytips feature is enabled.</source>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the keytips feature is enabled; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__ismainribbonbar"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::IsMainRibbonBar</source>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source>Indicates whether the ribbon bar is the primary ribbon bar.</source>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`TRUE`</ph>.</source>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source>By default this method always returns <ph id="ph1">`TRUE`</ph>.</source>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>Override this method to indicate whether the ribbon bar is the primary ribbon bar.</source>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__isprintpreviewenabled"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::IsPrintPreviewEnabled</source>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source>Indicates whether the <bpt id="p1">**</bpt>Print Preview<ept id="p1">**</ept> feature is enabled.</source>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the <bpt id="p1">**</bpt>Print Preview<ept id="p1">**</ept> feature is enabled; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__isqatempty"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::IsQATEmpty</source>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source>Indicates whether the quick access toolbar contains command buttons.</source>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the quick access toolbar contains command buttons; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__isquickaccesstoolbarontop"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::IsQuickAccessToolbarOnTop</source>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source>Indicates whether the quick access toolbar is located over or under the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the quick access toolbar is located over the ribbon bar; <ph id="ph2">`FALSE`</ph> if the quick access toolbar is located under the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__isreplaceframecaption"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::IsReplaceFrameCaption</source>
        </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source>Indicates whether the ribbon bar replaces or is under the caption of the main frame window.</source>
        </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the ribbon bar replaces the caption of the main frame window; <ph id="ph2">`FALSE`</ph> if ribbon bar is under the caption of the main frame window.</source>
        </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__isshowgroupborder"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::IsShowGroupBorder</source>
        </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve">
          <source>Indicates whether button groups located on the ribbon bar display a group border.</source>
        </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pGroup`</ph></source>
        </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source>This parameter is not used.</source>
        </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>By default this method always returns <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source>Override this method to indicate whether button groups located on the ribbon bar display a group border.</source>
        </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__istooltipdescrenabled"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::IsToolTipDescrEnabled</source>
        </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source>Indicates whether tooltip descriptions are enabled.</source>
        </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if tooltip descriptions are enabled; <ph id="ph2">`FALSE`</ph> if tooltip descriptions are disabled.</source>
        </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve">
          <source>Tooltip descriptions are additional descriptive text displayed with the tooltip text.</source>
        </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__istooltipenabled"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::IsToolTipEnabled</source>
        </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source>Indicates whether tooltips are enabled or disabled for the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if tooltips are enabled; <ph id="ph2">`FALSE`</ph> if tooltips are disabled.</source>
        </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__istransparentcaption"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::IsTransparentCaption</source>
        </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve">
          <source>Indicates whether the display is set for Windows Aero color scheme.</source>
        </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the color scheme is Windows Aero; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__onclickbutton"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::OnClickButton</source>
        </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve">
          <source>This method is retained for backward compatibility with existing applications and should not be used for new development.</source>
        </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pButton`</ph></source>
        </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve">
          <source>Pointer to the button that was clicked.</source>
        </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`point`</ph></source>
        </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>This parameter is not used.</source>
        </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__oneditcontextmenu"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::OnEditContextMenu</source>
        </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pEdit`</ph></source>
        </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`point`</ph></source>
        </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__onrtlchanged"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::OnRTLChanged</source>
        </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve">
          <source>Called by the framework when the layout changes direction.</source>
        </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bIsRTL`</ph></source>
        </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> if the layout is right-to-left; <ph id="ph2">`FALSE`</ph> if the layout is left-to-right.</source>
        </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve">
          <source>This method adjusts the layout of all controls on the ribbon bar for the new layout direction.</source>
        </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__onsetaccdata"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::OnSetAccData</source>
        </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve">
          <source>This method is internal to the Framework and is not intended to be called from user code.</source>
        </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source>long <ph id="ph1">`lVal`</ph></source>
        </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve">
          <source>The index of the accessible object.</source>
        </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve">
          <source>S_OK if successful; otherwise FALSE or S_FALSE.</source>
        </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__onshowribboncontextmenu"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::OnShowRibbonContextMenu</source>
        </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pWnd`</ph></source>
        </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`x`</ph></source>
        </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`y`</ph></source>
        </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pHit`</ph></source>
        </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__onshowribbonqatmenu"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::OnShowRibbonQATMenu</source>
        </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pWnd`</ph></source>
        </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`x`</ph></source>
        </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`y`</ph></source>
        </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pHit`</ph></source>
        </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__onsyskeydown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::OnSysKeyDown</source>
        </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve">
          <source>Called by the framework when the user presses the F10 key or holds down the ALT key and then presses another key.</source>
        </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pFrameWnd`</ph></source>
        </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve">
          <source>Pointer to the parent main frame window of the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`wParam`</ph></source>
        </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve">
          <source>Virtual key code of the key being pressed.</source>
        </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`lParam`</ph></source>
        </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve">
          <source>Keyboard state flags when the key was pressed.</source>
        </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the keystroke event was processed; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__onsyskeyup"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::OnSysKeyUp</source>
        </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve">
          <source>Called by the framework when the user releases the F10 key, the ALT key, or a key that was pressed when the ALT key was held down.</source>
        </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pFrameWnd`</ph></source>
        </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve">
          <source>Pointer to the parent main frame window of the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`wParam`</ph></source>
        </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve">
          <source>Virtual key code of the key being released.</source>
        </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`lParam`</ph></source>
        </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve">
          <source>This parameter is not used.</source>
        </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the keystroke event was processed; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__poptooltip"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::PopTooltip</source>
        </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve">
          <source>Removes a tooltip from view.</source>
        </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__pretranslatemessage"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::PreTranslateMessage</source>
        </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve">
          <source>Determines if the specified message is processed by the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pMsg`</ph></source>
        </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve">
          <source>Pointer to a message.</source>
        </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the message was processed by the ribbon bar; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__recalclayout"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::RecalcLayout</source>
        </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve">
          <source>Adjusts the layout of all controls on the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve">
          <source>After layout adjustment, the display of the ribbon bar is updated.</source>
        </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__removeallcategories"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::RemoveAllCategories</source>
        </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve">
          <source>Deletes all ribbon categories from the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve">
          <source>This method deletes all ribbon categories from memory and from the category list.</source>
        </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__removeallfromtabs"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::RemoveAllFromTabs</source>
        </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve">
          <source>Removes all ribbon elements from the tab area.</source>
        </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve">
          <source>Use this function if you want to remove all the elements that you added to the tab area by using <bpt id="p1">[</bpt>CMFCRibbonBar::AddToTabs<ept id="p1">](#cmfcribbonbar__addtotabs)</ept> method.</source>
        </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__removecategory"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::RemoveCategory</source>
        </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve">
          <source>Deletes the specified ribbon category from the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`nIndex`</ph></source>
        </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve">
          <source>The zero-based index of a category in the list of ribbon categories that is contained in the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the specified ribbon category was deleted; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve">
          <source>The specified ribbon category is deleted from memory and from the category list.</source>
        </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__setactivecategory"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::SetActiveCategory</source>
        </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve">
          <source>Sets the specified ribbon category as the active category.</source>
        </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pCategory`</ph></source>
        </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve">
          <source>A ribbon category that is contained in the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bForceRestore`</ph></source>
        </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> to maximize the ribbon bar if it is minimized; <ph id="ph2">`FALSE`</ph> to display the active category in a pop-up window if the ribbon bar is minimized.</source>
        </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the specified category was set as the active category; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve">
          <source>The main ribbon category cannot be the active category.</source>
        </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve">
          <source>If the category specified by <ph id="ph1">`pCategory`</ph> is not displayed, it cannot be set as the active category.</source>
        </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__setactivemdichild"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::SetActiveMDIChild</source>
        </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve">
          <source>Associates the system buttons on the ribbon bar that belong to a multiple-document interface (MDI) child window to the specified MDI child window.</source>
        </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pWnd`</ph></source>
        </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve">
          <source>Pointer to an MDI child window.</source>
        </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__setapplicationbutton"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::SetApplicationButton</source>
        </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve">
          <source>Assigns an application ribbon button to the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pButton`</ph></source>
        </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve">
          <source>A pointer to the application ribbon button.</source>
        </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`sizeButton`</ph></source>
        </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve">
          <source>The size of the application ribbon button.</source>
        </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve">
          <source>The application ribbon button is a large rounded button located at the upper-left corner of Ribbon control.</source>
        </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to use the <ph id="ph1">`SetApplicationButton`</ph> method in the <ph id="ph2">`CMFCRibbonBar`</ph> class.</source>
        </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_RibbonApp#3<ept id="p2">](../../mfc/reference/codesnippet/cpp/cmfcribbonbar-class_4.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__setelementkeys"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::SetElementKeys</source>
        </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve">
          <source>Sets the keytips for all ribbon elements that have the specified command ID.</source>
        </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`uiCmdID`</ph></source>
        </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve">
          <source>The command ID of a ribbon element.</source>
        </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`lpszKeys`</ph></source>
        </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve">
          <source>The keytip.</source>
        </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`lpszMenuKeys`</ph></source>
        </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve">
          <source>The menu keytip.</source>
        </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the keytips of at least one ribbon element are set; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve">
          <source>The optional menu keytip is for ribbon elements with a split button that opens a popup menu.</source>
        </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__setkeyboardnavigationlevel"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::SetKeyboardNavigationLevel</source>
        </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve">
          <source>Sets the keyboard navigation level as the user presses the keytips that are contained on the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pLevel`</ph></source>
        </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve">
          <source>Pointer to the current keyboard navigation object.</source>
        </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bSetFocus`</ph></source>
        </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> to set the keyboard focus to the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve">
          <source>Keyboard navigation of the ribbon bar starts when the user presses the ALT or F10 key.</source>
        </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve">
          <source>The user selects the next navigation level by pressing a keytip on the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve">
          <source>The user can return to the previous navigation level by pressing the escape key.</source>
        </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__setmaximizemode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::SetMaximizeMode</source>
        </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve">
          <source>Adjusts the ribbon bar when the window size of a multiple-document interface (MDI) child window enters or leaves the maximized state.</source>
        </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bMax`</ph></source>
        </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> to display the system buttons for an MDI child window on the ribbon bar; <ph id="ph2">`FALSE`</ph> to remove the system buttons for an MDI child window from the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pWnd`</ph></source>
        </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve">
          <source>Pointer to the main frame window for the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve">
          <source>The ribbon bar displays system buttons for an MDI child window in the tab row when an MDI child window is maximized.</source>
        </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__setquickaccesscommands"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::SetQuickAccessCommands</source>
        </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve">
          <source>Adds one or more ribbon elements to the Quick Access Toolbar.</source>
        </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`lstCommands`</ph></source>
        </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve">
          <source>The list of commands to be placed on the Quick Access Toolbar.</source>
        </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bRecalcLayout`</ph></source>
        </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> if want to redraw the ribbon after you add the ribbon elements; <ph id="ph2">`FALSE`</ph> otherwise.</source>
        </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to use the <ph id="ph1">`SetQuickAccessCommands`</ph> method in the <ph id="ph2">`CMFCRibbonBar`</ph> class.</source>
        </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_RibbonApp#8<ept id="p2">](../../mfc/reference/codesnippet/cpp/cmfcribbonbar-class_5.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__setquickaccessdefaultstate"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::SetQuickAccessDefaultState</source>
        </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve">
          <source>Sets the quick access toolbar to the default state.</source>
        </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`state`</ph></source>
        </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve">
          <source>The quick access toolbar default state.</source>
        </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve">
          <source>The quick access toolbar state includes a list of commands and their visibility.</source>
        </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to use the <ph id="ph1">`SetQuickAccessDefaultState`</ph> method in the <ph id="ph2">`CMFCRibbonBar`</ph> class.</source>
        </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_RibbonApp#9<ept id="p2">](../../mfc/reference/codesnippet/cpp/cmfcribbonbar-class_6.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__setquickaccesstoolbarontop"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::SetQuickAccessToolbarOnTop</source>
        </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve">
          <source>Positions the quick access toolbar above or below the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bOnTop`</ph></source>
        </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> to position the quick access toolbar above the ribbon bar; <ph id="ph2">`FALSE`</ph> to position the quick access toolbar below the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__settooltipfixedwidth"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::SetTooltipFixedWidth</source>
        </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve">
          <source>Sets the regular and large sizes of tooltip fixed widths for the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`nWidthRegular`</ph></source>
        </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve">
          <source>The width, in pixels, of a regular fixed sized tooltip.</source>
        </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`nWidthLargeImage`</ph></source>
        </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve">
          <source>The width, in pixels, of a large fixed sized tooltip.</source>
        </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve">
          <source>Setting a parameter to 0 causes the corresponding width to vary.</source>
        </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__showcategory"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::ShowCategory</source>
        </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve">
          <source>Shows or hides the specified ribbon category.</source>
        </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`nIndex`</ph></source>
        </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve">
          <source>The index of the ribbon category.</source>
        </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bShow`</ph></source>
        </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`TRUE`</ph>, show the ribbon category; otherwise, hide the ribbon category.</source>
        </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__showcontextcategories"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::ShowContextCategories</source>
        </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve">
          <source>Shows or hides the context categories that have the specified ID.</source>
        </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`uiContextID`</ph></source>
        </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve">
          <source>The context category ID.</source>
        </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bShow`</ph></source>
        </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`TRUE`</ph>, show the categories that have the specified ID; otherwise, hide the categories that have the specified ID.</source>
        </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__showkeytips"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::ShowKeyTips</source>
        </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve">
          <source>Shows the keytips for each ribbon element on the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__togglemimimizestate"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::ToggleMimimizeState</source>
        </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve">
          <source>Toggles the ribbon bar between the minimized and maximized states.</source>
        </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve">
          <source>The misspelling in the method name is a known issue.</source>
        </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve">
          <source>In the minimized state, the ribbon control is hidden and only the tabs are displayed.</source>
        </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve">
          <source>When the user clicks a tab, the ribbon control is displayed as a popup window.</source>
        </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve">
          <source>The window closes when the user clicks away or executes a command.</source>
        </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__translatechar"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::TranslateChar</source>
        </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve">
          <source>Determines whether the specified keystroke character code is processed by the ribbon bar.</source>
        </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`nChar`</ph></source>
        </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve">
          <source>A user keystroke character code.</source>
        </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the character code was processed by the ribbon bar; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve">
          <source>The keytips feature enables users to navigate the ribbon bar by using the keyboard.</source>
        </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__getfocused"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::GetFocused</source>
        </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve">
          <source>Returns a focused element.</source>
        </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve">
          <source>A pointer to a focused element or <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__iswindows7look"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::IsWindows7Look</source>
        </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve">
          <source>Indicates whether the ribbon has Windows 7 look (small rectangular application button).</source>
        </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the ribbon has Windows 7 look; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__loadfromresource"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::LoadFromResource</source>
        </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve">
          <source>Overloaded.</source>
        </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve">
          <source>Loads a Ribbon Bar from application resources.</source>
        </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve">
          <source>Specifies resource ID of XML string with Ribbon Bar information.</source>
        </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve">
          <source>Specifies type of the resource located at <ph id="ph1">`uiXMLResID`</ph>.</source>
        </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve">
          <source>Handle to the module whose executable file contains the resource.</source>
        </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`hInstance`</ph> is <ph id="ph2">`NULL`</ph>, the system loads the resource from the module that was used to create the current process.</source>
        </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve">
          <source>Specifies resource ID (in string form) with Ribbon Bar information.</source>
        </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if load succeeds; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__savetoxmlbuffer"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::SaveToXMLBuffer</source>
        </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve">
          <source>Saves the Ribbon Bar to a buffer.</source>
        </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve">
          <source>When this function returns, <ph id="ph1">`ppBuffer`</ph> points to a buffer allocated by this method and contains Ribbon Bar information in XML format.</source>
        </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if successful; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__savetoxmlfile"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::SaveToXMLFile</source>
        </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve">
          <source>Saves the Ribbon Bar to an XML file.</source>
        </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve">
          <source>Specifies the output file.</source>
        </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if successful; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfcribbonbar__setwindows7look"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCRibbonBar::SetWindows7Look</source>
        </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve">
          <source>Enables or disables Windows 7 look (small rectangular application button) for the Ribbon.</source>
        </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> sets Windows 7 look; <ph id="ph2">`FALSE`</ph> otherwise.</source>
        </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `TRUE`</ph> recalculates the ribbon layout; <ph id="ph2">`FALSE`</ph> otherwise.</source>
        </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Hierarchy Chart<ept id="p1">](../../mfc/hierarchy-chart.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Classes<ept id="p1">](../../mfc/reference/mfc-classes.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CPane Class<ept id="p1">](../../mfc/reference/cpane-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CMFCRibbonCategory Class<ept id="p1">](../../mfc/reference/cmfcribboncategory-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CMFCRibbonPanel Class<ept id="p1">](../../mfc/reference/cmfcribbonpanel-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CMFCRibbonBaseElement Class<ept id="p1">](../../mfc/reference/cmfcribbonbaseelement-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Walkthrough: Updating the MFC Scribble Application<ept id="p1">](../../mfc/walkthrough-updating-the-mfc-scribble-application-part-1.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>