<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3a85150ed832f9e55c2cf5d4610b31a3af17e8c4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\persistence-of-ole-controls.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e34110ea5f8dd7594fb522ae96a9602601ca27d0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7f10b58fb310d1a88e659a2a905702cdf89b8162</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Persistence of OLE Controls | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Persistence of OLE Controls</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>One capability of OLE controls is property persistence (or serialization), which allows the OLE control to read or write property values to and from a file or stream.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A container application can use serialization to store a control's property values even after the application has destroyed the control.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The property values of the OLE control can then be read from the file or stream when a new instance of the control is created at a later time.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Persistence of OLE Controls</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>PX_Blob<ept id="p1">](#px_blob)</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Exchanges a control property that stores binary large object (BLOB) data.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>PX_Bool<ept id="p1">](#px_bool)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Exchanges a control property of type <bpt id="p1">**</bpt>BOOL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>PX_Color<ept id="p1">](#px_color)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Exchanges a color property of a control.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>PX_Currency<ept id="p1">](#px_currency)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Exchanges a control property of type <bpt id="p1">**</bpt>CY<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>PX_DataPath<ept id="p1">](#px_datapath)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Exchanges a control property of type <ph id="ph1">`CDataPathProperty`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>PX_Double<ept id="p1">](#px_double)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Exchanges a control property of type <bpt id="p1">**</bpt>double<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>PX_Font<ept id="p1">](#px_font)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Exchanges a font property of a control.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>PX_Float<ept id="p1">](#px_float)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Exchanges a control property of type <bpt id="p1">**</bpt>float<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>PX_IUnknown<ept id="p1">](#px_iunknown)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Exchanges a control property of undefined type.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>PX_Long<ept id="p1">](#px_long)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Exchanges a control property of type <bpt id="p1">**</bpt>long<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>PX_Picture<ept id="p1">](#px_picture)</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Exchanges a picture property of a control.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>PX_Short<ept id="p1">](#px_short)</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Exchanges a control property of type <bpt id="p1">**</bpt>short<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>PX_ULong<ept id="p1">](#px_ulong)</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Exchanges a control property of type <bpt id="p1">**</bpt>ULONG<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>PX_UShort<ept id="p1">](#px_ushort)</ept></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Exchanges a control property of type <bpt id="p1">**</bpt>USHORT<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>PXstring<ept id="p1">](#px_string)</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Exchanges a character string control property.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>PX_VBXFontConvert<ept id="p1">](#px_vbxfontconvert)</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Exchanges a VBX control's font-related properties into an OLE control font property.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In addition, the <ph id="ph1">`AfxOleTypeMatchGuid`</ph> global function is provided to test for a match between a <ph id="ph2">`TYPEDESC`</ph> and a given GUID.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="px_blob"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  PX_Blob</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Call this function within your control's <ph id="ph1">`DoPropExchange`</ph> member function to serialize or initialize a property that stores binary large object (BLOB) data.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>CPropExchange<ept id="p1">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id="ph1">`DoPropExchange`</ph>).</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The name of the property being exchanged.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Reference to the variable where the property is stored (typically a member variable of your class).</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Default value for the property.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Nonzero if the exchange was successful; 0 if unsuccessful.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The property's value will be read from or written to the variable referenced by <ph id="ph1">`hBlob`</ph>, as appropriate.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This variable should be initialized to <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> before initially calling <ph id="ph1">`PX_Blob`</ph> for the first time (typically, this can be done in the control's constructor).</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`hBlobDefault`</ph> is specified, it will be used as the property's default value.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This value is used if, for any reason, the control's initialization or serialization process fails.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The handles <ph id="ph1">`hBlob`</ph> and <ph id="ph2">`hBlobDefault`</ph> refer to a block of memory which contains the following:</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`DWORD`</ph> which contains the length, in bytes, of the binary data that follows, followed immediately by</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A block of memory containing the actual binary data.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Note that <ph id="ph1">`PX_Blob`</ph> will allocate memory, using the Windows <bpt id="p1">[</bpt>GlobalAlloc<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa366574)</ept> API, when loading BLOB-type properties.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You are responsible for freeing this memory.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Therefore, the destructor of your control should call <bpt id="p1">[</bpt>GlobalFree<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa366579)</ept> on any BLOB-type property handles to free up any memory allocated to your control.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="px_bool"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  PX_Bool</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Call this function within your control's <ph id="ph1">`DoPropExchange`</ph> member function to serialize or initialize a property of type <bpt id="p1">**</bpt>BOOL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>CPropExchange<ept id="p1">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id="ph1">`DoPropExchange`</ph>).</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The name of the property being exchanged.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Reference to the variable where the property is stored (typically a member variable of your class).</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Default value for the property.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Nonzero if the exchange was successful; 0 if unsuccessful.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The property's value will be read from or written to the variable referenced by <ph id="ph1">`bValue`</ph>, as appropriate.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`bDefault`</ph> is specified, it will be used as the property's default value.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>This value is used if, for any reason, the control's serialization process fails.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="px_color"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  PX_Color</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Call this function within your control's <ph id="ph1">`DoPropExchange`</ph> member function to serialize or initialize a property of type <bpt id="p1">**</bpt>OLE_COLOR<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>CPropExchange<ept id="p1">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id="ph1">`DoPropExchange`</ph>).</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The name of the property being exchanged.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Reference to the variable where the property is stored (typically a member variable of your class).</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Default value for the property, as defined by the control developer.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Nonzero if the exchange was successful; 0 if unsuccessful.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The property's value will be read from or written to the variable referenced by <ph id="ph1">`clrValue`</ph>, as appropriate.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`clrDefault`</ph> is specified, it will be used as the property's default value.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>This value is used if, for any reason, the control's serialization process fails.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="px_currency"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  PX_Currency</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Call this function within your control's <ph id="ph1">`DoPropExchange`</ph> member function to serialize or initialize a property of type <bpt id="p1">**</bpt>currency<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>CPropExchange<ept id="p1">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id="ph1">`DoPropExchange`</ph>).</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The name of the property being exchanged.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Reference to the variable where the property is stored (typically a member variable of your class).</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Default value for the property.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Nonzero if the exchange was successful; 0 if unsuccessful.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The property's value will be read from or written to the variable referenced by <ph id="ph1">`cyValue`</ph>, as appropriate.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`cyDefault`</ph> is specified, it will be used as the property's default value.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>This value is used if, for any reason, the control's serialization process fails.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="px_datapath"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  PX_DataPath</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Call this function within your control's <ph id="ph1">`DoPropExchange`</ph> member function to serialize or initialize a data path property of type <bpt id="p1">[</bpt>CDataPathProperty<ept id="p1">](../../mfc/reference/cdatapathproperty-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>CPropExchange<ept id="p1">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id="ph1">`DoPropExchange`</ph>).</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The name of the property being exchanged.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Reference to the variable where the property is stored (typically a member variable of your class).</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Nonzero if the exchange was successful; 0 if unsuccessful.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Data path properties implement asynchronous control properties.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The property's value will be read from or written to the variable referenced by <ph id="ph1">`dataPathProperty`</ph>, as appropriate.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="px_double"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  PX_Double</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Call this function within your control's <ph id="ph1">`DoPropExchange`</ph> member function to serialize or initialize a property of type <bpt id="p1">**</bpt>double<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>CPropExchange<ept id="p1">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id="ph1">`DoPropExchange`</ph>).</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The name of the property being exchanged.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Reference to the variable where the property is stored (typically a member variable of your class).</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Default value for the property.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Nonzero if the exchange was successful; 0 if unsuccessful.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The property's value is read from or written to the variable referenced by <ph id="ph1">`doubleValue`</ph>, as appropriate.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`doubleDefault`</ph> is specified, it will be used as the property's default value.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>This value is used if, for any reason, the control's serialization process fails.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="px_font"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  PX_Font</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Call this function within your control's <ph id="ph1">`DoPropExchange`</ph> member function to serialize or initialize a property of type font.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>CPropExchange<ept id="p1">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id="ph1">`DoPropExchange`</ph>).</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The name of the property being exchanged.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>A reference to a <ph id="ph1">`CFontHolder`</ph> object that contains the font property.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">**</bpt>FONTDESC<ept id="p1">**</ept> structure containing the values to use in initializing the default state of the font property, in the case where <ph id="ph1">`pFontDispAmbient`</ph> is <bpt id="p2">**</bpt>NULL<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>A pointer to the <bpt id="p1">**</bpt>IFontDisp<ept id="p1">**</ept> interface of a font to use in initializing the default state of the font property.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Nonzero if the exchange was successful; 0 if unsuccessful.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The property's value is read from or written to <ph id="ph1">`font`</ph>, a <ph id="ph2">`CFontHolder`</ph> reference, when appropriate.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`pFontDesc`</ph> and <ph id="ph2">`pFontDispAmbient`</ph> are specified, they are used for initializing the property's default value, when needed.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>These values are used if, for any reason, the control's serialization process fails.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Typically, you pass <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> for <ph id="ph1">`pFontDesc`</ph> and the ambient value returned by <ph id="ph2">`COleControl::AmbientFont`</ph> for <ph id="ph3">`pFontDispAmbient`</ph>.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Note that the font object returned by <ph id="ph1">`COleControl::AmbientFont`</ph> must be released by a call to the <bpt id="p1">**</bpt>IFontDisp::Release<ept id="p1">**</ept> member function.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="px_float"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  PX_Float</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Call this function within your control's <ph id="ph1">`DoPropExchange`</ph> member function to serialize or initialize a property of type <bpt id="p1">**</bpt>float<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>CPropExchange<ept id="p1">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id="ph1">`DoPropExchange`</ph>).</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The name of the property being exchanged.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Reference to the variable where the property is stored (typically a member variable of your class).</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Default value for the property.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Nonzero if the exchange was successful; 0 if unsuccessful.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The property's value is read from or written to the variable referenced by <ph id="ph1">`floatValue`</ph>, as appropriate.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`floatDefault`</ph> is specified, it will be used as the property's default value.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>This value is used if, for any reason, the control's serialization process fails.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="px_iunknown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  PX_IUnknown</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Call this function within your control's <ph id="ph1">`DoPropExchange`</ph> member function to serialize or initialize a property represented by an object having an <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept>-derived interface.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>CPropExchange<ept id="p1">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id="ph1">`DoPropExchange`</ph>).</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The name of the property being exchanged.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>pUnk<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Reference to a variable containing the interface of the object that represents the value of the property.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>An interface ID indicating which interface of the property object is used by the control.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Default value for the property.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Nonzero if the exchange was successful; 0 if unsuccessful.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The property's value is read from or written to the variable referenced by <bpt id="p1">*</bpt>pUnk<ept id="p1">*</ept>, as appropriate.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`pUnkDefault`</ph> is specified, it will be used as the property's default value.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>This value is used if, for any reason, the control's serialization process fails.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="px_long"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  PX_Long</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Call this function within your control's <ph id="ph1">`DoPropExchange`</ph> member function to serialize or initialize a property of type <bpt id="p1">**</bpt>long<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>CPropExchange<ept id="p1">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id="ph1">`DoPropExchange`</ph>).</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The name of the property being exchanged.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Reference to the variable where the property is stored (typically a member variable of your class).</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Default value for the property.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Nonzero if the exchange was successful; 0 if unsuccessful.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The property's value is read from or written to the variable referenced by <ph id="ph1">`lValue`</ph>, as appropriate.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`lDefault`</ph> is specified, it will be used as the property's default value.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>This value is used if, for any reason, the control's serialization process fails.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="px_picture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  PX_Picture</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Call this function within your control's <ph id="ph1">`DoPropExchange`</ph> member function to serialize or initialize a picture property of your control.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>CPropExchange<ept id="p1">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id="ph1">`DoPropExchange`</ph>).</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The name of the property being exchanged.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Reference to a <bpt id="p1">[</bpt>CPictureHolder<ept id="p1">](../../mfc/reference/cpictureholder-class.md)</ept> object where the property is stored (typically a member variable of your class).</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Default value for the property.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Nonzero if the exchange was successful; 0 if unsuccessful.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The property's value is read from or written to the variable referenced by <ph id="ph1">`pict`</ph>, as appropriate.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`pictDefault`</ph> is specified, it will be used as the property's default value.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>This value is used if, for any reason, the control's serialization process fails.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="px_short"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  PX_Short</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Call this function within your control's <ph id="ph1">`DoPropExchange`</ph> member function to serialize or initialize a property of type <bpt id="p1">**</bpt>short<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>CPropExchange<ept id="p1">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id="ph1">`DoPropExchange`</ph>).</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The name of the property being exchanged.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Reference to the variable where the property is stored (typically a member variable of your class).</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Default value for the property.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Nonzero if the exchange was successful; 0 if unsuccessful.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The property's value is read from or written to the variable referenced by <ph id="ph1">`sValue`</ph>, as appropriate.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`sDefault`</ph> is specified, it will be used as the property's default value.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>This value is used if, for any reason, the control's serialization process fails.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="px_ulong"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  PX_ULong</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Call this function within your control's <ph id="ph1">`DoPropExchange`</ph> member function to serialize or initialize a property of type <bpt id="p1">**</bpt>ULONG<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>CPropExchange<ept id="p1">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id="ph1">`DoPropExchange`</ph>).</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Name of the property being exchanged.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Reference to the variable where the property is stored (typically a member variable of your class).</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Default value for the property.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Nonzero if the exchange was successful; 0 if unsuccessful.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The property's value is read from or written to the variable referenced by <ph id="ph1">`ulValue`</ph>, as appropriate.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`ulDefault`</ph> is specified, it will be used as the property's default value.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>This value is used if, for any reason, the control's serialization process fails.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="px_ushort"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  PX_UShort</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Call this function within your control's <ph id="ph1">`DoPropExchange`</ph> member function to serialize or initialize a property of type <ph id="ph2">`unsigned`</ph> <bpt id="p1">**</bpt>short<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>CPropExchange<ept id="p1">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id="ph1">`DoPropExchange`</ph>).</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Name of the property being exchanged.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>usValue<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Reference to the variable where the property is stored (typically a member variable of your class).</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>usDefault<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Default value for the property.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Nonzero if the exchange was successful; 0 if unsuccessful.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>The property's value is read from or written to the variable referenced by <bpt id="p1">*</bpt>usValue<ept id="p1">*</ept>, as appropriate.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">*</bpt>usDefault<ept id="p1">*</ept> is specified, it will be used as the property's default value.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>This value is used if, for any reason, the control's serialization process fails.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="px_string"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  PXstring</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Call this function within your control's <bpt id="p1">**</bpt>DoPropExchange<ept id="p1">**</ept> member function to serialize or initialize a character string property.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>CPropExchange<ept id="p1">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id="ph1">`DoPropExchange`</ph>).</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The name of the property being exchanged.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Reference to the variable where the property is stored (typically a member variable of your class).</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Default value for the property.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Nonzero if the exchange was successful; 0 if unsuccessful.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The property's value is read from or written to the variable referenced by <ph id="ph1">`strValue`</ph>, as appropriate.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`strDefault`</ph> is specified, it will be used as the property's default value.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>This value is used if, for any reason, the control's serialization process fails.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="px_vbxfontconvert"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  PX_VBXFontConvert</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Call this function within your control's <ph id="ph1">`DoPropExchange`</ph> member function to initialize a font property by converting a VBX control's font-related properties.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>CPropExchange<ept id="p1">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id="ph1">`DoPropExchange`</ph>).</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The font property of the OLE control that will contain the converted VBX font-related properties.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Nonzero if the exchange was successful; 0 if unsuccessful.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>This function should be used only by an OLE control that is designed as a direct replacement for a VBX control.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>When the Visual Basic development environment converts a form containing a VBX control to use the corresponding replacement OLE control, it will call the control's <bpt id="p1">**</bpt>IDataObject::SetData<ept id="p1">**</ept> function, passing in a property set that contains the VBX control's property data.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>This operation, in turn, causes the control's <ph id="ph1">`DoPropExchange`</ph> function to be invoked.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`DoPropExchange`</ph> can call <ph id="ph2">`PX_VBXFontConvert`</ph> to convert the VBX control's font-related properties (for example, "FontName," "FontSize," and so on) into the corresponding components of the OLE control's font property.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`PX_VBXFontConvert`</ph> should only be called when the control is actually being converted from a VBX form application.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFCActiveXControl#14<ept id="p2">](../../mfc/codesnippet/cpp/persistence-of-ole-controls_1.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFCActiveXControl#15<ept id="p2">](../../mfc/codesnippet/cpp/persistence-of-ole-controls_2.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Macros and Globals<ept id="p1">](../../mfc/reference/mfc-macros-and-globals.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>