<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d41600ce42e32383e0636ed3874f461a3c82e69</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\cmfctoolbardatetimectrl-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">57eb8b98c3dba11ec2e8645930a20f82ab4aa803</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9bebe883ead3fabb5816f20b5ec2a5225c3e1707</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CMFCToolBarDateTimeCtrl Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CMFCToolBarDateTimeCtrl Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A toolbar button that contains a date and time picker control.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCToolBarDateTimeCtrl::CMFCToolBarDateTimeCtrl<ept id="p1">](#cmfctoolbardatetimectrl__cmfctoolbardatetimectrl)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CMFCToolBarDateTimeCtrl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Destructor.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCToolBarDateTimeCtrl::CanBeStretched<ept id="p1">](#cmfctoolbardatetimectrl__canbestretched)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Specifies whether a user can stretch the button during customization.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::CanBeStretched<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__canbestretched)</ept>.)</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCToolBarDateTimeCtrl::CopyFrom<ept id="p1">](#cmfctoolbardatetimectrl__copyfrom)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Copies the properties of another toolbar button to the current button.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::CopyFrom<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__copyfrom)</ept>.)</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Reserved for future use.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCToolBarButton::ExportToMenuButton<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__exporttomenubutton)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Copies text from the toolbar button to a menu.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Used by the framework to create a dynamic instance of this class type.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCToolBarDateTimeCtrl::GetByCmd<ept id="p1">](#cmfctoolbardatetimectrl__getbycmd)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Retrieves the first <ph id="ph1">`CMFCToolBarDateTimeCtrl`</ph> object in the application that has the specified command ID.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCToolBarDateTimeCtrl::GetDateTimeCtrl<ept id="p1">](#cmfctoolbardatetimectrl__getdatetimectrl)</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the date and time picker control.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCToolBarDateTimeCtrl::GetHwnd<ept id="p1">](#cmfctoolbardatetimectrl__gethwnd)</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Retrieves the window handle that is associated with the toolbar button.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::GetHwnd<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__gethwnd)</ept>.)</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Used by the framework to obtain a pointer to the <bpt id="p1">[</bpt>CRuntimeClass<ept id="p1">](../../mfc/reference/cruntimeclass-structure.md)</ept> object that is associated with this class type.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCToolBarDateTimeCtrl::GetTime<ept id="p1">](#cmfctoolbardatetimectrl__gettime)</ept></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets the selected time from a date and time picker control and puts it in a specified <bpt id="p1">[</bpt>SYSTEMTIME<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms724950)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCToolBarDateTimeCtrl::GetTimeAll<ept id="p1">](#cmfctoolbardatetimectrl__gettimeall)</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Returns the selected time from the time picker control button that has a specified command ID.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCToolBarDateTimeCtrl::HaveHotBorder<ept id="p1">](#cmfctoolbardatetimectrl__havehotborder)</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Determines whether a border of the button is displayed when a user selects the button.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::HaveHotBorder<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__havehotborder)</ept>.)</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCToolBarDateTimeCtrl::NotifyCommand<ept id="p1">](#cmfctoolbardatetimectrl__notifycommand)</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Specifies whether the button processes the <bpt id="p1">[</bpt>WM_COMMAND<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms647591)</ept> message.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::NotifyCommand<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__notifycommand)</ept>.)</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCToolBarDateTimeCtrl::OnAddToCustomizePage<ept id="p1">](#cmfctoolbardatetimectrl__onaddtocustomizepage)</ept></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Called by the framework when the button is added to a <bpt id="p1">**</bpt>Customize<ept id="p1">**</ept> dialog box.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::OnAddToCustomizePage<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onaddtocustomizepage)</ept>.)</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Called by the framework to calculate the size of the button for the specified device context and docking state.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::OnCalculateSize<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__oncalculatesize)</ept>.)</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCToolBarDateTimeCtrl::OnChangeParentWnd<ept id="p1">](#cmfctoolbardatetimectrl__onchangeparentwnd)</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Called by the framework when the button is inserted into a new toolbar.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::OnChangeParentWnd<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onchangeparentwnd)</ept>.)</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCToolBarDateTimeCtrl::OnClick<ept id="p1">](#cmfctoolbardatetimectrl__onclick)</ept></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Called by the framework when the user clicks the control.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::OnClick<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onclick)</ept>.)</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCToolBarDateTimeCtrl::OnCtlColor<ept id="p1">](#cmfctoolbardatetimectrl__onctlcolor)</ept></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Called by the framework when the parent toolbar handles a <ph id="ph1">`WM_CTLCOLOR`</ph> message.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::OnCtlColor<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onctlcolor)</ept>.)</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Called by the framework to draw the button by using the specified styles and options.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::OnDraw<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__ondraw)</ept>.)</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Called by the framework to draw the button in the <bpt id="p1">**</bpt>Commands<ept id="p1">**</ept> pane of the <bpt id="p2">**</bpt>Customize<ept id="p2">**</ept> dialog box.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::OnDrawOnCustomizeList<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__ondrawoncustomizelist)</ept>.)</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCToolBarDateTimeCtrl::OnGlobalFontsChanged<ept id="p1">](#cmfctoolbardatetimectrl__onglobalfontschanged)</ept></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Called by the framework when the global font has changed.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::OnGlobalFontsChanged<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onglobalfontschanged)</ept>.)</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCToolBarDateTimeCtrl::OnMove<ept id="p1">](#cmfctoolbardatetimectrl__onmove)</ept></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Called by the framework when the parent toolbar moves.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::OnMove<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onmove)</ept>.)</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCToolBarDateTimeCtrl::OnShow<ept id="p1">](#cmfctoolbardatetimectrl__onshow)</ept></source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Called by the framework when the button becomes visible or invisible.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::OnShow<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onshow)</ept>.)</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Called by the framework when the parent toolbar changes its size or position and this change causes the button to change size.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::OnSize<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onsize)</ept>.)</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCToolBarDateTimeCtrl::OnUpdateToolTip<ept id="p1">](#cmfctoolbardatetimectrl__onupdatetooltip)</ept></source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Called by the framework when the parent toolbar updates its tooltip text.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::OnUpdateToolTip<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onupdatetooltip)</ept>.)</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Reads this object from an archive or writes it to an archive, (Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::Serialize<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__serialize)</ept>.)</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Sets the style of the toolbar button.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CMFCToolBarButton::SetStyle<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__setstyle)</ept>.)</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCToolBarDateTimeCtrl::SetTime<ept id="p1">](#cmfctoolbardatetimectrl__settime)</ept></source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Sets the time and date in the time picker control.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCToolBarDateTimeCtrl::SetTimeAll<ept id="p1">](#cmfctoolbardatetimectrl__settimeall)</ept></source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Sets the time and date in all instances of the time picker control that have a specified command ID.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>For an example of how to use a date and time picker control, see the ToolbarDateTimePicker sample project.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For information about how to add control buttons to toolbars, see <bpt id="p1">[</bpt>Walkthrough: Putting Controls On Toolbars<ept id="p1">](../../mfc/walkthrough-putting-controls-on-toolbars.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CObject<ept id="p1">](../../mfc/reference/cobject-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCToolBarButton<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMFCToolBarDateTimeCtrl<ept id="p1">](../../mfc/reference/cmfctoolbardatetimectrl-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxtoolbardatetimectrl.h</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfctoolbardatetimectrl__canbestretched"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCToolBarDateTimeCtrl::CanBeStretched</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Specifies whether a user can stretch the button during customization.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>This method returns <ph id="ph1">`TRUE`</ph>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>By default, the framework does not allow the user to stretch a toolbar button during customization.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This method extends the base class implementation ( <bpt id="p1">[</bpt>CMFCToolBarButton::CanBeStretched<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__canbestretched)</ept>) by allowing the user to stretch a date and time toolbar button during customization.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfctoolbardatetimectrl__cmfctoolbardatetimectrl"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCToolBarDateTimeCtrl::CMFCToolBarDateTimeCtrl</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Creates and initializes a <bpt id="p1">[</bpt>CMFCToolBarDateTimeCtrl<ept id="p1">](../../mfc/reference/cmfctoolbardatetimectrl-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`uiID`</ph></source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The control ID.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`iImage`</ph></source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The index of the image in the toolbar's <ph id="ph1">`CMFCToolBarImages`</ph> object.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`dwStyle`</ph></source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The style of the <ph id="ph1">`CMFCToolBarDateTimeCtrlImpl`</ph> window that is created when a user clicks the button.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`iWidth`</ph></source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The width of the control, in pixels.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>This object is initialized to the system date and time.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The window style of the internal <ph id="ph1">`CMFCToolBarDateTimeCtrlImpl`</ph> object includes the <ph id="ph2">`dwStyle`</ph> parameter and the <ph id="ph3">`WS_CHILD`</ph> and <ph id="ph4">`WS_VISIBLE`</ph> styles.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>You cannot change these styles by using <ph id="ph1">`CMFCToolBarDateTimeCtrl::SetStyle`</ph>.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`SetStyle`</ph> to change the style of the <ph id="ph2">`CMFCToolBarDateTimeCtrl`</ph> control.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to construct an object of the <ph id="ph1">`CMFCToolBarDateTimeCtrl`</ph> class.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>This code snippet is part of the <bpt id="p1">[</bpt>Toolbar Date Time Picker sample<ept id="p1">](../../visual-cpp-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>NVC_MFC_ToolbarDateTimePicker#1<ept id="p2">](../../mfc/reference/codesnippet/cpp/cmfctoolbardatetimectrl-class_1.cpp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfctoolbardatetimectrl__copyfrom"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCToolBarDateTimeCtrl::CopyFrom</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Copies the properties of another toolbar button to the current button.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`src`</ph></source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>A reference to the source button from which to copy.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Call this method to copy another toolbar button to this toolbar button.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`src`</ph> must be of type <ph id="ph2">`CMFCToolBarDateTimeCtrl`</ph>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfctoolbardatetimectrl__exporttomenubutton"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCToolBarDateTimeCtrl::ExportToMenuButton</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Copies text from the toolbar button to a menu.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`menuButton`</ph></source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>A reference to the target menu button.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>This method returns <ph id="ph1">`TRUE`</ph>.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>This method overrides the base class implementation ( <bpt id="p1">[</bpt>CMFCToolBarButton::ExportToMenuButton<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__exporttomenubutton)</ept>) by loading the string resource that is associated with the command ID of the control.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>For more information about string resources, see <bpt id="p1">[</bpt>CStringT::LoadString<ept id="p1">](../../atl-mfc-shared/reference/cstringt-class.md#cstringt__loadstring)</ept>.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfctoolbardatetimectrl__getbycmd"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCToolBarDateTimeCtrl::GetByCmd</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Retrieves the first <ph id="ph1">`CMFCToolBarDateTimeCtrl`</ph> object in the application that has the specified command ID.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`uiCmd`</ph></source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The command ID of the button to retrieve.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">`CMFCToolBarDateTimeCtrl`</ph> object in the application that has the specified command ID, or <ph id="ph2">`NULL`</ph> if no <ph id="ph3">`CMFCToolBarDateTimeCtrl`</ph> objects have the specified command ID.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>This shared utility method is used by methods such as <bpt id="p1">[</bpt>CMFCToolBarDateTimeCtrl::SetTimeAll<ept id="p1">](#cmfctoolbardatetimectrl__settimeall)</ept> and <bpt id="p2">[</bpt>CMFCToolBarDateTimeCtrl::GetTimeAll<ept id="p2">](#cmfctoolbardatetimectrl__gettimeall)</ept> to set or get the time and date of all instances of the time picker control that have a specified command ID.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfctoolbardatetimectrl__getdatetimectrl"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCToolBarDateTimeCtrl::GetDateTimeCtrl</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the date and time picker control.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>A pointer to date and time picker control; or <ph id="ph1">`NULL`</ph> if the control does not exist.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CMFCToolBarDateTimeCtrl`</ph> class initializes the <ph id="ph2">`m_pWndDateTime`</ph> data member when you insert a <ph id="ph3">`CMFCToolBarDateTimeCtrl`</ph> object into a toolbar.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfctoolbardatetimectrl__gethwnd"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCToolBarDateTimeCtrl::GetHwnd</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Retrieves the window handle that is associated with the toolbar button.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The window handle that is associated with the date and time toolbar button.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>This method overrides the <bpt id="p1">[</bpt>CMFCToolBarButton::GetHwnd<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__gethwnd)</ept> method.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfctoolbardatetimectrl__gettime"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCToolBarDateTimeCtrl::GetTime</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Gets the selected time from the associated date and time picker control and puts it in a specified <bpt id="p1">[</bpt>SYSTEMTIME<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms724950)</ept> structure</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>In the first overload, a <bpt id="p1">[</bpt>COleDateTime Class<ept id="p1">](../../atl-mfc-shared/reference/coledatetime-class.md)</ept> object that will receive the system time information.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>In the second overload, a <bpt id="p1">[</bpt>CTime<ept id="p1">](../../atl-mfc-shared/reference/ctime-class.md)</ept> object that will receive the system time information.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>A pointer to the <bpt id="p1">[</bpt>SYSTEMTIME<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms724950)</ept> structure to receive the system time information.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Must not be <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>In the first overload, nonzero if the time is successfully written to the <bpt id="p1">[</bpt>COleDateTime Class<ept id="p1">](../../atl-mfc-shared/reference/coledatetime-class.md)</ept> object; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>In the second and third overloads, the return value is a <ph id="ph1">`DWORD`</ph> that is equal to the dwFlag member that was set in the <bpt id="p1">[</bpt>NMDATETIMECHANGE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb761730)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The method sets the <bpt id="p1">[</bpt>NMDATETIMECHANGE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb761730)</ept> structure member dwFlags to indicate whether the date and time picker is set to a date and time.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>If the value equals GDT_NONE, the control is set to <ph id="ph1">`no date`</ph> status, and uses the DTS_SHOWNONE style.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>If the value returned equals GDT_VALID, the system time is successfully stored in the destination location.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfctoolbardatetimectrl__gettimeall"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCToolBarDateTimeCtrl::GetTimeAll</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Returns the time selected by the user from the time picker control button that has a specified command ID.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Specifies a toolbar button's command ID.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>In the first overload, a <bpt id="p1">[</bpt>COleDateTime Class<ept id="p1">](../../atl-mfc-shared/reference/coledatetime-class.md)</ept> object that will receive the system time information.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>In the second overload, a <bpt id="p1">[</bpt>CTime<ept id="p1">](../../atl-mfc-shared/reference/ctime-class.md)</ept> object that will receive the system time information.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>A pointer to the <bpt id="p1">[</bpt>SYSTEMTIME<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms724950)</ept> structure to receive the system time information.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Must not be <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>If the framework cannot find a toolbar button that matches the command ID <ph id="ph1">`uiCmd`</ph>, the return value is zero in the first overload, and GDT_NONE in the other overloads.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>If the toolbar button is found, the return value is the same as the return value from a call to <bpt id="p1">[</bpt>CMFCToolBarDateTimeCtrl::GetTime<ept id="p1">](#cmfctoolbardatetimectrl__gettime)</ept> on that button.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>A return value of zero or GDT_NONE can occur when the button is found, which indicates that the call to <ph id="ph1">`GetTime`</ph> did not return a valid date for some other reason.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>This method looks for a toolbar button that has the specified command ID and calls <bpt id="p1">[</bpt>CMFCToolBarDateTimeCtrl::GetTime<ept id="p1">](#cmfctoolbardatetimectrl__gettime)</ept> method on that button.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfctoolbardatetimectrl__havehotborder"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCToolBarDateTimeCtrl::HaveHotBorder</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Determines whether a border of the button is displayed when a user selects the button.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Nonzero if a button displays its border when selected; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>This method returns a nonzero value if the control is visible.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfctoolbardatetimectrl__notifycommand"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCToolBarDateTimeCtrl::NotifyCommand</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Specifies whether the button processes the <bpt id="p1">[</bpt>WM_COMMAND<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms647591)</ept> message.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`iNotifyCode`</ph></source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The notification message that is associated with the command.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TRUE`</ph> if the button processes the <ph id="ph2">`WM_COMMAND`</ph> message, or <ph id="ph3">`FALSE`</ph> to indicate that the message should be handled by the parent toolbar.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The framework calls this method when it is about to send a <bpt id="p1">[</bpt>WM_COMMAND<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms647591)</ept> message to the parent window.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>This method extends the base class implementation ( <bpt id="p1">[</bpt>CMFCToolBarButton::NotifyCommand<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__notifycommand)</ept>) by processing the <bpt id="p2">[</bpt>DTN_DATETIMECHANGE<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/bb761737)</ept> notification.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>It updates the internal time status and updates the time property of all <ph id="ph1">`CMFCToolBarDateTimeCtrl`</ph> objects with the same command ID.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfctoolbardatetimectrl__onaddtocustomizepage"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCToolBarDateTimeCtrl::OnAddToCustomizePage</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Called by the framework when the button is added to a <bpt id="p1">**</bpt>Customize<ept id="p1">**</ept> dialog box.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>This method extends the base class implementation, <bpt id="p1">[</bpt>CMFCToolBarButton::OnAddToCustomizePage<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onaddtocustomizepage)</ept>, by copying the properties from the first date and time control in any toolbar that has the same command ID as this object.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>This method does nothing if no toolbar has a date and time control that has the same command ID as this object.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>For more information about the <bpt id="p1">**</bpt>Customize<ept id="p1">**</ept> dialog box, see <bpt id="p2">[</bpt>CMFCToolBarsCustomizeDialog Class<ept id="p2">](../../mfc/reference/cmfctoolbarscustomizedialog-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfctoolbardatetimectrl__onchangeparentwnd"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCToolBarDateTimeCtrl::OnChangeParentWnd</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Called by the framework when the button is inserted into a new toolbar.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pWndParent`</ph></source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The new parent window.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>This method overrides the base class implementation ( <bpt id="p1">[</bpt>CMFCToolBarButton::OnChangeParentWnd<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onchangeparentwnd)</ept>) by recreating the internal <ph id="ph1">`CMFCToolBarDateTimeCtrlImpl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfctoolbardatetimectrl__onclick"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCToolBarDateTimeCtrl::OnClick</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Called by the framework when the user clicks the control.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pWnd`</ph></source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Unused.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bDelay`</ph></source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Unused.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Nonzero if the button processes the click message; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>This method overrides the base class implementation, <bpt id="p1">[</bpt>CMFCToolBarButton::OnClick<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onclick)</ept>, by returning a nonzero value if the internal <ph id="ph1">`CMFCToolBarDateTimeCtrlImpl`</ph> object is visible.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfctoolbardatetimectrl__onctlcolor"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCToolBarDateTimeCtrl::OnCtlColor</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Called by the framework when the parent toolbar handles a <ph id="ph1">`WM_CTLCOLOR`</ph> message.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pDC`</ph></source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The device context that displays the button.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`nCtlColor`</ph></source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Unused.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>A handle to the global brush that the framework uses to paint the background of the button.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>This method overrides the base class implementation, <bpt id="p1">[</bpt>CMFCToolBarButton::OnCtlColor<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onctlcolor)</ept>, by setting the text and background colors of the provided device context to the global text and background colors, respectively.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>For more information about global options that are available to your application, see <bpt id="p1">[</bpt>AFX_GLOBAL_DATA Structure<ept id="p1">](../../mfc/reference/afx-global-data-structure.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfctoolbardatetimectrl__onglobalfontschanged"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCToolBarDateTimeCtrl::OnGlobalFontsChanged</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Called by the framework when the global font has changed.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>This method extends the base class implementation ( <bpt id="p1">[</bpt>CMFCToolBarButton::OnGlobalFontsChanged<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onglobalfontschanged)</ept>) by changing the font of the control to that of the global font.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>For more information about global options that are available to your application, see <bpt id="p1">[</bpt>AFX_GLOBAL_DATA Structure<ept id="p1">](../../mfc/reference/afx-global-data-structure.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfctoolbardatetimectrl__onmove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCToolBarDateTimeCtrl::OnMove</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Called by the framework when the parent toolbar moves.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>This method overrides the default class implementation ( <bpt id="p1">[</bpt>CMFCToolBarButton::OnMove<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onmove)</ept>) by updating the position of the internal <ph id="ph1">`CMFCToolBarDateTimeCtrlImpl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfctoolbardatetimectrl__onshow"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCToolBarDateTimeCtrl::OnShow</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Called by the framework when the button becomes visible or invisible.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`bShow`</ph></source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Specifies whether the button is visible.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>If this parameter is <ph id="ph1">`TRUE`</ph>, the button is visible.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Otherwise, the button is not visible.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>This method extends the base class implementation ( <bpt id="p1">[</bpt>CMFCToolBarButton::OnShow<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onshow)</ept>) by displaying the button if <ph id="ph1">`bShow`</ph> is <ph id="ph2">`TRUE`</ph>.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Otherwise, this method hides the button.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfctoolbardatetimectrl__onsize"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCToolBarDateTimeCtrl::OnSize</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Called by the framework when the parent toolbar changes its size or position and this change causes the button to change size.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`iSize`</ph></source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The new width of the button, in pixels.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>This method overrides the default class implementation ( <bpt id="p1">[</bpt>CMFCToolBarButton::OnSize<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onsize)</ept>) by updating the size and position of the internal <ph id="ph1">`CMFCToolBarDateTimeCtrlImpl`</ph> object.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfctoolbardatetimectrl__onupdatetooltip"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCToolBarDateTimeCtrl::OnUpdateToolTip</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Called by the framework when the parent toolbar updates its tooltip text.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`pWndParent`</ph></source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The parent window.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`iButtonIndex`</ph></source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The zero-based index of the button in the parent button collection.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`wndToolTip`</ph></source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>The control that displays the tooltip text.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>[out] <ph id="ph1">`str`</ph></source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CString`</ph> object that receives the updated tooltip text.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Nonzero if the method updates the tooltip text; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>This method extends the base class implementation ( <bpt id="p1">[</bpt>CMFCToolBarButton::OnUpdateToolTip<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onupdatetooltip)</ept>) by displaying the tooltip text that is associated with the button.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>If the button is not docked horizontally, this method does nothing and returns <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfctoolbardatetimectrl__settime"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCToolBarDateTimeCtrl::SetTime</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Sets the time and date in the time picker control.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>In the first version, a reference to a <bpt id="p1">[</bpt>COleDateTime Class<ept id="p1">](../../atl-mfc-shared/reference/coledatetime-class.md)</ept> object that contains the time to which the control will be set.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>In the second version, a pointer to a <bpt id="p1">[</bpt>CTime<ept id="p1">](../../atl-mfc-shared/reference/ctime-class.md)</ept> object that contains the time to which the control will be set.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>A pointer to the <bpt id="p1">[</bpt>SYSTEMTIME<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms724950)</ept> structure that contains the time to which the control will be set.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Sets the time in a date and time picker control by calling <bpt id="p1">[</bpt>CDateTimeCtrl::SetTime<ept id="p1">](../../mfc/reference/cdatetimectrl-class.md#cdatetimectrl__settime)</ept>.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cmfctoolbardatetimectrl__settimeall"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CMFCToolBarDateTimeCtrl::SetTimeAll</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Sets the time and date in all instances of the time picker control that have a specified command ID.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Specifies a toolbar button's command ID.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>In the first version, a <bpt id="p1">[</bpt>COleDateTime Class<ept id="p1">](../../atl-mfc-shared/reference/coledatetime-class.md)</ept> object that contains the time to which the control will be set.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>In the second version, a pointer to a <bpt id="p1">[</bpt>CTime<ept id="p1">](../../atl-mfc-shared/reference/ctime-class.md)</ept> object that contains the time to which the control will be set.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>A pointer to the <bpt id="p1">[</bpt>SYSTEMTIME<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms724950)</ept> structure that contains the time to which the control will be set.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Looks for a toolbar button with the specified command ID and sets the time in a date and time picker control by calling <bpt id="p1">[</bpt>CMFCToolBarDateTimeCtrl::SetTime<ept id="p1">](#cmfctoolbardatetimectrl__settime)</ept>.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Hierarchy Chart<ept id="p1">](../../mfc/hierarchy-chart.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Classes<ept id="p1">](../../mfc/reference/mfc-classes.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CMFCToolBarButton Class<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Walkthrough: Putting Controls On Toolbars<ept id="p1">](../../mfc/walkthrough-putting-controls-on-toolbars.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>