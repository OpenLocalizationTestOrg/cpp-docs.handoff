<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6b0b14ea6eca5dc538c40a3ab8d7a1c9a0689517</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\reference\asctime-wasctime.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">87196043f8f590c3a0917dc22007de4edb1544aa</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5a36bfca4d61395af774449b1a07756298b5cb16</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>asctime, _wasctime | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>asctime, _wasctime</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Convert a <ph id="ph1">`tm`</ph> time structure to a character string.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>More secure versions of these functions are available; see <bpt id="p1">[</bpt>asctime_s, _wasctime_s<ept id="p1">](../../c-runtime-library/reference/asctime-s-wasctime-s.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Time/date structure.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`asctime`</ph> returns a pointer to the character string result; <ph id="ph2">`_wasctime`</ph> returns a pointer to the wide-character string result.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>There is no error return value.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>More secure versions of these functions are available; see <bpt id="p1">[</bpt>asctime_s, _wasctime_s<ept id="p1">](../../c-runtime-library/reference/asctime-s-wasctime-s.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`asctime`</ph> function converts a time stored as a structure to a character string.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`timeptr`</ph> value is usually obtained from a call to <ph id="ph2">`gmtime`</ph> or <ph id="ph3">`localtime`</ph>, which both return a pointer to a <ph id="ph4">`tm`</ph> structure, defined in TIME.H.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>timeptr member</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Hours since midnight (0–23)</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Positive if daylight saving time is in effect; 0 if daylight saving time is not in effect; negative if status of daylight saving time is unknown.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The C run-time library assumes the United States' rules for implementing the calculation of Daylight Saving Time (DST).</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Day of month (1–31)</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Minutes after hour (0–59)</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Month (0–11; January = 0)</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Seconds after minute (0–59)</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Day of week (0–6; Sunday = 0)</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Day of year (0–365; January 1 = 0)</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Year (current year minus 1900)</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The converted character string is also adjusted according to the local time zone settings.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For information about configuring the local time, see the <bpt id="p1">[</bpt>time<ept id="p1">](../../c-runtime-library/reference/time-time32-time64.md)</ept>, <bpt id="p2">[</bpt>_ftime<ept id="p2">](../../c-runtime-library/reference/ftime-ftime32-ftime64.md)</ept>, and <bpt id="p3">[</bpt>localtime<ept id="p3">](../../c-runtime-library/reference/localtime-localtime32-localtime64.md)</ept> functions and the <bpt id="p4">[</bpt>_tzset<ept id="p4">](../../c-runtime-library/reference/tzset.md)</ept> function for information about defining the time zone environment and global variables.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The string result produced by <ph id="ph1">`asctime`</ph> contains exactly 26 characters and has the form <ph id="ph2">`Wed Jan 02 02:03:55 1980\n\0`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A 24-hour clock is used.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>All fields have a constant width.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The newline character and the null character occupy the last two positions of the string.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`asctime`</ph> uses a single, statically allocated buffer to hold the return string.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Each call to this function destroys the result of the previous call.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`_wasctime`</ph> is a wide-character version of <ph id="ph2">`asctime`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`_wasctime`</ph> and <ph id="ph2">`asctime`</ph> behave identically otherwise.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>These functions validate their parameters.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`timeptr`</ph> is a null pointer, or if it contains out-of-range values, the invalid parameter handler is invoked, as described in <bpt id="p1">[</bpt>Parameter Validation<ept id="p1">](../../c-runtime-library/parameter-validation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If execution is allowed to continue, the function returns <ph id="ph1">`NULL`</ph> and sets <ph id="ph2">`errno`</ph> to <ph id="ph3">`EINVAL`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Generic-Text Routine Mapping</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>TCHAR.H routine</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>_UNICODE &amp; _MBCS not defined</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>_MBCS defined</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>_UNICODE defined</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Routine</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Required header</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>time.h&gt;</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>time.h&gt; or <ph id="ph2">\&lt;</ph>wchar.h&gt;</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This program places the system time in the long integer <ph id="ph1">`aclock`</ph>, translates it into the structure <ph id="ph2">`newtime`</ph> and then converts it to string form for output, using the <ph id="ph3">`asctime`</ph> function.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>.NET Framework Equivalent</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System::DateTime::ToLongDateString<ept id="p1">](https://msdn.microsoft.com/en-us/library/system.datetime.tolongdatestring.aspx)</ept></source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System::DateTime::ToLongTimeString<ept id="p1">](https://msdn.microsoft.com/en-us/library/system.datetime.tolongtimestring.aspx)</ept></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System::DateTime::ToShortDateString<ept id="p1">](https://msdn.microsoft.com/en-us/library/system.datetime.toshortdatestring.aspx)</ept></source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System::DateTime::ToShortTimeString<ept id="p1">](https://msdn.microsoft.com/en-us/library/system.datetime.toshorttimestring.aspx)</ept></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System::DateTime::ToString<ept id="p1">](https://msdn.microsoft.com/en-us/library/system.datetime.tostring.aspx)</ept></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Time Management<ept id="p1">](../../c-runtime-library/time-management.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>ctime, _ctime32, _ctime64, _wctime, _wctime32, _wctime64<ept id="p1">](../../c-runtime-library/reference/ctime-ctime32-ctime64-wctime-wctime32-wctime64.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>_ftime, _ftime32, _ftime64<ept id="p1">](../../c-runtime-library/reference/ftime-ftime32-ftime64.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>gmtime, _gmtime32, _gmtime64<ept id="p1">](../../c-runtime-library/reference/gmtime-gmtime32-gmtime64.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>localtime, _localtime32, _localtime64<ept id="p1">](../../c-runtime-library/reference/localtime-localtime32-localtime64.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>time, _time32, _time64<ept id="p1">](../../c-runtime-library/reference/time-time32-time64.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>_tzset<ept id="p1">](../../c-runtime-library/reference/tzset.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>asctime_s, _wasctime_s<ept id="p1">](../../c-runtime-library/reference/asctime-s-wasctime-s.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>