<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="cs-cz">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b679defb0170c1d21f67a32c3ecce44929c9a0b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\cdockstate-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4971bd5451e503ac6502b86049f553a8e9f5b1ce</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6c9f0c2dc13b9f81b433845bbbf78779f29b288</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CDockState Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CDockState Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A serialized <ph id="ph1">`CObject`</ph> class that loads, unloads, or clears the state of one or more docking control bars in persistent memory (a file).</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CDockState::Clear<ept id="p1">](#cdockstate__clear)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Clears the dock state information.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CDockState::GetVersion<ept id="p1">](#cdockstate__getversion)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Retrieves the version number of the stored bar state.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CDockState::LoadState<ept id="p1">](#cdockstate__loadstate)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Retrieves state information from the registry or .INI file.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CDockState::SaveState<ept id="p1">](#cdockstate__savestate)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Saves state information to the registry or INI file.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Public Data Members</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CDockState::m_arrBarInfo<ept id="p1">](#cdockstate__m_arrbarinfo)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Array of pointers to the stored dock state information with one entry for each control bar.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The dock state includes the size and position of the bar and whether or not it is docked.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When retrieving the stored dock state, <ph id="ph1">`CDockState`</ph> checks the bar's position and, if the bar is not visible with the current screen settings, <ph id="ph2">`CDockState`</ph> scales the bar's position so that it is visible.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The main purpose of <ph id="ph1">`CDockState`</ph> is to hold the entire state of a number of control bars and to allow that state to be saved and loaded either to the registry, the application's .INI file, or in binary form as part of a <ph id="ph2">`CArchive`</ph> object's contents.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The bar can be any dockable control bar, including a toolbar, status bar, or dialog bar.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CDockState`</ph> objects are written and read to or from a file via a <ph id="ph2">`CArchive`</ph> object.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CFrameWnd::GetDockState<ept id="p1">](../../mfc/reference/cframewnd-class.md#cframewnd__getdockstate)</ept> retrieves the state information of all the frame window's <ph id="ph1">`CControlBar`</ph> objects and puts it into the <ph id="ph2">`CDockState`</ph> object.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can then write the contents of the <ph id="ph1">`CDockState`</ph> object to storage with <bpt id="p1">[</bpt>Serialize<ept id="p1">](../../mfc/reference/cobject-class.md#cobject__serialize)</ept> or <bpt id="p2">[</bpt>CDockState::SaveState<ept id="p2">](#cdockstate__savestate)</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If you later want to restore the state of the control bars in the frame window, you can load the state with <ph id="ph1">`Serialize`</ph> or <bpt id="p1">[</bpt>CDockState::LoadState<ept id="p1">](#cdockstate__loadstate)</ept>, then use <bpt id="p2">[</bpt>CFrameWnd::SetDockState<ept id="p2">](../../mfc/reference/cframewnd-class.md#cframewnd__setdockstate)</ept> to apply the saved state to the frame window's control bars.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information on docking control bars, see the articles <bpt id="p1">[</bpt>Control Bars<ept id="p1">](../../mfc/control-bars.md)</ept>, <bpt id="p2">[</bpt>Toolbars: Docking and Floating<ept id="p2">](../../mfc/docking-and-floating-toolbars.md)</ept>, and <bpt id="p3">[</bpt>Frame Windows<ept id="p3">](../../mfc/frame-windows.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CObject<ept id="p1">](../../mfc/reference/cobject-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxadv.h</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cdockstate__clear"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CDockState::Clear</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Call this function to clear all docking information stored in the <ph id="ph1">`CDockState`</ph> object.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This includes not only whether the bar is docked or not, but the bar's size and position and whether or not it is visible.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cdockstate__getversion"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CDockState::GetVersion</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Call this function to retrieve the version number of the stored bar state.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>1 if the stored bar information is older than current bar state; 2 if the stored bar information is the same as the current bar state.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Version support enables a revised bar to add new persistent properties and still be able to detect and load the persistent state created by an earlier version of the bar.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cdockstate__loadstate"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CDockState::LoadState</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Call this function to retrieve state information from the registry or .INI file.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Points to a null-teminated string that specifies the name of a section in the initialization file or a key in the Windows registry where state information is stored.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The profile name is the section of the application's .INI file or the registry that contains the bars' state information.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>You can save control bar state information to the registry or .INI file with <ph id="ph1">`SaveState`</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cdockstate__m_arrbarinfo"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CDockState::m_arrBarInfo</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CPtrArray`</ph> object that is an array of pointers to the stored control bar information for each control bar that has saved state information in the <ph id="ph2">`CDockState`</ph> object.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cdockstate__savestate"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CDockState::SaveState</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Call this function to save the state information to the registry or .INI file.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Points to a null-teminated string that specifies the name of a section in the initialization file or a key in the Windows registry where state information is stored.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The profile name is the section of the application's .INI file or the registry that contains the control bar's state information.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`SaveState`</ph> also saves the current screen size.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>You can retrieve control bar information from the registry or .INI file with <ph id="ph1">`LoadState`</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CObject Class<ept id="p1">](../../mfc/reference/cobject-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Hierarchy Chart<ept id="p1">](../../mfc/hierarchy-chart.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>