<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7034fdf6a7130a94da6a2274940177079314e94a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\coleserveritem-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f1302b678ba632ba94f790946b7f51970ac6e3df</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b2f1b2995b408b0b1f5ce2fa244a5206a0e36dbe</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>COleServerItem Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>COleServerItem Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Provides the server interface to OLE items.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Protected Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>COleServerItem::COleServerItem</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`COleServerItem`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>COleServerItem::AddOtherClipboardData</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Places presentation and conversion formats in a <ph id="ph1">`COleDataSource`</ph> object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>COleServerItem::CopyToClipboard</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Copies the item to the Clipboard.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>COleServerItem::DoDragDrop</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Performs a drag-and-drop operation.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>COleServerItem::GetClipboardData</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets the data source for use in data transfer (drag and drop or Clipboard).</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>COleServerItem::GetDocument</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Returns the server document that contains the item.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>COleServerItem::GetEmbedSourceData</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">**</bpt>CF_EMBEDSOURCE<ept id="p1">**</ept> data for an OLE item.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>COleServerItem::GetItemName</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Returns the name of the item.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Used for linked items only.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>COleServerItem::GetLinkSourceData</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">`CF_LINKSOURCE`</ph> data for an OLE item.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>COleServerItem::GetObjectDescriptorData</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">**</bpt>CF_OBJECTDESCRIPTOR<ept id="p1">**</ept> data for an OLE item.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>COleServerItem::IsConnected</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Indicates whether the item is currently attached to an active container.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>COleServerItem::IsLinkedItem</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Indicates whether the item represents a linked OLE item.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>COleServerItem::NotifyChanged</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Updates all containers with automatic link update.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnDoVerb</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Called to execute a verb.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnDraw</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Called when the container requests to draw the item; implementation required.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnDrawEx</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Called for specialized item drawing.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnGetClipboardData</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Called by the framework to get the data that would be copied to the Clipboard.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnGetExtent</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Called by the framework to retrieve the size of the OLE item.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnInitFromData</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Called by the framework to initialize an OLE item using the contents of the data transfer object specified.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnQueryUpdateItems</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Called to determine whether any linked items require updating.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnRenderData</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Retrieves data as part of delayed rendering.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnRenderFileData</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Retrieves data into a <ph id="ph1">`CFile`</ph> object as part of delayed rendering.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnRenderGlobalData</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Retrieves data into an <ph id="ph1">`HGLOBAL`</ph> as part of delayed rendering.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnSetColorScheme</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Called to set the item's color scheme.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnSetData</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Called to set the item's data.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnSetExtent</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Called by the framework to set the size of the OLE item.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnUpdate</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Called when some portion of the document the item belongs in is changed.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnUpdateItems</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Called to update the presentation cache of all items in the server document.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>COleServerItem::SetItemName</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Sets the name of the item.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Used for linked items only.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Protected Methods</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>COleServerItem::GetDataSource</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Gets the object used to store conversion formats.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnHide</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Called by the framework to hide the OLE item.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnOpen</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Called by the framework to display the OLE item in its own top-level window.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnShow</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Called when the container requests to show the item.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Public Data Members</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>COleServerItem::m_sizeExtent</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Informs the server about how much of the OLE item is visible.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>A linked item can represent some or all of a server document.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>An embedded item always represents an entire server document.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`COleServerItem`</ph> class defines several overridable member functions that are called by the OLE system dynamic-link libraries (DLLs), usually in response to requests from the container application.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>These member functions allow the container application to manipulate the item indirectly in various ways, such as by displaying it, executing its verbs, or retrieving its data in various formats.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>To use <ph id="ph1">`COleServerItem`</ph>, derive a class from it and implement the <bpt id="p1">[</bpt>OnDraw<ept id="p1">](#coleserveritem__ondraw)</ept> and <bpt id="p2">[</bpt>Serialize<ept id="p2">](../../mfc/reference/cobject-class.md#cobject__serialize)</ept> member functions.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`OnDraw`</ph> function provides the metafile representation of an item, allowing it to be displayed when a container application opens a compound document.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Serialize`</ph> function of <ph id="ph2">`CObject`</ph> provides the native representation of an item, allowing an embedded item to be transferred between the server and container applications.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>OnGetExtent<ept id="p1">](#coleserveritem__ongetextent)</ept> provides the natural size of the item to the container, enabling the container to size the item.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For more information about servers and related topics, see the article <bpt id="p1">[</bpt>Servers: Implementing a Server<ept id="p1">](../../mfc/servers-implementing-a-server.md)</ept> and "Creating a Container/Server Application" in the article <bpt id="p2">[</bpt>Containers: Advanced Features<ept id="p2">](../../mfc/containers-advanced-features.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>CObject</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>CCmdTarget</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>CDocItem</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxole.h</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>COleServerItem::AddOtherClipboardData</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Call this function to place the presentation and conversion formats for the OLE item in the specified <ph id="ph1">`COleDataSource`</ph> object.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Pointer to the <ph id="ph1">`COleDataSource`</ph> object in which the data should be placed.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>You must have implemented the <bpt id="p1">[</bpt>OnDraw<ept id="p1">](#coleserveritem__ondraw)</ept> member function to provide the presentation format (a metafile picture) for the item.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>To support other conversion formats, register them using the <bpt id="p1">[</bpt>COleDataSource<ept id="p1">](../../mfc/reference/coledatasource-class.md)</ept> object returned by <bpt id="p2">[</bpt>GetDataSource<ept id="p2">](#coleserveritem__getdatasource)</ept> and override the <bpt id="p3">[</bpt>OnRenderData<ept id="p3">](#coleserveritem__onrenderdata)</ept> member function to provide data in the formats you want to support.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>COleServerItem::COleServerItem</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`COleServerItem`</ph> object and adds it to the server document's collection of document items.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Pointer to the document that will contain the new item.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Flag indicating whether the object can be deleted when a link to it is released.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Set this to <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept> if the <ph id="ph1">`COleServerItem`</ph> object is an integral part of your document's data which you must delete.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Set this to <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> if the object is a secondary structure used to identify a range in your document's data that can be deleted by the framework.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>COleServerItem::CopyToClipboard</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Call this function to copy the OLE item to the Clipboard.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Set this to <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> if link data should be copied to the Clipboard.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Set this to <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept> if your server application does not support links.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The function uses the <bpt id="p1">[</bpt>OnGetClipboardData<ept id="p1">](#coleserveritem__ongetclipboarddata)</ept> member function to create a <bpt id="p2">[</bpt>COleDataSource<ept id="p2">](../../mfc/reference/coledatasource-class.md)</ept> object containing the OLE item's data in the formats supported.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The function then places the <ph id="ph1">`COleDataSource`</ph> object on the Clipboard by using the <bpt id="p1">[</bpt>COleDataSource::SetClipboard<ept id="p1">](../../mfc/reference/coledatasource-class.md#coledatasource__setclipboard)</ept> function.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`COleDataSource`</ph> object includes the item's native data and its representation in <ph id="ph2">`CF_METAFILEPICT`</ph> format, as well as data in any conversion formats you choose to support.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>You must have implemented <bpt id="p1">[</bpt>Serialize<ept id="p1">](../../mfc/reference/cobject-class.md#cobject__serialize)</ept> and <bpt id="p2">[</bpt>OnDraw<ept id="p2">](#coleserveritem__ondraw)</ept> for this member function to work.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>COleServerItem::DoDragDrop</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Call the <ph id="ph1">`DoDragDrop`</ph> member function to perform a drag-and-drop operation.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>lpRectItem</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The item's rectangle on screen, in pixels, relative to the client area.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The offset from <ph id="ph1">`lpItemRect`</ph> where the mouse position was at the time of the drag.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Set this to <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> if link data should be copied to the Clipboard.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Set it to <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept> if your application does not support links.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Determines the effects that the drag source will allow in the drag operation (a combination of Copy, Move, and Link).</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Pointer to the rectangle that defines where the drag actually starts.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>For more information, see the following Remarks section.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>A value from the <ph id="ph1">`DROPEFFECT`</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>If it is <ph id="ph1">`DROPEFFECT_MOVE`</ph>, the original data should be removed.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The drag-and-drop operation does not start immediately.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>It waits until the mouse cursor leaves the rectangle specified by <ph id="ph1">`lpRectStartDrag`</ph> or until a specified number of milliseconds have passed.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`lpRectStartDrag`</ph> is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, a default rectangle is used so that the drag starts when the mouse cursor moves one pixel.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The delay time is specified by a registry key setting.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>You can change the delay time by calling <bpt id="p1">[</bpt>CWinApp::WriteProfileString<ept id="p1">](../../mfc/reference/cwinapp-class.md#cwinapp__writeprofilestring)</ept> or <bpt id="p2">[</bpt>CWinApp::WriteProfileInt<ept id="p2">](../../mfc/reference/cwinapp-class.md#cwinapp__writeprofileint)</ept>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>If you do not specify the delay time, a default value of 200 milliseconds is used.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Drag delay time is stored as follows:</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Windows NT   Drag delay time is stored in HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\NT\CurrentVersion\IniFileMapping\win.ini\Windows\DragDelay.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Windows 3.x   Drag delay time is stored in the WIN.INI file, under the [Windows} section.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Windows 95/98   Drag delay time is stored in a cached version of WIN.INI.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>For more information about how drag delay information is stored in either the registry or the .INI file, see <bpt id="p1">[</bpt>WriteProfileString<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms725504)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>COleServerItem::GetClipboardData</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Call this function to fill the specified <bpt id="p1">[</bpt>COleDataSource<ept id="p1">](../../mfc/reference/coledatasource-class.md)</ept> object with all the data that would be copied to the Clipboard if you called <bpt id="p2">[</bpt>CopyToClipboard<ept id="p2">](#coleserveritem__copytoclipboard)</ept> (the same data would also be transferred if you called <bpt id="p3">[</bpt>DoDragDrop<ept id="p3">](#coleserveritem__dodragdrop)</ept>).</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Pointer to the <ph id="ph1">`COleDataSource`</ph> object that will receive the OLE item's data in all supported formats.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt>TRUE<ept id="p1">**</ept> if link data should be copied to the Clipboard.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept> if your server application does not support links.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The offset, in pixels, of the mouse cursor from the origin of the object.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The size of the object in pixels.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>This function calls the <bpt id="p1">[</bpt>GetEmbedSourceData<ept id="p1">](#coleserveritem__getembedsourcedata)</ept> member function to get the native data for the OLE item and calls the <bpt id="p2">[</bpt>AddOtherClipboardData<ept id="p2">](#coleserveritem__addotherclipboarddata)</ept> member function to get the presentation format and any supported conversion formats.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`bIncludeLink`</ph> is <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>, the function also calls <bpt id="p2">[</bpt>GetLinkSourceData<ept id="p2">](#coleserveritem__getlinksourcedata)</ept> to get the link data for the item.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Override this function if you want to put formats in a <ph id="ph1">`COleDataSource`</ph> object before or after those formats supplied by <ph id="ph2">`CopyToClipboard`</ph>.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>COleServerItem::GetDataSource</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Call this function to get the <bpt id="p1">[</bpt>COleDataSource<ept id="p1">](../../mfc/reference/coledatasource-class.md)</ept> object used to store the conversion formats that the server application supports.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>A pointer to the <ph id="ph1">`COleDataSource`</ph> object used to store the conversion formats.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>If you want your server application to offer data in a variety of formats during data transfer operations, register those formats with the <ph id="ph1">`COleDataSource`</ph> object returned by this function.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>For example, if you want to supply a <bpt id="p1">**</bpt>CF_TEXT<ept id="p1">**</ept> representation of the OLE item for Clipboard or drag-and-drop operations, you would register the format with the <ph id="ph1">`COleDataSource`</ph> object this function returns, and then override the <bpt id="p2">**</bpt>OnRenderXxxData<ept id="p2">**</ept> member function to provide the data.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>COleServerItem::GetDocument</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Call this function to get a pointer to the document that contains the item.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>A pointer to the document that contains the item; <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> if the item is not part of a document.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>This allows access to the server document that you passed as an argument to the <ph id="ph1">`COleServerItem`</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>COleServerItem::GetEmbedSourceData</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Call this function to get the <bpt id="p1">**</bpt>CF_EMBEDSOURCE<ept id="p1">**</ept> data for an OLE item.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>STGMEDIUM<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683812)</ept> structure that will receive the <bpt id="p2">**</bpt>CF_EMBEDSOURCE<ept id="p2">**</ept> data for the OLE item.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>This format includes the item's native data.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>You must have implemented the <ph id="ph1">`Serialize`</ph> member function for this function to work properly.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The result can then be added to a data source by using <bpt id="p1">[</bpt>COleDataSource::CacheData<ept id="p1">](../../mfc/reference/coledatasource-class.md#coledatasource__cachedata)</ept>.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>This function is called automatically by <bpt id="p1">[</bpt>COleServerItem::OnGetClipboardData<ept id="p1">](#coleserveritem__ongetclipboarddata)</ept>.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>STGMEDIUM<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683812)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>COleServerItem::GetItemName</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Call this function to get the name of the item.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The name of the item.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>You typically call this function only for linked items.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>COleServerItem::GetLinkSourceData</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Call this function to get the <ph id="ph1">`CF_LINKSOURCE`</ph> data for an OLE item.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>STGMEDIUM<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683812)</ept> structure that will receive the <ph id="ph1">`CF_LINKSOURCE`</ph> data for the OLE item.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>This format includes the CLSID describing the type of the OLE item and the information needed to locate the document containing the OLE item.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The result can then be added to a data source with <bpt id="p1">[</bpt>COleDataSource::CacheData<ept id="p1">](../../mfc/reference/coledatasource-class.md#coledatasource__cachedata)</ept>.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>This function is called automatically by <bpt id="p1">[</bpt>OnGetClipboardData<ept id="p1">](#coleserveritem__ongetclipboarddata)</ept>.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>STGMEDIUM<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683812)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>COleServerItem::GetObjectDescriptorData</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Call this function to get the <bpt id="p1">**</bpt>CF_OBJECTDESCRIPTOR<ept id="p1">**</ept> data for an OLE item.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Offset of the mouse click from the upper-left corner of the OLE item.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Size of the OLE item.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>STGMEDIUM<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683812)</ept> structure that will receive the <bpt id="p2">**</bpt>CF_OBJECTDESCRIPTOR<ept id="p2">**</ept> data for the OLE item.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The information is copied into the <bpt id="p1">**</bpt>STGMEDIUM<ept id="p1">**</ept> structure pointed to by <ph id="ph1">`lpStgMedium`</ph>.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>This format includes the information needed for the Paste Special dialog.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>STGMEDIUM<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683812)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>COleServerItem::IsConnected</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Call this function to see if the OLE item is connected.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Nonzero if the item is connected; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>An OLE item is considered connected if one or more containers have references to the item.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>An item is connected if its reference count is greater than 0 or if it is an embedded item.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>COleServerItem::IsLinkedItem</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Call this function to see if the OLE item is a linked item.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Nonzero if the item is a linked item; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>An item is linked if the item is valid and is not returned in the document's list of embedded items.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>A linked item might or might not be connected to a container.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>It is common to use the same class for both linked and embedded items.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>allows you to make linked items behave differently than embedded items, although many times the code is common.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>COleServerItem::m_sizeExtent</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>This member tells the server how much of the object is visible in the container document.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The default implementation of <bpt id="p1">[</bpt>OnSetExtent<ept id="p1">](#coleserveritem__onsetextent)</ept> sets this member.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>COleServerItem::NotifyChanged</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Call this function after the linked item has been changed.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>A value from the <ph id="ph1">`DVASPECT`</ph> enumeration that indicates which aspect of the OLE item has changed.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>This parameter can have any of the following values:</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Item is represented in such a way that it can be displayed as an embedded object inside its container.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Item is rendered in a "thumbnail" representation so that it can be displayed in a browsing tool.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Item is represented by an icon.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Item is represented as if it were printed using the Print command from the File menu.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>If a container item is linked to the document with an automatic link, the item is updated to reflect the changes.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>In container applications written using the Microsoft Foundation Class Library, <bpt id="p1">[</bpt>COleClientItem::OnChange<ept id="p1">](../../mfc/reference/coleclientitem-class.md#coleclientitem__onchange)</ept> is called in response.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnDoVerb</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Called by the framework to execute the specified verb.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Specifies the verb to execute.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>It can be any one of the following:</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Meaning</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Symbol</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Primary verb</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Secondary verb</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>(None)</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>– 1</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Display item for editing</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>– 2</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Edit item in separate window</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>– 3</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Hide item</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The –1 value is typically an alias for another verb.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>If open editing is not supported, –2 has the same effect as –1.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>For additional values, see <bpt id="p1">[</bpt>IOleObject::DoVerb<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms694508)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>If the container application was written with the Microsoft Foundation Class Library, this function is called when the <bpt id="p1">[</bpt>COleClientItem::Activate<ept id="p1">](../../mfc/reference/coleclientitem-class.md#coleclientitem__activate)</ept> member function of the corresponding <ph id="ph1">`COleClientItem`</ph> object is called.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>The default implementation calls the <bpt id="p1">[</bpt>OnShow<ept id="p1">](#coleserveritem__onshow)</ept> member function if the primary verb or <ph id="ph1">`OLEIVERB_SHOW`</ph> is specified, <bpt id="p2">[</bpt>OnOpen<ept id="p2">](#coleserveritem__onopen)</ept> if the secondary verb or <ph id="ph2">`OLEIVERB_OPEN`</ph> is specified, and <bpt id="p3">[</bpt>OnHide<ept id="p3">](#coleserveritem__onhide)</ept> if <ph id="ph3">`OLEIVERB_HIDE`</ph> is specified.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>The default implementation calls <ph id="ph1">`OnShow`</ph> if <ph id="ph2">`iVerb`</ph> is not one of the verbs listed above.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Override this function if your primary verb does not show the item.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>For example, if the item is a sound recording and its primary verb is Play, you would not have to display the server application to play the item.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IOleObject::DoVerb<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms694508)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnDraw</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Called by the framework to render the OLE item into a metafile.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>A pointer to the <bpt id="p1">[</bpt>CDC<ept id="p1">](../../mfc/reference/cdc-class.md)</ept> object on which to draw the item.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>The display context is automatically connected to the attribute display context so you can call attribute functions, although doing so would make the metafile device-specific.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Size, in <bpt id="p1">**</bpt>HIMETRIC<ept id="p1">**</ept> units, in which to draw the metafile.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Nonzero if the item was successfully drawn; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>The metafile representation of the OLE item is used to display the item in the container application.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>If the container application was written with the Microsoft Foundation Class Library, the metafile is used by the <bpt id="p1">[</bpt>Draw<ept id="p1">](../../mfc/reference/coleclientitem-class.md#coleclientitem__draw)</ept> member function of the corresponding <bpt id="p2">[</bpt>COleClientItem<ept id="p2">](../../mfc/reference/coleclientitem-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>There is no default implementation.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>You must override this function to draw the item into the device context specified.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnDrawEx</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Called by the framework for all drawing.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>A pointer to the <bpt id="p1">[</bpt>CDC<ept id="p1">](../../mfc/reference/cdc-class.md)</ept> object on which to draw the item.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The DC is automatically connected to the attribute DC so you can call attribute functions, although doing so would make the metafile device-specific.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>A value from the <ph id="ph1">`DVASPECT`</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>This parameter can have any of the following values:</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Item is represented in such a way that it can be displayed as an embedded object inside its container.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Item is rendered in a "thumbnail" representation so that it can be displayed in a browsing tool.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Item is represented by an icon.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>Item is represented as if it were printed using the Print command from the File menu.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Size of the item in <bpt id="p1">**</bpt>HIMETRIC<ept id="p1">**</ept> units.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>Nonzero if the item was successfully drawn; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>The default implementation calls <ph id="ph1">`OnDraw`</ph> when <ph id="ph2">`DVASPECT`</ph> is equal to <ph id="ph3">`DVASPECT_CONTENT`</ph>; otherwise it fails.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>Override this function to provide presentation data for aspects other than <ph id="ph1">`DVASPECT_CONTENT`</ph>, such as <ph id="ph2">`DVASPECT_ICON`</ph> or <ph id="ph3">`DVASPECT_THUMBNAIL`</ph>.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnGetClipboardData</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Called by the framework to get a <ph id="ph1">`COleDataSource`</ph> object containing all the data that would be placed on the Clipboard by a call to the <bpt id="p1">[</bpt>CopyToClipboard<ept id="p1">](#coleserveritem__copytoclipboard)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Set this to <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> if link data should be copied to the Clipboard.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>Set this to <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept> if your server application does not support links.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>The offset of the mouse cursor from the origin of the object in pixels.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>The size of the object in pixels.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>COleDataSource<ept id="p1">](../../mfc/reference/coledatasource-class.md)</ept> object containing the Clipboard data.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>The default implementation of this function calls <bpt id="p1">[</bpt>GetClipboardData<ept id="p1">](#coleserveritem__getclipboarddata)</ept>.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnGetExtent</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>Called by the framework to retrieve the size, in <bpt id="p1">**</bpt>HIMETRIC<ept id="p1">**</ept> units, of the OLE item.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Specifies the aspect of the OLE item whose bounds are to be retrieved.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>This parameter can have any of the following values:</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>Item is represented in such a way that it can be displayed as an embedded object inside its container.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Item is rendered in a "thumbnail" representation so that it can be displayed in a browsing tool.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Item is represented by an icon.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Item is represented as if it were printed using the Print command from the File menu.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>Reference to a <ph id="ph1">`CSize`</ph> object that will receive the size of the OLE item.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>If the container application was written with the Microsoft Foundation Class Library, this function is called when the <bpt id="p1">[</bpt>GetExtent<ept id="p1">](../../mfc/reference/coleclientitem-class.md#coleclientitem__getextent)</ept> member function of the corresponding <ph id="ph1">`COleClientItem`</ph> object is called.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>The default implementation does nothing.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>You must implement it yourself.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Override this function if you want to perform special processing when handling a request for the size of the OLE item.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnHide</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>Called by the framework to hide the OLE item.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>The default calls <bpt id="p1">**</bpt>COleServerDoc::OnShowDocument( FALSE )<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>The function also notifies the container that the OLE item has been hidden.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Override this function if you want to perform special processing when hiding an OLE item.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnInitFromData</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>Called by the framework to initialize an OLE item using the contents of <ph id="ph1">`pDataObject`</ph>.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Pointer to an OLE data object containing data in various formats for initializing the OLE item.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt>TRUE<ept id="p1">**</ept> if the function is called to initialize an OLE item being newly created by a container application.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept> if the function is called to replace the contents of an already existing OLE item.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`bCreation`</ph> is <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept>, this function is called if a container implements Insert New Object based on the current selection.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>The data selected is used when creating the new OLE item.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>For example, when selecting a range of cells in a spreadsheet program and then using the Insert New Object to create a chart based on the values in the selected range.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>The default implementation does nothing.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>Override this function to choose an acceptable format from those offered by <ph id="ph1">`pDataObject`</ph> and initialize the OLE item based on the data provided.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>This is an advanced overridable.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IOleObject::InitFromData<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms688510)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnOpen</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>Called by the framework to display the OLE item in a separate instance of the server application, rather than in place.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>The default implementation activates the first frame window displaying the document that contains the OLE item; if the application is a mini-server, the default implementation shows the main window.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>The function also notifies the container that the OLE item has been opened.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>Override this function if you want to perform special processing when opening an OLE item.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>This is especially common with linked items where you want to set the selection to the link when it is opened.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IOleClientSite::OnShowWindow<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms688658)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnQueryUpdateItems</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>Called by the framework to determine whether any linked items in the current server document are out of date.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Nonzero if the document has items needing updates; 0 if all items are up to date.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>An item is out of date if its source document has been changed but the linked item has not been updated to reflect the changes in the document.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnRenderData</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>Called by the framework to retrieve data in the specified format.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>Points to the <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure specifying the format in which information is requested.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Points to a <bpt id="p1">[</bpt>STGMEDIUM<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683812)</ept> structure in which the data is to be returned.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>The specified format is one previously placed in the <ph id="ph1">`COleDataSource`</ph> object using the <bpt id="p1">[</bpt>DelayRenderData<ept id="p1">](../../mfc/reference/coledatasource-class.md#coledatasource__delayrenderdata)</ept> or <bpt id="p2">[</bpt>DelayRenderFileData<ept id="p2">](../../mfc/reference/coledatasource-class.md#coledatasource__delayrenderfiledata)</ept> member function for delayed rendering.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>The default implementation of this function calls <bpt id="p1">[</bpt>OnRenderFileData<ept id="p1">](#coleserveritem__onrenderfiledata)</ept> or <bpt id="p2">[</bpt>OnRenderGlobalData<ept id="p2">](#coleserveritem__onrenderglobaldata)</ept>, respectively, if the supplied storage medium is either a file or memory.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>If neither of these formats is supplied, the default implementation returns 0 and does nothing.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`lpStgMedium`-&gt; </ph><bpt id="p1">*</bpt>tymed<ept id="p1">*</ept> is <bpt id="p2">**</bpt>TYMED_NULL<ept id="p2">**</ept>, the <bpt id="p3">**</bpt>STGMEDIUM<ept id="p3">**</ept> should allocated and filled as specified by <bpt id="p4">*</bpt>lpFormatEtc-&gt;tymed<ept id="p4">*</ept>.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>If not <bpt id="p1">**</bpt>TYMED_NULL<ept id="p1">**</ept>, the <bpt id="p2">**</bpt>STGMEDIUM<ept id="p2">**</ept> should be filled in place with the data.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>This is an advanced overridable.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>Override this function to provide your data in the requested format and medium.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Depending on your data, you may want to override one of the other versions of this function instead.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>If your data is small and fixed in size, override <ph id="ph1">`OnRenderGlobalData`</ph>.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>If your data is in a file, or is of variable size, override <ph id="ph1">`OnRenderFileData`</ph>.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IDataObject::GetData<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms678431)</ept>, <bpt id="p2">[</bpt>STGMEDIUM<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms683812)</ept>, <bpt id="p3">[</bpt>FORMATETC<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept>, and <bpt id="p4">[</bpt>TYMED<ept id="p4">](http://msdn.microsoft.com/library/windows/desktop/ms691227)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnRenderFileData</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Called by the framework to retrieve data in the specified format when the storage medium is a file.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>Points to the <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure specifying the format in which information is requested.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>Points to a <ph id="ph1">`CFile`</ph> object in which the data is to be rendered.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>The specified format is one previously placed in the <ph id="ph1">`COleDataSource`</ph> object using the <bpt id="p1">[</bpt>DelayRenderData<ept id="p1">](../../mfc/reference/coledatasource-class.md#coledatasource__delayrenderdata)</ept> member function for delayed rendering.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>The default implementation of this function simply returns <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>This is an advanced overridable.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>Override this function to provide your data in the requested format and medium.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>Depending on your data, you might want to override one of the other versions of this function instead.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>If you want to handle multiple storage mediums, override <bpt id="p1">[</bpt>OnRenderData<ept id="p1">](#coleserveritem__onrenderdata)</ept>.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>If your data is in a file, or is of variable size, override <bpt id="p1">[</bpt>OnRenderFileData<ept id="p1">](#coleserveritem__onrenderfiledata)</ept>.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IDataObject::GetData<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms678431)</ept> and <bpt id="p2">[</bpt>FORMATETC<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnRenderGlobalData</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>Called by the framework to retrieve data in the specified format when the specified storage medium is global memory.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>Points to the <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure specifying the format in which information is requested.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>Points to a handle to global memory in which the data is to be returned.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>If no memory has been allocated, this parameter can be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>The specified format is one previously placed in the <ph id="ph1">`COleDataSource`</ph> object using the <bpt id="p1">[</bpt>DelayRenderData<ept id="p1">](../../mfc/reference/coledatasource-class.md#coledatasource__delayrenderdata)</ept> member function for delayed rendering.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>The default implementation of this function simply returns <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`phGlobal`</ph> is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, then a new <ph id="ph2">`HGLOBAL`</ph> should be allocated and returned in <ph id="ph3">`phGlobal`</ph>.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>Otherwise, the <ph id="ph1">`HGLOBAL`</ph> specified by <ph id="ph2">`phGlobal`</ph> should be filled with the data.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>The amount of data placed in the <ph id="ph1">`HGLOBAL`</ph> must not exceed the current size of the memory block.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>Also, the block cannot be reallocated to a larger size.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>This is an advanced overridable.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>Override this function to provide your data in the requested format and medium.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>Depending on your data, you may want to override one of the other versions of this function instead.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>If you want to handle multiple storage mediums, override <bpt id="p1">[</bpt>OnRenderData<ept id="p1">](#coleserveritem__onrenderdata)</ept>.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>If your data is in a file, or is of variable size, override <bpt id="p1">[</bpt>OnRenderFileData<ept id="p1">](#coleserveritem__onrenderfiledata)</ept>.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IDataObject::GetData<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms678431)</ept> and <bpt id="p2">[</bpt>FORMATETC<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnSetColorScheme</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>Called by the framework to specify a color palette to be used when editing the OLE item.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>Pointer to a Windows <bpt id="p1">[</bpt>LOGPALETTE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd145040)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>Nonzero if the color palette is used; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>If the container application was written using the Microsoft Foundation Class Library, this function is called when the <bpt id="p1">[</bpt>IOleObject::SetColorScheme<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683971)</ept> function of the corresponding <ph id="ph1">`COleClientItem`</ph> object is called.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>The default implementation returns <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>Override this function if you want to use the recommended palette.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>The server application is not required to use the suggested palette.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IOleObject::SetColorScheme<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683971)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnSetData</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>Called by the framework to replace the OLE item's data with the specified data.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure specifying the format of the data.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>STGMEDIUM<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683812)</ept> structure in which the data resides.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>Indicates who has ownership of the storage medium after completing the function call.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>The caller decides who is responsible for releasing the resources allocated on behalf of the storage medium.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>The caller does this by setting <ph id="ph1">`bRelease`</ph>.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`bRelease`</ph> is nonzero, the server item takes ownership, freeing the medium when it has finished using it.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`bRelease`</ph> is 0, the caller retains ownership and the server item can use the storage medium only for the duration of the call.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>The server item does not take ownership of the data until it has successfully obtained it.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>That is, it does not take ownership if it returns 0.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>If the data source takes ownership, it frees the storage medium by calling the <bpt id="p1">[</bpt>ReleaseStgMedium<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms693491)</ept> function.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>The default implementation does nothing.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>Override this function to replace the OLE item's data with the specified data.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>This is an advanced overridable.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>STGMEDIUM<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683812)</ept>, <bpt id="p2">[</bpt>FORMATETC<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept>, and <bpt id="p3">[</bpt>ReleaseStgMedium<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms693491)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnSetExtent</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>Called by the framework to tell the OLE item how much space is available to it in the container document.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>Specifies the aspect of the OLE item whose bounds are being specified.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>This parameter can have any of the following values:</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Item is represented in such a way that it can be displayed as an embedded object inside its container.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>Item is rendered in a "thumbnail" representation so that it can be displayed in a browsing tool.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>Item is represented by an icon.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>Item is represented as if it were printed using the Print command from the File menu.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>CSize<ept id="p1">](../../atl-mfc-shared/reference/csize-class.md)</ept> structure specifying the new size of the OLE item.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>If the container application was written with the Microsoft Foundation Class Library, this function is called when the <bpt id="p1">[</bpt>SetExtent<ept id="p1">](../../mfc/reference/coleclientitem-class.md#coleclientitem__setextent)</ept> member function of the corresponding <ph id="ph1">`COleClientItem`</ph> object is called.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>The default implementation sets the <bpt id="p1">[</bpt>m_sizeExtent<ept id="p1">](#coleserveritem__m_sizeextent)</ept> member to the specified size if <ph id="ph1">`nDrawAspect`</ph> is <ph id="ph2">`DVASPECT_CONTENT`</ph>; otherwise it returns 0.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>Override this function to perform special processing when you change the size of the item.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnShow</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>Called by the framework to instruct the server application to display the OLE item in place.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>This function is typically called when the user of the container application creates an item or executes a verb, such as Edit, that requires the item to be shown.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>The default implementation attempts in-place activation.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>If this fails, the function calls the <ph id="ph1">`OnOpen`</ph> member function to display the OLE item in a separate window.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>Override this function if you want to perform special processing when an OLE item is shown.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnUpdate</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>Called by the framework when an item has been modified.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>Pointer to the item that modified the document.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>Contains information about the modification.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>Pointer to an object storing information about the modification.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>A value from the <ph id="ph1">`DVASPECT`</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>This parameter can have any one of the following values:</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>Item is represented in such a way that it can be displayed as an embedded object inside its container.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>Item is rendered in a "thumbnail" representation so that it can be displayed in a browsing tool.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>Item is represented by an icon.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>Item is represented as if it were printed using the Print command from the File menu.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>The default implementation calls <bpt id="p1">[</bpt>NotifyChanged<ept id="p1">](#coleserveritem__notifychanged)</ept>, regardless of the hint or sender.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>COleServerItem::OnUpdateItems</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>Called by the framework to update all items in the server document.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>The default implementation calls <bpt id="p1">[</bpt>UpdateLink<ept id="p1">](../../mfc/reference/coleclientitem-class.md#coleclientitem__updatelink)</ept> for all <ph id="ph1">`COleClientItem`</ph> objects in the document.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>COleServerItem::SetItemName</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>Call this function when you create a linked item to set its name.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>Pointer to the new name of the item.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>The name must be unique within the document.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>When a server application is called to edit a linked item, the application uses this name to find the item.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>You do not need to call this function for embedded items.</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>MFC Sample HIERSVR</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>CDocItem Class</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>Hierarchy Chart</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>COleClientItem Class</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>COleServerDoc Class</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>COleTemplateServer Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>