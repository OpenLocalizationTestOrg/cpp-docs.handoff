<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">00ade9cc38aef0f102fbd180c7114b4b2c2a7eac</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\cdebugreporthook-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2da20fb2f82681bda03d379ae8d55226f6c529f8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3573602a39bbd30a5a2172d1a51b28ed105c56a3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CDebugReportHook Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CDebugReportHook Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Use this class to send debug reports to a named pipe.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>CDebugReportHook::CDebugReportHook</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Calls <bpt id="p1">[</bpt>SetPipeName<ept id="p1">](#cdebugreporthook__setpipename)</ept>, <bpt id="p2">[</bpt>SetTimeout<ept id="p2">](#cdebugreporthook__settimeout)</ept>, and <bpt id="p3">[</bpt>SetHook<ept id="p3">](#cdebugreporthook__sethook)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>CDebugReportHook::~CDebugReportHook</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Calls <bpt id="p1">[</bpt>CDebugReportHook::RemoveHook<ept id="p1">](#cdebugreporthook__removehook)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>CDebugReportHook::CDebugReportHookProc</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>(Static) The custom reporting function that is hooked into the C run-time debug reporting process.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>CDebugReportHook::RemoveHook</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Call this method to stop sending debug reports to the named pipe and restore the previous report hook.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>CDebugReportHook::SetHook</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Call this method to start sending debug reports to the named pipe.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>CDebugReportHook::SetPipeName</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Call this method to set the machine and name of the pipe to which the debug reports will be sent.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>CDebugReportHook::SetTimeout</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Call this method to set the time in milliseconds that this class will wait for the named pipe to become available.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Create an instance of this class in debug builds of your services or applications to send debug reports to a named pipe.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Debug reports are generated by calling <bpt id="p1">[</bpt>_CrtDbgReport<ept id="p1">](../../c-runtime-library/reference/crtdbgreport-crtdbgreportw.md)</ept> or using a wrapper for this function such as the <bpt id="p2">[</bpt>ATLTRACE<ept id="p2">](http://msdn.microsoft.com/library/c796baa5-e2b9-4814-a27d-d800590b102e)</ept> and <bpt id="p3">[</bpt>ATLASSERT<ept id="p3">](http://msdn.microsoft.com/library/98e3e0fc-77e2-499b-a6f6-b17a21c6fbd3)</ept> macros.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Use of this class allows you to interactively debug components running in non-interactive <bpt id="p1">[</bpt>window stations<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms687096)</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Note that debug reports are sent using the underlying security context of the thread.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Impersonation is temporarily disabled so that debug reports can be viewed in situations where impersonation of low privilege users is taking place, such as in web applications.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> atlutil.h</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>CDebugReportHook::CDebugReportHook</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Calls <bpt id="p1">[</bpt>SetPipeName<ept id="p1">](#cdebugreporthook__setpipename)</ept>, <bpt id="p2">[</bpt>SetTimeout<ept id="p2">](#cdebugreporthook__settimeout)</ept>, and <bpt id="p3">[</bpt>SetHook<ept id="p3">](#cdebugreporthook__sethook)</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The name of the machine to which the debug output should be sent.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Defaults to the local machine.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The name of the named pipe to which the debug output should be sent.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The time in milliseconds that this class will wait for the named pipe to become available.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>CDebugReportHook::~CDebugReportHook</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Calls <bpt id="p1">[</bpt>CDebugReportHook::RemoveHook<ept id="p1">](#cdebugreporthook__removehook)</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>CDebugReportHook::CDebugReportHookProc</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The custom reporting function that is hooked into the C run-time debug reporting process.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The type of the report (_CRT_WARN, _CRT_ERROR, or _CRT_ASSERT).</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The message string.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>returnValue</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The value that should be returned by <bpt id="p1">[</bpt>_CrtDbgReport<ept id="p1">](../../c-runtime-library/reference/crtdbgreport-crtdbgreportw.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Returns FALSE if the hook handles the message in question completely so that no further reporting is required.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Returns TRUE if <ph id="ph1">`_CrtDbgReport`</ph> should report the message in the normal way.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The reporting function attempts to open the named pipe and communicate with the process at the other end.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If the pipe is busy, the reporting function will wait until the pipe is free or the timeout expires.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The timeout can be set by the constructor or a call to <bpt id="p1">[</bpt>CDebugReportHook::SetTimeout<ept id="p1">](#cdebugreporthook__settimeout)</ept>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The code in this function is executed in the underlying security context of the calling thread, that is, impersonation is disabled for the duration of this function.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>CDebugReportHook::RemoveHook</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Call this method to stop sending debug reports to the named pipe and restore the previous report hook.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Calls <bpt id="p1">[</bpt>_CrtSetReportHook2<ept id="p1">](../../c-runtime-library/reference/crtsetreporthook2-crtsetreporthookw2.md)</ept> to restore the previous report hook.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>CDebugReportHook::SetHook</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Call this method to start sending debug reports to the named pipe.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Calls <bpt id="p1">[</bpt>_CrtSetReportHook2<ept id="p1">](../../c-runtime-library/reference/crtsetreporthook2-crtsetreporthookw2.md)</ept> to have debug reports routed through <bpt id="p2">[</bpt>CDebugReportHookProc<ept id="p2">](#cdebugreporthook__cdebugreporthookproc)</ept> to the named pipe.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This class keeps track of the previous report hook so that it can be restored when <bpt id="p1">[</bpt>RemoveHook<ept id="p1">](#cdebugreporthook__removehook)</ept> is called.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>CDebugReportHook::SetPipeName</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Call this method to set the machine and name of the pipe to which the debug reports will be sent.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The name of the machine to which the debug output should be sent.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The name of the named pipe to which the debug output should be sent.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Returns TRUE on success, FALSE on failure.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>CDebugReportHook::SetTimeout</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Call this method to set the time in milliseconds that this class will wait for the named pipe to become available.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The time in milliseconds that this class will wait for the named pipe to become available.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Classes</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>