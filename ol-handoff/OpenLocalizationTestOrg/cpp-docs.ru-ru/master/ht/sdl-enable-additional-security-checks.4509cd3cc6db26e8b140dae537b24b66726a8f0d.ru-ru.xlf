<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c748a9e0fb85c012279326f614b1ad2f153956b0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\build\reference\sdl-enable-additional-security-checks.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9b7f7b838452f2efdc16bfdfeaeb373404044404</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">83840076da7ad5cda2a4b89dc7064d7e1cfcc1b6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>-sdl (Enable Additional Security Checks) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>/sdl (Enable Additional Security Checks)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Adds recommended Security Development Lifecycle (SDL) checks.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>These checks include extra security-relevant warnings as errors, and additional secure code-generation features.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/sdl<ept id="p1">**</ept> enables a superset of the baseline security checks provided by <bpt id="p2">[</bpt>/GS<ept id="p2">](../../build/reference/gs-buffer-security-check.md)</ept> and overrides <bpt id="p3">**</bpt>/GS-<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>/sdl<ept id="p1">**</ept> is off.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/sdl-<ept id="p1">**</ept> disables the additional security checks.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Compile-time Checks</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/sdl<ept id="p1">**</ept> enables these warnings as errors:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Warning enabled by /sdl</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Equivalent command-line switch</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>C4146</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>/we4146</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A unary minus operator was applied to an unsigned type, resulting in an unsigned result.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>C4308</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>/we4308</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A negative integral constant converted to unsigned type, resulting in a possibly meaningless result.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>C4532</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>/we4532</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Use of <ph id="ph1">`continue`</ph>, <ph id="ph2">`break`</ph> or <ph id="ph3">`goto`</ph> keywords in a <ph id="ph4">`__finally`/`finally`</ph> block has undefined behavior during abnormal termination.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>C4533</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>/we4533</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Code initializing a variable will not be executed.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>C4700</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>/we4700</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Use of an uninitialized local variable.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>C4703</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>/we4703</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Use of a potentially uninitialized local pointer variable.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>C4789</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>/we4789</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Buffer overrun when specific C run-time (CRT) functions are used.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>C4995</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>/we4995</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Use of a function marked with pragma <bpt id="p1">[</bpt>deprecated<ept id="p1">](../../preprocessor/deprecated-c-cpp.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>C4996</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>/we4996</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Use of a function marked as <bpt id="p1">[</bpt>deprecated<ept id="p1">](../../cpp/deprecated-cpp.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Runtime checks</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>When <bpt id="p1">**</bpt>/sdl<ept id="p1">**</ept> is enabled, the compiler generates code to perform these checks at run time:</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Enables the strict mode of <bpt id="p1">**</bpt>/GS<ept id="p1">**</ept> run-time buffer overrun detection, equivalent to compiling with <ph id="ph1">`#pragma strict_gs_check(push, on)`</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Performs limited pointer sanitization.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In expressions that do not involve dereferences and in types that have no user-defined destructor, pointer references are set to a non-valid address after a call to <ph id="ph1">`delete`</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This helps to prevent the reuse of stale pointer references.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Performs class member initialization.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Automatically initializes all class members to zero on object instantiation (before the constructor runs).</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This helps prevent the use of uninitialized data associated with class members that the constructor does not explicitly initialize.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Warnings, /sdl, and improving uninitialized variable detection<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=331012)</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To set this compiler option in the Visual Studio development environment</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Open the project's <bpt id="p1">**</bpt>Property Pages<ept id="p1">**</ept> dialog box.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Working with Project Properties<ept id="p1">](../../ide/working-with-project-properties.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>C/C++<ept id="p1">**</ept> folder.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>General<ept id="p1">**</ept> page, select the option from the <bpt id="p2">**</bpt>SDL checks<ept id="p2">**</ept> drop-down list.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Compiler Options</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Setting Compiler Options</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>