<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b5f23431fd18f86694ec66e49e76e4cea70bf322</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\tn030-customizing-printing-and-print-preview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e9bbebcdc0b5f025a82f63935006e97a9911ea69</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b66ddbb298f041e5eca42a9a2c5c63d16d8a916d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>TN030: Customizing Printing and Print Preview | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>TN030: Customizing Printing and Print Preview</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following technical note has not been updated since it was first included in the online documentation.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>As a result, some procedures and topics might be out of date or incorrect.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For the latest information, it is recommended that you search for the topic of interest in the online documentation index.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This note describes the process of customizing printing and print preview and describes the purposes of the callback routines used in <ph id="ph1">`CView`</ph> and the callback routines and member functions of <bpt id="p1">**</bpt>CPreviewView<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The Problem</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>MFC provides a complete solution for most printing and print preview needs.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In most cases, little additional code is required to have a view able to print and preview.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>However, there are ways to optimize printing that require significant effort on the part of the developer, and some applications need to add specific user interface elements to the print preview mode.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Efficient Printing</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When an MFC application prints using the standard methods, Windows directs all Graphical Device Interface (GDI) output calls to an in-memory metafile.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`EndPage`</ph> is called, Windows plays the metafile once for each physical band that the printer requires to print one page.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>During this rendering, GDI frequently queries the Abort Procedure to determine if it should continue.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Typically the abort procedure allows messages to be processed so that the user may abort the print job using a printing dialog.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Unfortunately, this can slow the printing process.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If the printing in your application must be faster than can be achieved using the standard technique, you must implement manual banding.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Print Banding</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In order to manually band, you must re implement the print loop such that <ph id="ph1">`OnPrint`</ph> is called multiple times per page (once per band).</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The print loop is implemented in the <bpt id="p1">**</bpt>OnFilePrint<ept id="p1">**</ept> function in viewprnt.cpp.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In your <ph id="ph1">`CView`</ph>-derived class, you overload this function so that the message map entry for handling the print command calls your print function.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Copy the <bpt id="p1">**</bpt>OnFilePrint<ept id="p1">**</ept> routine and change the print loop to implement banding.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You will probably also want to pass the banding rectangle to your printing functions so that you can optimize drawing based on the section of the page being printed.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Second, you must frequently call <ph id="ph1">`QueryAbort`</ph> while drawing the band.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Otherwise, the Abort Procedure will not get called and the user will be unable to cancel the print job.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Print Preview: Electronic Paper with User Interface</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Print Preview, in essence, tries to turn the display into an emulation of a printer.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>By default, the client area of the main window is used to display one or two pages fully within the window.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The user is able to zoom in on an area of the page to see it in more detail.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>With additional support, the user may even be allowed to edit the document in preview mode.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Customizing Print Preview</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This note only deals with one aspect of modifying print preview: Adding UI to preview mode.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Other modifications are possible, but such changes are out of the scope of this discussion.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To add UI to the preview mode</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Derive a view class from <bpt id="p1">**</bpt>CPreviewView<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Add command handlers for the UI aspects you desire.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If you are adding visual aspects to the display, override <ph id="ph1">`OnDraw`</ph> and perform your drawing after calling <bpt id="p1">**</bpt>CPreviewView::OnDraw.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>OnFilePrintPreview</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This is the command handler for print preview.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Its default implementation is:</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>DoPrintPreview<ept id="p1">**</ept> will hide the main pane of the application.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Control Bars, such as the status bar, can be retained by specifying them in the pState-&gt;<bpt id="p1">**</bpt>dwStates<ept id="p1">**</ept> member (This is a bit mask and the bits for individual control bars are defined by <bpt id="p2">**</bpt>AFX_CONTROLBAR_MASK<ept id="p2">**</ept>( AFX_IDW_MYBAR)).</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The window pState-&gt;<bpt id="p1">**</bpt>nIDMainPane<ept id="p1">**</ept> is the window that will be automatically hidden and reshown.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>DoPrintPreview<ept id="p1">**</ept> will then create a button bar for the standard Preview UI.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If special window handling is needed, such as to hide or show other windows, that should be done before <bpt id="p1">**</bpt>DoPrintPreview<ept id="p1">**</ept> is called.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>By default, when print preview finishes, it returns the control bars to their original states and the main pane to visible.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If special handling is needed, it should be done in an override of <bpt id="p1">**</bpt>EndPrintPreview.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>DoPrintPreview<ept id="p1">**</ept> fails, also provide special handling.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>DoPrintPreview is called with:</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The Resource ID of the dialog template for the preview toolbar.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A pointer to the view to perform the printing for the print preview.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The run-time class of the Preview View class.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This will be dynamically created in DoPrintPreview.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The CPrintPreviewState pointer.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Note that the CPrintPreviewState structure (or the derived structure if the application needs more state preserved) must <bpt id="p1">*</bpt>not<ept id="p1">*</ept> be created on the frame.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>DoPrintPreview is modeless and this structure must survive until EndPrintPreview is called.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If a separate view or view class is needed for printing support, a pointer to that object should be passed as the second parameter.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>EndPrintPreview</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This is called to terminate the print preview mode.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>It is often desirable to move to the page in the document that was last displayed in print preview.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>EndPrintPreview<ept id="p1">**</ept> is the application's chance to do that.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The pInfo-&gt;<ph id="ph1">`m_nCurPage`</ph> member is the page that was last displayed (leftmost if two pages were displayed), and the pointer is a hint as to where on the page the user was interested.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Since the structure of the application's view is unknown to the framework, then you must provide the code to move to the chosen point.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You should perform most actions before calling <bpt id="p1">**</bpt>CView::EndPrintPreview<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This call reverses the effects of <bpt id="p1">**</bpt>DoPrintPreview<ept id="p1">**</ept> and deletes pView, pDC, and pInfo.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>CWinApp::OnFilePrintSetup</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This must be mapped for the Print Setup menu item.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>In most cases, it is not necessary to override the implementation.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Page Nomenclature</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Another issue is that of page numbering and order.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For simple word processor type applications, this is a straightforward issue.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Most print preview systems assume that each printed page corresponds to one page in the document.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>In trying to provide a generalized solution, there are several things to consider.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Imagine a CAD system.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The user has a drawing that covers several E-size sheets.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>On an E-size (or a smaller, scaled) plotter, page numbering would be as in the simple case.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>But on a laser printer, printing 16 A-size pages per sheet, what does print preview consider a "page"</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>As the introductory paragraph states, Print Preview is acting like a printer.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Therefore, the user will see what would come out of the particular printer that is selected.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>It is up to the view to determine what image is printed on each page.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The page description string in the <ph id="ph1">`CPrintInfo`</ph> structure provides a means of displaying the page number to the user if it can be represented as one number per page (as in "Page 1" or "Pages 1-2").</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>This string is used by the default implementation of <bpt id="p1">**</bpt>CPreviewView::OnDisplayPageNumber<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>If a different display is needed, one may override this virtual function to provide, for example, "Sheet1, Sections A, B".</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Technical Notes by Number</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Technical Notes by Category</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>