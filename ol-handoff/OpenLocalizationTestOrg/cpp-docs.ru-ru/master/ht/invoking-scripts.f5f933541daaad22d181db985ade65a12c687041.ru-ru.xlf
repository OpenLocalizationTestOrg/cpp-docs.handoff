<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0dcaad5d3b43f6f9f9a2a043aa83ea65cef9d20f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\invoking-scripts.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c51ee5653b1ff3dca572318a528507b238bb07a8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b37f6d1ffb8d4f9e64c4ab798ff9c6fb1ac23c74</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Invoking Scripts | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Invoking Scripts</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Using Replaceable Parameters (The Registrar's Preprocessor)<ept id="p1">](../atl/using-replaceable-parameters-the-registrar-s-preprocessor.md)</ept> discusses replacement maps and mentions the Registrar method <bpt id="p2">**</bpt>AddReplacement<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The Registrar has eight other methods specific to scripting, and all are described in the following table.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Method</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Syntax/Description</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>ResourceRegister</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>HRESULT ResourceRegister( LPCOLESTR<ept id="p1">**</ept>  <bpt id="p2">*</bpt>resFileName<ept id="p2">*</ept> <bpt id="p3">**</bpt>, UINT<ept id="p3">**</ept>  <ph id="ph1">`nID`</ph> <bpt id="p4">**</bpt>, LPCOLESTR<ept id="p4">**</ept>  <ph id="ph2">`szType`</ph> <bpt id="p5">**</bpt>);<ept id="p5">**</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Registers the script contained in a module's resource.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>resFileName<ept id="p1">*</ept> indicates the UNC path to the module itself.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>and <ph id="ph1">`szType`</ph> contain the resource's ID and type, respectively.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>ResourceUnregister</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>HRESULT ResourceUnregister( LPCOLESTR<ept id="p1">**</ept>  <bpt id="p2">*</bpt>resFileName<ept id="p2">*</ept> <bpt id="p3">**</bpt>, UINT<ept id="p3">**</ept>  <ph id="ph1">`nID`</ph> <bpt id="p4">**</bpt>, LPCOLESTR<ept id="p4">**</ept>  <ph id="ph2">`szType`</ph> <bpt id="p5">**</bpt>);<ept id="p5">**</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Unregisters the script contained in a module's resource.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>resFileName<ept id="p1">*</ept> indicates the UNC path to the module itself.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>and <ph id="ph1">`szType`</ph> contain the resource's ID and type, respectively.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>ResourceRegisterSz</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>HRESULT ResourceRegisterSz( LPCOLESTR<ept id="p1">**</ept>  <bpt id="p2">*</bpt>resFileName<ept id="p2">*</ept> <bpt id="p3">**</bpt>, LPCOLESTR<ept id="p3">**</ept>  <bpt id="p4">*</bpt>szID<ept id="p4">*</ept> <bpt id="p5">**</bpt>, LPCOLESTR<ept id="p5">**</ept>  <ph id="ph1">`szType`</ph> <bpt id="p6">**</bpt>);<ept id="p6">**</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Registers the script contained in a module's resource.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>resFileName<ept id="p1">*</ept> indicates the UNC path to the module itself.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>szID<ept id="p1">*</ept> and <ph id="ph1">`szType`</ph> contain the resource's string identifier and type, respectively.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>ResourceUnregisterSz</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>HRESULT ResourceUnregisterSz( LPCOLESTR<ept id="p1">**</ept>  <bpt id="p2">*</bpt>resFileName<ept id="p2">*</ept> <bpt id="p3">**</bpt>, LPCOLESTR<ept id="p3">**</ept>  <bpt id="p4">*</bpt>szID<ept id="p4">*</ept> <bpt id="p5">**</bpt>, LPCOLESTR<ept id="p5">**</ept>  <ph id="ph1">`szType`</ph> <bpt id="p6">**</bpt>);<ept id="p6">**</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Unregisters the script contained in a module's resource.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>resFileName<ept id="p1">*</ept> indicates the UNC path to the module itself.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>szID<ept id="p1">*</ept> and <ph id="ph1">`szType`</ph> contain the resource's string identifier and type, respectively.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>FileRegister</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>HRESULT FileRegister( LPCOLESTR<ept id="p1">**</ept>  <bpt id="p2">*</bpt>fileName<ept id="p2">*</ept>  <bpt id="p3">**</bpt>);<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Registers the script in a file.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>fileName<ept id="p1">*</ept> is a UNC path to a file that contains (or is) a resource script.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>FileUnregister</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>HRESULT FileUnregister( LPCOLESTR<ept id="p1">**</ept>  <bpt id="p2">*</bpt>fileName<ept id="p2">*</ept>  <bpt id="p3">**</bpt>);<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Unregisters the script in a file.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>fileName<ept id="p1">*</ept> is a UNC path to a file that contains (or is) a resource script.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>StringRegister</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>HRESULT StringRegister( LPCOLESTR<ept id="p1">**</ept>  <bpt id="p2">*</bpt>data<ept id="p2">*</ept>  <bpt id="p3">**</bpt>);<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Registers the script in a string.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>data<ept id="p1">*</ept> contains the script itself.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>StringUnregister</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>HRESULT StringUnregister( LPCOLESTR<ept id="p1">**</ept>  <bpt id="p2">*</bpt>data<ept id="p2">*</ept>  <bpt id="p3">**</bpt>);<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Unregisters the script in a string.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>data<ept id="p1">*</ept> contains the script itself.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ResourceRegisterSz<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ResourceUnregisterSz<ept id="p2">**</ept>, are similar to <bpt id="p3">**</bpt>ResourceRegister<ept id="p3">**</ept> and <bpt id="p4">**</bpt>ResourceUnregister<ept id="p4">**</ept>, but allow you to specify a string identifier.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The methods <bpt id="p1">**</bpt>FileRegister<ept id="p1">**</ept> and <bpt id="p2">**</bpt>FileUnregister<ept id="p2">**</ept> are useful if you do not want the script in a resource or if you want the script in its own file.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The methods <bpt id="p1">**</bpt>StringRegister<ept id="p1">**</ept> and <bpt id="p2">**</bpt>StringUnregister<ept id="p2">**</ept> allow the .rgs file to be stored in a dynamically allocated string.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Creating Registrar Scripts</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>