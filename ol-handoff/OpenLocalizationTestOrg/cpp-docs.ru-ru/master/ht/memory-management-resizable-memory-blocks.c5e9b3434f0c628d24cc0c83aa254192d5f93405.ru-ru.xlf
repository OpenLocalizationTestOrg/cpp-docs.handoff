<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6d2ce481c9e31e9cb4825715cb2b0f3e5bc1ff2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\memory-management-resizable-memory-blocks.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2ca5f1f835a34cb3730ab3df81a2f09e090b218c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ec20559d6af773636dcab81607c823725a2795ec</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Memory Management: Resizable Memory Blocks | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Memory Management: Resizable Memory Blocks</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>new<ept id="p1">**</ept> and <bpt id="p2">**</bpt>delete<ept id="p2">**</ept> operators, described in the article <bpt id="p3">[</bpt>Memory Management: Examples<ept id="p3">](../mfc/memory-management-examples.md)</ept>, are good for allocating and deallocating fixed-size memory blocks and objects.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Occasionally, your application may need resizable memory blocks.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You must use the standard C run-time library functions <bpt id="p1">[</bpt>malloc<ept id="p1">](../c-runtime-library/reference/malloc.md)</ept>, <bpt id="p2">[</bpt>realloc<ept id="p2">](../c-runtime-library/reference/realloc.md)</ept>, and <bpt id="p3">[</bpt>free<ept id="p3">](../c-runtime-library/reference/free.md)</ept> to manage resizable memory blocks on the heap.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Mixing the <bpt id="p1">**</bpt>new<ept id="p1">**</ept> and <bpt id="p2">**</bpt>delete<ept id="p2">**</ept> operators with the resizable memory-allocation functions on the same memory block will result in corrupted memory in the Debug version of MFC.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You should not use <ph id="ph1">`realloc`</ph> on a memory block allocated with <bpt id="p1">**</bpt>new<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Likewise, you should not allocate a memory block with the <bpt id="p1">**</bpt>new<ept id="p1">**</ept> operator and delete it with <bpt id="p2">**</bpt>free<ept id="p2">**</ept>, or use the <bpt id="p3">**</bpt>delete<ept id="p3">**</ept> operator on a block of memory allocated with <ph id="ph1">`malloc`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Memory Management: Heap Allocation</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>