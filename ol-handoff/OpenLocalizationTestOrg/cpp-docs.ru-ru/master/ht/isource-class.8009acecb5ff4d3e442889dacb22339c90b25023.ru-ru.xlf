<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b143ae251eef9831d9e3c7bb49cdba57c787c8a1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\parallel\concrt\reference\isource-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae799765a42a91a398b8acbab67b89567e37dfdf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f483e5f7dedc65e3777d773f03fd09d5f7863d23</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>ISource Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ISource Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ISource`</ph> class is the interface for all source blocks.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Source blocks propagate messages to <ph id="ph1">`ITarget`</ph> blocks.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The data type of the payload within the messages produced by the source block.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Public Typedefs</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A type alias for <ph id="ph1">`T`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>ISource::~ISource Destructor</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Destroys the <ph id="ph1">`ISource`</ph> object.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>ISource::accept Method</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, accepts a message that was offered by this <ph id="ph1">`ISource`</ph> block, transferring ownership to the caller.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>ISource::acquire_ref Method</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, acquires a reference count on this <ph id="ph1">`ISource`</ph> block, to prevent deletion.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>ISource::consume Method</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, consumes a message previously offered by this <ph id="ph1">`ISource`</ph> block and successfully reserved by the target, transferring ownership to the caller.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>ISource::link_target Method</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, links a target block to this <ph id="ph1">`ISource`</ph> block.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>ISource::release Method</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, releases a previous successful message reservation.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>ISource::release_ref Method</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, releases a reference count on this <ph id="ph1">`ISource`</ph> block.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>ISource::reserve Method</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, reserves a message previously offered by this <ph id="ph1">`ISource`</ph> block.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>ISource::unlink_target Method</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, unlinks a target block from this <ph id="ph1">`ISource`</ph> block, if found to be previously linked.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>ISource::unlink_targets Method</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, unlinks all target blocks from this <ph id="ph1">`ISource`</ph> block.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Message Blocks<ept id="p1">](../../../parallel/concrt/asynchronous-message-blocks.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> agents.h</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Namespace:<ept id="p1">**</ept> concurrency</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>ISource::accept Method</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, accepts a message that was offered by this <ph id="ph1">`ISource`</ph> block, transferring ownership to the caller.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`runtime_object_identity`</ph> of the offered <ph id="ph2">`message`</ph> object.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A pointer to the target block that is calling the <ph id="ph1">`accept`</ph> method.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A pointer to the message that the caller now has ownership of.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`accept`</ph> method is called by a target while a message is being offered by this <ph id="ph2">`ISource`</ph> block.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The message pointer returned may be different from the one passed into the <ph id="ph1">`propagate`</ph> method of the <ph id="ph2">`ITarget`</ph> block, if this source decides to make a copy of the message.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>ISource::acquire_ref Method</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, acquires a reference count on this <ph id="ph1">`ISource`</ph> block, to prevent deletion.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A pointer to the target block that is calling this method.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This method is called by an <ph id="ph1">`ITarget`</ph> object that is being linked to this source during the <ph id="ph2">`link_target`</ph> method.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>ISource::consume Method</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, consumes a message previously offered by this <ph id="ph1">`ISource`</ph> block and successfully reserved by the target, transferring ownership to the caller.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`runtime_object_identity`</ph> of the reserved <ph id="ph2">`message`</ph> object.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A pointer to the target block that is calling the <ph id="ph1">`consume`</ph> method.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A pointer to the <ph id="ph1">`message`</ph> object that the caller now has ownership of.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`consume`</ph> method is similar to <ph id="ph2">`accept`</ph>, but must always be preceded by a call to <ph id="ph3">`reserve`</ph> that returned <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>ISource::~ISource Destructor</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Destroys the <ph id="ph1">`ISource`</ph> object.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>ISource::link_target Method</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, links a target block to this <ph id="ph1">`ISource`</ph> block.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>A pointer to the target block being linked to this <ph id="ph1">`ISource`</ph> block.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>ISource::release Method</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, releases a previous successful message reservation.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`runtime_object_identity`</ph> of the reserved <ph id="ph2">`message`</ph> object.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A pointer to the target block that is calling the <ph id="ph1">`release`</ph> method.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>ISource::release_ref Method</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, releases a reference count on this <ph id="ph1">`ISource`</ph> block.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>A pointer to the target block that is calling this method.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>This method is called by an <ph id="ph1">`ITarget`</ph> object that is being unlinked from this source.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The source block is allowed to release any resources reserved for the target block.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>ISource::reserve Method</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, reserves a message previously offered by this <ph id="ph1">`ISource`</ph> block.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`runtime_object_identity`</ph> of the offered <ph id="ph2">`message`</ph> object.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>A pointer to the target block that is calling the <ph id="ph1">`reserve`</ph> method.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>if the message was successfully reserved, <ph id="ph1">`false`</ph> otherwise.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Reservations can fail for many reasons, including: the message was already reserved or accepted by another target, the source could deny reservations, and so forth.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>After you call <ph id="ph1">`reserve`</ph>, if it succeeds, you must call either <ph id="ph2">`consume`</ph> or <ph id="ph3">`release`</ph> in order to take or give up possession of the message, respectively.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>ISource::unlink_target Method</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, unlinks a target block from this <ph id="ph1">`ISource`</ph> block, if found to be previously linked.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>A pointer to the target block being unlinked from this <ph id="ph1">`ISource`</ph> block.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>ISource::unlink_targets Method</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, unlinks all target blocks from this <ph id="ph1">`ISource`</ph> block.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>concurrency Namespace</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>ITarget Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>