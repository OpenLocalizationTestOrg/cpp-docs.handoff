<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c3e8499e418f4aa025edea2a97a1de657b495ae5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\using-a-dialog-bar-with-a-rebar-control.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6df8875b5f7ecf170cd9f71a895342c7da6c727b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">07fde5c3db8a2ec06d7f8210d0a8c55e5cc99a95</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Using a Dialog Bar with a Rebar Control | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Using a Dialog Bar with a Rebar Control</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>As mentioned in <bpt id="p1">[</bpt>Rebar Controls and Bands<ept id="p1">](../mfc/rebar-controls-and-bands.md)</ept>, each band can contain only one child window (or control).</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This might be a limitation if you want to have more than one child window per band.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A convenient workaround is to create a dialog bar resource with multiple controls and then add a rebar band (containing the dialog bar) to the rebar control.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Normally, if you wanted the dialog bar band to appear transparent, you would set the <bpt id="p1">**</bpt>WS_EX_TRANSPARENT<ept id="p1">**</ept> extended style for the dialog bar object.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>However, because <bpt id="p1">**</bpt>WS_EX_TRANSPARENT<ept id="p1">**</ept> has some issues with properly painting the background of a dialog bar, you will need to do a little extra work to achieve the desired effect.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following procedure details the steps necessary to achieve transparency without using the <bpt id="p1">**</bpt>WS_EX_TRANSPARENT<ept id="p1">**</ept> extended style.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To implement a transparent dialog bar in a rebar band</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Using the <bpt id="p1">[</bpt>Add Class dialog box<ept id="p1">](../mfc/reference/adding-an-mfc-class.md)</ept>, add a new class (for example, <ph id="ph1">`CMyDlgBar`</ph>) that implements your dialog bar object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Add a handler for the <ph id="ph1">`WM_ERASEBKGND`</ph> message.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In the new handler, modify the existing code to match the following example:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>NVC_MFCControlLadenDialog#29</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Add a handler for the <ph id="ph1">`WM_MOVE`</ph> message.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In the new handler, modify the existing code to match the following example:</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>NVC_MFCControlLadenDialog#30</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The new handlers simulate the transparency of the dialog bar by forwarding the <ph id="ph1">`WM_ERASEBKGND`</ph> message to the parent window and forcing a repaint every time the dialog bar object is moved.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Using CReBarCtrl</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Controls</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>