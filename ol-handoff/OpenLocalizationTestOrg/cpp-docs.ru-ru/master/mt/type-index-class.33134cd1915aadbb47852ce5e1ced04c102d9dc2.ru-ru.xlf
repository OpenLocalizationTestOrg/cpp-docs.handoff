<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e00ba54975dfac0439509e63606e9992d86c9522</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard-library\type-index-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">398fb58521e0f3fb2e82f2aaaccdbdc04d7b1bbf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f94564a3599b66077aa413e90544759dcc95bfc1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>type_index Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>type_index Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`type_index`</ph> class wraps a pointer to <bpt id="p1">[</bpt>type_info Class<ept id="p1">](../cpp/type-info-class.md)</ept> to assist in indexing by such objects.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>class type_index { public: type_index(const type_info&amp; tinfo); const char *name() const; size_t hash_code() const; bool operator==(const type_info&amp; right) const; bool operator!=(const type_info&amp; right) const; bool operator&lt;(const type_info&amp; right) const; bool operator<ph id="ph1">\&lt;</ph>=(const type_info&amp; right) const; bool operator&gt;(const type_info&amp; right) const; bool operator&gt;=(const type_info&amp; right) const; };</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The constructor initializes <ph id="ph1">`ptr`</ph> to <ph id="ph2">`&amp;tinfo`</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`name`</ph> returns <ph id="ph2">`ptr-&gt;name()`</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`hash_code`</ph> returns <ph id="ph2">`ptr-&gt;hash_code().`</ph></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`operator==`</ph> returns <ph id="ph2">`*ptr == right.ptr`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`operator!=`</ph> returns <ph id="ph2">`!(*this == right)`</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`operator&lt;`</ph> returns <ph id="ph2">`*ptr-&gt;before(*right.ptr)`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`operator&lt;=`</ph> returns <ph id="ph2">`!(right &lt; *this).`</ph></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`operator&gt;`</ph> returns <ph id="ph2">`right &lt; *this`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`operator&gt;=`</ph> returns <ph id="ph2">`!(*this &lt; right)`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Run-Time Type Information<ept id="p1">](../cpp/run-time-type-information.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt><ph id="ph1">\&lt;</ph>typeindex&gt;<ept id="p1">](../standard-library/typeindex.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>