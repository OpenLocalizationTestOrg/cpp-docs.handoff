<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2152f24209891e96a766e368a5b67b077c93f5fb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\reference\dupenv-s-wdupenv-s.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a04233b4737aff13524448d0ca1baabdaf9ec34f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4e267636ff902a227bcdbf63a889598ccddaa95d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>_dupenv_s, _wdupenv_s | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>_dupenv_s, _wdupenv_s</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Gets a value from the current environment.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This API cannot be used in applications that execute in the Windows Runtime.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>CRT functions not supported with /ZW<ept id="p1">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Buffer to store the variable's value.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Size of <ph id="ph1">`buffer`</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Environment variable name.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Zero on success, an error code on failure.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>These functions validate their parameters; if <ph id="ph1">`buffer`</ph> or <ph id="ph2">`varname`</ph> is <ph id="ph3">`NULL`</ph>, the invalid parameter handler is invoked as described in <bpt id="p1">[</bpt>Parameter Validation<ept id="p1">](../../c-runtime-library/parameter-validation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If execution is allowed to continue, the functions set <ph id="ph1">`errno`</ph> to <ph id="ph2">`EINVAL`</ph> and return <ph id="ph3">`EINVAL`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If these functions cannot allocate enough memory, they set <ph id="ph1">`buffer`</ph> to <ph id="ph2">`NULL`</ph> and <ph id="ph3">`numberOfElements`</ph> to 0, and return <ph id="ph4">`ENOMEM`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`_dupenv_s`</ph> function searches the list of environment variables for <ph id="ph2">`varname`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If the variable is found, <ph id="ph1">`_dupenv_s`</ph> allocates a buffer and copies the variable's value into the buffer.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The buffer's address and length are returned in <ph id="ph1">`buffer`</ph> and <ph id="ph2">`numberOfElements`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>By allocating the buffer itself, <ph id="ph1">`_dupenv_s`</ph> provides a more convenient alternative to <bpt id="p1">[</bpt>getenv_s, _wgetenv_s<ept id="p1">](../../c-runtime-library/reference/getenv-s-wgetenv-s.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>It is the calling program's responsibility to free the memory by calling <bpt id="p1">[</bpt>free<ept id="p1">](../../c-runtime-library/reference/free.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If the variable is not found, then <ph id="ph1">`buffer`</ph> is set to <ph id="ph2">`NULL`</ph>, <ph id="ph3">`numberOfElements`</ph> is set to 0, and the return value is 0 because this situation is not considered to be an error condition.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If you are not interested in the size of the buffer you can pass <ph id="ph1">`NULL`</ph> for <ph id="ph2">`numberOfElements`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`_dupenv_s`</ph> is not case sensitive in the Windows operating system.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`_dupenv_s`</ph> uses the copy of the environment pointed to by the global variable <ph id="ph2">`_environ`</ph> to access the environment.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>See the Remarks in <bpt id="p1">[</bpt>getenv_s, _wgetenv_s<ept id="p1">](../../c-runtime-library/reference/getenv-s-wgetenv-s.md)</ept> for a discussion of <ph id="ph1">`_environ`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The value in <ph id="ph1">`buffer`</ph> is a copy of the environment variable's value; modifying it has no effect on the environment.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>_putenv_s, _wputenv_s<ept id="p1">](../../c-runtime-library/reference/putenv-s-wputenv-s.md)</ept> function to modify the value of an environment variable.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`_wdupenv_s`</ph> is a wide-character version of <ph id="ph2">`_dupenv_s`</ph>; the arguments of <ph id="ph3">`_wdupenv_s`</ph> are wide-character strings.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`_wenviron`</ph> global variable is a wide-character version of <ph id="ph2">`_environ`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>See the Remarks in <bpt id="p1">[</bpt>getenv_s, _wgetenv_s<ept id="p1">](../../c-runtime-library/reference/getenv-s-wgetenv-s.md)</ept> for more on <ph id="ph1">`_wenviron`</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Generic-Text Routine Mappings</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>TCHAR.H routine</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>_UNICODE &amp; _MBCS not defined</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>_MBCS defined</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>_UNICODE defined</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Routine</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Required header</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>stdlib.h&gt;</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>stdlib.h&gt; or <ph id="ph2">\&lt;</ph>wchar.h&gt;</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For additional compatibility information, see <bpt id="p1">[</bpt>Compatibility<ept id="p1">](../../c-runtime-library/compatibility.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Sample Output</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>.NET Framework Equivalent</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System::Environment::GetEnvironmentVariable<ept id="p1">](https://msdn.microsoft.com/en-us/library/system.environment.getenvironmentvariable.aspx)</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Process and Environment Control<ept id="p1">](../../c-runtime-library/process-and-environment-control.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Environmental Constants<ept id="p1">](../../c-runtime-library/environmental-constants.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>_dupenv_s_dbg, _wdupenv_s_dbg<ept id="p1">](../../c-runtime-library/reference/dupenv-s-dbg-wdupenv-s-dbg.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>getenv_s, _wgetenv_s<ept id="p1">](../../c-runtime-library/reference/getenv-s-wgetenv-s.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>_putenv_s, _wputenv_s<ept id="p1">](../../c-runtime-library/reference/putenv-s-wputenv-s.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>