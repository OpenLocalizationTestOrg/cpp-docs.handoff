<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6b1bcda487a3f89608e7b8ab01e50b90ab99aecb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\cprivateobjectsecuritydesc-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">462ae2a6b35c662b6bb70b5b892c7b58cb4b0dd1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a07b3f794334028123c57554d762339412fb4cf7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CPrivateObjectSecurityDesc Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CPrivateObjectSecurityDesc Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class represents a private object security descriptor object.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPrivateObjectSecurityDesc::CPrivateObjectSecurityDesc<ept id="p1">](#cprivateobjectsecuritydesc__cprivateobjectsecuritydesc)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The constructor.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPrivateObjectSecurityDesc::~CPrivateObjectSecurityDesc<ept id="p1">](#cprivateobjectsecuritydesc___dtorcprivateobjectsecuritydesc)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The destructor.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPrivateObjectSecurityDesc::ConvertToAutoInherit<ept id="p1">](#cprivateobjectsecuritydesc__converttoautoinherit)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Call this method to convert a security descriptor and its access-control lists (ACLs) to a format that supports automatic propagation of inheritable access-control entries (ACEs).</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPrivateObjectSecurityDesc::Create<ept id="p1">](#cprivateobjectsecuritydesc__create)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Call this method to allocate and initialize a self-relative security descriptor for the private object created by the calling resource manager.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPrivateObjectSecurityDesc::Get<ept id="p1">](#cprivateobjectsecuritydesc__get)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Call this method to retrieve information from a private object's security descriptor.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CPrivateObjectSecurityDesc::Set<ept id="p1">](#cprivateobjectsecuritydesc__set)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Call this method to modify a private object's security descriptor.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Operators</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>operator =<ept id="p1">](#cprivateobjectsecuritydesc__operator_eq)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Assignment operator.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This class, derived from <bpt id="p1">[</bpt>CSecurityDesc<ept id="p1">](../../atl/reference/csecuritydesc-class.md)</ept>, provides methods for creating and managing the security descriptor of a private object.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For an introduction to the access control model in Windows, see <bpt id="p1">[</bpt>Access Control<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa374860)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CSecurityDesc<ept id="p1">](../../atl/reference/csecuritydesc-class.md)</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> atlsecurity.h</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cprivateobjectsecuritydesc__converttoautoinherit"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPrivateObjectSecurityDesc::ConvertToAutoInherit</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Call this method to convert a security descriptor and its access-control lists (ACLs) to a format that supports automatic propagation of inheritable access-control entries (ACEs).</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>CSecurityDesc<ept id="p1">](../../atl/reference/csecuritydesc-class.md)</ept> object referencing the parent container of the object.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If there is no parent container, this parameter is NULL.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">**</bpt>GUID<ept id="p1">**</ept> structure that identifies the type of object associated with the current object.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Set <ph id="ph1">`ObjectType`</ph> to NULL if the object does not have a GUID.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Specifies whether the new object can contain other objects.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A value of true indicates that the new object is a container.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A value of false indicates that the new object is not a container.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>GENERIC_MAPPING<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa446633)</ept> structure that specifies the mapping from each generic right to specific rights for the object.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This method attempts to determine whether the ACEs in the discretionary access-control list (DACL) and system access-control list (SACL) of the current security descriptor were inherited from the parent security descriptor.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>It calls the <bpt id="p1">[</bpt>ConvertToAutoInheritPrivateObjectSecurity<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa376403)</ept> function.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cprivateobjectsecuritydesc__cprivateobjectsecuritydesc"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPrivateObjectSecurityDesc::CPrivateObjectSecurityDesc</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The constructor.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Initializes the <ph id="ph1">`CPrivateObjectSecurityDesc`</ph> object.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cprivateobjectsecuritydesc___dtorcprivateobjectsecuritydesc"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPrivateObjectSecurityDesc::~CPrivateObjectSecurityDesc</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The destructor.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The destructor frees all allocated resources and deletes the private object's security descriptor.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cprivateobjectsecuritydesc__create"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPrivateObjectSecurityDesc::Create</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Call this method to allocate and initialize a self-relative security descriptor for the private object created by the calling resource manager.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>CSecurityDesc<ept id="p1">](../../atl/reference/csecuritydesc-class.md)</ept> object referencing the parent directory in which a new object is being created.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Set to NULL if there is no parent directory.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Pointer to a security descriptor provided by the creator of the object.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If the object's creator does not explicitly pass security information for the new object, set this parameter to NULL.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Specifies whether the new object can contain other objects.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A value of true indicates that the new object is a container.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A value of false indicates that the new object is not a container.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Reference to the <bpt id="p1">[</bpt>CAccessToken<ept id="p1">](../../atl/reference/caccesstoken-class.md)</ept> object for the client process on whose behalf the object is being created.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>GENERIC_MAPPING<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa446633)</ept> structure that specifies the mapping from each generic right to specific rights for the object.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">**</bpt>GUID<ept id="p1">**</ept> structure that identifies the type of object associated with the current object.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Set <ph id="ph1">`ObjectType`</ph> to NULL if the object does not have a GUID.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>bIsContainerObject<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Specifies whether the new object can contain other objects.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>A value of true indicates that the new object is a container.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>A value of false indicates that the new object is not a container.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>A set of bit flags that control how access-control entries (ACEs) are inherited from <ph id="ph1">`pParent`</ph>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CreatePrivateObjectSecurityEx<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa446581)</ept> for more details.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This method calls <bpt id="p1">[</bpt>CreatePrivateObjectSercurity<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa376405)</ept> or <bpt id="p2">[</bpt>CreatePrivateObjectSecurityEx<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/aa446581)</ept>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The second method, which permits specifying the object type GUID of the new object or controlling how ACEs are inherited, is only available on systems running Windows 2000 and later.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>A self-relative security descriptor is a security descriptor that stores all of its security information in a contiguous block of memory.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cprivateobjectsecuritydesc__get"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPrivateObjectSecurityDesc::Get</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Call this method to retrieve information from a private object's security descriptor.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A set of bit flags that indicate the parts of the security descriptor to retrieve.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>This value can be a combination of the <bpt id="p1">[</bpt>SECURITY_INFORMATION<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa379573)</ept> bit flags.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>CSecurityDesc<ept id="p1">](../../atl/reference/csecuritydesc-class.md)</ept> object that receives a copy of the requested information from the specified security descriptor.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The security descriptor is a structure and associated data that contains the security information for a securable object.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cprivateobjectsecuritydesc__operator_eq"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPrivateObjectSecurityDesc::operator =</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Assignment operator.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CPrivateObjectSecurityDesc`</ph> object to assign to the current object.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Returns the updated <ph id="ph1">`CPrivateObjectSecurityDesc`</ph> object.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="cprivateobjectsecuritydesc__set"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>  CPrivateObjectSecurityDesc::Set</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Call this method to modify a private object's security descriptor.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A set of bit flags that indicate the parts of the security descriptor to set.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>This value can be a combination of the <bpt id="p1">[</bpt>SECURITY_INFORMATION<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa379573)</ept> bit flags.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Modification<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>CSecurityDesc<ept id="p1">](../../atl/reference/csecuritydesc-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The parts of this security descriptor indicated by the <ph id="ph1">`si`</ph> parameter are applied to the object's security descriptor.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>GENERIC_MAPPING<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa446633)</ept> structure that specifies the mapping from each generic right to specific rights for the object.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Reference to the <bpt id="p1">[</bpt>CAccessToken<ept id="p1">](../../atl/reference/caccesstoken-class.md)</ept> object for the client process on whose behalf the object is being created.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>A set of bit flags that control how access-control entries (ACEs) are inherited from <ph id="ph1">`pParent`</ph>.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CreatePrivateObjectSecurityEx<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa446581)</ept> for more details.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The second method, which permits specifying the object type GUID of the object or controlling how ACEs are inherited, is only available on systems running Windows 2000 and later.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>SECURITY_DESCRIPTOR<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa379561)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Class Overview<ept id="p1">](../../atl/atl-class-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Security Global Functions<ept id="p1">](../../atl/reference/security-global-functions.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>CSecurityDesc Class<ept id="p1">](../../atl/reference/csecuritydesc-class.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>